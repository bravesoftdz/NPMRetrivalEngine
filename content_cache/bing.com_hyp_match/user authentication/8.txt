<!doctype html>
<html data-clipboard-buttons data-code-prettify data-code-sidebar data-hide-show-guide data-sts-import data-mobile-support data-search>
 <head> 
  <title>Getting Started · Authenticating a User with LDAP</title> 
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=no" id="Viewport" name="viewport"> 
  <link rel="shortcut icon" type="image/x-icon" href="/img/favicon-ca31b78daf0dd9a106bbf3c6d87d4ec7.png"> 
  <link href="https://fonts.googleapis.com/css?family=Varela+Round|Montserrat:400,700" rel="stylesheet" type="text/css"> 
  <link rel="stylesheet" type="text/css" href="/css/main-7d508c9e3a2dee2227a0f9f7fbec06d1.css"> 
  <script src="/jspm_packages/system-eccc019329febb5a1b06bde008ca5614.js"></script> 
  <script>
    System.config({baseURL: "/4e79c4e"});
  </script> 
  <script src="/config-5a675c9cddea3a5f55b71416e67d47d6.js"></script> 
  <script>
      System.import('app/main.js')
  </script> 
  <meta content="7qGntFPD9lWAVCtUu5U77v4l68PsTHf6xpzgjQv2j2M" name="google-site-verification"> 
  <script>
    //
      var _gaq = _gaq || [];
      var pluginUrl =
       '//www.google-analytics.com/plugins/ga/inpage_linkid.js';
      _gaq.push(
        ['_require', 'inpage_linkid', pluginUrl],
        ['_setAccount', 'UA-2728886-20'],
        ['_trackPageview'],
        ['b._require', 'inpage_linkid', pluginUrl],
        ['b._setAccount', 'UA-2728886-19'],
        ['b._trackPageview']
      );

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
  </script> 
  <link rel="stylesheet" type="text/css" href="/css/gsguide-cce08ab7a9f46db88819a14148e45bad.css"> 
  <meta property="og:title" content="Authenticating a User with LDAP"> 
  <meta property="og:image" content="/img/spring-by-pivotal-9066b55828deb3c10e27e609af322c40.png"> 
  <meta property="og:description" content="this guide is designed to get you productive as quickly as possible and using the latest Spring project releases and techniques as recommended by the Spring team"> 
 </head> 
 <body> 
  <script type="text/javascript">
    // Work around Google font rendering issues in webkit browsers on Windows 7
    if (navigator.userAgent.indexOf("NT 6.1") != -1) {
      document.body.style.WebkitTextStroke = "0.5px";
    }
  </script> 
  <div class="viewport"> 
   <header class="navbar header--navbar desktop-only"> 
    <div class="navbar-inner"> 
     <div class="container-fluid"> 
      <div class="spring-logo--container"> 
       <a class="spring-logo" href="/"><span></span></a> 
      </div> 
      <ul class="nav pull-right"> 
       <li class="navbar-link"> <a href="/docs">Docs</a> </li> 
       <li class="navbar-link active"> <a href="/guides">Guides</a> </li> 
       <li class="navbar-link"> <a href="/projects">Projects</a> </li> 
       <li class="navbar-link"> <a href="/blog">Blog</a> </li> 
       <li class="navbar-link"> <a href="/questions">Questions</a> </li> 
       <li class="navbar-link nav-search"> <i class="icon-search navbar-search--icon js-search-input-open"></i> 
        <div class="search-input-close js-search-input-close">
         x
        </div> </li> 
      </ul> 
     </div> 
    </div> 
    <div class="search-dropdown--container js-search-dropdown"> 
     <div class="container-fluid"> 
      <div class="search-form--container"> 
       <form action="/search" class="form-inline form-search" method="get"> 
        <input class="search-query search-form--form js-search-input" name="q" placeholder="Search for documentation, guides, and posts..." type="text" value> 
        <button class="search-form--submit" type="submit"><i class="icon-search"></i></button> 
       </form> 
      </div> 
     </div> 
    </div> 
   </header> 
   <div> 
    <div class="mobile-navigation--wrapper mobile-only"> 
     <div class="navigation-drawer--container"> 
      <div class="mobile-search--container"> 
       <form action="/search" class="form-inline form-search" method="get"> 
        <button class="search-form--submit" type="submit"><i class="icon-search"></i></button> 
        <input class="search-query search-form--form js-search-input" name="q" placeholder="Search..." type="text" value> 
       </form> 
      </div> 
      <div class="navigation-item-list"> 
       <div class="navbar-link"> 
        <a href="/"> Home <i class="icon-chevron-right pull-right"></i> </a> 
       </div> 
       <div class="navbar-link"> 
        <a href="/docs"> Docs <i class="icon-chevron-right pull-right"></i> </a> 
       </div> 
       <div class="navbar-link active"> 
        <a href="/guides"> Guides <i class="icon-chevron-right pull-right"></i> </a> 
       </div> 
       <div class="navbar-link"> 
        <a href="/projects"> Projects <i class="icon-chevron-right pull-right"></i> </a> 
       </div> 
       <div class="navbar-link"> 
        <a href="/blog"> Blog <i class="icon-chevron-right pull-right"></i> </a> 
       </div> 
       <div class="navbar-link"> 
        <a href="/questions"> Questions <i class="icon-chevron-right pull-right"></i> </a> 
       </div> 
      </div> 
     </div> 
     <div class="mobile-nav"> 
      <div class="nav-icon js-open-nav-drawer"> 
       <i class="icon-reorder"></i> 
      </div> 
      <div class="header-center-icon"> 
       <a href="/"> 
        <div class="icon icon-spring-logo-mobile"></div> </a> 
      </div> 
     </div> 
    </div> 
   </div> 
   <div class="header--container"></div> 
   <div class="container-fluid"></div> 
   <div></div> 
   <div class="container-fluid"> 
    <main class="main-body--wrapper"> 
     <div class="row-fluid"> 
      <div class="span8 mobile-left-pane"> 
       <div class="content--title desktop-only">
        Getting Started
       </div> 
       <article class="content--container"> 
        <h1 class="title">Authenticating a User with LDAP</h1> 
        <div class="article-body">
         <div class="paragraph"> 
          <p>This guide walks you through the process creating an application and securing it with the <a href="http://projects.spring.io/spring-security/">Spring Security</a> LDAP module.</p> 
         </div> 
         <div class="sect1"> 
          <h2 id="_what_you_ll_build">What you’ll build</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>You’ll build a simple web application that is secured by Spring Security’s embedded Java-based LDAP server. You’ll load the LDAP server with a data file containing a set of users.</p> 
           </div> 
          </div> 
         </div> 
         <div class="sect1"> 
          <h2 id="_what_you_ll_need">What you’ll need</h2> 
          <div class="sectionbody"> 
           <div class="ulist"> 
            <ul> 
             <li> <p>About 15 minutes</p> </li> 
             <li> <p>A favorite text editor or IDE</p> </li> 
             <li> <p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">JDK 1.8</a> or later</p> </li> 
             <li> <p><a href="http://www.gradle.org/downloads">Gradle 2.3+</a> or <a href="https://maven.apache.org/download.cgi">Maven 3.0+</a></p> </li> 
             <li> <p>You can also import the code straight into your IDE:</p> 
              <div class="ulist"> 
               <ul> 
                <li> <p><a href="/guides/gs/sts">Spring Tool Suite (STS)</a></p> </li> 
                <li> <p><a href="/guides/gs/intellij-idea/">IntelliJ IDEA</a></p> </li> 
               </ul> 
              </div> </li> 
            </ul> 
           </div> 
          </div> 
         </div> 
         <div class="sect1"> 
          <h2 id="_how_to_complete_this_guide">How to complete this guide</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>Like most Spring <a href="/guides">Getting Started guides</a>, you can start from scratch and complete each step, or you can bypass basic setup steps that are already familiar to you. Either way, you end up with working code.</p> 
           </div> 
           <div class="paragraph"> 
            <p>To <strong>start from scratch</strong>, move on to <a href="#scratch">Build with Gradle</a>.</p> 
           </div> 
           <div class="paragraph"> 
            <p>To <strong>skip the basics</strong>, do the following:</p> 
           </div> 
           <div class="ulist"> 
            <ul> 
             <li> <p><a href="https://github.com/spring-guides/gs-authenticating-ldap/archive/master.zip">Download</a> and unzip the source repository for this guide, or clone it using <a href="/understanding/Git">Git</a>: <code>git clone <a href="https://github.com/spring-guides/gs-authenticating-ldap.git" class="bare">https://github.com/spring-guides/gs-authenticating-ldap.git</a></code></p> </li> 
             <li> <p>cd into <code>gs-authenticating-ldap/initial</code></p> </li> 
             <li> <p>Jump ahead to <a href="#initial">Create a simple web controller</a>.</p> </li> 
            </ul> 
           </div> 
           <div class="paragraph"> 
            <p><strong>When you’re finished</strong>, you can check your results against the code in <code>gs-authenticating-ldap/complete</code>.</p> 
           </div> 
          </div> 
         </div> 
         <div class="sect1 reveal-gradle"> 
          <h2 id="reveal-gradle">Build with Gradle</h2> 
          <div class="sectionbody"> 
          </div> 
         </div> 
         <div class="sect1 use-gradle"> 
          <h2 id="scratch">Build with Gradle</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>First you set up a basic build script. You can use any build system you like when building apps with Spring, but the code you need to work with <a href="http://gradle.org">Gradle</a> and <a href="https://maven.apache.org">Maven</a> is included here. If you’re not familiar with either, refer to <a href="/guides/gs/gradle">Building Java Projects with Gradle</a> or <a href="/guides/gs/maven">Building Java Projects with Maven</a>.</p> 
           </div> 
           <div class="sect2"> 
            <h3 id="_create_the_directory_structure">Create the directory structure</h3> 
            <div class="paragraph"> 
             <p>In a project directory of your choosing, create the following subdirectory structure; for example, with <code>mkdir -p src/main/java/hello</code> on *nix systems:</p> 
            </div> 
            <div class="literalblock"> 
             <div class="content"> 
              <pre>??? src
    ??? main
        ??? java
            ??? hello</pre> 
             </div> 
            </div> 
           </div> 
           <div class="sect2"> 
            <h3 id="_create_a_gradle_build_file">Create a Gradle build file</h3> 
            <div class="paragraph"> 
             <p>Below is the <a href="https://github.com/spring-guides/gs-authenticating-ldap/blob/master/initial/build.gradle">initial Gradle build file</a>.</p> 
            </div> 
            <div class="paragraph"> 
             <p><code>build.gradle</code></p> 
            </div> 
            <div class="listingblock"> 
             <div class="content"> 
              <pre class="prettyprint highlight"><code class="language-java" data-lang="java">buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'gs-authenticating-ldap'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// tag::security[]
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}
// end::security[]</code></pre> 
             </div> 
            </div> 
            <div class="paragraph"> 
             <p>The <a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-tools/spring-boot-gradle-plugin">Spring Boot gradle plugin</a> provides many convenient features:</p> 
            </div> 
            <div class="ulist"> 
             <ul> 
              <li> <p>It collects all the jars on the classpath and builds a single, runnable "über-jar", which makes it more convenient to execute and transport your service.</p> </li> 
              <li> <p>It searches for the <code>public static void main()</code> method to flag as a runnable class.</p> </li> 
              <li> <p>It provides a built-in dependency resolver that sets the version number to match <a href="https://github.com/spring-projects/spring-boot/blob/master/spring-boot-dependencies/pom.xml">Spring Boot dependencies</a>. You can override any version you wish, but it will default to Boot’s chosen set of versions.</p> </li> 
             </ul> 
            </div> 
           </div> 
          </div> 
         </div> 
         <div class="sect1 reveal-maven"> 
          <h2 id="reveal-maven">Build with Maven</h2> 
          <div class="sectionbody"> 
          </div> 
         </div> 
         <div class="sect1 use-maven"> 
          <h2 id="use-maven">Build with Maven</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>First you set up a basic build script. You can use any build system you like when building apps with Spring, but the code you need to work with <a href="https://maven.apache.org">Maven</a> is included here. If you’re not familiar with Maven, refer to <a href="/guides/gs/maven">Building Java Projects with Maven</a>.</p> 
           </div> 
           <div class="sect2"> 
            <h3 id="_create_the_directory_structure_2">Create the directory structure</h3> 
            <div class="paragraph"> 
             <p>In a project directory of your choosing, create the following subdirectory structure; for example, with <code>mkdir -p src/main/java/hello</code> on *nix systems:</p> 
            </div> 
            <div class="literalblock"> 
             <div class="content"> 
              <pre>??? src
    ??? main
        ??? java
            ??? hello</pre> 
             </div> 
            </div> 
            <div class="paragraph"> 
             <p><code>pom.xml</code></p> 
            </div> 
            <div class="listingblock"> 
             <div class="content"> 
              <pre class="prettyprint highlight"><code class="language-xml" data-lang="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;org.springframework&lt;/groupId&gt;
    &lt;artifactId&gt;gs-authenticating-ldap&lt;/artifactId&gt;
    &lt;version&gt;0.1.0&lt;/version&gt;

    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;1.5.6.RELEASE&lt;/version&gt;
    &lt;/parent&gt;

    &lt;properties&gt;
        &lt;java.version&gt;1.8&lt;/java.version&gt;
    &lt;/properties&gt;

    &lt;!-- tag::security[] --&gt;
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
    &lt;!-- end::security[] --&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;


&lt;/project&gt;</code></pre> 
             </div> 
            </div> 
            <div class="paragraph"> 
             <p>The <a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-tools/spring-boot-maven-plugin">Spring Boot Maven plugin</a> provides many convenient features:</p> 
            </div> 
            <div class="ulist"> 
             <ul> 
              <li> <p>It collects all the jars on the classpath and builds a single, runnable "über-jar", which makes it more convenient to execute and transport your service.</p> </li> 
              <li> <p>It searches for the <code>public static void main()</code> method to flag as a runnable class.</p> </li> 
              <li> <p>It provides a built-in dependency resolver that sets the version number to match <a href="https://github.com/spring-projects/spring-boot/blob/master/spring-boot-dependencies/pom.xml">Spring Boot dependencies</a>. You can override any version you wish, but it will default to Boot’s chosen set of versions.</p> </li> 
             </ul> 
            </div> 
           </div> 
          </div> 
         </div> 
         <div class="sect1 reveal-sts"> 
          <h2 id="reveal-sts">Build with your IDE</h2> 
          <div class="sectionbody"> 
          </div> 
         </div> 
         <div class="sect1 use-sts"> 
          <h2 id="use-sts">Build with your IDE</h2> 
          <div class="sectionbody"> 
           <div class="ulist"> 
            <ul> 
             <li> <p>Read how to import this guide straight into <a href="/guides/gs/sts/">Spring Tool Suite</a>.</p> </li> 
             <li> <p>Read how to work with this guide in <a href="/guides/gs/intellij-idea">IntelliJ IDEA</a>.</p> </li> 
            </ul> 
           </div> 
          </div> 
         </div> 
         <div class="sect1"> 
          <h2 id="initial">Create a simple web controller</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>In Spring, REST endpoints are just Spring MVC controllers. The following Spring MVC controller handles a <code>GET /</code> request by returning a simple message:</p> 
           </div> 
           <div class="paragraph"> 
            <p><code>src/main/java/hello/HomeController.java</code></p> 
           </div> 
           <div class="listingblock"> 
            <div class="content"> 
             <pre class="prettyprint highlight"><code class="language-java" data-lang="java">package hello;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class HomeController {

    @GetMapping("/")
    public String index() {
        return "Welcome to the home page!";
    }
}</code></pre> 
            </div> 
           </div> 
           <div class="paragraph"> 
            <p>The entire class is marked up with <code>@RestController</code> so Spring MVC can autodetect the controller using it’s built-in scanning features and automatically configure web routes.</p> 
           </div> 
           <div class="paragraph"> 
            <p>The method is tagged with <code>@RequestMapping</code> to flag the path and the REST action. In this case, <code>GET</code> is the default behavior; it returns a message indicating that you are on the home page.</p> 
           </div> 
           <div class="paragraph"> 
            <p><code>@RestController</code> also tells Spring MVC to write the text directly into the HTTP response body, because there aren’t any views. Instead, when you visit the page, you’ll get a simple message in the browser as the focus of this guide is securing the page with LDAP.</p> 
           </div> 
          </div> 
         </div> 
         <div class="sect1"> 
          <h2 id="_build_the_unsecured_web_application">Build the unsecured web application</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>Before you secure the web application, verify that it works. To do that, you need to define some key beans. To do that, create an <code>Application</code> class.</p> 
           </div> 
           <div class="paragraph"> 
            <p><code>src/main/java/hello/Application.java</code></p> 
           </div> 
           <div class="listingblock"> 
            <div class="content"> 
             <pre class="prettyprint highlight"><code class="language-java" data-lang="java">package hello;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class Application {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

}</code></pre> 
            </div> 
           </div> 
           <div class="paragraph"> 
            <p><code>@SpringBootApplication</code> is a convenience annotation that adds all of the following:</p> 
           </div> 
           <div class="ulist"> 
            <ul> 
             <li> <p><code>@Configuration</code> tags the class as a source of bean definitions for the application context.</p> </li> 
             <li> <p><code>@EnableAutoConfiguration</code> tells Spring Boot to start adding beans based on classpath settings, other beans, and various property settings.</p> </li> 
             <li> <p>Normally you would add <code>@EnableWebMvc</code> for a Spring MVC app, but Spring Boot adds it automatically when it sees <strong>spring-webmvc</strong> on the classpath. This flags the application as a web application and activates key behaviors such as setting up a <code>DispatcherServlet</code>.</p> </li> 
             <li> <p><code>@ComponentScan</code> tells Spring to look for other components, configurations, and services in the <code>hello</code> package, allowing it to find the controllers.</p> </li> 
            </ul> 
           </div> 
           <div class="paragraph"> 
            <p>The <code>main()</code> method uses Spring Boot’s <code>SpringApplication.run()</code> method to launch an application. Did you notice that there wasn’t a single line of XML? No <strong>web.xml</strong> file either. This web application is 100% pure Java and you didn’t have to deal with configuring any plumbing or infrastructure.</p> 
           </div> 
           <div class="sect2"> 
            <h3 id="_build_an_executable_jar">Build an executable JAR</h3> 
            <div class="paragraph"> 
             <p>You can run the application from the command line with Gradle or Maven. Or you can build a single executable JAR file that contains all the necessary dependencies, classes, and resources, and run that. This makes it easy to ship, version, and deploy the service as an application throughout the development lifecycle, across different environments, and so forth.</p> 
            </div> 
            <div class="paragraph"> 
             <p>If you are using Gradle, you can run the application using <code>./gradlew bootRun</code>. Or you can build the JAR file using <code>./gradlew build</code>. Then you can run the JAR file:</p> 
            </div> 
            <div class="literalblock has-copy-button"> 
             <div class="content"> 
              <pre>java -jar build/libs/gs-authenticating-ldap-0.1.0.jar</pre> 
             </div> 
            </div> 
            <div class="paragraph"> 
             <p>If you are using Maven, you can run the application using <code>./mvnw spring-boot:run</code>. Or you can build the JAR file with <code>./mvnw clean package</code>. Then you can run the JAR file:</p> 
            </div> 
            <div class="literalblock has-copy-button"> 
             <div class="content"> 
              <pre>java -jar target/gs-authenticating-ldap-0.1.0.jar</pre> 
             </div> 
            </div> 
            <div class="admonitionblock note"> 
             <table> 
              <tbody> 
               <tr> 
                <td class="icon"> <i class="fa icon-note" title="Note"></i> </td> 
                <td class="content"> The procedure above will create a runnable JAR. You can also opt to <a href="/guides/gs/convert-jar-to-war/">build a classic WAR file</a> instead. </td> 
               </tr> 
              </tbody> 
             </table> 
            </div> 
            <div class="paragraph"> 
             <p>If you open your browser and visit <a href="http://localhost:8080" class="bare">http://localhost:8080</a>, you should see the following plain text:</p> 
            </div> 
            <div class="literalblock"> 
             <div class="content"> 
              <pre>Welcome to the home page!</pre> 
             </div> 
            </div> 
           </div> 
          </div> 
         </div> 
         <div class="sect1"> 
          <h2 id="_set_up_spring_security">Set up Spring Security</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>To configure Spring Security, you first need to add some extra dependencies to your build.</p> 
           </div> 
           <div class="paragraph"> 
            <p>For a Gradle-based build:</p> 
           </div> 
           <div class="paragraph"> 
            <p><code>build.gradle</code></p> 
           </div> 
           <div class="listingblock"> 
            <div class="content"> 
             <pre class="prettyprint highlight"><code class="language-java" data-lang="java">dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.ldap:spring-ldap-core")
    compile("org.springframework.security:spring-security-ldap")
    compile("org.springframework:spring-tx")
    compile("com.unboundid:unboundid-ldapsdk")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
}</code></pre> 
            </div> 
           </div> 
           <div class="admonitionblock note"> 
            <table> 
             <tbody> 
              <tr> 
               <td class="icon"> <i class="fa icon-note" title="Note"></i> </td> 
               <td class="content"> Due to a artifact resolution issue with Gradle, <strong>spring-tx</strong> must be pulled in or Gradle will fetch an older one that doesn’t work. </td> 
              </tr> 
             </tbody> 
            </table> 
           </div> 
           <div class="paragraph"> 
            <p>For a Maven-based build:</p> 
           </div> 
           <div class="paragraph"> 
            <p><code>pom.xml</code></p> 
           </div> 
           <div class="listingblock"> 
            <div class="content"> 
             <pre class="prettyprint highlight"><code class="language-xml" data-lang="xml">&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.ldap&lt;/groupId&gt;
        &lt;artifactId&gt;spring-ldap-core&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
        &lt;artifactId&gt;spring-security-ldap&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.unboundid&lt;/groupId&gt;
        &lt;artifactId&gt;unboundid-ldapsdk&lt;/artifactId&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
        &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
        &lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;
        &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;</code></pre> 
            </div> 
           </div> 
           <div class="paragraph"> 
            <p>These dependencies add Spring Security and UnboundId, an open source LDAP server. With that in place, you can then use pure Java to configure your security policy.</p> 
           </div> 
           <div class="paragraph"> 
            <p><code>src/main/java/hello/WebSecurityConfig.java</code></p> 
           </div> 
           <div class="listingblock"> 
            <div class="content"> 
             <pre class="prettyprint highlight"><code class="language-java" data-lang="java">package hello;

import java.util.Arrays;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.encoding.LdapShaPasswordEncoder;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.ldap.DefaultSpringSecurityContextSource;

@Configuration
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {

	@Override
	protected void configure(HttpSecurity http) throws Exception {
		http
			.authorizeRequests()
				.anyRequest().fullyAuthenticated()
				.and()
			.formLogin();
	}

	@Override
	public void configure(AuthenticationManagerBuilder auth) throws Exception {
		auth
			.ldapAuthentication()
				.userDnPatterns("uid={0},ou=people")
				.groupSearchBase("ou=groups")
				.contextSource(contextSource())
				.passwordCompare()
					.passwordEncoder(new LdapShaPasswordEncoder())
					.passwordAttribute("userPassword");
	}

	@Bean
	public DefaultSpringSecurityContextSource contextSource() {
		return  new DefaultSpringSecurityContextSource(Arrays.asList("ldap://localhost:8389/"), "dc=springframework,dc=org");
	}

}</code></pre> 
            </div> 
           </div> 
           <div class="paragraph"> 
            <p>The <code>@EnableWebSecurity</code> turns on a variety of beans needed to use Spring Security.</p> 
           </div> 
           <div class="paragraph"> 
            <p>You also need an LDAP server. Spring Boot’s provides autoconfiguration for an embedded server written in pure Java, which is being used for this guide. The <code>ldapAuthentication()</code> method configures things where the username at the login form is plugged into <code>{0}</code> such that it searches <code>uid={0},ou=people,dc=springframework,dc=org</code> in the LDAP server. Also, the <code>passwordCompare()</code> method configures the encoder and the name of the password’s attribute.</p> 
           </div> 
          </div> 
         </div> 
         <div class="sect1"> 
          <h2 id="_set_up_user_data">Set up user data</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>LDAP servers can use LDIF (LDAP Data Interchange Format) files to exchange user data. The <code>spring.ldap.embedded.ldif</code> property inside <code>application.properties</code> allow to Spring Boot pulls in an LDIF data file. This makes it easy to pre-load demonstration data.</p> 
           </div> 
           <div class="paragraph"> 
            <p><code>src/main/resources/test-server.ldif</code></p> 
           </div> 
           <div class="listingblock"> 
            <div class="content"> 
             <pre class="prettyprint highlight"><code class="language-ldif" data-lang="ldif">dn: dc=springframework,dc=org
objectclass: top
objectclass: domain
objectclass: extensibleObject
dc: springframework

dn: ou=groups,dc=springframework,dc=org
objectclass: top
objectclass: organizationalUnit
ou: groups

dn: ou=subgroups,ou=groups,dc=springframework,dc=org
objectclass: top
objectclass: organizationalUnit
ou: subgroups

dn: ou=people,dc=springframework,dc=org
objectclass: top
objectclass: organizationalUnit
ou: people

dn: ou=space cadets,dc=springframework,dc=org
objectclass: top
objectclass: organizationalUnit
ou: space cadets

dn: ou=\"quoted people\",dc=springframework,dc=org
objectclass: top
objectclass: organizationalUnit
ou: "quoted people"

dn: ou=otherpeople,dc=springframework,dc=org
objectclass: top
objectclass: organizationalUnit
ou: otherpeople

dn: uid=ben,ou=people,dc=springframework,dc=org
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
cn: Ben Alex
sn: Alex
uid: ben
userPassword: {SHA}nFCebWjxfaLbHHG1Qk5UU4trbvQ=

dn: uid=bob,ou=people,dc=springframework,dc=org
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
cn: Bob Hamilton
sn: Hamilton
uid: bob
userPassword: bobspassword

dn: uid=joe,ou=otherpeople,dc=springframework,dc=org
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
cn: Joe Smeth
sn: Smeth
uid: joe
userPassword: joespassword

dn: cn=mouse\, jerry,ou=people,dc=springframework,dc=org
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
cn: Mouse, Jerry
sn: Mouse
uid: jerry
userPassword: jerryspassword

dn: cn=slash/guy,ou=people,dc=springframework,dc=org
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
cn: slash/guy
sn: Slash
uid: slashguy
userPassword: slashguyspassword

dn: cn=quote\"guy,ou=\"quoted people\",dc=springframework,dc=org
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
cn: quote\"guy
sn: Quote
uid: quoteguy
userPassword: quoteguyspassword

dn: uid=space cadet,ou=space cadets,dc=springframework,dc=org
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
cn: Space Cadet
sn: Cadet
uid: space cadet
userPassword: spacecadetspassword



dn: cn=developers,ou=groups,dc=springframework,dc=org
objectclass: top
objectclass: groupOfUniqueNames
cn: developers
ou: developer
uniqueMember: uid=ben,ou=people,dc=springframework,dc=org
uniqueMember: uid=bob,ou=people,dc=springframework,dc=org

dn: cn=managers,ou=groups,dc=springframework,dc=org
objectclass: top
objectclass: groupOfUniqueNames
cn: managers
ou: manager
uniqueMember: uid=ben,ou=people,dc=springframework,dc=org
uniqueMember: cn=mouse\, jerry,ou=people,dc=springframework,dc=org

dn: cn=submanagers,ou=subgroups,ou=groups,dc=springframework,dc=org
objectclass: top
objectclass: groupOfUniqueNames
cn: submanagers
ou: submanager
uniqueMember: uid=ben,ou=people,dc=springframework,dc=org</code></pre> 
            </div> 
           </div> 
           <div class="admonitionblock note"> 
            <table> 
             <tbody> 
              <tr> 
               <td class="icon"> <i class="fa icon-note" title="Note"></i> </td> 
               <td class="content"> Using an LDIF file isn’t standard configuration for a production system. However, it’s very useful for testing purposes or guides. </td> 
              </tr> 
             </tbody> 
            </table> 
           </div> 
           <div class="paragraph"> 
            <p>If you visit the site at <a href="http://localhost:8080" class="bare">http://localhost:8080</a>, you should be redirected to a login page provided by Spring Security.</p> 
           </div> 
           <div class="paragraph"> 
            <p>Enter username <strong>ben</strong> and password <strong>benspassword</strong>. You should see this message in your browser:</p> 
           </div> 
           <div class="literalblock"> 
            <div class="content"> 
             <pre>Welcome to the home page!</pre> 
            </div> 
           </div> 
          </div> 
         </div> 
         <div class="sect1"> 
          <h2 id="_summary">Summary</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>Congratulations! You have just written a web application and secured it with <a href="http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/">Spring Security</a>. In this case, you used an <a href="http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#ldap">LDAP-based user store</a>.</p> 
           </div> 
          </div> 
         </div> 
         <div class="sect1"> 
          <h2 id="_see_also">See Also</h2> 
          <div class="sectionbody"> 
           <div class="paragraph"> 
            <p>The following guide may also be helpful:</p> 
           </div> 
           <div class="ulist"> 
            <ul> 
             <li> <p><a href="https://spring.io/guides/gs/spring-boot/">Building an Application with Spring Boot</a></p> </li> 
            </ul> 
           </div> 
           <div class="paragraph"> 
            <p>Want to write a new guide or contribute to an existing one? Check out our <a href="https://github.com/spring-guides/getting-started-guides/wiki">contribution guidelines</a>.</p> 
           </div> 
           <div class="admonitionblock important"> 
            <table> 
             <tbody> 
              <tr> 
               <td class="icon"> <i class="fa icon-important" title="Important"></i> </td> 
               <td class="content"> All guides are released with an ASLv2 license for the code, and an <a href="https://creativecommons.org/licenses/by-nd/3.0/">Attribution, NoDerivatives creative commons license</a> for the writing. </td> 
              </tr> 
             </tbody> 
            </table> 
           </div> 
          </div> 
         </div>
        </div> 
       </article> 
      </div> 
      <aside class="span4 content-right-pane--container mobile-left-pane" id="sidebar"> 
       <a class="ci-status desktop-only" href="https://travis-ci.org/spring-guides/gs-authenticating-ldap"> <img src="https://travis-ci.org/spring-guides/gs-authenticating-ldap.svg?branch=master"> </a> 
       <div class="right-pane-widget--container desktop-only"> 
        <div class="github-actions https"> 
         <h2>Get the Code</h2> 
         <div class="btn-group"> 
          <button class="btn" data-protocol="https">HTTPS</button> 
          <button class="btn" data-protocol="ssh">SSH</button> 
          <button class="btn" data-protocol="subversion">Subversion</button> 
         </div> 
         <div class="clone-url https"> 
          <input id="clone-url-https" readonly type="text" value="https://github.com/spring-guides/gs-authenticating-ldap.git"> 
          <button class="copy-button github" data-toggle="tooltip" data-clipboard-text="https://github.com/spring-guides/gs-authenticating-ldap.git"></button> 
         </div> 
         <div class="clone-url ssh"> 
          <input id="clone-url-ssh" readonly type="text" value="git@github.com:spring-guides/gs-authenticating-ldap.git"> 
          <button class="copy-button github" data-toggle="tooltip" data-clipboard-text="git@github.com:spring-guides/gs-authenticating-ldap.git"></button> 
         </div> 
         <div class="clone-url subversion"> 
          <input id="clone-url-subversion" readonly type="text" value="https://github.com/spring-guides/gs-authenticating-ldap"> 
          <button class="copy-button github" data-toggle="tooltip" data-clipboard-text="https://github.com/spring-guides/gs-authenticating-ldap"></button> 
         </div> 
         <a class="github_download btn btn-black uppercase" href="https://github.com/spring-guides/gs-authenticating-ldap/archive/master.zip">Download ZIP</a> 
         <a class="gs-guide-import" href="https://github.com/spring-guides/gs-authenticating-ldap">Import into STS</a> 
         <div class="go-to-repo--container"> 
          <a href="https://github.com/spring-guides/gs-authenticating-ldap"> <i class="icon-github"></i> Go To Repo </a> 
         </div> 
        </div> 
       </div> 
       <div>
        <div class="right-pane-widget--container"> 
         <div class="related_resources"> 
          <h3><a name="table-of-contents" class="anchor" href="#table-of-contents"></a>Table of contents</h3> 
          <ul class="sectlevel1"> 
           <li><a href="#_what_you_ll_build">What you’ll build</a></li> 
           <li><a href="#_what_you_ll_need">What you’ll need</a></li> 
           <li><a href="#_how_to_complete_this_guide">How to complete this guide</a></li> 
           <li><a href="#scratch">Build with Gradle</a> </li> 
           <li><a href="#use-maven">Build with Maven</a> </li> 
           <li><a href="#use-sts">Build with your IDE</a></li> 
           <li><a href="#initial">Create a simple web controller</a></li> 
           <li><a href="#_build_the_unsecured_web_application">Build the unsecured web application</a> </li> 
           <li><a href="#_set_up_spring_security">Set up Spring Security</a></li> 
           <li><a href="#_set_up_user_data">Set up user data</a></li> 
           <li><a href="#_summary">Summary</a></li> 
           <li><a href="#_see_also">See Also</a></li> 
          </ul>
         </div> 
        </div> 
        <div class="right-pane-widget--container"> 
         <div class="related_resources"> 
          <h3><a name="tags" class="anchor" href="#tags"></a>Tags</h3>
          <ul class="inline"> 
           <li><a href="/guides?filter=security">security</a></li> 
           <li><a href="/guides?filter=ldap">ldap</a></li> 
          </ul>
          <h3><a name="projects" class="anchor" href="#projects"></a>Projects</h3> 
          <ul> 
           <li><a href="http://projects.spring.io/spring-ldap">Spring LDAP</a></li> 
           <li><a href="http://projects.spring.io/spring-security">Spring Security</a></li> 
          </ul> 
          <h3><a name="concepts-and-technologies" class="anchor" href="#concepts-and-technologies"></a>Concepts and technologies</h3> 
          <ul> 
           <li><a href="/understanding/Git">Git</a></li> 
          </ul> 
         </div> 
        </div>
       </div> 
      </aside> 
     </div> 
    </main> 
   </div> 
   <footer class="footer"> 
    <div class="container-fluid"> 
     <div class="row-fluid"> 
      <div class="span12"> 
       <div class="navbar"> 
        <div class="container"> 
         <ul class="nav"> 
          <li><a href="/team">Team</a></li> 
          <li><a href="/services">Services</a></li> 
          <li><a href="/tools">Tools</a></li> 
          <li><a href="https://store.spring.io">Store</a></li> 
         </ul> 
        </div> 
       </div> © 
       <span>2017</span> 
       <a href="https://www.pivotal.io/">Pivotal Software</a>, Inc. All Rights Reserved. 
       <a href="https://www.pivotal.io/terms-of-use">Terms of Use</a>, 
       <a href="https://www.pivotal.io/privacy-policy">Privacy</a> and 
       <a href="/trademarks">Trademark Guidelines</a> 
      </div> 
     </div> 
    </div> 
   </footer> 
   <div id="scrim"></div> 
  </div> 
 </body>
</html>