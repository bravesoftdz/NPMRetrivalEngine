<!doctype html>
<html>
 <head> 
  <title>JMS Step 2 - Using the QueueSend.java Sample Program to Send a Message to a JMS Queue | Oracle SOA Proactive Support Blog</title> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"> 
  <link rel="alternate" type="application/rss+xml" title="JMS Step 2 - Using the QueueSend.java Sample Program to Send a Message to a JMS Queue | Oracle SOA Proactive Support Blog" href="https://blogs.oracle.com/soaproactive/john-brown-evans/rss"> 
  <meta name="description" content="This post is the second in a series of JMS articles which
demonstrate how to use JMS queues in a SOA context.
In the previous post<a href=&quot;https://blogs.oracle.com/soaproactive/jms-step-1-how-to-create-a-simple-jms-queue-in-weblogic-server-11g&quot; target=&quot;_blank&quot;>JMS Step 1 - How to Create a...</a>"> 
  <meta name="host_name" content="https://blogs.oracle.com"> 
  <meta name="title" content="JMS Step 2 - Using the QueueSend.java Sample Program to Send a Message to a JMS Queue | Oracle SOA Proactive Support Blog"> 
  <meta name="page_type" content="item"> 
  <meta name="long_page_type" content="Item Page"> 
  <meta name="c_blog_type" content="norm"> 
  <meta name="blog_name" content="John-Brown Evans"> 
  <meta name="Asset Type" content=""> 
  <meta name="Channel" content=""> 
  <meta name="Country" content=""> 
  <meta name="Description" content=""> 
  <meta name="Industries" content=""> 
  <meta name="Language" content=""> 
  <meta name="Product Area" content="Applications"> 
  <meta name="Product_Area" content=""> 
  <meta name="Region" content=""> 
  <meta name="Syndication_Category" content=""> 
  <meta name="Syndication_Publish_Date" content=""> 
  <meta name="Syndication_URL" content=""> 
  <meta name="keywords" content="Tech Insights - How To"> 
  <meta name="author" content="John-Brown Evans"> 
  <meta name="publish_date" content="2012-11-14 08:46:00"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="JMS Step 2 - Using the QueueSend.java Sample Program to Send a Message to a JMS Queue"> 
  <meta property="og:image" content="http://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/f4a5b21d-66fa-4885-92bf-c4e81c06d916/Image/0cf4e74ed3d1bda5a5342712560125ce/image00.jpg"> 
  <meta property="og:url" content="https://blogs.oracle.com/soaproactive/jms-step-2-using-the-queuesendjava-sample-program-to-send-a-message-to-a-jms-queue"> 
  <meta name="category" content="Tech Insights - How To "> 
  <meta name="google-site-verification" content="NONE PROVIDED"> 
  <script type="text/javascript" src="https://cdn.app.compendium.com/uploads/user/a7c086f7-9adb-4d2c-90fa-e26177af8317/49b7153f-f845-40d2-a360-dcc5e23edd98/File/aeea4420c9ddde7f3affbb17611ecd9c/jquery.js"></script> 
  <link href="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/35dfc590-c854-42f6-8af3-ae9580d06c69/File/2dfc2ded21f46f3299db456fe02266d0/blogs_style.css" media="print, screen" rel="Stylesheet" type="text/css"> 
  <link href="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/db1601e0-5f67-4d76-a6d1-3d5e5f2ca2d7/File/b5ef0c7a6a73c03a0d2d61ef9242d0ed/custom.css" media="print, screen" rel="Stylesheet" type="text/css"> 
  <link rel="icon" href="https://cdn.app.compendium.com/uploads/user/a7c086f7-9adb-4d2c-90fa-e26177af8317/81991be8-4cc9-4542-8836-2388e09f8978/File/c9856f0a4dd7ad0c215a68052a04d9e8/favicon.ico" type="image/x-icon"> 
  <link href="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/1e509d21-7cff-49fe-a83c-ecf713a83ce0/File/f8b5543b2a648807c871b9570b0e658a/oracle_stylesheet.css" media="print, screen" rel="Stylesheet" type="text/css"> 
  <script type="text/javascript" src="https://cdn.app.compendium.com/uploads/user/1b375ffd-8b12-464f-bbde-c389f203067e/21e3ee29-ab66-4a9d-a471-3ea472ac2561/File/b9f044a7a451604e8711745a7ddad72a/oracle_script.js"></script> 
  <script src="https://cdn.app.compendium.com/uploads/user/a7c086f7-9adb-4d2c-90fa-e26177af8317/4790e630-263f-4339-828b-30ac369e19ac/File/cbaa239a899b090f7058e5682004c694/shcore.js" type="text/javascript"></script> 
  <script src="https://cdn.app.compendium.com/uploads/user/a7c086f7-9adb-4d2c-90fa-e26177af8317/4790e630-263f-4339-828b-30ac369e19ac/File/ded1a87dc5f320195781ab29c2a3f5d9/shbrushjscript.js" type="text/javascript"></script> 
  <script src="https://cdn.app.compendium.com/uploads/user/a7c086f7-9adb-4d2c-90fa-e26177af8317/4790e630-263f-4339-828b-30ac369e19ac/File/fd16b10df8a1269c250e1859ef077322/shautoloader.js"></script> 
  <script src="https://cdn.app.compendium.com/uploads/user/a7c086f7-9adb-4d2c-90fa-e26177af8317/4790e630-263f-4339-828b-30ac369e19ac/File/b5b11317738eb006e376c15cc8d95d38/brushloader.js"></script> 
  <link href="https://cdn.app.compendium.com/uploads/user/a7c086f7-9adb-4d2c-90fa-e26177af8317/4790e630-263f-4339-828b-30ac369e19ac/File/f4d4e2827137b8c77f9414c9e75d1805/theme_default.css" rel="stylesheet" type="text/css"> 
  <style>
   @media only screen and (max-width: 974px) and (min-width: 0) {
  .cb11.cb11v0x1 img{
    max-width: 100%;
    height: auto !important;
  }
  .cb11.cb11v0x1 iframe{
    max-width: 100%;
    height: auto !important;
  }
   .cb11.cb11v0x1 .cb11w1 {
    font-size: 2rem;
  }
}
.cb06w4 a:hover {
    text-decoration: none;
}
   </style> 
  <script type="text/javascript" src="https://cdn.app.compendium.com/uploads/user/a7c086f7-9adb-4d2c-90fa-e26177af8317/49b7153f-f845-40d2-a360-dcc5e23edd98/File/6cbfcd940e6bf6abf3e44a14a4d080c8/blogs_script.js"></script> 
  <script type="text/javascript" src="https://cdn.app.compendium.com/uploads/user/a7c086f7-9adb-4d2c-90fa-e26177af8317/81991be8-4cc9-4542-8836-2388e09f8978/File/4364d14db4778cb67f0668fc7201f065/backbutton.js"> </script> 
 </head> 
 <body class="f11 f11v2 f11v2r2"> 
  <div class="f11w1"> 
   <!-- =========== MENU ================ --> 
   <!-- U14v0 --> 
   <div id="u14" class="u14 u14v0" data-backtxt="Back"> 
    <div class="u14w1 cwidth"> 
     <div class="u14w3" id="u14menu"> 
      <div class="u14logo">
       <a href="https://blogs.oracle.com/theoracleblog"><img alt="Blog Name" src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/80280346-e881-4a9d-ae70-db011709647f/File/b2ca4837c0fdc89c7cd35a93e3324a71/oracle_blog_logo.png"></a>
      </div> 
      <ul class="u14nav"> 
       <li class="u14navitem"> 
        <div class="u14mnav">
         <a href="https://blogs.oracle.com/soaproactive/miscellaneous-5">Miscellaneous</a>
        </div> </li> 
       <li class="u14navitem"> 
        <div class="u14mnav">
         <a href="https://blogs.oracle.com/soaproactive/releases-3">Releases</a>
        </div> </li> 
       <li class="u14navitem"> 
        <div class="u14mnav">
         <a href="https://blogs.oracle.com/soaproactive/support-news">Support News</a>
        </div> </li> 
       <li class="u14navitem"> 
        <div class="u14mnav">
         <a href="https://blogs.oracle.com/soaproactive/tech-insights---how-to">Tech Insights - How To</a>
        </div> </li> 
       <li class="u14navitem"> 
        <div class="u14mnav">
         <a href="https://blogs.oracle.com/soaproactive/webcasts-5">Webcasts</a>
        </div> </li> 
       <li class="u14navitem u14specialnavitem"> 
        <div class="u14mnav">
         Categories
        </div> 
        <div class="u14w4"> 
         <div class="u14w5"> 
          <div class="u14col"> 
           <ul> 
           </ul> 
          </div> 
         </div> 
        </div> </li> 
       <li class="u14search"> 
        <div class="u14mnav">
         Search
        </div> 
        <div class="u14w4"> 
         <div class="u14w5"> 
          <!--	<form class="u14search" class="u14searchform" name="u14search" method="get" action="https://www-portal-stage.oracle.com/search/results">--> 
          <!--<form class="u14search" class="u14searchform" name="u14search" method="get" action="http://adc00cba.us.oracle.com:8002/search-authoring/results/_/N-3z">--> 
          <!--<form class="u14search" class="u14searchform" name="u14search" method="post" action="search.tpl">--> 
          <!--	<form id="search-form" method="get" action="https://blogs.oracle.com/soaproactive/john-brown-evans" onSubmit="formgasend();">--> 
          <form class="u14searchform" name="u14search" method="get" action="https://blogs.oracle.com/soaproactive/john-brown-evans" onsubmit="displaySearchTermFunction()"> 
           <!-- <input type="submit" name="u14searchbutton" id="u14searchbutton" class="u14searchbutton" value=""> --> 
           <input type="submit" name="u14searchbutton" id="u14searchbutton" class="u14searchbutton" value="" onsubmit="displaySearchTermFunction()"> 
           <!--<input type="hidden" name="Ntk" value="S3"> --> 
           <input type="text" name="search_terms" id="u14sinput" class="u14sinput autoclear" value="Search Blog" tabindex="1"> 
           <input type="hidden" id="search_term" value=""> 
           <!--<input type="hidden" name="search_text" value="u14searchbutton">--> 
           <!-- <input type="hidden" name="cat" value="omcblogs"> --> 
           <!--<input type="hidden" value="all" name="search_p_main_operator">
							    <input name="start" value="1" type="hidden">  --> 
           <!--<input type="hidden" name="cat" value="blogs">--> 
           <!--  <input type="hidden" name="Dy" value="1"> 
                                 <input type="hidden" name="Nty" value="1"> --> 
          </form> 
         </div> 
        </div> </li> 
      </ul> 
     </div> 
    </div> 
   </div> 
   <script type="text/javascript">
							var userPass = document.getElementById("u14sinput");
							function displaySearchTermFunction(){

							document.getElementById('searchspan').innerHTML = userPass.value;
						   }
</script> 
   <!-- /U14v0 --> 
   <!-- =========== HEADER ================ --> 
   <!-- CB06v2 --> 
   <div class="cb06 cb06v2"> 
    <div class="cb06w1v2"> 
     <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/File/4d918226e7164e022859e745eaf3f30d/ocpc_corporate_redwoodshoreshq_campuspano.jpg"> 
    </div> 
    <div class="cb06w2v2"> 
     <div class="cb06w3 cwidth"> 
      <div class="cb06w4"> 
       <a href="https://blogs.oracle.com/soaproactive"><h1>SOA Proactive Support Blog</h1></a> 
       <div class="bannerbutton">
        <a class="cb06-bannerbutton" href="http://blogs.oracle.com/soaproactive/soa-proactive-support-resources">Who We Are and More...</a>
       </div> 
      </div> 
     </div> 
    </div> 
   </div> 
   <!-- /CB06v2 --> 
   <!-- CB07v0 --> 
   <div class="cb07 cb07v0"> 
    <div class="cb07w1 cwidth"> 
     <div class="cb07w3"> 
      <ul class="cb07social"> 
       <li class="cb07twitter"><a href="https://twitter.com/SOAProactive" target="_blank"><span class="screen-reader">Twitter</span></a></li> 
       <li class="cb07linkedin"><a href="https://www.linkedin.com/groups/77513" target="_blank"><span class="screen-reader">LinkedIn</span></a></li> 
       <li class="cb07rss"><a href="https://blogs.oracle.com/soaproactive/rss" target="_blank"><span class="screen-reader">RSS</span></a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
   <!-- /CB07v0 --> 
   <!-- ==========SUB MENU =============== --> 
   <!-- ===========Whole Body =============== --> 
   <!-- below two div class we have moved to Post List.tpl because of sidebar image uniqily displayed for Post-item.tpl --> 
   <!--<div class="f15 f15v1">
<div class="f15w1"> --> 
   <div class="f15 f15v5"> 
    <div class="f15w1"> 
     <div class="f15w2"> 
      <!-- U03v2 --> 
      <div class="u03 u03v2"> 
       <a href="https://blogs.oracle.com/soaproactive/tech-insights---how-to" title="Tech Insights - How To">Tech Insights - How To</a> 
       <span class="cb11v1datestamp"> | Wednesday, November 14, 2012</span> 
      </div> 
      <!-- /U03v2 --> 
      <!-- CB11v0 --> 
      <div class="cb11 cb11v0x1"> 
       <div class="cb11 cb11v0x1 cb11w2"> 
        <div class="cw51 cw51v0" data-parent="cb11" data-site="https://blogs.oracle.com/soaproactive/jms-step-2-using-the-queuesendjava-sample-program-to-send-a-message-to-a-jms-queue"> 
         <div class="cw51title">
          Share
         </div> 
         <div class="cw51w1 cw51sticky"> 
          <div class="cw51w2"> 
           <ul class="cw51social"> 
            <li class="cw51facebook"><a class="sharelink" data-sharetype="facebook"><span class="screen-reader">Facebook</span></a></li> 
            <li class="cw51linkedin"><a class="sharelink" data-sharetype="linkedin"><span class="screen-reader">LinkedIn</span></a></li> 
            <li class="cw51twitter"><a class="sharelink" data-sharetype="twitter" data-via="NONE PROVIDED" data-url="https://blogs.oracle.com/soaproactive/jms-step-2-using-the-queuesendjava-sample-program-to-send-a-message-to-a-jms-queue" data-text="JMS Step 2 - Using the QueueSend.java Sample Program to Send a Message to a JMS Queue"><span class="screen-reader">Twitter</span></a></li> 
            <li class="cw51googleplus"><a class="sharelink" data-sharetype="googleplus"><span class="screen-reader">Google Plus</span></a></li> 
            <li class="cw51email"><a class="sharelink" data-sharetype="email"><span class="screen-reader">Email</span></a></li> 
            <li class="cw51comment"><a data-target="c97"><span class="screen-reader">Comment</span></a></li> 
           </ul> 
          </div> 
         </div> 
        </div> 
       </div> 
       <h1>JMS Step 2 - Using the QueueSend.java Sample Program to Send a Message to a JMS Queue</h1> 
       <div class="cb11w1"> 
        <div class="cb11 cb11v0x1 cb11author">
          By: 
         <a href="/author/john-brown-evans" class="dynamicback">John-Brown Evans</a> 
        </div> 
        <p>This post is the second in a series of JMS articles which demonstrate how to use JMS queues in a SOA context.</p> 
        <p>In the previous post<br> <a href="https://blogs.oracle.com/soaproactive/jms-step-1-how-to-create-a-simple-jms-queue-in-weblogic-server-11g" target="_blank">JMS Step 1 - How to Create a Simple JMS Queue in Weblogic Server 11g </a><br> I showed you how to create a JMS queue and its dependent objects in WebLogic Server. In this article, we will use a sample program to write a message to that queue. Please review the previous post if you have not created those objects yet, as they will be required later in this example. The previous post also includes useful background information and links to the Oracle documentation for additional research.</p> 
        <p>The following post in this series will show how to read the message from the queue again.</p> 
        <h2><a name="h.n6vu9taeq13m"></a> 1. Source code</h2> 
        <p>The following java code will be used to write a message to the JMS queue. It is based on a sample program provided with the WebLogic Server installation. The sample is not installed by default, but needs to be installed manually using the WebLogic Server Custom Installation option, together with many, other useful samples. You can either copy-paste the following code into your editor, or install all the samples.</p> 
        <p>The knowledge base article in My Oracle Support:</p> 
        <p><a href="https://support.oracle.com/rs?type=doc&amp;id=1499719.1" target="_blank">How To Install WebLogic Server and JMS Samples in WLS 10.3.x (Doc ID 1499719.1) </a></p> 
        <p>describes how to install the samples.</p> 
        <h3>QueueSend.java</h3> 
        <table cellpadding="0" cellspacing="0"> 
         <tbody> 
          <tr> 
           <td> <pre>
package examples.jms.queue;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Hashtable;
import javax.jms.*;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

/** This example shows how to establish a connection
* and send messages to the JMS queue. The classes in this
* package operate on the same JMS queue. Run the classes together to
* witness messages being sent and received, and to browse the queue
* for messages. The class is used to send messages to the queue.
*
* @author Copyright (c) 1999-2005 by BEA Systems, Inc. All Rights Reserved.
*/
public class QueueSend
{
 // Defines the JNDI context factory.
 public final static String JNDI_FACTORY="weblogic.jndi.WLInitialContextFactory";

 // Defines the JMS context factory.
 public final static String JMS_FACTORY="jms/TestConnectionFactory";

 // Defines the queue.
 public final static String QUEUE="jms/TestJMSQueue";

 private QueueConnectionFactory qconFactory;
 private QueueConnection qcon;
 private QueueSession qsession;
 private QueueSender qsender;
 private Queue queue;
 private TextMessage msg;

 /**
  * Creates all the necessary objects for sending
  * messages to a JMS queue.
  *
  * @param ctx JNDI initial context
  * @param queueName name of queue
  * @exception NamingException if operation cannot be performed
  * @exception JMSException if JMS fails to initialize due to internal error
  */
 public void init(Context ctx, String queueName)
    throws NamingException, JMSException
 {
    qconFactory = (QueueConnectionFactory) ctx.lookup(JMS_FACTORY);
    qcon = qconFactory.createQueueConnection();
    qsession = qcon.createQueueSession(false, Session.AUTO_ACKNOWLEDGE);
    queue = (Queue) ctx.lookup(queueName);
    qsender = qsession.createSender(queue);
    msg = qsession.createTextMessage();
    qcon.start();
 }

 /**
  * Sends a message to a JMS queue.
  *
  * @param message  message to be sent
  * @exception JMSException if JMS fails to send message due to internal error
  */
 public void send(String message) throws JMSException {
    msg.setText(message);
    qsender.send(msg);
 }

 /**
  * Closes JMS objects.
  * @exception JMSException if JMS fails to close objects due to internal error
  */
 public void close() throws JMSException {
    qsender.close();
    qsession.close();
    qcon.close();
 }
/** main() method.
 *
 * @param args WebLogic Server URL
 * @exception Exception if operation fails
 */
 public static void main(String[] args) throws Exception {
    if (args.length != 1) {
     System.out.println("Usage: java examples.jms.queue.QueueSend WebLogicURL");
     return;
    }
    InitialContext ic = getInitialContext(args[0]);
    QueueSend qs = new QueueSend();
    qs.init(ic, QUEUE);
    readAndSend(qs);
    qs.close();
 }

 private static void readAndSend(QueueSend qs)
    throws IOException, JMSException
 {
    BufferedReader msgStream = new BufferedReader(new InputStreamReader(System.in));
    String line=null;
    boolean quitNow = false;
    do {
     System.out.print("Enter message (\"quit\" to quit): \n");
     line = msgStream.readLine();
     if (line != null &amp;&amp; line.trim().length() != 0) {
       qs.send(line);
       System.out.println("JMS Message Sent: "+line+"\n");
       quitNow = line.equalsIgnoreCase("quit");
     }
    } while (! quitNow);

 }

 private static InitialContext getInitialContext(String url)
    throws NamingException
 {
    Hashtable env = new Hashtable();
    env.put(Context.INITIAL_CONTEXT_FACTORY, JNDI_FACTORY);
    env.put(Context.PROVIDER_URL, url);
    return new InitialContext(env);
 }
}</pre> </td> 
          </tr> 
         </tbody> 
        </table> 
        <h2>2. How to Use This Class</h2> 
        <h3>2.1 From the file system on UNIX/Linux</h3> 
        <p>Log in to a machine with a WebLogic installation and create a directory to contain the source and code matching the package name, e.g. $HOME/examples/jms/queue. Copy the above QueueSend.java file to this directory.</p> 
        <ol start="1"> 
         <li>Set the CLASSPATH and environment to match the WebLogic server environment.<br> Go to $MIDDLEWARE_HOME/user_projects/domains/base_domain/bin and execute<br> <br> . ./setDomainEnv.sh</li> 
         <li>Collect the following information required to run the script:</li> 
        </ol> 
        <ul style="margin-left: 40px;"> 
         <li><strong>The JNDI name of a JMS queue to use</strong><br> In the Weblogic server console &gt; Services &gt; Messaging &gt; JMS Modules &gt; (Module name, e.g. TestJMSModule) &gt; (JMS queue name, e.g. TestJMSQueue). Select the queue and note its JNDI name,<br> e.g.<em> jms/TestJMSQueue</em></li> 
         <li><strong>The JNDI name of a connection factory to connect to the queue</strong><br> Follow the same path as above to get the connection factory for the above queue, e.g. TestConnectionFactory and its JNDI name<br> e.g. <em>jms/TestConnectionFactory</em></li> 
         <li><strong>The URL and port of the WebLogic server running the above queue</strong><br> Check the JMS server for the above queue and the managed server it is targeted to, for example soa_server1. Now find the port this managed server is listening on, by looking at its entry under Environment &gt; Servers in the WLS console,<br> e.g. <em>8001</em><br> The URL for the server to be given to the QueueSend program in this example will therefore be t3://host.domain:8001<br> e.g. <em>t3://jbevans-lx.de.oracle.com:8001</em></li> 
        </ul> 
        <ol start="3"> 
         <li>Edit QueueSend.java and enter the above queue name and connection factory respectively under</li> 
        </ol> 
        <table cellpadding="0" cellspacing="0"> 
         <tbody> 
          <tr> 
           <td> <p>...<br> public final static String JMS_FACTORY=" jms/TestConnectionFactory ";</p> <p>...<br> public final static String QUEUE=" jms/TestJMSQueue ";</p> <p>...</p> </td> 
          </tr> 
         </tbody> 
        </table> 
        <ol start="4"> 
         <li>Compile QueueSend.java using<br> javac QueueSend.java</li> 
         <li>Go to the source's top-level directory and execute it using<br> java examples.jms.queue.QueueSend <em>t3://jbevans-lx.de.oracle.com:8001</em></li> 
         <li>This will prompt for a text input or "quit" to end.</li> 
         <li>In the WLS console, go to the queue and select Monitoring to confirm that a new message was written to the queue.</li> 
        </ol> 
        <h3><a name="h.u089vieh0bk0"></a> 2.2 From JDeveloper</h3> 
        <ol start="1"> 
         <li>Create a new application in JDeveloper, called, for example <em>JMSTests</em>.</li> 
         <li>When prompted for a project name, enter <em>QueueSend </em>and select Java as the technology<br> <br> <a href="//cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/f4a5b21d-66fa-4885-92bf-c4e81c06d916/Image/0cf4e74ed3d1bda5a5342712560125ce/image00.jpg"><img src="//cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/f4a5b21d-66fa-4885-92bf-c4e81c06d916/Image/0cf4e74ed3d1bda5a5342712560125ce/image00.jpg" style="width: 640px; height: 480px;"></a></li> 
         <li>Default Package = examples.jms.queue (but you can enter anything here as you will overwrite it in the code later).<br> Leave the other values at their defaults.<br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/9b9bd99a7e714ba99b683dcef932c83c/image02.jpg" style="width: 568px; height: 428px;"> 
          <div class="thumbnail-preview pull-left col-md-2 col-sm-2 col-lg-2" id="thumbnail_9a948bfc-8825-443f-8d6f-6a8f1e507524">
           &nbsp;
          </div> </li> 
         <li>Press Finish</li> 
         <li>Create a new Java class called <em>QueueSend </em>and use the default values<br> <br> <img alt="" src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/6a67f2c10ef8e6f2b3d8e8377a8dd378/image03.jpg" style="width: 574px; height: 411px;"><br> <br> This will create a file called QueueSend.java.</li> 
         <li>Open QueueSend.java, if it is not already open and replace all its contents with the QueueSend java code listed above<br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/5376fca841258861ce99d43c1301df09/image04.jpg" style="width: 584px; height: 330px;"></li> 
         <li>Some lines might have warnings due to unfound objects.<br> These are due to missing libraries in the JDeveloper project.<br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/316c3de555beff84ce19acd3a4deb410/image05.jpg" style="width: 480px; height: 172px;"></li> 
         <li>Add the following libraries to the JDeveloper project:</li> 
        </ol> 
        <ol start="1" style="margin-left: 40px;"> 
         <li>right-click the <em>QueueSend </em>project in the navigation menu and select<em> Libraries and Classpath</em> , then <em>Add JAR/Directory</em></li> 
         <li>Go to the folder containing the JDeveloper installation and find/choose the file <em>javax.jms_1.1.1.jar</em> , e.g. at <em>D:\oracle\jdev11116\modules\javax.jms_1.1.1.jar</em><br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/72a9e32e0a9792e08d99716d408c7a43/image06.jpg" style="width: 535px; height: 401px;"><br> <br> Do the same for the weblogic.jar file located, for example in <em>D:\oracle\jdev11116\wlserver_10.3\server\lib\weblogic.jar</em><br> <br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/47d8dceca88432a6a27e50c3ce1db55b/image07.jpg" style="width: 444px; height: 355px;"></li> 
        </ol> 
        <ol start="9"> 
         <li>Now you should be able to compile the project, for example by selecting the Make or Rebuild icons<br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/e0647497d9c066b68e6fac5a67bcfd1a/image08.jpg" style="width: 349px; height: 163px;"><br> &nbsp;</li> 
         <li>If you try to execute the project, you will get a usage message, as it requires a parameter pointing to the WLS installation containing the JMS queue, for example<em> t3://jbevans-lx.de.oracle.com:8001</em> . You can automatically pass this parameter to the program from JDeveloper by editing the project's Run/Debug/Profile. Select the project properties, select Run/Debug/Profile and edit the Default run configuration<br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/34aca18ff670d471e457a3ead7a11144/image09.jpg" style="width: 569px; height: 355px;"><br> <br> and add the connection parameter to the Program Arguments field<br> <br> <img alt="" src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/48295a4e4c348910b3d1a8827ca6acbc/image09_5.jpg" style="width: 533px; height: 393px;"><br> <br> If you execute it again, you will see that it has passed the parameter to the start command<br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/f1d2d7e1c312e95d00ba7d0971186df4/image11.jpg" style="width: 463px; height: 95px;"></li> 
         <li>If you get a <span style="color:#FF0000;">ClassNotFoundException</span> for the class<strong> weblogic.jndi.WLInitialContextFactory</strong> , then check that the weblogic.jar file was correctly added to the project in one of the earlier steps above.</li> 
        </ol> 
        <p>Set the values of JMS_FACTORY and QUEUE the same way as described above in the description of how to use this from a Linux file system, i.e.</p> 
        <table cellpadding="0" cellspacing="0"> 
         <tbody> 
          <tr> 
           <td> <p>...<br> public final static String JMS_FACTORY=" jms/TestConnectionFactory ";</p> <p>...<br> public final static String QUEUE=" jms/TestJMSQueue ";</p> <p>...</p> </td> 
          </tr> 
         </tbody> 
        </table> 
        <ol start="12"> 
         <li>You need to make one more change to the project. If you execute it now, it will prompt for the payload for the JMS message, but you won't be able to enter it by default in JDeveloper. You need to enable program input for the project first.<br> <br> Select the project's properties, then Tool Settings, then check the Allow Program Input checkbox at the bottom and Save.<br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/aa2d60733b3c9cfdee57b86ca28c3680/image12.jpg" style="width: 583px; height: 415px;"></li> 
         <li>Now when you execute the project, you will get a text entry field at the bottom into which you can enter the payload. You can enter multiple messages until you enter "quit", which will cause the program to stop.<br> <br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/319b0381000ffbc1cffc20873663c119/image13.jpg" style="width: 378px; height: 314px;"></li> 
        </ol> 
        <p><br> The following screen shot shows the TestJMSQueue's Monitoring page, after a message was sent to the queue:<br> <img src="https://cdn.app.compendium.com/uploads/user/e7c690e8-6ff9-102a-ac6d-e4aebca50425/7e9dc95f-4506-4c82-a589-6322caf5e7aa/Image/b690c90e4949c8c3192da6666cc3a919/image14.jpg" style="height: 153px; width: 610px;"></p> 
        <p>This concludes the sample. In the following post I will show you how to read the message from the queue again.</p> 
        <!-- End of cb11w1 div --> 
       </div> 
      </div> 
      <!-- CW33v2 --> 
      <div class="cw33 cw33v2"> 
       <div class="cw33w3"> 
        <h4>Join the discussion</h4> 
       </div> 
       <div class="cw33w1"> 
        <!-- C97v0 --> 
        <div class="c97 c97v0"> 
         <div class="c97w1"> 
          <div class="comments"> 
           <div class="c97w2">
             Comments ( 1 ) 
            <ul class="c97comment-items"> 
             <li> 
              <div class="c97comment-author">
               guest 
               <span>Tuesday, March 18, 2014</span>
              </div> 
              <div class="c97comment-body">
               <p>Fantastic code.......</p>
               <br>
              </div> </li> 
            </ul> 
           </div> 
           <form class="rounded" method="post" action="post.comment"> 
            <label id="comment-form-name-label">Name</label>
            <input type="text" id="comment-form-name" name="commentAuthorName" value="" size="80">
            <span role="alert">Please enter your name.</span>
            <label id="comment-form-email-label">Email</label>
            <input type="text" id="compendiumment-form-email" name="commentAuthorEmail" value="" size="80">
            <span role="alert">Please provide a valid email address.</span>
            <label id="comment-form-comment-label">Comment</label>
            <textarea class="field" id="fieldcomment-form-comment" name="commentText" rows="8" cols="60"></textarea>
            <span role="alert">Please enter a comment.</span>
            <label for="spam-prevent" id="spamPrevent-label">Type the text</label>
            <input type="text" size="80" class="spam-prevent" name="spamPrevent">
            <span role="alert">CAPTCHA challenge response provided was incorrect. Please try again.</span>
            <img id="captcha" width="200" height="80" src="captcha.php?phrase=spamPrevent" alt="Captcha">
            <div class="c97submit">
             <input type="submit" id="submitcomment-form-submit" name="submitComment" value="Submit">
            </div>
            <table width="100%">              
             <input type="hidden" value="109daaf0-47bf-4119-877b-1598c61e705b" name="post_id"> 
             <input type="hidden" value="da034ee5-0470-41c3-8688-a9129ec7cbd5" name="blog_id">  
            </table> 
           </form> 
          </div> 
         </div> 
        </div> 
        <!-- /C97v0 --> 
       </div> 
      </div> 
      <!-- /CW33v2 --> 
     </div> 
     <!-- End of <f15w2> div class --> 
    </div> 
    <!-- End of <f15w1> div class --> 
    <!--</div> <!-- End of <f15 f15v5 cwidth> div class --> 
    <!-- As per BLOGS-409 bulk migration UAT issue(Roland), we are removing related content widget --> 
    <!-- ===========get-Started.tpl ========= --> 
    <!-- /CB37v0 --> 
    <div class="f12 f12v0"> 
     <div class="f12w1"> 
      <!-- CB37v0 --> 
      <div class="cb37 cb37v0"> 
       <div class="modules"> 
        <div class="module cb37module"> 
         <div class="icn-img icn-circle icn-magnifyingglass bgdarkslate">
          &nbsp;
         </div> 
         <div>
          <h2>Visit the Oracle Blog</h2>
         </div> 
         <div>
          <a href="https://blogs.oracle.com/theoracleblog/">Learn more</a>
         </div> 
        </div> 
        <div class="module cb37module-last"> 
         <div class="icn-img icn-circle icn-service bgslate">
          &nbsp;
         </div> 
         <div>
          <h2>Contact Us</h2>
         </div> 
         <div>
          <a href="https://www.oracle.com/corporate/contact/index.html">Learn more</a>
         </div> 
        </div> 
       </div> 
      </div> 
      <!-- /CB37v0 --> 
     </div> 
    </div> 
    <!-- =========== FOOTER ================ --> 
    <!-- U10v1 --> 
    <div id="u10v1" class="u10v0" data-trackas="footer"> 
     <div class="u10w1v1"> 
      <div class="u10w5v1"> 
       <ul class="scl-iconsv1"> 
        <li class="scl-twitter"><a href="https://twitter.com/SOAProactive" title="Follow Oracle on Twitter">Twitter</a></li> 
        <li class="scl-linkedin"><a href="https://www.linkedin.com/groups/77513" title="Oracle on LinkedIn">LinkedIn</a></li> 
        <li class="scl-feed"><a href="https://blogs.oracle.com/soaproactive/rss" title="Oracle RSS Feeds">Oracle RSS Feed</a></li> 
       </ul> 
       <div class="u10-ologov1">
        <span>Oracle</span>
       </div> 
       <h3><span>Integrated Cloud Applications &amp; Platform Services</span></h3> 
       <ul class="u10-linksv1"> 
        <li><a href="https://www.oracle.com/us/sitemaps/index.html">Site Map</a></li> 
        <li><a href="https://www.oracle.com/us/legal/privacy/overview/index.html">Legal Notices</a></li> 
        <li><a href="https://www.oracle.com/html/terms.html">Terms of Use</a></li> 
        <li><a href="https://www.oracle.com/html/privacy.html">Privacy</a></li> 
        <li class="u10last">
         <div id="teconsent"> 
         </div></li> 
       </ul> 
      </div> 
     </div> 
    </div> 
    <!-- /U10v1 --> 
    <div class="oracle-cookietracker"> 
     <input type="hidden" id="backbuttonurl" value="https://blogs.oracle.com/soaproactive/jms-step-2-using-the-queuesendjava-sample-program-to-send-a-message-to-a-jms-queue"> 
     <input type="hidden" id="backbuttontext" value="Post"> 
    </div> 
    <script src="https://www.oracleimg.com/us/assets/metrics/ora_compendiumblogs.js" language="JavaScript"></script> 
    <script type="text/javascript" src="//consent-st.truste.com/get?name=notice.js&amp;domain=oracle.com&amp;c=teconsent&amp;text=true"></script> 
    <script type="text/javascript">
var canProgProfile = true;
var omctrustejson = truste.cma.callApi("getConsentDecision","oracle.com");
if(typeof(omctrustejson) !== 'undefined' && omctrustejson!==''){
  if( omctrustejson.consentDecision === 1 ||
    omctrustejson.consentDecision === 2 ) {
    canProgProfile=false;
  }
}
 
if(canProgProfile){
  var _elqQ = _elqQ || []; _elqQ.push(['elqSetSiteId', '33']);
  _elqQ.push(['elqTrackPageView']);
  (function () {
    function async_load() {
      var s = document.createElement('script'); s.type = 'text/javascript';
      s.async = true; s.src = '//img.en25.com/i/elqCfg.min.js';
      var x = document.getElementsByTagName('script')[0]; x.parentNode.insertBefore(s, x);
    }
    if (window.addEventListener) window.addEventListener('DOMContentLoaded', async_load, false);
    else if (window.attachEvent) window.attachEvent('onload', async_load);
  })();
}
</script> 
   </div> 
   <script type="text/javascript" src="https://app.compendium.com/js/stats.js"> </script>   
  </div>
 </body>
</html>