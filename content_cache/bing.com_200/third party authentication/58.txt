<!doctype html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
 <!--<![endif]-->
 <head> 
  <meta charset="utf-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <title>tornado.auth — Third-party login with OpenID and OAuth — Tornado 4.5.2 documentation</title> 
  <link rel="shortcut icon" href="_static/favicon.ico"> 
  <link rel="stylesheet" href="https://media.readthedocs.org/css/sphinx_rtd_theme.css" type="text/css"> 
  <link rel="index" title="Index" href="genindex.html"> 
  <link rel="search" title="Search" href="search.html"> 
  <link rel="top" title="Tornado 4.5.2 documentation" href="index.html"> 
  <link rel="up" title="Integration with other services" href="integration.html"> 
  <link rel="next" title="tornado.wsgi — Interoperability with other Python frameworks and servers" href="wsgi.html"> 
  <link rel="prev" title="Integration with other services" href="integration.html"> 
  <script src="_static/js/modernizr.min.js"></script> 
  <!-- RTD Extra Head --> 
  <!-- 
Always link to the latest version, as canonical.
http://docs.readthedocs.org/en/latest/canonical.html
--> 
  <link rel="canonical" href="http://www.tornadoweb.org/en/stable/auth.html"> 
  <link rel="stylesheet" href="https://media.readthedocs.org/css/readthedocs-doc-embed.css" type="text/css"> 
  <script type="text/javascript" src="_static/readthedocs-data.js"></script> 
  <!-- Add page-specific data, which must exist in the page js, not global --> 
  <script type="text/javascript">
READTHEDOCS_DATA['page'] = 'auth' 		
READTHEDOCS_DATA['source_suffix'] = '.rst'
</script> 
  <script type="text/javascript" src="_static/readthedocs-dynamic-include.js"></script> 
  <!-- end RTD <extrahead> -->
 </head> 
 <body class="wy-body-for-nav" role="document"> 
  <div class="wy-grid-for-nav"> 
   <nav data-toggle="wy-nav-shift" class="wy-nav-side"> 
    <div class="wy-side-scroll"> 
     <div class="wy-side-nav-search"> 
      <a href="index.html" class="icon icon-home"> Tornado </a> 
      <div class="version">
        stable 
      </div> 
      <div role="search"> 
       <form id="rtd-search-form" class="wy-form" action="search.html" method="get"> 
        <input type="text" name="q" placeholder="Search docs"> 
        <input type="hidden" name="check_keywords" value="yes"> 
        <input type="hidden" name="area" value="default"> 
       </form> 
      </div> 
     </div> 
     <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation"> 
      <ul class="current"> 
       <li class="toctree-l1"><a class="reference internal" href="guide.html">User’s guide</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="webframework.html">Web framework</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="http.html">HTTP servers and clients</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="networking.html">Asynchronous networking</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="coroutine.html">Coroutines and concurrency</a></li> 
       <li class="toctree-l1 current"><a class="reference internal" href="integration.html">Integration with other services</a>
        <ul class="current"> 
         <li class="toctree-l2 current"><a class="current reference internal" href="#"><code class="docutils literal"><span class="pre">tornado.auth</span></code> — Third-party login with OpenID and OAuth</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="wsgi.html"><code class="docutils literal"><span class="pre">tornado.wsgi</span></code> — Interoperability with other Python frameworks and servers</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="asyncio.html"><code class="docutils literal"><span class="pre">tornado.platform.asyncio</span></code> — Bridge between <code class="docutils literal"><span class="pre">asyncio</span></code> and Tornado</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="caresresolver.html"><code class="docutils literal"><span class="pre">tornado.platform.caresresolver</span></code> — Asynchronous DNS Resolver using C-Ares</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="twisted.html"><code class="docutils literal"><span class="pre">tornado.platform.twisted</span></code> — Bridges between Twisted and Tornado</a></li> 
        </ul> </li> 
       <li class="toctree-l1"><a class="reference internal" href="utilities.html">Utilities</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="faq.html">Frequently Asked Questions</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="releases.html">Release notes</a></li> 
      </ul> 
     </div> 
    </div> 
   </nav> 
   <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap"> 
    <nav class="wy-nav-top" role="navigation" aria-label="top navigation"> 
     <i data-toggle="wy-nav-top" class="fa fa-bars"></i> 
     <a href="index.html">Tornado</a> 
    </nav> 
    <div class="wy-nav-content"> 
     <div class="rst-content"> 
      <div role="navigation" aria-label="breadcrumbs navigation"> 
       <ul class="wy-breadcrumbs"> 
        <li><a href="index.html">Docs</a> »</li> 
        <li><a href="integration.html">Integration with other services</a> »</li> 
        <li><code class="docutils literal"><span class="pre">tornado.auth</span></code> — Third-party login with OpenID and OAuth</li> 
        <li class="wy-breadcrumbs-aside"> <a href="https://github.com/tornadoweb/tornado/blob/stable/docs/auth.rst" class="fa fa-github"> Edit on GitHub</a> </li> 
       </ul> 
       <hr> 
      </div> 
      <div role="main" class="document" itemscope itemtype="http://schema.org/Article"> 
       <div itemprop="articleBody"> 
        <div class="section" id="tornado-auth-third-party-login-with-openid-and-oauth"> 
         <h1><code class="docutils literal"><span class="pre">tornado.auth</span></code> — Third-party login with OpenID and OAuth<a class="headerlink" href="#tornado-auth-third-party-login-with-openid-and-oauth" title="Permalink to this headline">¶</a></h1> 
         <span class="target" id="module-tornado.auth"></span>
         <p>This module contains implementations of various third-party authentication schemes.</p> 
         <p>All the classes in this file are class mixins designed to be used with the <a class="reference internal" href="web.html#tornado.web.RequestHandler" title="tornado.web.RequestHandler"><code class="xref py py-obj docutils literal"><span class="pre">tornado.web.RequestHandler</span></code></a> class. They are used in two ways:</p> 
         <ul class="simple"> 
          <li>On a login handler, use methods such as <code class="docutils literal"><span class="pre">authenticate_redirect()</span></code>, <code class="docutils literal"><span class="pre">authorize_redirect()</span></code>, and <code class="docutils literal"><span class="pre">get_authenticated_user()</span></code> to establish the user’s identity and store authentication tokens to your database and/or cookies.</li> 
          <li>In non-login handlers, use methods such as <code class="docutils literal"><span class="pre">facebook_request()</span></code> or <code class="docutils literal"><span class="pre">twitter_request()</span></code> to use the authentication tokens to make requests to the respective services.</li> 
         </ul> 
         <p>They all take slightly different arguments due to the fact all these services implement authentication and authorization slightly differently. See the individual service classes below for complete documentation.</p> 
         <p>Example usage for Google OAuth:</p> 
         <div class="highlight-default">
          <div class="highlight">
           <pre><span></span><span class="k">class</span> <span class="nc">GoogleOAuth2LoginHandler</span><span class="p">(</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">,</span>
                               <span class="n">tornado</span><span class="o">.</span><span class="n">auth</span><span class="o">.</span><span class="n">GoogleOAuth2Mixin</span><span class="p">):</span>
    <span class="nd">@tornado</span><span class="o">.</span><span class="n">gen</span><span class="o">.</span><span class="n">coroutine</span>
    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_argument</span><span class="p">(</span><span class="s1">'code'</span><span class="p">,</span> <span class="kc">False</span><span class="p">):</span>
            <span class="n">user</span> <span class="o">=</span> <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_authenticated_user</span><span class="p">(</span>
                <span class="n">redirect_uri</span><span class="o">=</span><span class="s1">'http://your.site.com/auth/google'</span><span class="p">,</span>
                <span class="n">code</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">get_argument</span><span class="p">(</span><span class="s1">'code'</span><span class="p">))</span>
            <span class="c1"># Save the user with e.g. set_secure_cookie</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">authorize_redirect</span><span class="p">(</span>
                <span class="n">redirect_uri</span><span class="o">=</span><span class="s1">'http://your.site.com/auth/google'</span><span class="p">,</span>
                <span class="n">client_id</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">settings</span><span class="p">[</span><span class="s1">'google_oauth'</span><span class="p">][</span><span class="s1">'key'</span><span class="p">],</span>
                <span class="n">scope</span><span class="o">=</span><span class="p">[</span><span class="s1">'profile'</span><span class="p">,</span> <span class="s1">'email'</span><span class="p">],</span>
                <span class="n">response_type</span><span class="o">=</span><span class="s1">'code'</span><span class="p">,</span>
                <span class="n">extra_params</span><span class="o">=</span><span class="p">{</span><span class="s1">'approval_prompt'</span><span class="p">:</span> <span class="s1">'auto'</span><span class="p">})</span>
</pre>
          </div> 
         </div> 
         <div class="versionchanged"> 
          <p><span class="versionmodified">Changed in version 4.0: </span>All of the callback interfaces in this module are now guaranteed to run their callback with an argument of <code class="docutils literal"><span class="pre">None</span></code> on error. Previously some functions would do this while others would simply terminate the request on their own. This change also ensures that errors are more consistently reported through the <code class="docutils literal"><span class="pre">Future</span></code> interfaces.</p> 
         </div> 
         <div class="section" id="common-protocols"> 
          <h2>Common protocols<a class="headerlink" href="#common-protocols" title="Permalink to this headline">¶</a></h2> 
          <p>These classes implement the OpenID and OAuth standards. They will generally need to be subclassed to use them with any particular site. The degree of customization required will vary, but in most cases overridding the class attributes (which are named beginning with underscores for historical reasons) should be sufficient.</p> 
          <dl class="class"> 
           <dt id="tornado.auth.OpenIdMixin"> 
            <em class="property">class </em>
            <code class="descclassname">tornado.auth.</code>
            <code class="descname">OpenIdMixin</code>
            <a class="reference internal" href="_modules/tornado/auth.html#OpenIdMixin"><span class="viewcode-link">[source]</span></a>
            <a class="headerlink" href="#tornado.auth.OpenIdMixin" title="Permalink to this definition">¶</a>
           </dt> 
           <dd>
            <p>Abstract implementation of OpenID and Attribute Exchange.</p> 
            <p>Class attributes:</p> 
            <ul class="simple"> 
             <li><code class="docutils literal"><span class="pre">_OPENID_ENDPOINT</span></code>: the identity provider’s URI.</li> 
            </ul> 
            <dl class="method"> 
             <dt id="tornado.auth.OpenIdMixin.authenticate_redirect"> 
              <code class="descname">authenticate_redirect</code>
              <span class="sig-paren">(</span>
              <em>callback_uri=None, ax_attrs=['name', 'email', 'language', 'username'], callback=None</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OpenIdMixin.authenticate_redirect"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OpenIdMixin.authenticate_redirect" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Redirects to the authentication URL for this service.</p> 
              <p>After authentication, the service will redirect back to the given callback URI with additional parameters including <code class="docutils literal"><span class="pre">openid.mode</span></code>.</p> 
              <p>We request the given attributes for the authenticated user by default (name, email, language, and username). If you don’t need all those attributes for your app, you can request fewer with the ax_attrs keyword argument.</p> 
              <div class="versionchanged"> 
               <p><span class="versionmodified">Changed in version 3.1: </span>Returns a <a class="reference internal" href="concurrent.html#tornado.concurrent.Future" title="tornado.concurrent.Future"><code class="xref py py-obj docutils literal"><span class="pre">Future</span></code></a> and takes an optional callback. These are not strictly necessary as this method is synchronous, but they are supplied for consistency with <a class="reference internal" href="#tornado.auth.OAuthMixin.authorize_redirect" title="tornado.auth.OAuthMixin.authorize_redirect"><code class="xref py py-obj docutils literal"><span class="pre">OAuthMixin.authorize_redirect</span></code></a>.</p> 
              </div> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.OpenIdMixin.get_authenticated_user"> 
              <code class="descname">get_authenticated_user</code>
              <span class="sig-paren">(</span>
              <em>callback</em>, 
              <em>http_client=None</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OpenIdMixin.get_authenticated_user"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OpenIdMixin.get_authenticated_user" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Fetches the authenticated user data upon redirect.</p> 
              <p>This method should be called by the handler that receives the redirect from the <a class="reference internal" href="#tornado.auth.OpenIdMixin.authenticate_redirect" title="tornado.auth.OpenIdMixin.authenticate_redirect"><code class="xref py py-obj docutils literal"><span class="pre">authenticate_redirect()</span></code></a> method (which is often the same as the one that calls it; in that case you would call <a class="reference internal" href="#tornado.auth.OpenIdMixin.get_authenticated_user" title="tornado.auth.OpenIdMixin.get_authenticated_user"><code class="xref py py-obj docutils literal"><span class="pre">get_authenticated_user</span></code></a> if the <code class="docutils literal"><span class="pre">openid.mode</span></code> parameter is present and <a class="reference internal" href="#tornado.auth.OpenIdMixin.authenticate_redirect" title="tornado.auth.OpenIdMixin.authenticate_redirect"><code class="xref py py-obj docutils literal"><span class="pre">authenticate_redirect</span></code></a> if it is not).</p> 
              <p>The result of this method will generally be used to set a cookie.</p> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.OpenIdMixin.get_auth_http_client"> 
              <code class="descname">get_auth_http_client</code>
              <span class="sig-paren">(</span>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OpenIdMixin.get_auth_http_client"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OpenIdMixin.get_auth_http_client" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Returns the <a class="reference internal" href="httpclient.html#tornado.httpclient.AsyncHTTPClient" title="tornado.httpclient.AsyncHTTPClient"><code class="xref py py-obj docutils literal"><span class="pre">AsyncHTTPClient</span></code></a> instance to be used for auth requests.</p> 
              <p>May be overridden by subclasses to use an HTTP client other than the default.</p> 
             </dd>
            </dl> 
           </dd>
          </dl> 
          <dl class="class"> 
           <dt id="tornado.auth.OAuthMixin"> 
            <em class="property">class </em>
            <code class="descclassname">tornado.auth.</code>
            <code class="descname">OAuthMixin</code>
            <a class="reference internal" href="_modules/tornado/auth.html#OAuthMixin"><span class="viewcode-link">[source]</span></a>
            <a class="headerlink" href="#tornado.auth.OAuthMixin" title="Permalink to this definition">¶</a>
           </dt> 
           <dd>
            <p>Abstract implementation of OAuth 1.0 and 1.0a.</p> 
            <p>See <a class="reference internal" href="#tornado.auth.TwitterMixin" title="tornado.auth.TwitterMixin"><code class="xref py py-obj docutils literal"><span class="pre">TwitterMixin</span></code></a> below for an example implementation.</p> 
            <p>Class attributes:</p> 
            <ul class="simple"> 
             <li><code class="docutils literal"><span class="pre">_OAUTH_AUTHORIZE_URL</span></code>: The service’s OAuth authorization url.</li> 
             <li><code class="docutils literal"><span class="pre">_OAUTH_ACCESS_TOKEN_URL</span></code>: The service’s OAuth access token url.</li> 
             <li><code class="docutils literal"><span class="pre">_OAUTH_VERSION</span></code>: May be either “1.0” or “1.0a”.</li> 
             <li><code class="docutils literal"><span class="pre">_OAUTH_NO_CALLBACKS</span></code>: Set this to True if the service requires advance registration of callbacks.</li> 
            </ul> 
            <p>Subclasses must also override the <a class="reference internal" href="#tornado.auth.OAuthMixin._oauth_get_user_future" title="tornado.auth.OAuthMixin._oauth_get_user_future"><code class="xref py py-obj docutils literal"><span class="pre">_oauth_get_user_future</span></code></a> and <a class="reference internal" href="#tornado.auth.OAuthMixin._oauth_consumer_token" title="tornado.auth.OAuthMixin._oauth_consumer_token"><code class="xref py py-obj docutils literal"><span class="pre">_oauth_consumer_token</span></code></a> methods.</p> 
            <dl class="method"> 
             <dt id="tornado.auth.OAuthMixin.authorize_redirect"> 
              <code class="descname">authorize_redirect</code>
              <span class="sig-paren">(</span>
              <em>callback_uri=None</em>, 
              <em>extra_params=None</em>, 
              <em>http_client=None</em>, 
              <em>callback=None</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OAuthMixin.authorize_redirect"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OAuthMixin.authorize_redirect" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Redirects the user to obtain OAuth authorization for this service.</p> 
              <p>The <code class="docutils literal"><span class="pre">callback_uri</span></code> may be omitted if you have previously registered a callback URI with the third-party service. For some services (including Friendfeed), you must use a previously-registered callback URI and cannot specify a callback via this method.</p> 
              <p>This method sets a cookie called <code class="docutils literal"><span class="pre">_oauth_request_token</span></code> which is subsequently used (and cleared) in <a class="reference internal" href="#tornado.auth.OAuthMixin.get_authenticated_user" title="tornado.auth.OAuthMixin.get_authenticated_user"><code class="xref py py-obj docutils literal"><span class="pre">get_authenticated_user</span></code></a> for security purposes.</p> 
              <p>Note that this method is asynchronous, although it calls <a class="reference internal" href="web.html#tornado.web.RequestHandler.finish" title="tornado.web.RequestHandler.finish"><code class="xref py py-obj docutils literal"><span class="pre">RequestHandler.finish</span></code></a> for you so it may not be necessary to pass a callback or use the <a class="reference internal" href="concurrent.html#tornado.concurrent.Future" title="tornado.concurrent.Future"><code class="xref py py-obj docutils literal"><span class="pre">Future</span></code></a> it returns. However, if this method is called from a function decorated with <a class="reference internal" href="gen.html#tornado.gen.coroutine" title="tornado.gen.coroutine"><code class="xref py py-obj docutils literal"><span class="pre">gen.coroutine</span></code></a>, you must call it with <code class="docutils literal"><span class="pre">yield</span></code> to keep the response from being closed prematurely.</p> 
              <div class="versionchanged"> 
               <p><span class="versionmodified">Changed in version 3.1: </span>Now returns a <a class="reference internal" href="concurrent.html#tornado.concurrent.Future" title="tornado.concurrent.Future"><code class="xref py py-obj docutils literal"><span class="pre">Future</span></code></a> and takes an optional callback, for compatibility with <a class="reference internal" href="gen.html#tornado.gen.coroutine" title="tornado.gen.coroutine"><code class="xref py py-obj docutils literal"><span class="pre">gen.coroutine</span></code></a>.</p> 
              </div> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.OAuthMixin.get_authenticated_user"> 
              <code class="descname">get_authenticated_user</code>
              <span class="sig-paren">(</span>
              <em>callback</em>, 
              <em>http_client=None</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OAuthMixin.get_authenticated_user"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OAuthMixin.get_authenticated_user" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Gets the OAuth authorized user and access token.</p> 
              <p>This method should be called from the handler for your OAuth callback URL to complete the registration process. We run the callback with the authenticated user dictionary. This dictionary will contain an <code class="docutils literal"><span class="pre">access_key</span></code> which can be used to make authorized requests to this service on behalf of the user. The dictionary will also contain other fields such as <code class="docutils literal"><span class="pre">name</span></code>, depending on the service used.</p> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.OAuthMixin._oauth_consumer_token"> 
              <code class="descname">_oauth_consumer_token</code>
              <span class="sig-paren">(</span>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OAuthMixin._oauth_consumer_token"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OAuthMixin._oauth_consumer_token" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Subclasses must override this to return their OAuth consumer keys.</p> 
              <p>The return value should be a <a class="reference external" href="https://docs.python.org/3.5/library/stdtypes.html#dict" title="(in Python v3.5)"><code class="xref py py-obj docutils literal"><span class="pre">dict</span></code></a> with keys <code class="docutils literal"><span class="pre">key</span></code> and <code class="docutils literal"><span class="pre">secret</span></code>.</p> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.OAuthMixin._oauth_get_user_future"> 
              <code class="descname">_oauth_get_user_future</code>
              <span class="sig-paren">(</span>
              <em>access_token</em>, 
              <em>callback</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OAuthMixin._oauth_get_user_future"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OAuthMixin._oauth_get_user_future" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Subclasses must override this to get basic information about the user.</p> 
              <p>Should return a <a class="reference internal" href="concurrent.html#tornado.concurrent.Future" title="tornado.concurrent.Future"><code class="xref py py-obj docutils literal"><span class="pre">Future</span></code></a> whose result is a dictionary containing information about the user, which may have been retrieved by using <code class="docutils literal"><span class="pre">access_token</span></code> to make a request to the service.</p> 
              <p>The access token will be added to the returned dictionary to make the result of <a class="reference internal" href="#tornado.auth.OAuthMixin.get_authenticated_user" title="tornado.auth.OAuthMixin.get_authenticated_user"><code class="xref py py-obj docutils literal"><span class="pre">get_authenticated_user</span></code></a>.</p> 
              <p>For backwards compatibility, the callback-based <code class="docutils literal"><span class="pre">_oauth_get_user</span></code> method is also supported.</p> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.OAuthMixin.get_auth_http_client"> 
              <code class="descname">get_auth_http_client</code>
              <span class="sig-paren">(</span>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OAuthMixin.get_auth_http_client"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OAuthMixin.get_auth_http_client" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Returns the <a class="reference internal" href="httpclient.html#tornado.httpclient.AsyncHTTPClient" title="tornado.httpclient.AsyncHTTPClient"><code class="xref py py-obj docutils literal"><span class="pre">AsyncHTTPClient</span></code></a> instance to be used for auth requests.</p> 
              <p>May be overridden by subclasses to use an HTTP client other than the default.</p> 
             </dd>
            </dl> 
           </dd>
          </dl> 
          <dl class="class"> 
           <dt id="tornado.auth.OAuth2Mixin"> 
            <em class="property">class </em>
            <code class="descclassname">tornado.auth.</code>
            <code class="descname">OAuth2Mixin</code>
            <a class="reference internal" href="_modules/tornado/auth.html#OAuth2Mixin"><span class="viewcode-link">[source]</span></a>
            <a class="headerlink" href="#tornado.auth.OAuth2Mixin" title="Permalink to this definition">¶</a>
           </dt> 
           <dd>
            <p>Abstract implementation of OAuth 2.0.</p> 
            <p>See <a class="reference internal" href="#tornado.auth.FacebookGraphMixin" title="tornado.auth.FacebookGraphMixin"><code class="xref py py-obj docutils literal"><span class="pre">FacebookGraphMixin</span></code></a> or <a class="reference internal" href="#tornado.auth.GoogleOAuth2Mixin" title="tornado.auth.GoogleOAuth2Mixin"><code class="xref py py-obj docutils literal"><span class="pre">GoogleOAuth2Mixin</span></code></a> below for example implementations.</p> 
            <p>Class attributes:</p> 
            <ul class="simple"> 
             <li><code class="docutils literal"><span class="pre">_OAUTH_AUTHORIZE_URL</span></code>: The service’s authorization url.</li> 
             <li><code class="docutils literal"><span class="pre">_OAUTH_ACCESS_TOKEN_URL</span></code>: The service’s access token url.</li> 
            </ul> 
            <dl class="method"> 
             <dt id="tornado.auth.OAuth2Mixin.authorize_redirect"> 
              <code class="descname">authorize_redirect</code>
              <span class="sig-paren">(</span>
              <em>redirect_uri=None</em>, 
              <em>client_id=None</em>, 
              <em>client_secret=None</em>, 
              <em>extra_params=None</em>, 
              <em>callback=None</em>, 
              <em>scope=None</em>, 
              <em>response_type='code'</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OAuth2Mixin.authorize_redirect"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OAuth2Mixin.authorize_redirect" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Redirects the user to obtain OAuth authorization for this service.</p> 
              <p>Some providers require that you register a redirect URL with your application instead of passing one via this method. You should call this method to log the user in, and then call <code class="docutils literal"><span class="pre">get_authenticated_user</span></code> in the handler for your redirect URL to complete the authorization process.</p> 
              <div class="versionchanged"> 
               <p><span class="versionmodified">Changed in version 3.1: </span>Returns a <a class="reference internal" href="concurrent.html#tornado.concurrent.Future" title="tornado.concurrent.Future"><code class="xref py py-obj docutils literal"><span class="pre">Future</span></code></a> and takes an optional callback. These are not strictly necessary as this method is synchronous, but they are supplied for consistency with <a class="reference internal" href="#tornado.auth.OAuthMixin.authorize_redirect" title="tornado.auth.OAuthMixin.authorize_redirect"><code class="xref py py-obj docutils literal"><span class="pre">OAuthMixin.authorize_redirect</span></code></a>.</p> 
              </div> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.OAuth2Mixin.oauth2_request"> 
              <code class="descname">oauth2_request</code>
              <span class="sig-paren">(</span>
              <em>url</em>, 
              <em>callback</em>, 
              <em>access_token=None</em>, 
              <em>post_args=None</em>, 
              <em>**args</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OAuth2Mixin.oauth2_request"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OAuth2Mixin.oauth2_request" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Fetches the given URL auth an OAuth2 access token.</p> 
              <p>If the request is a POST, <code class="docutils literal"><span class="pre">post_args</span></code> should be provided. Query string arguments should be given as keyword arguments.</p> 
              <p>Example usage:</p> 
              <p>..testcode:</p> 
              <div class="highlight-default">
               <div class="highlight">
                <pre><span></span><span class="k">class</span> <span class="nc">MainHandler</span><span class="p">(</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">,</span>
                  <span class="n">tornado</span><span class="o">.</span><span class="n">auth</span><span class="o">.</span><span class="n">FacebookGraphMixin</span><span class="p">):</span>
    <span class="nd">@tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">authenticated</span>
    <span class="nd">@tornado</span><span class="o">.</span><span class="n">gen</span><span class="o">.</span><span class="n">coroutine</span>
    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">new_entry</span> <span class="o">=</span> <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">oauth2_request</span><span class="p">(</span>
            <span class="s2">"https://graph.facebook.com/me/feed"</span><span class="p">,</span>
            <span class="n">post_args</span><span class="o">=</span><span class="p">{</span><span class="s2">"message"</span><span class="p">:</span> <span class="s2">"I am posting from my Tornado application!"</span><span class="p">},</span>
            <span class="n">access_token</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">current_user</span><span class="p">[</span><span class="s2">"access_token"</span><span class="p">])</span>

        <span class="k">if</span> <span class="ow">not</span> <span class="n">new_entry</span><span class="p">:</span>
            <span class="c1"># Call failed; perhaps missing permission?</span>
            <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">authorize_redirect</span><span class="p">()</span>
            <span class="k">return</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">finish</span><span class="p">(</span><span class="s2">"Posted a message!"</span><span class="p">)</span>
</pre>
               </div> 
              </div> 
              <div class="versionadded"> 
               <p><span class="versionmodified">New in version 4.3.</span></p> 
              </div> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.OAuth2Mixin.get_auth_http_client"> 
              <code class="descname">get_auth_http_client</code>
              <span class="sig-paren">(</span>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#OAuth2Mixin.get_auth_http_client"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.OAuth2Mixin.get_auth_http_client" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Returns the <a class="reference internal" href="httpclient.html#tornado.httpclient.AsyncHTTPClient" title="tornado.httpclient.AsyncHTTPClient"><code class="xref py py-obj docutils literal"><span class="pre">AsyncHTTPClient</span></code></a> instance to be used for auth requests.</p> 
              <p>May be overridden by subclasses to use an HTTP client other than the default.</p> 
              <div class="versionadded"> 
               <p><span class="versionmodified">New in version 4.3.</span></p> 
              </div> 
             </dd>
            </dl> 
           </dd>
          </dl> 
         </div> 
         <div class="section" id="google"> 
          <h2>Google<a class="headerlink" href="#google" title="Permalink to this headline">¶</a></h2> 
          <dl class="class"> 
           <dt id="tornado.auth.GoogleOAuth2Mixin"> 
            <em class="property">class </em>
            <code class="descclassname">tornado.auth.</code>
            <code class="descname">GoogleOAuth2Mixin</code>
            <a class="reference internal" href="_modules/tornado/auth.html#GoogleOAuth2Mixin"><span class="viewcode-link">[source]</span></a>
            <a class="headerlink" href="#tornado.auth.GoogleOAuth2Mixin" title="Permalink to this definition">¶</a>
           </dt> 
           <dd>
            <p>Google authentication using OAuth2.</p> 
            <p>In order to use, register your application with Google and copy the relevant parameters to your application settings.</p> 
            <ul class="simple"> 
             <li>Go to the Google Dev Console at <a class="reference external" href="http://console.developers.google.com">http://console.developers.google.com</a></li> 
             <li>Select a project, or create a new one.</li> 
             <li>In the sidebar on the left, select APIs &amp; Auth.</li> 
             <li>In the list of APIs, find the Google+ API service and set it to ON.</li> 
             <li>In the sidebar on the left, select Credentials.</li> 
             <li>In the OAuth section of the page, select Create New Client ID.</li> 
             <li>Set the Redirect URI to point to your auth handler</li> 
             <li>Copy the “Client secret” and “Client ID” to the application settings as {“google_oauth”: {“key”: CLIENT_ID, “secret”: CLIENT_SECRET}}</li> 
            </ul> 
            <div class="versionadded"> 
             <p><span class="versionmodified">New in version 3.2.</span></p> 
            </div> 
            <dl class="method"> 
             <dt id="tornado.auth.GoogleOAuth2Mixin.get_authenticated_user"> 
              <code class="descname">get_authenticated_user</code>
              <span class="sig-paren">(</span>
              <em>redirect_uri</em>, 
              <em>code</em>, 
              <em>callback</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#GoogleOAuth2Mixin.get_authenticated_user"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.GoogleOAuth2Mixin.get_authenticated_user" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Handles the login for the Google user, returning an access token.</p> 
              <p>The result is a dictionary containing an <code class="docutils literal"><span class="pre">access_token</span></code> field ([among others](<a class="reference external" href="https://developers.google.com/identity/protocols/OAuth2WebServer#handlingtheresponse">https://developers.google.com/identity/protocols/OAuth2WebServer#handlingtheresponse</a>)). Unlike other <code class="docutils literal"><span class="pre">get_authenticated_user</span></code> methods in this package, this method does not return any additional information about the user. The returned access token can be used with <a class="reference internal" href="#tornado.auth.OAuth2Mixin.oauth2_request" title="tornado.auth.OAuth2Mixin.oauth2_request"><code class="xref py py-obj docutils literal"><span class="pre">OAuth2Mixin.oauth2_request</span></code></a> to request additional information (perhaps from <code class="docutils literal"><span class="pre">https://www.googleapis.com/oauth2/v2/userinfo</span></code>)</p> 
              <p>Example usage:</p> 
              <div class="highlight-default">
               <div class="highlight">
                <pre><span></span><span class="k">class</span> <span class="nc">GoogleOAuth2LoginHandler</span><span class="p">(</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">,</span>
                               <span class="n">tornado</span><span class="o">.</span><span class="n">auth</span><span class="o">.</span><span class="n">GoogleOAuth2Mixin</span><span class="p">):</span>
    <span class="nd">@tornado</span><span class="o">.</span><span class="n">gen</span><span class="o">.</span><span class="n">coroutine</span>
    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_argument</span><span class="p">(</span><span class="s1">'code'</span><span class="p">,</span> <span class="kc">False</span><span class="p">):</span>
            <span class="n">access</span> <span class="o">=</span> <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_authenticated_user</span><span class="p">(</span>
                <span class="n">redirect_uri</span><span class="o">=</span><span class="s1">'http://your.site.com/auth/google'</span><span class="p">,</span>
                <span class="n">code</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">get_argument</span><span class="p">(</span><span class="s1">'code'</span><span class="p">))</span>
            <span class="n">user</span> <span class="o">=</span> <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">oauth2_request</span><span class="p">(</span>
                <span class="s2">"https://www.googleapis.com/oauth2/v1/userinfo"</span><span class="p">,</span>
                <span class="n">access_token</span><span class="o">=</span><span class="n">access</span><span class="p">[</span><span class="s2">"access_token"</span><span class="p">])</span>
            <span class="c1"># Save the user and access token with</span>
            <span class="c1"># e.g. set_secure_cookie.</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">authorize_redirect</span><span class="p">(</span>
                <span class="n">redirect_uri</span><span class="o">=</span><span class="s1">'http://your.site.com/auth/google'</span><span class="p">,</span>
                <span class="n">client_id</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">settings</span><span class="p">[</span><span class="s1">'google_oauth'</span><span class="p">][</span><span class="s1">'key'</span><span class="p">],</span>
                <span class="n">scope</span><span class="o">=</span><span class="p">[</span><span class="s1">'profile'</span><span class="p">,</span> <span class="s1">'email'</span><span class="p">],</span>
                <span class="n">response_type</span><span class="o">=</span><span class="s1">'code'</span><span class="p">,</span>
                <span class="n">extra_params</span><span class="o">=</span><span class="p">{</span><span class="s1">'approval_prompt'</span><span class="p">:</span> <span class="s1">'auto'</span><span class="p">})</span>
</pre>
               </div> 
              </div> 
             </dd>
            </dl> 
           </dd>
          </dl> 
         </div> 
         <div class="section" id="facebook"> 
          <h2>Facebook<a class="headerlink" href="#facebook" title="Permalink to this headline">¶</a></h2> 
          <dl class="class"> 
           <dt id="tornado.auth.FacebookGraphMixin"> 
            <em class="property">class </em>
            <code class="descclassname">tornado.auth.</code>
            <code class="descname">FacebookGraphMixin</code>
            <a class="reference internal" href="_modules/tornado/auth.html#FacebookGraphMixin"><span class="viewcode-link">[source]</span></a>
            <a class="headerlink" href="#tornado.auth.FacebookGraphMixin" title="Permalink to this definition">¶</a>
           </dt> 
           <dd>
            <p>Facebook authentication using the new Graph API and OAuth2.</p> 
            <dl class="method"> 
             <dt id="tornado.auth.FacebookGraphMixin.get_authenticated_user"> 
              <code class="descname">get_authenticated_user</code>
              <span class="sig-paren">(</span>
              <em>redirect_uri</em>, 
              <em>client_id</em>, 
              <em>client_secret</em>, 
              <em>code</em>, 
              <em>callback</em>, 
              <em>extra_fields=None</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#FacebookGraphMixin.get_authenticated_user"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.FacebookGraphMixin.get_authenticated_user" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Handles the login for the Facebook user, returning a user object.</p> 
              <p>Example usage:</p> 
              <div class="highlight-default">
               <div class="highlight">
                <pre><span></span><span class="k">class</span> <span class="nc">FacebookGraphLoginHandler</span><span class="p">(</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">,</span>
                                <span class="n">tornado</span><span class="o">.</span><span class="n">auth</span><span class="o">.</span><span class="n">FacebookGraphMixin</span><span class="p">):</span>
  <span class="nd">@tornado</span><span class="o">.</span><span class="n">gen</span><span class="o">.</span><span class="n">coroutine</span>
  <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
      <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_argument</span><span class="p">(</span><span class="s2">"code"</span><span class="p">,</span> <span class="kc">False</span><span class="p">):</span>
          <span class="n">user</span> <span class="o">=</span> <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_authenticated_user</span><span class="p">(</span>
              <span class="n">redirect_uri</span><span class="o">=</span><span class="s1">'/auth/facebookgraph/'</span><span class="p">,</span>
              <span class="n">client_id</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">settings</span><span class="p">[</span><span class="s2">"facebook_api_key"</span><span class="p">],</span>
              <span class="n">client_secret</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">settings</span><span class="p">[</span><span class="s2">"facebook_secret"</span><span class="p">],</span>
              <span class="n">code</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">get_argument</span><span class="p">(</span><span class="s2">"code"</span><span class="p">))</span>
          <span class="c1"># Save the user with e.g. set_secure_cookie</span>
      <span class="k">else</span><span class="p">:</span>
          <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">authorize_redirect</span><span class="p">(</span>
              <span class="n">redirect_uri</span><span class="o">=</span><span class="s1">'/auth/facebookgraph/'</span><span class="p">,</span>
              <span class="n">client_id</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">settings</span><span class="p">[</span><span class="s2">"facebook_api_key"</span><span class="p">],</span>
              <span class="n">extra_params</span><span class="o">=</span><span class="p">{</span><span class="s2">"scope"</span><span class="p">:</span> <span class="s2">"read_stream,offline_access"</span><span class="p">})</span>
</pre>
               </div> 
              </div> 
              <p>This method returns a dictionary which may contain the following fields:</p> 
              <ul class="simple"> 
               <li><code class="docutils literal"><span class="pre">access_token</span></code>, a string which may be passed to <a class="reference internal" href="#tornado.auth.FacebookGraphMixin.facebook_request" title="tornado.auth.FacebookGraphMixin.facebook_request"><code class="xref py py-obj docutils literal"><span class="pre">facebook_request</span></code></a></li> 
               <li><code class="docutils literal"><span class="pre">session_expires</span></code>, an integer encoded as a string representing the time until the access token expires in seconds. This field should be used like <code class="docutils literal"><span class="pre">int(user['session_expires'])</span></code>; in a future version of Tornado it will change from a string to an integer.</li> 
               <li><code class="docutils literal"><span class="pre">id</span></code>, <code class="docutils literal"><span class="pre">name</span></code>, <code class="docutils literal"><span class="pre">first_name</span></code>, <code class="docutils literal"><span class="pre">last_name</span></code>, <code class="docutils literal"><span class="pre">locale</span></code>, <code class="docutils literal"><span class="pre">picture</span></code>, <code class="docutils literal"><span class="pre">link</span></code>, plus any fields named in the <code class="docutils literal"><span class="pre">extra_fields</span></code> argument. These fields are copied from the Facebook graph API <a class="reference external" href="https://developers.facebook.com/docs/graph-api/reference/user">user object</a></li> 
              </ul> 
              <div class="versionchanged"> 
               <p><span class="versionmodified">Changed in version 4.5: </span>The <code class="docutils literal"><span class="pre">session_expires</span></code> field was updated to support changes made to the Facebook API in March 2017.</p> 
              </div> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.FacebookGraphMixin.facebook_request"> 
              <code class="descname">facebook_request</code>
              <span class="sig-paren">(</span>
              <em>path</em>, 
              <em>callback</em>, 
              <em>access_token=None</em>, 
              <em>post_args=None</em>, 
              <em>**args</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#FacebookGraphMixin.facebook_request"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.FacebookGraphMixin.facebook_request" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Fetches the given relative API path, e.g., “/btaylor/picture”</p> 
              <p>If the request is a POST, <code class="docutils literal"><span class="pre">post_args</span></code> should be provided. Query string arguments should be given as keyword arguments.</p> 
              <p>An introduction to the Facebook Graph API can be found at <a class="reference external" href="http://developers.facebook.com/docs/api">http://developers.facebook.com/docs/api</a></p> 
              <p>Many methods require an OAuth access token which you can obtain through <a class="reference internal" href="#tornado.auth.OAuth2Mixin.authorize_redirect" title="tornado.auth.OAuth2Mixin.authorize_redirect"><code class="xref py py-obj docutils literal"><span class="pre">authorize_redirect</span></code></a> and <a class="reference internal" href="#tornado.auth.FacebookGraphMixin.get_authenticated_user" title="tornado.auth.FacebookGraphMixin.get_authenticated_user"><code class="xref py py-obj docutils literal"><span class="pre">get_authenticated_user</span></code></a>. The user returned through that process includes an <code class="docutils literal"><span class="pre">access_token</span></code> attribute that can be used to make authenticated requests via this method.</p> 
              <p>Example usage:</p> 
              <p>..testcode:</p> 
              <div class="highlight-default">
               <div class="highlight">
                <pre><span></span><span class="k">class</span> <span class="nc">MainHandler</span><span class="p">(</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">,</span>
                  <span class="n">tornado</span><span class="o">.</span><span class="n">auth</span><span class="o">.</span><span class="n">FacebookGraphMixin</span><span class="p">):</span>
    <span class="nd">@tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">authenticated</span>
    <span class="nd">@tornado</span><span class="o">.</span><span class="n">gen</span><span class="o">.</span><span class="n">coroutine</span>
    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">new_entry</span> <span class="o">=</span> <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">facebook_request</span><span class="p">(</span>
            <span class="s2">"/me/feed"</span><span class="p">,</span>
            <span class="n">post_args</span><span class="o">=</span><span class="p">{</span><span class="s2">"message"</span><span class="p">:</span> <span class="s2">"I am posting from my Tornado application!"</span><span class="p">},</span>
            <span class="n">access_token</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">current_user</span><span class="p">[</span><span class="s2">"access_token"</span><span class="p">])</span>

        <span class="k">if</span> <span class="ow">not</span> <span class="n">new_entry</span><span class="p">:</span>
            <span class="c1"># Call failed; perhaps missing permission?</span>
            <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">authorize_redirect</span><span class="p">()</span>
            <span class="k">return</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">finish</span><span class="p">(</span><span class="s2">"Posted a message!"</span><span class="p">)</span>
</pre>
               </div> 
              </div> 
              <p>The given path is relative to <code class="docutils literal"><span class="pre">self._FACEBOOK_BASE_URL</span></code>, by default “<a class="reference external" href="https://graph.facebook.com">https://graph.facebook.com</a>”.</p> 
              <p>This method is a wrapper around <a class="reference internal" href="#tornado.auth.OAuth2Mixin.oauth2_request" title="tornado.auth.OAuth2Mixin.oauth2_request"><code class="xref py py-obj docutils literal"><span class="pre">OAuth2Mixin.oauth2_request</span></code></a>; the only difference is that this method takes a relative path, while <code class="docutils literal"><span class="pre">oauth2_request</span></code> takes a complete url.</p> 
              <div class="versionchanged"> 
               <p><span class="versionmodified">Changed in version 3.1: </span>Added the ability to override <code class="docutils literal"><span class="pre">self._FACEBOOK_BASE_URL</span></code>.</p> 
              </div> 
             </dd>
            </dl> 
           </dd>
          </dl> 
         </div> 
         <div class="section" id="twitter"> 
          <h2>Twitter<a class="headerlink" href="#twitter" title="Permalink to this headline">¶</a></h2> 
          <dl class="class"> 
           <dt id="tornado.auth.TwitterMixin"> 
            <em class="property">class </em>
            <code class="descclassname">tornado.auth.</code>
            <code class="descname">TwitterMixin</code>
            <a class="reference internal" href="_modules/tornado/auth.html#TwitterMixin"><span class="viewcode-link">[source]</span></a>
            <a class="headerlink" href="#tornado.auth.TwitterMixin" title="Permalink to this definition">¶</a>
           </dt> 
           <dd>
            <p>Twitter OAuth authentication.</p> 
            <p>To authenticate with Twitter, register your application with Twitter at <a class="reference external" href="http://twitter.com/apps">http://twitter.com/apps</a>. Then copy your Consumer Key and Consumer Secret to the application <a class="reference internal" href="web.html#tornado.web.Application.settings" title="tornado.web.Application.settings"><code class="xref py py-obj docutils literal"><span class="pre">settings</span></code></a> <code class="docutils literal"><span class="pre">twitter_consumer_key</span></code> and <code class="docutils literal"><span class="pre">twitter_consumer_secret</span></code>. Use this mixin on the handler for the URL you registered as your application’s callback URL.</p> 
            <p>When your application is set up, you can use this mixin like this to authenticate the user with Twitter and get access to their stream:</p> 
            <div class="highlight-default">
             <div class="highlight">
              <pre><span></span><span class="k">class</span> <span class="nc">TwitterLoginHandler</span><span class="p">(</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">,</span>
                          <span class="n">tornado</span><span class="o">.</span><span class="n">auth</span><span class="o">.</span><span class="n">TwitterMixin</span><span class="p">):</span>
    <span class="nd">@tornado</span><span class="o">.</span><span class="n">gen</span><span class="o">.</span><span class="n">coroutine</span>
    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_argument</span><span class="p">(</span><span class="s2">"oauth_token"</span><span class="p">,</span> <span class="kc">None</span><span class="p">):</span>
            <span class="n">user</span> <span class="o">=</span> <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_authenticated_user</span><span class="p">()</span>
            <span class="c1"># Save the user using e.g. set_secure_cookie()</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">authorize_redirect</span><span class="p">()</span>
</pre>
             </div> 
            </div> 
            <p>The user object returned by <a class="reference internal" href="#tornado.auth.OAuthMixin.get_authenticated_user" title="tornado.auth.OAuthMixin.get_authenticated_user"><code class="xref py py-obj docutils literal"><span class="pre">get_authenticated_user</span></code></a> includes the attributes <code class="docutils literal"><span class="pre">username</span></code>, <code class="docutils literal"><span class="pre">name</span></code>, <code class="docutils literal"><span class="pre">access_token</span></code>, and all of the custom Twitter user attributes described at <a class="reference external" href="https://dev.twitter.com/docs/api/1.1/get/users/show">https://dev.twitter.com/docs/api/1.1/get/users/show</a></p> 
            <dl class="method"> 
             <dt id="tornado.auth.TwitterMixin.authenticate_redirect"> 
              <code class="descname">authenticate_redirect</code>
              <span class="sig-paren">(</span>
              <em>callback_uri=None</em>, 
              <em>callback=None</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#TwitterMixin.authenticate_redirect"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.TwitterMixin.authenticate_redirect" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Just like <a class="reference internal" href="#tornado.auth.OAuthMixin.authorize_redirect" title="tornado.auth.OAuthMixin.authorize_redirect"><code class="xref py py-obj docutils literal"><span class="pre">authorize_redirect</span></code></a>, but auto-redirects if authorized.</p> 
              <p>This is generally the right interface to use if you are using Twitter for single-sign on.</p> 
              <div class="versionchanged"> 
               <p><span class="versionmodified">Changed in version 3.1: </span>Now returns a <a class="reference internal" href="concurrent.html#tornado.concurrent.Future" title="tornado.concurrent.Future"><code class="xref py py-obj docutils literal"><span class="pre">Future</span></code></a> and takes an optional callback, for compatibility with <a class="reference internal" href="gen.html#tornado.gen.coroutine" title="tornado.gen.coroutine"><code class="xref py py-obj docutils literal"><span class="pre">gen.coroutine</span></code></a>.</p> 
              </div> 
             </dd>
            </dl> 
            <dl class="method"> 
             <dt id="tornado.auth.TwitterMixin.twitter_request"> 
              <code class="descname">twitter_request</code>
              <span class="sig-paren">(</span>
              <em>path</em>, 
              <em>callback=None</em>, 
              <em>access_token=None</em>, 
              <em>post_args=None</em>, 
              <em>**args</em>
              <span class="sig-paren">)</span>
              <a class="reference internal" href="_modules/tornado/auth.html#TwitterMixin.twitter_request"><span class="viewcode-link">[source]</span></a>
              <a class="headerlink" href="#tornado.auth.TwitterMixin.twitter_request" title="Permalink to this definition">¶</a>
             </dt> 
             <dd>
              <p>Fetches the given API path, e.g., <code class="docutils literal"><span class="pre">statuses/user_timeline/btaylor</span></code></p> 
              <p>The path should not include the format or API version number. (we automatically use JSON format and API version 1).</p> 
              <p>If the request is a POST, <code class="docutils literal"><span class="pre">post_args</span></code> should be provided. Query string arguments should be given as keyword arguments.</p> 
              <p>All the Twitter methods are documented at <a class="reference external" href="http://dev.twitter.com/">http://dev.twitter.com/</a></p> 
              <p>Many methods require an OAuth access token which you can obtain through <a class="reference internal" href="#tornado.auth.OAuthMixin.authorize_redirect" title="tornado.auth.OAuthMixin.authorize_redirect"><code class="xref py py-obj docutils literal"><span class="pre">authorize_redirect</span></code></a> and <a class="reference internal" href="#tornado.auth.OAuthMixin.get_authenticated_user" title="tornado.auth.OAuthMixin.get_authenticated_user"><code class="xref py py-obj docutils literal"><span class="pre">get_authenticated_user</span></code></a>. The user returned through that process includes an ‘access_token’ attribute that can be used to make authenticated requests via this method. Example usage:</p> 
              <div class="highlight-default">
               <div class="highlight">
                <pre><span></span><span class="k">class</span> <span class="nc">MainHandler</span><span class="p">(</span><span class="n">tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">RequestHandler</span><span class="p">,</span>
                  <span class="n">tornado</span><span class="o">.</span><span class="n">auth</span><span class="o">.</span><span class="n">TwitterMixin</span><span class="p">):</span>
    <span class="nd">@tornado</span><span class="o">.</span><span class="n">web</span><span class="o">.</span><span class="n">authenticated</span>
    <span class="nd">@tornado</span><span class="o">.</span><span class="n">gen</span><span class="o">.</span><span class="n">coroutine</span>
    <span class="k">def</span> <span class="nf">get</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">new_entry</span> <span class="o">=</span> <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">twitter_request</span><span class="p">(</span>
            <span class="s2">"/statuses/update"</span><span class="p">,</span>
            <span class="n">post_args</span><span class="o">=</span><span class="p">{</span><span class="s2">"status"</span><span class="p">:</span> <span class="s2">"Testing Tornado Web Server"</span><span class="p">},</span>
            <span class="n">access_token</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">current_user</span><span class="p">[</span><span class="s2">"access_token"</span><span class="p">])</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">new_entry</span><span class="p">:</span>
            <span class="c1"># Call failed; perhaps missing permission?</span>
            <span class="k">yield</span> <span class="bp">self</span><span class="o">.</span><span class="n">authorize_redirect</span><span class="p">()</span>
            <span class="k">return</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">finish</span><span class="p">(</span><span class="s2">"Posted a message!"</span><span class="p">)</span>
</pre>
               </div> 
              </div> 
             </dd>
            </dl> 
           </dd>
          </dl> 
         </div> 
        </div> 
       </div> 
       <div class="articleComments"> 
       </div> 
      </div> 
      <footer> 
       <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation"> 
        <a href="wsgi.html" class="btn btn-neutral float-right" title="tornado.wsgi — Interoperability with other Python frameworks and servers" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a> 
        <a href="integration.html" class="btn btn-neutral" title="Integration with other services" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a> 
       </div> 
       <hr> 
       <div role="contentinfo"> 
        <p> © Copyright 2009-2017, The Tornado Authors. <span class="commit"> Revision <code>ca6f171e</code>. </span> </p> 
       </div> Built with 
       <a href="http://sphinx-doc.org/">Sphinx</a> using a 
       <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by 
       <a href="https://readthedocs.org">Read the Docs</a>. 
      </footer> 
     </div> 
    </div> 
   </section> 
  </div> 
  <div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions"> 
   <span class="rst-current-version" data-toggle="rst-current-version"> <span class="fa fa-book"> Read the Docs</span> v: stable <span class="fa fa-caret-down"></span> </span> 
   <div class="rst-other-versions"> 
    <dl> 
     <dt>
      Versions
     </dt> 
     <dd>
      <a href="/en/latest/">latest</a>
     </dd> 
     <dd>
      <a href="/en/stable/">stable</a>
     </dd> 
     <dd>
      <a href="/en/branch4.5/">branch4.5</a>
     </dd> 
     <dd>
      <a href="/en/branch4.4/">branch4.4</a>
     </dd> 
     <dd>
      <a href="/en/branch4.3/">branch4.3</a>
     </dd> 
     <dd>
      <a href="/en/branch3.2/">branch3.2</a>
     </dd> 
     <dd>
      <a href="/en/branch2.4/">branch2.4</a>
     </dd> 
    </dl> 
    <dl> 
     <dt>
      Downloads
     </dt> 
     <dd>
      <a href="//readthedocs.org/projects/tornado/downloads/pdf/stable/">pdf</a>
     </dd> 
     <dd>
      <a href="//readthedocs.org/projects/tornado/downloads/htmlzip/stable/">htmlzip</a>
     </dd> 
     <dd>
      <a href="//readthedocs.org/projects/tornado/downloads/epub/stable/">epub</a>
     </dd> 
    </dl> 
    <dl> 
     <dt>
      On Read the Docs
     </dt> 
     <dd> 
      <a href="//readthedocs.org/projects/tornado/?fromdocs=tornado">Project Home</a> 
     </dd> 
     <dd> 
      <a href="//readthedocs.org/builds/tornado/?fromdocs=tornado">Builds</a> 
     </dd> 
    </dl> 
    <hr> Free document hosting provided by 
    <a href="http://www.readthedocs.org">Read the Docs</a>. 
   </div> 
  </div> 
  <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'./',
            VERSION:'4.5.2',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: '.txt'
        };
    </script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-2.0.3.min.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-migrate-1.2.1.min.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/underscore.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/doctools.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/readthedocs-doc-embed.js"></script> 
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>  
 </body>
</html>