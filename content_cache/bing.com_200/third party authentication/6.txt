<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="EN">
 <head> 
  <meta NAME="Generator" CONTENT="Quadralay WebWorks Publisher 5.0.4"> 
  <meta NAME="WDT" CONTENT="2.1.1.5.4ID"> 
  <meta NAME="Page" CONTENT="DefaultSingle"> 
  <meta NAME="Title" CONTENT=" Integrating with Third-Party Access Management Systems "> 
  <meta NAME="Date" CONTENT="11/21/03 06:26PM PST"> 
  <title> Integrating with Third-Party Access Management Systems </title> 
  <link REL="home" HREF="../../index.htm" TITLE="Library"> 
  <link REL="toc" HREF="toc.htm" TITLE="Contents"> 
  <link REL="index" HREF="index.htm" TITLE="Index"> 
  <link REL="copyright" HREF="../../dcommon/html/cpyr.htm" TITLE="Copyright"> 
  <link REL="up" HREF="toc.htm" TITLE="Up"> 
  <link REL="next" HREF="exp_imp.htm" TITLE="Next"> 
  <link REL="previous" HREF="custom.htm" TITLE="Previous"> 
 </head> 
 <body bgcolor="#ffffff"> 
  <a name="top"></a> 
  <a href="#BEGIN">Skip Headers</a>
  <br>
  <br> 
  <table cellspacing="0" cellpadding="0" width="100%"> 
   <tbody>
    <tr> 
     <td align="LEFT" valign="TOP"><font color="#330099" face="Helvetica, Arial, sans-serif"><strong>Oracle® Application Server Single Sign-On Administrator's Guide<br>10<i>g</i> (9.0.4)</strong><br>Part Number B10851-01</font></td> 
     <td valign="BOTTOM" align="RIGHT" width="144"> 
      <table cellspacing="0" cellpadding="0" width="100%"> 
       <tbody>
        <tr> 
         <td align="CENTER" valign="TOP" width="25%"><a href="../../index.htm"><img SRC="../../dcommon/gifs/prodicon.gif" ALT="Go To Documentation Library" BORDER="0" HEIGHT="30" WIDTH="30"><br> <font size="-2">Home</font></a></td> 
         <td align="CENTER" valign="TOP" width="25%"><a href="../../manage.htm"><img SRC="../../dcommon/gifs/bookicon.gif" ALT="Go To Product List" BORDER="0" HEIGHT="30" WIDTH="30"><br> <font size="-2">Solution Area</font></a></td> 
         <td align="CENTER" valign="TOP" width="25%"><a href="toc.htm"><img SRC="../../dcommon/gifs/conticon.gif" ALT="Go To Table Of Contents" BORDER="0" HEIGHT="30" WIDTH="30"><br> <font size="-2">Contents</font></a></td> 
         <td align="CENTER" valign="TOP" width="25%"><a href="index.htm"><img SRC="../../dcommon/gifs/indxicon.gif" ALT="Go To Index" BORDER="0" HEIGHT="30" WIDTH="30"><br> <font size="-2">Index</font></a></td> 
        </tr> 
       </tbody>
      </table> </td> 
    </tr> 
   </tbody>
  </table> 
  <hr> 
  <p> <a href="custom.htm"><img SRC="../../dcommon/gifs/larrow.gif" ALT="Go to previous page" BORDER="0" HEIGHT="30" WIDTH="30"></a> <a href="exp_imp.htm"><img SRC="../../dcommon/gifs/rarrow.gif" ALT="Go to next page" BORDER="0" HEIGHT="30" WIDTH="30"></a> <a name="BEGIN"></a> </p>
  <div class="IND"> 
   <!-- End Header --> 
   <a name="1009577"></a> 
   <!--TOC=Title-"1009577"--> 
   <h1 class="Title"><font face="Arial, Helvetica, sans-serif" color="#330099">13<br> <a name="SSOAG013|This chapter explains how to integrate OracleAS Single Sign-On with third-party single sign-on products. It presents an integration case study.">Integrating with Third-Party Access Management Systems</a> </font></h1> 
   <!--/TOC=Title--> 
   <a name="1009579"></a> 
   <p class="BP"> This chapter explains how to integrate OracleAS Single Sign-On with third-party access management products. It describes how third-party integration works; then it presents the integration APIs. Finally, it provides code that integrates OracleAS Single Sign-On with a fictional access management system. </p> 
   <a name="1009012"></a> 
   <p class="BP"> An enterprise that has a third-party system in place can gain access to the OracleAS suite by using APIs that enable the OracleAS Single Sign-On server to act as an authentication gateway between the third-party system and Oracle applications. </p> 
   <a name="1009013"></a> 
   <p class="BP"> The chapter contains the following topics: </p> 
   <ul class="LB1"> 
    <li class="LB1" type="DISC"><a name="1009017"></a><a href="tpsso.htm#1009031">How Third-Party Access Management Works</a> <p> </p></li>
    <li class="LB1" type="DISC"><a name="1009021"></a><a href="tpsso.htm#1009600">Synchronizing the Third-Party Repository with Oracle Internet Directory</a> <p> </p></li>
    <li class="LB1" type="DISC"><a name="1009025"></a><a href="tpsso.htm#1009096">Third-Party Integration Modules</a> <p> </p></li>
    <li class="LB1" type="DISC"><a name="1009029"></a><a href="tpsso.htm#1009153">Integration Case Study: Third-Party Access Manager</a> <p> </p></li>
   </ul> 
   <a name="1009031"></a> 
   <!--TOC=h1-"1009031"--> 
   <h2 class="H1"><font face="Arial, Helvetica, sans-serif" color="#330099"> How Third-Party Access Management Works</font></h2> 
   <!--/TOC=h1--> 
   <a name="1009033"></a> 
   <p class="BP"> In third-party access management, the OracleAS Single Sign-On server, the third-party access management server, and the partner application form a chain of trust. The OracleAS Single Sign-On server delegates authentication to the third-party access management server, becoming essentially a partner application to it. Oracle applications continue to work only with the OracleAS Single Sign-On server and are unaware of the third-party access management server. Implicitly, however, they trust the third-party server. </p> 
   <a name="1011154"></a> 
   <p class="BP"> For OracleAS Single Sign-On to issue users an authentication token under this arrangement, the third-party access management server must pass the former the user's identity by setting HTTP headers or by using some other mechanism. Once it obtains the user's identity, the OracleAS Single Sign-On server functions as before, authenticating and redirecting users to its partner applications. <a href="tpsso.htm#1009042">Figure&nbsp;13-1</a> illustrates the process. </p> 
   <a name="1009042"></a> 
   <h4 class="FT"><font face="Arial, Helvetica, sans-serif"><em>Figure 13-1 Accessing Oracle Partner Applications Using a Third-Party Server</em></font></h4> 
   <a name="1011019"> <img src="ssoag035.gif" height="336" width="496" alt="Text description of ssoag035.gif follows"></a>
   <p><a name="1011019"> </a><a href="img_text/ssoag035.htm">Text description of the illustration ssoag035.gif</a></p>  
   <a name="1010303"></a> 
   <p class="BP"> The illustration captures two possible scenarios: </p> 
   <a name="1011101"></a> 
   <!--TOC=h3-"1011101"--> 
   <h4 class="H3"><font face="Arial, Helvetica, sans-serif" color="#330099"> Scenario 1: The user has not yet authenticated to the third-party server</font></h4> 
   <!--/TOC=h3--> 
   <ol class="LN1" type="1"> 
    <li class="LN1" type="1" value="1"><a name="1011102"></a>The unauthenticated user attempts to access a single-sign-on partner application. <p> </p></li>
    <li class="LN1" type="1" value="2"><a name="1010304"></a>The application redirects the user to the single sign-on server for authentication. As part of this redirection, the following occurs: <p> </p>
     <ol class="LA2" type="a"> 
      <li class="LA2" type="a" value="1"><a name="1010462"></a>The single sign-on server has the third-party user authenticate the user. <p> </p></li>
      <li class="LA2" type="a"><a name="1010464"></a>The third-party server sets a token in the user's browser. <p> </p></li>
      <li class="LA2" type="a"><a name="1010465"></a>The single sign-on server retrieves the token from the browser. <p> </p></li>
      <li class="LA2" type="a"><a name="1010468"></a>The single sign-on server verifies the token with the third-party server. <p> </p></li>
     </ol> <a name="1010500"></a> <p class="BP1"> After token verification, the single sign-on server returns the user to the requested application. </p> </li>
    <li class="LN1" type="1" value="3"><a name="1010300"></a>The application provides content to the user. <p> </p></li>
   </ol> 
   <a name="1010471"></a> 
   <!--TOC=h3-"1010471"--> 
   <h4 class="H3"><font face="Arial, Helvetica, sans-serif" color="#330099"> Scenario 2: The user has already authenticated to the third-party server</font></h4> 
   <!--/TOC=h3--> 
   <ol class="LN1" type="1"> 
    <li class="LN1" type="1" value="1"><a name="1010472"></a>The authenticated user attempts to access a single sign-on partner application. <p> </p></li>
    <li class="LN1" type="1" value="2"><a name="1010477"></a>The application redirects the user to the single sign-on server for authentication. As part of this redirection, the following occurs: <p> </p>
     <ol class="LA2"> 
      <li class="LA2" type="a"><a name="1010482"></a>The single sign-on server retrieves the token from the browser. <p> </p></li>
      <li class="LA2" type="a"><a name="1010487"></a>The single sign-on server verifies the token with the third-party server. <p> </p></li>
     </ol> <a name="1010501"></a> <p class="BP1"> After token verification, the single sign-on server returns the user to the requested application. </p> </li>
    <li class="LN1" type="1" value="3"><a name="1010506"></a>The application provides content to the user.<strong class="Bold"></strong> <p> <a name="1010377"> </a></p>
     <div align="CENTER">
      <a name="1010377"> <p> </p>
       <table class="Note" border="0" width="80%" cellpadding="0" cellspacing="0" dir="ltr" summary="This is a layout table to format a note" title="This is a layout table to format a note"> 
        <tbody>
         <tr class="Note">
          <td class="Note"> 
           <hr> <a name="1009595"></a><font face="Arial, Helvetica, sans-serif"><strong class="NH"><strong class="Bold">Note</strong>:</strong></font> <a name="1009597"></a> <p class="NB"> If the single sign-on systems involved are to be accessible to all authorized users, the user repository must be centralized in one place. This means that, before deployment, users must be synchronized between Oracle Internet Directory and the external repository. </p>
           <hr> </td> 
         </tr> 
        </tbody>
       </table> </a>
     </div><a name="1010377"> </a> </li>
   </ol> 
   <a name="1009600"></a> 
   <!--TOC=h1-"1009600"--> 
   <h2 class="H1"><font face="Arial, Helvetica, sans-serif" color="#330099"> Synchronizing the Third-Party Repository with Oracle Internet Directory</font></h2> 
   <!--/TOC=h1--> 
   <a name="1009070"></a> 
   <p class="BP"> The authentication scenario presented in the preceding steps assumes either that the user repository is Oracle Internet Directory or that the repository is a third-party directory or database. If the repository is the latter, the user name information must be synchronized with the user entry in Oracle Internet Directory. This synchronization enables the single sign-on server to retrieve the user attributes required by applications enabled for single sign-on. </p> 
   <a name="1009075"> 
    <div align="CENTER"> 
     <p> </p>
     <table class="Note" border="0" width="80%" cellpadding="0" cellspacing="0" dir="ltr" summary="This is a layout table to format a note" title="This is a layout table to format a note"> 
      <tbody>
       <tr class="Note">
        <td class="Note"> 
         <hr> <a name="1009073"></a><font face="Arial, Helvetica, sans-serif"><strong class="NH">Note:</strong></font> <a name="1009074"></a> <p class="NB"> Third-party access management integration cannot proceed if the synchronization mechanism is not in place. </p>
         <hr> </td> 
       </tr> 
      </tbody>
     </table> 
    </div> </a> 
   <a name="1009076"></a> 
   <p class="BP"> To synchronize the third-party repository with Oracle Internet Directory, use either the Oracle Directory Integration Platform or bulk load tools. For details, see <em class="Italic"><a class="xlinkSRC OIDAG070" href="../../manage.904/b12118/pt_odip.htm#OIDAG070|This part explains the concepts, architecture, and components of the Oracle Directory Integration and Provisioning platform, and tells you how to configure and use it to synchronize multiple directories with Oracle Internet Directory."></a></em><a class="xlinkSRC OIDAG070" href="../../manage.904/b12118/pt_odip.htm#OIDAG070|This part explains the concepts, architecture, and components of the Oracle Directory Integration and Provisioning platform, and tells you how to configure and use it to synchronize multiple directories with Oracle Internet Directory."><em class="Italic">Oracle Internet Directory Administrator's Guide</em><em class="Italic"></em></a>. </p> 
   <a name="1009096"></a> 
   <!--TOC=h1-"1009096"--> 
   <h2 class="H1"><font face="Arial, Helvetica, sans-serif" color="#330099"> Third-Party Integration Modules</font></h2> 
   <!--/TOC=h1--> 
   <a name="1009097"></a> 
   <p class="BP"> You use the Java tool kit oracle.security.sso.ias904 to achieve third-party integration. You must implement two interfaces, one for authentication, the other for deployment-specific cookies. The second interface is optional. </p> 
   <a name="1009100"></a> 
   <p class="BP"> The two interfaces in the kit perform the following functions: </p> 
   <ul class="LB1"> 
    <li class="LB1" type="DISC"><a name="1009104"></a><a href="tpsso.htm#1009110">Authentication Using a Token</a> <p> </p></li>
    <li class="LB1" type="DISC"><a name="1009108"></a><a href="tpsso.htm#1011570">Set External Cookies</a> <p> </p></li>
   </ul> 
   <a name="1009110"></a> 
   <!--TOC=h2-"1009110"--> 
   <h3 class="H2"><font face="Arial, Helvetica, sans-serif" color="#330099"> Authentication Using a Token</font></h3> 
   <!--/TOC=h2--> 
   <a name="1009111"></a> 
   <p class="BP"> The IPASAuthInterface.java package is invoked by the OracleAS Single Sign-On server during authentication. If authentication using a token is to be supported, the implementer of this interface must return the user name to the OracleAS Single Sign-On server by retrieving the user identity in a secure fashion--from a securely set HTTP header, for instance, or a secure cookie. Here is the interface: </p> 
   <pre class="CE">
<a name="1009112"></a>/**
<a name="1009113"></a>     * returns IPASUserInfo
<a name="1009114"></a>     * The returned object should contain either user &amp; subscriber
<a name="1009115"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nicknames
<a name="1009116"></a>     * and requested URL or full user and subscriber attribute mappings
<a name="1009117"></a>     * (including DN &amp; GUID) and requested URL.
<a name="1009118"></a>     * The returned object should contain either user nickname
<a name="1009119"></a>     * and requested URL or full user attribute mapping and requested URL.
<a name="1009120"></a>     *
<a name="1009121"></a>     * @param request The user's HTTP request object
<a name="1009122"></a>     *
<a name="1009123"></a>     * @throws IPASAuthException if the authentication fails for whatever
<a name="1009124"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reasons.
<a name="1009125"></a>     * The exception message will be propagated to the login page
<a name="1009126"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directly.
<a name="1009127"></a>     *
<a name="1009128"></a>     * @throws IPASInsufficientCredException if all the required
<a name="1009129"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;credentials
<a name="1009130"></a>     * (ssousername, password, subscriber name) are not
<a name="1009131"></a>     * passed/set in the request object
<a name="1009132"></a>     * @return IPASUserInfo authenticated user information
<a name="1009133"></a>     */
<a name="1009134"></a>
<a name="1009135"></a>    public IPASUserInfo authenticate(HttpServletRequest request)
<a name="1009136"></a>    throws IPASAuthException, IPASInsufficientCredException;
</pre> 
   <a name="1011570"></a> 
   <!--TOC=h2-"1011570"--> 
   <h3 class="H2"><font face="Arial, Helvetica, sans-serif" color="#330099"> Set External Cookies</font></h3> 
   <!--/TOC=h2--> 
   <a name="1011571"></a> 
   <p class="BP"> The IPASCustomCookieInterface.java package enables you to set optional, deployment-specific cookies. These cookies are set only if authentication is successful and the cookie adapter corresponds to the appropriate authentication level. </p> 
   <pre class="CE">
<a name="1009140"></a>/**
<a name="1009141"></a>     * A custom cookie can be implemented using this interface.
<a name="1009142"></a>     * SSO server sends the cookie to the user browser.
<a name="1009143"></a>     *
<a name="1009144"></a>     * @param user user object that contains the authenticated user
<a name="1009145"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;information
<a name="1009146"></a>     *
<a name="1009147"></a>     * @param req  HTTP user request object
<a name="1009148"></a>     *
<a name="1009149"></a>     * @return array of Cookie objects
<a name="1009150"></a>     */
<a name="1009151"></a>public Cookie[] getCustomCookie(IPASUserInfo user, HttpServletRequest req);
<a name="1010888"></a>
</pre> 
   <a name="1010889"></a> 
   <p class="BP"> After implementing the interface, configure the policy.properties file for the custom cookie provider. The file is located at $ORACLE_HOME/sso/conf. </p> 
   <ol class="LN1" type="1"> 
    <li class="LN1" type="1" value="1"><a name="1010963"></a>Add the class name for the custom cookie provider: <p> </p><pre class="CE1">
<a name="1010964"></a># Custom Cookie Provider Class name
<a name="1010965"></a># ---------------------------------
<a name="1010966"></a># Sample custom cookie tester provider class
<a name="1010967"></a>
<a name="1010968"></a>CustomCookie_ProviderPlugin = <em><code>class_name </code></em><a name="1010969"></a>
</pre> </li>
    <li class="LN1" type="1" value="2"><a name="1010970"></a>Designate the minimum authentication level at which the custom cookie is set if the user authenticates successfully: <p> </p><pre class="CE1">
<a name="1010971"></a># Custom Cookie auth level
<a name="1010972"></a># ------------------------
<a name="1010928"></a>CustomCookieAuthLevel = <em><code>authentication_level </code></em><a name="1010976"></a>
</pre> <a name="1010979"></a> <p class="BP1"> If you are not using multilevel authentication and are using default settings for authentication adapter levels, you can set this value to: </p> <pre class="CE1">
<a name="1010982"></a>CustomCookieAuthLevel = MediumSecurity
<a name="1010983"></a>
</pre> <a name="1010977"> 
      <div align="CENTER"> 
       <p> </p>
       <table class="NoteAlso" border="0" width="80%" cellpadding="0" cellspacing="0" dir="ltr" summary="This is a layout table to format a note" title="This is a layout table to format a note"> 
        <tbody>
         <tr class="NoteAlso">
          <td class="NoteAlso"> <a name="1011012"></a><font face="Arial, Helvetica, sans-serif"><strong class="NH">See Also:</strong></font> <a name="1011013"></a> <p class="NB"> <a href="multilev.htm#1009009">Chapter&nbsp;6, "Multilevel Authentication"</a> </p></td> 
         </tr> 
        </tbody>
       </table> 
      </div> </a> </li>
   </ol> 
   <a name="1009153"></a> 
   <!--TOC=h1-"1009153"--> 
   <h2 class="H1"><font face="Arial, Helvetica, sans-serif" color="#330099"> Integration Case Study: Third-Party Access Manager</font></h2> 
   <!--/TOC=h1--> 
   <a name="1009155"></a> 
   <p class="BP"> Consider the case of Third-Party Access Manager (TPAM), a fictional product, which, like OracleAS Single Sign-On, offers single sign-on authentication to protected resources. TPAM consists of two components: the TPAM policy server and the TPAM agent. The first provides users with a variety of services including user and session management, authentication, and authorization. The second is located on Web servers and Web application servers. It screens requests for resources and determines whether a resource is protected by TPAM. </p> 
   <a name="1009158"></a> 
   <p class="BP"> Customers who have TPAM already installed may want to use it to gain access to OracleAS applications. They can achieve this access by using APIs that enable TPAM to talk to Oracle applications by way of OracleAS Single Sign-On. </p> 
   <a name="1010296"></a> 
   <p class="BP"> This section contains the following topics: </p> 
   <ul class="LB1"> 
    <li class="LB1" type="DISC"><a name="1010411"></a><a href="tpsso.htm#1010188">Sample Integration Package</a> <p> </p></li>
    <li class="LB1" type="DISC"><a name="1010415"></a><a href="tpsso.htm#1009207">Logging Out of the Integrated System</a> <p> </p></li>
    <li class="LB1" type="DISC"><a name="1010419"></a><a href="tpsso.htm#1011054">Migrating the Release 9.0.2 Sample Implementation to Release 9.0.4</a> <p> </p></li>
   </ul> 
   <a name="1010188"></a> 
   <!--TOC=h2-"1010188"--> 
   <h3 class="H2"><font face="Arial, Helvetica, sans-serif" color="#330099"> Sample Integration Package</font></h3> 
   <!--/TOC=h2--> 
   <a name="1010190"></a> 
   <p class="BP"> The SSOTPAM.java package, presented here, can be used to integrate an existing TPAM implementation with OracleAS Single Sign-On. </p> 
   <pre class="CE">
<a name="1010191"></a>/**
<a name="1010192"></a>  * returns IPASUserInfo
<a name="1010196"></a>/**
<a name="1010201"></a>
<a name="1010202"></a>/* Copyright (c) 2002, 2003, Oracle Corporation.  All rights reserved.  */
<a name="1010204"></a>
<a name="1010205"></a>/*
<a name="1010206"></a>   DESCRIPTION
<a name="1010207"></a>     Sample class for TPAM integration with SSO Server
<a name="1010208"></a>
<a name="1010209"></a>   PRIVATE CLASSES
<a name="1010210"></a>
<a name="1010211"></a>   NOTES
<a name="1010212"></a>     This class implements the SSOServerAuthInterface.
<a name="1010213"></a>     To enable this integration, replace:
<a name="1010214"></a>         oracle.security.sso.server.auth.SSOServerAuth
<a name="1010215"></a>     with
<a name="1010216"></a>         oracle.security.sso.server.auth.SSOTPAMAuth
<a name="1010217"></a>     for the desired security level in policy.properties<code></code>.
<a name="1010223"></a> */
<a name="1010232"></a>
<a name="1010233"></a>import java.io.PrintWriter;
<a name="1010234"></a>
<a name="1010235"></a>import javax.servlet.http.HttpServletRequest;
<a name="1010236"></a>import javax.servlet.http.HttpServletResponse;
<a name="1010238"></a>
<a name="1010239"></a>import oracle.security.sso.ias904.toolkit.IPASAuthInterface;
<a name="1010240"></a>import oracle.security.sso.ias904.toolkit.IPASAuthException;
<a name="1010241"></a>import oracle.security.sso.ias904.toolkit.IPASUserInfo;
<a name="1010242"></a>import oracle.security.sso.ias904.toolkit.IPASInsufficientCredException;
<a name="1010243"></a>
<a name="1010244"></a>public class SSOTPAMAuth implements IPASAuthInterface {
<a name="1010245"></a>
<a name="1010246"></a>    private static String CLASS_NAME = "SSOTPAMAuth";
<a name="1010247"></a>    private static String TPAM_USER_HEADER = "TPAM_USER";
<a name="1010248"></a>
<a name="1010249"></a>    public SSOTPAMAuth() {
<a name="1010250"></a>
<a name="1010251"></a>    }
<a name="1010252"></a>
<a name="1010253"></a>    public IPASUserInfo authenticate(HttpServletRequest request)
<a name="1010254"></a>      throws IPASAuthException, IPASInsufficientCredException {
<a name="1010255"></a>
<a name="1010258"></a>      String TPAMUserName = null;
<a name="1010259"></a>
<a name="1010260"></a>      try
<a name="1010261"></a>       {
<a name="1010263"></a>         TPAMUserName = request.getHeader(TPAM_USER_HEADER);
<a name="1010264"></a>       }
<a name="1010265"></a>       catch (Exception e)
<a name="1010266"></a>       {
<a name="1010268"></a>         throw new IPASInsufficientCredException("No TPAM Header");
<a name="1010269"></a>       }
<a name="1010270"></a>
<a name="1010271"></a>       if (TPAMUserName == null)
<a name="1010272"></a>           throw new IPASInsufficientCredException("No TPAM Header");
<a name="1010273"></a>
<a name="1010274"></a>       IPASUserInfo authUser = new IPASUserInfo(TPAMUserName);
<a name="1010275"></a>
<a name="1010276"></a>       return authUser;
<a name="1010277"></a>
<a name="1010278"></a>    }
<a name="1010279"></a>
<a name="1010280"></a>
<a name="1010281"></a>    public String getUserCredentialPage(HttpServletRequest request,
<a name="1010282"></a>        String msg) {
<a name="1010283"></a>
<a name="1010284"></a>        // This function will never have been reached in the case of TPAM
<a name="1010285"></a>        // as the TPAM Agent will intercept all requests
<a name="1010286"></a>        return "http://<em><code>error_url</code></em>;
<a name="1010287"></a>
<a name="1010288"></a>    }
<a name="1010289"></a>
<a name="1010291"></a>}
</pre> 
   <a name="1009207"></a> 
   <!--TOC=h2-"1009207"--> 
   <h3 class="H2"><font face="Arial, Helvetica, sans-serif" color="#330099"> Logging Out of the Integrated System</font></h3> 
   <!--/TOC=h2--> 
   <a name="1010707"></a> 
   <p class="BP"> Third-party logout takes two forms: </p> 
   <ul class="LB1"> 
    <li class="LB1" type="DISC"><a name="1010710"></a>The user initiates a logout request using the third-party access management system. <p> <a name="1010712"></a> </p><p class="BP1"> In this scenario, the user clicks a logout link that invokes a logout handler in the TPAM system. The TPAM logout flow cleans up its own session. After cleanup, The TPAM system must invoke the OracleAS single sign-on logout handler. Invoking the OracleAS single sign-on logout handler ensures that the user is logged out of all applications protected by the OracleAS single sign-on server. To perform single sign-on logout, the TPAM system must redirect the user to the following URL: </p> <pre class="CE1">
<a name="1010866"></a>http:<code>//</code><em><code>single_sign-on_host</code></em>:<em><code>single_sign-on_port</code></em><code>/pls/orasso/ORASSO.wwsso_app_
admin.ls_logout?p_done_url=done_url
</code><a name="1010859"></a>
</pre> </li>
    <li class="LB1" type="DISC"><a name="1010798"></a>The user initiates a logout request using the OracleAS Single Sign-On system <p> <a name="1011051"></a> </p><p class="BP1"> In this scenario, the user clicks a logout link in an Oracle partner application. This invokes the OracleAS Single Sign-On logout handler. When logout is finished, the user should also be logged out from the TPAM system. Concurrent logout is effected by registering the Oracle logout handler (<code>ls_logout</code> in the URL immediately preceding) with the TPAM system. The TPAM system cleans up the TPAM session when it detects that the Oracle logout handler is being invoked.<strong class="Bold"></strong> </p> </li>
   </ul> 
   <a name="1011054"></a> 
   <!--TOC=h2-"1011054"--> 
   <h3 class="H2"><font face="Arial, Helvetica, sans-serif" color="#330099"> Migrating the Release 9.0.2 Sample Implementation to Release 9.0.4</font></h3> 
   <!--/TOC=h2--> 
   <a name="1009332"></a> 
   <p class="BP"> This section is provided for the benefit of those who used the release 9.0.2 external authentication package for TPAM to perform third-party authentication. The release 9.0.2 package was written in PL/SQL. The release 9.0.4 package is written in Java. In the lines that follow, the pertinent sections of the two packages appear together. </p> 
   <a name="1009337"></a> 
   <!--TOC=h3-"1009337"--> 
   <h4 class="H3"><font face="Arial, Helvetica, sans-serif" color="#330099"> New Authentication Interface</font></h4> 
   <!--/TOC=h3--> 
   <a name="1009338"></a> 
   <p class="BP"> Release 9.0.4: </p> 
   <pre class="CE">
<a name="1009339"></a>package oracle.security.sso.server.auth;
<a name="1009340"></a>
<a name="1009341"></a>import java.io.PrintWriter;
<a name="1009342"></a>
<a name="1009343"></a>import javax.servlet.http.HttpServletRequest;
<a name="1009344"></a>import javax.servlet.http.HttpServletResponse;
<a name="1009345"></a>import oracle.security.sso.server.util.SSODebug;
<a name="1009347"></a>import oracle.security.sso.ias904.toolkit.IPASAuthInterface;
<a name="1009348"></a>import oracle.security.sso.ias904.toolkit.IPASAuthException;
<a name="1009349"></a>import oracle.security.sso.ias904.toolkit.IPASUserInfo;
<a name="1009350"></a>import oracle.security.sso.ias904.toolkit.IPASInsufficientCredException;
<a name="1009351"></a>
<a name="1009352"></a>public class SSOTPAMAuth implements IPASAuthInterface {
<a name="1009353"></a>
<a name="1009354"></a>    private static String CLASS_NAME = "SSOTPAMAuth";
<a name="1009355"></a>    private static String TPAM_USER_HEADER = "TPAM_USER";
<a name="1009356"></a>
<a name="1009357"></a>public SSOTPAMAuth() {
<a name="1009358"></a>}
<a name="1009359"></a>
<a name="1009360"></a>public IPASUserInfo authenticate(HttpServletRequest request)
<a name="1009361"></a>throws IPASAuthException, IPASInsufficientCredException {
<a name="1009362"></a>
</pre> 
   <a name="1009363"></a> 
   <p class="BP"> Release 9.0.2: </p> 
   <pre class="CE">
<a name="1009364"></a>FUNCTION authenticate_user
<a name="1009365"></a>  (
<a name="1009366"></a>   p_user OUT VARCHAR2
<a name="1009367"></a>  )
<a name="1009368"></a>  return PLS_INTEGER
<a name="1009369"></a>IS
<a name="1009370"></a> l_http_header varchar(1000);
<a name="1009371"></a> l_ssouser wwsec_person.user_name%type := NULL;
<a name="1009372"></a>BEGIN
</pre> 
   <a name="1009373"></a> 
   <!--TOC=h3-"1009373"--> 
   <h4 class="H3"><font face="Arial, Helvetica, sans-serif" color="#330099"> Get User Name from HTTP Header</font></h4> 
   <!--/TOC=h3--> 
   <a name="1009374"></a> 
   <p class="BP"> Release 9.0.4: </p> 
   <pre class="CE">
<a name="1009377"></a>String TPAMUserName = null;
<a name="1009378"></a>
<a name="1009379"></a>try
<a name="1011671"></a> {
<a name="1011672"></a>
</pre> 
   <a name="1011673"></a> 
   <p class="BP"> Release 9.0.2: </p> 
   <pre class="CE">
<a name="1009384"></a>l_http_header := owa_util.get_cgi_env('HTTP_TPAM_USER');
<a name="1009385"></a>debug_print('TPAM ID : ' || l_http_header);
</pre> 
   <a name="1009386"></a> 
   <!--TOC=h3-"1009386"--> 
   <h4 class="H3"><font face="Arial, Helvetica, sans-serif" color="#330099"> Error Handling if User Name Not Present</font></h4> 
   <!--/TOC=h3--> 
   <a name="1009387"></a> 
   <p class="BP"> Release 9.0.4: </p> 
   <pre class="CE">
<a name="1009388"></a><code>}
</code><a name="1009389"></a>catch (Exception e)
<a name="1009390"></a>{  
<a name="1009391"></a>   SSODebug.print(SSODebug.ERROR, "exception: " + CLASS_NAME, e);
<a name="1009392"></a>   throw new IPASInsufficientCredException("No TPAM Header");
<a name="1009393"></a>}
<a name="1009394"></a>
<a name="1009395"></a>if (TPAMUserName == null)
<a name="1011682"></a>throw new IPASInsufficientCredException("No TPAM Header");
<a name="1011683"></a>
</pre> 
   <a name="1011684"></a> 
   <p class="BP"> Release 9.0.2: </p> 
   <pre class="CE">
<a name="1009399"></a>IF ( (l_ssouser IS NULL) or
<a name="1009400"></a>    ( INSTR(l_ssouser, GLOBAL_SEPARATOR) != 0) ) THEN
<a name="1009401"></a>    debug_print('malformed user id: '
<a name="1009402"></a>      || l_ssouser
<a name="1009403"></a>      || ' returned by wwsso_auth_external.authenticate_user');
<a name="1009404"></a>      RAISE EXT_AUTH_FAILURE_EXCEPTION;
<a name="1009405"></a>ELSE
</pre> 
   <a name="1009406"></a> 
   <!--TOC=h3-"1009406"--> 
   <h4 class="H3"><font face="Arial, Helvetica, sans-serif" color="#330099"> Get User Name from HTTP Header</font></h4> 
   <!--/TOC=h3--> 
   <a name="1009407"></a> 
   <p class="BP"> Release 9.0.4: </p> 
   <pre class="CE">
<a name="1009408"></a>IPASUserInfo authUser = new IPASUserInfo(TPAMUserName);
<a name="1009409"></a>
<a name="1011465"></a>return authUser;
<a name="1011466"></a>
<a name="1011467"></a>}
<a name="1011687"></a>
</pre> 
   <a name="1009414"></a> 
   <p class="BP"> Release 9.0.2: </p> 
   <pre class="CE">
<a name="1009415"></a>p_user := NLS_UPPER(l_ssouser);
<a name="1009416"></a>return 0;
<a name="1009417"></a>   END IF;
<a name="1010698"></a>FUNCTION authenticate_user
<a name="1009418"></a>  (
<a name="1009419"></a>   p_user OUT VARCHAR2
<a name="1009420"></a>  )
<a name="1009421"></a>  return PLS_INTEGER
<a name="1009422"></a>IS
<a name="1009423"></a> l_http_header varchar(1000);
<a name="1009424"></a> l_ssouser wwsec_person.user_name%type := NULL;
<a name="1009425"></a>BEGIN
</pre> 
   <a name="1009426"></a> 
   <!--TOC=h3-"1009426"--> 
   <h4 class="H3"><font face="Arial, Helvetica, sans-serif" color="#330099"> Return User Name to Single Sign-On Server</font></h4> 
   <!--/TOC=h3--> 
   <a name="1009427"></a> 
   <p class="BP"> Release 9.0.4: </p> 
   <pre class="CE">
<a name="1009428"></a>IPASUserInfo authUser = new IPASUserInfo(TPAMUserName);
<a name="1009429"></a>
<a name="1009430"></a>return authUser;
<a name="1009431"></a>
<a name="1009432"></a>}
<a name="1011690"></a>
</pre> 
   <a name="1009434"></a> 
   <p class="BP"> Release 9.0.2: </p> 
   <pre class="CE">
<a name="1009435"></a>p_user := NLS_UPPER(l_ssouser);
<a name="1009436"></a>return 0;
<a name="1009850"></a>END IF;
</pre> 
   <!-- Start Footer --> 
  </div> 
  <div class="OUTD"> 
   <hr> 
   <table cellspacing="0" cellpadding="0" width="100%"> 
    <tbody>
     <tr> 
      <td valign="BOTTOM" width="33%"> 
       <table cellspacing="0" cellpadding="0"> 
        <tbody>
         <tr> 
          <td align="CENTER"><a href="custom.htm"><img SRC="../../dcommon/gifs/larrow.gif" ALT="Go to previous page" BORDER="0" HEIGHT="30" WIDTH="30"></a></td> 
          <td align="CENTER"><a href="exp_imp.htm"><img SRC="../../dcommon/gifs/rarrow.gif" ALT="Go to next page" BORDER="0" HEIGHT="30" WIDTH="30"></a></td> 
         </tr> 
        </tbody>
       </table> </td> 
      <td align="CENTER" width="34%"> <a href="../../dcommon/html/cpyr.htm"><img SRC="../../dcommon/gifs/oracle.gif" ALT="Oracle" BORDER="0"><br> <font size="-2">Copyright © 1996, 2003 Oracle Corporation.</font></a> <br> <font size="-2">All Rights Reserved.</font> </td> 
      <td valign="BOTTOM" align="RIGHT" width="33%"> 
       <table cellspacing="0" cellpadding="0" width="144"> 
        <tbody>
         <tr> 
          <td align="CENTER" valign="TOP" width="25%"><a href="../../index.htm"><img SRC="../../dcommon/gifs/prodicon.gif" ALT="Go To Documentation Library" BORDER="0" HEIGHT="30" WIDTH="30"><br> <font size="-2">Home</font></a></td> 
          <td align="CENTER" valign="TOP" width="25%"><a href="../../manage.htm"><img SRC="../../dcommon/gifs/bookicon.gif" ALT="Go To Product List" BORDER="0" HEIGHT="30" WIDTH="30"><br> <font size="-2">Solution Area</font></a></td> 
          <td align="CENTER" valign="TOP" width="25%"><a href="toc.htm"><img SRC="../../dcommon/gifs/conticon.gif" ALT="Go To Table Of Contents" BORDER="0" HEIGHT="30" WIDTH="30"><br> <font size="-2">Contents</font></a></td> 
          <td align="CENTER" valign="TOP" width="25%"><a href="index.htm"><img SRC="../../dcommon/gifs/indxicon.gif" ALT="Go To Index" BORDER="0" HEIGHT="30" WIDTH="30"><br> <font size="-2">Index</font></a></td> 
         </tr> 
        </tbody>
       </table> </td> 
     </tr> 
    </tbody>
   </table> 
  </div>   
 </body>
</html>