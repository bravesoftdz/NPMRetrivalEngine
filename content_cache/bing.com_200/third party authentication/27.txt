<!doctype html>
<html class="no-js hasSidebar hasPageActions hasBreadcrumb " lang="en-us" dir="ltr">
 <head> 
  <meta charset="utf-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <meta property="og:title" content="Create MVC 5 App with Facebook, Twitter, LinkedIn and Google OAuth2 Sign-on (C#)"> 
  <meta property="og:image" content="https://docs.microsoft.com/_themes/docs.theme/master/en-us/_themes/images/microsoft-header.png"> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:site" content="@docsmsft"> 
  <meta name="twitter:title" content="Create MVC 5 App with Facebook, Twitter, LinkedIn and Google OAuth2 Sign-on (C#)"> 
  <meta name="twitter:description" content="This tutorial shows you how to build an ASP.NET MVC 5 web application that enables users to log in using OAuth 2.0 with credentials from an external authenti..."> 
  <meta name="twitter:image" content="https://docs.microsoft.com/_themes/docs.theme/master/en-us/_themes/images/microsoft-header.png"> 
  <meta name="twitter:image:alt" content="Microsoft Logo"> 
  <meta name="breadcrumb_path" content="/aspnet/breadcrumb/toc.json"> 
  <meta name="msc.legacyurl" content="/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on"> 
  <meta name="ms.assetid" content="81ee500f-fc37-40d6-8722-f1b64720fbb6"> 
  <meta name="msc.type" content="authoredcontent"> 
  <meta name="author" content="Rick-Anderson"> 
  <meta name="description" content="This tutorial shows you how to build an ASP.NET MVC 5 web application that enables users to log in using OAuth 2.0 with credentials from an external authenti..."> 
  <meta name="ms.author" content="aspnetcontent"> 
  <meta name="manager" content="wpickett"> 
  <meta name="uid" content="mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on"> 
  <meta name="ms.topic" content="article"> 
  <meta name="ms.date" content="04/03/2015"> 
  <meta name="ms.technology" content="dotnet-mvc"> 
  <meta name="ms.prod" content=".net-framework"> 
  <meta name="search.ms_sitename" content="Docs"> 
  <meta name="search.ms_docsetname" content="aspnet-conceptual"> 
  <meta name="version" content="0"> 
  <meta name="locale" content="en-us"> 
  <meta name="site_name" content="Docs"> 
  <meta name="search.ms_product" content="MSDN"> 
  <meta name="depot_name" content="MSDN.aspnet-conceptual"> 
  <meta name="updated_at" content="2017-09-22 03:07 AM"> 
  <meta name="gitcommit" content="https://github.com/aspnet/Docs/blob/dd3b4e1ba5e2305586ab306f6c2769f4a4a40cf3/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on.md"> 
  <meta name="original_content_git_url" content="https://github.com/aspnet/Docs/blob/live/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on.md"> 
  <meta name="document_id" content="09f83873-f374-7dc5-9e17-8cb959645526"> 
  <meta name="pagetype" content="Conceptual"> 
  <meta name="toc_rel" content="../../../toc.json"> 
  <meta name="pdf_url_template" content="https://docs.microsoft.com/pdfstore/en-us/MSDN.aspnet-conceptual/{branchName}{pdfName}"> 
  <meta name="word_count" content="2825"> 
  <meta name="scope" content="ASP.NET"> 
  <link href="https://docs.microsoft.com/en-us/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on" rel="canonical"> 
  <title>Create MVC 5 App with Facebook, Twitter, LinkedIn and Google OAuth2 Sign-on (C#) | Microsoft Docs</title> 
  <link rel="stylesheet" href="/_themes/docs.theme/master/en-us/_themes/css/870b0825531b1b071dff.site.css "> 
  <link rel="stylesheet" href="/_themes/docs.theme/master/en-us/_themes/css/870b0825531b1b071dff.conceptual.css "> 
  <script>
	var msDocs = {
		data:{
			contentLocale: 'en-us',
			contentDir: 'ltr',
			userLocale: 'en-us',
			userDir: 'ltr',
			pathToTheme: '/_themes/docs.theme/master/en-us/_themes/',
			pageTemplate: 'Conceptual',
			brand: '',
			forceVersionPicker:false		},
		functions:{},
		settings:{
			extendBreadcrumb: false
		}
	};
	if (!('Promise' in window && 'resolve' in window.Promise && 'reject' in window.Promise && 'all' in window.Promise && 'race' in window.Promise)) {
		document.write('<script src="/_themes/docs.theme/master/en-us/_themes/global/js/bluebird.min.js"><\/script>');
	}
	</script> 
  <!--[if lt IE 9]>
		<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.12.4.min.js"></script>
		<script src="/_themes/docs.theme/master/en-us/_themes/global/js/polyfills/all.js"></script>
	<![endif]--> 
  <!--[if gte IE 9]><!--> 
  <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.2.4.min.js"></script> 
  <!--<![endif]--> 
  <script>window.jQuery || document.write('<script src="/_themes/docs.theme/master/en-us/_themes/global/js/jquery/jquery-1.12.4.min.js"><\/script>')</script> 
  <script src="/_themes/docs.theme/master/en-us/_themes/global/js/global.min.js?v=263"></script> 
 </head> 
 <body> 
  <div id="headerAreaHolder" ms.pgarea="header" data-bi-name="header"> 
   <div id="uhfPlaceHolder" class="c-me"></div> 
  </div> 
  <div class="container mainContainer" lang="en-us" dir="ltr" ms.pgarea="body" data-bi-name="body"> 
   <main role="main" ms.cmpgrp="content" data-bi-name="content"> 
    <div id="main"> 
     <h1 id="create-an-aspnet-mvc-5-app-with-facebook-twitter-linkedin-and-google-oauth2-sign-on-c" sourcefile="mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on.md" sourcestartlinenumber="16" sourceendlinenumber="17">Create an ASP.NET MVC 5 App with Facebook, Twitter, LinkedIn and Google OAuth2 Sign-on (C#)</h1> 
     <div class="metadata loading" ms.cmpgrp="page info" data-bi-name="page info"> 
      <div> 
       <time class="date" datetime="4/3/2015 12:00:00 AM">2015-4-3</time> 
       <span class="reading-time">14 minutes to read</span> 
       <span class="contributors-text">Contributors</span> 
       <ul class="contributors" ms.cmpgrp="contributors" data-bi-name="contributors"> 
        <li><a href="https://github.com/Rick-Anderson" title="Rick Anderson" ms.cmpnm="contributorprofile" data-bi-name="contributorprofile"><img src="https://github.com/Rick-Anderson.png?size=16" alt="Rick Anderson"></a></li> 
        <li><a href="https://github.com/guardrex" title="Luke Latham" ms.cmpnm="contributorprofile" data-bi-name="contributorprofile"><img src="https://github.com/guardrex.png?size=16" alt="Luke Latham"></a></li> 
        <li><a href="https://github.com/badersur" title="Bader Nasser" ms.cmpnm="contributorprofile" data-bi-name="contributorprofile"><img src="https://github.com/badersur.png?size=16" alt="Bader Nasser"></a></li> 
        <li><a href="https://github.com/nkhalili" title="Navid Khalili" ms.cmpnm="contributorprofile" data-bi-name="contributorprofile"><img src="https://github.com/nkhalili.png?size=16" alt="Navid Khalili"></a></li> 
        <li><a href="https://github.com/tsahi" title="tsahi" ms.cmpnm="contributorprofile" data-bi-name="contributorprofile"><img src="https://github.com/tsahi.png?size=16" alt="tsahi"></a></li> 
        <li><a href="https://github.com/aspnet/Docs/blob/master/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on.md" ms.cmpnm="contributorshowall" data-bi-name="contributorshowall">all</a></li> 
       </ul> 
      </div> 
      <nav id="center-doc-outline" class="doc-outline" ms.cmpgrp="intopic toc" data-bi-name="intopic toc" role="navigation" aria-label="On page navigation"> 
       <h3>In this article</h3> 
      </nav> 
     </div> 
     <div>
      <div class="content"> 
       <p>by <a href="https://github.com/Rick-Anderson" data-linktype="external">Rick Anderson</a></p> 
       <blockquote>
        <p>This tutorial shows you how to build an ASP.NET MVC 5 web application that enables users to log in using <a href="http://oauth.net/2/" data-linktype="external">OAuth 2.0</a> with credentials from an external authentication provider, such as Facebook, Twitter, LinkedIn, Microsoft, or Google. For simplicity, this tutorial focuses on working with credentials from Facebook and Google.</p> 
        <p>Enabling these credentials in your web sites provides a significant advantage because millions of users already have accounts with these external providers. These users may be more inclined to sign up for your site if they do not have to create and remember a new set of credentials.</p> 
        <p>See also <a href="aspnet-mvc-5-app-with-sms-and-email-two-factor-authentication" data-linktype="relative-path">ASP.NET MVC 5 app with SMS and email Two-Factor Authentication</a>.</p> 
        <p>The tutorial also shows how to add profile data for the user, and how to use the Membership API to add roles. This tutorial was written by <a href="https://blogs.msdn.com/rickAndy" data-linktype="external">Rick Anderson</a> ( Please follow me on Twitter: <a href="https://twitter.com/RickAndMSFT" data-linktype="external">@RickAndMSFT</a> ).</p> 
       </blockquote> 
       <p><a id="start"></a></p> 
       <h2 id="getting-started">Getting Started</h2> 
       <p>Start by installing and running <a href="https://go.microsoft.com/fwlink/?LinkId=299058" data-linktype="external">Visual Studio Express 2013 for Web</a> or <a href="https://go.microsoft.com/fwlink/?LinkId=306566" data-linktype="external">Visual Studio 2013</a>. Install Visual Studio <a href="https://go.microsoft.com/fwlink/?LinkId=390521" data-linktype="external">2013 Update 3</a> or higher. For help with Dropbox, GitHub, Linkedin, Instagram, buffer, salesforce, STEAM, Stack Exchange, Tripit, twitch, Twitter, Yahoo and more, see this <a href="http://www.oauthforaspnet.com/" data-linktype="external">one stop guide</a>.</p> 
       <div class="NOTE">
        <h5>Note</h5>
        <p>You must install Visual Studio <a href="https://go.microsoft.com/fwlink/?LinkId=390521" data-linktype="external">2013 Update 3</a> or higher to use Google OAuth 2 and to debug locally without SSL warnings.</p> 
       </div> 
       <p>Click <strong>New Project</strong> from the <strong>Start</strong> page, or you can use the menu and select <strong>File</strong>, and then <strong>New Project</strong>.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image1.png" alt="" data-linktype="relative-path"> </p> 
       <p><a id="1st"></a></p> 
       <h2 id="creating-your-first-application">Creating Your First Application</h2> 
       <p>Click <strong>New Project</strong>, then select <strong>Visual C#</strong> on the left, then <strong>Web</strong> and then select <strong>ASP.NET Web Application</strong>. Name your project "MvcAuth" and then click <strong>OK</strong>.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image2.png" alt="" data-linktype="relative-path"></p> 
       <p>In the <strong>New ASP.NET Project</strong> dialog, click <strong>MVC</strong>. If the Authentication is not <strong>Individual User Accounts</strong>, click the <strong>Change Authentication</strong> button and select <strong>Individual User Accounts</strong>. By checking <strong>Host in the cloud</strong>, the app will be very easy to host in Azure.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image3.png" alt="" data-linktype="relative-path"></p> 
       <p>If you selected <strong>Host in the cloud</strong>, complete the configure dialog.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image4.png" alt="" data-linktype="relative-path"></p> 
       <h3 id="use-nuget-to-update-to-the-latest-owin-middleware">Use NuGet to update to the latest OWIN middleware</h3> 
       <p>Use the NuGet package manager to update the <a href="../../../aspnet/overview/owin-and-katana/getting-started-with-owin-and-katana" data-linktype="relative-path">OWIN middleware</a>. Select <strong>Updates</strong> in the left menu. You can click on the <strong>Update All</strong> button or you can search for only OWIN packages (shown in the next image):</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image5.png" alt="" data-linktype="relative-path"></p> 
       <p>In the image below, only OWIN packages are shown:</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image6.png" alt="" data-linktype="relative-path"></p> 
       <p>From the Package Manager Console (PMC), you can enter the <code>Update-Package</code> command, which will update all packages.</p> 
       <p>Press <strong>F5</strong> or <strong>Ctrl+F5</strong> to run the application. In the image below, the port number is 1234. When you run the application, you'll see a different port number.</p> 
       <p>Depending on the size of your browser window, you might need to click the navigation icon to see the <strong>Home</strong>, <strong>About</strong>, <strong>Contact</strong>, <strong>Register</strong> and <strong>Log in</strong> links.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image7.png" alt="" data-linktype="relative-path"><br><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image8.png" alt="" data-linktype="relative-path"> </p> 
       <p><a id="ssl"></a></p> 
       <h2 id="setting-up-ssl-in-the-project">Setting up SSL in the Project</h2> 
       <p>To connect to authentication providers like Google and Facebook, you will need to set up IIS-Express to use SSL. It's important to keep using SSL after login and not drop back to HTTP, your login cookie is just as secret as your username and password, and without using SSL you're sending it in clear-text across the wire. Besides, you've already taken the time to perform the handshake and secure the channel (which is the bulk of what makes HTTPS slower than HTTP) before the MVC pipeline is run, so redirecting back to HTTP after you're logged in won't make the current request or future requests much faster.</p> 
       <ol> 
        <li>In <strong>Solution Explorer</strong>, click the <strong>MvcAuth</strong> project.</li> 
        <li>Hit the F4 key to show the project properties. Alternatively, from the <strong>View</strong> menu you can select <strong>Properties Window</strong>.</li> 
        <li><p>Change <strong>SSL Enabled</strong> to True. </p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image9.png" alt="" data-linktype="relative-path"></p> </li> 
        <li>Copy the SSL URL (which will be <code>https://localhost:44300/</code> unless you've created other SSL projects).</li> 
        <li>In <strong>Solution Explorer</strong>, right click the <strong>MvcAuth</strong> project and select <strong>Properties</strong>.</li> 
        <li><p>Select the <strong>Web</strong> tab, and then paste the SSL URL into the <strong>Project Url</strong> box. Save the file (Ctl+S). You will need this URL to configure Facebook and Google authentication apps. </p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image10.png" alt="" data-linktype="relative-path"></p> </li> 
        <li><p>Add the <a href="https://msdn.microsoft.com/en-us/library/system.web.mvc.requirehttpsattribute.aspx" data-linktype="external">RequireHttps</a> attribute to the <code>Home</code> controller to require all requests must use HTTPS. A more secure approach is to add the <a href="https://msdn.microsoft.com/en-us/library/system.web.mvc.requirehttpsattribute.aspx" data-linktype="external">RequireHttps</a> filter to the application. See the section "Protect the Application with SSL and the Authorize Attribute" in my tutoral <a href="https://docs.microsoft.com/aspnet/core/security/authorization/secure-data" data-linktype="external">Create an ASP.NET MVC app with auth and SQL DB and deploy to Azure App Service</a>. A portion of the Home controller is shown below.</p> <pre><code class="lang-csharp" data-src="https://github.com/aspnet/Docs/blob/live/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/samples/sample1.cs" name="Main" highlight-lines="1">[RequireHttps]
public class HomeController : Controller
{
   public ActionResult Index()
   {
      return View();
   }
</code></pre></li> 
        <li><p>Press CTRL+F5 to run the application. If you've installed the certificate in the past, you can skip the rest of this section and jump to <a href="#goog" data-linktype="self-bookmark">Creating a Google app for OAuth 2 and connecting the app to the project</a>, otherwise, follow the instructions to trust the self-signed certificate that IIS Express has generated. </p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image11.png" alt="" data-linktype="relative-path"></p> </li> 
        <li><p>Read the <strong>Security Warning</strong> dialog and then click <strong>Yes</strong> if you want to install the certificate representing localhost. </p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image12.png" alt="" data-linktype="relative-path"></p> </li> 
        <li><p>IE shows the <em>Home</em> page and there are no SSL warnings. </p> <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image13.png" alt="" data-linktype="relative-path"></p> </li> 
        <li><p>Google Chrome also accepts the certificate and will show HTTPS content without a warning. Firefox uses its own certificate store, so it will display a warning. For our application you can safely click <strong>I Understand the Risks</strong>. </p> <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image14.png" alt="" data-linktype="relative-path"></p> </li> 
       </ol> 
       <p><a id="goog"></a></p> 
       <h2 id="creating-a-google-app-for-oauth-2-and-connecting-the-app-to-the-project">Creating a Google app for OAuth 2 and connecting the app to the project</h2> 
       <ol> 
        <li>Navigate to the <a href="https://console.developers.google.com/" data-linktype="external">Google Developers Console</a>.</li> 
        <li>If you haven't created a project before, select <strong>Credentials</strong> in the left tab, and then select <strong>Create</strong>.</li> 
        <li>In the left tab, click <strong>Credentials</strong>.</li> 
        <li><p>Click <strong>Create credentials</strong> then <strong>OAuth client ID</strong>. </p> 
         <ol> 
          <li>In the <strong>Create Client ID</strong> dialog, keep the default <strong>Web application</strong> for the application type.</li> 
          <li>Set the <strong>Authorized JavaScript</strong> origins to the SSL URL you used above (<code>https://localhost:44300/</code> unless you've created other SSL projects)</li> 
          <li>Set the <strong>Authorized redirect URI</strong> to:<br> <code>https://localhost:44300/signin-google/</code></li> 
         </ol> </li> 
        <li>Click the OAuth Consent screen menu item, then set your email address and product name. When you have completed the form click <strong>Save</strong>.</li> 
        <li><p>Click the Library menu item, search <strong>Google+ API</strong>, click on it then press Enable.</p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image15.png" alt="" data-linktype="relative-path"> </p> <p>The image below shows the enabled APIs. </p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image16.png" alt="" data-linktype="relative-path"></p> </li> 
        <li><p>From the Google APIs API Manager, visit the <strong>Credentials</strong> tab to obtain the <strong>Client ID</strong>. Download to save a JSON file with application secrets. Copy and paste the <strong>ClientId</strong> and <strong>ClientSecret</strong> into the <code>UseGoogleAuthentication</code> method found in the <em>Startup.Auth.cs</em> file in the <em>App_Start</em> folder. The <strong>ClientId</strong> and <strong>ClientSecret</strong> values shown below are samples and don't work.</p> <pre><code class="lang-csharp" data-src="https://github.com/aspnet/Docs/blob/live/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/samples/sample2.cs" name="Main" highlight-lines="37-39">public void ConfigureAuth(IAppBuilder app)
{
    // Configure the db context and user manager to use a single instance per request
    app.CreatePerOwinContext(ApplicationDbContext.Create);
    app.CreatePerOwinContext&lt;ApplicationUserManager&gt;(ApplicationUserManager.Create);

    // Enable the application to use a cookie to store information for the signed in user
    // and to use a cookie to temporarily store information about a user logging in with a third party login provider
    // Configure the sign in cookie
    app.UseCookieAuthentication(new CookieAuthenticationOptions
    {
        AuthenticationType = DefaultAuthenticationTypes.ApplicationCookie,
        LoginPath = new PathString("/Account/Login"),
        Provider = new CookieAuthenticationProvider
        {
            OnValidateIdentity = SecurityStampValidator.OnValidateIdentity&lt;ApplicationUserManager, ApplicationUser&gt;(
                validateInterval: TimeSpan.FromMinutes(30),
                regenerateIdentity: (manager, user) =&gt; user.GenerateUserIdentityAsync(manager))
        }
    });
    
    app.UseExternalSignInCookie(DefaultAuthenticationTypes.ExternalCookie);

    // Uncomment the following lines to enable logging in with third party login providers
    //app.UseMicrosoftAccountAuthentication(
    //    clientId: "",
    //    clientSecret: "");

    //app.UseTwitterAuthentication(
    //   consumerKey: "",
    //   consumerSecret: "");

    //app.UseFacebookAuthentication(
    //   appId: "",
    //   appSecret: "");

    app.UseGoogleAuthentication(
         clientId: "000-000.apps.googleusercontent.com",
         clientSecret: "00000000000");
}
</code></pre>
         <div class="WARNING">
          <h5>Warning</h5>
          <p>Security - Never store sensitive data in your source code. The account and credentials are added to the code above to keep the sample simple. See <a href="../../../identity/overview/features-api/best-practices-for-deploying-passwords-and-other-sensitive-data-to-aspnet-and-azure" data-linktype="relative-path">Best practices for deploying passwords and other sensitive data to ASP.NET and Azure App Service</a>.</p> 
         </div> </li> 
        <li><p>Press <strong>CTRL+F5</strong> to build and run the application. Click the <strong>Log in</strong> link. </p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image17.png" alt="" data-linktype="relative-path"></p> </li> 
        <li><p>Under <strong>Use another service to log in</strong>, click <strong>Google</strong>. </p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image18.png" alt="" data-linktype="relative-path"></p> 
         <div class="NOTE">
          <h5>Note</h5>
          <p>If you miss any of the steps above you will get a HTTP 401 error. Recheck your steps above. If you miss a required setting (for example <strong>product name</strong>), add the missing item and save, it can take a few minutes for authentication to work.</p> 
         </div> </li> 
        <li><p>You will be redirected to the google site where you will enter your credentials. </p> <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image19.png" alt="" data-linktype="relative-path"></p> </li> 
        <li><p>After you enter your credentials, you will be prompted to give permissions to the web application you just created:</p> <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image20.png" alt="" data-linktype="relative-path"></p> </li> 
        <li><p>Click <strong>Accept</strong>. You will now be redirected back to the <strong>Register</strong> page of the MvcAuth application where you can register your Google account. You have the option of changing the local email registration name used for your Gmail account, but you generally want to keep the default email alias (that is, the one you used for authentication). Click <strong>Register</strong>. </p> <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image21.png" alt="" data-linktype="relative-path"></p> </li> 
       </ol> 
       <p><a id="fb"></a></p> 
       <h2 id="creating-the-app-in-facebook-and-connecting-the-app-to-the-project">Creating the app in Facebook and connecting the app to the project</h2> 
       <p>For Facebook OAuth2 authentication, you need to copy to your project some settings from an application that you create in Facebook.</p> 
       <ol> 
        <li>In your browser, navigate to <a href="https://developers.facebook.com/apps" data-linktype="external">https://developers.facebook.com/apps</a> and log in by entering your Facebook credentials.</li> 
        <li>If you aren't already registered as a Facebook developer, click <strong>Register as a Developer</strong> and follow the directions to register.</li> 
        <li><p>On the <strong>Apps</strong> tab, click <strong>Create New App</strong>.</p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image22.png" alt="Create new app" data-linktype="relative-path"></p> </li> 
        <li><p>Enter an <strong>App Name</strong> and <strong>Category</strong>, then click <strong>Create App</strong>.</p> <p> This must be unique across Facebook. The <strong>App Namespace</strong> is the part of the URL that your App will use to access the Facebook application for authentication (for example, https://apps.facebook.com/{App Namespace}). If you don't specify an <strong>App Namespace</strong>, the <strong>App ID</strong> will be used for the URL. The <strong>App ID</strong> is a long system-generated number that you will see in the next step.</p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image23.png" alt="Create New App dialog" data-linktype="relative-path"></p> </li> 
        <li><p>Submit the standard security check.</p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image24.png" alt="Security Check" data-linktype="relative-path"></p> </li> 
        <li>Select <strong>Settings</strong> for the left menu bar.<img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image25.png" alt="Facebook Developer's menu bar" data-linktype="relative-path"></li> 
        <li>On the <strong>Basic</strong> settings section of the page select <strong>Add Platform</strong> to specify that you are adding a website application. <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image26.png" alt="Basic Settings" data-linktype="relative-path"></li> 
        <li><p>Select <strong>Website</strong> from the platform choices. </p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image27.png" alt="Platform choices" data-linktype="relative-path"></p> </li> 
        <li><p>Make a note of your <strong>App ID</strong> and your <strong>App Secret</strong> so that you can add both into your MVC application later in this tutorial. Also, Add your Site URL (<code>https://localhost:44300/</code>) to test your MVC application. Also, add a <strong>Contact Email</strong>. Then, select <strong>Save Changes</strong>. </p> <p> <img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image28.png" alt="Basic application details page" data-linktype="relative-path"></p> 
         <div class="NOTE">
          <h5>Note</h5>
          <p>Note that you will only be able to authenticate using the email alias you have registered. Other users and test accounts will not be able to register. You can grant other Facebook accounts access to the application on the Facebook <strong>Developer Roles</strong> tab.</p> 
         </div> </li> 
        <li>In Visual Studio, open <em>App_Start\Startup.Auth.cs</em>.</li> 
        <li><p>Copy and paste the <strong>AppId</strong> and <strong>App Secret</strong> into the <code>UseFacebookAuthentication</code> method. The <strong>AppId</strong> and <strong>App Secret</strong> values shown below are samples and will not work.</p> <pre><code class="lang-csharp" data-src="https://github.com/aspnet/Docs/blob/live/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/samples/sample3.cs" name="Main" highlight-lines="33-35,38-39">public void ConfigureAuth(IAppBuilder app)
{
    // Configure the db context and user manager to use a single instance per request
    app.CreatePerOwinContext(ApplicationDbContext.Create);
    app.CreatePerOwinContext&lt;ApplicationUserManager&gt;(ApplicationUserManager.Create);

    // Enable the application to use a cookie to store information for the signed in user
    // and to use a cookie to temporarily store information about a user logging in with a third party login provider
    // Configure the sign in cookie
    app.UseCookieAuthentication(new CookieAuthenticationOptions
    {
        AuthenticationType = DefaultAuthenticationTypes.ApplicationCookie,
        LoginPath = new PathString("/Account/Login"),
        Provider = new CookieAuthenticationProvider
        {
            OnValidateIdentity = SecurityStampValidator.OnValidateIdentity&lt;ApplicationUserManager, ApplicationUser&gt;(
                validateInterval: TimeSpan.FromMinutes(30),
                regenerateIdentity: (manager, user) =&gt; user.GenerateUserIdentityAsync(manager))
        }
    });
    
    app.UseExternalSignInCookie(DefaultAuthenticationTypes.ExternalCookie);

    // Uncomment the following lines to enable logging in with third party login providers
    //app.UseMicrosoftAccountAuthentication(
    //    clientId: "",
    //    clientSecret: "");

    //app.UseTwitterAuthentication(
    //   consumerKey: "",
    //   consumerSecret: "");

    app.UseFacebookAuthentication(
       appId: "000000000000000",
       appSecret: "000000000000000");

    app.UseGoogleAuthentication(
         clientId: "000000000000000.apps.googleusercontent.com",
         clientSecret: "000000000000000");
}
</code></pre></li> 
        <li>Click <strong>Save Changes</strong>.</li> 
        <li>Press <strong>CTRL+F5</strong> to run the application.</li> 
       </ol> 
       <p>Select <strong>Log in</strong> to display the Login page. Click <strong>Facebook</strong> under <strong>Use another service to log in.</strong></p> 
       <p>Enter your Facebook credentials.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image29.png" alt="" data-linktype="relative-path"></p> 
       <p>You will be prompted to grant permission for the application to access your public profile and friend list.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image30.png" alt="Facebook app details" data-linktype="relative-path"></p> 
       <p>You are now logged in. You can now register this account with the application.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image31.png" alt="" data-linktype="relative-path"></p> 
       <p>When you register, an entry is added to the <em>Users</em> table of the membership database.</p> 
       <p><a id="mdb"></a></p> 
       <h2 id="examine-the-membership-data">Examine the Membership Data</h2> 
       <p>In the <strong>View</strong> menu, click <strong>Server Explorer</strong>.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image32.png" alt="" data-linktype="relative-path"></p> 
       <p>Expand <strong>DefaultConnection (MvcAuth)</strong>, expand <strong>Tables</strong>, right click <strong>AspNetUsers</strong> and click <strong>Show Table Data</strong>.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image33.png" alt="" data-linktype="relative-path"></p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image34.png" alt="aspnetusers table data" data-linktype="relative-path"></p> 
       <p><a id="ap"></a></p> 
       <h2 id="adding-profile-data-to-the-user-class">Adding Profile Data to the User Class</h2> 
       <p>In this section you'll add birth date and home town to the user data during registration, as shown in the following image.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image35.png" alt="reg with home town and Bday" data-linktype="relative-path"></p> 
       <p>Open the <em>Models\IdentityModels.cs</em> file and add birth date and home town properties:</p> 
       <pre><code class="lang-csharp" data-src="https://github.com/aspnet/Docs/blob/live/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/samples/sample4.cs" name="Main" highlight-lines="3-4">public class ApplicationUser : IdentityUser
{
    public string HomeTown { get; set; }
    public System.DateTime? BirthDate { get; set; }
    public async Task&lt;ClaimsIdentity&gt; GenerateUserIdentityAsync(UserManager&lt;ApplicationUser&gt; manager)
    {
        // Note the authenticationType must match the one defined in CookieAuthenticationOptions.AuthenticationType
        var userIdentity = await manager.CreateIdentityAsync(this, DefaultAuthenticationTypes.ApplicationCookie);
        // Add custom user claims here
        return userIdentity;
    }
}
</code></pre>
       <p>Open the <em>Models\AccountViewModels.cs</em> file and the set birth date and home town properties in <code>ExternalLoginConfirmationViewModel</code>.</p> 
       <pre><code class="lang-csharp" data-src="https://github.com/aspnet/Docs/blob/live/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/samples/sample5.cs" name="Main" highlight-lines="8-9">public class ExternalLoginConfirmationViewModel
{
    [Required]
    [EmailAddress]
    [Display(Name = "Email")]
    public string Email { get; set; }

    public string HomeTown { get; set; }
    public System.DateTime? BirthDate { get; set; }
}
</code></pre>
       <p>Open the <em>Controllers\AccountController.cs</em> file and add code for birth date and home town in the <code>ExternalLoginConfirmation</code> action method as shown:</p> 
       <pre><code class="lang-csharp" data-src="https://github.com/aspnet/Docs/blob/live/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/samples/sample6.cs" name="Main" highlight-lines="21-23">[HttpPost]
[AllowAnonymous]
[ValidateAntiForgeryToken]
public async Task&lt;ActionResult&gt; ExternalLoginConfirmation(ExternalLoginConfirmationViewModel model, string returnUrl)
{
    if (User.Identity.IsAuthenticated)
    {
        return RedirectToAction("Manage");
    }

    if (ModelState.IsValid)
    {
        // Get the information about the user from the external login provider
        var info = await AuthenticationManager.GetExternalLoginInfoAsync();
        if (info == null)
        {
            return View("ExternalLoginFailure");
        }
        var user = new ApplicationUser() 
        {
            UserName = model.Email, Email = model.Email,
            BirthDate = model.BirthDate,
            HomeTown  = model.HomeTown
        
        };
        IdentityResult result = await UserManager.CreateAsync(user);
        if (result.Succeeded)
        {
            result = await UserManager.AddLoginAsync(user.Id, info.Login);
            if (result.Succeeded)
            {
                await SignInAsync(user, isPersistent: false);
                
                // For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=320771
                // Send an email with this link
                // string code = await UserManager.GenerateEmailConfirmationTokenAsync(user.Id);
                // var callbackUrl = Url.Action("ConfirmEmail", "Account", new { userId = user.Id, code = code }, protocol: Request.Url.Scheme);
                // SendEmail(user.Email, callbackUrl, "Confirm your account", "Please confirm your account by clicking this link");
                
                return RedirectToLocal(returnUrl);
            }
        }
        AddErrors(result);
    }

    ViewBag.ReturnUrl = returnUrl;
    return View(model);
}
</code></pre>
       <p>Add birth date and home town to the <em>Views\Account\ExternalLoginConfirmation.cshtml</em> file:</p> 
       <pre><code class="lang-cshtml" data-src="https://github.com/aspnet/Docs/blob/live/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/samples/sample7.cshtml" name="Main" highlight-lines="27-40">@model MvcAuth.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Register";
}
&lt;h2&gt;@ViewBag.Title.&lt;/h2&gt;
&lt;h3&gt;Associate your @ViewBag.LoginProvider account.&lt;/h3&gt;

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    &lt;h4&gt;Association Form&lt;/h4&gt;
    &lt;hr /&gt;
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    &lt;p class="text-info"&gt;
        You've successfully authenticated with &lt;strong&gt;@ViewBag.LoginProvider&lt;/strong&gt;.
            Please enter a user name for this site below and click the Register button to finish
            logging in.
    &lt;/p&gt;
    &lt;div class="form-group"&gt;
        @Html.LabelFor(m =&gt; m.Email, new { @class = "col-md-2 control-label" })
        &lt;div class="col-md-10"&gt;
            @Html.TextBoxFor(m =&gt; m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m =&gt; m.Email, "", new { @class = "text-danger" })
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        @Html.LabelFor(m =&gt; m.HomeTown, new { @class = "col-md-2 control-label" })
        &lt;div class="col-md-10"&gt;
            @Html.TextBoxFor(m =&gt; m.HomeTown, new { @class = "form-control" })
            @Html.ValidationMessageFor(m =&gt; m.HomeTown)
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        @Html.LabelFor(m =&gt; m.BirthDate, new { @class = "col-md-2 control-label" })
        &lt;div class="col-md-10"&gt;
            @Html.TextBoxFor(m =&gt; m.BirthDate, new { @class = "form-control" })
            @Html.ValidationMessageFor(m =&gt; m.BirthDate)
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        &lt;div class="col-md-offset-2 col-md-10"&gt;
            &lt;input type="submit" class="btn btn-default" value="Register" /&gt;
        &lt;/div&gt;
    &lt;/div&gt;
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
</code></pre>
       <p>Delete the membership database so you can again register your Facebook account with your application and verify you can add the new birth date and home town profile information.</p> 
       <p>From <strong>Solution Explorer</strong>, click the <strong>Show All Files</strong> icon, then right click <em>Add_Data\aspnet-MvcAuth-&lt;dateStamp&gt;.mdf</em> and click <strong>Delete</strong>.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image36.png" alt="" data-linktype="relative-path"></p> 
       <p>From the <strong>Tools</strong> menu, click <strong>NuGet Package Manger</strong>, then click <strong>Package Manager Console</strong> (PMC). Enter the following commands in the PMC.</p> 
       <ol> 
        <li>Enable-Migrations</li> 
        <li>Add-Migration Init</li> 
        <li>Update-Database</li> 
       </ol> 
       <p>Run the application and use FaceBook and Google to log in and register some users.</p> 
       <h2 id="examine-the-membership-data">Examine the Membership Data</h2> 
       <p>In the <strong>View</strong> menu, click <strong>Server Explorer</strong>.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image37.png" alt="" data-linktype="relative-path"></p> 
       <p>Right click <strong>AspNetUsers</strong> and click <strong>Show Table Data</strong>.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image38.png" alt="" data-linktype="relative-path"></p> 
       <p>The <code>HomeTown</code> and <code>BirthDate</code> fields are shown below.</p> 
       <p><img src="create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on/_static/image39.png" alt="" data-linktype="relative-path"></p> 
       <p><a id="off"></a></p> 
       <h2 id="logging-off-your-app-and-logging-in-with-another-account">Logging off your App and Logging in With Another Account</h2> 
       <p>If you log on to your app with Facebook,, and then log out and try to log in again with a different Facebook account (using the same browser), you will be immediately logged in to the previous Facebook account you used. In order to use another account, you need to navigate to Facebook and log out at Facebook. The same rule applies to any other 3rd party authentication provider. Alternatively, you can log in with another account by using a different browser.</p> 
       <h2 id="next-steps">Next Steps</h2> 
       <p>See <a href="http://www.jerriepelser.com/blog/introducing-the-yahoo-linkedin-oauth-security-providers-for-owin/" data-linktype="external">Introducing the Yahoo and LinkedIn OAuth security providers for OWIN</a> by Jerrie Pelser for Yahoo and LinkedIn instructions. See Jerrie's Pretty social login buttons for ASP.NET MVC 5 to get enable social login buttons.</p> 
       <p>Follow my tutorial <a href="https://docs.microsoft.com/aspnet/core/security/authorization/secure-data" data-linktype="external">Create an ASP.NET MVC app with auth and SQL DB and deploy to Azure App Service</a>, which continues this tutorial and shows the following:</p> 
       <ol> 
        <li>How to deploy your app to Azure.</li> 
        <li>How to secure you app with roles.</li> 
        <li>How to secure your app with the <a href="https://msdn.microsoft.com/en-us/library/system.web.mvc.requirehttpsattribute(v=vs.108).aspx" data-linktype="external">RequireHttps</a> and <a href="https://msdn.microsoft.com/en-us/library/system.web.mvc.authorizeattribute(v=vs.100).aspx" data-linktype="external">Authorize</a> filters.</li> 
        <li>How to use the membership API to add users and roles.</li> 
       </ol> 
       <p>Please leave feedback on how you liked this tutorial and what we could improve. You can also request new topics at <a href="http://aspnet.uservoice.com/forums/228522-show-me-how-with-code" data-linktype="external">Show Me How With Code</a>. You can even ask for and vote on new features to be added to ASP.NET. For example, you can vote for a tool to <a href="http://aspnet.uservoice.com/forums/41199-general-asp-net/suggestions/5646857-asp-net-identity-membership-db-tool-to-mangage-use" data-linktype="external">create and manage users and roles.</a></p> 
       <p>For an good explanation of how ASP.NET External Authentication Services work, see Robert McMurray's <a href="https://asp.net/web-api/overview/security/external-authentication-services" data-linktype="external">External Authentication Services</a>. Robert's article also goes into detail in enabling Microsoft and Twitter authentication. Tom Dykstra's excellent <a href="../getting-started/getting-started-with-ef-using-mvc/creating-an-entity-framework-data-model-for-an-asp-net-mvc-application" data-linktype="relative-path">EF/MVC tutorial</a> shows how to work with the Entity Framework.</p> 
      </div>
     </div> 
     <div id="comments-container" ms.cmpgrp="comments" data-bi-name="comments" role="form"></div> 
    </div> 
   </main> 
   <div class="pageActions"> 
    <div id="page-actions" ms.cmpgrp="pageactions" data-bi-name="pageactions" role="complementary"> 
     <div id="page-actions-content"> 
      <ul class="action-list"> 
       <li> <a href="#comments-container" id="comments-link" ms.cmpnm="comments" data-bi-name="comments"> <i class="icon icon-comments"></i>Comments </a> </li> 
       <li id="contenteditbtn"> <a href="https://github.com/aspnet/Docs/blob/master/aspnet/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on.md" title="Edit This Document" ms.cmpnm="edit" data-bi-name="edit"> <i class="icon icon-editor"></i>Edit </a> </li> 
       <li> <a href="#" class="sharebutton" title="Share This Document" ms.cmpnm="share" data-bi-name="share"><i class="icon icon-share"></i>Share</a> 
        <div class="share-container"> 
         <div>
          <a href="" class="share-twitter" ms.cmpnm="twitter" data-bi-name="twitter"><i class="icon icon-twitter"></i>Twitter</a>
         </div> 
         <div>
          <a href="" class="share-linkedin" ms.cmpnm="share-linkedin" data-bi-name="linkedin"><i class="icon icon-linkedin"></i>LinkedIn</a>
         </div> 
         <div>
          <a href="" class="share-facebook" ms.cmpnm="facebook" data-bi-name="facebook"><i class="icon icon-facebook"></i>Facebook</a>
         </div> 
         <div>
          <a href="" class="share-email" ms.cmpnm="email" data-bi-name="email"><i class="icon icon-email"></i>Email</a>
         </div> 
        </div> </li> 
       <li class="typeSep">|</li> 
       <li> <label for="theme-selector">Theme</label> <select id="theme-selector" data-bi-name="select-theme"> <option value="" class="removedOnload"></option> <option value="">Light</option> <option value="theme_night">Dark</option> </select> </li> 
      </ul> 
      <nav id="side-doc-outline" class="doc-outline" ms.cmpnm="intopic toc" data-bi-name="intopic toc" role="navigation" aria-label="On page navigation"> 
       <h3>In this article</h3> 
      </nav> 
     </div> 
    </div> 
   </div> 
   <ul class="breadcrumbs" ms.cmpgrp="breadcrumb" data-bi-name="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList" role="navigation" aria-label="Breadcrumb">
    <li></li>
   </ul> 
   <div class="sidebar" id="sidebar" ms.cmpgrp="left toc" data-bi-name="left toc" role="navigation" aria-label="Main Navigation" lang="en-us" dir="ltr"> 
    <div id="sidebarContent"> 
     <div class="filterHolder"> 
     </div> 
     <nav class="toc"></nav> 
     <div class="pdfDownloadHolder"></div> 
    </div> 
    <div class="tocSpace"></div> 
   </div> 
   <div id="menu-nav" class="dropdown-container" lang="en-us" dir="ltr"> 
    <div class="dropdown dropdown-full mobilenavi"> 
     <select> </select> 
    </div> 
   </div> 
  </div> 
  <div id="openFeedbackContainer" class="openfeedback-container footer-layout"></div> 
  <div class="container footerContainer"> 
   <footer id="footer" ms.pgarea="footer" data-bi-name="footer" class="footer-layout"> 
    <div class="container" role="contentinfo"> 
     <a data-mscc-ic="false" id="locale-selector-link" href="#" data-bi-name="select-locale" ms.cmpnm="select-locale"></a> 
     <ul class="links" ms.cmpgrp="footerlinks" data-bi-name="footerlinks"> 
      <li><a data-mscc-ic="false" href="https://docs.microsoft.com/teamblog" ms.cmpnm="bloglink" data-bi-name="bloglink">Blog</a></li> 
      <li><a data-mscc-ic="false" href="//privacy.microsoft.com/en-us/" ms.cmpnm="privacy" data-bi-name="privacy">Privacy &amp; Cookies</a></li> 
      <li><a data-mscc-ic="false" href="/en-us/legal/termsofuse" ms.cmpnm="termsofuse" data-bi-name="termsofuse">Terms of Use</a></li> 
      <li><a data-mscc-ic="false" href="//aka.ms/sitefeedback" ms.cmpnm="feedback" data-bi-name="feedback">Feedback</a></li> 
      <li id="impressum-section" hidden><a data-mscc-ic="false" id="impressum-link" href="#" ms.cmpnm="impressum" data-bi-name="impressum">Impressum</a></li> 
      <li><a data-mscc-ic="false" href="https://www.microsoft.com/en-us/legal/intellectualproperty/Trademarks/EN-US.aspx" ms.cmpnm="trademarks" data-bi-name="trademarks">Trademarks</a></li> 
     </ul> 
    </div> 
   </footer> 
  </div> 
  <script src="/_themes/docs.theme/master/en-us/_themes/javascript/870b0825531b1b071dff.conceptual.js"></script>  
 </body>
</html>