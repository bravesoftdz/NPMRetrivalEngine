<!doctype html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
 <head>
  <meta charset="UTF-8">
  <link type="text/css" media="all" href="https://howtodoinjava.com/wp-content/cache/autoptimize/css/autoptimize_7906321f6874ea586da3a450edacf454.css" rel="stylesheet">
  <title>Spring 3 Security Siteminder Pre-authentication Example - HowToDoInJava</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="keywords" content="PRE_AUTH_FILTER, Pre-authentication, Spring, Spring Security, Spring tutorial,Spring Security">
  <link rel="canonical" href="https://howtodoinjava.com/spring/spring-security/spring-3-security-siteminder-pre-authentication-example/">
  <link rel="publisher" href="https://plus.google.com/+LokeshGupta">
  <meta property="og:locale" content="en_US">
  <meta property="og:type" content="article">
  <meta property="og:title" content="Spring 3 Security Siteminder Pre-authentication Example - HowToDoInJava">
  <meta property="og:description" content="So far we have learned about securing spring application using login form based security, custom user details security and many more such security related concepts. In this post, I am giving an example of scenario where use is already authenticated via any third party application or tool e.g. site minder which is very common interface …">
  <meta property="og:url" content="https://howtodoinjava.com/spring/spring-security/spring-3-security-siteminder-pre-authentication-example/">
  <meta property="og:site_name" content="HowToDoInJava">
  <meta property="article:publisher" content="http://www.facebook.com/HowToDoInJava">
  <meta property="article:author" content="http://www.facebook.com/HowToDoInJAVA">
  <meta property="article:tag" content="PRE_AUTH_FILTER">
  <meta property="article:tag" content="Pre-authentication">
  <meta property="article:tag" content="Spring">
  <meta property="article:tag" content="Spring Security">
  <meta property="article:tag" content="Spring tutorial">
  <meta property="article:section" content="Spring Security">
  <meta property="article:published_time" content="2013-08-11T05:03:57+05:30">
  <meta property="article:modified_time" content="2016-06-04T13:08:12+05:30">
  <meta property="og:updated_time" content="2016-06-04T13:08:12+05:30">
  <meta property="og:image" content="//howtodoinjava.com/wp-content/uploads/spring_security_pre_authentication_error.png">
  <meta property="og:image" content="//howtodoinjava.com/wp-content/uploads/spring_security_pre_authentication_success.png">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:description" content="So far we have learned about securing spring application using login form based security, custom user details security and many more such security related concepts. In this post, I am giving an example of scenario where use is already authenticated via any third party application or tool e.g. site minder which is very common interface […]">
  <meta name="twitter:title" content="Spring 3 Security Siteminder Pre-authentication Example - HowToDoInJava">
  <meta name="twitter:site" content="@HowToDoInJava">
  <meta name="twitter:image" content="//howtodoinjava.com/wp-content/uploads/spring_security_pre_authentication_error.png">
  <meta name="twitter:creator" content="@HowToDoInJAVA"> 
  <script type="application/ld+json">{"@context":"http:\/\/schema.org","@type":"WebSite","@id":"#website","url":"https:\/\/howtodoinjava.com\/","name":"HowToDoInJava","potentialAction":{"@type":"SearchAction","target":"https:\/\/howtodoinjava.com\/?s={search_term_string}","query-input":"required name=search_term_string"}}</script> 
  <script type="application/ld+json">{"@context":"http:\/\/schema.org","@type":"Person","url":"https:\/\/howtodoinjava.com\/spring\/spring-security\/spring-3-security-siteminder-pre-authentication-example\/","sameAs":["http:\/\/www.facebook.com\/HowToDoInJava","https:\/\/plus.google.com\/+LokeshGupta","https:\/\/twitter.com\/HowToDoInJava"],"@id":"#person","name":"Lokesh Gupta"}</script> 
  <link rel="dns-prefetch" href="//s.w.org">
  <link rel="alternate" type="application/rss+xml" title="HowToDoInJava » Feed" href="https://howtodoinjava.com/feed/">
  <link rel="alternate" type="application/rss+xml" title="HowToDoInJava » Comments Feed" href="https://howtodoinjava.com/comments/feed/">
  <link rel="alternate" type="application/rss+xml" title="HowToDoInJava » Spring 3 Security Siteminder Pre-authentication Example Comments Feed" href="https://howtodoinjava.com/spring/spring-security/spring-3-security-siteminder-pre-authentication-example/feed/"> 
  <script type="text/javascript">var email_newsletter_widget_scripts = {"ajax_url":"https:\/\/howtodoinjava.com\/wp-admin\/admin-ajax.php","empty_email":"Please write your Email!","saving":"Saving..."};</script> 
  <!--[if lt IE 9]> <script type='text/javascript' src='https://howtodoinjava.com/wp-content/themes/genesis/lib/js/html5shiv.js?ver=3.7.3'></script> <![endif]-->
  <link rel="https://api.w.org/" href="https://howtodoinjava.com/wp-json/">
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://howtodoinjava.com/xmlrpc.php?rsd">
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://howtodoinjava.com/wp-includes/wlwmanifest.xml">
  <link rel="shortlink" href="https://howtodoinjava.com/?p=2906">
  <link rel="alternate" type="application/json+oembed" href="https://howtodoinjava.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fhowtodoinjava.com%2Fspring%2Fspring-security%2Fspring-3-security-siteminder-pre-authentication-example%2F">
  <link rel="alternate" type="text/xml+oembed" href="https://howtodoinjava.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fhowtodoinjava.com%2Fspring%2Fspring-security%2Fspring-3-security-siteminder-pre-authentication-example%2F&amp;format=xml">
  <meta name="google-site-verification" content="EV_Uq1MFIe3lcKLlf4xhcabIz-68zGeWx8pjwQH3pB8">
  <meta name="msvalidate.01" content="C71A4DAE3450D101003DA6DCE7D44ADE">
  <meta property="fb:pages" content="509161119109190">
  <link rel="dns-prefetch" href="//howtodoinjava.com">
  <link rel="dns-prefetch" href="//pagead2.googlesyndication.com">
  <link rel="dns-prefetch" href="//fonts.googleapis.com"> 
  <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
  <script>(adsbygoogle = window.adsbygoogle || []).push({
    google_ad_client: "ca-pub-2827350136257294",
    enable_page_level_ads: true
  });</script>
  <style type="text/css" media="screen">.simple-social-icons ul li a, .simple-social-icons ul li a:hover, .simple-social-icons ul li a:focus { background-color: #ffffff !important; border-radius: 3px; color: #666666 !important; border: 1px #666666 solid !important; font-size: 18px; padding: 9px; }  .simple-social-icons ul li a:hover, .simple-social-icons ul li a:focus { background-color: #ffffff !important; border-color: #333333 !important; color: #333333 !important; }  .simple-social-icons ul li a:focus { outline: 1px dotted #ffffff !important; }</style>
  <link rel="amphtml" href="https://howtodoinjava.com/spring/spring-security/spring-3-security-siteminder-pre-authentication-example/amp/">
  <style type="text/css" id="syntaxhighlighteranchor"></style>
  <link rel="icon" href="https://howtodoinjava.com/wp-content/uploads/2015/05/howtodoinjava_logo-55696c1cv1_site_icon-32x32.png" sizes="32x32">
  <link rel="icon" href="https://howtodoinjava.com/wp-content/uploads/2015/05/howtodoinjava_logo-55696c1cv1_site_icon-256x256.png" sizes="192x192">
  <link rel="apple-touch-icon-precomposed" href="https://howtodoinjava.com/wp-content/uploads/2015/05/howtodoinjava_logo-55696c1cv1_site_icon-256x256.png">
  <meta name="msapplication-TileImage" content="https://howtodoinjava.com/wp-content/uploads/2015/05/howtodoinjava_logo-55696c1cv1_site_icon.png">
 </head>
 <body data-rsssl="1" class="post-template-default single single-post postid-2906 single-format-standard custom-header header-full-width content-sidebar" itemscope itemtype="https://schema.org/WebPage">
  <div class="site-container">
   <header class="site-header" itemscope itemtype="https://schema.org/WPHeader">
    <div class="wrap">
     <div class="title-area">
      <p class="site-title"><a href="/" title="HowToDoInJava">HowToDoInJava</a></p>
     </div>
     <nav class="nav-primary" itemscope itemtype="https://schema.org/SiteNavigationElement">
      <div class="wrap">
       <ul id="menu-category-menu" class="menu genesis-nav-menu menu-primary">
        <li id="menu-item-8036" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-8036"><a href="https://howtodoinjava.com/java-tutorials-list-howtodoinjava/" itemprop="url"><span itemprop="name">All Tutorials</span></a></li>
        <li id="menu-item-8094" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-8094"><a href="https://howtodoinjava.com/java-8-tutorial/" itemprop="url"><span itemprop="name">Java 8</span></a></li>
        <li id="menu-item-3631" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3631"><a title="Java Interview Questions" rel="ipt-icon-bubbles2" href="https://howtodoinjava.com/java-interview-questions/" itemprop="url"><span itemprop="name">Interview Questions</span></a></li>
        <li id="menu-item-8034" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-8034"><a href="https://howtodoinjava.com/write-and-earn-money/" itemprop="url"><span itemprop="name">Write for Us</span></a></li>
       </ul>
      </div>
     </nav>
    </div>
   </header>
   <div class="site-inner">
    <div class="wrap">
     <div class="content-sidebar-wrap">
      <main class="content">
       <div class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList">
        <span xmlns:v="http://rdf.data-vocabulary.org/#"><span typeof="v:Breadcrumb"><a href="https://howtodoinjava.com/" rel="v:url" property="v:title">Home</a> &nbsp;&gt;&nbsp; <span rel="v:child" typeof="v:Breadcrumb"><a href="https://howtodoinjava.com/category/spring/" rel="v:url" property="v:title">Spring</a> &nbsp;&gt;&nbsp; <span rel="v:child" typeof="v:Breadcrumb"><a href="https://howtodoinjava.com/category/spring/spring-security/" rel="v:url" property="v:title">Spring Security</a> &nbsp;&gt;&nbsp; <span class="breadcrumb_last">Spring 3 Security Siteminder Pre-authentication Example</span></span></span></span></span>
       </div>
       <article class="post-2906 post type-post status-publish format-standard has-post-thumbnail category-spring-security tag-pre_auth_filter tag-pre-authentication tag-java-spring-tutorials tag-spring-security tag-spring-tutorial entry" itemscope itemtype="https://schema.org/CreativeWork">
        <header class="entry-header">
         <h1 class="entry-title" itemprop="headline">Spring 3 Security Siteminder Pre-authentication Example</h1>
         <p class="entry-meta"><time class="entry-time" itemprop="datePublished" datetime="2013-08-11T05:03:57+00:00">August 11, 2013</time> by <span class="entry-author" itemprop="author" itemscope itemtype="https://schema.org/Person"><span class="entry-author-name" itemprop="name">Lokesh Gupta</span></span></p>
        </header>
        <div class="entry-content" itemprop="text">
         <div style="width: 336px; height: 280px; margin: 6px 20px 20px 0px; float: left;">
          <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
          <ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-2827350136257294" data-ad-slot="6068795363"></ins>
          <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
         </div>
         <p>So far we have learned about securing <a title="spring 3 tutorials" href="//howtodoinjava.com"><strong>spring</strong></a> application using <a title="login form based spring security" href="//howtodoinjava.com/spring/spring-security/login-form-based-spring-3-security-example/"><strong>login form based security</strong></a>, <a title="Custom UserDetailsService example for spring 3 security" href="//howtodoinjava.com/spring/spring-security/custom-userdetailsservice-example-for-spring-3-security/"><strong>custom user details security</strong></a> and many more such security related concepts. In this post, I am giving an example of scenario where use is already authenticated via any third party application or tool e.g. <a title="site minder" href="https://docs.oracle.com/cd/E19944-01/819-4520/SiteMinder.html"><strong>site minder</strong></a> which is very common interface between multiple applications in a group.</p>
         <p>In this scenario, <strong>user has been pre-authenticated in any other application</strong> and get into your web application using site minder. Site minder sends a request header about pre-authenticated user which you can utilize to further authorize the user inside your application. You <strong>do not need to further authenticate the user</strong>, just verify user roles from database and provide appropriate access inside application.</p>
         <pre><strong>Note: Please keep in mind that site minder is only for example, in fact you can use any third party 
application to get pre-authenticated user. Only request header will change in each case.</strong></pre>
         <p>Lets follow the tutorial step by step.</p>
         <h2><strong>Step 1) Maven dependency</strong></h2>
         <p>I am using <a title="maven tutorials" href="//howtodoinjava.com/maven/"><strong>maven</strong></a> for runtime dependencies so giving pom.xml. If you are using ANT then download respective JARs and add them in class path.</p>
         <pre class="brush: xml; title: ; notranslate" title="">
&lt;properties&gt;
	&lt;spring.version&gt;3.0.5.RELEASE&lt;/spring.version&gt;
	&lt;jackson-mapper-asl.version&gt;1.9.9&lt;/jackson-mapper-asl.version&gt;
    &lt;jaxb-api.version&gt;2.2.7&lt;/jaxb-api.version&gt;
  &lt;/properties&gt;
  &lt;dependencies&gt;
    &lt;!-- Spring 3 dependencies --&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.springframework&lt;/groupId&gt;
		&lt;artifactId&gt;spring-core&lt;/artifactId&gt;
		&lt;version&gt;${spring.version}&lt;/version&gt;
		&lt;scope&gt;runtime&lt;/scope&gt;
	&lt;/dependency&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.springframework&lt;/groupId&gt;
		&lt;artifactId&gt;spring-web&lt;/artifactId&gt;
		&lt;version&gt;${spring.version}&lt;/version&gt;
		&lt;scope&gt;runtime&lt;/scope&gt;
	&lt;/dependency&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.springframework&lt;/groupId&gt;
		&lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;
		&lt;version&gt;${spring.version}&lt;/version&gt;
		&lt;scope&gt;runtime&lt;/scope&gt;
	&lt;/dependency&gt;
	&lt;!-- Spring Security --&gt;
	&lt;dependency&gt;
	    &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
	    &lt;artifactId&gt;spring-security-core&lt;/artifactId&gt;
	    &lt;version&gt;${spring.version}&lt;/version&gt;
	    &lt;type&gt;jar&lt;/type&gt;
	    &lt;scope&gt;runtime&lt;/scope&gt;
	&lt;/dependency&gt;
	&lt;dependency&gt;
	    &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
	    &lt;artifactId&gt;spring-security-web&lt;/artifactId&gt;
	    &lt;version&gt;${spring.version}&lt;/version&gt;
	    &lt;type&gt;jar&lt;/type&gt;
	    &lt;scope&gt;runtime&lt;/scope&gt;
	&lt;/dependency&gt;
	&lt;dependency&gt;
	    &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
	    &lt;artifactId&gt;spring-security-config&lt;/artifactId&gt;
	    &lt;version&gt;${spring.version}&lt;/version&gt;
	    &lt;type&gt;jar&lt;/type&gt;
	    &lt;scope&gt;runtime&lt;/scope&gt;
	&lt;/dependency&gt;
	&lt;dependency&gt;
	    &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
	    &lt;artifactId&gt;spring-security-taglibs&lt;/artifactId&gt;
	    &lt;version&gt;${spring.version}&lt;/version&gt;
	    &lt;type&gt;jar&lt;/type&gt;
	    &lt;scope&gt;runtime&lt;/scope&gt;
	&lt;/dependency&gt;
  &lt;/dependencies&gt;
</pre>
         <h2><strong>Step 2) Update web.xml file</strong></h2>
         <p>There is nothing much in web.xml file. Just add context config location and spring security related filter mappings.</p>
         <pre class="brush: xml; title: ; notranslate" title="">
&lt;web-app&gt;
  &lt;display-name&gt;www.howtodoinjava.com&lt;/display-name&gt;
  
  	&lt;servlet&gt;
		&lt;servlet-name&gt;spring-mvc&lt;/servlet-name&gt;
		&lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
		&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
	&lt;/servlet&gt;
 
	&lt;servlet-mapping&gt;
		&lt;servlet-name&gt;spring-mvc&lt;/servlet-name&gt;
		&lt;url-pattern&gt;/*&lt;/url-pattern&gt;
	&lt;/servlet-mapping&gt;
 
	&lt;context-param&gt;
		&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
		&lt;param-value&gt;/WEB-INF/spring-mvc-servlet.xml&lt;/param-value&gt;
	&lt;/context-param&gt;
	
	&lt;filter&gt;
	    &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;
	    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
	&lt;/filter&gt;
	&lt;filter-mapping&gt;
        &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;
        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
 
	&lt;listener&gt;
		&lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
	&lt;/listener&gt;
&lt;/web-app&gt;
</pre>
         <h2><strong>Step 3) Spring configuration file</strong></h2>
         <p>This is most important step because here we will configure the pre authentication security related mappings. Lets look at the file:</p>
         <pre class="brush: xml; title: ; notranslate" title="">
&lt;beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.3.xsd"&gt;
     
     &lt;!-- Annotation are configuring the application --&gt;
     &lt;mvc:annotation-driven/&gt;
	
     &lt;!-- Scan this package for all config annotations --&gt;
	&lt;context:component-scan base-package="com.howtodoinjava.web" /&gt;
	
	&lt;security:http use-expressions="true" auto-config="false" entry-point-ref="http403EntryPoint"&gt;
    	&lt;!-- Additional http configuration omitted --&gt;
    	&lt;security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" /&gt;
    	&lt;security:custom-filter position="PRE_AUTH_FILTER" ref="siteminderFilter" /&gt;
  	&lt;/security:http&gt;

    &lt;bean id="siteminderFilter" class="org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter"&gt;
	    &lt;property name="principalRequestHeader" value="SM_USER"/&gt;
	    &lt;property name="authenticationManager" ref="authenticationManager" /&gt;
	&lt;/bean&gt;
	
  	&lt;bean id="preauthAuthProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider"&gt;
	    &lt;property name="preAuthenticatedUserDetailsService"&gt;
	      	&lt;bean id="userDetailsServiceWrapper"  class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper"&gt;
	        	&lt;property name="userDetailsService" ref="customUserDetailsService"/&gt;
	      	&lt;/bean&gt;
	    &lt;/property&gt;
    &lt;/bean&gt;

    &lt;security:authentication-manager alias="authenticationManager"&gt;
      	&lt;security:authentication-provider ref="preauthAuthProvider" /&gt;
    &lt;/security:authentication-manager&gt;	
    
    &lt;bean id="customUserDetailsService" class="com.howtodoinjava.security.CustomUserDetailsService"&gt;&lt;/bean&gt;
    &lt;bean id="http403EntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"&gt;&lt;/bean&gt;
    
&lt;/beans&gt;
</pre>
         <p>Lets understand this configuration:</p>
         <ol>
          <li>“<strong>mvc:annotation-driven</strong>” is used to tell spring that it needs to scan the annotations in base package specified in “<strong>context:component-scan</strong>” for searching the resource mappings.</li>
          <li>“<strong>security:http</strong>” configuration specifies security related configuration and options. “<strong>use-expressions</strong>” tells that while matching the “<strong>access</strong>” property in “security:intercept-url”, expressions are allowed and should be parsed.</li>
          <li>“<strong>security:custom-filter</strong>” specifies definition of a custom filter which will be invoked to verify user’s validity.</li>
          <li><strong>PRE_AUTH_FILTER</strong> assures that this filter will be invoked before other authentication/authorization handling. I have defined a siteminder filter for this. You can name it to another name.</li>
          <li>“<strong>principalRequestHeader</strong>” is important because it is the request header attribute which will be checked once user come to application from another application. So, ask this header from third party provider to integrate here.</li>
          <li>“<strong>authenticationManager</strong>” is ultimately using “customUserDetailsService” which I have written in “com.howtodoinjava.security.CustomUserDetailsService” class. This class implements <a title="UserDetailsService" href="http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/core/userdetails/UserDetailsService.html"><strong>UserDetailsService</strong></a> interface and have one method <strong>loadUserByUsername()</strong>. This method must return a authenticated user interface of type “<a title="UserDetails" href="http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/core/userdetails/UserDetails.html"><strong>org.springframework.security.core.userdetails.UserDetails</strong></a>“. This object will have other authorization details such as user role, which will be used in further security.</li>
         </ol>
         <h2><strong>Step 4) Write custom UserDetailsService class</strong></h2>
         <p>This class will get the username passed from third party application and username is passed as request header e.g. in our case “<strong>SM_USER</strong>“.</p>
         <pre class="brush: java; title: ; notranslate" title="">
package com.howtodoinjava.security;

import org.springframework.dao.DataAccessException;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.GrantedAuthorityImpl;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;

public class CustomUserDetailsService implements UserDetailsService
{
	public UserDetails loadUserByUsername(String username)
	        throws UsernameNotFoundException, DataAccessException
    {
		System.out.println("username recieved :: " + username);
		@SuppressWarnings("deprecation")
		
		//Get this user details from database and set its roles also here
		
		UserDetails user = new User(username, "password", true, true, true, true,
				new GrantedAuthority[]{ new GrantedAuthorityImpl("ROLE_USER") });
		return user;
    }
}
</pre>
         <h2><strong>Step 5) Write secured resources to verify</strong></h2>
         <p>I ave written two very basic classes for sake of simplicity. I will try to access them with and without request header “SM_USER”.</p>
         <p><strong>DemoController.java</strong></p>
         <pre class="brush: java; title: ; notranslate" title="">
package com.howtodoinjava.web;

@Controller
@RequestMapping("/users")
public class DemoController 
{
	@RequestMapping(method = RequestMethod.GET, value="/{id}", headers="Accept=application/xml")
	public @ResponseBody User getUserById(@PathVariable String id) 
	{
		User user = new User();
		user.setFirstName("john");
		user.setLastName("adward");
		return user;
	}
	
	@RequestMapping(method = RequestMethod.GET,  headers="Accept=application/xml")
	public @ResponseBody Users getAllUsers() 
	{
		User user1 = new User();
		user1.setFirstName("john");
		user1.setLastName("adward");
		
		User user2 = new User();
		user2.setFirstName("tom");
		user2.setLastName("hanks");
		
		Users users = new Users();
		users.setUsers(new ArrayList&lt;User&gt;());
		users.getUsers().add(user1);
		users.getUsers().add(user2);
		
		return users;
	}
}
</pre>
         <p><strong>Users.java</strong></p>
         <pre class="brush: java; title: ; notranslate" title="">
@XmlRootElement(name="users")
@XmlAccessorType(XmlAccessType.NONE)
public class Users 
{
	@XmlElement(name="user")
	private Collection&lt;User&gt; users;

	public Collection&lt;User&gt; getUsers() {
		return users;
	}

	public void setUsers(Collection&lt;User&gt; users) {
		this.users = users;
	}
}
</pre>
         <p><strong>User.java</strong></p>
         <pre class="brush: java; title: ; notranslate" title="">
@XmlRootElement(name="user")
@XmlAccessorType(XmlAccessType.NONE)
public class User {
	
	@XmlElement(name="first-name")
	private String firstName;
	
	@XmlElement(name="last-name")
	private String lastName;
	
	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
}
</pre>
         <h2><strong>Step 6) Test the application</strong></h2>
         <p>Lets deploy the application in tomcat server and test it.</p>
         <p><strong>Case 1 :: Without “SM_USER” request header</strong></p>
         <p>This will throw following exception:</p>
         <pre class="brush: java; title: ; notranslate" title="">
org.springframework.security.web.authentication.preauth.PreAuthenticatedCredentialsNotFoundException: SM_USER header not found in request.
	at org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter.getPreAuthenticatedPrincipal(RequestHeaderAuthenticationFilter.java:43)
	at org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doAuthenticate(AbstractPreAuthenticatedProcessingFilter.java:98)
	at org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(AbstractPreAuthenticatedProcessingFilter.java:86)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
</pre>
         <figure id="attachment_2907" style="width: 650px" class="wp-caption aligncenter">
          <img class=" wp-image-2907 " title="Spring security pre-authentication error" alt="Spring security pre-authentication error" src="//howtodoinjava.com/wp-content/uploads/spring_security_pre_authentication_error.png" width="650" height="500">
          <figcaption class="wp-caption-text">
           Spring security pre-authentication error
          </figcaption>
         </figure>
         <p><strong>Case 2 :: With “SM_USER” request header</strong></p>
         <p>This time user will be able to access the resource.</p>
         <figure id="attachment_2908" style="width: 650px" class="wp-caption aligncenter">
          <img class=" wp-image-2908 " title="Spring security pre-authentication success" alt="Spring security pre-authentication success" src="//howtodoinjava.com/wp-content/uploads/spring_security_pre_authentication_success.png" width="650" height="400">
          <figcaption class="wp-caption-text">
           Spring security pre-authentication success
          </figcaption>
         </figure>
         <p>To download the sourcecode of above tutorial, please follow below download link.</p>
         <pre><a title="spring security pre authentication demo source code" href="https://docs.google.com/file/d/0B7yo2HclmjI4a080SnpaLS0wcjg/edit?usp=sharing"><strong>Sourcecode Download</strong></a></pre>
         <p><strong>Happy Learning !!</strong></p>
         <div style="margin: 40px auto; text-align: center;"> 
          <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
          <ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-2827350136257294" data-ad-slot="8679230966"></ins> 
          <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
         </div>
        </div>
        <footer class="entry-footer"></footer>
       </article>
       <div class="after-entry widget-area">
        <section id="e_newsletter_subscribe-8" class="widget widget_e_newsletter_subscribe">
         <div class="widget-wrap">
          <h4 class="widget-title widgettitle">Stay Updated with Awesome Weekly Newsletter</h4>
          <div class="e-newsletter-widget">
           <div id="message" style="color:#000000; display:none; background-color: #FFFFE0;border-color: #E6DB55;margin: 5px 0 15px;-moz-border-radius: 3px 3px 3px 3px;border-style: solid;border-width: 1px;padding: 5px;max-width: 700px;"></div>
           <form action="" method="post" name="subscribes_form" id="subscribes_form"> 
            <input type="hidden" name="newsletter_action" id="newsletter_action" value="">
            <div id="add_member" class="e-newsletter-widget-screen">
             <p><label for="e_newsletter_email">Join our <strong>5500+</strong> subscribers and get access to industry news, best practices and much more !!</label></p> 
             <input type="text" name="e_newsletter_email" id="e_newsletter_email" value="" placeholder="Your email address...">
             <p> <input type="submit" id="new_subscribe" class="enewletter_widget_submit" value="Subscribe"></p>
            </div>
            <div id="subscribe_to_groups" class="e-newsletter-widget-screen" style="display:none;">
             <p> <input type="submit" id="subscribe_to_groups" class="enewletter_widget_submit" value="Subscribe"></p>
            </div>
            <div id="unsubscribe_from_groups" class="e-newsletter-widget-screen" style="display:none;">
             <p> <input type="submit" id="unsubscribe_from_groups" class="enewletter_widget_submit" value="Unsubscribe"></p>
            </div>
            <div id="manage_subscriptions" class="e-newsletter-widget-screen" style="display:none;"> 
             <input type="hidden" name="unsubscribe_code" id="unsubscribe_code" value="">
             <p> <a href="#" id="unsubscribe" class="enewletter_widget_submit">Unsubscribe</a></p>
            </div>
            <div id="subscribe" class="e-newsletter-widget-screen" style="display:none;"> 
             <input type="submit" id="subscribe" class="enewletter_widget_submit" value="Subscribe to Newsletters">
            </div>
           </form>
          </div>
         </div>
        </section>
       </div>
       <section class="author-box" itemprop="author" itemscope itemtype="https://schema.org/Person">
        <h4 class="author-box-title">About <span itemprop="name">Lokesh Gupta</span></h4>
        <div class="author-box-content" itemprop="description">
         <p>Founded HowToDoInJava.com in late 2012. I love computers, programming and solving problems everyday. A family guy with fun loving nature. You can find me on <a href="https://facebook.com/howtodoinjava" rel="external nofollow">Facebook</a>, <a href="https://twitter.com/howtodoinjava" rel="external nofollow">Twitter</a> and <a href="https://plus.google.com/+LokeshGupta" rel="external nofollow">Google Plus</a>.</p>
        </div>
       </section>
       <div class="entry-comments" id="comments">
        <h3>Feedback, Discussion and Comments</h3>
        <ol class="comment-list">
         <li class="comment even thread-even depth-1" id="comment-21596">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Susheela</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2016-04-27T12:03:04+00:00" itemprop="datePublished">April 27, 2016</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>but <code>loadUserByUsername</code> method is getting called only during server startup..<br> If I need to call this method during login time for every other user after authentication by some third party, then what I need to do.??<br> Please help me in this…</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-21596" onclick="return addComment.moveForm( &quot;comment-21596&quot;, &quot;21596&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Susheela">Reply</a>
           </div>
          </article></li>
         <li class="comment odd alt thread-odd thread-alt depth-1" id="comment-21583">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Avanish Shah</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2016-04-23T11:30:45+00:00" itemprop="datePublished">April 23, 2016</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>1 Very Important update:<br> In Method:<br> UserDetails loadUserByUsername(String username){}</p>
            <p>For this method to be used in Dao class, You must write annotation: @Transactional(readOnly = true)<br> Otherwise It will not work.<br> Reference link:<br> <a href="https://stackoverflow.com/questions/26984481/own-springsecurity-userdetailsservice-dont-load-user-could-not-obtain-transact" rel="nofollow">http://stackoverflow.com/questions/26984481/own-springsecurity-userdetailsservice-dont-load-user-could-not-obtain-transact</a></p>
            <p>Well, thanks alot for your work.</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-21583" onclick="return addComment.moveForm( &quot;comment-21583&quot;, &quot;21583&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Avanish Shah">Reply</a>
           </div>
          </article></li>
         <li class="comment even thread-even depth-1" id="comment-20241">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Thales</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2016-01-26T10:24:43+00:00" itemprop="datePublished">January 26, 2016</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Hi,</p>
            <p>Perfect article, but one question.</p>
            <p>In my class CustomUserDetailsService, I have one System.out.println(“username recieved :: ” + username); but it never print nothing, is it normal?</p>
            <p>Thanks</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-20241" onclick="return addComment.moveForm( &quot;comment-20241&quot;, &quot;20241&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Thales">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor odd alt depth-2" id="comment-20260">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh Gupta</a></span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2016-01-27T06:43:14+00:00" itemprop="datePublished">January 27, 2016</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>No, it should. Try a log statement. May be you are missing system console in your IDE.</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-20260" onclick="return addComment.moveForm( &quot;comment-20260&quot;, &quot;20260&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh Gupta">Reply</a>
             </div>
            </article></li>
          </ul></li>
         <li class="comment even thread-odd thread-alt depth-1" id="comment-19733">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Diwakar</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2015-12-10T17:57:31+00:00" itemprop="datePublished">December 10, 2015</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>How do we retrieve the ROLES and all? As I can see loadbyUserName method is called which has only username.. so is there any way I can get those as well?</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-19733" onclick="return addComment.moveForm( &quot;comment-19733&quot;, &quot;19733&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Diwakar">Reply</a>
           </div>
          </article></li>
         <li class="comment odd alt thread-even depth-1" id="comment-19210">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">nityananda</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2015-11-11T06:32:17+00:00" itemprop="datePublished">November 11, 2015</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Hi Lokesh,<br> can you please post a example of spring security with with sso .</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-19210" onclick="return addComment.moveForm( &quot;comment-19210&quot;, &quot;19210&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to nityananda">Reply</a>
           </div>
          </article></li>
         <li class="comment even thread-odd thread-alt depth-1" id="comment-16139">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">RAJ</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2015-06-04T14:44:58+00:00" itemprop="datePublished">June 4, 2015</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Hi,<br> I have have a rest services that is calling ODM. But now we are having siteminder for single sign on and it is not able to make a call to ODM. I am planning of change the connection code to support that single sign on. Can you please let me know how can I change my connection code so that it suport single sign on using siteminder.</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-16139" onclick="return addComment.moveForm( &quot;comment-16139&quot;, &quot;16139&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to RAJ">Reply</a>
           </div>
          </article></li>
         <li class="comment odd alt thread-even depth-1" id="comment-15357">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Swapnil</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2015-03-27T11:06:55+00:00" itemprop="datePublished">March 27, 2015</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>In my case,I have authenticated the user and created auth token using sha hashing technique.when after user tries to access specific url,I am using this auth token to identify the user and then authorize it for the accessed URL.My concern was repeated DB calls,first for authentication and then authorization.Since my app is REST based,it doesn’t maintain client state on server side.So,for every request,I have to make one DB call just for authorization.Is there any way to avoid these may DB calls?</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-15357" onclick="return addComment.moveForm( &quot;comment-15357&quot;, &quot;15357&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Swapnil">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor even depth-2" id="comment-15362">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh</a></span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2015-03-28T03:18:46+00:00" itemprop="datePublished">March 28, 2015</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>HI Swapnil, being stateless is main feature of REST, and I will not advise to violate this rule. REST says that each request from client to server must contain all of the information necessary to understand the request, and cannot take advantage of “any stored context” on the server.<br> To make things faster, however you can use server-side DB cache (e.g. ehcache) which will improve performance.</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-15362" onclick="return addComment.moveForm( &quot;comment-15362&quot;, &quot;15362&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh">Reply</a>
             </div>
            </article>
            <ul class="children">
             <li class="comment odd alt depth-3" id="comment-15363">
              <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
               <header class="comment-header">
                <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Swapnil</span></p>
                <p class="comment-meta"><time class="comment-time" datetime="2015-03-28T04:45:51+00:00" itemprop="datePublished">March 28, 2015</time></p>
               </header>
               <div class="comment-content" itemprop="text">
                <p>What if I send user authorities in auth token as well, and use them for all future requests?I guess this will be in accordance with REST paradigm without any performance cost(I am using SSL for all request and auth header will be encrypted at all times).</p>
               </div>
               <div class="comment-reply">
                <a rel="nofollow" class="comment-reply-link" href="#comment-15363" onclick="return addComment.moveForm( &quot;comment-15363&quot;, &quot;15363&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Swapnil">Reply</a>
               </div>
              </article>
              <ul class="children">
               <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor even depth-4" id="comment-15373">
                <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
                 <header class="comment-header">
                  <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh</a></span></p>
                  <p class="comment-meta"><time class="comment-time" datetime="2015-03-28T17:57:57+00:00" itemprop="datePublished">March 28, 2015</time></p>
                 </header>
                 <div class="comment-content" itemprop="text">
                  <p>Requests can be manipulated using tools.. no matter how you encrypt it. NEVER rely on your client for security related things. Always crosscheck them in server before giving access to protected resources.</p>
                 </div>
                 <div class="comment-reply">
                  <a rel="nofollow" class="comment-reply-link" href="#comment-15373" onclick="return addComment.moveForm( &quot;comment-15373&quot;, &quot;15373&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh">Reply</a>
                 </div>
                </article></li>
               <li class="comment odd alt depth-4" id="comment-15746">
                <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
                 <header class="comment-header">
                  <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">karthik</span></p>
                  <p class="comment-meta"><time class="comment-time" datetime="2015-04-23T14:11:56+00:00" itemprop="datePublished">April 23, 2015</time></p>
                 </header>
                 <div class="comment-content" itemprop="text">
                  <p>you do it by encrypting the user+roles.. the client request will have a token like userAbc.roleA-branchB-roleC-etc.#!@!@!encrypted-hashed-of-userAbc.roleA-branchB@~!@~</p>
                  <p>The key to this encryption (or a salt if you hash it) is with server side, so client cannot tamper it..</p>
                 </div>
                 <div class="comment-reply">
                  <a rel="nofollow" class="comment-reply-link" href="#comment-15746" onclick="return addComment.moveForm( &quot;comment-15746&quot;, &quot;15746&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to karthik">Reply</a>
                 </div>
                </article></li>
              </ul></li>
            </ul></li>
          </ul></li>
         <li class="comment even thread-odd thread-alt depth-1" id="comment-13581">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Pavan Sandeep</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2014-11-13T17:09:42+00:00" itemprop="datePublished">November 13, 2014</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Very Good Article. I have a question :<br> What if the Siteminder is sending extra headers like FIRST_NAME, LAST_NAME, USER_GROUPS etc. ? and we want to store them in our custom UserDetails object. At what point can I get the headers ? Do I need to write a custom filter extending the RequestHeaderAuthFilter and grab the extra headers from HttpServletRequest and add it to credentials property in Authentication class ? Or is there a nifty way that I can do it inside loadUserByUserName method ?</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-13581" onclick="return addComment.moveForm( &quot;comment-13581&quot;, &quot;13581&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Pavan Sandeep">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment odd alt depth-2" id="comment-26292">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">AK</span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2017-08-21T21:52:06+00:00" itemprop="datePublished">August 21, 2017</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>were you able to find the solution on how to grab extra header details ?</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-26292" onclick="return addComment.moveForm( &quot;comment-26292&quot;, &quot;26292&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to AK">Reply</a>
             </div>
            </article></li>
          </ul></li>
         <li class="comment even thread-even depth-1" id="comment-13343">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Mohit</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2014-10-24T20:55:15+00:00" itemprop="datePublished">October 24, 2014</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>I may not have understood the complete context of above implementation, but if the user is pre-authenticated using Siteminder or SSO, why you still need to create a UserDetails object with username and password.</p>
            <p>I have a application where i just need to create roles based on request headers passed to the application from SSO enabled server and want to use those roles in JSP file using spring security tags. Is it possible?</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-13343" onclick="return addComment.moveForm( &quot;comment-13343&quot;, &quot;13343&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Mohit">Reply</a>
           </div>
          </article></li>
         <li class="comment odd alt thread-odd thread-alt depth-1" id="comment-11252">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://gravatar.com/vinayakbhadage" class="comment-author-link" rel="external nofollow" itemprop="url">vinayakbhadage</a></span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2014-10-08T03:15:24+00:00" itemprop="datePublished">October 8, 2014</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Thank you lokesh.. This is really helpful :)</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-11252" onclick="return addComment.moveForm( &quot;comment-11252&quot;, &quot;11252&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to vinayakbhadage">Reply</a>
           </div>
          </article></li>
         <li class="comment even thread-even depth-1" id="comment-5201">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://plus.google.com/104213928982897454209" class="comment-author-link" rel="external nofollow" itemprop="url">Vikas Vasnik</a></span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2014-07-14T06:36:56+00:00" itemprop="datePublished">July 14, 2014</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Hello Lokesh Nice Example, I want to implement SiteMinder Auth but there is already one application in tomcat container doing that,in similar fashion I want to do it for another app so what are the classes and process should be follow is it same or something different in Spring MVC .</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-5201" onclick="return addComment.moveForm( &quot;comment-5201&quot;, &quot;5201&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Vikas Vasnik">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor odd alt depth-2" id="comment-5207">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh</a></span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2014-07-14T09:16:57+00:00" itemprop="datePublished">July 14, 2014</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>Without knowing what your other application does and how it uses siteminder, I cannot make any statement.. for obvious reasons.</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-5207" onclick="return addComment.moveForm( &quot;comment-5207&quot;, &quot;5207&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh">Reply</a>
             </div>
            </article></li>
          </ul></li>
         <li class="comment even thread-odd thread-alt depth-1" id="comment-3285">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="http://www.inoneo.com" class="comment-author-link" rel="external nofollow" itemprop="url">Benoit</a></span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2014-05-09T20:07:37+00:00" itemprop="datePublished">May 9, 2014</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Thanks for this great tutorial. Just a quick note, you can use ‘new SimpleGrantedAuthority(“ROLE_USER”)’ instead of using the deprecated class ‘new GrantedAuthorityImpl(“ROLE_USER”)’.</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-3285" onclick="return addComment.moveForm( &quot;comment-3285&quot;, &quot;3285&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Benoit">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor odd alt depth-2" id="comment-3287">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh</a></span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2014-05-09T20:44:31+00:00" itemprop="datePublished">May 9, 2014</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>Thanks for suggestion.</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-3287" onclick="return addComment.moveForm( &quot;comment-3287&quot;, &quot;3287&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh">Reply</a>
             </div>
            </article></li>
          </ul></li>
         <li class="comment even thread-even depth-1" id="comment-3208">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">MV</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2014-05-07T01:16:50+00:00" itemprop="datePublished">May 7, 2014</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Lokesh, My application has already implemented form login and now, we are trying to add SSO through pre auth filter. I am not able to figure out the configuration syntax both form login filter and pre auth filter. Can you please guide me on this?</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-3208" onclick="return addComment.moveForm( &quot;comment-3208&quot;, &quot;3208&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to MV">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor odd alt depth-2" id="comment-3209">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh</a></span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2014-05-07T01:54:38+00:00" itemprop="datePublished">May 7, 2014</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>You should be using configuration from here as well: <a href="https://howtodoinjava.com/spring/spring-security/login-form-based-spring-3-security-example/" rel="nofollow">https://howtodoinjava.com/spring/spring-security/login-form-based-spring-3-security-example/</a></p>
              <p>Magic will happen in SecurityInterceptor class you will write. There you will check if user was successfully authenticated SSO or not? If not then redirect him to login page.</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-3209" onclick="return addComment.moveForm( &quot;comment-3209&quot;, &quot;3209&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh">Reply</a>
             </div>
            </article></li>
          </ul></li>
         <li class="comment even thread-odd thread-alt depth-1" id="comment-2316">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">T.L.</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2014-03-24T11:28:11+00:00" itemprop="datePublished">March 24, 2014</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Thank you for the great tutorial. I do have a foolish question but hopefully you can answer it. How is the SM_USER being set. I am able to generate the error when it is not set, but I do not see how you passed ‘demo’ to the the SM_USER. Could you please explain?</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-2316" onclick="return addComment.moveForm( &quot;comment-2316&quot;, &quot;2316&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to T.L.">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor odd alt depth-2" id="comment-2318">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh</a></span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2014-03-24T11:45:04+00:00" itemprop="datePublished">March 24, 2014</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>If you see in the image after section “Case 2 :: With “SM_USER” request header”, I am passing the request header “SM_USER” and set it’s value to “demo”. It is just like you pass “accept” o “content-type” request headers in your request. Basically, in configured environment, it will be passed by your thirdparty application through siteminder.</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-2318" onclick="return addComment.moveForm( &quot;comment-2318&quot;, &quot;2318&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh">Reply</a>
             </div>
            </article>
            <ul class="children">
             <li class="comment even depth-3" id="comment-7085">
              <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
               <header class="comment-header">
                <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Atl</span></p>
                <p class="comment-meta"><time class="comment-time" datetime="2014-08-19T10:12:15+00:00" itemprop="datePublished">August 19, 2014</time></p>
               </header>
               <div class="comment-content" itemprop="text">
                <p>Hey Lokesh,<br> Are you using any tool to do it or How are you setting up. Highly Appreciated if you can share the steps to do it. Thanks</p>
               </div>
               <div class="comment-reply">
                <a rel="nofollow" class="comment-reply-link" href="#comment-7085" onclick="return addComment.moveForm( &quot;comment-7085&quot;, &quot;7085&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Atl">Reply</a>
               </div>
              </article>
              <ul class="children">
               <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor odd alt depth-4" id="comment-7088">
                <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
                 <header class="comment-header">
                  <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh</a></span></p>
                  <p class="comment-meta"><time class="comment-time" datetime="2014-08-19T10:30:08+00:00" itemprop="datePublished">August 19, 2014</time></p>
                 </header>
                 <div class="comment-content" itemprop="text">
                  <p>I am not using any tool apart from RESTClient firefox plugin for testing the APIs.</p>
                 </div>
                 <div class="comment-reply">
                  <a rel="nofollow" class="comment-reply-link" href="#comment-7088" onclick="return addComment.moveForm( &quot;comment-7088&quot;, &quot;7088&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh">Reply</a>
                 </div>
                </article></li>
              </ul></li>
            </ul></li>
          </ul></li>
         <li class="comment even thread-even depth-1" id="comment-2069">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://www.facebook.com/abhishekamte" class="comment-author-link" rel="external nofollow" itemprop="url">Abhishek Amte</a></span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2014-02-27T16:21:41+00:00" itemprop="datePublished">February 27, 2014</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Thanks alot. All of your examples were very helpful for me. I have a Spring application where I load my jsps and then through ajax calls interact with rest services. I need to secure both of these, but with basic auth there is no logout/custom login for MVC. Now my configuration is follows – on the server I have two authentications defined in the xml basic for pattern /rest/** and form based for /**. How should I pass username and password for each request for REST services?</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-2069" onclick="return addComment.moveForm( &quot;comment-2069&quot;, &quot;2069&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Abhishek Amte">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor odd alt depth-2" id="comment-2070">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh</a></span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2014-02-27T17:24:37+00:00" itemprop="datePublished">February 27, 2014</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>For me, it’s very bad idea to send username and password in each request. Authenticate once and then use something else everytime (e.g. jsessionid or IP of authenticated user or any encrypted cookie stored in client system).</p>
              <p>But, if still you want to pass parameters, you can use something like this:</p>
              <p><code>$.ajax( {<br> url : '/rest/user',<br> dataType : 'json',<br> beforeSend : function(xhr) {<br> var bytes = Crypto.charenc.Binary.stringToBytes(username + ":" + password);<br> var base64 = Crypto.util.bytesToBase64(bytes);<br> xhr.setRequestHeader("Authorization", "Basic " + base64);<br> },<br> error : function(xhr, ajaxOptions, thrownError) {<br> //handle error<br> },<br> success : function(model) {<br> //<br> }<br> });</code></p>
              <p>Reference: <a href="https://code.google.com/p/crypto-js/" rel="nofollow">http://code.google.com/p/crypto-js/</a></p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-2070" onclick="return addComment.moveForm( &quot;comment-2070&quot;, &quot;2070&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh">Reply</a>
             </div>
            </article>
            <ul class="children">
             <li class="comment even depth-3" id="comment-2071">
              <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
               <header class="comment-header">
                <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://www.facebook.com/abhishekamte" class="comment-author-link" rel="external nofollow" itemprop="url">Abhishek Amte</a></span></p>
                <p class="comment-meta"><time class="comment-time" datetime="2014-02-27T17:55:56+00:00" itemprop="datePublished">February 27, 2014</time></p>
               </header>
               <div class="comment-content" itemprop="text">
                <p>Thanks alot. Yeah I know its a bad idea. I need the basic auth for REST services used by mobile apps, and form-based for web. Can u suggest me some good solution and point me to the right resources for that</p>
               </div>
               <div class="comment-reply">
                <a rel="nofollow" class="comment-reply-link" href="#comment-2071" onclick="return addComment.moveForm( &quot;comment-2071&quot;, &quot;2071&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Abhishek Amte">Reply</a>
               </div>
              </article>
              <ul class="children">
               <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor odd alt depth-4" id="comment-2072">
                <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
                 <header class="comment-header">
                  <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com/" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh</a></span></p>
                  <p class="comment-meta"><time class="comment-time" datetime="2014-02-27T18:08:22+00:00" itemprop="datePublished">February 27, 2014</time></p>
                 </header>
                 <div class="comment-content" itemprop="text">
                  <p>Mobile Apps: No idea.<br> Using Scripting: Above jquey ajax call will give you a base.<br> Using normal html forms: See “JAX-RS Security” section in <a href="https://howtodoinjava.com/restful-web-service/" rel="nofollow">https://howtodoinjava.com/restful-web-service/</a></p>
                  <p>If above does not answer your query, please elaborate more on what you want to accomplish.</p>
                 </div>
                 <div class="comment-reply">
                  <a rel="nofollow" class="comment-reply-link" href="#comment-2072" onclick="return addComment.moveForm( &quot;comment-2072&quot;, &quot;2072&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh">Reply</a>
                 </div>
                </article>
                <ul class="children">
                 <li class="comment even depth-5" id="comment-2073">
                  <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
                   <header class="comment-header">
                    <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://www.facebook.com/abhishekamte" class="comment-author-link" rel="external nofollow" itemprop="url">Abhishek Amte</a></span></p>
                    <p class="comment-meta"><time class="comment-time" datetime="2014-02-27T18:24:01+00:00" itemprop="datePublished">February 27, 2014</time></p>
                   </header>
                   <div class="comment-content" itemprop="text">
                    <p>My project already has REST services. And they work perfectly. And the website too works fine. The web controllers only serve empty jsp pages. And after the jsp pages are loaded, they make call to REST api and interact with the DB and get the data (This was one of the requirements). So I need security for both of them.</p>
                   </div>
                   <div class="comment-reply">
                    <a rel="nofollow" class="comment-reply-link" href="#comment-2073" onclick="return addComment.moveForm( &quot;comment-2073&quot;, &quot;2073&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Abhishek Amte">Reply</a>
                   </div>
                  </article></li>
                </ul></li>
              </ul></li>
            </ul></li>
          </ul></li>
         <li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1537">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Manjunath</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2013-12-24T20:38:21+00:00" itemprop="datePublished">December 24, 2013</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Thanks Lokesh, this is a good example.<br> My application already has a spring security form-based login, my requirement is if SM_USER is not present in http headers or is invalid it must allow form based login.</p>
            <p>Currently, what happening is if SM_USER is not present it through a internal error “SM_USER header not found in request”, in that case can we show them the login form to accept username and password and do normal login process ?</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-1537" onclick="return addComment.moveForm( &quot;comment-1537&quot;, &quot;1537&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Manjunath">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor even depth-2" id="comment-1538">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh Gupta</a></span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2013-12-24T23:23:02+00:00" itemprop="datePublished">December 24, 2013</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>Yes, it should be done in this way.</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-1538" onclick="return addComment.moveForm( &quot;comment-1538&quot;, &quot;1538&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh Gupta">Reply</a>
             </div>
            </article>
            <ul class="children">
             <li class="comment odd alt depth-3" id="comment-1539">
              <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
               <header class="comment-header">
                <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Manjunath</span></p>
                <p class="comment-meta"><time class="comment-time" datetime="2013-12-30T17:51:37+00:00" itemprop="datePublished">December 30, 2013</time></p>
               </header>
               <div class="comment-content" itemprop="text">
                <p>Thanks…I solved this by adding<br> This way if SM_USER is missing, it will not through the error instead continue to show login page.</p>
                <p>But now the scenario is that in my loadUserByUsername, i need to set session timeout for the authenticated user manually. and secondly, i need to redirect based on role. Can you please help how to do this.</p>
               </div>
               <div class="comment-reply">
                <a rel="nofollow" class="comment-reply-link" href="#comment-1539" onclick="return addComment.moveForm( &quot;comment-1539&quot;, &quot;1539&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Manjunath">Reply</a>
               </div>
              </article></li>
             <li class="comment even depth-3" id="comment-7103">
              <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
               <header class="comment-header">
                <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Abraham</span></p>
                <p class="comment-meta"><time class="comment-time" datetime="2014-08-19T15:07:49+00:00" itemprop="datePublished">August 19, 2014</time></p>
               </header>
               <div class="comment-content" itemprop="text">
                <p>How to do this please help…</p>
               </div>
               <div class="comment-reply">
                <a rel="nofollow" class="comment-reply-link" href="#comment-7103" onclick="return addComment.moveForm( &quot;comment-7103&quot;, &quot;7103&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Abraham">Reply</a>
               </div>
              </article>
              <ul class="children">
               <li class="comment odd alt depth-4" id="comment-7200">
                <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
                 <header class="comment-header">
                  <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Abraham</span></p>
                  <p class="comment-meta"><time class="comment-time" datetime="2014-08-21T12:13:56+00:00" itemprop="datePublished">August 21, 2014</time></p>
                 </header>
                 <div class="comment-content" itemprop="text">
                  <p>Please help I need to have a approach where try SiteMinder first. if dont get then Use the login page /guest/login.htm to login. Appreciate if you can share the spring security config xml….. Thanks in advance</p>
                 </div>
                 <div class="comment-reply">
                  <a rel="nofollow" class="comment-reply-link" href="#comment-7200" onclick="return addComment.moveForm( &quot;comment-7200&quot;, &quot;7200&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Abraham">Reply</a>
                 </div>
                </article></li>
              </ul></li>
            </ul></li>
           <li class="comment even depth-2" id="comment-3193">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">MV</span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2014-05-06T02:34:14+00:00" itemprop="datePublished">May 6, 2014</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>Manjunath,</p>
              <p>I have been working on exact scenario you have described above. Could you please let me know, how you configured both form login filter and pre auth filter together in your application?</p>
              <p>Thanks</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-3193" onclick="return addComment.moveForm( &quot;comment-3193&quot;, &quot;3193&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to MV">Reply</a>
             </div>
            </article></li>
          </ul></li>
         <li class="comment odd alt thread-even depth-1" id="comment-1534">
          <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
           <header class="comment-header">
            <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Naresh</span></p>
            <p class="comment-meta"><time class="comment-time" datetime="2013-08-13T08:45:43+00:00" itemprop="datePublished">August 13, 2013</time></p>
           </header>
           <div class="comment-content" itemprop="text">
            <p>Thanks for the example.<br> How do we manage session? and How do we implement Hibernate cache (1st &amp; 2nd level)? when using spring pre-authentication</p>
           </div>
           <div class="comment-reply">
            <a rel="nofollow" class="comment-reply-link" href="#comment-1534" onclick="return addComment.moveForm( &quot;comment-1534&quot;, &quot;1534&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Naresh">Reply</a>
           </div>
          </article>
          <ul class="children">
           <li class="comment even depth-2" id="comment-1535">
            <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
             <header class="comment-header">
              <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name">Idree</span></p>
              <p class="comment-meta"><time class="comment-time" datetime="2013-10-18T02:01:15+00:00" itemprop="datePublished">October 18, 2013</time></p>
             </header>
             <div class="comment-content" itemprop="text">
              <p>Have you ever done something when few resources are authenticated normally and some other resources are pre-authenticated?<br> Let me know if you have done similar to this. Thanks!</p>
             </div>
             <div class="comment-reply">
              <a rel="nofollow" class="comment-reply-link" href="#comment-1535" onclick="return addComment.moveForm( &quot;comment-1535&quot;, &quot;1535&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Idree">Reply</a>
             </div>
            </article>
            <ul class="children">
             <li class="comment byuser comment-author-lokeshgupta1981 bypostauthor odd alt depth-3" id="comment-1536">
              <article itemprop="comment" itemscope itemtype="https://schema.org/Comment">
               <header class="comment-header">
                <p class="comment-author" itemprop="author" itemscope itemtype="https://schema.org/Person"> <span itemprop="name"><a href="https://howtodoinjava.com" class="comment-author-link" rel="external nofollow" itemprop="url">Lokesh Gupta</a></span></p>
                <p class="comment-meta"><time class="comment-time" datetime="2013-10-18T06:38:33+00:00" itemprop="datePublished">October 18, 2013</time></p>
               </header>
               <div class="comment-content" itemprop="text">
                <p>Yes.</p>
               </div>
               <div class="comment-reply">
                <a rel="nofollow" class="comment-reply-link" href="#comment-1536" onclick="return addComment.moveForm( &quot;comment-1536&quot;, &quot;1536&quot;, &quot;respond&quot;, &quot;2906&quot; )" aria-label="Reply to Lokesh Gupta">Reply</a>
               </div>
              </article></li>
            </ul></li>
          </ul></li>
        </ol>
       </div>
       <div id="respond" class="comment-respond">
        <h3 id="reply-title" class="comment-reply-title">Ask Questions &amp; Share Feedback <small><a rel="nofollow" id="cancel-comment-reply-link" href="/spring/spring-security/spring-3-security-siteminder-pre-authentication-example/#respond" style="display:none;">Cancel reply</a></small></h3>
        <form action="https://howtodoinjava.com/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate>
         <p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p>
         <p class="comment-form-comment"><label for="comment">Comment</label><textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required></textarea></p>
         <div class="commentTags">
          *Want to Post Code Snippets or XML content? Please use 
          <span class="tag">[java]</span> ... 
          <span class="tag">[/java]</span> tags otherwise code may not appear partially or even fully. e.g.
         </div>
         <pre>[java] <br>public static void main (String[] args) {<br>...<br>} <br>[/java]</pre>
         <p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required="true" required></p>
         <p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required="true" required></p>
         <p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200"></p>
         <p class="cptch_block"><span class="cptch_title">Help me fight spammers. Solve this simple math.<span class="required"> *</span></span><span class="cptch_wrap cptch_math_actions"><label class="cptch_label" for="cptch_input_5"><span class="cptch_span">2</span><span class="cptch_span">&nbsp;+&nbsp;</span><span class="cptch_span"><input id="cptch_input_5" class="cptch_input cptch_wp_comments" type="text" autocomplete="off" name="cptch_number" value="" maxlength="2" size="2" aria-required="true" required style="margin-bottom:0;display:inline;font-size: 12px;width: 40px;"></span><span class="cptch_span">&nbsp;=&nbsp;</span><span class="cptch_span">11</span><input type="hidden" name="cptch_result" value="lLk="><input type="hidden" name="cptch_time" value="1506893287"><input type="hidden" name="cptch_form" value="wp_comments"></label><span class="cptch_reload_button_wrap hide-if-no-js">
            <noscript>
             <style type="text/css">.hide-if-no-js {

								display: none !important;

							}</style>
            </noscript><span class="cptch_reload_button dashicons dashicons-update"></span></span></span></p>
         <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="2906" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"></p>
         <p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="4dfba71f50"></p>
         <p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="50"></p>
        </form>
       </div>
      </main>
      <aside class="sidebar sidebar-primary widget-area" role="complementary" aria-label="Primary Sidebar" itemscope itemtype="https://schema.org/WPSideBar">
       <section id="text-37" class="widget widget_text">
        <div class="widget-wrap">
         <h4 class="widget-title widgettitle">Search Tutorials</h4>
         <div class="textwidget">
          <form action="https://howtodoinjava.com/search-results"> 
           <input class="search-input" name="q" placeholder="Type and Press ENTER..." size="35" type="text">
          </form>
         </div>
        </div>
       </section>
       <section id="simple-social-icons-2" class="widget simple-social-icons">
        <div class="widget-wrap">
         <ul class="alignleft">
          <li class="ssi-email"><a href="mailto:howtodoinjava@gmail.com" target="_blank">
            <svg role="img" class="social-email" aria-labelledby="social-email">
             <title id="social-email">Email</title>
             <use xlink:href="https://howtodoinjava.com/wp-content/plugins/simple-social-icons/symbol-defs.svg#social-email"></use>
            </svg></a></li>
          <li class="ssi-facebook"><a href="https://www.facebook.com/HowToDoInJava" target="_blank">
            <svg role="img" class="social-facebook" aria-labelledby="social-facebook">
             <title id="social-facebook">Facebook</title>
             <use xlink:href="https://howtodoinjava.com/wp-content/plugins/simple-social-icons/symbol-defs.svg#social-facebook"></use>
            </svg></a></li>
          <li class="ssi-rss"><a href="https://howtodoinjava.com/feed/" target="_blank">
            <svg role="img" class="social-rss" aria-labelledby="social-rss">
             <title id="social-rss">RSS</title>
             <use xlink:href="https://howtodoinjava.com/wp-content/plugins/simple-social-icons/symbol-defs.svg#social-rss"></use>
            </svg></a></li>
          <li class="ssi-twitter"><a href="https://twitter.com/HowToDoInJava" target="_blank">
            <svg role="img" class="social-twitter" aria-labelledby="social-twitter">
             <title id="social-twitter">Twitter</title>
             <use xlink:href="https://howtodoinjava.com/wp-content/plugins/simple-social-icons/symbol-defs.svg#social-twitter"></use>
            </svg></a></li>
         </ul>
        </div>
       </section>
       <section id="nav_menu-55" class="widget widget_nav_menu">
        <div class="widget-wrap">
         <h4 class="widget-title widgettitle">Recommended</h4>
         <div class="menu-recommended-reading-container">
          <ul id="menu-recommended-reading" class="menu">
           <li id="menu-item-5713" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5713"><a title="10 Life Lessions" href="https://howtodoinjava.com/java-resources/10-life-lessons-i-have-learned-in-last-few-years/" itemprop="url">10 Life Lessons</a></li>
           <li id="menu-item-9519" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9519"><a rel="nofollow" href="https://howtodoinjava.com/start-new-blog/" itemprop="url">How to Start New Blog</a></li>
           <li id="menu-item-5724" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5724"><a href="https://howtodoinjava.com/security/how-to-generate-secure-password-hash-md5-sha-pbkdf2-bcrypt-examples/" itemprop="url">Secure Hash Algorithms</a></li>
           <li id="menu-item-8119" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-8119"><a href="https://howtodoinjava.com/java-regular-expression-tutorials/" itemprop="url">Regular Expressions</a></li>
           <li id="menu-item-5714" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5714"><a href="https://howtodoinjava.com/server/tomcat/a-birds-eye-view-on-how-web-servers-work/" itemprop="url">How Web Servers work?</a></li>
           <li id="menu-item-5717" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5717"><a href="https://howtodoinjava.com/core-java/io/how-java-io-works-internally-at-lower-level/" itemprop="url">How Java I/O Works Internally?</a></li>
           <li id="menu-item-5722" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5722"><a href="https://howtodoinjava.com/java-resources/best-way-to-learn-java/" itemprop="url">Best Way to Learn Java</a></li>
           <li id="menu-item-5733" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-5733"><a href="https://howtodoinjava.com/java-best-practices/" itemprop="url">Java Best Practices</a></li>
           <li id="menu-item-5734" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-5734"><a href="https://howtodoinjava.com/java-interview-questions/" itemprop="url">Java Interview Questions</a></li>
           <li id="menu-item-9622" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-9622"><a href="https://howtodoinjava.com/microservices/microservices-definition-principles-benefits/" itemprop="url">Microservices Tutorial</a></li>
           <li id="menu-item-6405" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-6405"><a title="REST API Tutorial" target="_blank" rel="nofollow" href="http://restfulapi.net" itemprop="url">REST API Tutorial</a></li>
          </ul>
         </div>
        </div>
       </section>
       <section id="text-43" class="widget widget_text">
        <div class="widget-wrap">
         <div class="textwidget">
          <p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><ins class="adsbygoogle" style="display: inline-block; width: 300px; height: 600px;" data-ad-client="ca-pub-2827350136257294" data-ad-slot="8206506561"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></p>
         </div>
        </div>
       </section>
       <section id="nav_menu-29" class="widget widget_nav_menu">
        <div class="widget-wrap">
         <h4 class="widget-title widgettitle">Spring Security Tutorial</h4>
         <div class="menu-spring-security-container">
          <ul id="menu-spring-security" class="menu">
           <li id="menu-item-8054" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-8054"><a href="https://howtodoinjava.com/spring-security-tutorial/" itemprop="url">Security – Introduction</a></li>
           <li id="menu-item-5482" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5482"><a href="https://howtodoinjava.com/spring/spring-security/xml-config-based-method-level-spring-security-using-protect-pointcut/" itemprop="url">Security – Method Level Security</a></li>
           <li id="menu-item-5483" class="menu-item menu-item-type-post_type menu-item-object-post current-menu-item menu-item-5483"><a href="https://howtodoinjava.com/spring/spring-security/spring-3-security-siteminder-pre-authentication-example/" itemprop="url">Security – Siteminder</a></li>
           <li id="menu-item-5490" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5490"><a href="https://howtodoinjava.com/spring/spring-security/login-form-based-spring-3-security-example/" itemprop="url">Security – Login Form</a></li>
           <li id="menu-item-5486" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5486"><a href="https://howtodoinjava.com/spring/spring-security/spring-security-at-view-layer-using-jsp-taglibs/" itemprop="url">Security – JSP taglibs</a></li>
           <li id="menu-item-5487" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5487"><a href="https://howtodoinjava.com/spring/spring-security/jdbc-user-service-based-spring-security-example/" itemprop="url">Security – jdbc-user-service</a></li>
           <li id="menu-item-5489" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5489"><a href="https://howtodoinjava.com/spring/spring-security/custom-userdetailsservice-example-for-spring-3-security/" itemprop="url">Security – UserDetailsService</a></li>
           <li id="menu-item-5491" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5491"><a href="https://howtodoinjava.com/spring/spring-security/http-basic-authentication-example-using-spring-3/" itemprop="url">Security – Basic Auth</a></li>
           <li id="menu-item-5485" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5485"><a href="https://howtodoinjava.com/junit/how-to-unit-test-spring-security-authentication-with-junit/" itemprop="url">Security – Junit Tests</a></li>
           <li id="menu-item-5488" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5488"><a href="https://howtodoinjava.com/spring/spring-security/spring-3-method-level-security-example-using-preauthorize-and-secured/" itemprop="url">@PreAuthorize and @Secured</a></li>
          </ul>
         </div>
        </div>
       </section>
      </aside>
     </div>
    </div>
   </div>
   <div class="before-footer">
    <div class="wrap">
     <section id="e_newsletter_subscribe-7" class="widget widget_e_newsletter_subscribe">
      <div class="widget-wrap">
       <h4 class="widget-title widgettitle">Stay Updated with Awesome Weekly Newsletter</h4>
       <div class="e-newsletter-widget">
        <div id="message" style="color:#000000; display:none; background-color: #FFFFE0;border-color: #E6DB55;margin: 5px 0 15px;-moz-border-radius: 3px 3px 3px 3px;border-style: solid;border-width: 1px;padding: 5px;max-width: 700px;"></div>
        <form action="" method="post" name="subscribes_form" id="subscribes_form"> 
         <input type="hidden" name="newsletter_action" id="newsletter_action" value="">
         <div id="add_member" class="e-newsletter-widget-screen">
          <p><label for="e_newsletter_email">Join our <strong>5500+</strong> subscribers and get access to industry news, best practices and much more !!</label></p> 
          <input type="text" name="e_newsletter_email" id="e_newsletter_email" value="" placeholder="Your email address...">
          <p> <input type="submit" id="new_subscribe" class="enewletter_widget_submit" value="Subscribe"></p>
         </div>
         <div id="subscribe_to_groups" class="e-newsletter-widget-screen" style="display:none;">
          <p> <input type="submit" id="subscribe_to_groups" class="enewletter_widget_submit" value="Subscribe"></p>
         </div>
         <div id="unsubscribe_from_groups" class="e-newsletter-widget-screen" style="display:none;">
          <p> <input type="submit" id="unsubscribe_from_groups" class="enewletter_widget_submit" value="Unsubscribe"></p>
         </div>
         <div id="manage_subscriptions" class="e-newsletter-widget-screen" style="display:none;"> 
          <input type="hidden" name="unsubscribe_code" id="unsubscribe_code" value="">
          <p> <a href="#" id="unsubscribe" class="enewletter_widget_submit">Unsubscribe</a></p>
         </div>
         <div id="subscribe" class="e-newsletter-widget-screen" style="display:none;"> 
          <input type="submit" id="subscribe" class="enewletter_widget_submit" value="Subscribe to Newsletters">
         </div>
        </form>
       </div>
      </div>
     </section>
    </div>
   </div>
   <div class="footer-widgets">
    <div class="wrap">
     <div class="widget-area footer-widgets-1 footer-widget-area">
      <section id="nav_menu-53" class="widget widget_nav_menu">
       <div class="widget-wrap">
        <h4 class="widget-title widgettitle">Developer Tools</h4>
        <div class="menu-coding-tools-container">
         <ul id="menu-coding-tools" class="menu">
          <li id="menu-item-6191" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6191"><a rel="nofollow" href="https://howtodoinjava.com/online-json-formatter-and-minifier/" itemprop="url">JSON Formatter and Minifier</a></li>
          <li id="menu-item-6190" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6190"><a rel="nofollow" href="https://howtodoinjava.com/online-xml-formatter-and-minifier/" itemprop="url">XML Formatter and Minifier</a></li>
          <li id="menu-item-6193" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6193"><a rel="nofollow" href="https://howtodoinjava.com/best-online-css-formatter-minifier/" itemprop="url">CSS Formatter and Minifier</a></li>
          <li id="menu-item-6192" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6192"><a rel="nofollow" href="https://howtodoinjava.com/online-html-formatter-and-minifier/" itemprop="url">HTML Formatter and Minifier</a></li>
         </ul>
        </div>
       </div>
      </section>
     </div>
     <div class="widget-area footer-widgets-2 footer-widget-area">
      <section id="nav_menu-6" class="widget widget_nav_menu">
       <div class="widget-wrap">
        <h4 class="widget-title widgettitle">Meta Links</h4>
        <div class="menu-meta-links-container">
         <ul id="menu-meta-links" class="menu">
          <li id="menu-item-3574" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3574"><a rel="nofollow" href="https://howtodoinjava.com/advertise/" itemprop="url">Advertise</a></li>
          <li id="menu-item-3570" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3570"><a rel="nofollow" href="https://howtodoinjava.com/contact/" itemprop="url">Contact Us</a></li>
          <li id="menu-item-3568" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3568"><a rel="nofollow" href="https://howtodoinjava.com/privacy-policy/" itemprop="url">Privacy policy</a></li>
          <li id="menu-item-3571" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3571"><a rel="nofollow" href="https://howtodoinjava.com/about/" itemprop="url">About Me</a></li>
         </ul>
        </div>
       </div>
      </section>
     </div>
     <div class="widget-area footer-widgets-3 footer-widget-area">
      <section id="nav_menu-32" class="widget widget_nav_menu">
       <div class="widget-wrap">
        <h4 class="widget-title widgettitle">References</h4>
        <div class="menu-tutorial-references-container">
         <ul id="menu-tutorial-references" class="menu">
          <li id="menu-item-7790" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-7790"><a rel="nofollow" href="https://docs.oracle.com/javase/8/docs/api/overview-summary.html" itemprop="url">Java 8 API</a></li>
          <li id="menu-item-3455" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-3455"><a title="Spring Framework Reference" rel="nofollow" href="https://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/" itemprop="url">Spring Framework Reference</a></li>
          <li id="menu-item-1154" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1154"><a title="Jboss RESTEasy JAX-RS" rel="nofollow" href="https://docs.jboss.org/resteasy/docs/3.1.3.Final/userguide/html_single/index.html" itemprop="url">RESTEasy Reference</a></li>
          <li id="menu-item-1155" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1155"><a title="Hibernate Developer Guide" rel="nofollow" href="https://docs.jboss.org/hibernate/orm/current/userguide/html_single/Hibernate_User_Guide.html" itemprop="url">Hibernate User Guide</a></li>
          <li id="menu-item-1156" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1156"><a title="Junit wiki" rel="nofollow" href="http://junit.org/junit5/docs/current/user-guide/" itemprop="url">Junit Wiki</a></li>
          <li id="menu-item-1157" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1157"><a title="Maven FAQs" rel="nofollow" href="https://maven.apache.org/general.html" itemprop="url">Maven FAQs</a></li>
         </ul>
        </div>
       </div>
      </section>
     </div>
    </div>
   </div>
   <footer class="site-footer" itemscope itemtype="https://schema.org/WPFooter">
    <div class="wrap">
     <p>Copyright © 2016 · <a href="//howtodoinjava.com/" rel="nofollow">HowToDoInjava.com</a> · All Rights Reserved. Site hosted on <a href="//bluehost.com/track/howtodp5" target="_blank" rel="noindex nofollow">Bluehost</a></p>
     <a href="//bluehost.com/track/howtodp5" target="_blank" rel="noindex nofollow">. <script>window.onload = function(){ 
    setTimeout(function() { 
      var ad = document.querySelector("ins.adsbygoogle");
      if (ad && ad.innerHTML.replace(/\s/g, "").length == 0) {
         jQuery(".downgreennoticebox a").attr('href','javascript:;').html('<strike>Download Source Code</strike> <span style="color:red">Ad Blocker Detected. This blog is supported by Ads to cover all expenses. Without Ads, It will die soon. Help me to keep this blog alive. Please white-list HowToDoInJava.com or disable adblocker for howtodoinjava.com, and reload the page.</span>');
      }
    }, 2000); 
  };</script> </a>
    </div>
   </footer>
  </div>
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-40697607-1"></script>
  <a href="//bluehost.com/track/howtodp5" target="_blank" rel="noindex nofollow"> <script>window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments)};
  gtag('js', new Date());
  gtag('config', 'UA-40697607-1');</script> <script>(function() {
    var cx = '000292789241211868774:cvclu5feha4';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//cse.google.com/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();</script><script type="text/javascript" src="https://howtodoinjava.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9b"></script> <script type="text/javascript" src="https://howtodoinjava.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushXml.js?ver=3.0.9b"></script> <script type="text/javascript" src="https://howtodoinjava.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js?ver=3.0.9b"></script> <script type="text/javascript">(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "https://howtodoinjava.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "https://howtodoinjava.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();</script> <script type="text/javascript">var cptch_vars = {"nonce":"b5aa17a415","ajaxurl":"https:\/\/howtodoinjava.com\/wp-admin\/admin-ajax.php","enlarge":""};</script> <script type="text/javascript" defer src="https://howtodoinjava.com/wp-content/cache/autoptimize/js/autoptimize_6afe30d1d129e11abf1d49490f2bd5f1.js"></script> </a>
 </body>
</html>