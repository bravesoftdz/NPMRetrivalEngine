<!doctype html>
<html lang="en-US">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width"> 
  <title>Java Thumbnail Generator - ImageScalar vs ImageMagic | Paxcel Labs</title> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="pingback" href="http://paxcel.net/blog/xmlrpc.php"> 
  <link href="http://paxcel.net/blog/wp-content/themes/paxcel/assets/css/reset.css" rel="stylesheet" type="text/css"> 
  <link href="http://paxcel.net/blog/wp-content/themes/paxcel/assets/css/main.css" rel="stylesheet" type="text/css"> 
  <link rel="alternate" type="application/rss+xml" title="Paxcel Labs » Feed" href="http://paxcel.net/blog/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Paxcel Labs » Comments Feed" href="http://paxcel.net/blog/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Paxcel Labs » Java Thumbnail generator – ImageScalar vs ImageMagic Comments Feed" href="http://paxcel.net/blog/java-thumbnail-generator-imagescalar-vs-imagemagic/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/paxcel.net\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.7"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="commentvalidation-css" href="http://paxcel.net/blog/wp-content/plugins/comment-validation/comment-validation.css?ver=4.2.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="cptchStylesheet-css" href="http://paxcel.net/blog/wp-content/plugins/captcha/css/style.css?ver=4.2.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="web2feel-style-css" href="http://paxcel.net/blog/wp-content/themes/paxcel/style.css?ver=4.2.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="bootstrap-css" href="http://paxcel.net/blog/wp-content/themes/paxcel/bootstrap/bootstrap.min.css?ver=4.2.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="flexslider-css" href="http://paxcel.net/blog/wp-content/themes/paxcel/css/flexslider.css?ver=4.2.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="glyphicons-css" href="http://paxcel.net/blog/wp-content/themes/paxcel/css/bootstrap-glyphicons.css?ver=4.2.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="theme-css" href="http://paxcel.net/blog/wp-content/themes/paxcel/theme.css?ver=4.2.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="really_simple_share_style-css" href="http://paxcel.net/blog/wp-content/plugins/really-simple-facebook-twitter-share-buttons/style.css?ver=4.2.7" type="text/css" media="all"> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/plugins/comment-validation/jquery.validate.pack.js?ver=4.2.7"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/plugins/comment-validation/comment-validation.js?ver=4.2.7"></script> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://paxcel.net/blog/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://paxcel.net/blog/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Returning &amp; Using Multiple Values from a HIVE UDF" href="http://paxcel.net/blog/returning-using-multiple-values-from-a-hive-udf/"> 
  <link rel="next" title="Finding the optimum partition size while parallelizing large matrix operation in R" href="http://paxcel.net/blog/finding-the-optimum-partition-size-while-parallelizing-large-matrix-operation-in-r/"> 
  <meta name="generator" content="WordPress 4.2.7"> 
  <link rel="shortlink" href="http://paxcel.net/blog/?p=2437"> 
  <link rel="stylesheet" href="http://paxcel.net/blog/wp-content/plugins/vote-it-up/skins/orange_ticker/votestyles.css" type="text/css"> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/plugins/vote-it-up/skins/orange_ticker/voterajax.js"></script> 
  <link rel="stylesheet" href="http://paxcel.net/blog/wp-content/plugins/vote-it-up/voteitup.css" type="text/css"> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/plugins/vote-it-up/userregister.js"></script> 
  <!-- All in One SEO Pack 2.2.3.1 by Michael Torbert of Semper Fi Web Design[118,197] --> 
  <meta name="description" content="This blog makes life easy for Java developers looking for answers to thumbnail generation in Java explaining when, how to use ImageScalar / ImageMagic for"> 
  <meta name="keywords" content="thumbnail creation java, imgscalr, imagemagick, imagemagick in java, im4java, unsupported image type exception, java create thumbnail image, thumbnail, java program to create thumbnails, how create a thumbnail of an image  in java, resize images in java, thumbnail of gif image getting error in java, javax.imageio.iioexception java.lang.illegalargumentexception, read cymk images in java, create thumbnail of cymk images in java, resize images using, imagemagick im4java create thumbnail example in java, batch of thumbnails using imagemagick,hadoop,im4java,imagemagic,imagescalar,imgscalr"> 
  <link rel="canonical" href="http://paxcel.net/blog/java-thumbnail-generator-imagescalar-vs-imagemagic/"> 
  <!-- /all in one seo pack --> 
  <link type="text/css" rel="stylesheet" href="http://paxcel.net/blog/wp-content/plugins/syntaxhighlighter-plus/syntaxhighlighter/styles/shCore.css"> 
  <link type="text/css" rel="stylesheet" href="http://paxcel.net/blog/wp-content/plugins/syntaxhighlighter-plus/syntaxhighlighter/styles/shThemeDefault.css"> 
 </head> 
 <body class="single single-post postid-2437 single-format-standard group-blog"> 
  <div id="page" class="hfeed site"> 
   <div class="header-content"> 
    <div class="cover"> 
     <header id="nav" class="blogarea"> 
      <nav> 
       <div class="container-page"> 
        <section class="logo">
         <a href="http://paxcel.net/" title="Paxcel">Paxcel</a>
        </section> 
        <a href="http://paxcel.net/contact-us.php" class="contact" title="Contact Us">Contact Us</a> 
        <ul> 
         <li><a href="http://paxcel.net/index#creation" title="Paxcel Labs" onclick="goToByScroll('creation');">Paxcel Labs</a></li> 
         <li><a href="http://paxcel.net/index#casestudies" title="Client Success Stories" onclick="goToByScroll('casestudies');">Client Success Stories</a></li> 
         <li><a href="http://paxcel.net/index#services" title="Tools and Technologies" onclick="goToByScroll('services');">Tools and Technologies</a></li> 
         <li><a href="http://paxcel.net/blog" title="Blog" class="active">Blog</a></li> 
         <li><a href="http://paxcel.net/about-us.php" title="About Us">About Us</a> 
          <!--<div class="sub">
            <a href="javascript:void(0);" title="Vision/Mission" class="active">Vision/Mission </a> <a href="javascript:void(0);" title="Awards" class="active">Awards </a> <a href="javascript:void(0);" title="Partners" class="active">Partners </a> <a href="javascript:void(0);" title="Why Paxcel?" class="active">Why Paxcel? </a> <a href="javascript:void(0);" title="News" class="active">News </a>
          </div>--> </li> 
         <li><a href="http://paxcel.net/career.php" title="Careers">Careers</a></li> 
        </ul> 
       </div> 
      </nav> 
      <!--header end-->
     </header> 
    </div> 
   </div> 
   <div class="page-head"> 
    <div class="container"> 
     <div class="row"> 
      <div class="col-12"> 
       <h3> Blog post </h3> 
       <p> Article from your blog</p> 
      </div> 
     </div> 
    </div> 
   </div> 
   <div class="container"> 
    <div class="row"> 
     <div id="primary" class="content-area col-sm-8"> 
      <main id="main" class="site-main" role="main"> 
       <article id="post-2437" class="post-2437 post type-post status-publish format-standard hentry category-java tag-hadoop tag-im4java tag-imagemagic tag-imagescalar tag-imgscalr tag-thumbnail-creation-java"> 
        <header class="entry-header"> 
         <div class="entry-meta"> 
          <span class="posted-on">Posted on <a href="http://paxcel.net/blog/java-thumbnail-generator-imagescalar-vs-imagemagic/" title="11:01 am" rel="bookmark"><time class="entry-date published" datetime="2014-06-02T11:01:33+00:00">June 2, 2014</time><time class="updated" datetime="2014-07-02T06:18:16+00:00">July 2, 2014</time></a></span>
          <span class="byline"> by </span>
          <a href="http://paxcel.net/blog/author/mohit-garg/" title="Posts by Mohit Garg" class="url fn" rel="author">Mohit Garg</a> 
         </div>
         <!-- .entry-meta --> 
         <h1 class="entry-title">Java Thumbnail generator – ImageScalar vs ImageMagic</h1> 
        </header>
        <!-- .entry-header --> 
        <div class="entry-content"> 
         <div style="min-height:33px;" class="really_simple_share really_simple_share_button robots-nocontent snap_nopreview">
          <div class="really_simple_share_facebook_like" style="width:100px;">
           <iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpaxcel.net%2Fblog%2F%3Fp%3D2437&amp;send=false&amp;layout=button_count&amp;width=100&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;height=27&amp;locale=en_US" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:100px; height:27px;" allowtransparency="true"></iframe>
          </div>
          <div class="really_simple_share_twitter" style="width:100px;">
           <a href="https://twitter.com/share" class="twitter-share-button" data-count="horizontal" data-text="Java Thumbnail generator – ImageScalar vs ImageMagic" data-url="http://paxcel.net/blog/?p=2437" data-via=""></a>
          </div>
          <div class="really_simple_share_google1" style="width:80px;">
           <div class="g-plusone" data-size="medium" data-href="http://paxcel.net/blog/?p=2437"></div>
          </div>
          <div class="really_simple_share_linkedin" style="width:100px;">
           <script type="IN/Share" data-counter="right" data-url="http://paxcel.net/blog/?p=2437"></script>
          </div>
          <div class="really_simple_share_pinterest" style="width:90px;">
           <a data-pin-config="beside" href="https://pinterest.com/pin/create/button/?url=http%3A%2F%2Fpaxcel.net%2Fblog%2F%3Fp%3D2437&amp;media=http%3A%2F%2Fpaxcel.net%2Fblog%2Fwp-content%2Fuploads%2F2014%2F05%2FThumbnailDemo.zip&amp;description=Java Thumbnail generator – ImageScalar vs ImageMagic" data-pin-do="buttonPin"><img src="//assets.pinterest.com/images/pidgets/pin_it_button.png"></a>
          </div>
         </div> 
         <div style="clear:both;"></div>
         <div> 
          <p><span style="line-height: 1.5em;">Which Java Thumbnail generator is better or which one to use, which is most suitable for my case ?</span></p> 
         </div> 
         <p>You will find a lot many queries on <a href="http://stackoverflow.com/">stackoverflow</a>&nbsp;website asking the same question. I will try to answer your query with my experience with above two libraries. If you don’t have the patience to read through it go directly to conclusion !</p> 
         <h2>Problem Statement</h2> 
         <p>We need to create thumbnail images of different sizes (200 x 150, 112 x 47, 100 x 100 and many more) from an image uploaded by our users. We don’t know what format, what size of image they will upload. We put a restriction on image size so that we can avoid out of memory problem.&nbsp; For us it is pretty safe option but soon we realized there are other important parameters that we need to consider whenever we deal with images. Like –</p> 
         <ol> 
          <li>Image Size – Size in bytes</li> 
          <li>Image file formats – They can of different types (JPEG, PNG TIFF etc.) for long go to this <a href="http://en.wikipedia.org/wiki/Image_file_formats">Wikipedia </a>page.</li> 
          <li>Image resolution – It is measured in different ways pixel, dpi(dots per inch) , cm</li> 
          <li>Color Modes – Colour modes are the colour spaces you can work in when using <a href="http://www.photoshop.com/">Photoshop</a>. These are four types &nbsp;RGB, CMYK, L*a*b and HSB.</li> 
         </ol> 
         <p>&nbsp;</p> 
         <p>I will walk you through steps that I followed and in the end, I will share my conclusion based on my experience.</p> 
         <h2>My First Choice – IMAGESCALR</h2> 
         <p><span style="line-height: 1.5em;">I searched on internet and gone through various blogs and stackoverflow questions to reach at a conclusion that ImageScalr is the best and most efficient solution available in pure java to solve my problem. This library also implements the optimized incremental scaling algorithm. Only known problem was </span><b style="line-height: 1.5em;">ImageScalr is that it does not support thumbnails for gif images.&nbsp; Solution to this problem is to c</b><span style="line-height: 1.5em;">onvert thumbnails to other file formats like PNG or JPG.</span></p> 
         <p>Here is how I implemented ImageScalr – First step is to include ImageScalr library in my project. Mine is a Maven project so all I have to do is to add maven dependency. You can also download the library directly if you are not using Maven. Here is my POM file</p> 
         <p>&nbsp;</p> 
         <blockquote>
          <p><span style="font-family: 'courier new', courier; font-size: 12px;">&lt;dependency&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;groupId&gt;org.imgscalr&lt;/groupId&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;artifactId&gt;imgscalr-lib&lt;/artifactId&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;version&gt;4.2&lt;/version&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;/dependency&gt;</span></p>
         </blockquote> 
         <p>&nbsp;</p> 
         <h2>ImagScalr code to create Thumbnails</h2> 
         <p>&nbsp;</p> 
         <pre class="brush: java">

public void createThumbnail(File sourceImage, width, height) {
String destImageName = imageFile.getParent ()+width+&amp;quot;_&amp;quot;+height+&amp;quot;_&amp;quot;+ &amp;quot;thunbnail.jpg&amp;quot;;

File destImage = new File(destImageName);
if (!thumbNailFile.exists()) {
BufferedImage img = ImageIO.read(sourceImage);
BufferedImage thumbImg = Scalr.resize(img, Method.QUALITY, Mode.AUTOMATIC, width, height,Scalr.OP_ANTIALIAS);
ImageIO.write(thumbImg, fileFormat, destImage);
}
}

</pre> 
         <p><b style="line-height: 1.5em;">Here I have used Mode.AUTOMATIC.&nbsp;For more information on various available Modes is present </b><a style="line-height: 1.5em;" href="http://www.thebuzzmedia.com/downloads/software/imgscalr/javadoc/org/imgscalr/Scalr.Mode.html#FIT_EXACT"><b>here</b></a></p> 
         <p>&nbsp;</p> 
         <p>In above code, ImageScalr library requires buffered image object to create thumbnails. Hence I used ImageIO java class present in <b>javax.imageio.ImageIO </b>Package. ImageIO is a utility class which provides lots of utility method related to images processing in Java. Most common of them is reading from image file and writing image to file in java. We can read and write different types images using ImageIO.</p> 
         <p><b>Example code for Read Image File – </b></p> 
         <p>&nbsp;</p> 
         <pre class="brush: java">

BufferedImage img = ImageIO.read(sourceImage);

</pre> 
         <p>&nbsp;</p> 
         <p><b style="line-height: 1.5em;">Write Image File</b></p> 
         <pre class="brush: java">

File destImage = new File(&amp;quot;example.jpg&amp;quot;);
ImageIO.write(renderedImage , &amp;quot;.png&amp;quot;, destImage);

</pre> 
         <p><b>&nbsp;</b></p> 
         <h2>First hurdle with ImagScalr</h2> 
         <p><span style="line-height: 1.5em;">I faced problem with ImageIO, it cannot read images whose color model is CMYK and gives “CMMException” with message “Unsupported Image Type”. Because JPEGImageReader (the inner class that reads your file) reads only RGB color model. When we try to read images whose color model is not “RGB” then I got following exception:</span></p> 
         <p>&nbsp;</p> 
         <pre class="brush: java">

java.awt.color.CMMException: Invalid image formatb
at sun.awt.color.CMM.checkStatus(CMM.java:131)
at sun.awt.color.ICC_Transform.(ICC_Transform.java:89)
at java.awt.image.ColorConvertOp.filter(ColorConvertOp.java:516)
at com.sun.imageio.plugins.jpeg.JPEGImageReader.acceptPixels(JPEGImageReader.java:1169)
at com.sun.imageio.plugins.jpeg.JPEGImageReader.readImage(Native Method)
at com.sun.imageio.plugins.jpeg.JPEGImageReader.readInternal(JPEGImageReader.java:1137)
- javax.imageio.IIOException: Unsupported Image Type at com.sun.imageio.plugins.jpeg.JPEGImageReader.readInternal(JPEGImageReader.java:977)
at com.sun.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:948)
- java.lang.IllegalArgumentException: Numbers of source Raster bands and source color space components do not match at java.awt.image.ColorConvertOp.filter(ColorConvertOp.java:460)
at com.sun.imageio.plugins.jpeg.JPEGImageReader.acceptPixels(JPEGImageReader.java:1169)

</pre> 
         <p>&nbsp;</p> 
         <h2>And I crossed it with following solution:</h2> 
         <p>I did some research on internet to know that to read CYMK files I have to use JAI (Java Advanced Imaging) API. I <b>solved the above problem by using JAI (</b>Java Advanced Imaging) API. <b></b></p> 
         <p>JAI consists of Java code and native binaries for each supported operating system. JAI used to resolve above errors. It can read images whose color model is CYMK</p> 
         <p>Steps to implement: – Add following dependencies in pom.xml</p> 
         <blockquote>
          <p><span style="font-family: 'courier new', courier; font-size: 12px;">&lt;dependency&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;groupId&gt;com.sun.media&lt;/groupId&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;artifactId&gt;jai-codec&lt;/artifactId&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;version&gt;1.1.3&lt;/version&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;/dependency&gt;</span></p>
         </blockquote> 
         <p><strong style="line-height: 1.5em;"><span style="line-height: 1.5em;">Example Code with JAI (<a href="http://www.oracle.com/technetwork/java/javase/tech/jai-142803.html">Java Advanced Imaging</a>) API implementation for reading CYMK files</span></strong></p> 
         <pre class="brush: java">

public void createThumbnail(File sourceImage, width, height) {
String destImageName = imageFile.getParent()+width+&amp;quot;_&amp;quot;+height+&amp;quot;_&amp;quot;+ &amp;quot;thunbnail.jpg&amp;quot;;
File destImage = new File(destImageName);

BufferedImage img = null;
try{
img = ImageIO.read(destination);
} catch(CMMException ce) {
SeekableStream seekableStream = new FileSeekableStream(destination);
ParameterBlock pb = new ParameterBlock();
pb.add(seekableStream);
img = JAI.create(&amp;quot;jpeg&amp;quot;, pb).getAsBufferedImage();
}

if (!thumbNailFile.exists()) {
BufferedImage thumbImg = Scalr.resize(img, Method.QUALITY, Mode.AUTOMATIC, width, height,Scalr.OP_ANTIALIAS);
ImageIO.write(thumbImg, fileFormat, destImage);
}

</pre> 
         <p>Changes are shown between line no 5 to 13. In above code we are catching CMMException and then trying to read file using JAI Api. &nbsp;SeekableStream is used to create a ParameterBlock, to be passed to the JAI create() call.</p> 
         <p>&nbsp;</p> 
         <h2>Yet another hurdle – Out of Memory exception</h2> 
         <p><span style="line-height: 1.5em;">When everything seems to be perfect and I was ready to go live with my code I bumped into unusual&nbsp; out of memory Exception for some images.&nbsp; I did more research to narrow down the problem and found that I have one CYMK image with 23376X 14260 high resolution and actual file size is below 4 MB. But when I try to convert such image into BufferedImage, its size become more than 512 MB and when I pass this image to my ImagScalr and try to create thumbnails then I run out of JVM memory.&nbsp; </span></p> 
         <p>&nbsp;</p> 
         <p><span style="line-height: 1.5em;">I was using Caching heavily so my JVM process was already under memory crunch and to process such large image from one user consumes all of the available memory and In case multiple user try to perform such task I will be at receiving end and cannot predict how much RAM I need.</span></p> 
         <p>First solution that comes to my mind is to increase JVM memory. I tried that but I still faced the problem as my application is already using memory heavily.</p> 
         <p>Then ImageMagic comes into picture which gives me option to delegate the thumbnail creation task to another process outside my JVM.</p> 
         <p>&nbsp;</p> 
         <h2>Image Magic Comes to Rescue</h2> 
         <p>ImageMagick is an open source software suite for displaying, converting, and editing raster image files. It can read and write over 200 image file formats. ImageMagick is licensed under the Apache 2.0 license.</p> 
         <p>File format conversion – One of the basic and thoroughly implemented features of ImageMagick is its ability to efficiently and accurately convert images between different file formats (it uses the command “convert” to achieve this). ImageMagik provides high quality image conversion and operate on large images. But then there is lot of inter-process communication stuff that I have to deal with. I wanted something that I can do in Java coding. Then I come to know about the Im4java.</p> 
         <p>&nbsp;</p> 
         <h2>Im4java</h2> 
         <p><b>Im4java is a pure-java interface to the ImageMagick</b> commandline. Im4java is second java interface to ImageMagick. JMagick is the first interface. Im4java is not replacement of JMagick. JMagick is thin JNI(java native interface) layer above the imageMagick. But im4java generates the commandline for the ImageMagick commands and passes the generated line to the selected IM-command.</p> 
         <h2>Implementation</h2> 
         <p>To start the actual process you need to download and install image magick setup. For more information click on the below link <a href="http://www.imagemagick.org/script/binary-releases.php#windows">http://www.imagemagick.org/script/binary-releases.php#windows</a></p> 
         <p>After installing you need to set the search path. To setup your search path for the tools you have three options available. Choose any <strong>one</strong> of them:</p> 
         <ol> 
          <li>Set the environment variable IM4JAVA_TOOLPATH. This variable should contain a list of directories to search for your tools separated by your platform path delemiter (on *NIX typically “:”, on Windows “;”).</li> 
          <li>Globally set the search path from within your java program</li> 
         </ol> 
         <pre class="brush: java">

String myPath=&amp;quot;C:\\Programs\\ImageMagick;C:\\Programs\\exiftool&amp;quot;;
ProcessStarter.setGlobalSearchPath(myPath);

</pre> 
         <p>This will override any values set with IM4JAVA_TOOLPATH.</p> 
         <p>3. Set the search path for an individual command</p> 
         <pre class="brush: java">
String imPath=&amp;quot;C:\\Programs\\ImageMagick&amp;quot;;
ConvertCmd cmd = new ConvertCmd();
cmd.setSearchPath(imPath);
</pre> 
         <p>After setting the search path you need to add the POM dependency in your project and also write the Java code.</p> 
         <p>&nbsp;</p> 
         <h2>Steps to implement</h2> 
         <p>Add POM dependency</p> 
         <blockquote>
          <p><span style="font-family: 'courier new', courier; font-size: 12px;">&lt;dependency&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;groupId&gt;org.im4java&lt;/groupId&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;artifactId&gt;im4java&lt;/artifactId&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;version&gt;1.4.0&lt;/version&gt;</span><br> <span style="font-family: 'courier new', courier; font-size: 12px;"> &lt;/dependency&gt;</span></p> 
          <p>&nbsp;</p>
         </blockquote> 
         <p><b style="color: #6495ed; line-height: 1.5em;">Example Code</b></p> 
         <ul> 
          <li><span style="font-family: arial,helvetica,sans-serif;">Create object of ConvertCmd class for run the operation .</span></li> 
          <li><span style="font-family: arial,helvetica,sans-serif;">Create object of IMOperationclass and add source image on which you want to perform operation like create a thumbnail of image. Give the name of destination image where thumbnail of image stored. You can set dimensions of destination image using op.thumbnail(width,height);</span></li> 
          <li><span style="font-family: arial,helvetica,sans-serif;">At end run the operation by using run() method of ConvertCmd class and pass the operation(op) as parameter.</span></li> 
         </ul> 
         <pre class="brush: java">

ConvertCmd cmd = new ConvertCmd();
String destinationFileName = sourceImage.getParent() +&amp;quot;/&amp;quot;+ width + &amp;quot;_&amp;quot; + height + &amp;quot;_&amp;quot; + imageName;
File thumbNailFile = new File(destinationFileName);
if (!thumbNailFile.exists()) {
IMOperation op = new IMOperation();
op.addImage(sourceFileName);
op.thumbnail(width);
op.addImage(destinationFileName);
cmd.run(op);
}

</pre> 
         <p>In above code, first I have created an object of class&nbsp;ConvertCmd. Run method of this class will perform the operation. Then I created&nbsp;&nbsp;object of IMOperation class and added source image on which you want to perform operation like create a thumbnail of image. Then g<span style="line-height: 1.5em;">ive the name of destination image where thumbnail of image is to be stored. </span></p> 
         <p><span style="line-height: 1.5em;">You can set dimensions of destination image using op.thumbnail(width,height). And in the end r</span>un the operation by using run() method of ConvertCmd class and pass the operation(op) as parameter.</p> 
         <p>Finally I am able to achieve what I wanted. I am able to process input image files of any format, color mode without any problem and my thumbnails are created by ImageMagick with outofmemory exception.</p> 
         <p>&nbsp;</p> 
         <h2>Few Noticeable Features of IM4Java</h2> 
         <ol> 
          <li>It supports most of ImageMagick’s commands</li> 
          <li>It supports BufferedImage, i.e we can give BufferedImage object as input to IM commands and pipe output of IM commands in BufferedImage.</li> 
          <li>We can run commands asynchronously.</li> 
          <li>Provides high quality of images.</li> 
         </ol> 
         <h2>Advantages of im4java</h2> 
         <p>The interface of the IM commandline is quite stable, so our java program (and the im4java-library) will work across many versions of IM. im4java also provides a better OO interface. And most important is that you can use im4java everywhere JMagick interface can’t be used because of the JNI hazard</p> 
         <h2>Disadvantages of im4java</h2> 
         <p>We are limited to the capabilities of the IM commands. But With JMagick, we have access to the low-level interface of IM and therefore we have a very detailed control of the processing of images with better performance.</p> 
         <p>&nbsp;</p> 
         <p>After the long story here is my Conclusion</p> 
         <h2>Conclusion</h2> 
         <ol> 
          <li>For simple RGB files use ImageScalr . ImageIO class is used for reading files and ImageScalr to create thumbnails</li> 
          <li>For supporting RGB + CYMK, use ImageIO and JAI (Java Advanced Imaging) API for reading files and ImageScalr to create thumbnail.</li> 
          <li>In case you don’t know what file formats, color mode you are going to deal with, safest option is to use ImageMagick.</li> 
         </ol> 
         <p>References:</p> 
         <p><a href="http://im4java.sourceforge.net/">http://im4java.sourceforge.net/</a><br> <a href="http://im4java.sourceforge.net/docs/dev-guide">http://im4java.sourceforge.net/docs/dev-guide</a><br> <a href="http://im4java.sourceforge.net/docs/dev-guide">http://im4java.sourceforge.net/docs/dev-guide.html</a><br> For download Demo application, please click on this link&nbsp;<a href="http://paxcel.net/blog/wp-content/uploads/2014/05/ThumbnailDemo.zip">ThumbnailDemo</a></p> 
         <p><a href="http://im4java.sourceforge.net/">&nbsp;</a></p> 
        </div>
        <!-- .entry-content --> 
        <footer class="entry-meta">
          This entry was posted in 
         <a href="http://paxcel.net/blog/category/java/" rel="category tag">Java</a> and tagged 
         <a href="http://paxcel.net/blog/tag/hadoop/" rel="tag">Hadoop</a>, 
         <a href="http://paxcel.net/blog/tag/im4java/" rel="tag">Im4Java</a>, 
         <a href="http://paxcel.net/blog/tag/imagemagic/" rel="tag">ImageMagic</a>, 
         <a href="http://paxcel.net/blog/tag/imagescalar/" rel="tag">ImageScalar</a>, 
         <a href="http://paxcel.net/blog/tag/imgscalr/" rel="tag">ImgScalr</a>, 
         <a href="http://paxcel.net/blog/tag/thumbnail-creation-java/" rel="tag">Thumbnail creation Java</a>. Bookmark the 
         <a href="http://paxcel.net/blog/java-thumbnail-generator-imagescalar-vs-imagemagic/" title="Permalink to Java Thumbnail generator – ImageScalar vs ImageMagic" rel="bookmark">permalink</a>. 
        </footer>
        <!-- .entry-meta --> 
       </article>
       <!-- #post-## --> 
       <div id="comments" class="comments-area"> 
        <div id="respond" class="comment-respond"> 
         <h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/java-thumbnail-generator-imagescalar-vs-imagemagic/#respond" style="display:none;">Cancel reply</a></small></h3> 
         <form action="http://paxcel.net/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form"> 
          <p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p> 
          <p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required="true" required></p> 
          <p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-describedby="email-notes" aria-required="true" required></p> 
          <p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30"></p> 
          <p class="cptch_block"><br> <input type="hidden" name="cptch_result" value="8Zo="><input type="hidden" value="Version: 2.4"> seven ? 1 = <input id="cptch_input" type="text" autocomplete="off" name="cptch_number" value="" maxlength="2" size="2" aria-required="true" style="width:20px;margin-bottom:0;display:inline;font-size: 12px;width: 30px;"> </p> 
          <p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-describedby="form-allowed-tags" aria-required="true" required></textarea></p> 
          <p class="form-allowed-tags" id="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes: <code>&lt;a href="" title=""&gt; &lt;abbr title=""&gt; &lt;acronym title=""&gt; &lt;b&gt; &lt;blockquote cite=""&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=""&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=""&gt; &lt;s&gt; &lt;strike&gt; &lt;strong&gt; </code></p> 
          <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="2437" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"> </p> 
         </form> 
        </div>
        <!-- #respond --> 
       </div>
       <!-- #comments --> 
      </main>
      <!-- #main --> 
     </div>
     <!-- #primary --> 
     <div id="secondary" class="widget-area col-sm-4" role="complementary"> 
      <aside id="search-2" class="widget widget_search">
       <h1 class="widget-title">Search</h1>
       <form role="search" method="get" class="search-form" action="http://paxcel.net/blog/"> 
        <label> <span class="screen-reader-text">Search for:</span> <input type="search" class="search-field" placeholder="Search …" value="" name="s" title="Search for:"> </label> 
        <input type="submit" class="search-submit" value="Search"> 
       </form> 
      </aside>
      <aside id="categories-2" class="widget widget_categories">
       <h1 class="widget-title">Categories</h1> 
       <ul> 
        <li class="cat-item cat-item-1"><a href="http://paxcel.net/blog/category/paxcellabs/">Paxcel Labs</a> (95) </li> 
        <li class="cat-item cat-item-27"><a href="http://paxcel.net/blog/category/java/" title="Java technology">Java</a> (22) </li> 
        <li class="cat-item cat-item-160"><a href="http://paxcel.net/blog/category/microsofttech/" title="Microsoft technologies">Microsoft Tech</a> (20) 
         <ul class="children"> 
          <li class="cat-item cat-item-68"><a href="http://paxcel.net/blog/category/microsofttech/wcf/" title="Windows Communication Foundation(WCF)">WCF</a> (3) </li> 
          <li class="cat-item cat-item-226"><a href="http://paxcel.net/blog/category/microsofttech/wpf/">WPF</a> (1) </li> 
          <li class="cat-item cat-item-167"><a href="http://paxcel.net/blog/category/microsofttech/c-sharp/" title="C sharp ">c#</a> (6) </li> 
         </ul> </li> 
        <li class="cat-item cat-item-12"><a href="http://paxcel.net/blog/category/html5/" title="HTML5 Future of the WEb">HTML5</a> (7) </li> 
        <li class="cat-item cat-item-65"><a href="http://paxcel.net/blog/category/payments-2/" title="Blogs on Payments Industry">Payments</a> (3) </li> 
        <li class="cat-item cat-item-76"><a href="http://paxcel.net/blog/category/bi/" title="Business Intelligence">BI</a> (16) </li> 
        <li class="cat-item cat-item-109"><a href="http://paxcel.net/blog/category/bigdata/" title="Big data technologies">Big Data</a> (14) </li> 
        <li class="cat-item cat-item-999"><a href="http://paxcel.net/blog/category/aws-cloud/">AWS Cloud</a> (2) </li> 
        <li class="cat-item cat-item-467"><a href="http://paxcel.net/blog/category/beginners/">Beginners</a> (3) </li> 
        <li class="cat-item cat-item-997"><a href="http://paxcel.net/blog/category/data-analytics/">Data Analytics</a> (2) </li> 
        <li class="cat-item cat-item-396"><a href="http://paxcel.net/blog/category/google-apis/">Google Apis</a> (2) </li> 
        <li class="cat-item cat-item-181"><a href="http://paxcel.net/blog/category/mobile-development/">Mobile</a> (9) </li> 
        <li class="cat-item cat-item-195"><a href="http://paxcel.net/blog/category/qualityassurance/" title="Quality Assurance">QA</a> (2) </li> 
        <li class="cat-item cat-item-395"><a href="http://paxcel.net/blog/category/thoughts/">Thoughts</a> (3) </li> 
        <li class="cat-item cat-item-189"><a href="http://paxcel.net/blog/category/ecommerce-2/" title="ecommerce solutions">eCommerce</a> (6) </li> 
       </ul> 
      </aside> 
     </div>
     <!-- #secondary --> 
    </div> 
   </div> 
   <div class="slickfooter">
    <p> Copyright © 2015 Paxcel Technologies All rights reserved</p>
   </div> 
  </div> 
  <script src="http://code.jquery.com/jquery-1.10.2.min.js" type="text/javascript"></script> 
  <script src="http://paxcel.net/blog/wp-content/themes/paxcel/assets/js/function.js" type="text/javascript"></script> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-45702548-1', 'paxcel.net');
  ga('send', 'pageview');

</script> 
  <script type="text/javascript">
  var _paq = _paq || [];
  _paq.push(["trackPageView"]);
  _paq.push(["enableLinkTracking"]);

  (function() {
    var u=(("https:" == document.location.protocol) ? "https" : "http") + "://111.93.122.51/piwik/";
    _paq.push(["setTrackerUrl", u+"piwik.php"]);
    _paq.push(["setSiteId", "9"]);
    var d=document, g=d.createElement("script"), s=d.getElementsByTagName("script")[0]; g.type="text/javascript";
    g.defer=true; g.async=true; g.src=u+"piwik.js"; s.parentNode.insertBefore(g,s);
  })();
</script> 
  <script type="text/javascript">
		  window.___gcfg = {lang: "en"};
		  (function() {
		    var po = document.createElement("script"); po.type = "text/javascript"; po.async = true;
		    po.src = "https://apis.google.com/js/plusone.js";
		    var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(po, s);
		  })();
		</script>
  <script type="text/javascript">
			(function(d){
			  var f = d.getElementsByTagName('SCRIPT')[0], p = d.createElement('SCRIPT');
			  p.type = 'text/javascript';
			  
			  p.async = true;
			  p.src = '//assets.pinterest.com/js/pinit.js';
			  f.parentNode.insertBefore(p, f);
			}(document));
			</script>
  <script type="text/javascript" src="https://platform.linkedin.com/in.js?ver=4.2.7"></script> 
  <script type="text/javascript" src="https://platform.twitter.com/widgets.js?ver=4.2.7"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/themes/paxcel/bootstrap/bootstrap.min.js?ver=20120206"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/themes/paxcel/js/jquery.flexslider.js?ver=20120206"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/themes/paxcel/js/superfish.js?ver=20120206"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/themes/paxcel/js/custom.js?ver=20120206"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/themes/paxcel/js/mobilemenu.js?ver=20120206"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/themes/paxcel/js/skip-link-focus-fix.js?ver=20130115"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-includes/js/comment-reply.min.js?ver=4.2.7"></script> 
  <!-- SyntaxHighlighter Stuff --> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/plugins/syntaxhighlighter-plus/syntaxhighlighter/src/shCore.js"></script> 
  <script type="text/javascript" src="http://paxcel.net/blog/wp-content/plugins/syntaxhighlighter-plus/syntaxhighlighter/scripts/shBrushJava.js"></script> 
  <!-- Reassign aliases --> 
  <script type="text/javascript">
				SyntaxHighlighter.brushes.Java.aliases = ["java"];
	</script> 
  <script type="text/javascript">
	SyntaxHighlighter.all();
</script>   
 </body>
</html>