<!doctype html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
 <head>
  <link rel="stylesheet" type="text/css" href="http://www.pyimagesearch.com/wp-content/cache/minify/05078.css" media="all"> 
  <meta charset="UTF-8"> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <!-- <link rel="stylesheet" type="text/css" href="http://www.pyimagesearch.com/static/css/header_fix.css" media="all"/> --> 
  <link rel="pingback" href="http://www.pyimagesearch.com/xmlrpc.php"> 
  <link rel="shortcut icon" href="http://www.pyimagesearch.com/wp-content/themes/canvas/favicon.ico"> 
  <!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame --> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
  <!--  Mobile viewport scale --> 
  <meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=yes" name="viewport"> 
  <!-- This site is optimized with the Yoast SEO plugin v4.2.1 - https://yoast.com/wordpress/plugins/seo/ --> 
  <title>Detecting Barcodes in Images with Python and OpenCV - PyImageSearch</title> 
  <meta name="description" content="In this tutorial I will show you how to detect and find barcodes in images using OpenCV and computer vision algorithms. How-to guide on barcode detection."> 
  <meta name="robots" content="noodp"> 
  <link rel="canonical" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/"> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Detecting Barcodes in Images with Python and OpenCV - PyImageSearch"> 
  <meta property="og:description" content="In this tutorial I will show you how to detect and find barcodes in images using OpenCV and computer vision algorithms. How-to guide on barcode detection."> 
  <meta property="og:url" content="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/"> 
  <meta property="og:site_name" content="PyImageSearch"> 
  <meta property="article:tag" content="barcode"> 
  <meta property="article:tag" content="barcode detection"> 
  <meta property="article:tag" content="gradients"> 
  <meta property="article:tag" content="image processing"> 
  <meta property="article:tag" content="magnitude"> 
  <meta property="article:tag" content="thresholding"> 
  <meta property="article:tag" content="tutorials"> 
  <meta property="article:section" content="Image Processing"> 
  <meta property="article:published_time" content="2014-11-24T10:00:46-04:00"> 
  <meta property="article:modified_time" content="2015-07-10T17:23:04-04:00"> 
  <meta property="og:updated_time" content="2015-07-10T17:23:04-04:00"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient_and_detection.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_01.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_threhsold.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_closing.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_erosion_and_dilation.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_01.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_02.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_03.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_04.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_05.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_06.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png"> 
  <!-- / Yoast SEO plugin. --> 
  <link rel="dns-prefetch" href="//a.optnmnstr.com"> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="PyImageSearch » Feed" href="http://feeds.feedburner.com/Pyimagesearch"> 
  <link rel="alternate" type="application/rss+xml" title="PyImageSearch » Comments Feed" href="http://www.pyimagesearch.com/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="PyImageSearch » Detecting Barcodes in Images with Python and OpenCV Comments Feed" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.pyimagesearch.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.7.2"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),!(j.toDataURL().length<3e3)&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,65039,8205,55356,57096),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,55356,57096),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55357,56425,55356,57341,8205,55357,56507),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55357,56425,55356,57341,55357,56507),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <!--[if lt IE 9]>
<link href="http://www.pyimagesearch.com/wp-content/themes/canvas/css/non-responsive.css" rel="stylesheet" type="text/css" />
<style type="text/css">.col-full, #wrapper { width: 960px; max-width: 960px; } #inner-wrapper { padding: 0; } body.full-width #header, #nav-container, body.full-width #content, body.full-width #footer-widgets, body.full-width #footer { padding-left: 0; padding-right: 0; } body.fixed-mobile #top, body.fixed-mobile #header-container, body.fixed-mobile #footer-container, body.fixed-mobile #nav-container, body.fixed-mobile #footer-widgets-container { min-width: 960px; padding: 0 1em; } body.full-width #content { width: auto; padding: 0 1em;}</style>
<![endif]--> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/df983.js"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"http:\/\/www.pyimagesearch.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/49ed6.js"></script> 
  <script type="text/javascript" data-cfasync="false" id="omapi-script" async src="//a.optnmnstr.com/app/js/api.min.js?ver=1.1.6.1"></script> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/83e7b.js"></script> 
  <link rel="https://api.w.org/" href="http://www.pyimagesearch.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.pyimagesearch.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.pyimagesearch.com/wp-includes/wlwmanifest.xml"> 
  <meta name="generator" content="WordPress 4.7.2"> 
  <link rel="shortlink" href="http://www.pyimagesearch.com/?p=1512"> 
  <link rel="alternate" type="application/json+oembed" href="http://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.pyimagesearch.com%2F2014%2F11%2F24%2Fdetecting-barcodes-images-python-opencv%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.pyimagesearch.com%2F2014%2F11%2F24%2Fdetecting-barcodes-images-python-opencv%2F&amp;format=xml"> 
  <!-- Theme version --> 
  <meta name="generator" content="Canvas 5.5.7"> 
  <meta name="generator" content="WooFramework 5.5.5"> 
  <!-- Custom CSS Styling --> 
  <style type="text/css">
#logo .site-title, #logo .site-description { display:none; }
body {background-repeat:no-repeat;background-position:top left;background-attachment:scroll;border-top:0px solid #000000;}
#header {background-color:#ffffff;background-repeat:no-repeat;background-position:left top;margin-top:0px;margin-bottom:0px;padding-top:15px;padding-bottom:20px;border:0px solid ;}
#logo .site-title a {font:bold 32px/1em "Helvetica Neue", Helvetica, sans-serif;color:#222222;}
#logo .site-description {font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#999999;}
#header-container{background-color:#ffffff;}#nav-container{background:#169fe6;}#nav-container{border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:none;border-right:none;}#nav-container #navigation ul#main-nav > li:first-child{border-left: 0px solid #dbdbdb;}#footer-widgets-container{background-color:#f0f0f0}#footer-widgets{border:none;}#footer-container{background-color:#169fe6}#footer-container{border-top:0px solid #dbdbdb;}#footer {border-width: 0 !important;}
body, p { font:300 14px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
h1 { font:bold 28px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h2 { font:bold 24px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h3 { font:bold 20px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h4 { font:bold 16px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h5 { font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h6 { font:bold 12px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
.page-title, .post .title, .page .title {font:bold 2.2em/1.1em Arial, sans-serif;color:#3E3E3E;}
.post .title a:link, .post .title a:visited, .page .title a:link, .page .title a:visited {color:#3E3E3E}
.post-meta { font:300 1em/1.5em Arial, sans-serif;color:#3E3E3E; }
.entry, .entry p{ font:300 15px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.post-more {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:;border-top:0px solid #e6e6e6;border-bottom:0px solid #e6e6e6;}
#post-author, #connect {border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6;border-left:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;background-color:#fafafa}
.nav-entries a, .woo-pagination { font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#888; }
.woo-pagination a, .woo-pagination a:hover {color:#888!important}
.widget h3 {font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-bottom:1px solid #e6e6e6;}
.widget_recent_comments li, #twitter li { border-color: #e6e6e6;}
.widget p, .widget .textwidget { font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.widget {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-radius:0px;-moz-border-radius:0px;-webkit-border-radius:0px;}
#tabs .inside li a, .widget_woodojo_tabs .tabbable .tab-pane li a { font:bold 12px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
#tabs .inside li span.meta, .widget_woodojo_tabs .tabbable .tab-pane li span.meta { font:300 11px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
#tabs ul.wooTabs li a, .widget_woodojo_tabs .tabbable .nav-tabs li a { font:300 11px/2em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
@media only screen and (min-width:768px) {
ul.nav li a, #navigation ul.rss a, #navigation .cart-contents, #navigation ul.rss, #navigation ul.cart .cart_list a{ font:300 13px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; } #navigation ul.rss li a:before { color:#ffffff;}
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover a, #navigation ul.nav li ul li a, #navigation ul.cart > li:hover > a, #navigation ul.cart > li > ul > div, #navigation ul.cart > li > ul > div p, #navigation ul.cart > li > ul span, #navigation ul.cart .cart_list a, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a { color:#169fe6!important; }
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover, #navigation ul.nav li ul, #navigation ul.cart > li:hover, #navigation ul.cart > li > ul > div, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a{background-color:#ffffff!important}
#navigation ul.nav li ul, #navigation ul.cart > li > ul > div  { border: 0px solid #dbdbdb; }
#navigation ul.nav > li > ul  { left: 0; }
#navigation ul.nav > li  { border-right: 0px solid #dbdbdb; }#navigation ul.nav > li > ul  { left: 0; }
#navigation  { box-shadow: none; -moz-box-shadow: none; -webkit-box-shadow: none; }#navigation ul li:first-child, #navigation ul li:first-child a { border-radius:0px 0 0 0px; -moz-border-radius:0px 0 0 0px; -webkit-border-radius:0px 0 0 0px; }
#navigation {background:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:0px solid #dbdbdb;border-right:0px solid #dbdbdb;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
#top ul.nav li a { font:300 12px/1.6em "Helvetica Neue", Helvetica, sans-serif;color:#ddd; }
}
#footer, #footer p { font:300 13px/1.4em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; }
#footer {background-color:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid ;border-left:0px solid ;border-right:0px solid ;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
.magazine #loopedSlider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.magazine #loopedSlider .content .excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.magazine .block .post .title, .magazine .block .post .title a { font:bold 18px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
#loopedSlider.business-slider .content h2 { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#loopedSlider.business-slider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#wrapper #loopedSlider.business-slider .content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.archive_header { font:bold 18px/1em Arial, sans-serif;color:#222222; }
.archive_header {border-bottom:1px solid #e6e6e6;}
</style> 
  <!-- Options Panel Custom CSS --> 
  <style type="text/css">
/* Subscribe & Connect button style */
#mc-embedded-subscribe{background-color: #DF4B4B;}

/* MailChimp for WP Plugin styles */
.mc4wp-form input[type=submit]{background-color: #DF4B4B;}

/* Hide the header/footer on almost finished pages */
.page-id-365 #header, .page-id-365 #nav-container, .page-id-365 #footer-container{display: none;}
.page-id-4031 #header, .page-id-4031 #nav-container, .page-id-4031 #footer-container{display: none;}
.page-id-365 #content{padding-top: 30px;}
.page-id-4031 #content{padding-top: 30px;}
.page-id-5289 #header, .page-id-5289 #nav-container, .page-id-5289 #footer-container{display: none;}
.page-id-5289 #content{padding-top: 30px;}

/* Hide the header/footer on confirmation pages */
.page-id-1397 #header, .page-id-1397 #nav-container, .page-id-1397 #footer-container{display: none;}
.page-id-1382 #header, .page-id-1382 #nav-container, .page-id-1382 #footer-container{display: none;}
.page-id-1481 #header, .page-id-1481 #nav-container, .page-id-1481 #footer-container{display: none;}
.page-id-3200 #header, .page-id-3200 #nav-container, .page-id-3200 #footer-container{display: none;}
.page-id-4038 #header, .page-id-4038 #nav-container, .page-id-4038 #footer-container{display: none;}
.page-id-5278 #header, .page-id-5278 #nav-container, .page-id-5278 #footer-container{display: none;}
.page-id-1397 #content, .page-id-1382 #content, .page-id-1481 #content, .page-id-4038 #content, .page-id-5278 #content{padding-top: 30px;}

/* Manipulate content on 'Let me show you...' page */
.page-id-3200 #content{padding-top: 15px;}
.page-id-3200 #content h1.title{display: none;}
.page-id-3200 #content .entry h1{font-size: 32px;}

/* Add margin to bottom of LaTeX equations, but only when they are not in paragraphs */
section.entry .latex{margin-bottom: 15px;}
section.entry p .latex{margin-bottom: 0px;}

/* Fix list specific issues on the "Start Here" page */
.page-id-4374 #start_here_benefits li{margin-bottom: 15px;}
</style> 
  <!-- Woo Shortcodes CSS --> 
  <!-- Custom Stylesheet --> 
  <style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style> 
  <!-- start Mixpanel --> 
  <script type="text/javascript">(function(f,b){if(!b.__SV){var a,e,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");
for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=f.createElement("script");a.type="text/javascript";a.async=!0;a.src="//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";e=f.getElementsByTagName("script")[0];e.parentNode.insertBefore(a,e)}})(document,window.mixpanel||[]);
mixpanel.init("2486e0f021e92605d44d32fce5f1d826");
</script> 
  <!-- end Mixpanel --> 
 </head> 
 <body class="post-template-default single single-post postid-1512 single-format-standard chrome alt-style-default two-col-left width-960 two-col-left-960 full-width full-header full-footer"> 
  <div id="wrapper"> 
   <div id="inner-wrapper"> 
    <!--#header-container--> 
    <div id="header-container"> 
     <h3 class="nav-toggle icon"><a href="#navigation">Navigation</a></h3> 
     <header id="header" class="col-full"> 
      <div id="logo"> 
       <a href="http://www.pyimagesearch.com/" title="Be awesome at learning OpenCV, Python, and computer vision"><img src="http://www.pyimagesearch.com/wp-content/uploads/2013/12/logo.png" alt="PyImageSearch"></a> 
       <span class="site-title"><a href="http://www.pyimagesearch.com/">PyImageSearch</a></span> 
       <span class="site-description">Be awesome at learning OpenCV, Python, and computer vision</span> 
      </div> 
     </header> 
    </div>
    <!--/#header-container--> 
    <!--#nav-container--> 
    <div id="nav-container"> 
     <nav id="navigation" class="col-full" role="navigation"> 
      <section class="menus"> 
       <a href="http://www.pyimagesearch.com" class="nav-home"><span>Home</span></a> 
       <h3>Main Menu</h3>
       <ul id="main-nav" class="nav fl">
        <li id="menu-item-4519" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4519"><a href="http://www.pyimagesearch.com/start-here-learn-computer-vision-opencv/">Start Here</a></li> 
        <li id="menu-item-2616" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2616"><a href="https://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a></li> 
        <li id="menu-item-2617" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2617"><a href="https://www.pyimagesearch.com/pyimagesearch-gurus/">PyImageSearch Gurus</a></li> 
        <li id="menu-item-2615" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2615"><a href="http://www.pyimagesearch.com/opencv-tutorials-resources-guides/">OpenCV 3 Tutorials</a></li> 
        <li id="menu-item-2618" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2618"><a href="http://www.pyimagesearch.com/free-opencv-crash-course/">FREE OpenCV Course</a></li> 
        <li id="menu-item-5929" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5929"><a href="https://jobs.pyimagesearch.com/">Jobs</a></li> 
        <li id="menu-item-2619" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2619"><a href="http://www.pyimagesearch.com/about/">About</a></li> 
        <li id="menu-item-2620" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2620"><a href="http://www.pyimagesearch.com/contact/">Contact</a></li> 
       </ul> 
       <ul class="rss fr"> 
        <li class="sub-rss"><a href="http://feeds.feedburner.com/Pyimagesearch"></a></li> 
       </ul> 
      </section>
      <!-- /.menus --> 
      <a href="#top" class="nav-close"><span>Return to Content</span></a> 
     </nav> 
    </div>
    <!--/#nav-container--> 
    <!-- #content Starts --> 
    <div id="content" class="col-full"> 
     <div id="main-sidebar-container"> 
      <!-- #main Starts --> 
      <section id="main"> 
       <article class="post-1512 post type-post status-publish format-standard hentry category-image-processing category-tutorials tag-barcode tag-barcode-detection tag-gradients tag-image-processing-2 tag-magnitude tag-thresholding tag-tutorials-2"> 
        <header> 
         <h1 class="title">Detecting Barcodes in Images with Python and OpenCV</h1> 
        </header> 
        <div class="post-meta">
         <span class="small">By</span> 
         <span class="author vcard"><span class="fn"><a href="http://www.pyimagesearch.com/author/adrian/" title="Posts by Adrian Rosebrock" rel="author">Adrian Rosebrock</a></span></span> 
         <span class="small">on</span> 
         <abbr class="date time published" title="2014-11-24T10:00:46-0400">November 24, 2014</abbr> 
         <span class="small">in</span> 
         <span class="categories"><a href="http://www.pyimagesearch.com/category/image-processing/" title="View all items in Image Processing">Image Processing</a>, <a href="http://www.pyimagesearch.com/category/tutorials/" title="View all items in Tutorials">Tutorials</a></span> 
        </div> 
        <section class="entry"> 
         <div id="fsb-social-bar" class="fsb-social-bar" data-post-id="1512" data-socialite="true">
          <style type="text/css">            #fsb-social-bar { width: 100%; border-bottom: 1px solid #dbdbdb; border-top: 1px solid #dbdbdb; padding: 10px 0; margin: 0px 0 20px 0; float: left; background: #fff; position: relative; clear: both; }            #fsb-social-bar a { border: 0px !important }            #fsb-social-bar.fsb-fixed { position: fixed; top: -2px; z-index: 99999; }            #fsb-social-bar .fsb-title { display: block; float: left; margin: 3px 20px 0 0; font-size: 16px; font-family: Arial, Helvetica, sans-serif; text-decoration: none; color: #333; }            #fsb-social-bar .fsb-share-facebook { width: 120px; float: left; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-facebook.fsb-hide-count { width: 44px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-twitter { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-twitter.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-google { float: left; width: 105px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-google.fsb-hide-count { width: 33px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-linkedin { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-linkedin.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-pinterest { float: left; width: 115px; padding: 3px 0 2px; height: 25px;}            #fsb-social-bar .fsb-share-pinterest.fsb-hide-count { width: 43px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .socialite { display: block; position: relative; background: url(http://www.pyimagesearch.com/wp-content/plugins/floating-social-bar/images/fsb-sprite.png) no-repeat scroll 0 0; }            #fsb-social-bar .socialite-loaded { background: none !important; }            #fsb-social-bar .fsb-service-title { display: none; }            #fsb-social-bar a { color: #333; text-decoration: none; font-size: 12px; font-family: Arial, Helvetica, sans-serif; }            #fsb-social-bar .fsb-twitter { width: 105px; height: 25px; background-position: -13px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-twitter .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 69px; color: #333; }            #fsb-social-bar .fsb-google { width: 75px; height: 25px; background-position: -136px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-google .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 41px; color: #333; }            #fsb-social-bar .fsb-google .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-share-google .socialite-loaded .socialite-button{padding: 2px 0 0}            #fsb-social-bar .fsb-facebook { width: 89px; height: 25px; background-position: -231px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-facebook .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 52px; color: #333; }            #fsb-social-bar .fsb-facebook .socialite-button { margin: 0 !important;}            #fsb-social-bar .fsb-share-facebook .socialite-loaded .socialite-button {padding: 2px 0 0}            #fsb-social-bar .fsb-linkedin { width: 105px; height: 25px; background-position: -347px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-linkedin .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 70px; color: #333; }            #fsb-social-bar .fsb-linkedin .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-pinterest { width: 88px; height: 25px; background-position: -484px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-pinterest .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 50px; color: #333; }            #fsb-social-bar .fsb-pinterest .socialite-button { margin: 0 !important; }            .fsb-clear { clear: both; }            .fsb-clear:after { clear:both; content:; display:block; height:0; line-height:0; overflow:auto; visibility:hidden; zoom:1; }            @media (max-width: 768px) { #fsb-social-bar.fsb-fixed { position: relative !important; top: auto !important; } }        </style>
          <div class="fsb-share-twitter fsb-hide-count">
           <a href="https://twitter.com/share?original_referer=http%3A%2F%2Fwww.pyimagesearch.com%2F&amp;source=tweetbutton&amp;text=Detecting+Barcodes+in+Images+with+Python+and+OpenCV&amp;url=http%3A%2F%2Fwww.pyimagesearch.com%2F2014%2F11%2F24%2Fdetecting-barcodes-images-python-opencv%2F&amp;via=pyimagesearch" class="socialite twitter fsb-twitter" data-fsb-service="twitter" rel="nofollow" target="_blank" title="Be the first one to tweet this article!"><span class="fsb-service-title">Twitter</span><span class="fsb-count">0</span></a>
          </div>
          <div class="fsb-share-facebook fsb-hide-count">
           <a href="http://www.facebook.com/sharer.php?u=http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" class="socialite facebook fsb-facebook" data-fsb-service="facebook" data-href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" data-send="false" data-layout="button_count" data-width="60" data-show-faces="false" rel="nofollow" target="_blank"><span class="fsb-service-title">Facebook</span><span class="fsb-count">0</span></a>
          </div>
          <div class="fsb-share-google">
           <a href="https://plus.google.com/share?url=http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" class="socialite googleplus fsb-google" data-fsb-service="google" data-size="medium" data-href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" rel="nofollow" target="_blank"><span class="fsb-service-title">Google+</span><span class="fsb-count">50</span></a>
          </div>
          <div class="fsb-share-linkedin">
           <a href="https://www.linkedin.com/cws/share?url=http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" class="socialite linkedin fsb-linkedin" data-fsb-service="linkedin" data-size="medium" data-href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" rel="nofollow" target="_blank"><span class="fsb-service-title">LinkedIn</span><span class="fsb-count">23</span></a>
          </div>
         </div>
         <div class="fsb-clear"></div>
         <p><a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient_and_detection.jpg"><img class="aligncenter wp-image-1513" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient_and_detection.jpg" alt="Detecting Barcodes in Images with Python and OpenCV" width="600" height="225" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient_and_detection.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient_and_detection-300x112.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a></p> 
         <p><strong>UPDATE:</strong> The introduction to this post may seen a little out there. For some context, I had just finished watching the <a href="http://southpark.cc.com/full-episodes/s17e07-black-friday" target="blank"><em>South Park Black Friday episodes</em></a> prior to writing this post so I definitely had some inspiration regarding zombie shoppers, Black Friday chaos, and <em>Game of Thrones</em>.</p> 
         <hr> 
         <p>Black Friday is coming.</p> 
         <p>Hordes of angry shoppers. Stampedes of middle-aged midwestern women, their toothless gums bloodthirsty for 75% off the latest season of <em>Game of Thrones</em> at the local Wal-Mart.</p> 
         <p>Theyll lineup outside the Wal-Mat doors on Thanksgiving at midnight. Theyll rally, beating at the locked doors with their hands and heads until their bodies are raw and bloody, like zombies from <em>28 Days Later</em>. But instead of human flesh, they crave petty consumer sustenance. Their war cries of discounts and sales will reach the heavens. And their thunderous footsteps will cause earthquakes across the Great Plains.</p> 
         <p>Of course, the media wont help &nbsp;they will sensationalize every last little piece. From frostbitten families camping out all night in the blistering cold, to the little old lady trampled by raging bargain hunters as the doors open, akin to the Gallimimus stampede in <em>Jurassic Park</em>. All of this simply because she wanted to purchase the latest Halo game for Timmy, her little 9 year old grandson, whos parents passed away this time last year. At a Wal-Mart. During Black Friday.</p> 
         <p>And I have to ask, is all this chaos and bedlam worth it?</p> 
         <p><em><strong>Hell. No.</strong></em></p> 
         <p>Any shopping I do this Black Friday will be from (safely) behind my laptop screen, likely nursing a hangover from the night before with a cup of coffee and a handful of Tylenol.</p> 
         <p>But if you decide you are going to venture out into the real-world and brave the bargain hunters, <strong><em>youll want to download the source code to this blog post first</em></strong></p> 
         <p>Imagine how silly you would feel, standing in line, waiting to checkout, only to scan the barcode on the latest season of <em>Game of Thrones</em>&nbsp;only to find out that Target has it for $5 cheaper?</p> 
         <p>In the rest of this blog post Ill show you how to detect barcodes in images using nothing but Python and OpenCV.</p> 
         <div style="padding-top: 10px; padding-bottom: 15px; padding-right: 10px; height: 70px; background: url('http://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png'); background-size: 70px 70px; background-repeat: no-repeat;"> 
          <p style="margin-top: 1px; margin-left: 80px; font-weight: bold;">Looking for the source code to this post?<br> <a id="scroll_to_code" href="#">Jump right to the downloads section.</a></p> 
         </div> 
         <p><strong>OpenCV and Python versions:</strong><br> This example will run on<strong>&nbsp;Python 2.7</strong>&nbsp;and <strong>OpenCV 2.4.X</strong>.</p> 
         <h1>Detecting Barcodes in Images using Python and OpenCV</h1> 
         <p>The goal of this blog post is to demonstrate a basic implementation of barcode detection using computer vision and image processing techniques. My implementation of the algorithm is originally based loosely on <a href="http://stackoverflow.com/questions/9013703/how-to-find-the-location-of-red-region-in-an-image-using-matlab/9014569" target="_blank">this StackOverflow question</a>. I have gone through the code and provided some updates and improvements to the original algorithm.</p> 
         <p>Its important to note that this algorithm will not work for <em>all</em>&nbsp;barcodes, but it should give you the basic intuition as to what types of techniques you should be applying.</p> 
         <p>For this example, we will be detecting the barcode in the following image:</p> 
         <div id="attachment_1514" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_01.jpg"><img class="size-full wp-image-1514" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_01.jpg" alt="Figure 1: Example image containing a barcode that we want to detect." width="600" height="450" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_01.jpg 600w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_01-300x225.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 1:</strong> Example image containing a barcode that we want to detect.</p>
         </div> 
         <p>Lets go ahead and start writing some code. Open up a new file, name it <span id="crayon-59beba6fbc351729307553" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">detect_barcode</span><span class="crayon-sy">.</span><span class="crayon-v">py</span></span></span>&nbsp;, and lets get coding:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc37b161099285" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Python</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
import numpy as np
import argparse
import cv2

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required = True, help = "path to the image file")
args = vars(ap.parse_args())</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59beba6fbc37b161099285-1">
                 1
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc37b161099285-2">
                 2
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc37b161099285-3">
                 3
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc37b161099285-4">
                 4
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc37b161099285-5">
                 5
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc37b161099285-6">
                 6
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc37b161099285-7">
                 7
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc37b161099285-8">
                 8
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc37b161099285-9">
                 9
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59beba6fbc37b161099285-1">
                 <span class="crayon-c"># import the necessary packages</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc37b161099285-2">
                 <span class="crayon-r">import</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">numpy </span>
                 <span class="crayon-st">as</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">np</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc37b161099285-3">
                 <span class="crayon-r">import</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">argparse</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc37b161099285-4">
                 <span class="crayon-r">import</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc37b161099285-5">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc37b161099285-6">
                 <span class="crayon-c"># construct the argument parse and parse the arguments</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc37b161099285-7">
                 <span class="crayon-v">ap</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">argparse</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">ArgumentParser</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc37b161099285-8">
                 <span class="crayon-v">ap</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">add_argument</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-s">"-i"</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-s">"--image"</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">required</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">True</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">help</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-s">"path to the image file"</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc37b161099285-9">
                 <span class="crayon-v">args</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">vars</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">ap</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">parse_args</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">)</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0024 seconds] --> 
         <p>The first thing well do is import the packages well need. Well utilize NumPy for numeric processing, <span id="crayon-59beba6fbc37f477155602" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">argparse</span></span></span>&nbsp; for parsing command line arguments, and <span id="crayon-59beba6fbc382658500591" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cv2</span></span></span>&nbsp;&nbsp;for our OpenCV bindings.</p> 
         <p>Then well setup our command line arguments. We need just a single switch here, <span id="crayon-59beba6fbc385740954686" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">image</span></span></span>&nbsp;, which is the path to our image that contains a barcode that we want&nbsp;to detect.</p> 
         <p>Now, time for some actual image processing:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc387785779756" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Python</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
import numpy as np
import argparse
import cv2

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required = True, help = "path to the image file")
args = vars(ap.parse_args())

# load the image and convert it to grayscale
image = cv2.imread(args["image"])
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# compute the Scharr gradient magnitude representation of the images
# in both the x and y direction
gradX = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 1, dy = 0, ksize = -1)
gradY = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 0, dy = 1, ksize = -1)

# subtract the y-gradient from the x-gradient
gradient = cv2.subtract(gradX, gradY)
gradient = cv2.convertScaleAbs(gradient)</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59beba6fbc387785779756-11">
                 11
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc387785779756-12">
                 12
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc387785779756-13">
                 13
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc387785779756-14">
                 14
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc387785779756-15">
                 15
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc387785779756-16">
                 16
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc387785779756-17">
                 17
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc387785779756-18">
                 18
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc387785779756-19">
                 19
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc387785779756-20">
                 20
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc387785779756-21">
                 21
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc387785779756-22">
                 22
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59beba6fbc387785779756-11">
                 <span class="crayon-c"># load the image and convert it to grayscale</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc387785779756-12">
                 <span class="crayon-v">image</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">imread</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">args</span>
                 <span class="crayon-sy">[</span>
                 <span class="crayon-s">"image"</span>
                 <span class="crayon-sy">]</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc387785779756-13">
                 <span class="crayon-v">gray</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">cvtColor</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">image</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">COLOR_BGR2GRAY</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc387785779756-14">
                 &nbsp;
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc387785779756-15">
                 <span class="crayon-c"># compute the Scharr gradient magnitude representation of the images</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc387785779756-16">
                 <span class="crayon-c"># in both the x and y direction</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc387785779756-17">
                 <span class="crayon-v">gradX</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">Sobel</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gray</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">ddepth</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">cv</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">CV_32F</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">dx</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">dy</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">ksize</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">-</span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc387785779756-18">
                 <span class="crayon-v">gradY</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">Sobel</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gray</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">ddepth</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">cv</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">CV_32F</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">dx</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">dy</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">ksize</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">-</span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc387785779756-19">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc387785779756-20">
                 <span class="crayon-c"># subtract the y-gradient from the x-gradient</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc387785779756-21">
                 <span class="crayon-v">gradient</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">subtract</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gradX</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">gradY</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc387785779756-22">
                 <span class="crayon-v">gradient</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">convertScaleAbs</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gradient</span>
                 <span class="crayon-sy">)</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0053 seconds] --> 
         <p>On <strong>Lines 12 and 13</strong>&nbsp;we load our <span id="crayon-59beba6fbc38a157664196" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">image</span></span></span>&nbsp;&nbsp;off disk and convert it to grayscale.</p> 
         <p>Then, we use the Scharr operator (specified using <span id="crayon-59beba6fbc38d147619774" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">ksize</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-cn">1</span></span></span>&nbsp;) to construct the gradient magnitude representation of the grayscale image in the horizontal and vertical directions on <strong>Lines 17 and 18</strong>.</p> 
         <p>From there, we subtract the <em>y</em>-gradient of the Scharr operator from the <em>x</em>-gradient of the Scharr operator on <strong>Lines 21 and 22</strong>. By performing this subtraction we are left with regions of the image that have high horizontal gradients and low vertical gradients.</p> 
         <p>Our <span id="crayon-59beba6fbc38f786233342" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">gradient</span></span></span>&nbsp;&nbsp;representation of our original image above looks like:</p> 
         <div id="attachment_1515" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient.jpg"><img class="wp-image-1515" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient.jpg" alt="Figure 2: The gradient representation of our barcode image." width="600" height="493" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_gradient-300x246.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 2:</strong> The gradient representation of our barcode image.</p>
         </div> 
         <p><strong>Notice how the barcoded region of the image has been detected by our gradient operations.</strong> The next steps will be to filter out the noise in the image and focus solely on the barcode region.</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc392564384979" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Python</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
import numpy as np
import argparse
import cv2

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required = True, help = "path to the image file")
args = vars(ap.parse_args())

# load the image and convert it to grayscale
image = cv2.imread(args["image"])
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# compute the Scharr gradient magnitude representation of the images
# in both the x and y direction
gradX = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 1, dy = 0, ksize = -1)
gradY = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 0, dy = 1, ksize = -1)

# subtract the y-gradient from the x-gradient
gradient = cv2.subtract(gradX, gradY)
gradient = cv2.convertScaleAbs(gradient)

# blur and threshold the image
blurred = cv2.blur(gradient, (9, 9))
(_, thresh) = cv2.threshold(blurred, 225, 255, cv2.THRESH_BINARY)</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc392564384979-24">
                 24
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc392564384979-25">
                 25
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc392564384979-26">
                 26
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc392564384979-24">
                 <span class="crayon-c"># blur and threshold the image</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc392564384979-25">
                 <span class="crayon-v">blurred</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">blur</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gradient</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-cn">9</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">9</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc392564384979-26">
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">_</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">thresh</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">threshold</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">blurred</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">225</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">255</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">THRESH_BINARY</span>
                 <span class="crayon-sy">)</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0063 seconds] --> 
         <p>The first thing well do is apply an average blur on <strong>Line 25</strong>&nbsp;to the gradient image using a <em>9 x 9</em>&nbsp;kernel. This will help smooth out high frequency noise in the gradient representation of the image.</p> 
         <p>Well then threshold the blurred image on <strong>Line 26</strong>. Any pixel in the gradient image that is not greater than 225 is set to 0 (black). Otherwise, the pixel is set to 255 (white).</p> 
         <p>The output of the blurring and thresholding looks like this:</p> 
         <div id="attachment_1516" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_threhsold.jpg"><img class="wp-image-1516" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_threhsold.jpg" alt="Figure 3: Thresholding the gradient image to obtain a rough approximation to the rectangular barcode region." width="600" height="493" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_threhsold.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_threhsold-300x246.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 3:</strong> Thresholding the gradient image to obtain a rough approximation to the rectangular barcode region.</p>
         </div> 
         <p>However, as you can see in the threshold image above, <em>there are gaps between the vertical bars of the barcode.</em> In order to close these gaps and make it easier for our algorithm to detect the blob-like region of the barcode, well need to perform some basic morphological operations:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc396902013360" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Python</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
import numpy as np
import argparse
import cv2

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required = True, help = "path to the image file")
args = vars(ap.parse_args())

# load the image and convert it to grayscale
image = cv2.imread(args["image"])
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# compute the Scharr gradient magnitude representation of the images
# in both the x and y direction
gradX = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 1, dy = 0, ksize = -1)
gradY = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 0, dy = 1, ksize = -1)

# subtract the y-gradient from the x-gradient
gradient = cv2.subtract(gradX, gradY)
gradient = cv2.convertScaleAbs(gradient)

# blur and threshold the image
blurred = cv2.blur(gradient, (9, 9))
(_, thresh) = cv2.threshold(blurred, 225, 255, cv2.THRESH_BINARY)

# construct a closing kernel and apply it to the thresholded image
kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (21, 7))
closed = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel)</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc396902013360-28">
                 28
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc396902013360-29">
                 29
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc396902013360-30">
                 30
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc396902013360-28">
                 <span class="crayon-c"># construct a closing kernel and apply it to the thresholded image</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc396902013360-29">
                 <span class="crayon-v">kernel</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">getStructuringElement</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">MORPH_RECT</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-cn">21</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">7</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc396902013360-30">
                 <span class="crayon-v">closed</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">morphologyEx</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">thresh</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">MORPH_CLOSE</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">kernel</span>
                 <span class="crayon-sy">)</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0072 seconds] --> 
         <p>Well start by constructing a rectangular kernel using the <span id="crayon-59beba6fbc39a134213938" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-v">getStructuringElement</span></span></span>&nbsp;&nbsp;on <strong>Line 29</strong>. This kernel has&nbsp;a width that is larger than the height, thus allowing us to close the gaps between vertical stripes of the barcode.</p> 
         <p>We then perform our morphological operation on <strong>Line 30</strong> by applying our kernel to our thresholded image, thus attempting to close the the gaps between the bars.</p> 
         <p>You can now see that the gaps are substantially more closed, as compared to the thresholded image above:</p> 
         <div id="attachment_1517" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_closing.jpg"><img class="wp-image-1517" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_closing.jpg" alt="Figure 4: Applying closing morphological operations to close the gap between barcode stripes." width="600" height="493" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_closing.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_closing-300x246.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 4:</strong> Applying closing morphological operations to close the gap between barcode stripes.</p>
         </div> 
         <p>Of course, now we have small blobs in the image that are not part of the actual barcode, but may interfere with our contour detection.</p> 
         <p>Lets go ahead and try to remove these small blobs:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc39d482517915" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Python</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
import numpy as np
import argparse
import cv2

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required = True, help = "path to the image file")
args = vars(ap.parse_args())

# load the image and convert it to grayscale
image = cv2.imread(args["image"])
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# compute the Scharr gradient magnitude representation of the images
# in both the x and y direction
gradX = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 1, dy = 0, ksize = -1)
gradY = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 0, dy = 1, ksize = -1)

# subtract the y-gradient from the x-gradient
gradient = cv2.subtract(gradX, gradY)
gradient = cv2.convertScaleAbs(gradient)

# blur and threshold the image
blurred = cv2.blur(gradient, (9, 9))
(_, thresh) = cv2.threshold(blurred, 225, 255, cv2.THRESH_BINARY)

# construct a closing kernel and apply it to the thresholded image
kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (21, 7))
closed = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel)

# perform a series of erosions and dilations
closed = cv2.erode(closed, None, iterations = 4)
closed = cv2.dilate(closed, None, iterations = 4)</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc39d482517915-32">
                 32
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc39d482517915-33">
                 33
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc39d482517915-34">
                 34
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc39d482517915-32">
                 <span class="crayon-c"># perform a series of erosions and dilations</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc39d482517915-33">
                 <span class="crayon-v">closed</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">erode</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">closed</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">None</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">iterations</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">4</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc39d482517915-34">
                 <span class="crayon-v">closed</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">dilate</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">closed</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">None</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">iterations</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">4</span>
                 <span class="crayon-sy">)</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0107 seconds] --> 
         <p>All we are doing here is performing 4 iterations of erosions, followed by 4 iterations of dilations. An erosion will erode the white pixels in the image, thus removing the small blobs, whereas a dilation will dilate the remaining white pixels and grow the white regions back out.</p> 
         <p>Provided that the small blobs were removed during the erosion, they will not reappear during the dilation.</p> 
         <p>After our series of erosions and dilations you can see that the small blobs have been successfully removed and we are left with the barcode region:</p> 
         <div id="attachment_1518" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_erosion_and_dilation.jpg"><img class="wp-image-1518" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_erosion_and_dilation.jpg" alt="Figure 5: Removing small, irrelevant blobs by applying a series of erosions and dilations." width="600" height="492" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_erosion_and_dilation.jpg 1428w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_erosion_and_dilation-300x246.jpg 300w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_erosion_and_dilation-1024x840.jpg 1024w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 5:</strong> Removing small, irrelevant blobs by applying a series of erosions and dilations.</p>
         </div> 
         <p>Finally, lets find the contours of the barcoded region of the image:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc3a1543042243" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Python</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
import numpy as np
import argparse
import cv2

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required = True, help = "path to the image file")
args = vars(ap.parse_args())

# load the image and convert it to grayscale
image = cv2.imread(args["image"])
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# compute the Scharr gradient magnitude representation of the images
# in both the x and y direction
gradX = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 1, dy = 0, ksize = -1)
gradY = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 0, dy = 1, ksize = -1)

# subtract the y-gradient from the x-gradient
gradient = cv2.subtract(gradX, gradY)
gradient = cv2.convertScaleAbs(gradient)

# blur and threshold the image
blurred = cv2.blur(gradient, (9, 9))
(_, thresh) = cv2.threshold(blurred, 225, 255, cv2.THRESH_BINARY)

# construct a closing kernel and apply it to the thresholded image
kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (21, 7))
closed = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel)

# perform a series of erosions and dilations
closed = cv2.erode(closed, None, iterations = 4)
closed = cv2.dilate(closed, None, iterations = 4)

# find the contours in the thresholded image, then sort the contours
# by their area, keeping only the largest one
(cnts, _) = cv2.findContours(closed.copy(), cv2.RETR_EXTERNAL,
	cv2.CHAIN_APPROX_SIMPLE)
c = sorted(cnts, key = cv2.contourArea, reverse = True)[0]

# compute the rotated bounding box of the largest contour
rect = cv2.minAreaRect(c)
box = np.int0(cv2.cv.BoxPoints(rect))

# draw a bounding box arounded the detected barcode and display the
# image
cv2.drawContours(image, [box], -1, (0, 255, 0), 3)
cv2.imshow("Image", image)
cv2.waitKey(0)</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc3a1543042243-36">
                 36
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc3a1543042243-37">
                 37
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc3a1543042243-38">
                 38
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc3a1543042243-39">
                 39
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc3a1543042243-40">
                 40
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc3a1543042243-41">
                 41
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc3a1543042243-42">
                 42
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc3a1543042243-43">
                 43
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc3a1543042243-44">
                 44
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc3a1543042243-45">
                 45
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc3a1543042243-46">
                 46
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc3a1543042243-47">
                 47
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc3a1543042243-48">
                 48
                </div>
                <div class="crayon-num" data-line="crayon-59beba6fbc3a1543042243-49">
                 49
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fbc3a1543042243-50">
                 50
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc3a1543042243-36">
                 <span class="crayon-c"># find the contours in the thresholded image, then sort the contours</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc3a1543042243-37">
                 <span class="crayon-c"># by their area, keeping only the largest one</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc3a1543042243-38">
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">cnts</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">_</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">findContours</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">closed</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-k ">copy</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">RETR_EXTERNAL</span>
                 <span class="crayon-sy">,</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc3a1543042243-39">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">CHAIN_APPROX_SIMPLE</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc3a1543042243-40">
                 <span class="crayon-v">c</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">sorted</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">cnts</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">key</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">contourArea</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">reverse</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">True</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">[</span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">]</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc3a1543042243-41">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc3a1543042243-42">
                 <span class="crayon-c"># compute the rotated bounding box of the largest contour</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc3a1543042243-43">
                 <span class="crayon-v">rect</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">minAreaRect</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">c</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc3a1543042243-44">
                 <span class="crayon-v">box</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">np</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">int0</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">cv</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">BoxPoints</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">rect</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc3a1543042243-45">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc3a1543042243-46">
                 <span class="crayon-c"># draw a bounding box arounded the detected barcode and display the</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc3a1543042243-47">
                 <span class="crayon-c"># image</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc3a1543042243-48">
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">drawContours</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">image</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">[</span>
                 <span class="crayon-v">box</span>
                 <span class="crayon-sy">]</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">-</span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">255</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">3</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59beba6fbc3a1543042243-49">
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">imshow</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-s">"Image"</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">image</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59beba6fbc3a1543042243-50">
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">waitKey</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">)</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0114 seconds] --> 
         <p>Luckily, this is the easy part. On <strong>Lines 38-40</strong> we simply find the largest contour in the image, which if we have done our image processing steps correctly, should correspond to the barcoded region.</p> 
         <p>We then determine the minimum bounding box for the largest contour on <strong>Lines 43 and 44</strong>&nbsp;and finally display the detected barcode on <strong>Lines 48-50</strong>.</p> 
         <p>As you can see in the following image, we have successfully detected the barcode:</p> 
         <div id="attachment_1519" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_01.jpg"><img class="wp-image-1519" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_01.jpg" alt="Figure 6: Successfully detecting the barcode in our example image." width="600" height="493" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_01.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_01-300x246.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 6:</strong> Successfully detecting the barcode in our example image.</p>
         </div> 
         <p>In the next section well try a few more images.</p> 
         <h1>Successful Barcode Detections</h1> 
         <p>To follow along with these results, use the form at the bottom of this post to download the source code and accompanying images for this blog post.</p> 
         <p>Once you have the code and images, open up a terminal and execute the following command:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc3a6419412438" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Shell</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
$ python detect_barcode.py --image images/barcode_02.jpg</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59beba6fbc3a6419412438-1">
                 1
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59beba6fbc3a6419412438-1">
                 <span class="crayon-sy">$</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">python </span>
                 <span class="crayon-v">detect_barcode</span>
                 <span class="crayon-e">.py</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">--</span>
                 <span class="crayon-e">image </span>
                 <span class="crayon-v">images</span>
                 <span class="crayon-o">/</span>
                 <span class="crayon-v">barcode_02</span>
                 <span class="crayon-e">.jpg</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0008 seconds] --> 
         <p></p>
         <div id="attachment_1520" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_02.jpg"><img class="wp-image-1520" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_02.jpg" alt="Figure 7: Using OpenCV to detect a barcode in an image." width="600" height="783" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_02.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_02-229x300.jpg 229w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_02-784x1024.jpg 784w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 7:</strong> Using OpenCV to detect a barcode in an image.</p>
         </div>
         <p></p> 
         <p>No problem detecting the barcode on that jar of coconut oil!</p> 
         <p>Lets try another image:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc3a9901890207" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Shell</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
$ python detect_barcode.py --image images/barcode_03.jpg</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59beba6fbc3a9901890207-1">
                 1
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59beba6fbc3a9901890207-1">
                 <span class="crayon-sy">$</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">python </span>
                 <span class="crayon-v">detect_barcode</span>
                 <span class="crayon-e">.py</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">--</span>
                 <span class="crayon-e">image </span>
                 <span class="crayon-v">images</span>
                 <span class="crayon-o">/</span>
                 <span class="crayon-v">barcode_03</span>
                 <span class="crayon-e">.jpg</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0005 seconds] --> 
         <p></p>
         <div id="attachment_1521" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_03.jpg"><img class="wp-image-1521" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_03.jpg" alt="Figure 8: Using computer vision to detect a barcode in an image." width="600" height="783" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_03.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_03-229x300.jpg 229w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_03-784x1024.jpg 784w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 8:</strong> Using computer vision to detect a barcode in an image.</p>
         </div>
         <p></p> 
         <p>We were able to find the barcode in that image too!</p> 
         <p>But enough of the food products, what about the barcode on a book:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc3ac382700462" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Shell</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
$ python detect_barcode.py --image images/barcode_04.jpg</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59beba6fbc3ac382700462-1">
                 1
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59beba6fbc3ac382700462-1">
                 <span class="crayon-sy">$</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">python </span>
                 <span class="crayon-v">detect_barcode</span>
                 <span class="crayon-e">.py</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">--</span>
                 <span class="crayon-e">image </span>
                 <span class="crayon-v">images</span>
                 <span class="crayon-o">/</span>
                 <span class="crayon-v">barcode_04</span>
                 <span class="crayon-e">.jpg</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0004 seconds] --> 
         <p></p>
         <div id="attachment_1522" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_04.jpg"><img class="wp-image-1522" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_04.jpg" alt="Figure 9: Detecting a barcode on a book using Python and OpenCV." width="600" height="783" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_04.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_04-229x300.jpg 229w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_04-784x1024.jpg 784w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 9:</strong> Detecting a barcode on a book using Python and OpenCV.</p>
         </div>
         <p></p> 
         <p>Again, no problem!</p> 
         <p>How about the tracking code on a package?</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc3af215642096" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Shell</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
$ python detect_barcode.py --image images/barcode_05.jpg</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59beba6fbc3af215642096-1">
                 1
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59beba6fbc3af215642096-1">
                 <span class="crayon-sy">$</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">python </span>
                 <span class="crayon-v">detect_barcode</span>
                 <span class="crayon-e">.py</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">--</span>
                 <span class="crayon-e">image </span>
                 <span class="crayon-v">images</span>
                 <span class="crayon-o">/</span>
                 <span class="crayon-v">barcode_05</span>
                 <span class="crayon-e">.jpg</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0004 seconds] --> 
         <p></p>
         <div id="attachment_1523" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_05.jpg"><img class="wp-image-1523" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_05.jpg" alt="Figure 10: Detecting the barcode on a package using computer vision and image processing." width="600" height="783" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_05.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_05-229x300.jpg 229w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_05-784x1024.jpg 784w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 10:</strong> Detecting the barcode on a package using computer vision and image processing.</p>
         </div>
         <p></p> 
         <p>Again, our algorithm is able to successfully detect the barcode.</p> 
         <p>Finally, lets try one more image This one is of my favorite pasta sauce, Raos Homemade Vodka Sauce:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59beba6fbc3b2292198624" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Detecting Barcodes in Images with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Shell</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
$ python detect_barcode.py --image images/barcode_06.jpg</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59beba6fbc3b2292198624-1">
                 1
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59beba6fbc3b2292198624-1">
                 <span class="crayon-sy">$</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">python </span>
                 <span class="crayon-v">detect_barcode</span>
                 <span class="crayon-e">.py</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">--</span>
                 <span class="crayon-e">image </span>
                 <span class="crayon-v">images</span>
                 <span class="crayon-o">/</span>
                 <span class="crayon-v">barcode_06</span>
                 <span class="crayon-e">.jpg</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0006 seconds] --> 
         <p></p>
         <div id="attachment_1524" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_06.jpg"><img class="wp-image-1524" src="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_06.jpg" alt="Figure 12: Barcode detection is easy using Python and OpenCV!" width="600" height="783" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_06.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_06-229x300.jpg 229w, http://www.pyimagesearch.com/wp-content/uploads/2014/11/barcode_results_06-784x1024.jpg 784w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 11:</strong> Barcode detection is easy using Python and OpenCV!</p>
         </div>
         <p></p> 
         <p>We were once again able to detect the barcode!</p> 
         <h1>Summary</h1> 
         <p>In this blog post we reviewed the steps necessary to detect barcodes in images using computer vision techniques. We implemented our algorithm using the Python programming language and the OpenCV library.</p> 
         <p>The general outline of the algorithm is to:</p> 
         <ol> 
          <li>Compute the Scharr gradient magnitude representations in both the <em>x&nbsp;</em>and <em>y</em>&nbsp;direction.</li> 
          <li>Subtract the <em>y</em>-gradient from the <em>x</em>-gradient to reveal the barcoded region.</li> 
          <li>Blur and threshold the image.</li> 
          <li>Apply a closing kernel to the thresholded image.</li> 
          <li>Perform a series of dilations and erosions.</li> 
          <li>Find the largest contour in the image, which is now presumably the barcode.</li> 
         </ol> 
         <p>It is important to note that since this method makes assumptions regarding the gradient representations of the image, and thus will only work for horizontal barcodes.</p> 
         <p>If you wanted to implement a more robust barcode detection algorithm, you would need to take the orientation of the image into consideration, or better yet, apply machine learning techniques such as Haar cascades or HOG + Linear SVM to scan the image for barcoded regions.</p> 
         <h1 id="post_downloads">Downloads:</h1> 
         <div id="mc4wp-form-1" class="form mc4wp-form mc4wp-form-761"> 
          <form action="https://www.getdrip.com/forms/7455974/submissions" method="post" target="_blank" data-drip-embedded-form="2934">
           <img style="padding-right: 10px; width: 115px; border: none; float: left;" src="http://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png" alt="">If you would like to download the code and images used in this post, please enter your email address in the form below. Not only will you get a .zip of the code, Ill also send you a 
           <strong>FREE 11-page Resource Guide</strong> on Computer Vision and Image Search Engines, including 
           <strong>exclusive techniques</strong> that I dont post on this blog! Sound good? If so, enter your email address and Ill send you the code immediately!
           <p></p> 
           <p style="margin-left: 130px;"><label for="fields[email]">Email address:</label><input name="fields[email]" type="email" value="" placeholder="Your email address"></p> 
           <p style="margin-left: 130px;"><input type="submit" value="Download the code!"></p> 
          </form> 
         </div> 
        </section>
        <!-- /.entry --> 
        <div class="fix"></div> 
        <aside id="connect"> 
         <h3>Resource Guide (its totally free).</h3> 
         <div> 
          <p><img title="Get your FREE 11-page Image Search Engine Resource Guide PDF" src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/imagesearchengine-resourceguide-cover.png" style="padding-right: 10px;float: left"> </p>
          <div style="padding-top: 35px">
            Enter your email address below to get my 
           <strong>free 11-page Image Search Engine Resource Guide PDF</strong>. Uncover 
           <strong>exclusive techniques</strong> that I don't publish on this blog and start building image search engines of your own!
          </div>
          <p></p> 
          <form action="https://www.getdrip.com/forms/1113813/submissions" method="post" target="_blank" data-drip-embedded-form="1295"> 
           <div> 
            <input type="email" name="fields[email]" class="required email" value="" placeholder="Your email address" style="width: 50%;"> 
           </div> 
           <div> 
            <input id="mc-embedded-subscribe" type="submit" name="submit" class="btn submit button" value="Download the Guide!" data-drip-attribute="sign-up-button"> 
           </div> 
          </form> 
          <div class="social"> 
          </div> 
         </div>
         <!-- col-left --> 
         <div class="fix"></div> 
        </aside> 
        <div class="post-utility">
         <p class="tags"><i class="icon-tag"></i> <a href="http://www.pyimagesearch.com/tag/barcode/" rel="tag">barcode</a>, <a href="http://www.pyimagesearch.com/tag/barcode-detection/" rel="tag">barcode detection</a>, <a href="http://www.pyimagesearch.com/tag/gradients/" rel="tag">gradients</a>, <a href="http://www.pyimagesearch.com/tag/image-processing-2/" rel="tag">image processing</a>, <a href="http://www.pyimagesearch.com/tag/magnitude/" rel="tag">magnitude</a>, <a href="http://www.pyimagesearch.com/tag/thresholding/" rel="tag">thresholding</a>, <a href="http://www.pyimagesearch.com/tag/tutorials-2/" rel="tag">tutorials</a></p> 
        </div> 
       </article>
       <!-- /.post --> 
       <div class="post-entries"> 
        <div class="nav-prev fl">
         <a href="http://www.pyimagesearch.com/2014/11/17/non-maximum-suppression-object-detection-python/" rel="prev"><i class="icon-angle-left"></i> Non-Maximum Suppression for Object Detection in Python</a>
        </div> 
        <div class="nav-next fr">
         <a href="http://www.pyimagesearch.com/2014/12/01/complete-guide-building-image-search-engine-python-opencv/" rel="next">The complete guide to building an image search engine with Python and OpenCV <i class="icon-angle-right"></i></a>
        </div> 
        <div class="fix"></div> 
       </div> 
       <div id="comments"> 
        <h3 id="comments-title">65 Responses to <em>Detecting Barcodes in Images with Python and OpenCV</em></h3> 
        <ol class="commentlist"> 
         <li class="comment even thread-even depth-1"> <a name="comment-193988"></a> 
          <div id="li-comment-193988" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/8589033c2cd15744c3ce30d1bddeb087?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/8589033c2cd15744c3ce30d1bddeb087?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Brandon</span> 
            <span class="date">November 24, 2014 at 12:32 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-193988" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-193988"> 
            <p>Hi, nice article. Id be interested to see a follow-up on actually deciphering the barcode value from the image. One tiny improvement I saw:</p> 
            <p>c = sorted(cnts, key = cv2.contourArea, reverse = True)[0]</p> 
            <p>could simply be a min operation to avoid creating a second sorted array, only to take the first element:</p> 
            <p>c = min(cnts, key = cv2.contourArea)</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=193988#respond" onclick="return addComment.moveForm( &quot;comment-193988&quot;, &quot;193988&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Brandon">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-194040"></a> 
            <div id="li-comment-194040" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">November 24, 2014 at 12:59 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-194040" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-194040"> 
              <p>Hi Brandon, thanks for the reply! Ill definitely consider doing a followup post on deciphering barcode values.</p> 
              <p>As for the code, Im actually trying to find the <i>largest</i> contour, not the smallest one, which I think is what the code you presented is doing. Did you mean:</p> 
              <p><code>c = max(cnts, key = cv2.contourArea)</code></p> 
              <p>If so, Ill definitely give that a shot next time!</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=194040#respond" onclick="return addComment.moveForm( &quot;comment-194040&quot;, &quot;194040&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-194017"></a> 
          <div id="li-comment-194017" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/7898b554ff618c784e1574aeeed06f75?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/7898b554ff618c784e1574aeeed06f75?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">NHAS</span> 
            <span class="date">November 24, 2014 at 12:48 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-194017" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-194017"> 
            <p>Hello, good job on making the article I think its quite useful. Only thing is your zombie reference is a bit out. Its 28 days later ? not 24 days later.</p> 
            <p>Other than that its a brilliant article.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=194017#respond" onclick="return addComment.moveForm( &quot;comment-194017&quot;, &quot;194017&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to NHAS">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-194033"></a> 
            <div id="li-comment-194033" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">November 24, 2014 at 12:57 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-194033" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-194033"> 
              <p>Whoops! My mistake  cant believe I messed that one up. Its fixed now!</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=194033#respond" onclick="return addComment.moveForm( &quot;comment-194033&quot;, &quot;194033&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-194539"></a> 
          <div id="li-comment-194539" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/e4d62438f0605167e4e1a819f2d2acc9?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/e4d62438f0605167e4e1a819f2d2acc9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Bob</span> 
            <span class="date">November 24, 2014 at 5:25 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-194539" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-194539"> 
            <p>Nice article. But please dont combine alcohol and tylenol (paracetamol). Even when youre hungover its really very bad for your liver. Sorry for being off-topic.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=194539#respond" onclick="return addComment.moveForm( &quot;comment-194539&quot;, &quot;194539&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Bob">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-194753"></a> 
            <div id="li-comment-194753" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">November 24, 2014 at 7:18 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-194753" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-194753"> 
              <p>Hi Bob, thanks for the comment! Youre very right, never mix alcohol and Tylenol. ?</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=194753#respond" onclick="return addComment.moveForm( &quot;comment-194753&quot;, &quot;194753&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-196936"></a> 
          <div id="li-comment-196936" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/340aee754d57db1b9cf19c68eca44b9b?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/340aee754d57db1b9cf19c68eca44b9b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Jason</span> 
            <span class="date">November 26, 2014 at 12:25 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-196936" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-196936"> 
            <p>Would be cool to see this done with streaming video.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=196936#respond" onclick="return addComment.moveForm( &quot;comment-196936&quot;, &quot;196936&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Jason">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-197345"></a> 
            <div id="li-comment-197345" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">November 26, 2014 at 7:13 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-197345" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-197345"> 
              <p>Hi Jason, damn, thats a great idea. I see a followup post coming!</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=197345#respond" onclick="return addComment.moveForm( &quot;comment-197345&quot;, &quot;197345&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-199330"></a> 
          <div id="li-comment-199330" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/c4a1008b4a6cd11dcf829c752b764070?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/c4a1008b4a6cd11dcf829c752b764070?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">dolaameng</span> 
            <span class="date">November 27, 2014 at 7:57 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-199330" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-199330"> 
            <p>Hi, thanks for the article. Two questions here:<br> (1) Is using a scharr operator than a sobel crucial to this problem?<br> (2) In your explanation By performing this subtraction we are left with regions of the image that have high horizontal gradients and low vertical gradients., do you mean LOW horizontal gradients and HIGH vertical gradients? Because thats how they named vscharr and hscharr in skimage.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=199330#respond" onclick="return addComment.moveForm( &quot;comment-199330&quot;, &quot;199330&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to dolaameng">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-199407"></a> 
            <div id="li-comment-199407" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">November 27, 2014 at 10:04 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-199407" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-199407"> 
              <p>(1) I dont think its crucial. But the Scharr operator is more accurate for a 3×3 kernel, thats the reason I used it. Realistically you could use the Sobel operator as well, I dont think it would make an impact.<br> (2) Interesting. Ill have to take a look at that.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=199407#respond" onclick="return addComment.moveForm( &quot;comment-199407&quot;, &quot;199407&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-200982"></a> 
          <div id="li-comment-200982" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/aa87e532ad36c0b82c3e35c790aee698?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/aa87e532ad36c0b82c3e35c790aee698?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Niv</span> 
            <span class="date">November 28, 2014 at 1:45 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-200982" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-200982"> 
            <p>Hi, nice article.<br> When you subtract the y-gradient from the x-gradient, you end up with:<br> 1. high positive values (i.e. +255) for: {high horizontal gradients and low vertical gradients} and<br> 2. Low negative values (i.e. -255) for: {high vertical gradients and low horizontal gradients},</p> 
            <p>and since you are further making convertScaleAbs then all the high negatives will become high positives, so you end up with an image in which high vertical and low horizontal gradients are also emphasized. Which isnt what you say you want (you want only the high horizontal and low vertical gradients).</p> 
            <p>What do I miss here?</p> 
            <p>Another remark related to the above is that in figure 2 (for example the finger) we can see that he image contains all combinations of high gradients- high horizontals, high verticals, and also gradients in 45 [deg]. </p> 
            <p>Thanks,</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=200982#respond" onclick="return addComment.moveForm( &quot;comment-200982&quot;, &quot;200982&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Niv">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-201583"></a> 
            <div id="li-comment-201583" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">November 28, 2014 at 8:17 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-201583" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-201583"> 
              <p>Hi Niv, shoot me an email and we can chat more about your question. Thanks!</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=201583#respond" onclick="return addComment.moveForm( &quot;comment-201583&quot;, &quot;201583&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-206082"></a> 
          <div id="li-comment-206082" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/3e202214046ba2925808e346338574ef?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/3e202214046ba2925808e346338574ef?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name"><a href="http://www.matt-mcdonnell.com" rel="external nofollow" class="url">Matt McDonnell</a></span> 
            <span class="date">November 30, 2014 at 7:48 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-206082" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-206082"> 
            <p>Thanks for the article! Ive been playing with OpenCV in Google Chrome Native Client, and put together a version of this post that works in (Chrome) browser.<br> Demo: <a href="http://www.matt-mcdonnell.com/code/NaCl/ImageProc/" rel="nofollow">http://www.matt-mcdonnell.com/code/NaCl/ImageProc/</a><br> Code (BSD): <a href="https://github.com/mattmcd/NaCl/tree/master/ImageProc" rel="nofollow">https://github.com/mattmcd/NaCl/tree/master/ImageProc</a></p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=206082#respond" onclick="return addComment.moveForm( &quot;comment-206082&quot;, &quot;206082&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Matt McDonnell">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1"> <a name="comment-230860"></a> 
          <div id="li-comment-230860" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/e3d091abe1d8cb3a8959ffaf9770fd43?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/e3d091abe1d8cb3a8959ffaf9770fd43?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">mastsolis</span> 
            <span class="date">December 13, 2014 at 11:22 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-230860" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-230860"> 
            <p>Hi,</p> 
            <p>Wow, thank you for posting this tutorial. I was wondering, if its possible to somehow save the coordinate location and barcode image size?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=230860#respond" onclick="return addComment.moveForm( &quot;comment-230860&quot;, &quot;230860&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to mastsolis">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-231306"></a> 
            <div id="li-comment-231306" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">December 14, 2014 at 7:21 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-231306" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-231306"> 
              <p>Sure, absolutely. The line <code>box = np.int0(cv2.cv.BoxPoints(rect))</code> will give you the (x, y)-coordinates of the location of the barcode and the barcode size. From there, you can store the coordinates on disk, in a database, etc.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=231306#respond" onclick="return addComment.moveForm( &quot;comment-231306&quot;, &quot;231306&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1"> <a name="comment-274481"></a> 
          <div id="li-comment-274481" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/9cd07f759b7b4b90dab3abb627f9f61b?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/9cd07f759b7b4b90dab3abb627f9f61b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Tony</span> 
            <span class="date">January 30, 2015 at 4:36 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-274481" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-274481"> 
            <p>Hi,</p> 
            <p>Your articles are good and informative. However, I would like to mention what I perceive as a shortcoming, and this applies to many of your articles. And that is, instead of diving right into code which you seem to have a tendency of doing, I think it is much better to describe in words the algorithm and what you are trying to do. In this case, it would be the characteristics of the barcode region youre trying to detect. You have something which is almost similar in the summary, but it should be even more general and at the beginning. As an example, the article link you provided about how QuaggaJS works is much clearer in this regard, I find. Right in the beginning introduction, the author says we are looking for a barcode region with lines which are close to each other and have a similar angle, and then proceeds to describe steps and details. Its much clearer that way. Diving into the code without knowing what youre looking for is confusing. Again, this is meant as constructive criticism. Thanks.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=274481#respond" onclick="return addComment.moveForm( &quot;comment-274481&quot;, &quot;274481&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Tony">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-274495"></a> 
            <div id="li-comment-274495" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">January 30, 2015 at 6:28 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-274495" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-274495"> 
              <p>Thanks for the feedback Tony.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=274495#respond" onclick="return addComment.moveForm( &quot;comment-274495&quot;, &quot;274495&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1"> <a name="comment-297426"></a> 
          <div id="li-comment-297426" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/203cc7a51edb632fba7d7cc46a468783?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/203cc7a51edb632fba7d7cc46a468783?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Arron</span> 
            <span class="date">March 26, 2015 at 8:55 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-297426" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-297426"> 
            <p>Your job is very good and significant,but it can only detect barcode,if it can recognize the barcode in the picture,it will be better.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=297426#respond" onclick="return addComment.moveForm( &quot;comment-297426&quot;, &quot;297426&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Arron">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-308743"></a> 
          <div id="li-comment-308743" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/8ec60634042db8e98dc8527656ada454?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/8ec60634042db8e98dc8527656ada454?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Richie</span> 
            <span class="date">April 25, 2015 at 12:23 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-308743" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-308743"> 
            <p>Great article Adrian. Id knew cv was the way to do this but didnt know where to start. I have got this working in c#, you can see the gist here:<br> <a href="https://gist.github.com/richardsawyer/62596e14d1ec4d148b28" rel="nofollow">https://gist.github.com/richardsawyer/62596e14d1ec4d148b28</a></p> 
            <p>Changes I made: optimized for vertical barcode; added centring offset to the restructuring element as the final box was shifted up and to the left; experimented with the thresholding to get reliable results in my images; extracted the actual barcode as a bitmap to make reading easy. </p> 
            <p>Thanks for sharing.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=308743#respond" onclick="return addComment.moveForm( &quot;comment-308743&quot;, &quot;308743&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Richie">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-311410"></a> 
            <div id="li-comment-311410" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">May 1, 2015 at 7:10 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-311410" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-311410"> 
              <p>Very nice Richie, thanks for sharing! ?</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=311410#respond" onclick="return addComment.moveForm( &quot;comment-311410&quot;, &quot;311410&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-320626"></a> 
          <div id="li-comment-320626" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/579536a70592f70a10ae1a2a79eaac6e?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/579536a70592f70a10ae1a2a79eaac6e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">John</span> 
            <span class="date">May 30, 2015 at 3:21 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-320626" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-320626"> 
            <p>This is cool. Have you come up with how to extract the barcode value yet?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=320626#respond" onclick="return addComment.moveForm( &quot;comment-320626&quot;, &quot;320626&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to John">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-320666"></a> 
            <div id="li-comment-320666" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">May 30, 2015 at 6:15 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-320666" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-320666"> 
              <p>Hi John, using the code above you can most certainly <em>extract</em> the barcode from the image. Do you mean actually <em>recognize</em> the barcode? If so, I probably wont be covering that directly on the PyImageSearch blog. There are a lot of other resources online that cover the encoding schemes of barcodes far better than I could.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=320666#respond" onclick="return addComment.moveForm( &quot;comment-320666&quot;, &quot;320666&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-325813"></a> 
          <div id="li-comment-325813" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/8e5435ee54967a60801086347ee49c66?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/8e5435ee54967a60801086347ee49c66?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">dhruv</span> 
            <span class="date">June 12, 2015 at 6:47 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-325813" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-325813"> 
            <p>Hi thx for program.Im New in thisIm having an error that..usage: detect_barcode.py<br> [-h] -I IMAGE<br> detect _barcode.py: error: argument -i/image is requiredso plz say how to solve it</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=325813#respond" onclick="return addComment.moveForm( &quot;comment-325813&quot;, &quot;325813&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to dhruv">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-325832"></a> 
            <div id="li-comment-325832" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">June 12, 2015 at 9:41 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-325832" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-325832"> 
              <p>Please look at the <strong>Successful Barcode Detections</strong> section where I detail how to run the Python script. Here is an example:</p> 
              <p><code>python detect_barcode.py --image images/barcode_02.jpg</code></p> 
              <p>Notice how the <code>--image</code> switch points to the <code>barcode_02.jpg</code> file in the <code>images</code> directory.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=325832#respond" onclick="return addComment.moveForm( &quot;comment-325832&quot;, &quot;325832&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-329753"></a> 
          <div id="li-comment-329753" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/c2b618af1058b5ab429c4d6e40f4d56b?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/c2b618af1058b5ab429c4d6e40f4d56b?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">SayeedM</span> 
            <span class="date">June 24, 2015 at 1:09 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-329753" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-329753"> 
            <p>Hello, great article. Btw is the procedure to detect 2D barcodes (PDF417) similiar ? I mean for 2D barcodes horizontal gradients wont be comparatively high to vertical gradients, right ? Can you do a followup on this ?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=329753#respond" onclick="return addComment.moveForm( &quot;comment-329753&quot;, &quot;329753&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to SayeedM">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1"> <a name="comment-334755"></a> 
          <div id="li-comment-334755" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/b9be873d810de780081dc602870b4a73?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/b9be873d810de780081dc602870b4a73?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">al</span> 
            <span class="date">July 10, 2015 at 5:18 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-334755" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-334755"> 
            <p>Ive followed the instructions on installing OpenCV on Ubuntu and I can run the example on that page. I get the following error while trying this example however:</p> 
            <p>gradX = cv2.Sobel(gray, ddepth=cv2.cv.CV_32F, dx=1, dy=0, ksize=-1)<br> AttributeError: module object has no attribute cv</p> 
            <p>Any idea why that might be the case?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=334755#respond" onclick="return addComment.moveForm( &quot;comment-334755&quot;, &quot;334755&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to al">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-334776"></a> 
            <div id="li-comment-334776" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">July 10, 2015 at 6:22 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-334776" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-334776"> 
              <p>Hey Al, it sounds like you are using OpenCV 3.0. This code was developed using OpenCV 2.4. </p> 
              <p>Change <code>ddepth=cv2.cv.CV_32F</code> to <code>ddepth=cv2.CV_32F</code> (along with the following line for the y gradient) and youll get ride of the pesky error.</p> 
              <p>Youll also need to change the <code>cv2.findContours</code> call to:</p> 
              <p><code>(_, cnts, _) = cv2.findContours(closed.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</code></p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=334776#respond" onclick="return addComment.moveForm( &quot;comment-334776&quot;, &quot;334776&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1"> <a name="comment-335002"></a> 
          <div id="li-comment-335002" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/b9be873d810de780081dc602870b4a73?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/b9be873d810de780081dc602870b4a73?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">al</span> 
            <span class="date">July 11, 2015 at 1:52 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-335002" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-335002"> 
            <p>They seem to have updated so now instead of cv2.cv.CV_32F its just cv2.CV_32F.</p> 
            <p>also cv2.cv.BoxPoints is now cv2.boxPoints</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=335002#respond" onclick="return addComment.moveForm( &quot;comment-335002&quot;, &quot;335002&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to al">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-335046"></a> 
            <div id="li-comment-335046" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">July 11, 2015 at 6:30 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-335046" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-335046"> 
              <p>Thanks Al!</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=335046#respond" onclick="return addComment.moveForm( &quot;comment-335046&quot;, &quot;335046&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1"> <a name="comment-347707"></a> 
          <div id="li-comment-347707" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/51162834d752828fc8f2c60522cbe38f?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/51162834d752828fc8f2c60522cbe38f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Nicolas</span> 
            <span class="date">August 19, 2015 at 8:29 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-347707" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-347707"> 
            <p>Thanks for the great post! I tried it and it worked from the first time, but i was wondering is there a way to get the value of the barcode?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=347707#respond" onclick="return addComment.moveForm( &quot;comment-347707&quot;, &quot;347707&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Nicolas">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-348011"></a> 
            <div id="li-comment-348011" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">August 20, 2015 at 7:02 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-348011" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-348011"> 
              <p>Great question. There are a lot of barcode reading packages out there. I would start by looking into <a target="blank" href="https://github.com/ZBar/ZBar" rel="nofollow">zbar</a>.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=348011#respond" onclick="return addComment.moveForm( &quot;comment-348011&quot;, &quot;348011&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1"> <a name="comment-375620"></a> 
          <div id="li-comment-375620" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/579e884ce9207f13cb76a73d6bdaef2f?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/579e884ce9207f13cb76a73d6bdaef2f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Chris</span> 
            <span class="date">October 27, 2015 at 9:52 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-375620" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-375620"> 
            <p>Excellent post and enjoying the e-books too! Just a quick (and Im sure, easy) question. How difficult would it be to extend this to include multiple barcodes in a single image? Like if you have to catalog a monotonous amount of barcodes but dont really want to scan each one at a time but would rather line up about 5-10 barcodes and extract those contours?</p> 
            <p>Thanks!</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=375620#respond" onclick="return addComment.moveForm( &quot;comment-375620&quot;, &quot;375620&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Chris">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-377440"></a> 
            <div id="li-comment-377440" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">November 3, 2015 at 10:42 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-377440" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-377440"> 
              <p>It wouldnt be too challenging to extend to multiple barcodes. Instead of taking the largest contour as I do on <strong>Line 40</strong>, just loop over them individually, ensure they have sufficiently large size, and continue to process them.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=377440#respond" onclick="return addComment.moveForm( &quot;comment-377440&quot;, &quot;377440&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1"> <a name="comment-381746"></a> 
          <div id="li-comment-381746" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/77bd066e9d486af7bfcd4a19380d4d19?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/77bd066e9d486af7bfcd4a19380d4d19?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Inês Martins</span> 
            <span class="date">December 2, 2015 at 11:44 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-381746" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-381746"> 
            <p>How to crop the barcode region out of image?</p> 
            <p>using box points??</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=381746#respond" onclick="return addComment.moveForm( &quot;comment-381746&quot;, &quot;381746&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Inês Martins">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-381764"></a> 
            <div id="li-comment-381764" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">December 2, 2015 at 3:04 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-381764" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-381764"> 
              <p>Hey Ines  I would use:</p> 
              <p><code>(x, y, w, h) = cv2.boundingRect(c)</code> on the contour to grab the bounding box of the barcode. From there, you can extract the region from the image.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=381764#respond" onclick="return addComment.moveForm( &quot;comment-381764&quot;, &quot;381764&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1"> <a name="comment-397143"></a> 
          <div id="li-comment-397143" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/fc4f53c539be7fb09c9247ab8de28096?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/fc4f53c539be7fb09c9247ab8de28096?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Vinoth</span> 
            <span class="date">May 9, 2016 at 1:02 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-397143" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-397143"> 
            <p>Is there a way to compare two different bar codes to check if they are similar?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=397143#respond" onclick="return addComment.moveForm( &quot;comment-397143&quot;, &quot;397143&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Vinoth">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-397166"></a> 
            <div id="li-comment-397166" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">May 9, 2016 at 6:44 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-397166" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-397166"> 
              <p>Sure, there are multiple ways to do this. I would suggest starting with <a target="blank" href="http://www.pyimagesearch.com/2014/09/15/python-compare-two-images/" rel="nofollow">MSE and SSIM</a>.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=397166#respond" onclick="return addComment.moveForm( &quot;comment-397166&quot;, &quot;397166&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1"> <a name="comment-397202"></a> 
          <div id="li-comment-397202" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/88839c79c3f444e702d75dd4a41c13d2?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/88839c79c3f444e702d75dd4a41c13d2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Scott</span> 
            <span class="date">May 10, 2016 at 12:17 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-397202" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-397202"> 
            <p>do you have something similar for detecting QRCodes?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=397202#respond" onclick="return addComment.moveForm( &quot;comment-397202&quot;, &quot;397202&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Scott">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-397254"></a> 
            <div id="li-comment-397254" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">May 10, 2016 at 8:07 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-397254" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-397254"> 
              <p>I dont have any tutorials related to detecting QRCodes, but its certainly something Ill consider in the future!</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=397254#respond" onclick="return addComment.moveForm( &quot;comment-397254&quot;, &quot;397254&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1"> <a name="comment-398463"></a> 
          <div id="li-comment-398463" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/0568d5aa89df2d71a870f9dccfdb68e6?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/0568d5aa89df2d71a870f9dccfdb68e6?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">prasiddha</span> 
            <span class="date">May 22, 2016 at 8:57 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-398463" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-398463"> 
            <p>I m a beginner in image processing and opencv both, i applied almost same algorithm and segmented the barcode from image now im lost trying to decode it. can you help me converting those bars into numbers? may be binary?(using opencv)</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=398463#respond" onclick="return addComment.moveForm( &quot;comment-398463&quot;, &quot;398463&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to prasiddha">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-398576"></a> 
            <div id="li-comment-398576" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">May 23, 2016 at 7:25 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-398576" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-398576"> 
              <p>I personally havent tried decoding the barcodes themselves, but I would recommend using a library such as <a target="blank" href="http://zbar.sourceforge.net/" rel="nofollow">zbar</a>.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=398576#respond" onclick="return addComment.moveForm( &quot;comment-398576&quot;, &quot;398576&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt depth-2"> <a name="comment-400690"></a> 
            <div id="li-comment-400690" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://1.gravatar.com/avatar/71616933f39bc65ae27f24bd0a5b08ae?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/71616933f39bc65ae27f24bd0a5b08ae?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">vaishali masal</span> 
              <span class="date">June 21, 2016 at 3:15 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-400690" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-400690"> 
              <p>I also trying to decode Barcode in opencv and python.But didnt get any idea how to do it. Can you tell me if you get it.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=400690#respond" onclick="return addComment.moveForm( &quot;comment-400690&quot;, &quot;400690&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to vaishali masal">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> 
            <ul class="children"> 
             <li class="comment even depth-3"> <a name="comment-405835"></a> 
              <div id="li-comment-405835" class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://1.gravatar.com/avatar/4b2e25713efcf5af3886e2ba1430a54e?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/4b2e25713efcf5af3886e2ba1430a54e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
               </div> 
               <div class="comment-head"> 
                <span class="name">Kevin</span> 
                <span class="date">September 9, 2016 at 2:01 am</span> 
                <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-405835" title="Direct link to this comment">#</a></span> 
                <span class="edit"></span> 
               </div>
               <!-- /.comment-head --> 
               <div class="comment-entry" id="comment-405835"> 
                <p>Coming in late but I would recommend to use ZXing. Been using for some time now and my colleagues and I are very happy with it.</p> 
                <p>@Adrian, great post! Really useful.</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=405835#respond" onclick="return addComment.moveForm( &quot;comment-405835&quot;, &quot;405835&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Kevin">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-entry --> 
              </div>
              <!-- /.comment-container --> 
              <ul class="children"> 
               <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-4"> <a name="comment-405857"></a> 
                <div id="li-comment-405857" class="comment-container"> 
                 <div class="avatar">
                  <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
                 </div> 
                 <div class="comment-head"> 
                  <span class="name">Adrian Rosebrock</span> 
                  <span class="date">September 9, 2016 at 10:51 am</span> 
                  <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-405857" title="Direct link to this comment">#</a></span> 
                  <span class="edit"></span> 
                 </div>
                 <!-- /.comment-head --> 
                 <div class="comment-entry" id="comment-405857"> 
                  <p>Thanks Kevin, Im glad it helped! And thanks for the recommending on ZXing.</p> 
                  <div class="reply"> 
                   <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=405857#respond" onclick="return addComment.moveForm( &quot;comment-405857&quot;, &quot;405857&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
                  </div>
                  <!-- /.reply --> 
                 </div>
                 <!-- /comment-entry --> 
                </div>
                <!-- /.comment-container --> </li>
               <!-- #comment-## --> 
              </ul>
              <!-- .children --> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-400781"></a> 
          <div id="li-comment-400781" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/dbc0d909e063ce17c190ae0b007f44cb?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/dbc0d909e063ce17c190ae0b007f44cb?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Em</span> 
            <span class="date">June 22, 2016 at 12:49 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-400781" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-400781"> 
            <p>Hello!!!! Youre the very best Adrian.</p> 
            <p>Im getting this error on box points:</p> 
            <p></p>
            <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
            <div id="crayon-59beba6fc2489507987785" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
             <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
              <span class="crayon-title"></span> 
              <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
               <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-expand-button" title="Expand Code">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-copy-button" title="Copy">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
                <div class="crayon-button-icon"></div>
               </div>
              </div>
             </div> 
             <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
             <div class="crayon-plain-wrap">
              <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
Traceback (most recent call last):
  File "detect_barcode.py", line 44, in 
    box = np.int0(cv2.BoxPoints(rect))
AttributeError: 'module' object has no attribute 'BoxPoints'</textarea>
             </div> 
             <div class="crayon-main" style=""> 
              <table class="crayon-table"> 
               <tbody>
                <tr class="crayon-row"> 
                 <td class="crayon-nums " data-settings="show"> 
                  <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                   <div class="crayon-num" data-line="crayon-59beba6fc2489507987785-1">
                    1
                   </div>
                   <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fc2489507987785-2">
                    2
                   </div>
                   <div class="crayon-num" data-line="crayon-59beba6fc2489507987785-3">
                    3
                   </div>
                   <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fc2489507987785-4">
                    4
                   </div>
                  </div> </td> 
                 <td class="crayon-code">
                  <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                   <div class="crayon-line" id="crayon-59beba6fc2489507987785-1">
                    <span class="crayon-e">Traceback</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-e">most </span>
                    <span class="crayon-e">recent </span>
                    <span class="crayon-e">call </span>
                    <span class="crayon-v">last</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-o">:</span>
                   </div>
                   <div class="crayon-line crayon-striped-line" id="crayon-59beba6fc2489507987785-2">
                    <span class="crayon-h">&nbsp;&nbsp;</span>
                    <span class="crayon-i">File</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"detect_barcode.py"</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-i">line</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-cn">44</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">in</span>
                    <span class="crayon-h"> </span>
                   </div>
                   <div class="crayon-line" id="crayon-59beba6fc2489507987785-3">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">box</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">np</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-e">int0</span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-v">cv2</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-e">BoxPoints</span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-v">rect</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-sy">)</span>
                   </div>
                   <div class="crayon-line crayon-striped-line" id="crayon-59beba6fc2489507987785-4">
                    <span class="crayon-v">AttributeError</span>
                    <span class="crayon-o">:</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">'module'</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-t">object</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-e">has </span>
                    <span class="crayon-e">no </span>
                    <span class="crayon-i">attribute</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">'BoxPoints'</span>
                   </div>
                  </div></td> 
                </tr> 
               </tbody>
              </table> 
             </div> 
            </div> 
            <!-- [Format Time: 0.0013 seconds] --> 
            <p></p> 
            <p>Do you know what I can do to fix it? Thank you</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=400781#respond" onclick="return addComment.moveForm( &quot;comment-400781&quot;, &quot;400781&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Em">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-400859"></a> 
            <div id="li-comment-400859" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">June 23, 2016 at 1:17 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-400859" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-400859"> 
              <p>It sounds like youre using OpenCV 3 (this blog post assumes youre using OpenCV 2.4). You can resolve the issue by using:</p> 
              <p><code>box = cv2.boxPoints(rect)</code></p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=400859#respond" onclick="return addComment.moveForm( &quot;comment-400859&quot;, &quot;400859&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-403916"></a> 
          <div id="li-comment-403916" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/f113c821d1180d502c5e4cdd6a254dc0?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/f113c821d1180d502c5e4cdd6a254dc0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Mithun S</span> 
            <span class="date">August 9, 2016 at 3:15 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-403916" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-403916"> 
            <p>Is it possible to the same steps in C# .net?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=403916#respond" onclick="return addComment.moveForm( &quot;comment-403916&quot;, &quot;403916&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Mithun S">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-404016"></a> 
            <div id="li-comment-404016" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">August 10, 2016 at 9:32 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-404016" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-404016"> 
              <p>Yes, but you would need to convert the code from Python + OpenCV to C# + OpenCV.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=404016#respond" onclick="return addComment.moveForm( &quot;comment-404016&quot;, &quot;404016&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-412733"></a> 
          <div id="li-comment-412733" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/262672a0af4e2e622b45f3a826b87757?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/262672a0af4e2e622b45f3a826b87757?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name"><a href="https://www.facebook.com/rafi.fadlianto" rel="external nofollow" class="url">Rafi Fadlianto</a></span> 
            <span class="date">December 5, 2016 at 6:01 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-412733" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-412733"> 
            <p>Thanks for the Tutorial ? I will try it ?<br> So we cant use for OpenCV 3 ?</p> 
            <p>*note = I dont have any website right now</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=412733#respond" onclick="return addComment.moveForm( &quot;comment-412733&quot;, &quot;412733&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Rafi Fadlianto">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-412898"></a> 
            <div id="li-comment-412898" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">December 7, 2016 at 9:51 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-412898" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-412898"> 
              <p>This blog post was written before OpenCV 3 was released. That said, change <code>cv2.cv.CV_32F</code> to <code>cv2.CV_32F</code> and <code>(cnts, _) = cv2.findContours(closed.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</code> to <code>(_, cnts, _) = cv2.findContours(closed.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</code> and the script should work just fine.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=412898#respond" onclick="return addComment.moveForm( &quot;comment-412898&quot;, &quot;412898&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-415991"></a> 
          <div id="li-comment-415991" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/31edecabb2bad4a6ee10337f5337a54a?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/31edecabb2bad4a6ee10337f5337a54a?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">esconda</span> 
            <span class="date">January 18, 2017 at 3:43 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-415991" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-415991"> 
            <p>Is there anyway convert it to c++ code.I just would like to test performance of opencv in c++.I already applied all filtration until this code;</p> 
            <p>box = np.int0(cv2.cv.BoxPoints(rect))</p> 
            <p>How can I convert it to c/c++ np.int0 what is equavalent of this code in c?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=415991#respond" onclick="return addComment.moveForm( &quot;comment-415991&quot;, &quot;415991&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to esconda">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1"> <a name="comment-417890"></a> 
          <div id="li-comment-417890" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/ef375011931e89c5ddda4ccacbae9890?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/ef375011931e89c5ddda4ccacbae9890?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Varun</span> 
            <span class="date">February 16, 2017 at 5:28 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-417890" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-417890"> 
            <p>Great work!<br> Can you provide a source where I could find the tutorial to decipher the bar code? That would be great!</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=417890#respond" onclick="return addComment.moveForm( &quot;comment-417890&quot;, &quot;417890&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Varun">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-417902"></a> 
            <div id="li-comment-417902" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">February 16, 2017 at 9:47 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-417902" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-417902"> 
              <p>I dont have any tutorials covering barcode decoding (yet), but I would suggest using <a target="blank" href="http://zbar.sourceforge.net/" rel="nofollow">zbar</a>.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=417902#respond" onclick="return addComment.moveForm( &quot;comment-417902&quot;, &quot;417902&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1"> <a name="comment-418055"></a> 
          <div id="li-comment-418055" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/030b7abe1e2b3a30aca20dfeab570a66?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/030b7abe1e2b3a30aca20dfeab570a66?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Osama Arif</span> 
            <span class="date">February 19, 2017 at 1:41 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-418055" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-418055"> 
            <p>the program shows this error:</p> 
            <p>usage: detect_barcode.py [-h] -i IMAGE<br> detect_barcode.py: error: argument -i/image is required</p> 
            <p>Please respond asap</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=418055#respond" onclick="return addComment.moveForm( &quot;comment-418055&quot;, &quot;418055&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Osama Arif">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-418096"></a> 
            <div id="li-comment-418096" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">February 20, 2017 at 7:42 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-418096" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-418096"> 
              <p>You need to supply command line arguments to your script. Before continuing you need to <a target="blank" href="https://www.cyberciti.biz/faq/python-command-line-arguments-argv-example/" rel="nofollow">read up on command line arguments</a>.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=418096#respond" onclick="return addComment.moveForm( &quot;comment-418096&quot;, &quot;418096&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1"> <a name="comment-421803"></a> 
          <div id="li-comment-421803" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/98669e8c2006951241a81ddf03c536a9?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/98669e8c2006951241a81ddf03c536a9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Ráfagan Abreu</span> 
            <span class="date">April 3, 2017 at 3:25 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-421803" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-421803"> 
            <p>I built a version of this algorithm using Python 3, OpenCV 3.2 and MatPlot. Follow the code:\</p> 
            <p><a href="https://gist.github.com/rafagan/5e73867958712eaeeb6d781e868559e6" rel="nofollow">https://gist.github.com/rafagan/5e73867958712eaeeb6d781e868559e6</a></p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=421803#respond" onclick="return addComment.moveForm( &quot;comment-421803&quot;, &quot;421803&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Ráfagan Abreu">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-426056"></a> 
          <div id="li-comment-426056" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/812bb9eae060030ece19ca91470d44df?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/812bb9eae060030ece19ca91470d44df?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Thorsten</span> 
            <span class="date">May 26, 2017 at 7:57 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-426056" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-426056"> 
            <p>Hi Adrian,</p> 
            <p>here again. I changed your code accordingly to your instructions to fit to opencv-3.0.0. The detection itself works and returns following box </p> 
            <p>[[ 340. 140.]<br> [ 311. 140.]<br> [ 311. 121.]<br> [ 340. 121.]].</p> 
            <p>But if this box is taken as input to<br> cv2.drawContours(frame, [box], -1, (0, 255, 0), 2), it fails with a exception.</p> 
            <p>cv2.error: /home/pi/opencv-3.0.0/modules/imgproc/src/drawing.cpp:2310:<br> error: (-215) npoints &gt; 0 in function drawContours.</p> 
            <p>As I understand the box must be a array of arrays. Even if I exchange [box] with box in function call, it fails with same exception.</p> 
            <p>Whats wrong?</p> 
            <p>Thanks in advance</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=426056#respond" onclick="return addComment.moveForm( &quot;comment-426056&quot;, &quot;426056&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Thorsten">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-426168"></a> 
            <div id="li-comment-426168" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">May 28, 2017 at 1:12 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-426168" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-426168"> 
              <p>So if I understand correctly, you computed the bounding box and now you are trying to draw the rotated bounding box on the image?</p> 
              <p>Make sure you do:</p> 
              <p></p>
              <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
              <div id="crayon-59beba6fc2136403309594" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
               <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
                <span class="crayon-title"></span> 
                <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
                 <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
                  <div class="crayon-button-icon"></div>
                 </div>
                 <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
                  <div class="crayon-button-icon"></div>
                 </div>
                 <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
                  <div class="crayon-button-icon"></div>
                 </div>
                 <div class="crayon-button crayon-expand-button" title="Expand Code">
                  <div class="crayon-button-icon"></div>
                 </div>
                 <div class="crayon-button crayon-copy-button" title="Copy">
                  <div class="crayon-button-icon"></div>
                 </div>
                 <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
                  <div class="crayon-button-icon"></div>
                 </div>
                </div>
               </div> 
               <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
               <div class="crayon-plain-wrap">
                <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
box = cv2.boxPoints(c)
box = np.array(box, dtype="int")</textarea>
               </div> 
               <div class="crayon-main" style=""> 
                <table class="crayon-table"> 
                 <tbody>
                  <tr class="crayon-row"> 
                   <td class="crayon-nums " data-settings="show"> 
                    <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                     <div class="crayon-num" data-line="crayon-59beba6fc2136403309594-1">
                      1
                     </div>
                     <div class="crayon-num crayon-striped-num" data-line="crayon-59beba6fc2136403309594-2">
                      2
                     </div>
                    </div> </td> 
                   <td class="crayon-code">
                    <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                     <div class="crayon-line" id="crayon-59beba6fc2136403309594-1">
                      <span class="crayon-v">box</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">cv2</span>
                      <span class="crayon-sy">.</span>
                      <span class="crayon-e">boxPoints</span>
                      <span class="crayon-sy">(</span>
                      <span class="crayon-v">c</span>
                      <span class="crayon-sy">)</span>
                     </div>
                     <div class="crayon-line crayon-striped-line" id="crayon-59beba6fc2136403309594-2">
                      <span class="crayon-v">box</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">np</span>
                      <span class="crayon-sy">.</span>
                      <span class="crayon-t">array</span>
                      <span class="crayon-sy">(</span>
                      <span class="crayon-v">box</span>
                      <span class="crayon-sy">,</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">dtype</span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-s">"int"</span>
                      <span class="crayon-sy">)</span>
                     </div>
                    </div></td> 
                  </tr> 
                 </tbody>
                </table> 
               </div> 
              </div> 
              <!-- [Format Time: 0.0006 seconds] --> 
              <p></p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=426168#respond" onclick="return addComment.moveForm( &quot;comment-426168&quot;, &quot;426168&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-433652"></a> 
          <div id="li-comment-433652" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/77e2c82b7dd2e4c2137a882d45b166e7?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/77e2c82b7dd2e4c2137a882d45b166e7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Amrit Kumbhakar</span> 
            <span class="date">August 30, 2017 at 12:20 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-433652" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-433652"> 
            <p>Amazing tutorial. Thanks .<br> I successfully completed the steps. Now i want to get the numbers from the barcode. What to get that?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=433652#respond" onclick="return addComment.moveForm( &quot;comment-433652&quot;, &quot;433652&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Amrit Kumbhakar">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-433747"></a> 
            <div id="li-comment-433747" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">August 31, 2017 at 8:35 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-433747" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-433747"> 
              <p>Take a look at the <a target="blank" href="http://zbar.sourceforge.net/" rel="nofollow">zbar</a> library. I personally havent used it but I know other PyImageSearch readers have liked it.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=433747#respond" onclick="return addComment.moveForm( &quot;comment-433747&quot;, &quot;433747&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> 
            <ul class="children"> 
             <li class="comment even depth-3"> <a name="comment-434277"></a> 
              <div id="li-comment-434277" class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://1.gravatar.com/avatar/77e2c82b7dd2e4c2137a882d45b166e7?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/77e2c82b7dd2e4c2137a882d45b166e7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
               </div> 
               <div class="comment-head"> 
                <span class="name">Amrit Kumbhakar</span> 
                <span class="date">September 7, 2017 at 1:38 am</span> 
                <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-434277" title="Direct link to this comment">#</a></span> 
                <span class="edit"></span> 
               </div>
               <!-- /.comment-head --> 
               <div class="comment-entry" id="comment-434277"> 
                <p>Thanks. Can you suggest some?</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=434277#respond" onclick="return addComment.moveForm( &quot;comment-434277&quot;, &quot;434277&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Amrit Kumbhakar">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-entry --> 
              </div>
              <!-- /.comment-container --> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1"> <a name="comment-434002"></a> 
          <div id="li-comment-434002" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/dfbc5eb73a44567c926b2524415cd236?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/dfbc5eb73a44567c926b2524415cd236?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">uti</span> 
            <span class="date">September 3, 2017 at 5:32 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-434002" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-434002"> 
            <p>Nice tutorial. I compiled it with python 3.6 and opencv 3.3.0 using the mentioned changes to get it up and running. Sadly its only working for the first barcode in the zip.. The others are not found. Either only parts are detected or some text is marked ?</p> 
            <p>Whats interesting is that the results (the rectangle marking the barcode) differ from opencv 3.2.0 to 3.3.0 with opencv 3.2.0 also not finding the barcode. I tested python 2.7 and 3.6 with both opencv 3.2.0 and 3.3.0. Maybe you could revise this tutorial given you have time to spare.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=434002#respond" onclick="return addComment.moveForm( &quot;comment-434002&quot;, &quot;434002&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to uti">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-434134"></a> 
            <div id="li-comment-434134" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">September 5, 2017 at 9:28 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-434134" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-434134"> 
              <p>Thanks for sharing, Uti!</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/?replytocom=434134#respond" onclick="return addComment.moveForm( &quot;comment-434134&quot;, &quot;434134&quot;, &quot;respond&quot;, &quot;1512&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
        </ol> 
        <h3 id="comments-title">Trackbacks/Pingbacks</h3> 
        <ol class="commentlist"> 
         <li id="comment-233057"> <span class="author"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/" rel="external nofollow" class="url">Real-time barcode detection in video with Python and OpenCV - PyImageSearch</a></span> - <span class="date">December 15, 2014</span> <span class="pingcontent"><p>[] Todays post is a followup to a previous (extremely popular) article on detecting barcodes in images using Python and OpenCV. []</p> </span> </li>
         <!-- #comment-## --> 
         <li id="comment-306887"> <span class="author"><a href="https://www.pyimagesearch.com/2015/04/20/sorting-contours-using-python-and-opencv/" rel="external nofollow" class="url">Sorting Contours using Python and OpenCV - PyImageSearch</a></span> - <span class="date">April 20, 2015</span> <span class="pingcontent"><p>[] Contours enabled us detect barcodes in images. []</p> </span> </li>
         <!-- #comment-## --> 
        </ol> 
       </div> 
       <div id="respond" class="comment-respond"> 
        <h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2014/11/24/detecting-barcodes-images-python-opencv/#respond" style="display:none;">Click here to cancel reply.</a></small></h3> 
        <form action="http://www.pyimagesearch.com/wp-comments-post.php" method="post" id="commentform" class="comment-form"> 
         <p class="comment-form-comment"><label class="hide" for="comment">Comment</label> <textarea tabindex="4" id="comment" name="comment" cols="50" rows="10" maxlength="65525" aria-required="true" required></textarea></p>
         <p class="comment-form-author"><input id="author" name="author" type="text" class="txt" tabindex="1" value="" size="30" aria-required="true"><label for="author">Name <span class="required">(required)</span></label> </p> 
         <p class="comment-form-email"><input id="email" name="email" type="text" class="txt" tabindex="2" value="" size="30" aria-required="true"><label for="email">Email (will not be published) <span class="required">(required)</span></label> </p> 
         <p class="comment-form-url"><input id="url" name="url" type="text" class="txt" tabindex="3" value="" size="30"><label for="url">Website</label></p> 
         <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Submit Comment"> <input type="hidden" name="comment_post_ID" value="1512" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"> </p>
         <p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="892fe43319"></p>
         <p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="178"></p> 
        </form> 
       </div>
       <!-- #respond --> 
      </section>
      <!-- /#main --> 
      <aside id="sidebar"> 
       <div id="text-7" class="widget widget_text">
        <h3>Resource Guide (its totally free).</h3> 
        <div class="textwidget">
         <img title="Get your FREE 11-page Image Search Engine Resource Guide PDF" src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/imagesearchengine-resourceguide-cover.png" style="padding-right: 10px; width: 100px; float: left;"> 
         <p> Click the button below to get my <strong>free 11-page Image Search Engine Resource Guide PDF</strong>. Uncover <strong>exclusive techniques</strong> that I don't publish on this blog and start building image search engines of your own. </p> 
         <div style="clear: left;"></div> 
         <center>
          <a href="#" class="manual-optin-trigger" data-optin-slug="rxgemdcavzehuzpr" style="color: rgb(255, 255, 255); text-decoration: none; font-family: Helvetica, Arial, sans-serif; font-weight: bold; font-size: 16px; line-height: 20px; padding: 10px; display: inline-block; max-width: 300px; border-radius: 5px; text-shadow: rgba(0, 0, 0, 0.247059) 0px -1px 1px; box-shadow: rgba(255, 255, 255, 0.498039) 0px 1px 3px inset, rgba(0, 0, 0, 0.498039) 0px 1px 3px; background: #DF4B4B;">Download for Free!</a>
         </center>
        </div> 
       </div>
       <div id="text-9" class="widget widget_text">
        <h3>Deep Learning for Computer Vision with Python Book</h3> 
        <div class="textwidget">
         <a target="blank" href="http://www.pyimagesearch.com/deep-learning-computer-vision-python-book/"><img title="Deep Learning with Computer Vision and Python Kickstarter" src="http://www.pyimagesearch.com/static/templates/deep-learning-for-computer-vision/images/dl_for_cv_cover.png" style="padding-bottom: 5px; width: 250px;" onClick="document.location='http://www.pyimagesearch.com/deep-learning-computer-vision-python-book/'; return false;"></a> 
         <p>You're interested in deep learning and computer vision, <em>but you don't know how to get started.</em> Let me help. <strong><a target="blank" href="http://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">My new book will teach you all you need to know about deep learning.</a></strong></p> 
         <p><input type="submit" value="Click here to pre-order my new book" style="background-color: #DF4B4B;" onClick="document.location='http://www.pyimagesearch.com/deep-learning-computer-vision-python-book/'; return false;"></p>
        </div> 
       </div>
       <div id="text-5" class="widget widget_text">
        <h3>You can detect faces in images &amp; video.</h3> 
        <div class="textwidget">
         <a href="http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV"><img title="Learn how to detect faces in images and video" src="http://www.pyimagesearch.com/wp-content/uploads/2014/12/adrian_face_detection_sidebar.png" style="padding-bottom: 5px; width: 300px;" onClick="document.location='http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;"></a> 
         <p> Are you interested in <strong>detecting faces in images &amp; video?</strong> But <strong>tired of Googling for tutorials</strong> that <em>never work?</em> Then let me help! I guarantee that my new book will turn you into a <strong>face detection ninja</strong> by the end of this weekend. <a href="http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV" onclick="document.location='http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;">Click here to give it a shot yourself.</a> </p> 
         <p><input type="submit" value="Click here to master face detection" style="background-color: #DF4B4B;" onClick="document.location='http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;"></p>
        </div> 
       </div>
       <div id="text-8" class="widget widget_text">
        <h3>PyImageSearch Gurus: NOW ENROLLING!</h3> 
        <div class="textwidget">
         <div id="pyimg_gurus_carousel_container" style="width: 300px; height: 310px; cursor: pointer;" onclick="document.location='http://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar'; return false;"> 
          <div id="pyimg_gurus_carousel" style="width: 300px; height: 300px; background: url('http://www.pyimagesearch.com/static/templates/pyimagesearch-gurus/images/gurus_carousel.jpg') no-repeat; background-position: 0px 0px;"></div> 
         </div> 
         <p style="margin-bottom: 8px;"><strong>The PyImageSearch Gurus course is <em>now enrolling!</em></strong> Inside the course you'll learn how to perform:</p> 
         <ul style="margin-bottom: 8px;"> 
          <li>Automatic License Plate Recognition (ANPR)</li> 
          <li>Deep Learning</li> 
          <li>Face Recognition</li> 
          <li><em>and much more!</em></li> 
         </ul> 
         <p><strong>Click the button below to learn more about the course, take a tour, and get 10 (FREE) sample lessons</strong>.</p> 
         <p><input type="submit" value="Take a tour &amp; get 10 (free) lessons" style="background-color: #DF4B4B;" onClick="document.location='http://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar'; return false;"></p>
        </div> 
       </div>
       <div id="woo_blogauthorinfo-2" class="widget widget_woo_blogauthorinfo">
        <h3>Hello! Im Adrian Rosebrock.</h3>
        <span class="left"><img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=90&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=180&amp;d=mm&amp;r=g 2x" class="avatar avatar-90 photo" height="90" width="90"></span> 
        <p>I'm an entrepreneur and Ph.D who has launched two successful image search engines, <a target="blank" href="http://www.idmypill.com">ID My Pill</a> and <a target="blank" href="http://www.chicengine.com">Chic Engine</a>. I'm here to share my tips, tricks, and hacks I've learned along the way.</p> 
        <div class="fix"></div> 
       </div>
       <div id="text-4" class="widget widget_text">
        <h3>Learn computer vision in a single weekend.</h3> 
        <div class="textwidget">
         <a href="http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV"><img title="Become an OpenCV guru" src="http://www.pyimagesearch.com/static/templates/practical-python-and-opencv/images/practical_python_and_opencv_2nd_cover.png" style="margin-left: 35px; padding-bottom: 15px; width: 215px;"></a> 
         <p>Want to learn computer vision &amp; OpenCV? I can teach you in a <strong>single weekend</strong>. I know. It sounds crazy, but its no joke. My new book is your <strong>guaranteed, quick-start guide</strong> to becoming an OpenCV Ninja. So why not give it a try? <a href="http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV">Click here to become a computer vision ninja.</a></p> 
         <p><input type="submit" value="Click here to become an OpenCV ninja" style="background-color: #DF4B4B;" onClick="document.location='http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend'; return false;"></p>
        </div> 
       </div>
       <div id="text-3" class="widget widget_text">
        <h3>Subscribe via RSS</h3> 
        <div class="textwidget">
         <a target="blank" href="http://feeds.feedburner.com/Pyimagesearch"><img title="PyImageSearch RSS Feed" src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/rss-icon.png" style="padding-right: 10px; float: left;"></a> 
         <p><strong>Never miss a post!</strong> Subscribe to the PyImageSearch RSS Feed and keep up to date with my image search engine tutorials, tips, and tricks</p>
        </div> 
       </div> 
       <div id="woo_tabs-2" class="widget widget_woo_tabs"> 
        <div id="tabs"> 
         <ul class="wooTabs"> 
          <li class="popular"><a href="#tab-pop">Popular</a></li> 
         </ul> 
         <div class="clear"></div> 
         <div class="boxes box inside"> 
          <ul id="tab-pop" class="list"> 
           <li> <a title="Install OpenCV and Python on your Raspberry Pi 2 and B+" href="http://www.pyimagesearch.com/2015/02/23/install-opencv-and-python-on-your-raspberry-pi-2-and-b/">Install OpenCV and Python on your Raspberry Pi 2 and B+</a> <span class="meta">February 23, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox" href="http://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/">Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox</a> <span class="meta">June 1, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3" href="http://www.pyimagesearch.com/2016/04/18/install-guide-raspberry-pi-3-raspbian-jessie-opencv-3/">Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3</a> <span class="meta">April 18, 2016</span> 
            <div class="fix"></div> </li> 
           <li> <a title="How to install OpenCV 3 on Raspbian Jessie" href="http://www.pyimagesearch.com/2015/10/26/how-to-install-opencv-3-on-raspbian-jessie/">How to install OpenCV 3 on Raspbian Jessie</a> <span class="meta">October 26, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Basic motion detection and tracking with Python and OpenCV" href="http://www.pyimagesearch.com/2015/05/25/basic-motion-detection-and-tracking-with-python-and-opencv/">Basic motion detection and tracking with Python and OpenCV</a> <span class="meta">May 25, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Accessing the Raspberry Pi Camera with OpenCV and Python" href="http://www.pyimagesearch.com/2015/03/30/accessing-the-raspberry-pi-camera-with-opencv-and-python/">Accessing the Raspberry Pi Camera with OpenCV and Python</a> <span class="meta">March 30, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Ubuntu 16.04: How to install OpenCV" href="http://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/">Ubuntu 16.04: How to install OpenCV</a> <span class="meta">October 24, 2016</span> 
            <div class="fix"></div> </li> 
          </ul> 
         </div>
         <!-- /.boxes --> 
        </div>
        <!-- /wooTabs --> 
       </div> 
       <div id="woo_search-2" class="widget widget_woo_search">
        <h3>Search</h3>
        <div class="search_main"> 
         <form method="get" class="searchform" action="http://www.pyimagesearch.com/"> 
          <input type="text" class="field s" name="s" value="Search..." onfocus="if (this.value == 'Search...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search...';}"> 
          <button type="submit" class="icon-search submit" name="submit" value="Search"></button> 
         </form> 
         <div class="fix"></div> 
        </div> 
       </div>
      </aside>
      <!-- /#sidebar --> 
     </div>
     <!-- /#main-sidebar-container --> 
    </div>
    <!-- /#content --> 
    <!--#footer-widgets-container--> 
    <div id="footer-widgets-container"> 
    </div>
    <!--/#footer_widgets_container_end--> 
    <!--#footer_container_start--> 
    <div id="footer-container"> 
     <footer id="footer" class="col-full"> 
      <div id="copyright" class="col-left">
        Find me on 
       <a target="blank" href="https://twitter.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Twitter</a>, 
       <a target="blank" href="https://www.facebook.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Facebook</a>, 
       <a target="blank" href="https://plus.google.com/115909176846554117735/?rel=author" style="font-weight: bold; color: #FFFFFF;">Google+</a>, and 
       <a target="blank" href="http://www.linkedin.com/pub/adrian-rosebrock/2a/873/59b" style="font-weight: bold; color: #FFFFFF;">LinkedIn</a>.
       <br> 
       <p>© 2017 PyImageSearch. All Rights Reserved. </p> 
      </div> 
      <div id="credit" class="col-right"> 
      </div> 
     </footer> 
    </div>
    <!--/#footer_container_end--> 
   </div>
   <!-- /#inner-wrapper --> 
  </div>
  <!-- /#wrapper --> 
  <div class="fix"></div>
  <!--/.fix--> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-46641058-1', 'pyimagesearch.com');
  ga('send', 'pageview');

</script> 
  <!-- Drip --> 
  <script type="text/javascript">
  var _dcq = _dcq || [];
  var _dcs = _dcs || {}; 
  _dcs.account = '4768429';
  
  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true; 
    dc.src = '//tag.getdrip.com/4768429.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();
</script> 
  <!-- HitTail Code --> 
  <script type="text/javascript">
	(function(){ var ht = document.createElement('script');ht.async = true;
	  ht.type='text/javascript';ht.src = '//115962.hittail.com/mlt.js';
	  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ht, s);})();
</script> 
  <script type="text/javascript">
  (function() {
    window._pa = window._pa || {};
    // _pa.orderId = "myOrderId"; // OPTIONAL: attach unique conversion identifier to conversions
    // _pa.revenue = "19.99"; // OPTIONAL: attach dynamic purchase values to conversions
    // _pa.productId = "myProductId"; // OPTIONAL: Include product ID for use with dynamic ads
    var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.async = true;
    pa.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + "//tag.perfectaudience.com/serve/54220efd7ab7f03f7e000043.js";
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);

// visited blog tracking
window._pq = window._pq || [];
_pq.push(['track', 'visited blog']);
  })();
</script> 
  <!-- -- scroll to code ----> 
  <script type="text/javascript">
jQuery(document).ready(function(){
	jQuery("#scroll_to_code").click(function(event){
		event.preventDefault();
		jQuery('html, body').animate({scrollTop: jQuery('#post_downloads').offset().top}, 1000);
	});
});
</script> 
  <!-- gurus sidebar carousel --> 
  <script type="text/javascript">
	jQuery(document).ready(function(){
		GURUS_CAROUSEL_IDX = 1;

		window.setInterval(function(){
			jQuery("#pyimg_gurus_carousel").fadeOut(function(){
				GURUS_CAROUSEL_TOP = GURUS_CAROUSEL_IDX * -300;
				jQuery("#pyimg_gurus_carousel").css("background-position", "0px " + GURUS_CAROUSEL_TOP + "px");
				GURUS_CAROUSEL_IDX += 1;

				if (GURUS_CAROUSEL_IDX == 4){
					GURUS_CAROUSEL_IDX = 0;
				}
			}).delay(250).fadeIn();
		}, 5000);
	});
</script> 
  <!-- Woo Tabs Widget --> 
  <script type="text/javascript">
jQuery(document).ready(function(){
	// UL = .wooTabs
	// Tab contents = .inside

	var tag_cloud_class = '#tagcloud';

	//Fix for tag clouds - unexpected height before .hide()
	var tag_cloud_height = jQuery( '#tagcloud').height();

	jQuery( '.inside ul li:last-child').css( 'border-bottom','0px' ); // remove last border-bottom from list in tab content
	jQuery( '.wooTabs').each(function(){
		jQuery(this).children( 'li').children( 'a:first').addClass( 'selected' ); // Add .selected class to first tab on load
	});
	jQuery( '.inside > *').hide();
	jQuery( '.inside > *:first-child').show();

	jQuery( '.wooTabs li a').click(function(evt){ // Init Click funtion on Tabs

		var clicked_tab_ref = jQuery(this).attr( 'href' ); // Strore Href value

		jQuery(this).parent().parent().children( 'li').children( 'a').removeClass( 'selected' ); //Remove selected from all tabs
		jQuery(this).addClass( 'selected' );
		jQuery(this).parent().parent().parent().children( '.inside').children( '*').hide();

		jQuery( '.inside ' + clicked_tab_ref).fadeIn(500);

		 evt.preventDefault();

	})
})
</script> 
  <!-- This site is converting visitors into subscribers and customers with OptinMonster - http://optinmonster.com --> 
  <div id="om-holomlidgwitgymd-holder"></div> 
  <script>var holomlidgwitgymd,
			holomlidgwitgymd_poll = function () {
				var r = 0;
				return function (n, l) {
					clearInterval(r), r = setInterval(n, l)
				}
			}();
			!function (e, t, n) {
				if (e.getElementById(n)) {
					holomlidgwitgymd_poll(function () {
						if (window['om_loaded']) {
							if (!holomlidgwitgymd) {
								holomlidgwitgymd= new OptinMonsterApp();
								return holomlidgwitgymd.
								init({
									u      : "18464.467106",
									staging:0,
									dev    :0,
									beta   :0});
							}
						}
					}, 25);
					return;
				}
				var d = false, o = e.createElement(t);
				o.id = n, o.src = "//a.optnmnstr.com/app/js/api.min.js", o.async = true, o.onload = o.onreadystatechange = function () {
					if (!d) {
						if (!this.readyState || this.readyState === "loaded" || this.readyState === "complete") {
							try {
								d = om_loaded = true;
								holomlidgwitgymd= new OptinMonsterApp();holomlidgwitgymd.
								init({
									u      : "18464.467106",
									staging:0,
									dev    :0,
									beta   :0});
								o.onload = o.onreadystatechange = null;
							} catch (t) {
							}
						}
					}
				};
				(document.getElementsByTagName("head")[0] || document.documentElement).appendChild(o)
			}(document, "script", "omapi-script");</script>
  <!-- / OptinMonster -->
  <!-- This site is converting visitors into subscribers and customers with OptinMonster - http://optinmonster.com --> 
  <div id="om-rxgemdcavzehuzpr-holder"></div> 
  <script>var rxgemdcavzehuzpr,
			rxgemdcavzehuzpr_poll = function () {
				var r = 0;
				return function (n, l) {
					clearInterval(r), r = setInterval(n, l)
				}
			}();
			!function (e, t, n) {
				if (e.getElementById(n)) {
					rxgemdcavzehuzpr_poll(function () {
						if (window['om_loaded']) {
							if (!rxgemdcavzehuzpr) {
								rxgemdcavzehuzpr= new OptinMonsterApp();
								return rxgemdcavzehuzpr.
								init({
									u      : "18464.329426",
									staging:0,
									dev    :0,
									beta   :0});
							}
						}
					}, 25);
					return;
				}
				var d = false, o = e.createElement(t);
				o.id = n, o.src = "//a.optnmnstr.com/app/js/api.min.js", o.async = true, o.onload = o.onreadystatechange = function () {
					if (!d) {
						if (!this.readyState || this.readyState === "loaded" || this.readyState === "complete") {
							try {
								d = om_loaded = true;
								rxgemdcavzehuzpr= new OptinMonsterApp();rxgemdcavzehuzpr.
								init({
									u      : "18464.329426",
									staging:0,
									dev    :0,
									beta   :0});
								o.onload = o.onreadystatechange = null;
							} catch (t) {
							}
						}
					}
				};
				(document.getElementsByTagName("head")[0] || document.documentElement).appendChild(o)
			}(document, "script", "omapi-script");</script>
  <!-- / OptinMonster -->
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/5b374.js"></script> 
  <script type="text/javascript">var holomlidgwitgymd_shortcode = true;var rxgemdcavzehuzpr_shortcode = true;</script> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/39598.js"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var fsb = {"ajax":"http:\/\/www.pyimagesearch.com\/wp-admin\/admin-ajax.php","nonce":"7f83bd10b4"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/b9f65.js"></script> 
  <script type="text/javascript">var omapi_localized = { ajax: 'http://www.pyimagesearch.com/wp-admin/admin-ajax.php?optin-monster-ajax-route=1', nonce: '3cd5114ded' };</script>   
  <!-- Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

Object Caching 22506/29618 objects using disk
Page Caching using disk: enhanced
Minified using disk
Database Caching 35/96 queries in 0.133 seconds using disk

 Served from: www.pyimagesearch.com @ 2017-09-17 14:09:53 by W3 Total Cache -->
 </body>
</html>