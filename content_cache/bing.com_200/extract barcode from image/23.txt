<!doctype html>
<!--[if IE 6]>
<html id="ie6" lang="en-US">
<![endif]-->
<!--[if IE 7]>
<html id="ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html id="ie8" lang="en-US">
<![endif]-->
<!--[if !(IE 6) & !(IE 7) & !(IE 8)]><!-->
<html lang="en-US">
 <!--<![endif]-->
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width"> 
  <title>Refactoring Javascript:  extract method | Adam Young’s Web Log</title> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="stylesheet" type="text/css" media="all" href="http://adam.younglogic.com/wp-content/themes/twentyeleven/style.css"> 
  <link rel="pingback" href="http://adam.younglogic.com/xmlrpc.php"> 
  <!--[if lt IE 9]>
<script src="http://adam.younglogic.com/wp-content/themes/twentyeleven/js/html5.js" type="text/javascript"></script>
<![endif]--> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="Adam Young's Web Log » Feed" href="http://adam.younglogic.com/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Adam Young's Web Log » Comments Feed" href="http://adam.younglogic.com/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Adam Young's Web Log » Refactoring Javascript:  extract method Comments Feed" href="http://adam.younglogic.com/2011/06/refactoring-javascript-extract-method/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/adam.younglogic.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.8.1"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b===c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="openid-css" href="http://adam.younglogic.com/wp-content/plugins/openid/f/openid.css?ver=519" type="text/css" media="all"> 
  <link rel="stylesheet" id="drawit-css-css" href="http://adam.younglogic.com/wp-content/plugins/drawit/css/drawit.min.css?ver=1.1.3" type="text/css" media="all"> 
  <link rel="stylesheet" id="wp-syntax-css-css" href="http://adam.younglogic.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.1" type="text/css" media="all"> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-content/plugins/openid/f/openid.js?ver=519"></script> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-content/plugins/responsive-scrolling-tables/js/responsivescrollingtables.js?ver=4.8.1"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var quicktagsL10n = {"closeAllOpenTags":"Close all open tags","closeTags":"close tags","enterURL":"Enter the URL","enterImageURL":"Enter the URL of the image","enterImageDescription":"Enter a description of the image","textdirection":"text direction","toggleTextdirection":"Toggle Editor Text Direction","dfw":"Distraction-free writing mode","strong":"Bold","strongClose":"Close bold tag","em":"Italic","emClose":"Close italic tag","link":"Insert link","blockquote":"Blockquote","blockquoteClose":"Close blockquote tag","del":"Deleted text (strikethrough)","delClose":"Close deleted text tag","ins":"Inserted text","insClose":"Close inserted text tag","image":"Insert image","ul":"Bulleted list","ulClose":"Close bulleted list tag","ol":"Numbered list","olClose":"Close numbered list tag","li":"List item","liClose":"Close list item tag","code":"Code","codeClose":"Close code tag","more":"Insert Read More tag"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-includes/js/quicktags.min.js?ver=4.8.1"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var drawitFE = {"mediaupload":"http:\/\/adam.younglogic.com\/wp-admin\/\/media-upload.php"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-content/plugins/drawit/js/qt-btn.js?ver=1.1.3"></script> 
  <link rel="https://api.w.org/" href="http://adam.younglogic.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://adam.younglogic.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://adam.younglogic.com/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Fear" href="http://adam.younglogic.com/2011/06/fear/"> 
  <link rel="next" title="Binary Java Runner" href="http://adam.younglogic.com/2011/08/binary-java-runner/"> 
  <meta name="generator" content="WordPress 4.8.1"> 
  <link rel="canonical" href="http://adam.younglogic.com/2011/06/refactoring-javascript-extract-method/"> 
  <link rel="shortlink" href="http://adam.younglogic.com/?p=1411"> 
  <link rel="alternate" type="application/json+oembed" href="http://adam.younglogic.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fadam.younglogic.com%2F2011%2F06%2Frefactoring-javascript-extract-method%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://adam.younglogic.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fadam.younglogic.com%2F2011%2F06%2Frefactoring-javascript-extract-method%2F&amp;format=xml"> 
  <link rel="stylesheet" type="text/css" media="screen" href="http://adam.younglogic.com/wp-content/plugins/event-list-calendar/assets/css/event-list-cal.css">
  <style>.post-thumbnail img[src$='.svg'] { width: 100%; height: auto; }</style> 
  <link type="text/css" rel="stylesheet" href="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/styles/shCore.css"> 
  <link type="text/css" rel="stylesheet" href="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/styles/shThemeEmacs.css"> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shCore.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushBash.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushCpp.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushCSharp.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushCss.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushDelphi.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushDiff.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushGroovy.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushJava.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushJScript.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushPerl.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushPhp.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushPlain.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushPython.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushRuby.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushScala.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushSql.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushVb.js"></script> 
  <script type="text/javascript" src="https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/shBrushXml.js"></script> 
  <script type="text/javascript">		
		SyntaxHighlighter.config.clipboardSwf = 'https://adam.younglogic.com//wp-content/plugins/syntax-highlighter-and-code-prettifier/scripts/clipboard.swf';
		SyntaxHighlighter.all();
	</script> 
  <style data-context="foundation-flickity-css">/*! Flickity v2.0.2
http://flickity.metafizzy.co
---------------------------------------------- */.flickity-enabled{position:relative}.flickity-enabled:focus{outline:0}.flickity-viewport{overflow:hidden;position:relative;height:100%}.flickity-slider{position:absolute;width:100%;height:100%}.flickity-enabled.is-draggable{-webkit-tap-highlight-color:transparent;tap-highlight-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.flickity-enabled.is-draggable .flickity-viewport{cursor:move;cursor:-webkit-grab;cursor:grab}.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down{cursor:-webkit-grabbing;cursor:grabbing}.flickity-prev-next-button{position:absolute;top:50%;width:44px;height:44px;border:none;border-radius:50%;background:#fff;background:hsla(0,0%,100%,.75);cursor:pointer;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.flickity-prev-next-button:hover{background:#fff}.flickity-prev-next-button:focus{outline:0;box-shadow:0 0 0 5px #09F}.flickity-prev-next-button:active{opacity:.6}.flickity-prev-next-button.previous{left:10px}.flickity-prev-next-button.next{right:10px}.flickity-rtl .flickity-prev-next-button.previous{left:auto;right:10px}.flickity-rtl .flickity-prev-next-button.next{right:auto;left:10px}.flickity-prev-next-button:disabled{opacity:.3;cursor:auto}.flickity-prev-next-button svg{position:absolute;left:20%;top:20%;width:60%;height:60%}.flickity-prev-next-button .arrow{fill:#333}.flickity-page-dots{position:absolute;width:100%;bottom:-25px;padding:0;margin:0;list-style:none;text-align:center;line-height:1}.flickity-rtl .flickity-page-dots{direction:rtl}.flickity-page-dots .dot{display:inline-block;width:10px;height:10px;margin:0 8px;background:#333;border-radius:50%;opacity:.25;cursor:pointer}.flickity-page-dots .dot.is-selected{opacity:1}</style>
  <style data-context="foundation-slideout-css">.slideout-menu{position:fixed;left:0;top:0;bottom:0;right:auto;z-index:0;width:256px;overflow-y:auto;-webkit-overflow-scrolling:touch;display:none}.slideout-menu.pushit-right{left:auto;right:0}.slideout-panel{position:relative;z-index:1;will-change:transform}.slideout-open,.slideout-open .slideout-panel,.slideout-open body{overflow:hidden}.slideout-open .slideout-menu{display:block}.pushit{display:none}</style>
  <style>.ios7.web-app-mode.has-fixed header{ background-color: rgba(45,53,63,.88);}</style>
 </head> 
 <body class="post-template-default single single-post postid-1411 single-format-standard single-author singular two-column right-sidebar"> 
  <div id="page" class="hfeed"> 
   <header id="branding" role="banner"> 
    <hgroup> 
     <h1 id="site-title"><span><a href="http://adam.younglogic.com/" rel="home">Adam Young’s Web Log</a></span></h1> 
     <h2 id="site-description">The Notebook of a Programmer Climber Musician Ex-Soldier</h2> 
    </hgroup> 
    <a href="http://adam.younglogic.com/"> <img src="http://adam.younglogic.com/wp-content/uploads/2016/07/younglogic-banner-edited-1.jpg" width="611" height="86" alt="Adam Young’s Web Log"> </a> 
    <form method="get" id="searchform" action="http://adam.younglogic.com/"> 
     <label for="s" class="assistive-text">Search</label> 
     <input type="text" class="field" name="s" id="s" placeholder="Search"> 
     <input type="submit" class="submit" name="submit" id="searchsubmit" value="Search"> 
    </form> 
    <nav id="access" role="navigation"> 
     <h3 class="assistive-text">Main menu</h3> 
     <div class="skip-link">
      <a class="assistive-text" href="#content">Skip to primary content</a>
     </div> 
     <div class="menu">
      <ul> 
       <li><a href="http://adam.younglogic.com/">Home</a></li>
       <li class="page_item page-item-2"><a href="http://adam.younglogic.com/about/">About</a></li> 
       <li class="page_item page-item-58 page_item_has_children"><a href="http://adam.younglogic.com/climbing/">Climbing</a> 
        <ul class="children"> 
         <li class="page_item page-item-57"><a href="http://adam.younglogic.com/climbing/foot-in-crack/">Foot placement in crack climbing</a></li> 
         <li class="page_item page-item-34"><a href="http://adam.younglogic.com/climbing/climbing-resume/">Routes Climbed</a></li> 
        </ul> </li> 
      </ul>
     </div> 
    </nav>
    <!-- #access --> 
   </header>
   <!-- #branding --> 
   <div id="main"> 
    <div id="primary"> 
     <div id="content" role="main"> 
      <nav id="nav-single"> 
       <h3 class="assistive-text">Post navigation</h3> 
       <span class="nav-previous"><a href="http://adam.younglogic.com/2011/06/fear/" rel="prev"><span class="meta-nav">?</span> Previous</a></span> 
       <span class="nav-next"><a href="http://adam.younglogic.com/2011/08/binary-java-runner/" rel="next">Next <span class="meta-nav">?</span></a></span> 
      </nav>
      <!-- #nav-single --> 
      <article id="post-1411" class="post-1411 post type-post status-publish format-standard hentry category-javascript"> 
       <header class="entry-header"> 
        <h1 class="entry-title">Refactoring Javascript: extract method</h1> 
        <div class="entry-meta"> 
         <span class="sep">Posted on </span>
         <a href="http://adam.younglogic.com/2011/06/refactoring-javascript-extract-method/" title="10:56 am" rel="bookmark"><time class="entry-date" datetime="2011-06-23T10:56:18+00:00">June 23, 2011</time></a>
         <span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://adam.younglogic.com/author/admin/" title="View all posts by Adam Young" rel="author">Adam Young</a></span></span> 
        </div>
        <!-- .entry-meta --> 
       </header>
       <!-- .entry-header --> 
       <div class="entry-content"> 
        <p>I miss the automated refactorings in Eclipse.&nbsp; While I am sure that other languages will catch up eventually, for now, I find myself refactoring manually.&nbsp; Here is an example of how I did an “Extract Method”&nbsp; refactoring in Javascript.</p> 
        <p><span id="more-1411"></span>Start state:&nbsp; we have a callback function for the “Add and edit” use case.&nbsp; This is the function called when a new entity is added to the system.&nbsp; We capture the minimal amount of information to add the entity, and then provide the user with the means to edit it, to add additional fields for example.&nbsp; The code to do this is common for most entities, but recently I ran up against a case where we needed to provide an alternative to how we navigate from <strong>add</strong> to <strong>show</strong>.</p> 
        <p>&nbsp;</p> 
        <pre class="brush:javascript">       that.add_button(IPA.messages.buttons.add_and_edit, function() {
            var record = {};
            that.save(record);
            that.add(
                record,
                function(data, text_status, xhr) {
                    that.close();

                    var pkey_name = IPA.metadata.objects[that.entity_name].primary_key;

                    var result = data.result.result;
                    var pkey = result[pkey_name];

                    if (pkey instanceof Array) {
                        pkey = pkey[0];
                    }

                    IPA.nav.show_page(that.entity_name, 'default', pkey);
                }
            );
        });</pre> 
        <p>The start point is to create a local function for just the piece that we want to extract. Javascript provides us much flexibility, and the fact that variables are visibile from the exterior scope really comes in handy. I’ll post the diffs as they are created.&nbsp; Note that between each of these stages, I performed a manual test of the pages, which was fast enough that it wasn’t necessary to create a unit test.&nbsp; I also checked each successful step into git.&nbsp; I can squash them together into a single commit before posting for code review.</p> 
        <p>First, introduce a function around the block of code you want to extract.</p> 
        <p>&nbsp;</p> 
        <p>&nbsp;</p> 
        <p><a href="http://adam.younglogic.com/wp-content/uploads/2011/06/Step1.png"><img class="size-large wp-image-1420" title="Step1" src="http://adam.younglogic.com/wp-content/uploads/2011/06/Step1-1024x328.png" alt="make local function" width="1131" height="362" srcset="http://adam.younglogic.com/wp-content/uploads/2011/06/Step1-1024x328.png 1024w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step1-300x96.png 300w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step1.png 1038w" sizes="(max-width: 1131px) 100vw, 1131px"></a></p> 
        <p>&nbsp;</p> 
        <p>
         <!--more-->Second, reformat. These changed lines are all indentation changes.</p> 
        <p><a href="http://adam.younglogic.com/wp-content/uploads/2011/06/Step2.png"><img class="alignleft size-large wp-image-1421" title="Step2" src="http://adam.younglogic.com/wp-content/uploads/2011/06/Step2-1024x431.png" alt="" width="1141" height="480" srcset="http://adam.younglogic.com/wp-content/uploads/2011/06/Step2-1024x431.png 1024w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step2-300x126.png 300w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step2.png 1034w" sizes="(max-width: 1141px) 100vw, 1141px"></a></p> 
        <p>Third, move all references to exterior variables to the top of the function. This is a preparatory step for converting the into parameters.</p> 
        <p><a href="http://adam.younglogic.com/wp-content/uploads/2011/06/Step3.png"><img class="alignleft size-large wp-image-1422" title="Step3" src="http://adam.younglogic.com/wp-content/uploads/2011/06/Step3-1024x330.png" alt="" width="1137" height="366" srcset="http://adam.younglogic.com/wp-content/uploads/2011/06/Step3-1024x330.png 1024w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step3-300x96.png 300w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step3.png 1349w" sizes="(max-width: 1137px) 100vw, 1137px"></a></p> 
        <p>Fourth: Convert local variables for external references into parameters. Make sure to change the calling point in the code.</p> 
        <p><a href="http://adam.younglogic.com/wp-content/uploads/2011/06/Step4.png"><img class="alignleft size-large wp-image-1423" title="Step4" src="http://adam.younglogic.com/wp-content/uploads/2011/06/Step4-1024x377.png" alt="" width="1177" height="433" srcset="http://adam.younglogic.com/wp-content/uploads/2011/06/Step4-1024x377.png 1024w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step4-300x110.png 300w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step4.png 1371w" sizes="(max-width: 1177px) 100vw, 1177px"></a></p> 
        <p>Fifth: move function to the object scope. Nothing is changing but the location of the function definition.</p> 
        <p><a href="http://adam.younglogic.com/wp-content/uploads/2011/06/Step5.png"><img class="alignleft size-large wp-image-1424" title="Step5" src="http://adam.younglogic.com/wp-content/uploads/2011/06/Step5-1024x305.png" alt="" width="1136" height="338" srcset="http://adam.younglogic.com/wp-content/uploads/2011/06/Step5-1024x305.png 1024w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step5-300x89.png 300w" sizes="(max-width: 1136px) 100vw, 1136px"></a></p> 
        <p>Sixth: Convert function to method. We follow a convention that uses <strong>that</strong> as a private variable instead of <strong>this</strong>.</p> 
        <p><a href="http://adam.younglogic.com/wp-content/uploads/2011/06/Step6.png"><img class="alignleft size-large wp-image-1425" title="Step6" src="http://adam.younglogic.com/wp-content/uploads/2011/06/Step6-1024x200.png" alt="" width="1135" height="221" srcset="http://adam.younglogic.com/wp-content/uploads/2011/06/Step6-1024x200.png 1024w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step6-300x58.png 300w" sizes="(max-width: 1135px) 100vw, 1135px"></a></p> 
        <p>Seventh: Provide means to override method. We do this due to our declarative approach to object definition, but may not be necessary if you are doing Javascript prototype inheritance.</p> 
        <a href="http://adam.younglogic.com/wp-content/uploads/2011/06/Step7.png"><img class="size-large wp-image-1426" title="Step7" src="http://adam.younglogic.com/wp-content/uploads/2011/06/Step7-1024x108.png" alt="Provide-means-to-override-method" width="1118" height="117" srcset="http://adam.younglogic.com/wp-content/uploads/2011/06/Step7-1024x108.png 1024w, http://adam.younglogic.com/wp-content/uploads/2011/06/Step7-300x31.png 300w" sizes="(max-width: 1118px) 100vw, 1118px"></a> 
       </div>
       <!-- .entry-content --> 
       <footer class="entry-meta">
         This entry was posted in 
        <a href="http://adam.younglogic.com/category/software/javascript/" rel="category tag">Javascript</a> by 
        <a href="http://adam.younglogic.com/author/admin/">Adam Young</a>. Bookmark the 
        <a href="http://adam.younglogic.com/2011/06/refactoring-javascript-extract-method/" title="Permalink to Refactoring Javascript:  extract method" rel="bookmark">permalink</a>. 
       </footer>
       <!-- .entry-meta --> 
      </article>
      <!-- #post-1411 --> 
      <div id="comments"> 
       <div id="respond" class="comment-respond"> 
        <h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2011/06/refactoring-javascript-extract-method/#respond" style="display:none;">Cancel reply</a></small></h3> 
        <form action="http://adam.younglogic.com/wp-comments-post.php" method="post" id="commentform" class="comment-form"> 
         <p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p>
         <p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required></textarea></p>
         <p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required="true" required></p> 
         <p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required="true" required></p> 
         <p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200"></p> 
         <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="1411" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"> </p>
         <p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="1f13b7fec4"></p> 
         <span id="openid_comment"> <label> <input type="checkbox" id="login_with_openid" name="login_with_openid" checked> Authenticate this comment using <span class="openid_link">OpenID</span>. </label> </span> 
         <script type="text/javascript">jQuery(function(){ add_openid_to_comment_form('http://adam.younglogic.com/index.php', '3cecfaa107') })</script> 
         <p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="117"></p> 
        </form> 
       </div>
       <!-- #respond --> 
      </div>
      <!-- #comments --> 
     </div>
     <!-- #content --> 
    </div>
    <!-- #primary --> 
   </div>
   <!-- #main --> 
   <footer id="colophon" role="contentinfo"> 
    <div id="site-generator"> 
     <a href="https://wordpress.org/" title="Semantic Personal Publishing Platform">Proudly powered by WordPress</a> 
    </div> 
   </footer>
   <!-- #colophon --> 
  </div>
  <!-- #page --> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-content/plugins/event-list-calendar/assets/js/today.js"></script>
  <!-- Powered by WPtouch: 4.3.18 -->
  <script type="text/javascript" src="http://adam.younglogic.com/wp-content/plugins/drawit/js/drawit-iframe.js?ver=1.1.3"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var eventListCal = {"ajaxurl":"http:\/\/adam.younglogic.com\/wp-admin\/admin-ajax.php","security":"ec21e28135"};
var eventListMiniCal = {"ajaxurl":"http:\/\/adam.younglogic.com\/wp-admin\/admin-ajax.php","security":"b13ec2112d"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-content/plugins/event-list-calendar/assets/js/ajax.js?ver=1.0.0"></script> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-content/plugins/wp-syntax/js/wp-syntax.js?ver=1.1"></script> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-includes/js/wp-embed.min.js?ver=4.8.1"></script> 
  <script type="text/javascript" src="http://adam.younglogic.com/wp-content/plugins/akismet/_inc/form.js?ver=3.3.4"></script>  
 </body>
</html>