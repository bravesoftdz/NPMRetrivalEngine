<!doctype html>
<html>
 <head> 
  <title>Image extractor « Python recipes « ActiveState Code</title> 
  <meta http-equiv="X-UA-Compatible" content="IE=8"> 
  <link rel="stylesheet" href="/static/css/activestyle.css" type="text/css"> 
  <!--[if IE]>
    <link rel="stylesheet" href="/static/css/ie.css" type="text/css" />
  <![endif]--> 
  <!--[if IE 7]>
    <link rel="stylesheet" href="/static/css/ie7.css" type="text/css" />
  <![endif]--> 
  <!--[if IE 6]>
    <link rel="stylesheet" href="/static/css/ie6.css" type="text/css" />
  <![endif]--> 
  <link href="/static/prettify/prettify.css" type="text/css" rel="stylesheet"> 
  <link href="http://fonts.googleapis.com/css?family=PT+Sans+Narrow:bold&amp;subset=latin" rel="stylesheet" type="text/css"> 
  <link href="http://fonts.googleapis.com/css?family=PT+Sans:bold" rel="stylesheet" type="text/css"> 
  <link rel="alternate" href="/feeds/news/" type="application/atom+xml" title="ActiveState Code News"> 
  <link type="image/x-icon" href="/static/activestyle/img/favicon.ico" rel="shortcut icon"> 
  <script src="/static/js/jquery-1.3.2.min.js" type="text/javascript"></script> 
  <script src="/static/js/jquery-ui-1.7.2.custom.min.js" type="text/javascript"></script> 
  <script src="/static/js/jquery-form-2.36.js" type="text/javascript"></script> 
  <link rel="canonical" href="/recipes/189862-image-extractor/"> 
  <!--[if IE]><style type="text/css"> div.codeblock, pre.prettyprint { overflow: visible; overflow-x: auto; overflow-y: hidden; padding-bottom:15px; } </style><![endif]--> 
  <!-- Start Google Analytics tracking code --> 
  <script type="text/javascript">
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    
    ga('create', 'UA-20072-24', 'auto', {'allowLinker': true});
    ga('require', 'linker');
    ga('linker:autoLink', ['activestate.com', 'stackato.com', 'komodoide.com']);
    ga('require', 'linkid', 'linkid.js');
    ga('send', 'pageview');
  </script> 
  <!-- End Google Analytics tracking code --> 
 </head> 
 <body> 
  <div id="as_wrapper"> 
   <ul class="as_skip"> 
    <li><a href="#q">Skip to Search</a></li> 
    <li><a href="#site_nav">Skip to Navigation</a></li> 
    <li><a href="#as_content">Skip to Content</a></li> 
   </ul> 
   <div id="as_header_wrapper" class="nosearchhi"> 
    <div id="as_header"> 
     <div id="as_navbar" class="as_navbar_short"> 
      <ul id="as_sitesnav"> 
       <li class="as_logo"><a href="//www.activestate.com/"><img height="18" width="90" src="/static/activestyle/img/activestate.png" title="ActiveState | The Dynamic Language Experts"></a></li> 
       <span class="as_navsep"></span> 
       <li><a href="//community.activestate.com/">Community</a></li> 
       <span class="as_navsep">|</span> 
       <li><b><a href="/">Code</a></b></li> 
       <span class="as_navsep">|</span> 
       <li><a href="http://docs.activestate.com/">Docs</a></li> 
       <span class="as_navsep">|</span> 
       <li class="as_sitesnav_more"><a onclick="$('#as_sitesnav_downloads').slideToggle(100); return false;" href="//www.activestate.com/downloads"><u>Downloads</u> <small>?</small></a> 
        <ul style="display: none;" id="as_sitesnav_downloads"> 
         <li><a href="//www.activestate.com/activeperl/downloads" title="Download Perl">ActivePerl</a></li> 
         <li><a href="//www.activestate.com/activepython/downloads" title="Download Python">ActivePython</a></li> 
         <li><a href="//www.activestate.com/activetcl/downloads" title="Download Tcl">ActiveTcl</a></li> 
         <li><a href="//www.activestate.com/activego/downloads" title="Download Go">ActiveGo</a></li> 
         <li><a href="//www.activestate.com/komodo-ide/downloads" title="Download Komodo IDE">Komodo IDE</a></li> 
        </ul> </li> 
       <span class="as_navsep">|</span> 
       <li class="as_sitesnav_more"><a href="//www.activestate.com/community" onclick="$('#as_sitesnav_more').slideToggle(100); return false;"><u>more</u> <small>?</small></a> 
        <ul id="as_sitesnav_more" style="display: none;"> 
         <li><a href="//lists.activestate.com/">Lists</a></li> 
         <li><a href="//bugs.activestate.com/">Bugs</a></li> 
         <li><a href="//code.activestate.com/ppm">PPM Index</a></li> 
         <li><a href="//code.activestate.com/pypm">PyPM Index</a></li> 
        </ul> </li> 
      </ul> 
      <script type="text/javascript">
      $('body').click(function() { $('#as_sitesnav_more').hide(); $('#as_sitesnav_downloads').hide(); });
    </script> 
      <div id="as_accountnav">
        Welcome, guest 
       <span class="as_navsep">|</span> 
       <a href="https://account.activestate.com/signin/?next=https%3A//code.activestate.com/recipes/189862-image-extractor/">Sign In</a> 
       <span class="as_navsep">|</span> 
       <a href="https://account.activestate.com/">My Account</a> 
       <span class="as_navsep">|</span> 
       <a href="https://store.activestate.com/">Store</a> 
       <span class="as_navsep">|</span> 
       <a href="https://store.activestate.com/cart" class="icon-cart">Cart</a> 
      </div> 
     </div> 
     <div id="as_bannerbar"> 
      <div id="site_logo" class="as_banner_text"> 
       <a class="as_banner_text" href="/">ActiveState Code</a> » 
       <a href="/recipes/" class="as_banner_text">Recipes</a> 
      </div> 
      <div id="site_nav"> 
       <form id="search_form" action="/search/recipes/"> 
        <input size="24" id="q" name="q" accesskey="s"> 
        <input type="submit" value="Search"> 
       </form> 
      </div> 
      <div style="clear:both"></div> 
     </div> 
    </div> 
    <!-- end of as_header --> 
    <div id="as_sub_banner"> 
     <div id="as_sub_site_nav"> 
      <div id="as_sub_site_links"> 
       <a href="/recipes/langs/">Languages</a> 
       <a href="/recipes/tags/">Tags</a> 
       <a href="/recipes/users/">Authors</a> 
       <a href="/recipes/sets/">Sets</a> 
      </div> 
     </div> 
    </div> 
    <!-- end of as_sub_banner --> 
   </div> 
   <!-- end of as_header_wrapper --> 
   <div id="as_middle"> 
    <div id="as_content_wrapper"> 
     <div id="as_content"> 
      <div style="padding: 1em; margin-top: 20px; margin-bottom: 20px; border: 1px solid #666; -webkit-box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.5); -moz-box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.5); box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.5);">
        NOTE: Recipes have moved! Please visit 
       <a href="https://github.com/ActiveState/code">GitHub.com/activestate/code</a> for the current versions. 
      </div> 
      <div id="page_header"> 
       <h1> Image extractor (Python recipe) <span class="print_only secondary">by Anand</span> 
        <div class="print_only secondary" style="margin-top: 10px;">
          ActiveState Code (http://code.activestate.com/recipes/189862/) 
        </div> </h1> 
      </div> 
      <div id="content"> 
       <div id="description"> 
        <p>Extract images (jpeg/gif) from screensaver files, webshots collection files ,powerpoints, microsoft word documents etc.</p> 
       </div> 
       <div id="blocks"> 
        <div id="block-0" class="block"> 
         <div class="block-toolbar as_secondary"> 
          <span style="float: right;">Python, 144 lines</span> 
          <div class="block-toolbar-button">
           <a href="/recipes/189862-image-extractor/download/1/"><img src="/static/img/bullet_disk.png">Download</a>
          </div> 
          <div id="clipboard_container" class="block-toolbar-button" style="position: relative; display: none;">
           <div id="clipboard_button">
            <img src="/static/img/bullet_go16.png">Copy to clipboard
           </div>
          </div> 
         </div> 
         <div class="codeblock"> 
          <table class="highlighttable">
           <tbody>
            <tr>
             <td class="linenos"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144</pre></td>
             <td class="code">
              <div class="highlight">
               <pre><span class="k">import</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">string</span>

<span class="c">#write now write only GIF/JPEG</span>

<span class="c">#image types </span>
<span class="n">imgtypes</span><span class="o">=</span><span class="p">[</span><span class="s">'JPG'</span><span class="p">,</span> <span class="s">'GIF'</span><span class="p">,</span><span class="s">'GIF'</span><span class="p">]</span>

<span class="c">#signature at beginning of file</span>
<span class="n">imgsigs</span><span class="o">=</span><span class="p">[</span><span class="s">'JFIF'</span><span class="p">,</span> <span class="s">'GIF87a'</span><span class="p">,</span> <span class="s">'GIF89a'</span><span class="p">]</span>

<span class="c">#offset of signatures from</span>
<span class="c">#file beginning</span>
<span class="n">imgsigoffs</span><span class="o">=</span><span class="p">[</span><span class="mf">6</span><span class="p">,</span> <span class="mf">0</span><span class="p">,</span> <span class="mf">0</span><span class="p">]</span>

<span class="c">#our marker array</span>
<span class="n">imgmarker</span><span class="o">=</span><span class="p">[]</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>

	<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mf">2</span><span class="p">:</span>
		<span class="k">print</span> <span class="s">'Usage: picdumper &lt;file&gt;</span><span class="se">\n</span><span class="s">'</span>
		<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mf">1</span><span class="p">)</span>

	<span class="n">filename</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">abspath</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mf">1</span><span class="p">])</span>

	<span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="n">filename</span><span class="p">):</span>
		<span class="k">print</span> <span class="s">'Error: No such file '</span><span class="p">,</span> <span class="n">filename</span>
		<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mf">2</span><span class="p">)</span>

	<span class="c">#open file in binary mode</span>
	<span class="k">try</span><span class="p">:</span>
		<span class="n">infile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">'rb'</span><span class="p">)</span>
	<span class="c">#dont bother about specific exceptions</span>
	<span class="k">except</span><span class="p">:</span>
		<span class="k">print</span> <span class="s">'Could not open file to read !'</span><span class="p">,</span> <span class="n">filename</span>
		<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mf">3</span><span class="p">)</span>
		
	<span class="k">if</span> <span class="n">infile</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
		<span class="k">print</span> <span class="s">'Error opening file '</span><span class="p">,</span> <span class="n">filename</span>
		<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mf">3</span><span class="p">)</span>

	<span class="n">c</span> <span class="o">=</span> <span class="n">infile</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mf">1</span><span class="p">)</span>

	<span class="n">lastmatch</span><span class="o">=</span><span class="s">""</span>
	<span class="k">while</span> <span class="n">c</span> <span class="o">!=</span> <span class="s">''</span><span class="p">:</span>

		<span class="c">#look for image sig</span>
		<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mf">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">imgsigs</span><span class="p">)):</span>

			<span class="c">#find if c is first character of imgsig</span>
			<span class="n">sig</span><span class="o">=</span><span class="n">imgsigs</span><span class="p">[</span><span class="n">x</span><span class="p">]</span>
			
			<span class="k">if</span> <span class="n">c</span> <span class="o">==</span> <span class="n">sig</span><span class="p">[</span><span class="mf">0</span><span class="p">]:</span>
				<span class="c">#find if the rest of imgsig match</span>
				<span class="n">lentoread</span><span class="o">=</span><span class="nb">len</span><span class="p">(</span><span class="n">sig</span><span class="p">)</span> <span class="o">-</span> <span class="mf">1</span>
				<span class="n">chunk</span><span class="o">=</span><span class="n">c</span> <span class="o">+</span> <span class="n">infile</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">lentoread</span><span class="p">)</span>
				<span class="c">#print chunk</span>
				<span class="c">#matches</span>
				<span class="k">if</span> <span class="n">chunk</span><span class="o">==</span><span class="n">sig</span><span class="p">:</span>
					<span class="n">fpos</span><span class="o">=</span><span class="nb">int</span><span class="p">(</span><span class="n">infile</span><span class="o">.</span><span class="n">tell</span><span class="p">())</span>
					
					<span class="c">#now we are at end of sig, for getting image</span>
					<span class="c">#pos we need to subtract length of sig and offset</span>
					<span class="n">sigpos</span><span class="o">=</span><span class="n">fpos</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">sig</span><span class="p">)</span>
					<span class="n">imgpos</span><span class="o">=</span><span class="n">sigpos</span> <span class="o">-</span> <span class="n">imgsigoffs</span><span class="p">[</span><span class="n">x</span><span class="p">]</span>

					<span class="c">#write position and image type to marker</span>
					<span class="n">imgmarker</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">imgpos</span><span class="p">,</span> <span class="n">imgtypes</span><span class="p">[</span><span class="n">x</span><span class="p">]))</span>
					<span class="n">lastmatch</span><span class="o">=</span><span class="n">imgtypes</span><span class="p">[</span><span class="n">x</span><span class="p">]</span>
				<span class="k">else</span><span class="p">:</span>
					<span class="c">#bug, we need to reset file position</span>
					<span class="c">#to match other sigs correctly if this</span>
					<span class="c">#one does not.</span>
					<span class="n">currpos</span><span class="o">=</span><span class="nb">int</span><span class="p">(</span><span class="n">infile</span><span class="o">.</span><span class="n">tell</span><span class="p">())</span>
					<span class="n">prevpos</span><span class="o">=</span><span class="n">currpos</span><span class="o">-</span><span class="n">lentoread</span>
					<span class="c">#seek to previous position</span>
					<span class="n">infile</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">prevpos</span><span class="p">)</span>
					

		<span class="c">#read next char</span>
		<span class="n">c</span><span class="o">=</span><span class="n">infile</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mf">1</span><span class="p">)</span>

	<span class="n">posn</span><span class="o">=</span><span class="nb">int</span><span class="p">(</span><span class="n">infile</span><span class="o">.</span><span class="n">tell</span><span class="p">())</span>
	<span class="n">imgmarker</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">posn</span><span class="p">,</span> <span class="n">lastmatch</span><span class="p">))</span>

	<span class="k">print</span> <span class="n">imgmarker</span>
	<span class="c">#write images</span>

	<span class="c">#rewind file</span>
	<span class="n">infile</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mf">0</span><span class="p">)</span>

	<span class="n">imgcount</span><span class="o">=</span><span class="mf">0</span>

	<span class="c">#most collections store image in reverse</span>
	<span class="c">#order that was appended</span>
	<span class="n">x</span><span class="o">=</span><span class="nb">len</span><span class="p">(</span><span class="n">imgmarker</span><span class="p">)</span><span class="o">-</span><span class="mf">1</span>

	<span class="k">while</span> <span class="n">x</span><span class="o">&gt;=</span><span class="mf">1</span><span class="p">:</span>

		<span class="n">imgcount</span> <span class="o">+=</span> <span class="mf">1</span>
		<span class="n">imginfo</span><span class="o">=</span><span class="n">imgmarker</span><span class="p">[</span><span class="n">x</span><span class="p">]</span>

		<span class="n">imgposn</span><span class="o">=</span><span class="n">imginfo</span><span class="p">[</span><span class="mf">0</span><span class="p">]</span>
		<span class="n">imgtype</span><span class="o">=</span><span class="n">imginfo</span><span class="p">[</span><span class="mf">1</span><span class="p">]</span>

		<span class="c">#this is the tricky part, to get the correct image</span>
		<span class="c">#we need the file posn before previous one!, that</span>
		<span class="c">#is we need to jump a position. Otherwise all images</span>
		<span class="c">#will be junk or of small resolution.</span>
		<span class="n">imginfoprev</span><span class="o">=</span><span class="n">imgmarker</span><span class="p">[</span><span class="n">x</span><span class="o">-</span><span class="mf">2</span><span class="p">]</span>
		<span class="n">imgposnprev</span><span class="o">=</span><span class="n">imginfoprev</span><span class="p">[</span><span class="mf">0</span><span class="p">]</span>

		<span class="c">#get length in chars</span>
		<span class="n">imglen</span><span class="o">=</span> <span class="n">imgposn</span> <span class="o">-</span> <span class="n">imgposnprev</span>
		
		<span class="c">#seek to file position</span>
		<span class="n">infile</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">imgposnprev</span><span class="p">)</span>
		<span class="c">#read so many chars</span>
		<span class="n">data</span><span class="o">=</span><span class="n">infile</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">imglen</span><span class="p">)</span>

		<span class="c">#create file name</span>
		<span class="n">imgname</span><span class="o">=</span><span class="s">"image"</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">imgcount</span><span class="p">)</span> <span class="o">+</span> <span class="s">'.'</span> <span class="o">+</span> <span class="n">string</span><span class="o">.</span><span class="n">lower</span><span class="p">(</span><span class="n">imgtype</span><span class="p">)</span>
		<span class="k">try</span><span class="p">:</span>
			<span class="n">ofile</span><span class="o">=</span><span class="nb">open</span><span class="p">(</span><span class="n">imgname</span><span class="p">,</span> <span class="s">'wb'</span><span class="p">)</span>
		<span class="k">except</span><span class="p">:</span>
			<span class="k">print</span> <span class="s">'Could not open file '</span><span class="p">,</span> <span class="n">imgname</span><span class="p">,</span> <span class="s">' for writing...</span><span class="se">\n</span><span class="s">'</span>
			<span class="k">continue</span>
		
		<span class="k">if</span> <span class="n">ofile</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
			<span class="k">print</span> <span class="s">'Error while trying to create file '</span><span class="p">,</span> <span class="n">imgname</span><span class="p">,</span> <span class="s">'!</span><span class="se">\n</span><span class="s">'</span>
			<span class="k">continue</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="k">print</span> <span class="s">'Dumping image file '</span><span class="p">,</span> <span class="n">imgname</span><span class="p">,</span> <span class="s">'...</span><span class="se">\n</span><span class="s">'</span>
			<span class="n">ofile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
			<span class="n">ofile</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>

		<span class="c">#previous marker</span>
		<span class="n">x</span><span class="o">-=</span><span class="mf">1</span>

		
	<span class="k">print</span> <span class="s">'Dumped '</span><span class="p">,</span> <span class="n">imgcount</span><span class="p">,</span> <span class="s">' images</span><span class="se">\n</span><span class="s">'</span>
	
<span class="k">if</span> <span class="n">__name__</span><span class="o">==</span><span class="s">"__main__"</span><span class="p">:</span>
	<span class="n">main</span><span class="p">()</span>
</pre>
              </div> </td>
            </tr>
           </tbody>
          </table> 
         </div> 
        </div> 
        <div id="block-1" class="block"> 
         <div class="proseblock"> 
          <p>A piece of python script to dump out GIF/JPEG images from different files like powerpoints/webshots collections/screensavers etc. Sometimes I feel the need to do this, especially from powerpoints to have a better look at some of the embedded images. I dont know why anyone else would like to do it, but I felt that this was probably useful. :-)</p> 
         </div> 
        </div> 
       </div> 
       <div id="recipe_tools"> 
        <!-- AddThis Button BEGIN --> 
        <script type="text/javascript">var addthis_config = {services_compact: 'delicious,digg,reddit,twitter,email,favorites,more', username: 'xa-4b4f86a749591ece', data_use_flash: false};</script> 
        <a class="addthis_button"></a> 
        <script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js"></script> 
        <!-- AddThis Button END --> 
       </div> 
       <div class="print_only">
         Tags: 
        <a href="/recipes/tags/graphics/">graphics</a> 
       </div> 
       <h4 class="section_header">2 comments</h4> 
       <div id="comments"> 
        <div class="section comment" id="c1"> 
         <div class="comment_gutter"> 
          <div class="gravatar30"> 
           <img src="http://www.gravatar.com/avatar.php?gravatar_id=27d030e74950db38ad21aa4b5b82bcf2&amp;d=identicon&amp;s=30" height="30" width="30"> 
          </div> 
         </div> 
         <div class="comment_content"> 
          <div class="comment_header"> 
           <a class="comment_author " href="/recipes/users/4173150/">anaxagramma</a> 
           <span class="comment_time">6 years, 5 months ago</span> 
           <span class="comment_actions"> <a title="permalink" href="#c1">&nbsp;#</a> | <a title="flag comment as requiring moderator attention" href="/help/feedback/?type=flag&amp;subject=Flag comment 1 of recipe 189862&amp;text=Please indicate **why** you want to flag that comment.">flag</a> </span> 
          </div> 
          <div class="comment_body"> 
           <p>I've created a faster enchanted version with PNG and multiple JPG support, I try to post it as a comment in 2 parts. Part 1:</p> 
           <pre class="prettyprint"><code>import sys, os, time
## v0.2.1
#now write only GIF/JPEG
#v0.2.1 (by naxa):
#PNG and several other JPEG formats supported as well

## extra
BUFFER_LENGTH = 1024
# File signatures with their associated mime type
Types = {
    "\x47\x49\x46\x38\x37\x61": "GIF87a", #GIF87a type gif
    "\x47\x49\x46\x38\x39\x61": "GIF89a", #GIF89a type gif
    "\x89\x50\x4E\x47\x0D\x0A\x1A\x0A": "PNG",
    "\xFF\xD8\xFF\xE0": "JPG", #JFIF jpeg
    "\xFF\xD8\xFF\xE1": "JPG", #EXIF jpeg
    "\xFF\xD8\xFF\xE8": "JPG" #SPIFF jpeg
    }
imgsigs = Types.keys()
imgtypes = [Types[f] for f in imgsigs]
imgsigoffs = [0]*len(imgtypes)
## end of extra
imgmarker=[]

def main():
    if len(sys.argv) &lt; 2:
        print 'Usage: picdumper &lt;file&gt;\n'
        sys.exit(1)
    #
    if os.name == 'nt':
        # some hacks for windows CLI unicode problems
        filename = unicode(sys.argv[1], "mbcs") # better on recent windows'
        dirname = unicode( os.path.split( os.path.abspath(filename) )[0] )
        if not os.path.isdir(dirname): #couldn't find an easy solution yet for misencoded directory names
            print "Can't read directory, please try to navigate there manually\nand start me from the inside. Directory not found:\n%s"%dirname
            exit(3)
        file_list = os.listdir(unicode(dirname))
        file_map = dict( [ (f.encode("mbcs"), f) for f in file_list ] )
        # if two files are the same in 'mbcs' encoding, cannot help it yet
        if filename in file_map:
            filename = file_map[filename]
        print "Found", repr(filename)
        filename = os.path.abspath(filename)
    else: filename = os.path.abspath(sys.argv[1])

    img_filename_start = os.path.splitext( os.path.split(filename)[-1] )[0]
    if " " in img_filename_start: img_filename_start += " - image "
    else: img_filename_start += "__image"

    if not os.path.isfile(filename):
        print 'Error: No such file ', filename
        sys.exit(2)
    #
    #open file in binary mode
    try:
        infile = open(filename, 'rb')
    #dont bother about specific exceptions
    except Exception, e:
        print 'Could not open file to read !', filename
        print e
        sys.exit(3)
    #
    if infile is None:
        print 'Error opening file ', filename
        sys.exit(3)
    #
    # c = infile.read(1)
    c = infile.read(BUFFER_LENGTH)
    current_offset = 0
    lastmatch=""
    print "parsing file"
</code></pre> 
          </div> 
         </div> 
        </div> 
        <div class="section comment" id="c2"> 
         <div class="comment_gutter" id="clast"> 
          <div class="gravatar30"> 
           <img src="http://www.gravatar.com/avatar.php?gravatar_id=27d030e74950db38ad21aa4b5b82bcf2&amp;d=identicon&amp;s=30" height="30" width="30"> 
          </div> 
         </div> 
         <div class="comment_content"> 
          <div class="comment_header"> 
           <a class="comment_author " href="/recipes/users/4173150/">anaxagramma</a> 
           <span class="comment_time">6 years, 5 months ago</span> 
           <span class="comment_actions"> <a title="permalink" href="#c2">&nbsp;#</a> | <a title="flag comment as requiring moderator attention" href="/help/feedback/?type=flag&amp;subject=Flag comment 2 of recipe 189862&amp;text=Please indicate **why** you want to flag that comment.">flag</a> </span> 
          </div> 
          <div class="comment_body"> 
           <p>Part 2:</p> 
           <pre class="prettyprint"><code>    while c != '':
        #look for image sig
        for x,sig in enumerate(imgsigs):
            #find if c is first character of imgsig
            sig_inner_pos = 0
            while c[sig_inner_pos:].count(sig):
                pos = c.find(sig)
                sigpos=current_offset + pos #fpos=int(infile.tell())
                sig_inner_pos += pos + len(sig)
                imgpos=sigpos - imgsigoffs[x]

                #write position and image type to marker
                imgmarker.append((imgpos, imgtypes[x]))
                print "found %s.,"%len(imgmarker), imgtypes[x], repr(sig), "at", imgpos
                lastmatch=imgtypes[x]
            #
        #
        #read next char
        c=infile.read(BUFFER_LENGTH)
        current_offset += len(c)
    #
    posn=int(infile.tell())
    imgmarker.append((posn, lastmatch))

    print imgmarker
    #write images
    #rewind file
    infile.seek(0)
    imgcount=0
    #most collections store image in reverse
    #order that was appended
    x=len(imgmarker)-1
    decimal_digits = len(str(x))
    # while x&gt;=1:
    while x&gt;=2: #last one is dummy
        imgcount += 1
        imginfo=imgmarker[x]

        imgposn=imginfo[0]
        imgtype=imginfo[1]
        #this is the tricky part, to get the correct image
        #we need the file posn before previous one!, that
        #is we need to jump a position. Otherwise all images
        #will be junk or of small resolution.
        imginfoprev=imgmarker[x-2]
        imgposnprev=imginfoprev[0]
        #get length in chars
        imglen= imgposn - imgposnprev
        #seek to file position
        infile.seek(imgposnprev)
        #read so many chars
        data=infile.read(imglen)
        #create file name
        imgname=img_filename_start + "%0*d"%(decimal_digits, imgcount) + '.' + str.lower(imgtype)
        try:
            ofile=open(imgname, 'wb')
        except:
            print 'Could not open file ', imgname, ' for writing...\n'
            continue
        #
        if ofile is None:
            print 'Error while trying to create file ', imgname, '!\n'
            continue
        else:
            print 'Dumping image file', repr(imgname), '...'
            ofile.write(data)
            ofile.close()
        #previous marker
        x-=1
    #
    print 'Dumped', imgcount, 'images'
#

if __name__=="__main__":
    x = time.clock()
    main()
    print "Completed in %.5f sec"%(time.clock()-x) 
#
</code></pre> 
          </div> 
         </div> 
        </div> 
       </div> 
      </div> 
      <!-- end of content --> 
     </div> 
     <!-- end of as_content --> 
    </div> 
    <!-- end of as_content_wrapper --> 
    <div id="as_sidebar_wrapper"> 
     <div id="as_sidebar"> 
      <div id="as_sidebar_dynamic"> 
       <table class="gravatar"> 
        <tbody>
         <tr>
          <td style="width: 40px;"> <img src="http://www.gravatar.com/avatar.php?gravatar_id=9299885cc445f874c9be85cb2d1924b3&amp;d=identicon&amp;s=30" height="30" width="30"> </td>
          <td> Created by <a href="/recipes/users/760763/">Anand</a> on <span class="nowrap">Mon, 17 Mar 2003</span> (<a href="/recipes/tags/meta:license=psf/" title="Licensed under the PSF License">PSF</a>) </td>
         </tr> 
        </tbody>
       </table> 
       <table class="prevnext"> 
        <tbody>
         <tr class="prevnext-lang-python"> 
          <td><a class="prevnext_arrow" href="/recipes/189858-python-text-to-pdf-converter/?in=lang-python" title="Previous element in Python recipes">?</a></td> 
          <td class="prevnext_label"><a href="/recipes/langs/python">Python recipes (4591)</a></td> 
          <td><a class="prevnext_arrow" href="/recipes/189971-basic-linear-algebra-matrix/?in=lang-python" title="Next element in Python recipes">?</a></td> 
         </tr> 
         <tr class="prevnext-user-760763"> 
          <td><a class="prevnext_arrow" href="/recipes/189858-python-text-to-pdf-converter/?in=user-760763" title="Previous element in Anand's recipes">?</a></td> 
          <td class="prevnext_label"><a href="/recipes/users/760763">Anand's recipes (38)</a></td> 
          <td><a class="prevnext_arrow" href="/recipes/191017-backup-your-files/?in=user-760763" title="Next element in Anand's recipes">?</a></td> 
         </tr> 
        </tbody>
       </table> 
       <div id="tags"> 
        <h3>Tags</h3> 
        <ul class="nomachinetags flat">
         <li class="tag" id="tag-li-29"><a href="/recipes/tags/graphics/" class="tag">graphics</a></li>
        </ul>
        <a class="machine_tag_toggle"><span>? Show</span> machine tags (7)</a> 
        <a class="machine_tag_help" href="/help/tags/" title="help about tags and machine tags"><img src="/static/img/help.png"></a>
        <ul class="machinetags flat">
         <li class="tag" id="tag-li-2085"><a href="/recipes/tags/meta:language=python/" class="tag">meta:language=python</a></li>
         <li class="tag" id="tag-li-2116"><a href="/recipes/tags/meta:license=psf/" class="tag">meta:license=psf</a></li>
         <li class="tag" id="tag-li-2276"><a href="/recipes/tags/meta:loc=144/" class="tag">meta:loc=144</a></li>
         <li class="tag" id="tag-li-1399"><a href="/recipes/tags/meta:requires=string/" class="tag">meta:requires=string</a></li>
         <li class="tag" id="tag-li-1407"><a href="/recipes/tags/meta:requires=os/" class="tag">meta:requires=os</a></li>
         <li class="tag" id="tag-li-1405"><a href="/recipes/tags/meta:requires=sys/" class="tag">meta:requires=sys</a></li>
         <li class="tag" id="tag-li-1378"><a href="/recipes/tags/meta:score=1/" class="tag">meta:score=1</a></li>
        </ul> 
       </div> 
       <div id="requires"> 
        <h3>Required Modules</h3> 
        <ul class="flat"> 
         <li><a href="/recipes/langs/python/tags/meta:requires=sys/">sys</a> </li> 
         <li><a href="/recipes/langs/python/tags/meta:requires=os/">os</a> </li> 
         <li><a href="/recipes/langs/python/tags/meta:requires=string/">string</a> </li> 
        </ul> 
       </div> 
       <div id="otherinfo"> 
        <h3>Other Information and Tasks</h3> 
        <ul class="action_list"> 
         <li>Licensed under the <a href="/recipes/tags/meta:license=psf/">PSF License</a></li> 
         <li>Viewed 11162 times</li> 
         <li><a href="history/1/" title="Recipe history">Revision 1</a> </li> 
        </ul> 
       </div> 
      </div> 
      <div style="margin: 30px 15px;"> 
       <script type="text/javascript"><!--//<![CDATA[
  var m3_u = (location.protocol=='https:'?'https://ads.activestate.com/www/delivery/ajs.php':'http://ads.activestate.com/www/delivery/ajs.php');
  var m3_r = Math.floor(Math.random()*99999999999);
  if (!document.MAX_used) document.MAX_used = ',';
  document.write ("<scr"+"ipt type='text/javascript' src='"+m3_u);
  document.write ("?zoneid=1");
  document.write ('&amp;cb=' + m3_r);
  if (document.MAX_used != ',') document.write ("&amp;exclude=" + document.MAX_used);
  document.write (document.charset ? '&amp;charset='+document.charset : (document.characterSet ? '&amp;charset='+document.characterSet : ''));
  document.write ("&amp;loc=" + escape(window.location));
  if (document.referrer) document.write ("&amp;referer=" + escape(document.referrer));
  if (document.context) document.write ("&context=" + escape(document.context));
  if (document.mmm_fo) document.write ("&amp;mmm_fo=1");
  document.write ("'><\/scr"+"ipt>");
//]]>--></script>
       <noscript>
        <a href="http://ads.activestate.com/www/delivery/ck.php?n=aa9dea02&amp;cb=INSERT_RANDOM_NUMBER_HERE" target="_blank"><img src="http://ads.activestate.com/www/delivery/avw.php?zoneid=1&amp;cb=INSERT_RANDOM_NUMBER_HERE&amp;n=aa9dea02" border="0" alt=""></a>
       </noscript> 
      </div> 
     </div> 
     <!-- end of sidebar --> 
    </div> 
    <!-- end of as_sidebar_wrapper --> 
    <div class="as_clear">
     &nbsp;
    </div> 
   </div> 
   <!-- end of as_middle --> 
   <div id="as_footer_wrapper" class="as_footer2 nosearchhi"> 
    <div id="as_footer"> 
     <div class="as_footer2_section"> 
      <h4 class="as_footer2_header">Accounts</h4> 
      <ul> 
       <li><a href="https://account.activestate.com/signup/?activationnext=https%3A//code.activestate.com/recipes/189862-image-extractor/">Create Account (Free!)</a></li> 
       <li><a href="https://account.activestate.com/signin/?next=https%3A//code.activestate.com/recipes/189862-image-extractor/">Sign In</a></li> 
      </ul> 
     </div> 
     <div class="as_footer2_section"> 
      <h4 class="as_footer2_header">Code Recipes</h4> 
      <ul> 
       <li><a href="/recipes/">Recipes</a></li> 
       <li><a href="/recipes/langs/">Languages</a></li> 
       <li><a href="/recipes/tags/">Tags</a></li> 
       <li><a href="/recipes/users/">Authors</a></li> 
       <li><a href="/recipes/sets/">Sets</a></li> 
      </ul> 
     </div> 
     <div class="as_footer2_section"> 
      <h4 class="as_footer2_header">Feedback &amp; Information</h4> 
      <ul> 
       <li><a href="/about/">About</a></li> 
       <li><a href="/help/faq/">FAQ</a></li> 
       <li><a href="/help/terms/">Terms of Service</a></li> 
      </ul> 
     </div> 
     <div class="as_footer2_section"> 
      <h4 class="as_footer2_header">ActiveState</h4> 
      <ul> 
       <li class="as_footer2_feed"><a href="//www.activestate.com/blog">ActiveState Blog</a></li> 
       <li><a title="Perl Solutions" href="//www.activestate.com/perl">Perl Solutions</a></li> 
       <li><a title="Python Solutions" href="//www.activestate.com/python">Python Solutions</a></li> 
       <li><a title="Tcl Solutions" href="//www.activestate.com/tcl">Tcl Solutions</a></li> 
       <li><a title="Download Perl" href="//www.activestate.com/activeperl/downloads">Download ActivePerl</a></li> 
       <li><a title="Download Python" href="//www.activestate.com/activepython/downloads">Download ActivePython</a></li> 
       <li><a title="Download Tcl" href="//www.activestate.com/activetcl/downloads">Download ActiveTcl</a></li> 
       <li style="margin-top: 10px"><a href="//www.activestate.com/company">About ActiveState</a></li> 
       <li><a href="//www.activestate.com/company/careers">Careers</a></li> 
      </ul> 
     </div> 
     <div class="as_footer2_copyright"> 
      <p> <a href="//www.activestate.com/privacy-policy">Privacy Policy</a> | <a href="//www.activestate.com/company/contact-us">Contact Us</a> | <a href="//www.activestate.com/support">Support</a> </p> 
      <p>© 2017 ActiveState Software Inc. All rights reserved. ActiveState®, Komodo®, ActiveState Perl Dev Kit®, ActiveState Tcl Dev Kit®, ActivePerl®, ActivePython®, and ActiveTcl® are registered trademarks of ActiveState. All other marks are property of their respective owners.</p> 
     </div> 
    </div> 
    <!-- end of as_footer --> 
   </div> 
   <!-- end of as_footer_wrapper --> 
   <div id="as_messagebar" style="display: none;"> 
    <span style="float: right;"> <b onclick="$('#as_messagebar').slideUp(150);" style="cursor: pointer;">&nbsp;x&nbsp;</b> </span> 
    <span class="message">&nbsp;</span> 
    <span class="message-undo" style="display: none;"> 
     <form method="POST" action="">
      <button type="submit">
       <div style="display:none">
        <input type="hidden" name="csrfmiddlewaretoken" value="d8f4381e2249b7f538f0ad1ad8874154">
       </div><u>Undo</u></button>
     </form> </span> 
   </div> 
  </div> 
  <!-- end of as_wrapper --> 
  <script src="/static/prettify/prettify.js"></script> 
  <script type="text/javascript"> 
 $(function() {
    prettyPrint();
 });
</script> 
  <script src="/static/js/flash_detect_min.js" type="text/javascript"></script> 
  <script src="/static/zeroclipboard/ZeroClipboard.js" type="text/javascript"></script> 
  <script src="/static/js/recipes.js" type="text/javascript"></script> 
  <script type="text/javascript">
$(function() {
    Recipes.hijax_sidebar();
    // hide machine tags by default
    Recipes.toggle_machine_tags(false);
    Recipes.highlight_last_comment();
    // setup copy button
    Recipes.setup_copy_button("", "");
    // Pre-load wait animation used for voting buttons.
    $('<img src="/static/img/ajax-loader.gif"/>');
});
var in_param = "";
</script> 
  <!-- python tracking --> 
  <script type="text/javascript">
    /* <![CDATA[ */
    var google_conversion_id = 1071420929;
    var google_conversion_language = "en";
    var google_conversion_format = "3";
    var google_conversion_color = "666666";
    var google_conversion_label = "qWX3CIvQhAIQgazy_gM";
    var google_conversion_value = 0;
    /* ]]> */
    </script> 
  <script type="text/javascript" src="https://www.googleadservices.com/pagead/conversion.js">
    </script> 
  <noscript> 
   <div style="display:inline;"> 
    <img height="1" width="1" style="border-style:none;" alt="" src="https://www.googleadservices.com/pagead/conversion/1071420929/?label=qWX3CIvQhAIQgazy_gM&amp;guid=ON&amp;script=0"> 
   </div> 
  </noscript>   
 </body>
</html>