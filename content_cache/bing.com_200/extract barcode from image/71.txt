<!doctype html>
<html>
 <head> 
  <meta charset="utf-8"> 
  <title>PDFxStream — PDF Text, Image, and Form Extraction for Java and .NET –&nbsp;Snowtide</title> 
  <meta name="verify-v1" content="0M58DS8kmzLjo6/xySYDOZbaRue4VJjU13UMoh2AmSo="> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
  <link rel="shortcut icon" href="/assets/favicon.ico" type="image/x-icon"> 
  <link rel="stylesheet" type="text/css" href="/assets/template/reset.css" media="screen"> 
  <link rel="stylesheet" type="text/css" href="/assets/template/960-min.css" media="screen"> 
  <link rel="stylesheet" type="text/css" href="/assets/template/style.css" media="screen"> 
  <script type="text/javascript" src="/assets/template/ecma262.js"></script> 
  <script type="text/javascript" src="/assets/template/jquery-1.5.1.min.js"></script> 
  <script type="text/javascript" src="/assets/template/jquery.scrollTo-1.4.2-min.js"></script> 
  <script type="text/javascript" src="/assets/template/jquery-ui-1.8.16.custom.min.js"></script> 
  <link rel="stylesheet" type="text/css" href="/assets/template/ui-lightness/jquery-ui-1.8.16.custom.css" media="screen"> 
  <script type="text/javascript" src="/assets/syntaxhighlighter_3.0.83/scripts/shCore.js"></script> 
  <script type="text/javascript" src="/assets/syntaxhighlighter_3.0.83/scripts/shBrushJava.js"></script> 
  <script type="text/javascript" src="/assets/syntaxhighlighter_3.0.83/scripts/shBrushXml.js"></script> 
  <script type="text/javascript" src="/assets/syntaxhighlighter_3.0.83/scripts/shBrushBash.js"></script> 
  <script type="text/javascript" src="/assets/syntaxhighlighter_3.0.83/scripts/shBrushCSharp.js"></script> 
  <link type="text/css" rel="stylesheet" href="/assets/syntaxhighlighter_3.0.83/styles/shCoreEclipse.css"> 
  <script type="text/javascript">SyntaxHighlighter.defaults.toolbar=false;SyntaxHighlighter.all();</script> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-586655-1', 'auto');
  ga('send', 'pageview');

</script> 
  <script type="text/javascript">//
  $(function () {
     $("a").click(function (e) {
    	var tgtHash = $(this).attr("href").substr(1);
      var tgt = $("a[name='" + tgtHash + "']");
      if (tgt.length) {
        e.preventDefault();
        $.scrollTo(tgt, 750, function () { document.location.hash = tgtHash; });
      }
     });

     var escapes = {'&':'&amp;', '<':'&lt;', '>':'&gt;', '\t':'  ', '    ':'  '};
     var brushAliases = {cs: "csharp"};
     var updateQuickstart = function () {
       var lang = $("#quickstart select.lang").val();
       var examples = quickstartCode[lang];
       var task = $("#quickstart select.task").val();
       var code = examples[task];
       if (code) {
         var pre = $("<pre>").append(code.content.replace(/([&<>\t]|    )/g,
                function (s) { return escapes[s] || s; }));
         $("#quickstart-code").empty().append(pre);
         SyntaxHighlighter.highlight({brush: brushAliases[lang] || lang, gutter: false}, pre.get(0));
       } else {
         $("#quickstart-code").empty().append($("<p id='nocode'>We haven't added sample code for this language / task combination yet — sorry!</p>"));  
       }
       
       $("span.lang").empty().append($("#quickstart select.lang option:selected").text());
     };
     
     $("#quickstart select").change(updateQuickstart);
     updateQuickstart();
  });
//</script> 
 </head> 
 <body> 
  <div id="header"> 
   <div class="container_16"> 
    <a href="/" class="logo"><img src="/assets/template/logo-snowtide-white-small.png"></a> 
    <div class="navlinks"> 
     <div class="left"> 
      <a href="/">Home</a> 
      <a href="/customers">Our Customers</a> 
      <a href="/help">Help</a> 
      <a href="/contact">Contact</a> 
     </div> 
     <div class="right"> 
      <a class="highlight" href="/downloads">Downloads</a> 
      <a class="highlight" href="http://www.pdfdata.io">Cloud API</a> 
      <a class="highlight" href="/purchasing"><strong>Buy</strong></a> 
     </div> 
    </div> 
    <div class="clear"></div> 
   </div> 
  </div> 
  <div class="clear"></div> 
  <div id="content"> 
   <div class="container_16" id="main"> 
    <div class="grid_16"> 
     <div class="grid_8 alpha" id="title"> 
      <p><img src="/assets/template/logo-pdfxstream.png" alt="PDFxStream"></p> 
      <h2> PDFxStream is used by the most demanding software development organizations to extract <a href="#pdfts">text</a>, <a href="#pdfis">images</a>, and <a href="#pdffs">form data</a> from <a href="/customers">billions of PDF documents every year</a>. </h2> 
      <p> Available on <a class="punch" href="#arch">Java <em>or</em> .NET</a>, PDFxStream provides <a class="punch" href="#pdfxs-base">complete PDF compatibility</a> and <a class="punch" href="#perf">unbeatable performance</a> integrated into your application in 10 minutes or less. Enjoy the simplicity of a single, unified API, while <a href="/purchasing-faq#alacarte" class="punch">paying only for the capabilities you need</a>. </p> 
     </div> 
     <div class="grid_8 omega" style="padding-top: 2.5em"> 
      <img src="/assets/pdfxs_architecture.png"> 
     </div> 
    </div> 
    <div id="quickstart" class="grid_16 section"> 
     <div class="grid_16 alpha"> 
      <h2 class="center"> Getting data out of PDF documents really is <em>this</em> easy </h2> 
     </div> 
     <div class="grid_6 alpha"> 
      <div>
        Language: 
       <select class="lang"><option selected value="java">Java</option><option value="cs">C#</option></select> 
      </div> 
      <div>
        What PDF data do you need? 
       <select class="task"><option value="qs-all-text">All text</option><option value="qs-images">All images</option><option value="qs-one-page-text">Text from one page</option><option value="qs-metadata">Key/value document metadata</option><option value="qs-form-data">Interactive form data</option><option value="qs-bookmarks">Bookmarks (table of contents)</option><option value="qs-xmp">XMP metadata</option><option value="qs-links">All URL/URI links</option><option value="qs-decrypt">All text from an encrypted, password-protected PDF</option></select> 
      </div> 
      <p> Just <a href="/downloads">download PDFxStream</a> for Java or .NET to use these examples as the foundation for your own PDF data extraction solutions. </p> 
      <p> <a href="/downloads" class="highlightbutton" style="margin: 0px">Download</a><a href="/help" class="highlightbutton">Learn and Build</a> </p> 
     </div> 
     <div class="grid_10 omega"> 
      <div id="quickstart-code"></div> 
     </div> 
    </div> 
    <div class="clear"></div> 
    <div class="section grid_16"> 
     <h2 class="headline"> <a name="customers"></a>PDFxStream is used by <a href="/customers">companies and governments around the world</a> to process <em>billions</em> of documents yearly. </h2> 
     <p id="logos"><a href="/customers/State-of-Michigan-Deloitte-and-Touche"><img class="logo" src="/assets/logos/michigan.png"></a><a href="/customers/State-of-Michigan-Deloitte-and-Touche"><img class="logo" src="/assets/logos/deloitte.png"></a><a href="/customers/Gwava"><img class="logo" src="/assets/logos/gwava.png"></a><a href="/customers/Zinio"><img class="logo" src="/assets/logos/zinio.png"></a><a href="/customers/National-Institutes-of-Health"><img class="logo" src="/assets/logos/nih.png"></a></p> 
    </div> 
   </div> 
   <div class="container_16"> 
    <div class="section grid_16"> 
     <h2 class="headline"> <a name="arch"></a>Java or .NET, PDFxStream is available wherever you need to be. </h2> 
     <div class="grid_8 alpha"> 
      <p><span class="punch">PDFxStream for Java</span> is written in 100% pure Java, with no native components or dependencies. Its only requirement is a compliant Java 1.5 (or higher) JVM.</p> 
      <p> PDFxStream is suitable for use in demanding desktop and server applications, including those with significant concurrency requirements. It has been designed to be amenable to parallelization, so that you can <a href="/help/pdftextstream-parallelization">fully utilize your hardware and infrastructure investments</a> when processing PDF documents without worrying about locking or race conditions. </p> 
      <p>Of course, being a Java library, PDFxStream may be used by any JVM language that supports interoperability with Java APIs, including Clojure, Scala, Groovy, JRuby, Jython, and so on.</p> 
     </div> 
     <div class="grid_8 omega"> 
      <p> <span class="punch">PDFxStream for .NET</span> is produced by translating the standard PDFxStream for Java binary into a pure managed .NET 2.0 assembly. This translation process is complete, and does not entail any side effects that impair its functionality, robustness, API's, or performance. </p> 
      <p>All of the concurrency and parallelism guarantees provided by PDFxStream for Java apply to its .NET cousin.</p> 
      <p>PDFxStream for .NET may be used by any .NET language, including C#, VB.NET, F#, managed C++, and so on.</p> 
      <p>Full details of PDFxStream for .NET are available <a href="/help/pdfxstream.net">here</a>.</p> 
     </div> 
    </div> 
   </div> 
   <div class="container_16"> 
    <div class="section grid_16"> 
     <h2 class="headline"> <a name="perf"></a>PDFTextStream is the fastest component available for extracting text and metadata from PDF documents, period. </h2> 
     <div class="grid_8 alpha"> 
      <p>PDFTextStream has two main goals when it extracts data from a PDF document: do it accurately, and do it fast.</p> 
      <p> Which of those two attributes is more important to your application is something only you can decide. However, in many environments, text extraction performance isn't just a nice-to-have: it's critical to your project's success. That's why we're glad to be able to make such a bold claim without reservation, and <a href="/performance">we have the numbers to back it up</a>. </p> 
     </div> 
     <div class="grid_8 omega"> 
      <img src="/assets/pdfts_benchmark.gif"> 
     </div> 
    </div> 
    <div class="section grid_16"> 
     <h2 class="headline"> <a name="features"></a>PDFxStream: Four PDF data extraction components, one unified API </h2> 
     <div class="grid_8 alpha"> 
      <p>Each component included in PDFxStream's API addresses a different class of data available to be extracted from PDF documents: </p> 
      <ul> 
       <li> <a class="punch" href="#pdfxs-base">PDFxStream Base</a> is the foundation upon which all other PDFxStream features are built. It implements basic PDF file capabilities, and provides access to the simplest pools of data in PDF files. </li> 
       <li><a class="punch" href="#pdfts">PDFTextStream</a> provides comprehensive PDF text extraction capabilities</li> 
       <li><a class="punch" href="#pdfis">PDFImageStream</a> provides comprehensive PDF image extraction capabilities</li> 
       <li><a class="punch" href="#pdffs">PDFFormStream</a> provides easy extraction and filling of interactive and XFA forms found in PDF documents</li> 
      </ul> 
      <p> Having one dependency and one API to satisfy your PDF data extraction requirements simplifies project management and minimizes development costs. Even so, you only need to <a href="/purchasing-faq#alacarte">pay for the components you use</a>. </p> 
     </div> 
     <div class="grid_8 omega"> 
      <img src="/assets/pdfxs_architecture.png" style="width:460px"> 
     </div> 
     <div class="clear"></div> 
     <div class="grid_8 alpha"> 
      <h3><a name="pdfts">PDFTextStream</a></h3> 
      <ul> 
       <li>Unicode text extraction, including support for Chinese, Japanese, and Korean (CJK) in both horizontal and vertical writing modes</li> 
       <li><a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/OutputHandler.html"><code>OutputHandler</code></a> API for efficiently customizing PDF text extract formatting </li> 
       <li><a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/RegionOutputTarget.html">Regional text extraction</a>, ideal for extracting data from fixed-format forms </li> 
       <li>Complete support for embedded and standard fonts and character encodings: 
        <ul> 
         <li>Type 0, 1, and 1C</li> 
         <li>TrueType</li> 
         <li>Identity-H and Identity-V encodings</li> 
         <li>CMap encodings (including hundreds of Chinese, Japanese, and Korean character sets, both horizontal and vertical writing modes)</li> 
        </ul> </li> 
       <li>Automated layout processing, providing a <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/Page.html#getTextContent--">traversable PDF document model</a> including inferred block, line, column, and table structure</li> 
       <li>Support for extracting text from "searchable image" PDFs</li> 
       <li>Support for all varieties of rotated text</li> 
       <li>Basic detection and inference of <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/layout/Table.html">tabular data</a> and a set of <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/util/TableUtils.html">table-extraction utilities</a> </li> 
       <li>Support for <a href="/help/indexing-pdf-documents-with-lucene-and-pdfxstream">indexing PDF documents with Apache Lucene</a> via <a href="http://github.com/snowtide/lucene-pdf">lucene-pdf</a></li> 
      </ul> 
     </div> 
     <div class="grid_8 omega"> 
      <h3><a name="pdfis">PDFImageStream</a></h3> 
      <ul> 
       <li>Decompression and decoding of dozens of PDF image types</li> 
       <li>Rendering of images to <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest//com/snowtide/pdf/layout/Image.html#bitmap--">on-screen graphics contexts</a> (<code>java.awt.image.BufferedImage</code> on Java, or <code>System.Drawing.Bitmap</code> on .NET) and <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/layout/Image.html#data--">saving to disk</a> in <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/layout/Image.Format.html">familiar formats</a>: 
        <ul> 
         <li>JPEG</li> 
         <li>TIFF</li> 
         <li>GIF</li> 
         <li>PNG</li> 
         <li>BMP</li> 
        </ul> </li> 
       <li>Automatic stitching of image tiles and strips</li> 
      </ul> 
      <h3><a name="pdffs">PDFFormStream</a></h3> 
      <ul> 
       <li>Support for extracting "Acroform" (interactive) form data from all types of fields: 
        <ul> 
         <li>Text</li> 
         <li>Dropdowns ("Choice" fields)</li> 
         <li>Radio buttons</li> 
         <li>Checkboxes</li> 
         <li>Pushbuttons</li> 
         <li>Signatures</li> 
        </ul> </li> 
       <li>Support for extracting XFA form data</li> 
       <li>Support for filling "Acroform" fields, writing updated PDF documents</li> 
      </ul> 
     </div> 
     <div class="grid_16 alpha omega"> 
      <p> There's much, much more to the PDFxStream API than we can reasonably list here. Check out the <a href="/help">PDFxStream developer's guide and API reference</a> to learn about all that PDFxStream has to offer. </p> 
     </div> 
    </div> 
    <div class="section grid_16"> 
     <h2 class="headline"> <a name="pdfxs-base">PDFxStream Base: complete PDF format compatibility and basic data extraction capabilities</a> </h2> 
     <div class="grid_8 alpha"> 
      <p> The official PDF file format specification (<a href="http://www.adobe.com/devnet/pdf/pdf_reference.html">published by Adobe</a>) is large and complex. PDF files can be rich, dynamic documents, and getting to all of the interesting and useful parts of them (i.e. their content, text, metadata, etc) is a daunting task. </p> 
      <p>Further, Adobe's specification only provides normative descriptions of how PDF documents should be constructed. Experience shows that applications must often process PDF documents from multiple sources, each of which may (and do) generate PDF files that sometimes bend and often break the "official" PDF specification —&nbsp;similar to how web browsers are forced to support broken and malformed HTML documents as best as they can.</p> 
      <p>This is just one of the many reasons why continually supporting and maintaining PDFxStream is a never-ending task. Doing anything else would prevent us from guaranteeing maximum compatibility with all PDF document formats and variants "in the field", regardless of their source or to what degree they violate certain rules of good PDF file format etiquette.</p> 
      <h3>PDF Format Support Details</h3> 
      <p> The range of PDF file format features (and quirks!) that PDFxStream supports is broad and deep. To the right is a partial list of the major facets of the PDF specification that PDFxStream supports. If you are aware of a particular detail that is not listed, then please feel free to <a href="/contact">contact us</a> to confirm that PDFxStream supports what you need. </p> 
     </div> 
     <div class="grid_8 omega"> 
      <p>PDFxStream Base implements a raft of foundational PDF capabilities and offers access to many types of PDF data:</p> 
      <ul> 
       <li>Compatibility with all versions of the PDF document specification, from v1.0 (corresponding to Acrobat 1) to v1.7 (corresponding to Acrobat 8 and higher). </li> 
       <li>Support for decryption of PDF documents encrypted with or without a password using 40-bit, 128-bit, 256-bit, and variable bitlength ciphers (including RC4 and AES)</li> 
       <li> Automatic "repair" of PDF documents to account for common malformations and irregularities </li> 
       <li>Extraction of <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/Document.html#getAllAnnotations--">PDF annotations</a> (links, text notes, etc)</li> 
       <li>Extraction of <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/Document.html#getAllEmbeddedFiles--">embedded files and attachments</a></li> 
       <li>Extraction of <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/Document.html#getBookmarks--">PDF bookmarks</a> (a.k.a. outline, table of contents)</li> 
       <li>Extraction of document metadata, as either <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/Document.html#getAttributeMap--">key/value pairs</a> or <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/Document.html#getXmlMetadata--">XML</a></li> 
       <li>Extraction of <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/Page.html#getCharacters--">raw character data</a></li> 
       <li>Extraction of image metadata, including image <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/layout/Image.html#bitmapBounds--">dimensions</a>, <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/layout/Bounded.html#bounds--">locations</a>, and <a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/layout/Image.html#dataFormat--">types</a></li> 
       <li><a href="http://downloads.snowtide.com/javadoc/PDFxStream/latest/com/snowtide/pdf/util/MergeUtil.html">PDF file merging</a></li> 
      </ul> 
      <p> All of the other components that comprise PDFxStream build on top of PDFxStream Base's foundation. </p> 
     </div> 
    </div> 
    <div class="section grid_16"> 
     <h2 class="headline">If you've gotten this far, PDFxStream may be perfect for your project.</h2> 
     <p class="center"> <a href="/downloads" class="highlightbutton">Download &amp; try it</a> <a href="/purchasing" class="highlightbutton">Buy / Quote PDFxStream</a> </p> 
    </div> 
   </div> 
   <script>var quickstartCode = {"java":{"qs-decrypt":{"example":"qs-decrypt","language":"java","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/DecryptWithPassword.java","content":"import com.snowtide.PDF;\nimport com.snowtide.pdf.Document;\nimport com.snowtide.pdf.OutputTarget;\n\npublic class DecryptWithPassword {\n    public static void main (String[] args) throws java.io.IOException {\n        String pdfFilePath = args[0];\n        Document pdfts = PDF.open(pdfFilePath, args[1].getBytes());\n        StringBuilder text = new StringBuilder(1024);\n        pdfts.pipe(new OutputTarget(text));\n        pdfts.close();\n        System.out.println(text);\n    }\n}"},"qs-metadata":{"example":"qs-metadata","language":"java","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractMetadata.java","content":"import com.snowtide.PDF;\nimport com.snowtide.pdf.Document;\n\npublic class ExtractMetadata {\n    public static void main (String[] args) throws java.io.IOException {\n        String pdfFilePath = args[0];\n\n        System.out.println(\"All document metadata from \" + pdfFilePath + \":\");\n        Document doc = PDF.open(pdfFilePath);\n        for (String key : doc.getAttributeKeys()) {\n            System.out.printf(\"%s: %s\", key, doc.getAttribute(key));\n            System.out.println();\n        }\n        doc.close();\n    }\n}"},"qs-all-text":{"example":"qs-all-text","language":"java","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractTextAllPages.java","content":"import com.snowtide.PDF;\nimport com.snowtide.pdf.Document;\nimport com.snowtide.pdf.OutputTarget;\n\npublic class ExtractTextAllPages {\n    public static void main (String[] args) throws java.io.IOException {\n        String pdfFilePath = args[0];\n\n        Document pdf = PDF.open(pdfFilePath);\n        StringBuilder text = new StringBuilder(1024);\n        pdf.pipe(new OutputTarget(text));\n        pdf.close();\n        System.out.println(text);\n    }\n}"},"qs-images":{"example":"qs-images","language":"java","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractImages.java","content":"import com.snowtide.PDF;\nimport com.snowtide.pdf.Document;\nimport com.snowtide.pdf.Page;\nimport com.snowtide.pdf.layout.Image;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\n\npublic class ExtractImages {\n    public static void main (String[] args) throws java.io.IOException {\n        String pdfFilePath = args[0];\n        File outputDir = new File(args[1]);\n        if (!outputDir.exists()) outputDir.mkdirs();\n\n        Document pdf = PDF.open(pdfFilePath);\n        for (Page p : pdf.getPages()) {\n            int i = 0;\n            for (Image img : p.getImages()) {\n                FileOutputStream out = new FileOutputStream(\n                        new File(outputDir, String.format(\"%s-%s.%s\",\n                                p.getPageNumber(), i, img.dataFormat().name().toLowerCase())));\n                out.write(img.data());\n                out.close();\n                i++;\n            }\n            System.out.printf(\"Found %s images on page %s\", p.getImages().size(), p.getPageNumber());\n            System.out.println();\n        }\n    }\n}"},"qs-one-page-text":{"example":"qs-one-page-text","language":"java","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractTextOnePage.java","content":"import java.io.IOException;\n\nimport com.snowtide.PDF;\nimport com.snowtide.pdf.Document;\nimport com.snowtide.pdf.OutputTarget;\n\npublic class ExtractTextOnePage {\n    public static void main (String[] args) throws IOException {\n        String pdfFilePath = args[0];\n        Document pdfts = PDF.open(pdfFilePath);\n        StringBuilder text = new StringBuilder(1024);\n        pdfts.getPage(0).pipe(new OutputTarget(text));\n        pdfts.close();\n        System.out.println(text);\n    }\n}"},"qs-bookmarks":{"example":"qs-bookmarks","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/AccessBookmarks.java","language":"java","content":"import com.snowtide.PDF;\nimport com.snowtide.pdf.Bookmark;\nimport com.snowtide.pdf.Document;\n\npublic class AccessBookmarks {\n    public static void main (String[] args) throws java.io.IOException {\n        String pdfFilePath = args[0];\n        \n        Document doc = PDF.open(pdfFilePath);\n        Bookmark root = doc.getBookmarks();\n        if (root == null) {\n            System.out.println(pdfFilePath + \" does not contain any bookmarks.\");\n        } else {\n            for (Bookmark b : root.getAllDescendants()) {\n                System.out.printf(\"Bookmark '%s' points at page %s, bounds %s, %s, %s, %s\",\n                        b.getTitle(), b.getPageNumber(),\n                        b.getLeftBound(), b.getBottomBound(),\n                        b.getRightBound(), b.getTopBound());\n                System.out.println();\n            }\n        }\n\n        doc.close();\n    }\n}"},"qs-form-data":{"example":"qs-form-data","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractFormData.java","language":"java","content":"import com.snowtide.PDF;\nimport com.snowtide.pdf.Document;\nimport com.snowtide.pdf.forms.*;\n\npublic class ExtractFormData {\n    public static void main (String[] args) throws java.io.IOException {\n        String pdfFilePath = args[0];\n        Document pdfts = PDF.open(pdfFilePath);\n        AcroForm form = (AcroForm)pdfts.getFormData();\n        \n        // access specific fields directly\n        AcroTextField projectName = (AcroTextField)form.getField(\"color.1\");\n        AcroCheckboxField isPrivateNonProfit =\n                (AcroCheckboxField)form.getField(\"color.10-privatenonprofit\");\n\n        System.out.printf(\"Project %s %s run by a nonprofit organization\",\n                projectName.getValue(),\n                isPrivateNonProfit.isChecked() ? \"is\" : \"is not\");\n        System.out.println();\n        \n        // access all fields (just a sampling of available data/functionality)\n        System.out.println(String.format(\"All form data from %s:\", pdfFilePath));\n        for (AcroFormField field : form) {\n            Object ftype = field.getType();\n            if (ftype == AcroFormField.FIELD_TYPE_TEXT) {\n                System.out.printf(\"Field %s is a text box; value: %s\",\n                        field.getFullName(), field.getValue());\n            } else if (ftype == AcroFormField.FIELD_TYPE_BUTTON) {\n                switch (((AcroButtonField)field).getButtonType()) {\n                    case AcroButtonField.BUTTON_TYPE_PUSHBUTTON:\n                        System.out.printf(\"Field %s is a pushbutton; value: %s\",\n                                field.getFullName(), field.getValue());\n                        break;\n                    case AcroButtonField.BUTTON_TYPE_CHECKBOX:\n                        System.out.printf(\"Field %s is a checkbox; value: %s; is checked? %s\",\n                                field.getFullName(), field.getValue(),\n                                ((AcroCheckboxField)field).isChecked());                        \n                        break;\n                    case AcroButtonField.BUTTON_TYPE_RADIO_GROUP:\n                        System.out.printf(\"Field %s is a radio button group; value: %s; possible values: %s\",\n                                field.getFullName(), field.getValue(),\n                                ((AcroRadioButtonGroupField)field).getPossibleValues());\n                        break;\n                }\n            } else if (ftype == AcroFormField.FIELD_TYPE_CHOICE) {\n                System.out.printf(\"Field %s is 'select' dropdown; value: %s; display label: %s\",\n                        field.getFullName(), field.getValue(),\n                        ((AcroChoiceField)field).getDisplayValue((String)field.getValue()));\n            } else if (ftype == AcroFormField.FIELD_TYPE_SIGNATURE) {\n                System.out.printf(\"Field %s is a signature; value: %s\",\n                        field.getFullName(), field.getValue());\n            } else {\n                System.out.printf(\"Field %s is of unknown type; value: %s\",\n                        field.getFullName(), field.getValue());\n            }\n            System.out.println();\n        }\n\n        pdfts.close();\n    }\n}"},"qs-xmp":{"example":"qs-xmp","language":"java","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractXMPMetadata.java","content":"import java.io.*;\n\nimport com.snowtide.PDF;\nimport com.snowtide.pdf.Document;\n\npublic class ExtractXMPMetadata {\n    public static void main (String[] args) throws IOException {\n        String pdfFilePath = args[0];\n        \n        Document doc = PDF.open(pdfFilePath);\n        String outPath = args[0] + \".xmp.xml\";\n        FileOutputStream s = new FileOutputStream(outPath);\n        s.write(doc.getXmlMetadata());\n        s.close();\n        doc.close();\n        \n        System.out.println(\"Wrote Adobe XMP metadata to \" + outPath);\n    }\n}"},"qs-links":{"example":"qs-links","language":"java","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractLinks.java","content":"import com.snowtide.PDF;\nimport com.snowtide.pdf.Document;\nimport com.snowtide.pdf.annot.*;\n\npublic class ExtractLinks {\n    public static void main (String[] args) throws java.io.IOException {\n        String pdfFilePath = args[0];\n\n        Document doc = PDF.open(pdfFilePath);\n        for (Annotation a : doc.getAllAnnotations()) {\n            if (a instanceof LinkAnnotation) {\n                LinkAnnotation link = (LinkAnnotation)a;\n                if (link.getURI() != null) {\n                    System.out.printf(\n                            \"Found outgoing link on page %s, bounds %s, uri: %s\",\n                            link.pageNumber(), link.bounds(), link.getURI());\n                    System.out.println();\n                }\n            }\n        }\n        \n        doc.close();\n    }\n}"}},"cs":{"qs-metadata":{"example":"qs-metadata","language":"cs","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractMetadata.cs","content":"using com.snowtide;\nusing com.snowtide.pdf;\n\nclass ExtractMetadata\n{\n    public static void Main(string[] args)\n    {   \n        string pdfFilePath = args[0];\n        System.Console.WriteLine(\"All document metadata from {0}:\", pdfFilePath);\n        using (Document doc = PDF.open(pdfFilePath))\n        {\n            foreach (string attrKey in doc.getAttributeKeys().toIEnumerable<string>())\n            {\n                System.Console.WriteLine(\"{0}: {1}\", attrKey, doc.getAttribute(attrKey));\n            }\n        }\n    }\n}"},"qs-images":{"example":"qs-images","language":"cs","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractImages.cs","content":"using com.snowtide;\r\nusing com.snowtide.pdf;\r\nusing com.snowtide.pdf.layout;\r\nusing System.IO;\r\n\r\nclass ExtractImages\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        string pdfFilePath = args[0];\r\n        Directory.CreateDirectory(args[1]);\r\n\r\n        using (Document pdf = PDF.open(pdfFilePath))\r\n        {\r\n            foreach (Page p in pdf.getPages().toIEnumerable<Page>()) {\r\n                int i = 0;\r\n                foreach (Image img in p.getImages().toIEnumerable<Image>()) {\r\n                    string imagePath = Path.Combine(args[1], string.Format(\r\n                        \"{0}-{1}.{2}\", p.getPageNumber(), i, img.dataFormat().name().ToLower()));\r\n                    File.WriteAllBytes(imagePath, img.data());\r\n                    i++;\r\n                }\r\n                System.Console.WriteLine(\"Found {0} images on page {1}\", p.getImages().size(), p.getPageNumber());\r\n            }\r\n        }\r\n    }\r\n}"},"qs-bookmarks":{"example":"qs-bookmarks","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/AccessBookmarks.cs","language":"cs","content":"?using com.snowtide;\r\nusing com.snowtide.pdf;\r\n\r\npublic class AccessBookmarks\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        string pdfFilePath = args[0];\r\n        using (Document doc = PDF.open(pdfFilePath))\r\n        {\r\n            Bookmark root = doc.getBookmarks();\r\n            if (root == null)\r\n            {\r\n                System.Console.WriteLine(\"{0} does not contain any bookmarks.\", pdfFilePath);\r\n            }\r\n            else\r\n            {\r\n                foreach (Bookmark b in root.getAllDescendants().toIEnumerable<Bookmark>())\r\n                {\r\n                    System.Console.WriteLine(\"Bookmark '{0}' points at page {1}, bounds {2}, {3}, {4}, {5}\",\r\n                            b.getTitle(), b.getPageNumber(),\r\n                            b.getLeftBound(), b.getBottomBound(),\r\n                            b.getRightBound(), b.getTopBound());\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"},"qs-form-data":{"example":"qs-form-data","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractFormData.cs","language":"cs","content":"using com.snowtide;\r\nusing com.snowtide.pdf;\r\nusing com.snowtide.pdf.forms;\r\n\r\nclass ExtractFormData\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        string pdfFilePath = args[0];\r\n        \r\n        using (Document doc = PDF.open(pdfFilePath))\r\n        {\r\n            AcroForm form = (AcroForm)doc.getFormData();\r\n\r\n            // access specific fields directly\r\n            AcroTextField projectName = (AcroTextField)form.getField(\"color.1\");\r\n            AcroCheckboxField isPrivateNonProfit =\r\n                    (AcroCheckboxField)form.getField(\"color.10-privatenonprofit\");\r\n\r\n            System.Console.WriteLine(\"Project {0} {1} run by a nonprofit organization\",\r\n                    projectName.getValue(),\r\n                    isPrivateNonProfit.isChecked() ? \"is\" : \"is not\");\r\n\r\n            // access all fields (just a sampling of available data/functionality)\r\n            System.Console.WriteLine(\"All form data from {0}:\", pdfFilePath);\r\n            foreach (AcroFormField field in form.toIEnumerable<AcroFormField>())\r\n            {\r\n                object ftype = field.getType();\r\n\r\n                if (ftype == AcroFormField.__Fields.FIELD_TYPE_TEXT)\r\n                {\r\n                    System.Console.WriteLine(\"Field {0} is a text box; value: {1}\",\r\n                            field.getFullName(), field.getValue());\r\n                }\r\n                else if (ftype == AcroFormField.__Fields.FIELD_TYPE_BUTTON)\r\n                {\r\n                    switch (((AcroButtonField)field).getButtonType())\r\n                    {\r\n                        case AcroButtonField.BUTTON_TYPE_PUSHBUTTON:\r\n                            System.Console.WriteLine(\"Field {0} is a pushbutton; value: {1}\",\r\n                                    field.getFullName(), field.getValue());\r\n                            break;\r\n                        case AcroButtonField.BUTTON_TYPE_CHECKBOX:\r\n                            System.Console.WriteLine(\"Field {0} is a checkbox; value: {1}; is checked? {2}\",\r\n                                    field.getFullName(), field.getValue(),\r\n                                    ((AcroCheckboxField)field).isChecked());\r\n                            break;\r\n                        case AcroButtonField.BUTTON_TYPE_RADIO_GROUP:\r\n                            System.Console.WriteLine(\"Field {0} is a radio button group; value: {1}; possible values: {2}\",\r\n                                    field.getFullName(), field.getValue(),\r\n                                    ((AcroRadioButtonGroupField)field).getPossibleValues());\r\n                            break;\r\n                    }\r\n                }\r\n                else if (ftype == AcroFormField.__Fields.FIELD_TYPE_CHOICE)\r\n                {\r\n                    System.Console.WriteLine(\"Field {0} is 'select' dropdown; value: {1}; display label: {2}\",\r\n                            field.getFullName(), field.getValue(),\r\n                            ((AcroChoiceField)field).getDisplayValue((string)field.getValue()));\r\n                }\r\n                else if (ftype == AcroFormField.__Fields.FIELD_TYPE_SIGNATURE)\r\n                {\r\n                    System.Console.WriteLine(\"Field {0} is a signature; value: {1}\",\r\n                            field.getFullName(), field.getValue());\r\n                }\r\n                else\r\n                {\r\n                    System.Console.WriteLine(\"Field {0} is of unknown type; value: {1}\",\r\n                            field.getFullName(), field.getValue());\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"},"qs-all-text":{"example":"qs-all-text","language":"cs","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractTextAllPages.cs","content":"using com.snowtide;\r\nusing com.snowtide.pdf;\r\nusing java.io;\r\n\r\nclass ExtractTextAllPages\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        string pdfFilePath = args[0];\r\n        StringWriter text = new StringWriter(1024);\r\n        using (Document doc = PDF.open(pdfFilePath))\r\n        {\r\n            doc.pipe(new OutputTarget(text));\r\n        }\r\n        System.Console.WriteLine(\"The text extracted from {0} is:\",\r\n            pdfFilePath);\r\n        System.Console.WriteLine(text.toString());\r\n    }\r\n}"},"qs-xmp":{"example":"qs-xmp","language":"cs","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractXMPMetadata.cs","content":"?using com.snowtide;\r\nusing com.snowtide.pdf;\r\nusing System.IO;\r\n\r\npublic class ExtractXMPMetadata {\r\n    public static void Main (string[] args) {\r\n        string pdfFilePath = args[0];\r\n        string outPath = args[0] + \".xmp.xml\";\r\n\r\n        using (Document doc = PDF.open(pdfFilePath))\r\n        {\r\n            File.WriteAllBytes(outPath, doc.getXmlMetadata());\r\n        }\r\n\r\n        System.Console.WriteLine(\"Wrote Adobe XMP metadata to %{0}\", outPath);\r\n    }\r\n}"},"qs-one-page-text":{"example":"qs-one-page-text","language":"cs","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractTextOnePage.cs","content":"using com.snowtide;\r\nusing com.snowtide.pdf;\r\nusing java.io;\r\n\r\nclass ExtractTextOnePage\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        string pdfFilePath = args[0];\r\n        StringWriter text = new StringWriter(1024);\r\n        using (Document pdfts = PDF.open(pdfFilePath))\r\n        {\r\n            pdfts.getPage(0).pipe(new OutputTarget(text));\r\n        }\r\n        System.Console.WriteLine(\r\n            \"The text extracted from the first page of {0} is:\",\r\n            pdfFilePath);\r\n        System.Console.WriteLine(text.toString());\r\n    }\r\n}"},"qs-decrypt":{"example":"qs-decrypt","language":"cs","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/DecryptWithPassword.cs","content":"using com.snowtide;\r\nusing com.snowtide.pdf;\r\nusing java.io;\r\n\r\nclass DecryptWithPassword\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        string pdfFilePath = args[0];\r\n        StringWriter text = new StringWriter(1024);\r\n        using (Document doc = PDF.open(pdfFilePath,\r\n            new System.Text.UTF8Encoding().GetBytes(args[1])))\r\n        {\r\n            doc.pipe(new OutputTarget(text));\r\n        }\r\n        System.Console.WriteLine(\"The text extracted from the encrypted document {0} is:\",\r\n            pdfFilePath);\r\n        System.Console.WriteLine(text.toString());\r\n    }\r\n}"},"qs-links":{"example":"qs-links","language":"cs","file":"jar:file:/app/target/snowtide-web-uberjar.jar!/help/quickstart/ExtractLinks.cs","content":"?using com.snowtide;\r\nusing com.snowtide.pdf;\r\nusing com.snowtide.pdf.annot;\r\n\r\npublic class ExtractLinks\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        string pdfFilePath = args[0];\r\n\r\n        using (Document doc = PDF.open(pdfFilePath))\r\n        {\r\n            foreach (Annotation annot in doc.getAllAnnotations().toIEnumerable<Annotation>())\r\n            {\r\n                LinkAnnotation link = annot as LinkAnnotation;\r\n                if (link != null && link.getURI() != null)\r\n                {\r\n                    System.Console.WriteLine(\r\n                            \"Found outgoing link on page {0}, bounds {1}, uri: {2}\",\r\n                            link.pageNumber(), link.bounds(), link.getURI());\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"}}};</script>
  </div> 
  <div class="clear"></div> 
  <div id="footer"> 
   <div class="container_16"> 
    <div class="grid_16"> 
     <p> ©2001-<span id="currentyear">2017</span> Snowtide Informatics Systems, Inc. <br> <strong><a href="mailto:help@snowtide.com">help@snowtide.com</a></strong> <br> <a href="/company">Company Info</a> <a href="/legal">Legal</a> </p> 
    </div> 
    <div class="clear"></div> 
   </div> 
  </div> 
  <script data-cfasync="false" type="text/javascript">/**/window.olark||(function(c){var f=window,d=document,l=f.location.protocol=="https:"?"https:":"http:",z=c.name,r="load";var nt=function(){
f[z]=function(){
(a.s=a.s||[]).push(arguments)};var a=f[z]._={
},q=c.methods.length;while(q--){(function(n){f[z][n]=function(){
f[z]("call",n,arguments)}})(c.methods[q])}a.l=c.loader;a.i=nt;a.p={
0:+new Date};a.P=function(u){
a.p[u]=new Date-a.p[0]};function s(){
a.P(r);f[z](r)}f.addEventListener?f.addEventListener(r,s,false):f.attachEvent("on"+r,s);var ld=function(){function p(hd){
hd="head";return["<",hd,"></",hd,"><",i,' onl' + 'oad="var d=',g,";d.getElementsByTagName('head')[0].",j,"(d.",h,"('script')).",k,"='",l,"//",a.l,"'",'"',"></",i,">"].join("")}var i="body",m=d[i];if(!m){
return setTimeout(ld,100)}a.P(1);var j="appendChild",h="createElement",k="src",n=d[h]("div"),v=n[j](d[h](z)),b=d[h]("iframe"),g="document",e="domain",o;n.style.display="none";m.insertBefore(n,m.firstChild).id=z;b.frameBorder="0";b.id=z+"-loader";if(/MSIE[ ]+6/.test(navigator.userAgent)){
b.src="javascript:false"}b.allowTransparency="true";v[j](b);try{
b.contentWindow[g].open()}catch(w){
c[e]=d[e];o="javascript:var d="+g+".open();d.domain='"+d.domain+"';";b[k]=o+"void(0);"}try{
var t=b.contentWindow[g];t.write(p());t.close()}catch(x){
b[k]=o+'d.write("'+p().replace(/"/g,String.fromCharCode(92)+'"')+'");d.close();'}a.P(2)};ld()};nt()})({
loader: "static.olark.com/jsclient/loader0.js",name:"olark",methods:["configure","extend","declare","identify"]});
/* custom configuration goes here (www.olark.com/documentation) */
olark.identify('8334-299-10-7193');/**/</script>
  <noscript>
   <a href="https://www.olark.com/site/8334-299-10-7193/contact" title="Contact us" target="_blank">Questions? Feedback?</a> powered by 
   <a href="http://www.olark.com?welcome" title="Olark live chat software">Olark live chat software</a>
  </noscript>  
 </body>
</html>