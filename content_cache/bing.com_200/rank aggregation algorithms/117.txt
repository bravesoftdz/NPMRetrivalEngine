<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<html>
 <head> 
  <!-- Generated by javadoc (build 1.6.0_24) on Fri Nov 09 17:59:27 EST 2012 --> 
  <title>
Matrix
</title> 
  <meta NAME="date" CONTENT="2012-11-09"> 
  <link REL="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style"> 
  <script type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Matrix";
    }
}
</script> 
  <noscript> 
  </noscript> 
  <script type="text/javascript" id="_fed_an_js_tag" src="http://www.nist.gov/js/federated-analytics.all.min.js?agency=NIST&amp;subagency=math&amp;pua=UA-37115410-42&amp;yt=true"></script>
  <!--GOOGLE BOOTSTRAP-->
 </head> 
 <body bgcolor="white" onload="windowTitle();"> 
  <hr> 
  <!-- ========= START OF TOP NAVBAR ======= --> 
  <a name="navbar_top">
   <!-- --></a> 
  <a href="#skip-navbar_top" title="Skip navigation links"></a> 
  <table border="0" width="100%" cellpadding="1" cellspacing="0" summary=""> 
   <tbody>
    <tr> 
     <td colspan="2" bgcolor="#EEEEFF" class="NavBarCell1"> <a name="navbar_top_firstrow">
       <!-- --></a> 
      <table border="0" cellpadding="0" cellspacing="3" summary=""> 
       <tbody>
        <tr align="center" valign="top"> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../Jama/package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td> 
         <td bgcolor="#FFFFFF" class="NavBarCell1Rev"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../index-all.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td> 
        </tr> 
       </tbody>
      </table> </td> 
     <td align="right" valign="top" rowspan="3"><em> </em> </td> 
    </tr> 
    <tr> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> &nbsp;<a href="../Jama/LUDecomposition.html" title="class in Jama"><b>PREV CLASS</b></a>&nbsp; &nbsp;<a href="../Jama/QRDecomposition.html" title="class in Jama"><b>NEXT CLASS</b></a></font></td> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> <a href="../index.html?Jama/Matrix.html" target="_top"><b>FRAMES</b></a> &nbsp; &nbsp;<a href="Matrix.html" target="_top"><b>NO FRAMES</b></a> &nbsp; &nbsp;<script type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</script> 
       <noscript> 
        <a href="../allclasses-noframe.html"><b>All Classes</b></a> 
       </noscript> </font></td> 
    </tr> 
    <tr> 
     <td valign="top" class="NavBarCell3"><font size="-2"> SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td> 
     <td valign="top" class="NavBarCell3"><font size="-2"> DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td> 
    </tr> 
   </tbody>
  </table> 
  <a name="skip-navbar_top"></a> 
  <!-- ========= END OF TOP NAVBAR ========= --> 
  <hr> 
  <!-- ======== START OF CLASS DATA ======== --> 
  <h2> <font size="-1"> Jama</font> <br> Class Matrix</h2> 
  <pre>
<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a>
  <img SRC="../resources/inherit.gif" ALT="extended by "><b>Jama.Matrix</b>
</pre> 
  <dl> 
   <dt>
    <b>All Implemented Interfaces:</b> 
   </dt>
   <dd>
    <a href="http://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</a>, 
    <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Cloneable.html?is-external=true" title="class or interface in java.lang">Cloneable</a>
   </dd> 
  </dl> 
  <hr> 
  <dl> 
   <dt>
    <pre>public class <b>Matrix</b>
     <dt>
      extends 
      <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>
     </dt>
     <dt>
      implements 
      <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Cloneable.html?is-external=true" title="class or interface in java.lang">Cloneable</a>, 
      <a href="http://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</a>
     </dt></pre>
   </dt>
  </dl>  
  <p> Jama = Java Matrix class. </p>
  <p> The Java Matrix Class provides the fundamental operations of numerical linear algebra. Various constructors create Matrices from two dimensional arrays of double precision floating point numbers. Various "gets" and "sets" provide access to submatrices and matrix elements. Several methods implement basic matrix arithmetic, including matrix addition and multiplication, matrix norms, and element-by-element array operations. Methods for reading and printing matrices are also included. All the operations in this version of the Matrix Class involve real matrices. Complex matrices may be handled in a future version. </p>
  <p> Five fundamental matrix decompositions, which consist of pairs or triples of matrices, permutation vectors, and the like, produce results in five decomposition classes. These decompositions are accessed by the Matrix class to compute solutions of simultaneous linear equations, determinants, inverses and other matrix functions. The five decompositions are: </p>
  <p></p>
  <ul> 
   <li>Cholesky Decomposition of symmetric, positive definite matrices. </li>
   <li>LU Decomposition of rectangular matrices. </li>
   <li>QR Decomposition of rectangular matrices. </li>
   <li>Singular Value Decomposition of rectangular matrices. </li>
   <li>Eigenvalue Decomposition of both symmetric and nonsymmetric square matrices. </li>
  </ul> 
  <dl> 
   <dt>
    <b>Example of use:</b>
   </dt> 
   <p> </p>
   <dd>
    Solve a linear system A x = b and compute the residual norm, ||b - A x||. 
    <p></p>
    <pre>
      double[][] vals = {{1.,2.,3},{4.,5.,6.},{7.,8.,10.}};
      Matrix A = new Matrix(vals);
      Matrix b = Matrix.random(3,1);
      Matrix x = A.solve(b);
      Matrix r = A.times(x).minus(b);
      double rnorm = r.normInf();
</pre>
   </dd> 
  </dl> 
  <p> </p>
  <p> </p>
  <dl> 
   <dt>
    <b>See Also:</b>
   </dt>
   <dd>
    <a href="../serialized-form.html#Jama.Matrix">Serialized Form</a>
   </dd>
  </dl> 
  <hr> 
  <p> 
   <!-- ======== CONSTRUCTOR SUMMARY ======== --> <a name="constructor_summary">
    <!-- --></a> </p>
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="2"><font size="+2"> <b>Constructor Summary</b></font></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../Jama/Matrix.html#Matrix(double[][])">Matrix</a></b>(double[][]&nbsp;A)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct a matrix from a 2-D array.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../Jama/Matrix.html#Matrix(double[][], int, int)">Matrix</a></b>(double[][]&nbsp;A, int&nbsp;m, int&nbsp;n)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct a matrix quickly without checking arguments.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../Jama/Matrix.html#Matrix(double[], int)">Matrix</a></b>(double[]&nbsp;vals, int&nbsp;m)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct a matrix from a one-dimensional packed array</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../Jama/Matrix.html#Matrix(int, int)">Matrix</a></b>(int&nbsp;m, int&nbsp;n)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct an m-by-n matrix of zeros.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../Jama/Matrix.html#Matrix(int, int, double)">Matrix</a></b>(int&nbsp;m, int&nbsp;n, double&nbsp;s)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct an m-by-n constant matrix.</td> 
    </tr> 
   </tbody>
  </table> &nbsp; 
  <!-- ========== METHOD SUMMARY =========== --> 
  <a name="method_summary">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="2"><font size="+2"> <b>Method Summary</b></font></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#arrayLeftDivide(Jama.Matrix)">arrayLeftDivide</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Element-by-element left division, C = A.\B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#arrayLeftDivideEquals(Jama.Matrix)">arrayLeftDivideEquals</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Element-by-element left division in place, A = A.\B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#arrayRightDivide(Jama.Matrix)">arrayRightDivide</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Element-by-element right division, C = A./B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#arrayRightDivideEquals(Jama.Matrix)">arrayRightDivideEquals</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Element-by-element right division in place, A = A./B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#arrayTimes(Jama.Matrix)">arrayTimes</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Element-by-element multiplication, C = A.*B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#arrayTimesEquals(Jama.Matrix)">arrayTimesEquals</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Element-by-element multiplication in place, A = A.*B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/CholeskyDecomposition.html" title="class in Jama">CholeskyDecomposition</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#chol()">chol</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cholesky Decomposition</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#clone()">clone</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clone the Matrix object.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#cond()">cond</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix condition (2 norm)</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#constructWithCopy(double[][])">constructWithCopy</a></b>(double[][]&nbsp;A)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Construct a matrix from a copy of a 2-D array.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#copy()">copy</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Make a deep copy of a matrix</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#det()">det</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix determinant</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/EigenvalueDecomposition.html" title="class in Jama">EigenvalueDecomposition</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#eig()">eig</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Eigenvalue Decomposition</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#get(int, int)">get</a></b>(int&nbsp;i, int&nbsp;j)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get a single element.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double[][]</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getArray()">getArray</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Access the internal two-dimensional array.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double[][]</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getArrayCopy()">getArrayCopy</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copy the internal two-dimensional array.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;int</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getColumnDimension()">getColumnDimension</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get column dimension.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double[]</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getColumnPackedCopy()">getColumnPackedCopy</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Make a one-dimensional column packed copy of the internal array.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getMatrix(int[], int[])">getMatrix</a></b>(int[]&nbsp;r, int[]&nbsp;c)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get a submatrix.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getMatrix(int[], int, int)">getMatrix</a></b>(int[]&nbsp;r, int&nbsp;j0, int&nbsp;j1)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get a submatrix.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getMatrix(int, int, int[])">getMatrix</a></b>(int&nbsp;i0, int&nbsp;i1, int[]&nbsp;c)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get a submatrix.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getMatrix(int, int, int, int)">getMatrix</a></b>(int&nbsp;i0, int&nbsp;i1, int&nbsp;j0, int&nbsp;j1)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get a submatrix.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;int</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getRowDimension()">getRowDimension</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get row dimension.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double[]</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#getRowPackedCopy()">getRowPackedCopy</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Make a one-dimensional row packed copy of the internal array.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#identity(int, int)">identity</a></b>(int&nbsp;m, int&nbsp;n)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generate identity matrix</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#inverse()">inverse</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix inverse or pseudoinverse</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/LUDecomposition.html" title="class in Jama">LUDecomposition</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#lu()">lu</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LU Decomposition</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#minus(Jama.Matrix)">minus</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C = A - B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#minusEquals(Jama.Matrix)">minusEquals</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A = A - B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#norm1()">norm1</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;One norm</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#norm2()">norm2</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Two norm</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#normF()">normF</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Frobenius norm</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#normInf()">normInf</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Infinity norm</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#plus(Jama.Matrix)">plus</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C = A + B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#plusEquals(Jama.Matrix)">plusEquals</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A = A + B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;void</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#print(int, int)">print</a></b>(int&nbsp;w, int&nbsp;d)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print the matrix to stdout.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;void</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#print(java.text.NumberFormat, int)">print</a></b>(<a href="http://docs.oracle.com/javase/6/docs/api/java/text/NumberFormat.html?is-external=true" title="class or interface in java.text">NumberFormat</a>&nbsp;format, int&nbsp;width)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print the matrix to stdout.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;void</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#print(java.io.PrintWriter, int, int)">print</a></b>(<a href="http://docs.oracle.com/javase/6/docs/api/java/io/PrintWriter.html?is-external=true" title="class or interface in java.io">PrintWriter</a>&nbsp;output, int&nbsp;w, int&nbsp;d)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print the matrix to the output stream.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;void</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#print(java.io.PrintWriter, java.text.NumberFormat, int)">print</a></b>(<a href="http://docs.oracle.com/javase/6/docs/api/java/io/PrintWriter.html?is-external=true" title="class or interface in java.io">PrintWriter</a>&nbsp;output, <a href="http://docs.oracle.com/javase/6/docs/api/java/text/NumberFormat.html?is-external=true" title="class or interface in java.text">NumberFormat</a>&nbsp;format, int&nbsp;width)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Print the matrix to the output stream.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/QRDecomposition.html" title="class in Jama">QRDecomposition</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#qr()">qr</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QR Decomposition</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#random(int, int)">random</a></b>(int&nbsp;m, int&nbsp;n)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generate matrix with random elements</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;int</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#rank()">rank</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix rank</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#read(java.io.BufferedReader)">read</a></b>(<a href="http://docs.oracle.com/javase/6/docs/api/java/io/BufferedReader.html?is-external=true" title="class or interface in java.io">BufferedReader</a>&nbsp;input)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Read a matrix from a stream.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;void</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#set(int, int, double)">set</a></b>(int&nbsp;i, int&nbsp;j, double&nbsp;s)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a single element.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;void</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#setMatrix(int[], int[], Jama.Matrix)">setMatrix</a></b>(int[]&nbsp;r, int[]&nbsp;c, <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;X)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a submatrix.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;void</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#setMatrix(int[], int, int, Jama.Matrix)">setMatrix</a></b>(int[]&nbsp;r, int&nbsp;j0, int&nbsp;j1, <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;X)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a submatrix.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;void</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#setMatrix(int, int, int[], Jama.Matrix)">setMatrix</a></b>(int&nbsp;i0, int&nbsp;i1, int[]&nbsp;c, <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;X)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a submatrix.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;void</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#setMatrix(int, int, int, int, Jama.Matrix)">setMatrix</a></b>(int&nbsp;i0, int&nbsp;i1, int&nbsp;j0, int&nbsp;j1, <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;X)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a submatrix.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#solve(Jama.Matrix)">solve</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Solve A*X = B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#solveTranspose(Jama.Matrix)">solveTranspose</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Solve X*A = B, which is also A'*X' = B'</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/SingularValueDecomposition.html" title="class in Jama">SingularValueDecomposition</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#svd()">svd</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Singular Value Decomposition</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#times(double)">times</a></b>(double&nbsp;s)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Multiply a matrix by a scalar, C = s*A</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#times(Jama.Matrix)">times</a></b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Linear algebraic matrix multiplication, A * B</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#timesEquals(double)">timesEquals</a></b>(double&nbsp;s)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Multiply a matrix by a scalar in place, A = s*A</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;double</code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#trace()">trace</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix trace.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#transpose()">transpose</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix transpose.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a></code></font></td> 
     <td><code><b><a href="../Jama/Matrix.html#uminus()">uminus</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unary minus</td> 
    </tr> 
   </tbody>
  </table> &nbsp;
  <a name="methods_inherited_from_class_java.lang.Object">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#EEEEFF" class="TableSubHeadingColor"> 
     <th align="left"><b>Methods inherited from class java.lang.<a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></b></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</a></code></td> 
    </tr> 
   </tbody>
  </table> &nbsp; 
  <p> 
   <!-- ========= CONSTRUCTOR DETAIL ======== --> <a name="constructor_detail">
    <!-- --></a> </p>
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="1"><font size="+2"> <b>Constructor Detail</b></font></th> 
    </tr> 
   </tbody>
  </table> 
  <a name="Matrix(int, int)">
   <!-- --></a>
  <h3> Matrix</h3> 
  <pre>
public <b>Matrix</b>(int&nbsp;m,
              int&nbsp;n)</pre> 
  <dl> 
   <dd>
    Construct an m-by-n matrix of zeros. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>m</code> - Number of rows.
     </dd>
     <dd>
      <code>n</code> - Number of colums.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="Matrix(int, int, double)">
   <!-- --></a>
  <h3> Matrix</h3> 
  <pre>
public <b>Matrix</b>(int&nbsp;m,
              int&nbsp;n,
              double&nbsp;s)</pre> 
  <dl> 
   <dd>
    Construct an m-by-n constant matrix. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>m</code> - Number of rows.
     </dd>
     <dd>
      <code>n</code> - Number of colums.
     </dd>
     <dd>
      <code>s</code> - Fill the matrix with this scalar value.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="Matrix(double[][])">
   <!-- --></a>
  <h3> Matrix</h3> 
  <pre>
public <b>Matrix</b>(double[][]&nbsp;A)</pre> 
  <dl> 
   <dd>
    Construct a matrix from a 2-D array. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>A</code> - Two-dimensional array of doubles. 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</a></code> - All rows must have the same length
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../Jama/Matrix.html#constructWithCopy(double[][])"><code>constructWithCopy(double[][])</code></a>
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="Matrix(double[][], int, int)">
   <!-- --></a>
  <h3> Matrix</h3> 
  <pre>
public <b>Matrix</b>(double[][]&nbsp;A,
              int&nbsp;m,
              int&nbsp;n)</pre> 
  <dl> 
   <dd>
    Construct a matrix quickly without checking arguments. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>A</code> - Two-dimensional array of doubles.
     </dd>
     <dd>
      <code>m</code> - Number of rows.
     </dd>
     <dd>
      <code>n</code> - Number of colums.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="Matrix(double[], int)">
   <!-- --></a>
  <h3> Matrix</h3> 
  <pre>
public <b>Matrix</b>(double[]&nbsp;vals,
              int&nbsp;m)</pre> 
  <dl> 
   <dd>
    Construct a matrix from a one-dimensional packed array 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>vals</code> - One-dimensional array of doubles, packed by columns (ala Fortran).
     </dd>
     <dd>
      <code>m</code> - Number of rows. 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</a></code> - Array length must be a multiple of m.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <!-- ============ METHOD DETAIL ========== --> 
  <a name="method_detail">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="1"><font size="+2"> <b>Method Detail</b></font></th> 
    </tr> 
   </tbody>
  </table> 
  <a name="constructWithCopy(double[][])">
   <!-- --></a>
  <h3> constructWithCopy</h3> 
  <pre>
public static <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>constructWithCopy</b>(double[][]&nbsp;A)</pre> 
  <dl> 
   <dd>
    Construct a matrix from a copy of a 2-D array. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>A</code> - Two-dimensional array of doubles. 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</a></code> - All rows must have the same length
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="copy()">
   <!-- --></a>
  <h3> copy</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>copy</b>()</pre> 
  <dl> 
   <dd>
    Make a deep copy of a matrix 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="clone()">
   <!-- --></a>
  <h3> clone</h3> 
  <pre>
public <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a> <b>clone</b>()</pre> 
  <dl> 
   <dd>
    Clone the Matrix object. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt>
      <b>Overrides:</b>
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</a></code> in class 
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></code>
     </dd>
    </dl> 
   </dd> 
   <dd>
    <dl> 
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getArray()">
   <!-- --></a>
  <h3> getArray</h3> 
  <pre>
public double[][] <b>getArray</b>()</pre> 
  <dl> 
   <dd>
    Access the internal two-dimensional array. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      Pointer to the two-dimensional array of matrix elements.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getArrayCopy()">
   <!-- --></a>
  <h3> getArrayCopy</h3> 
  <pre>
public double[][] <b>getArrayCopy</b>()</pre> 
  <dl> 
   <dd>
    Copy the internal two-dimensional array. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      Two-dimensional array copy of matrix elements.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getColumnPackedCopy()">
   <!-- --></a>
  <h3> getColumnPackedCopy</h3> 
  <pre>
public double[] <b>getColumnPackedCopy</b>()</pre> 
  <dl> 
   <dd>
    Make a one-dimensional column packed copy of the internal array. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      Matrix elements packed in a one-dimensional array by columns.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getRowPackedCopy()">
   <!-- --></a>
  <h3> getRowPackedCopy</h3> 
  <pre>
public double[] <b>getRowPackedCopy</b>()</pre> 
  <dl> 
   <dd>
    Make a one-dimensional row packed copy of the internal array. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      Matrix elements packed in a one-dimensional array by rows.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getRowDimension()">
   <!-- --></a>
  <h3> getRowDimension</h3> 
  <pre>
public int <b>getRowDimension</b>()</pre> 
  <dl> 
   <dd>
    Get row dimension. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      m, the number of rows.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getColumnDimension()">
   <!-- --></a>
  <h3> getColumnDimension</h3> 
  <pre>
public int <b>getColumnDimension</b>()</pre> 
  <dl> 
   <dd>
    Get column dimension. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      n, the number of columns.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="get(int, int)">
   <!-- --></a>
  <h3> get</h3> 
  <pre>
public double <b>get</b>(int&nbsp;i,
                  int&nbsp;j)</pre> 
  <dl> 
   <dd>
    Get a single element. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>i</code> - Row index.
     </dd>
     <dd>
      <code>j</code> - Column index. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A(i,j) 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getMatrix(int, int, int, int)">
   <!-- --></a>
  <h3> getMatrix</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>getMatrix</b>(int&nbsp;i0,
                        int&nbsp;i1,
                        int&nbsp;j0,
                        int&nbsp;j1)</pre> 
  <dl> 
   <dd>
    Get a submatrix. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>i0</code> - Initial row index
     </dd>
     <dd>
      <code>i1</code> - Final row index
     </dd>
     <dd>
      <code>j0</code> - Initial column index
     </dd>
     <dd>
      <code>j1</code> - Final column index 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A(i0:i1,j0:j1) 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code> - Submatrix indices
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getMatrix(int[], int[])">
   <!-- --></a>
  <h3> getMatrix</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>getMatrix</b>(int[]&nbsp;r,
                        int[]&nbsp;c)</pre> 
  <dl> 
   <dd>
    Get a submatrix. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>r</code> - Array of row indices.
     </dd>
     <dd>
      <code>c</code> - Array of column indices. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A(r(:),c(:)) 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code> - Submatrix indices
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getMatrix(int, int, int[])">
   <!-- --></a>
  <h3> getMatrix</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>getMatrix</b>(int&nbsp;i0,
                        int&nbsp;i1,
                        int[]&nbsp;c)</pre> 
  <dl> 
   <dd>
    Get a submatrix. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>i0</code> - Initial row index
     </dd>
     <dd>
      <code>i1</code> - Final row index
     </dd>
     <dd>
      <code>c</code> - Array of column indices. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A(i0:i1,c(:)) 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code> - Submatrix indices
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getMatrix(int[], int, int)">
   <!-- --></a>
  <h3> getMatrix</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>getMatrix</b>(int[]&nbsp;r,
                        int&nbsp;j0,
                        int&nbsp;j1)</pre> 
  <dl> 
   <dd>
    Get a submatrix. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>r</code> - Array of row indices.
     </dd>
     <dd>
      <code>j0</code> - Initial column index
     </dd>
     <dd>
      <code>j1</code> - Final column index 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A(r(:),j0:j1) 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code> - Submatrix indices
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="set(int, int, double)">
   <!-- --></a>
  <h3> set</h3> 
  <pre>
public void <b>set</b>(int&nbsp;i,
                int&nbsp;j,
                double&nbsp;s)</pre> 
  <dl> 
   <dd>
    Set a single element. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>i</code> - Row index.
     </dd>
     <dd>
      <code>j</code> - Column index.
     </dd>
     <dd>
      <code>s</code> - A(i,j). 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="setMatrix(int, int, int, int, Jama.Matrix)">
   <!-- --></a>
  <h3> setMatrix</h3> 
  <pre>
public void <b>setMatrix</b>(int&nbsp;i0,
                      int&nbsp;i1,
                      int&nbsp;j0,
                      int&nbsp;j1,
                      <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;X)</pre> 
  <dl> 
   <dd>
    Set a submatrix. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>i0</code> - Initial row index
     </dd>
     <dd>
      <code>i1</code> - Final row index
     </dd>
     <dd>
      <code>j0</code> - Initial column index
     </dd>
     <dd>
      <code>j1</code> - Final column index
     </dd>
     <dd>
      <code>X</code> - A(i0:i1,j0:j1) 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code> - Submatrix indices
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="setMatrix(int[], int[], Jama.Matrix)">
   <!-- --></a>
  <h3> setMatrix</h3> 
  <pre>
public void <b>setMatrix</b>(int[]&nbsp;r,
                      int[]&nbsp;c,
                      <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;X)</pre> 
  <dl> 
   <dd>
    Set a submatrix. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>r</code> - Array of row indices.
     </dd>
     <dd>
      <code>c</code> - Array of column indices.
     </dd>
     <dd>
      <code>X</code> - A(r(:),c(:)) 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code> - Submatrix indices
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="setMatrix(int[], int, int, Jama.Matrix)">
   <!-- --></a>
  <h3> setMatrix</h3> 
  <pre>
public void <b>setMatrix</b>(int[]&nbsp;r,
                      int&nbsp;j0,
                      int&nbsp;j1,
                      <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;X)</pre> 
  <dl> 
   <dd>
    Set a submatrix. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>r</code> - Array of row indices.
     </dd>
     <dd>
      <code>j0</code> - Initial column index
     </dd>
     <dd>
      <code>j1</code> - Final column index
     </dd>
     <dd>
      <code>X</code> - A(r(:),j0:j1) 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code> - Submatrix indices
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="setMatrix(int, int, int[], Jama.Matrix)">
   <!-- --></a>
  <h3> setMatrix</h3> 
  <pre>
public void <b>setMatrix</b>(int&nbsp;i0,
                      int&nbsp;i1,
                      int[]&nbsp;c,
                      <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;X)</pre> 
  <dl> 
   <dd>
    Set a submatrix. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>i0</code> - Initial row index
     </dd>
     <dd>
      <code>i1</code> - Final row index
     </dd>
     <dd>
      <code>c</code> - Array of column indices.
     </dd>
     <dd>
      <code>X</code> - A(i0:i1,c(:)) 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">ArrayIndexOutOfBoundsException</a></code> - Submatrix indices
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="transpose()">
   <!-- --></a>
  <h3> transpose</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>transpose</b>()</pre> 
  <dl> 
   <dd>
    Matrix transpose. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A'
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="norm1()">
   <!-- --></a>
  <h3> norm1</h3> 
  <pre>
public double <b>norm1</b>()</pre> 
  <dl> 
   <dd>
    One norm 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      maximum column sum.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="norm2()">
   <!-- --></a>
  <h3> norm2</h3> 
  <pre>
public double <b>norm2</b>()</pre> 
  <dl> 
   <dd>
    Two norm 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      maximum singular value.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="normInf()">
   <!-- --></a>
  <h3> normInf</h3> 
  <pre>
public double <b>normInf</b>()</pre> 
  <dl> 
   <dd>
    Infinity norm 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      maximum row sum.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="normF()">
   <!-- --></a>
  <h3> normF</h3> 
  <pre>
public double <b>normF</b>()</pre> 
  <dl> 
   <dd>
    Frobenius norm 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      sqrt of sum of squares of all elements.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="uminus()">
   <!-- --></a>
  <h3> uminus</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>uminus</b>()</pre> 
  <dl> 
   <dd>
    Unary minus 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      -A
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="plus(Jama.Matrix)">
   <!-- --></a>
  <h3> plus</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>plus</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    C = A + B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A + B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="plusEquals(Jama.Matrix)">
   <!-- --></a>
  <h3> plusEquals</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>plusEquals</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    A = A + B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A + B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="minus(Jama.Matrix)">
   <!-- --></a>
  <h3> minus</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>minus</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    C = A - B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A - B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="minusEquals(Jama.Matrix)">
   <!-- --></a>
  <h3> minusEquals</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>minusEquals</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    A = A - B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A - B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="arrayTimes(Jama.Matrix)">
   <!-- --></a>
  <h3> arrayTimes</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>arrayTimes</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    Element-by-element multiplication, C = A.*B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A.*B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="arrayTimesEquals(Jama.Matrix)">
   <!-- --></a>
  <h3> arrayTimesEquals</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>arrayTimesEquals</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    Element-by-element multiplication in place, A = A.*B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A.*B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="arrayRightDivide(Jama.Matrix)">
   <!-- --></a>
  <h3> arrayRightDivide</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>arrayRightDivide</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    Element-by-element right division, C = A./B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A./B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="arrayRightDivideEquals(Jama.Matrix)">
   <!-- --></a>
  <h3> arrayRightDivideEquals</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>arrayRightDivideEquals</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    Element-by-element right division in place, A = A./B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A./B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="arrayLeftDivide(Jama.Matrix)">
   <!-- --></a>
  <h3> arrayLeftDivide</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>arrayLeftDivide</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    Element-by-element left division, C = A.\B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A.\B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="arrayLeftDivideEquals(Jama.Matrix)">
   <!-- --></a>
  <h3> arrayLeftDivideEquals</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>arrayLeftDivideEquals</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    Element-by-element left division in place, A = A.\B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      A.\B
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="times(double)">
   <!-- --></a>
  <h3> times</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>times</b>(double&nbsp;s)</pre> 
  <dl> 
   <dd>
    Multiply a matrix by a scalar, C = s*A 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>s</code> - scalar 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      s*A
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="timesEquals(double)">
   <!-- --></a>
  <h3> timesEquals</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>timesEquals</b>(double&nbsp;s)</pre> 
  <dl> 
   <dd>
    Multiply a matrix by a scalar in place, A = s*A 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>s</code> - scalar 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      replace A by s*A
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="times(Jama.Matrix)">
   <!-- --></a>
  <h3> times</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>times</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    Linear algebraic matrix multiplication, A * B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - another matrix 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      Matrix product, A * B 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</a></code> - Matrix inner dimensions must agree.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="lu()">
   <!-- --></a>
  <h3> lu</h3> 
  <pre>
public <a href="../Jama/LUDecomposition.html" title="class in Jama">LUDecomposition</a> <b>lu</b>()</pre> 
  <dl> 
   <dd>
    LU Decomposition 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      LUDecomposition
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../Jama/LUDecomposition.html" title="class in Jama"><code>LUDecomposition</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="qr()">
   <!-- --></a>
  <h3> qr</h3> 
  <pre>
public <a href="../Jama/QRDecomposition.html" title="class in Jama">QRDecomposition</a> <b>qr</b>()</pre> 
  <dl> 
   <dd>
    QR Decomposition 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      QRDecomposition
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../Jama/QRDecomposition.html" title="class in Jama"><code>QRDecomposition</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="chol()">
   <!-- --></a>
  <h3> chol</h3> 
  <pre>
public <a href="../Jama/CholeskyDecomposition.html" title="class in Jama">CholeskyDecomposition</a> <b>chol</b>()</pre> 
  <dl> 
   <dd>
    Cholesky Decomposition 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      CholeskyDecomposition
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../Jama/CholeskyDecomposition.html" title="class in Jama"><code>CholeskyDecomposition</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="svd()">
   <!-- --></a>
  <h3> svd</h3> 
  <pre>
public <a href="../Jama/SingularValueDecomposition.html" title="class in Jama">SingularValueDecomposition</a> <b>svd</b>()</pre> 
  <dl> 
   <dd>
    Singular Value Decomposition 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      SingularValueDecomposition
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../Jama/SingularValueDecomposition.html" title="class in Jama"><code>SingularValueDecomposition</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="eig()">
   <!-- --></a>
  <h3> eig</h3> 
  <pre>
public <a href="../Jama/EigenvalueDecomposition.html" title="class in Jama">EigenvalueDecomposition</a> <b>eig</b>()</pre> 
  <dl> 
   <dd>
    Eigenvalue Decomposition 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      EigenvalueDecomposition
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../Jama/EigenvalueDecomposition.html" title="class in Jama"><code>EigenvalueDecomposition</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="solve(Jama.Matrix)">
   <!-- --></a>
  <h3> solve</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>solve</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    Solve A*X = B 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - right hand side 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      solution if A is square, least squares solution otherwise
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="solveTranspose(Jama.Matrix)">
   <!-- --></a>
  <h3> solveTranspose</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>solveTranspose</b>(<a href="../Jama/Matrix.html" title="class in Jama">Matrix</a>&nbsp;B)</pre> 
  <dl> 
   <dd>
    Solve X*A = B, which is also A'*X' = B' 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>B</code> - right hand side 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      solution if A is square, least squares solution otherwise.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="inverse()">
   <!-- --></a>
  <h3> inverse</h3> 
  <pre>
public <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>inverse</b>()</pre> 
  <dl> 
   <dd>
    Matrix inverse or pseudoinverse 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      inverse(A) if A is square, pseudoinverse otherwise.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="det()">
   <!-- --></a>
  <h3> det</h3> 
  <pre>
public double <b>det</b>()</pre> 
  <dl> 
   <dd>
    Matrix determinant 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      determinant
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="rank()">
   <!-- --></a>
  <h3> rank</h3> 
  <pre>
public int <b>rank</b>()</pre> 
  <dl> 
   <dd>
    Matrix rank 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      effective numerical rank, obtained from SVD.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="cond()">
   <!-- --></a>
  <h3> cond</h3> 
  <pre>
public double <b>cond</b>()</pre> 
  <dl> 
   <dd>
    Matrix condition (2 norm) 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      ratio of largest to smallest singular value.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="trace()">
   <!-- --></a>
  <h3> trace</h3> 
  <pre>
public double <b>trace</b>()</pre> 
  <dl> 
   <dd>
    Matrix trace. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      sum of the diagonal elements.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="random(int, int)">
   <!-- --></a>
  <h3> random</h3> 
  <pre>
public static <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>random</b>(int&nbsp;m,
                            int&nbsp;n)</pre> 
  <dl> 
   <dd>
    Generate matrix with random elements 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>m</code> - Number of rows.
     </dd>
     <dd>
      <code>n</code> - Number of colums. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      An m-by-n matrix with uniformly distributed random elements.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="identity(int, int)">
   <!-- --></a>
  <h3> identity</h3> 
  <pre>
public static <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>identity</b>(int&nbsp;m,
                              int&nbsp;n)</pre> 
  <dl> 
   <dd>
    Generate identity matrix 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>m</code> - Number of rows.
     </dd>
     <dd>
      <code>n</code> - Number of colums. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      An m-by-n matrix with ones on the diagonal and zeros elsewhere.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="print(int, int)">
   <!-- --></a>
  <h3> print</h3> 
  <pre>
public void <b>print</b>(int&nbsp;w,
                  int&nbsp;d)</pre> 
  <dl> 
   <dd>
    Print the matrix to stdout. Line the elements up in columns with a Fortran-like 'Fw.d' style format. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>w</code> - Column width.
     </dd>
     <dd>
      <code>d</code> - Number of digits after the decimal.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="print(java.io.PrintWriter, int, int)">
   <!-- --></a>
  <h3> print</h3> 
  <pre>
public void <b>print</b>(<a href="http://docs.oracle.com/javase/6/docs/api/java/io/PrintWriter.html?is-external=true" title="class or interface in java.io">PrintWriter</a>&nbsp;output,
                  int&nbsp;w,
                  int&nbsp;d)</pre> 
  <dl> 
   <dd>
    Print the matrix to the output stream. Line the elements up in columns with a Fortran-like 'Fw.d' style format. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>output</code> - Output stream.
     </dd>
     <dd>
      <code>w</code> - Column width.
     </dd>
     <dd>
      <code>d</code> - Number of digits after the decimal.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="print(java.text.NumberFormat, int)">
   <!-- --></a>
  <h3> print</h3> 
  <pre>
public void <b>print</b>(<a href="http://docs.oracle.com/javase/6/docs/api/java/text/NumberFormat.html?is-external=true" title="class or interface in java.text">NumberFormat</a>&nbsp;format,
                  int&nbsp;width)</pre> 
  <dl> 
   <dd>
    Print the matrix to stdout. Line the elements up in columns. Use the format object, and right justify within columns of width characters. Note that is the matrix is to be read back in, you probably will want to use a NumberFormat that is set to US Locale. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>format</code> - A Formatting object for individual elements.
     </dd>
     <dd>
      <code>width</code> - Field width for each column.
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="http://docs.oracle.com/javase/6/docs/api/java/text/DecimalFormat.html?is-external=true#setDecimalFormatSymbols(java.text.DecimalFormatSymbols)" title="class or interface in java.text"><code>DecimalFormat.setDecimalFormatSymbols(java.text.DecimalFormatSymbols)</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="print(java.io.PrintWriter, java.text.NumberFormat, int)">
   <!-- --></a>
  <h3> print</h3> 
  <pre>
public void <b>print</b>(<a href="http://docs.oracle.com/javase/6/docs/api/java/io/PrintWriter.html?is-external=true" title="class or interface in java.io">PrintWriter</a>&nbsp;output,
                  <a href="http://docs.oracle.com/javase/6/docs/api/java/text/NumberFormat.html?is-external=true" title="class or interface in java.text">NumberFormat</a>&nbsp;format,
                  int&nbsp;width)</pre> 
  <dl> 
   <dd>
    Print the matrix to the output stream. Line the elements up in columns. Use the format object, and right justify within columns of width characters. Note that is the matrix is to be read back in, you probably will want to use a NumberFormat that is set to US Locale. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>output</code> - the output stream.
     </dd>
     <dd>
      <code>format</code> - A formatting object to format the matrix elements
     </dd>
     <dd>
      <code>width</code> - Column width.
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="http://docs.oracle.com/javase/6/docs/api/java/text/DecimalFormat.html?is-external=true#setDecimalFormatSymbols(java.text.DecimalFormatSymbols)" title="class or interface in java.text"><code>DecimalFormat.setDecimalFormatSymbols(java.text.DecimalFormatSymbols)</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="read(java.io.BufferedReader)">
   <!-- --></a>
  <h3> read</h3> 
  <pre>
public static <a href="../Jama/Matrix.html" title="class in Jama">Matrix</a> <b>read</b>(<a href="http://docs.oracle.com/javase/6/docs/api/java/io/BufferedReader.html?is-external=true" title="class or interface in java.io">BufferedReader</a>&nbsp;input)
                   throws <a href="http://docs.oracle.com/javase/6/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</a></pre> 
  <dl> 
   <dd>
    Read a matrix from a stream. The format is the same the print method, so printed matrices can be read back in (provided they were printed using US Locale). Elements are separated by whitespace, all the elements for each row appear on a single line, the last row is followed by a blank line. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>input</code> - the input stream. 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://docs.oracle.com/javase/6/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</a></code>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <!-- ========= END OF CLASS DATA ========= --> 
  <hr> 
  <!-- ======= START OF BOTTOM NAVBAR ====== --> 
  <a name="navbar_bottom">
   <!-- --></a> 
  <a href="#skip-navbar_bottom" title="Skip navigation links"></a> 
  <table border="0" width="100%" cellpadding="1" cellspacing="0" summary=""> 
   <tbody>
    <tr> 
     <td colspan="2" bgcolor="#EEEEFF" class="NavBarCell1"> <a name="navbar_bottom_firstrow">
       <!-- --></a> 
      <table border="0" cellpadding="0" cellspacing="3" summary=""> 
       <tbody>
        <tr align="center" valign="top"> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../Jama/package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td> 
         <td bgcolor="#FFFFFF" class="NavBarCell1Rev"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../index-all.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td> 
        </tr> 
       </tbody>
      </table> </td> 
     <td align="right" valign="top" rowspan="3"><em> </em> </td> 
    </tr> 
    <tr> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> &nbsp;<a href="../Jama/LUDecomposition.html" title="class in Jama"><b>PREV CLASS</b></a>&nbsp; &nbsp;<a href="../Jama/QRDecomposition.html" title="class in Jama"><b>NEXT CLASS</b></a></font></td> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> <a href="../index.html?Jama/Matrix.html" target="_top"><b>FRAMES</b></a> &nbsp; &nbsp;<a href="Matrix.html" target="_top"><b>NO FRAMES</b></a> &nbsp; &nbsp;<script type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</script> 
       <noscript> 
        <a href="../allclasses-noframe.html"><b>All Classes</b></a> 
       </noscript> </font></td> 
    </tr> 
    <tr> 
     <td valign="top" class="NavBarCell3"><font size="-2"> SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td> 
     <td valign="top" class="NavBarCell3"><font size="-2"> DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td> 
    </tr> 
   </tbody>
  </table> 
  <a name="skip-navbar_bottom"></a> 
  <!-- ======== END OF BOTTOM NAVBAR ======= --> 
  <hr>   
 </body>
</html>