<!doctype html>
<html dir="ltr" xmlns="http://www.w3.org/1999/xhtml" lang="en">
 <head>
  <link rel="canonical" href="https://msdn.microsoft.com/en-us/library/gg663540.aspx"> 
  <title>4: Parallel Aggregation</title> 
  <meta name="DCS.dcsuri" content="/en-us/library/gg663540(d=default,l=en-us,v=pandp.10).aspx"> 
  <meta name="NormalizedUrl" content="https://msdn.microsoft.com/en-us/library/gg663540(d=default,l=en-us,v=pandp.10).aspx"> 
  <meta name="ms.normalizedurl" content="https://msdn.microsoft.com/en-us/library/gg663540(d=default,l=en-us,v=pandp.10).aspx"> 
  <meta name="DCSext.MSDNLibraryNode" content="_pandp_all_"> 
  <meta name="VotingContextUrl" content="https://msdn.microsoft.com/en-us/library/gg663540(d=default,l=en-us,v=pandp.10).aspx"> 
  <meta name="MN" content="EE4293CC-5:40:05 PM"> 
  <meta name="Search.ShortId" content="gg663540"> 
  <meta name="ms.shortidmsdn" content="gg663540"> 
  <meta name="ms.locale" content="en-us"> 
  <meta name="ms.prodver" content="PandP.10"> 
  <meta name="ms.contentlang" content="EN"> 
  <meta name="ms.lang" content="EN"> 
  <meta name="ms.loc" content="US"> 
  <meta name="ms.sitever" content="2017.09.29.3"> 
  <meta name="ms.assetid" content="2ea0b068-7803-49be-8368-bb6c3a11a9e4"> 
  <meta name="ms.auth" content="0"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <script type="text/javascript" data-do-not-move="true">
        //<![CDATA[
        var AmbientContext = null;

        (function(){
            var root = (function(){return this;}).call(null);

            var GetCookie = function(name){
                var cookies = root.document.cookie ? root.document.cookie.split('; ') : [];
                for (var i = 0; i < cookies.length; i++) {
                    var pos = cookies[i].indexOf('=');
                    if (name === root.decodeURIComponent(cookies[i].slice(0, pos)))
                    {
                        var cookie = cookies[i].slice(pos + 1).replace(/\+/g, ' ');
                        cookie = root.decodeURIComponent(cookie);
                        return cookie;
                    }
                }
            };

            var JsonDeserialize = function(content) {
                return root.JSON && root.JSON.parse ? root.JSON.parse(content) : (new Function('return (' + content + ')'))();
            };

            try {
                AmbientContext = GetCookie('AmbientContext');
                AmbientContext = AmbientContext && JsonDeserialize(AmbientContext);
            } catch(ex) {
            } finally {
                AmbientContext = AmbientContext || null;
            }
        })();
        //]]>
    </script> 
  <script type="text/javascript" src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.9.1.min.js" data-do-not-move="true" data-provides="jQuery"></script> 
  <link rel="stylesheet" type="text/css" href="https://uhf.microsoft.com/mscc/statics/mscc-0.3.6.min.css">
  <link rel="stylesheet" type="text/css" href="https://i-msdn.sec.s-msft.com/Combined.css?resources=0:ImageSprite,0:TopicResponsive,0:TopicResponsive.MediaQueries,1:CodeSnippet,1:ProgrammingSelector,1:ExpandableCollapsibleArea,0:CommunityContent,1:TopicNotInScope,1:FeedViewerBasic,1:ImageSprite,2:Header,2:HeaderFooterSprite,2:Header.MediaQueries,3:Banner.MediaQueries,0:Breadcrumbs,0:Breadcrumbs.MediaQueries,0:ResponsiveToc,0:ResponsiveToc.MediaQueries,0:LibraryMemberFilter,2:Footer,2:Footer.MediaQueries,4:StandardRating,5:LinkList,0:BaseResponsive,6:MsdnResponsive,0:Tables.MediaQueries;/Areas/Library/Content:0,/Areas/Epx/Content/Css:1,/Areas/Centers/Themes/StandardDevCenter/Content:2,/Areas/Epx/Shared/Content:3,/Areas/Global/Content:4,/Areas/Epx/Themes/Base/Content:5,/Areas/Library/Themes/Msdn/Content:6&amp;amp;v=DDD1A2DAE878408650C0553AB40839AB">
 </head> 
 <body class="library Chrome"> 
  <div id="page"> 
   <link type="text/css" rel="stylesheet"> 
   <input type="hidden" id="isHeaderBleeding" value="true"> 
   <div id="ux-header" dir="ltr" class="ltr msdn" ms.pgarea="header"> 
    <div id="ux-banner"> 
     <div id="msccBanner" dir="ltr" data-site-name="msdn.microsoft.com" data-mscc-version="0.3.6" data-nver="aspnet-2.0.6" data-sver="0.1.2" class="cc-banner" role="alert">
      <div class="cc-container">
       <svg class="cc-icon cc-v-center" x="0px" y="0px" viewbox="0 0 44 44" height="30px" fill="none" stroke="currentColor">
        <circle cx="22" cy="22" r="20" stroke-width="2"></circle>
        <line x1="22" x2="22" y1="18" y2="33" stroke-width="3"></line>
        <line x1="22" x2="22" y1="12" y2="15" stroke-width="3"></line>
       </svg> 
       <span class="cc-v-center cc-text">This site uses cookies for analytics, personalized content and ads. By continuing to browse this site, you agree to this use.</span> 
       <a href="https://go.microsoft.com/fwlink/?linkid=845480" aria-label="Learn more about Microsoft’s Cookie Policy" id="msccLearnMore" class="cc-link cc-v-center cc-float-right" data-mscc-ic="false">Learn more</a>
      </div>
     </div> 
    </div> 
    <header> 
     <span id="singleCol"></span> 
     <span id="doubleCol"></span> 
     <span id="isMobile"></span> 
     <div> 
      <div class="row topRow" role="banner"> 
       <div class="top"> 
        <div class="left"> 
         <a class="msdnLogoImg" href="https://msdn.microsoft.com/en-us" title="MSDN home" ms.cmpgrp="mslogo"> 
          <div class="clip70x15"> 
           <img alt="Microsoft Logo" id="msft-logo" class="msft-logo" src="https://i-msdn.sec.s-msft.com/Areas/Centers/Themes/StandardDevCenter/Content/HeaderFooterSprite.png?v=636422593544160354"> 
          </div> </a> 
         <div class="GrayPipeDiv clip1x18"> 
          <img alt="Gray Pipe" class="GrayPipe" src="https://i-msdn.sec.s-msft.com/Areas/Centers/Themes/StandardDevCenter/Content/HeaderFooterSprite.png?v=636422593544160354"> 
         </div> 
         <a class="DevCenterFullNameNonMegaBlade" href="https://msdn.microsoft.com/en-us">Developer Network</a> 
         <a class="DevCenterFullName" href="https://msdn.microsoft.com/en-us">Developer Network</a> 
         <a class="DevCenterShortName" href="https://msdn.microsoft.com/en-us">Developer</a> 
        </div> 
        <div class="right" ms.cmpgrp="aux nav"> 
         <div id="signIn" aria-label="Profile button"> 
          <div class="profileImage"></div> 
          <a class="scarabLink" href="https://login.live.com/login.srf?wa=wsignin1.0&amp;rpsnv=13&amp;ct=1507423205&amp;rver=6.7.6640.0&amp;wp=mcmbi&amp;wlcxt=msdn%24msdn%24msdn&amp;wreply=https%3a%2f%2fmsdn.microsoft.com%2fen-us%2flibrary%2fgg663540.aspx&amp;lc=1033&amp;id=254354&amp;mkt=en-us">Sign in</a>
         </div> 
         <div class="auxNav"> 
          <div> 
           <div data-fragmentname="Subscriptions" id="Fragment_Subscriptions" xmlns="http://www.w3.org/1999/xhtml"> 
            <a href="https://my.visualstudio.com/?wt.mc_id=o~msft~msdn~nav~subscriber&amp;campaign=o~msft~msdn~nav~subscriber" id="Subscriptions_2153_1" xmlns="http://www.w3.org/1999/xhtml"> <p xmlns="">Subscriber portal</p> </a> 
           </div> 
           <div data-fragmentname="GetTools" id="Fragment_GetTools" xmlns="http://www.w3.org/1999/xhtml"> 
            <a href="https://www.visualstudio.com/free-developer-offers/" id="GetTools_2153_3" xmlns="http://www.w3.org/1999/xhtml">Get tools</a> 
           </div> 
          </div> 
          <div> 
          </div> 
         </div> 
        </div> 
       </div> 
      </div> 
      <div class="row middleRow"> 
       <div class="expandTop"> 
        <div class="left"></div> 
        <div class="right"></div> 
       </div> 
      </div> 
     </div> 
     <div id="buttomRowWrapper" class="bg_default"> 
      <div class="row buttomRow bg_default"> 
       <div class="bottom"> 
        <div class="left" role="navigation" aria-label="header toc" ms.cmpgrp="main nav"> 
         <a id="grip" class="menu-icon" href="javascript:void(0)" role="button" aria-label="navigation menu" data-mscc-ic="false"></a> 
         <div id="drawer"> 
          <div class="toc"> 
           <nav> 
            <ul class="navL1"> 
             <li class="inactive toggle"> <a href="javascript:void(0)" role="button" aria-expanded="false" data-mscc-ic="false">Downloads</a> 
              <ul class="navL2"> 
               <li class="inactive"> <a href="https://www.visualstudio.com/downloads/download-visual-studio-vs" role="link" title="Visual Studio">Visual Studio</a> </li> 
               <li class="inactive"> <a href="https://msdn.microsoft.com/microsoft-sdks-msdn" role="link" title="SDKs">SDKs</a> </li> 
               <li class="inactive toggle"> <a href="javascript:void(0)" title="Trial software" role="button" aria-expanded="false" data-mscc-ic="false">Trial software</a> 
                <ul class="navL3"> 
                 <li class="inactive"> <a href="https://msdn.microsoft.com/evalcenter" title="Free downloads" role="link">Free downloads</a> </li> 
                 <li class="inactive"> <a href="https://msdn.microsoft.com/officeevaluationresources" title="Office resources" role="link">Office resources</a> </li> 
                 <li class="inactive"> <a href="https://msdn.microsoft.com/sharepoint2013resources" title="SharePoint Server 2013 resources" role="link">SharePoint Server 2013 resources</a> </li> 
                 <li class="inactive"> <a href="https://msdn.microsoft.com/sqlserver2014expressresources" title="SQL Server 2014 Express resources" role="link">SQL Server 2014 Express resources</a> </li> 
                 <li class="inactive"> <a href="https://msdn.microsoft.com/windowsserver2012r2resources" title="Windows Server 2012 resources" role="link">Windows Server 2012 resources</a> </li> 
                </ul> </li> 
              </ul> </li> 
             <li class="inactive toggle"> <a href="javascript:void(0)" role="button" aria-expanded="false" data-mscc-ic="false">Programs</a> 
              <ul class="navL2"> 
               <li class="inactive toggle"> <a href="javascript:void(0)" title="Subscriptions" role="button" aria-expanded="false" data-mscc-ic="false">Subscriptions</a> 
                <ul class="navL3"> 
                 <li class="inactive"> <a href="https://msdn.microsoft.com/msdn-subscriptions-overview" title="Overview" role="link">Overview</a> </li> 
                 <li class="inactive"> <a href="https://msdn.microsoft.com/msdn-subscriptions-administration" title="Administrators" role="link">Administrators</a> </li> 
                </ul> </li> 
               <li class="inactive toggle"> <a href="javascript:void(0)" title="Students" role="button" aria-expanded="false" data-mscc-ic="false">Students</a> 
                <ul class="navL3"> 
                 <li class="inactive"> <a href="https://msdn.microsoft.com/imagine/imagine-home" title="Microsoft Imagine" role="link">Microsoft Imagine</a> </li> 
                 <li class="inactive"> <a href="https://msdn.microsoft.com/microsoftstudentpartners" title="Microsoft Student Partners" role="link">Microsoft Student Partners</a> </li> 
                </ul> </li> 
               <li class="inactive"> <a href="https://msdn.microsoft.com/applicationbuilder" role="link" title="ISV">ISV</a> </li> 
               <li class="inactive"> <a href="https://www.microsoft.com/bizspark" role="link" title="Startups">Startups</a> </li> 
               <li class="inactive"> <a href="https://events.microsoft.com/" role="link" title="Events">Events</a> </li> 
              </ul> </li> 
             <li class="inactive toggle"> <a href="javascript:void(0)" role="button" aria-expanded="false" data-mscc-ic="false">Community</a> 
              <ul class="navL2"> 
               <li class="inactive"> <a href="https://msdn.microsoft.com/magazine/dd767791" role="link" title="Magazine">Magazine</a> </li> 
               <li class="inactive"> <a href="https://social.msdn.microsoft.com/forums/" role="link" title="Forums">Forums</a> </li> 
               <li class="inactive"> <a href="https://blogs.msdn.microsoft.com/" role="link" title="Blogs">Blogs</a> </li> 
               <li class="inactive"> <a href="https://channel9.msdn.com/" role="link" title="Channel 9">Channel 9</a> </li> 
              </ul> </li> 
             <li class="inactive current toggle"> <a href="javascript:void(0)" role="button" aria-expanded="false" data-mscc-ic="false">Documentation</a> 
              <ul class="navL2"> 
               <li class="inactive current"> <a href="https://msdn.microsoft.com/library" role="link" title="APIs and reference">APIs and reference</a> </li> 
               <li class="inactive"> <a href="https://msdn.microsoft.com/developer-centers-msdn" role="link" title="Dev centers">Dev centers</a> </li> 
               <li class="inactive"> <a href="https://code.msdn.microsoft.com/" role="link" title="Samples">Samples</a> </li> 
               <li class="inactive"> <a href="https://msdn.microsoft.com/mt703209" role="link" title="Retired content">Retired content</a> </li> 
              </ul> </li> 
            </ul> 
           </nav> 
          </div> 
         </div> 
        </div> 
        <div class="right" ms.title="search" role="search"> 
         <div data-fragmentname="SearchBox" id="Fragment_SearchBox" xmlns="http://www.w3.org/1999/xhtml"> 
          <div class="SearchBox"> 
           <form id="HeaderSearchForm" name="HeaderSearchForm" method="get"> 
            <button id="FakeHeaderSearchButton" value="Search" type="submit" class="header-search-button" role="button" aria-label="search finder"> 
             <div id="search-finder-div" class="clip16x20"> 
              <img alt="search finder" id="search-finder" class="search-finder" src="https://i-msdn.sec.s-msft.com/Areas/Centers/Themes/StandardDevCenter/Content/HeaderFooterSprite.png?v=636422593544160354"> 
             </div> </button> 
            <button id="HeaderSearchButton" style="display:none"></button> 
            <div id="searchSplitter"></div> 
            <div id="searchCloseIconDiv" class="clip16x20" tabindex="0"> 
             <img alt="search clear" id="searchCloseIcon" class="search-clear-x" src="https://i-msdn.sec.s-msft.com/Areas/Centers/Themes/StandardDevCenter/Content/HeaderFooterSprite.png?v=636422593544160354"> 
            </div> 
            <div id="searchTextContainer" style="width: 0;"> 
             <input id="HeaderSearchTextBox" name="query" type="text" aria-label="search edit textbox" maxlength="200" onfocus="Epx.Controls.SearchBox.watermarkFocus(event, this.title)" onblur="Epx.Controls.SearchBox.watermarkBlur(event, this.title)"> 
            </div> 
           </form> 
          </div> 
         </div> 
        </div> 
       </div> 
      </div> 
     </div> 
    </header> 
   </div> 
   <div id="jumpInfo" style="display: none">
    We’re sorry. The content you requested has been removed. You’ll be auto redirected in 1 second.
   </div> 
   <link type="text/css" rel="stylesheet"> 
   <link type="text/css" rel="stylesheet"> 
   <div id="breadcrumbs" ms.pgarea="body" ms.cmpgrp="breadcrumbs"> 
    <div id="breadcrumbDesktop" class="breadCrumb"> 
     <span class="breadcrumbEllipsis"><a href="https://msdn.microsoft.com/en-us/library/ff921345.aspx" title="patterns &amp; practices"></a></span> 
     <span><a href="https://msdn.microsoft.com/en-us/library/ff921347.aspx" title="Solution Development Fundamentals"><span>Solution Development Fundamentals</span></a></span> 
     <span><a href="https://msdn.microsoft.com/en-us/library/hh917312.aspx" title="General Guidance"><span>General Guidance</span></a></span> 
     <span class="breadcrumbDropSmall"> <a id="breadcrumbDropDownButton" href="#" targethref="https://msdn.microsoft.com/en-us/library/hh917312.aspx" title="Parallel Programming with Microsoft Visual C++"><span>Parallel Programming with Microsoft Visual C++</span></a> </span> 
    </div> 
    <div id="breadcrumbDropDownMenu"></div> 
    <div id="breadcrumbTablet" class="breadCrumb"> 
     <span class="breadcrumbEllipsis"><a href="https://msdn.microsoft.com/en-us/library/hh917312.aspx" title="General Guidance"></a></span> 
     <span><a href="https://msdn.microsoft.com/en-us/library/gg675934.aspx" title="Parallel Programming with Microsoft Visual C++"><span>Parallel Programming with Microsoft Visual C++</span></a></span> 
     <span class="breadcrumbDropSmall"><a id="tocDropDownButton" href="#" title="4: Parallel Aggregation"><span>4: Parallel Aggregation</span></a></span> 
    </div> 
    <div id="tocDropDownMenu"></div> 
    <div id="breadcrumbMobile" class="breadCrumb"> 
     <span class="breadcrumbEllipsis"><a href="https://msdn.microsoft.com/en-us/library/gg675934.aspx" title="Parallel Programming with Microsoft Visual C++"></a></span> 
     <span class="breadcrumbDropSmall"><a id="tocPopupButton" href="#" title="4: Parallel Aggregation"><span>4: Parallel Aggregation</span></a></span> 
    </div> 
   </div> 
   <div id="tocPopupMenu"> 
    <div id="tocPopMenuClose" class="tocCloseLarge"></div> 
    <div id="tocTitle">
     4: Parallel Aggregation
    </div> 
   </div> 
   <div id="body" ms.pgarea="body" class=""> 
    <span id="tabletView_large"></span> 
    <span id="tabletView_small"></span> 
    <span id="mobileView"></span> 
    <div id="leftNav" ms.cmpgrp="left toc" role="navigation" aria-label="left toc"> 
     <div id="tocnav" class="ArchiveV2"> 
      <div class="tocunselected"> 
       <div id="tocExpandArea"> 
        <span class="toc_empty"></span> 
        <span id="tocExpandButton"><a href="javascript:void(0)" aria-label="expand sibling toc" role="button"></a></span> 
       </div> 
       <div id="tocExpand"></div> 
      </div> 
      <div class="tocselected"></div> 
      <div class="tocunselected"> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663531.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="Foreword by Tony Hey">Foreword by Tony Hey</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663537.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="Foreword by Herb Sutter">Foreword by Herb Sutter</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663536.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="Preface">Preface</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663530.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="Acknowledgments">Acknowledgments</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663528.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="1: Introduction">1: Introduction</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663527.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="2: Parallel Loops">2: Parallel Loops</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663529.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="3: Parallel Tasks">3: Parallel Tasks</a> 
       </div> 
       <div class="toclevel current" data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663540.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="4: Parallel Aggregation">4: Parallel Aggregation</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663533.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="5: Futures">5: Futures</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663539.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="6: Dynamic Task Parallelism">6: Dynamic Task Parallelism</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663538.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="7: Pipelines">7: Pipelines</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663535.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="Appendix A: The Task Scheduler and Resource Manager">Appendix A: The Task Scheduler and Resource Manager</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663532.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="Appendix B: Debugging and Profiling Parallel Applications">Appendix B: Debugging and Profiling Parallel Applications</a> 
       </div> 
       <div class="toclevel " data-toclevel="1"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663534.aspx" mtpsaliasid="" mtpsassetid="" mtpsshortid="" title="Appendix C: Technology Overview">Appendix C: Technology Overview</a> 
       </div> 
      </div> 
      <a id="tocMenuToggler" href="javascript:void(0)" role="button"> <span id="tocMenuTogglerIcon" class="tocMenuCollapse" role="button" aria-expanded="true" aria-label="Table of contents menu"></span> 
       <div id="tocMenuTogglerLabel">
        TOC
       </div> </a> 
     </div> 
     <div style="display:none"> 
      <div id="CollapseLocalizeString">
       Collapse the table of content
      </div> 
      <div id="ExpandLocalizeString">
       Expand the table of content
      </div> 
     </div> 
     <div> 
      <a id="isd_archiveControlResponsive" style="display:none;" href="javascript:void(0)" role="button" aria-label="Hide Archived Versions" data-include-archive="Show Archived Versions" data-exclude-archive="Hide Archived Versions"> </a> 
      <div id="isd_archiveInstrument" style="display:none">
       This documentation is archived and is not being maintained.
      </div> 
     </div> 
    </div> 
    <div id="content" class="content" ms.cmpgrp="content body" role="main"> 
     <div id="archiveDisclaimerText" style="display:none">
      This documentation is archived and is not being maintained.
     </div> 
     <div class="topic" xmlns="http://www.w3.org/1999/xhtml"> 
      <h1 class="title">4: Parallel Aggregation</h1> 
      <div id="mainSection"> 
       <div id="mainBody"> 
        <p> </p>
        <p> <img id="pnp-logo" alt="patterns &amp; practices Developer Center" src="https://i-msdn.sec.s-msft.com/dynimg/IC368873.png" title="patterns &amp; practices Developer Center" xmlns=""> </p> 
        <div id="pandpInPageNav" class="alert"> 
         <table summary="table"> 
          <tbody>
           <tr>
            <th scope="col">On this page:</th>
           </tr> 
           <tr>
            <td> <strong><a href="#sec1">The Basics</a></strong><span> | </span> <strong><a href="#sec2">An Example</a></strong><span> | </span> <strong><a href="#sec3">Variations</a></strong><span> | </span> <strong><a href="#sec4">Considerations for Small Loop Bodies</a></strong><span> | </span> <strong><a href="#sec5">Other Uses for Combinable Objects</a></strong><span> | </span> <strong><a href="#sec6">Design Notes</a></strong><span> | </span> <strong><a href="#sec7">Related Patterns</a></strong><span> | </span> <strong><a href="#sec8">Exercises</a></strong><span> | </span> <strong><a href="#sec9">Further Reading</a></strong> </td>
           </tr> 
          </tbody>
         </table> 
        </div> 
        <p> <a href="https://msdn.microsoft.com/en-us/library/gg663527.aspx">Chapter 2, "Parallel Loops,"</a> shows how to use parallel techniques that apply the same independent operation to many input values. However, not all parallel loops have loop bodies that execute independently. For example, a sequential loop that calculates a sum does <em>not</em> have independent steps. All the steps accumulate their results in a single variable that represents the sum calculated up to that point. This accumulated value is an aggregation. If you were to convert the sequential loop to a parallel loop without making any other changes, your code would fail to produce the expected result. Parallel reads and writes of the single variable would corrupt its state.</p> 
        <p>Nonetheless, there is a way for an aggregation operation to use a parallel loop. This is the Parallel Aggregation pattern.</p> 
        <p> <strong>The Parallel Aggregation pattern lets you use multiple cores to calculate sums and other types of accumulations that are based on associative operators.</strong> </p> 
        <p>Although calculating a sum is an example of aggregation, the pattern is more general than that. It works for any binary operation that is associative. However, some implementations of the Parallel Aggregation pattern also expect the operations to be commutative.</p> 
        <p>The Parallel Aggregation pattern uses unshared, local variables that are merged at the end of the computation to give the final result. Using unshared, local variables for partial, locally calculated results makes the steps of a loop independent of each other. Parallel aggregation demonstrates the principle that it's usually better to make changes to your algorithm than to add synchronization primitives to an existing algorithm. For more information about the algorithmic aspects of this pattern, see the "Design Notes" section later in this chapter.</p> 
        <p>The Parallel Aggregation pattern is also known as the Parallel Reduction pattern because it combines multiple inputs into a single output.</p> 
        <h1 class="heading" id="sec1">The Basics</h1> 
        <p>The most familiar application of aggregation is calculating a sum. Here's a sequential version.</p> 
        <div id="code-snippet-1" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_4c88856f-10cd-4d52-8c7a-651e37272afe');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_4c88856f-10cd-4d52-8c7a-651e37272afe" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
  vector&lt;<span style="color:Blue;">int</span>&gt; sequence = ...  
  <span style="color:Blue;">int</span> count = 0;
  <span style="color:Blue;">for</span> (size_t i = 0; i &lt; sequence.size(); i++)
      count += IsPrime(sequence[i]) ? 1 : 0;
  <span style="color:Blue;">return</span> count;
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>This is a typical sequential <strong>for</strong> loop. In this example and the ones that follow, <strong>IsPrime</strong> is a user-provided function that determines if its argument is a prime number. The result is a count of how many prime numbers are contained in the input sequence. (Of course, you could also have used the Standard Template Library (STL) <strong>count_if </strong>operation in this particular example.)</p>
        <p>How can sequential accumulation be adapted for parallel processing? As was explained in Chapter 2, simply swapping the <strong>for</strong> operator with <strong>parallel_for</strong> won’t work because the <strong>count</strong> variable is shared by all iterations. You might also be tempted to wrap a critical section around the operation that increments the <strong>count</strong> variable. The critical section would prevent parallel iterations from performing conflicting reads and writes, but the performance of that approach would be much, much worse than the sequential version you are trying to optimize. The cost of synchronization would be prohibitive. (In fact, programmers often underestimate the performance cost of synchronization operations.)</p>
        <p>Typical of many situations in parallel programming, the answer is not to apply synchronization operations to the existing sequential algorithm in order to make it "safe" for parallel execution. Instead, redesign the algorithm to use a two-phase approach. First, subdivide the problem into as many tasks as you have cores and calculate partial results locally on a per-core basis. Then, once all of the per-task partial results are ready, sequentially merge the results into one final accumulated value. The process of combining partial reductions is graphically illustrated by the cartoon illustration on this chapter’s facing page. </p>
        <p>PPL provides a special data structure that makes it easy to create per-task local results in parallel and merge them as a final sequential step. This data structure is the <strong>combinable</strong> class. The following code examples show how to use the combinable class to implement the Parallel Aggregation pattern.</p>
        <p><strong>The combinable class makes it easy to create per-task local results in parallel and merge them as a final sequential step.</strong></p> 
        <div id="code-snippet-2" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_83b3ec7b-b3f3-442c-8ddc-96383fd67716');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_83b3ec7b-b3f3-442c-8ddc-96383fd67716" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
  vector&lt;<span style="color:Blue;">int</span>&gt; sequence = ...  
  
  combinable&lt;<span style="color:Blue;">int</span>&gt; count([]() { <span style="color:Blue;">return</span> 0; });     

  parallel_for_each(sequence.cbegin(), sequence.cend(), 
    [&amp;count](<span style="color:Blue;">int</span> i)
    {
        count.local() += IsPrime(i) ? 1 : 0;
    });
  <span style="color:Blue;">return</span> count.combine(plus&lt;<span style="color:Blue;">int</span>&gt;());
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>The <strong>count</strong> variable is a <strong>combinable</strong> object that provides thread-private values. To compute the initial, local values the constructor of the <strong>combinable</strong> class takes a function as an argument.</p>
        <div class="alert">
         <table summary="table">
          <tbody>
           <tr>
            <th scope="col"><img id="note" alt="Gg663540.note(en-us,PandP.10).gif" src="https://i-msdn.sec.s-msft.com/areas/global/content/clear.gif" title="Gg663540.note(en-us,PandP.10).gif" xmlns="" class="cl_IC101471">Note:</th>
           </tr>
           <tr>
            <td>The <strong>combinable</strong> class assumes that the operation provided as an argument to the <strong>combine</strong> method is commutative.</td>
           </tr>
          </tbody>
         </table>
         <p></p>
        </div>
        <p>Next, a <strong>parallel_for_each</strong> loop creates multiple tasks (typically, equal to some multiple of the number of cores on your computer) and runs the loop body function in parallel. The tasks collect the partial, per-core results into per-task variables that are provided by the <strong>combinable</strong> object’s <strong>local</strong> method. </p>
        <p>The number of tasks depends on the level of concurrency available in the current context. See Appendix A, "The Task Scheduler and Resource Manager" for more information about runtime policy settings for concurrency. Also, the <strong>parallel_for_each</strong> loop uses dynamic range stealing to equalize the amount of work among its internal worker threads.</p>
        <p>After the <strong>parallel_for_each</strong> loop completes, the <strong>combinable</strong> object’s <strong>combine</strong> method applies a user-specified binary operation to aggregate the values of each of the per-task partial results. In this example the combination function is integer addition. The return value of the <strong>combine</strong> method is the final aggregated value.</p>
        <p>The Concurrency Runtime sample pack provides several STL-style parallel aggregation functions. The easiest way to understand how these functions work is to compare them with their corresponding sequential operations in STL. </p>
        <p>STL provides a very simple way to express sequential aggregation with iterators. Here is an example.</p> 
        <div id="code-snippet-3" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_76f1b63c-dae6-451d-ab2b-20d46cae7ee5');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_76f1b63c-dae6-451d-ab2b-20d46cae7ee5" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
  vector&lt;<span style="color:Blue;">int</span>&gt; sequence = ...  
  <span style="color:Blue;">return</span> accumulate(sequence.cbegin(), sequence.cend(), 0, 
                    IncrementIfPrime());
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>The STL <strong>accumulate</strong> function applies a binary function to an internal accumulation variable and to each element of a sequence, updating the accumulation variable with each iteration. The first and second arguments to the <strong>accumulate</strong> function give the iteration bounds. The third argument is the initial value of the accumulation variable, and the fourth argument is a binary reduction function that will be successively applied to the accumulation variable and to each iterated value. The job of the reduction function is to combine two input values. Here is the implementation of the reduction function, <strong>IncrementIfPrime</strong>.</p> 
        <div id="code-snippet-4" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_e65247d8-d466-4fd4-ba35-f9866a5231d8');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_e65247d8-d466-4fd4-ba35-f9866a5231d8" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
<span style="color:Blue;">struct</span> IncrementIfPrime
{
    <span style="color:Blue;">int</span> <span style="color:Blue;">operator</span>()(<span style="color:Blue;">int</span> total, <span style="color:Blue;">int</span> element) <span style="color:Blue;">const</span>
    {
        <span style="color:Blue;">return</span> total + (IsPrime(element) ? 1 : 0);
    }
};
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <div class="alert">
         <table summary="table">
          <tbody>
           <tr>
            <th scope="col"><img id="note" alt="Gg663540.note(en-us,PandP.10).gif" src="https://i-msdn.sec.s-msft.com/areas/global/content/clear.gif" title="Gg663540.note(en-us,PandP.10).gif" xmlns="" class="cl_IC101471">Note:</th>
           </tr>
           <tr>
            <td>If the conventions of STL algorithms are unfamiliar to you, you should brush up on them before reading this chapter. See the "Further Reading" section for more information.</td>
           </tr>
          </tbody>
         </table>
         <p></p>
        </div>
        <p>The STL <strong>accumulate</strong> function is a sequential operation whose performance is comparable to the sequential <strong>for</strong> loop shown in the earlier example. To convert an STL <strong>accumulate</strong> expression into a parallel aggregation you can use the <strong>parallel_reduce</strong> function of the Concurrency Runtime sample pack. The following code gives an example.</p> 
        <div id="code-snippet-5" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_da74df05-e13a-4983-af2e-583a2061493a');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_da74df05-e13a-4983-af2e-583a2061493a" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
<span style="color:Blue;">using</span> <span style="color:Blue;">namespace</span> ::Concurrency::samples;
vector&lt;<span style="color:Blue;">int</span>&gt; sequence = ...  
<span style="color:Blue;">return</span> parallel_reduce(sequence.cbegin(), sequence.cend(), 0, 
                       CountPrimes(), plus&lt;<span style="color:Blue;">int</span>&gt;());
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>The <strong>parallel_reduce</strong> function takes five arguments. The first two arguments give the iteration bounds. The third argument gives the value of the reduction’s identity element. If the reduction is based on addition, this element will be 0. For multiplicative reduction, the identity element is 1. For reductions such as aggregate set union, the identity element is the empty set.</p>
        <p>The fourth argument is a function object that can be applied on a subrange of an iterator to produce a local partial aggregation. This example uses a functor created by instantiating the <strong>CountPrimes</strong> class. The return value of the function object is the local partial result from the first phase of the Parallel Aggregation pattern.</p>
        <p>The fifth argument is a reduction function that will combine the partial results that have been calculated for each of the subranges.</p>
        <p>Here is the implementation of the <strong>CountPrimes</strong> class-type functor.</p> 
        <div id="code-snippet-6" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_7dd9b392-242c-4de4-b28e-ee46ccf69631');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_7dd9b392-242c-4de4-b28e-ee46ccf69631" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
<span style="color:Blue;">struct</span> CountPrimes
{
  <span style="color:Blue;">int</span> <span style="color:Blue;">operator</span>()(vector&lt;<span style="color:Blue;">int</span>&gt;::const_iterator begin, 
                 vector&lt;<span style="color:Blue;">int</span>&gt;::const_iterator end, 
                 <span style="color:Blue;">int</span> right) <span style="color:Blue;">const</span>
  {
    <span style="color:Blue;">return</span> right + accumulate(begin, end, 0, IncrementIfPrime());
  }
};
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>The <strong>parallel_reduce</strong> function divides the input iterator into ranges. There will be enough ranges to compensate for the effects of uneven workloads, but not so many ranges that the overhead of calculating them dominates the computation. PPL determines how many ranges to create. </p>
        <p>In this example, the <strong>CountPrimes</strong> function object will be invoked one time for each of the ranges. It executes a sequential accumulation operation on the subrange and collects the result.</p>
        <p>The <strong>parallel_reduce</strong> function is usually the recommended approach whenever you need to apply the Parallel Aggregation pattern within applications that use PPL. Its declarative nature makes it less prone to error than other approaches, and its performance on multicore computers is competitive with them. Implementing parallel aggregation with <strong>parallel_reduce</strong> doesn't require adding locks in your code. Instead, all the synchronization occurs internally. Of course, if <strong>parallel_reduce</strong> doesn't meet your needs or if you prefer a less declarative style of coding, you can also use the <strong>combinable</strong> class with <strong>parallel_for</strong> or <strong>parallel_for_each </strong>to implement the parallel aggregation. </p>
        <p>You should be aware that <strong>parallel_for</strong> and <strong>parallel_for_each</strong> add overhead due to their support of features such as cancellation and dynamic range stealing. Also, a call to the <strong>combinable::local() </strong>method inside of a parallel loop adds the cost of a hash table lookup to each iteration of the loop. In general, use parallel aggregation to increase performance when iterations perform complex computations.</p>
        <h1 class="heading" id="sec2">An Example</h1>
        <p>Aggregation doesn't only apply to numeric values. It arises in many other application contexts. The following example shows how to use a variation of parallel aggregation known as map/reduce to aggregate nonscalar data types.</p>
        <p>The example is of a social network service, where subscribers can designate other subscribers as friends. The site recommends new friends to each subscriber by identifying other subscribers who are friends of friends. To limit the number of recommendations, the service only recommends the candidates who have the largest number of mutual friends. Candidates can be identified in independent parallel operations, and then candidates are ranked and selected in an aggregation operation.</p>
        <p>Here's how the data structures and algorithms that are used by the recommendation service work. Subscribers are identified by integer ID numbers. A subscriber's friends are represented by the collection of their IDs. The collection is a <em>set</em> because each element (a friend's ID number) occurs only once and the order of the elements doesn't matter. For example, the subscriber whose ID is 0 has two friends whose IDs are 1 and 2. This can be written as:</p>
        <p>0 -&gt; { 1, 2 }</p>
        <p>The social network repository stores an entry like this for every subscriber. In order to recommend friends to a subscriber, the recommendation service must consider a subscriber's entry, as well as the entries for all of that subscriber's friends. For example, to recommend friends for subscriber 0, the pertinent entries in the repository are:</p>
        <p>0 -&gt; { 1, 2 }</p>
        <p>1 -&gt; { 0, 2, 3 }</p>
        <p>2 -&gt; { 0, 1, 3, 4 }</p>
        <p>You can see that the service should recommend subscribers 3 and 4 to subscriber 0 because they appear among the friends of subscribers 1 and 2, who are already friends of 0. In addition, the recommendation service should rank subscriber 3 higher than 4, because 3 is a friend of both of 0's friends, while 4 is a friend of only one of them. You can write the results like this:</p>
        <p>{ 3(2), 4(1) }</p>
        <p>This means that subscriber 3 shares two mutual friends with subscriber 0, and subscriber 4 shares one. This is an example of a type of collection known as a multiset. In a multiset, each element (3 and 4 in this example) is associated with a multiplicity, which is the number of times it occurs in the collection (2 and 1, respectively). So a multiset is a collection where each element only occurs once, yet it can represent duplicates (or larger multiplicities). The order of elements in a multiset doesn't matter.</p>
        <div class="alert">
         <table summary="table">
          <tbody>
           <tr>
            <th scope="col"><img id="note" alt="Gg663540.note(en-us,PandP.10).gif" src="https://i-msdn.sec.s-msft.com/areas/global/content/clear.gif" title="Gg663540.note(en-us,PandP.10).gif" xmlns="" class="cl_IC101471">Note:</th>
           </tr>
           <tr>
            <td>The example in this section uses a multiset implementation that differs from STL.</td>
           </tr>
          </tbody>
         </table>
         <p></p>
        </div>
        <p>The recommendation service uses map/reduce and has three phases.</p>
        <p> In the first phase, which is the map<em> phase</em>, the service creates collections of friend candidates. The collections of potential friends are calculated by iterating through the subscriber’s friends and searching their friends for people that are not currently friends of the subscriber. </p>
        <p>In the second phase, which is the reduce<em> phase</em>, the service aggregates the sets of potential friends into a multiset where each candidate's ID is associated with its multiplicity (the number of mutual friends). For each set of possible friends, the reduce phase merges the sets of potential friends and maintains a count of the occurrences. It uses a <strong>hash_map&lt;FriendID, int&gt;</strong> instance for this purpose. </p>
        <p>The final phase performs postprocessing. The service ranks candidates by sorting them according to their multiplicity and selects only the candidates with the largest multiplicities.</p>
        <p>An important feature of map/reduce is that the result of the map stage is a collection of items that is compatible with the reduce stage. The reduce stage uses multisets; therefore, the map stage does not produce only a list of candidate IDs; instead, it produces a vector of multisets, where each multiset contains only one candidate with a multiplicity of one. In this example, the output of the map stage is a collection of two multisets. The subscribers are the numbers 3 and 4.</p>
        <p>{ 3(1) }, { 3(1) , 4(1) } </p>
        <p>Here, the first multiset contains friends of subscriber 1, and the second multiset contains friends of subscriber 2.</p>
        <p>Another important feature of map/reduce is that the aggregation in the reduce phase is performed by applying a binary operation to pairs of elements from the collection that is produced by the map phase. In this example, the operation is a multiset union, which combines two multisets by collecting the elements and adding their multiplicities. The result of applying the multiset union operation to the two multisets in the preceding collection is:</p>
        <p>{ 3(2), 4(1) }</p>
        <p>Now that there is only one multiset, the reduce phase is complete. By repeatedly applying the multiset union operation, the reduce phase can aggregate any collection of multisets, no matter how large, into one multiset.</p>
        <p>This is the code that defines the main data types that are used in the sample.</p> 
        <div id="code-snippet-7" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_382b5514-380b-4160-90a5-c5621ca45791');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_382b5514-380b-4160-90a5-c5621ca45791" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
<span style="color:Blue;">typedef</span> <span style="color:Blue;">int</span> SubscriberID;
<span style="color:Blue;">typedef</span> <span style="color:Blue;">int</span> FriendID;
<span style="color:Blue;">typedef</span> set&lt;FriendID&gt; FriendsSet;
<span style="color:Blue;">typedef</span> shared_ptr&lt;FriendsSet&gt; FriendsSetPtr;
<span style="color:Blue;">typedef</span> hash_map&lt;SubscriberID, FriendsSetPtr&gt; SubscriberMap;


<span style="color:Blue;">class</span> FriendMultiSet : <span style="color:Blue;">public</span> hash_map&lt;FriendID, <span style="color:Blue;">int</span>&gt;
{
  <span style="color:Green;">// Multiset of potential friends.</span>
  <span style="color:Green;">// ...</span>
} 

<span style="color:Blue;">typedef</span> shared_ptr&lt;FriendMultiSet&gt; FriendMultiSetPtr;
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>The <strong>FriendsSet</strong> type is implemented by an STL set. The <strong>FriendMultiSet</strong> type has a custom implementation. In addition to these data types, the sample also uses an ordered list of potential friends that is sorted by multiplicity in decreasing order. Here is the code.</p> 
        <div id="code-snippet-8" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_8cdea019-6e82-48be-8758-5d99ea49f59b');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_8cdea019-6e82-48be-8758-5d99ea49f59b" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
<span style="color:Blue;">struct</span> LessMultisetItem
{
  <span style="color:Blue;">bool</span> <span style="color:Blue;">operator</span>()(<span style="color:Blue;">const</span> pair&lt;FriendID, <span style="color:Blue;">int</span>&gt; value1, 
                  <span style="color:Blue;">const</span> pair&lt;FriendID, <span style="color:Blue;">int</span>&gt; value2) <span style="color:Blue;">const</span>
  {
    <span style="color:Blue;">return</span> (value1.second == value2.second) ? 
              (value1.first &gt; value2.first) : 
              (value1.second &gt; value2.second);
  }
};

<span style="color:Blue;">typedef</span> <span style="color:Blue;">public</span> set&lt;pair&lt;FriendID, <span style="color:Blue;">int</span>&gt;, LessMultisetItem&gt;  
                                           FriendOrderedMultiSet;
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>Note that STL also implements a <strong>std::multiset</strong> type, but it is used to store sets which contain multiple key values with equal values, rather than key/value pairs.</p>
        <p>Finally, here is the code for the sequential version of the algorithm that suggests potential friends. </p> 
        <div id="code-snippet-9" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_52996e4f-2f4e-4d3d-9ee7-f6e7ad14f2f3');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_52996e4f-2f4e-4d3d-9ee7-f6e7ad14f2f3" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
FriendOrderedMultiSet 
PotentialFriendsSequentialTransform(
  <span style="color:Blue;">const</span> SubscriberMap&amp; subscribers, 
  SubscriberID id, 
  <span style="color:Blue;">int</span> maxCandidates)
{
  <span style="color:Green;">// Map:</span>

  FriendsSetPtr friends = subscribers.find(id)-&gt;second;
  vector&lt;FriendMultiSetPtr&gt; friendsOfFriends(friends-&gt;size());

  transform(friends-&gt;cbegin(),friends-&gt;cend(), 
    friendsOfFriends.begin(), 
    [&amp;subscribers,&amp;friends,&amp;id](<span style="color:Blue;">int</span> friendID)-&gt;FriendMultiSetPtr 
    {
      FriendsSetPtr theirFriends = 
                      subscribers.find(friendID)-&gt;second;
      FriendsSetPtr friendsOfFriend = make_shared&lt;FriendsSet&gt;();

      set_difference(theirFriends-&gt;cbegin(), 
        theirFriends-&gt;cend(),
        friends-&gt;cbegin(),friends-&gt;cend(), 
        inserter(*friendsOfFriend, friendsOfFriend-&gt;end()));
      friendsOfFriend-&gt;erase(id);

      <span style="color:Blue;">return</span> FriendMultiSetPtr(
                          <span style="color:Blue;">new</span> FriendMultiSet(friendsOfFriend));
    });

  <span style="color:Green;">// Reduce:</span>

  <span style="color:Green;">// The reduction does not use std:accumulate because </span>
  <span style="color:Green;">// this results in too much copying of intermediate </span>
  <span style="color:Green;">// FriendCountMap</span>
  FriendMultiSet candidates;
  for_each(friendsOfFriends.cbegin(), friendsOfFriends.cend(),  
    [&amp;candidates](FriendMultiSetPtr set)
    {
      candidates.Union(set);
    });

  <span style="color:Green;">// Postprocess:</span>

  <span style="color:Blue;">return</span> candidates.MostNumerous(maxCandidates);
} 
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>In the map phase, this code loops sequentially over the subscriber's friends and builds a collection of multisets of candidates. In the reduce phase, the code loops sequentially over those multisets and aggregates them with the multiset union operation, which is implemented by the <strong>Union</strong> method. If this code executes with the few subscribers in the example, the <strong>id</strong> argument is 0 and <strong>subscribers.find(id)-&gt;second</strong> returns { 1, 2}. When the map phase completes<strong>, the </strong>friendsOfFriend variable contains { 3(1) }, { 3(1) , 4(1) }. When the reduce phase completes, candidates contains { 3(2), 4(1) }.</p>
        <p>Multiset union is associative; if you aggregate several multisets into one by successively forming unions in a pair-wise manner, the final result does not depend on the order of the union operations. Multiset union is also commutative; the result does not depend on the order of its arguments. If the aggregation function is not associative, it can't be done in parallel without potentially getting different results. If it's not commutative, the potential for parallelism is greatly reduced.</p>
        <div class="alert">
         <table summary="table">
          <tbody>
           <tr>
            <th scope="col"><img id="note" alt="Gg663540.note(en-us,PandP.10).gif" src="https://i-msdn.sec.s-msft.com/areas/global/content/clear.gif" title="Gg663540.note(en-us,PandP.10).gif" xmlns="" class="cl_IC101471">Note:</th>
           </tr>
           <tr>
            <td>Strictly speaking, floating-point arithmetic is neither commutative nor associative. From run to run, parallel computations over floats or doubles may end up with slightly different results due to rounding errors.</td>
           </tr>
          </tbody>
         </table>
         <p></p>
        </div>
        <p>Here's how to use the <strong>parallel_transform</strong> and <strong>parallel_reduce</strong> functions of the Concurrency Runtime sample pack to apply map/reduce to the social networking example.</p> 
        <div id="code-snippet-10" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_c1a892ca-929a-455f-9af1-89e5969f1f4a');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_c1a892ca-929a-455f-9af1-89e5969f1f4a" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
FriendOrderedMultiSet
PotentialFriendsParallel(<span style="color:Blue;">const</span> SubscriberMap&amp; subscribers, 
                         SubscriberID id, 
                         <span style="color:Blue;">int</span> maxCandidates)
{
  <span style="color:Green;">// Map:</span>

  FriendsSetPtr friends = subscribers.find(id)-&gt;second;
  vector&lt;FriendMultiSetPtr&gt; friendsOfFriends(friends-&gt;size());

  parallel_transform(friends-&gt;cbegin(),friends-&gt;cend(), 
    friendsOfFriends.begin(), 
    [&amp;subscribers,&amp;friends,&amp;id](<span style="color:Blue;">int</span> friendID)-&gt;FriendMultiSetPtr 
    {
      FriendsSetPtr theirFriends = 
                             subscribers.find(id)-&gt;second;
      FriendsSetPtr friendsOfFriend = make_shared&lt;FriendsSet&gt;();

      set_difference(
        theirFriends-&gt;cbegin(), theirFriends-&gt;cend(), 
        friends-&gt;cbegin(), friends-&gt;cend(), 
        inserter(*friendsOfFriend, friendsOfFriend-&gt;end()));
      friendsOfFriend-&gt;erase(id);

      <span style="color:Blue;">return</span> FriendMultiSetPtr(
                          <span style="color:Blue;">new</span> FriendMultiSet(friendsOfFriend));
    });

  <span style="color:Green;">// Reduce:</span>

  FriendMultiSet candidates;
  candidates = 
    parallel_reduce(friendsOfFriends.cbegin(), 
      friendsOfFriends.cend(), 
      FriendMultiSet(), 
      [](vector&lt;FriendMultiSetPtr&gt;::const_iterator cbegin, 
         vector&lt;FriendMultiSetPtr&gt;::const_iterator cend, 
         <span style="color:Blue;">const</span> FriendMultiSet&amp; right)
      { 
        <span style="color:Blue;">return</span> right.Union(cbegin, cend); 
      },
      [](<span style="color:Blue;">const</span> FriendMultiSet&amp; left, <span style="color:Blue;">const</span> FriendMultiSet&amp; right)
      { 
        <span style="color:Blue;">return</span> left.Union(right);
      });

  <span style="color:Green;">// Postprocess:</span>

  <span style="color:Blue;">return</span> candidates.MostNumerous(maxCandidates);
}
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>Recall that in map/reduce, independent parallel operations (the map phase) are followed by aggregation (the reduce phase). In the map phase, the parallel operations iterate over all the friends of subscriber 0. The map phase is performed by the parallel_transform function, which finds all the friends of each friend of the subscriber. The <strong>set_difference</strong> function prevents redundant recommendations by removing the subscriber. The output of the map phase is a vector of multisets for each of the subscriber’s friends. </p>
        <p>The reduce phase is performed by the call to the <strong>parallel_reduce</strong> function, which counts the duplicate candidate IDs. Note that the call to the <strong>FriendMultiSet</strong> function returns an empty multiset that is used as the identity element. The <strong>Union</strong> method combines two multisets.</p>
        <p>The return statement performs the final postprocessing step that selects the candidates with the highest multiplicities.</p>
        <h1 class="heading" id="sec3">Variations</h1>
        <p>This section contains some common variations of the Parallel Aggregation pattern.</p>
        <h2 class="subheading" id="sec4">Considerations for Small Loop Bodies</h2>
        <p>If the body of your parallel aggregation loop performs very little work, you may find that performing parallel aggregation takes longer than sequential aggregation. When you have small loop bodies, you can apply the techniques that were described in Chapter 3, "Parallel Loops" in the "Special Handling of Small Loop Bodies" section. These techniques allow you to use sequential aggregation within subranges.</p>
        <h2 class="subheading" id="sec5">Other Uses for Combinable Objects</h2>
        <p>The <strong>combinable</strong> class is most commonly used to implement the Parallel Aggregation pattern, but you do not necessarily need to use <strong>combinable</strong> objects for aggregation. You can also use <strong>combinable</strong> instances to create thread-local variables when a thread starts. </p>
        <h1 class="heading" id="sec6">Design Notes</h1>
        <p>If you compare the sequential and parallel versions of the Parallel Aggregation pattern, you see that the design of the parallel version includes an additional step in the algorithm that merges partial results. Figure 1 illustrates the two phases of parallel aggregation.</p>
        <p><img id="BB96BB3400639D7F0DB094E591655FFF" alt="Gg663540.BB96BB3400639D7F0DB094E591655FFF(en-us,PandP.10).png" src="https://i-msdn.sec.s-msft.com/dynimg/IC429622.png" title="Gg663540.BB96BB3400639D7F0DB094E591655FFF(en-us,PandP.10).png" xmlns=""></p>
        <p><strong>Figure 1</strong><br></p>
        <div class="caption">
         Parallel aggregation 
        </div>
        <p>Figure 1 shows that instead of placing the accumulation in a single, shared result, the parallel loop uses unshared local storage for partial results (these are named <em>subtotals </em>in Figure 1). The <strong>local</strong> method of the <strong>combinable</strong> class provides access to the unshared storage for each thread. Each worker thread processes a single partition of the input values. The number of partitions depends on the degree of parallelism that's needed to efficiently use the computer's available cores. After all of the partial results have been computed, the combine function of the combinable object merges the local results into the final, global result. </p>
        <p>The reason that this approach is fast is that there is very little need for synchronization operations. Calculating the per-task local results uses no shared variables, and therefore requires no locks. The <strong>combine</strong> operation is a separate sequential step and also does not require locks.</p>
        <p>This discussion shows that the Parallel Aggregation pattern is a good example of why changes to your algorithm are often needed when moving from a sequential to a parallel approach.</p>
        <p><strong>You can't simply add locks and expect to get good performance. You also need to think about the algorithm.</strong></p>
        <p>To make this point clear, here's an example of what parallel aggregation would look like if you simply added locks to the existing sequential algorithm. To do this, you only need to convert sequential <strong>for</strong> to <strong>parallel_for</strong> and add one lock statement.</p> 
        <div id="code-snippet-11" class="codeSnippetContainer" xmlns=""> 
         <div class="codeSnippetContainerTabs"> 
          <div class="codeSnippetContainerTabSingle" dir="ltr">
           <a>C++</a>
          </div> 
         </div> 
         <div class="codeSnippetContainerCodeContainer"> 
          <div class="codeSnippetToolBar"> 
           <div class="codeSnippetToolBarText"> 
            <a name="CodeSnippetCopyLink" style="display: none;" title="Copy to clipboard." href="javascript:if (window.epx.codeSnippet)window.epx.codeSnippet.copyCode('CodeSnippetContainerCode_8b38d09b-6b08-47bc-b4ee-46177e55f59d');" ms.cmptyp="CodeSnippet">Copy</a> 
           </div> 
          </div> 
          <div id="CodeSnippetContainerCode_8b38d09b-6b08-47bc-b4ee-46177e55f59d" class="codeSnippetContainerCode" dir="ltr"> 
           <div style="color:Black;">
            <pre>
<span style="color:Green;">// WARNING: BUGGY CODE. Do not copy this example.</span>
<span style="color:Green;">// It will run *much slower* than the sequential version.</span>
<span style="color:Green;">// It is included to show what *not* to do.</span>

vector&lt;<span style="color:Blue;">int</span>&gt; sequence = ...
CRITICAL_SECTION cs;
InitializeCriticalSectionAndSpinCount(&amp;cs, 0x80000400);
<span style="color:Blue;">int</span> count = 0;

<span style="color:Green;">// BUG -- Do not use parallel_for_each in this case</span>
parallel_for_each(sequence.cbegin(), sequence.cend(), 
  [&amp;count, &amp;cs](<span style="color:Blue;">int</span> i)
  {
    <span style="color:Green;">// BUG -- Do not use locking inside of a parallel aggregation</span>
    EnterCriticalSection(&amp;cs);
    <span style="color:Green;">// BUG -- Do not use shared variable for parallel aggregation</span>
    count += IsPrime(i) ? 1 : 0;
    LeaveCriticalSection(&amp;cs);
  });

<span style="color:Blue;">return</span> count;
</pre>
           </div> 
          </div> 
         </div> 
        </div> 
        <p>If you forget to enter and exit the critical section, this code fails to calculate the correct sum on a multicore computer. Adding the synchronization code makes this example correct with respect to serialization. If you run this code, it produces the expected sum. However, it fails completely as an optimization. This code is many times slower than the sequential version it attempted to optimize! The reason for the poor performance is the cost of synchronization.</p>
        <p>In contrast, the examples of the Parallel Aggregation pattern that you have seen elsewhere in this chapter will run much faster on multicore computers than the sequential equivalent, and their performance also improves in approximate proportion to the number of cores.</p>
        <p>It might at first seem counterintuitive that adding additional steps can make an algorithm perform better, but it's true. If you introduce extra work, and that work has the effect of preventing data dependencies between parallel tasks, you often benefit in terms of performance.</p>
        <h1 class="heading" id="sec7">Related Patterns</h1>
        <p>There's a group of patterns related to summarizing data in a collection. Aggregation (also known as Reduce) is one of them. The others include Scan and Pack. The Scan pattern occurs when each iteration of a loop depends on data computed in the previous iteration. The Pack pattern uses a parallel loop to select elements to retain or discard. The result of a pack operation is a subset of the original input. These patterns can be combined, as in the Fold and Scan pattern. For more information about these related patterns, see the section, "Further Reading," at the end of this chapter.</p>
        <h1 class="heading" id="sec8">Exercises</h1>
        <ol>
         <li>Consider the small social network example (with subscribers 0, 1, 2). What constraints exist in the data? How are these constraints observed in the sample code?</li>
         <li>In the social network example, there's a separate postprocessing step where the multiset of candidates, which is an unordered collection, is transformed into a sequence that is sorted by the number of mutual friends, and then the top N candidates are selected. Could some or all of this postprocessing be incorporated into the reduction step? </li>
         <li>In the standard reference on map/reduce (see the section, "Further Reading"), the map phase executes a map function that takes an input pair and produces a set of intermediate key/value pairs. All pairs for the same intermediate key are passed to the reduce phase. That reduce phase executes a reduce function that merges all the values for the same intermediate key to a possibly smaller set of values. The signatures of these functions can be expressed as: map (k1,v1) -&gt; list(k2,v2) and reduce (k2,list(v2)) -&gt; list(v2). In the social network example, what are the types of k1, v1, k2, and v2? What are the map and reduce functions?</li>
        </ol>
        <h1 class="heading" id="sec9">Further Reading</h1>
        <p>Musser et al. explain the standard template library (STL). A thorough treatment of synchronization techniques appears in the book by Duffy. The related patterns of Stencil, Scan, and Pack are discussed by McCool. The standard reference on map/reduce is the paper by Dean and Ghemawat. Other cases of algorithms that use parallel loops with some dependencies between steps are described by Toub. These include fold-and-scan and dynamic programming. Toub’s examples are in managed code, but the algorithms apply equally to native code. The Wikipedia article describes the mathematical multisets that were used in code example in this chapter.</p>
        <p>Dean, J., and S. Ghemawat. "MapReduce: Simplified Data Processing on Large Clusters." In OSDI '04: Sixth Symposium on Operating System Design and Implementation, 137–150, 2004.</p>
        <p>Duffy, J., Concurrent Programming on Windows. Addison-Wesley, 2008.</p>
        <p>McCool, M., "Structured Patterns: An Overview." December 2009.<br><a href="http://www.ddj.com/go-parallel/article/showArticle.jhtml?articleID=223101515">http://www.ddj.com/go-parallel/article/showArticle.jhtml?articleID=223101515</a>.</p>
        <p>Musser, D. R., G. J. Derge, and A. Saini. <em>STL Tutorial and Reference Guide: C++ Programming with the Standard Template Library, </em>3rd edition. Addison-Wesley Professional, December 2009.</p>
        <p>Toub, S., "Patterns of Parallel Programming: Understanding and Applying Parallel Patterns with the .NET Framework 4." 2009. <br><a href="https://www.microsoft.com/downloads/details.aspx?FamilyID=86b3d32b-ad26-4bb8-a3ae-c1637026c3ee&amp;displaylang=en">http://www.microsoft.com/downloads/details.aspx?FamilyID=86b3d32b-ad26-4bb8-a3ae-c1637026c3ee&amp;displaylang=en</a>.</p>
        <p>Wikipedia. "Multiset." <a href="http://en.wikipedia.org/wiki/Multiset">http://en.wikipedia.org/wiki/Multiset</a>.</p>
       </div> 
       <div id="topicLinks" class="navigationLinks"> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663533.aspx">Next Topic</a> 
        <span> | </span> 
        <a href="https://msdn.microsoft.com/en-us/library/gg663529.aspx">Previous Topic</a> 
        <span> | </span> 
        <a href="https://msdn.microsoft.com/en-us/library/gg675934.aspx">Home</a> 
       </div> 
       <div> 
        <p id="pandpDate">Last built: March 9, 2012</p> 
       </div> 
      </div> 
     </div> 
     <div class="libraryMemberFilter"> 
      <div class="filterContainer"> 
       <span>Show:</span> 
       <label> <input type="checkbox" class="libraryFilterInherited" checked value="Inherit">Inherited </label> 
       <label> <input type="checkbox" class="libraryFilterProtected" checked value="Protected">Protected </label> 
      </div> 
     </div> 
     <input type="hidden" id="libraryMemberFilterEmptyWarning" value="There are no members available with your current filter settings."> 
    </div> 
    <div id="rightNavigationMenu" ms.cmpgrp="right nav"> 
     <div id="mobileButtons"> 
      <div id="navigationButtons"> 
       <a id="isd_print" href="https://msdn.microsoft.com/en-us/library/gg663540(d=printer).aspx" rel="nofollow"><ins class="print"></ins>Print </a> 
       <a id="isd_printABook" href="/en-us/library/export/help/?returnurl=%2fen-us%2flibrary%2fgg663540.aspx"> <ins class="export"></ins>Export (<span class="count">0</span>) </a> 
      </div> 
     </div> 
     <div id="navMain"> 
      <div id="closeNavigation"> 
       <a class="tocCloseSmall" id="closeButton"></a> 
      </div> 
      <div id="navigationButtons"> 
       <a id="isd_print" href="https://msdn.microsoft.com/en-us/library/gg663540(d=printer).aspx" rel="nofollow"><ins class="print"></ins>Print </a> 
       <a id="isdShare" href="#" role="button" aria-expanded="false"> <ins class="share"></ins>Share </a> 
       <div id="socials" style="display: none"> 
        <a class="isdFacebook" href="#" aria-label="Share on Facebook"> <ins class="facebook"></ins> </a> 
        <a class="isdTwitter" href="#" aria-label="Share on Twitter"> <ins class="twitter"></ins> </a> 
        <a class="isdGooglePlus" href="#" aria-label="Share on Google+"> <ins class="googlePlus"></ins> </a> 
       </div> 
      </div> 
      <div id="indoc_toc" style="display: none" ms.cmpgrp="indoc toc"> 
       <div id="indoc_title">
        IN THIS ARTICLE
       </div> 
       <ul id="indoc_toclist"></ul> 
      </div> 
     </div> 
    </div> 
    <div id="rightNavigationMenuThumbnail" class="rightNavigationMenuThumbnail"> 
    </div> 
   </div> 
   <div class="clear"></div> 
   <input name="__RequestVerificationToken" type="hidden" value="M6Ig_MycW7SuNXgZpY6P9kFWeV8q7R4r3tFmc6FKq4qknzD8oeAnj59wErR-26_Kuy5HnSbRsTdCdnSSiExB9evCFOg1"> 
   <input id="ratingValueSubmitUrl" type="hidden" value="https://msdn.microsoft.com/en-us/library/feedback/rate/gg663540.aspx"> 
   <input id="ratingAdditionalSubmitUrl" type="hidden" value="https://msdn.microsoft.com/en-us/library/feedback/additional/gg663540.aspx"> 
   <input id="isTopicRated" type="hidden" value="false"> 
   <div id="lib-footer"> 
    <link type="text/css" rel="stylesheet"> 
    <div id="ux-footer" class="" style="" dir="ltr" ms.pgarea="footer"> 
     <div id="standardRatingBefore" class="clear stdr-container-before"></div> 
     <div id="standardRating" class="stdr-container" ms.pgarea="body"> 
      <div class="stdr-close"></div> 
      <div class="stdr-vote stdr-content"> 
       <div class="stdr-content"> 
        <span class="stdr-votetitle">Is this page helpful?</span> 
        <button class="stdr-yes" aria-label="Yes, this page was helpful">Yes</button> 
        <button class="stdr-no" aria-label="No, this page was not helpful">No</button> 
        <input id="s_ratingValue" type="hidden" value=""> 
       </div> 
      </div> 
      <div class="stdr-feedback" style="display: none"> 
       <div class="stdr-form"> 
        <div class="stdr-fieldtitle">
         Additional feedback?
        </div> 
        <textarea class="stdr-detail" rows="6" maxlength="1500"></textarea> 
        <div> 
         <span class="stdr-count"><span class="stdr-charcnt">1500</span> characters remaining</span> 
         <div class="stdr-buttons"> 
          <button class="stdr-provide" aria-label="Submit my additional feedback">Submit</button> 
          <button class="stdr-skip" aria-label="Skip additional feedback">Skip this</button> 
         </div> 
        </div> 
        <div class="clear"></div> 
       </div> 
      </div> 
      <div class="stdr-thanks" style="display: none"> 
       <div class="stdr-content"> 
        <span class="stdr-thankyou">Thank you!</span> 
        <span class="stdr-appreciate">We appreciate your feedback.</span> 
       </div> 
      </div> 
      <div id="contentFeedbackQAContainer" style="display: none;"></div> 
     </div> 
     <div id="standardRatingPlaceholder" style="display: none"></div> 
     <footer class="top" role="navigation" aria-label="footer"> 
      <div data-fragmentname="LeftLinks" id="Fragment_LeftLinks" xmlns="http://www.w3.org/1999/xhtml"> 
       <div class="linkList"> 
        <h4 class="linkListTitle">Dev centers</h4> 
        <ul class="links"> 
         <li> <a href="https://developer.microsoft.com/en-us/windows" id="LeftLinks_2148_1" class="windowsBlue" xmlns="http://www.w3.org/1999/xhtml">Windows</a> </li> 
         <li> <a href="https://dev.office.com/" id="LeftLinks_2148_3" class="office" xmlns="http://www.w3.org/1999/xhtml">Office</a> </li> 
         <li> <a href="https://www.visualstudio.com/" id="LeftLinks_2148_4" class="visualStudio" xmlns="http://www.w3.org/1999/xhtml">Visual Studio</a> </li> 
         <li> <a href="https://docs.microsoft.com/en-us/azure/" target="_blank" id="LeftLinks_2148_12" xmlns="http://www.w3.org/1999/xhtml">Microsoft Azure</a> </li> 
         <li> <a href="https://msdn.microsoft.com/developer-centers-msdn" id="LeftLinks_2148_5" xmlns="http://www.w3.org/1999/xhtml">More...</a> </li> 
        </ul> 
       </div> 
      </div> 
      <div id="rightLinks"> 
       <div data-fragmentname="CenterLinks1" id="Fragment_CenterLinks1" xmlns="http://www.w3.org/1999/xhtml"> 
        <div class="linkList"> 
         <h4 class="linkListTitle">Learning resources</h4> 
         <ul class="links"> 
          <li> <a href="https://mva.microsoft.com/" id="CenterLinks1_2151_4" xmlns="http://www.w3.org/1999/xhtml">Microsoft Virtual Academy</a> </li> 
          <li> <a href="https://channel9.msdn.com/" id="CenterLinks1_2151_5" xmlns="http://www.w3.org/1999/xhtml">Channel 9</a> </li> 
          <li> <a href="https://msdn.microsoft.com/magazine/" id="CenterLinks1_2151_7" xmlns="http://www.w3.org/1999/xhtml">MSDN Magazine</a> </li> 
         </ul> 
        </div> 
       </div> 
       <div data-fragmentname="CenterLinks2" id="Fragment_CenterLinks2" xmlns="http://www.w3.org/1999/xhtml"> 
        <div class="linkList"> 
         <h4 class="linkListTitle">Community</h4> 
         <ul class="links"> 
          <li> <a href="https://social.msdn.microsoft.com/forums/en-us/home" id="CenterLinks2_2151_8" xmlns="http://www.w3.org/1999/xhtml">Forums</a> </li> 
          <li> <a href="https://blogs.msdn.microsoft.com/developer-tools/" id="CenterLinks2_2151_9" xmlns="http://www.w3.org/1999/xhtml">Blogs</a> </li> 
          <li> <a href="https://www.codeplex.com/" id="CenterLinks2_2151_10" xmlns="http://www.w3.org/1999/xhtml">Codeplex</a> </li> 
         </ul> 
        </div> 
       </div> 
       <div data-fragmentname="CenterLinks3" id="Fragment_CenterLinks3" xmlns="http://www.w3.org/1999/xhtml"> 
        <div class="linkList"> 
         <h4 class="linkListTitle">Support</h4> 
         <ul class="links"> 
          <li> <a href="https://msdn.microsoft.com/hh361695" id="CenterLinks3_2151_11" xmlns="http://www.w3.org/1999/xhtml">Self support</a> </li> 
         </ul> 
        </div> 
       </div> 
       <div data-fragmentname="CenterLinks4" id="Fragment_CenterLinks4" xmlns="http://www.w3.org/1999/xhtml"> 
        <div class="linkList"> 
         <h4 class="linkListTitle">Programs</h4> 
         <ul class="links"> 
          <li> <a href="https://bizspark.microsoft.com/Startups/Index" id="CenterLinks4_2151_13" xmlns="http://www.w3.org/1999/xhtml">BizSpark (for startups)</a> </li> 
          <li> <a href="https://imagine.microsoft.com/en-us" id="CenterLinks4_2151_22" xmlns="http://www.w3.org/1999/xhtml">Microsoft Imagine (for students)</a> </li> 
         </ul> 
        </div> 
       </div> 
      </div> 
     </footer> 
     <footer class="bottom" role="contentinfo"> 
      <span class="localeContainer"> 
       <form class="selectLocale" id="selectLocaleForm" action="https://msdn.microsoft.com/en-us/selectlocale-dmc"> 
        <input type="hidden" name="fromPage" value="https%3a%2f%2fmsdn.microsoft.com%2fen-us%2flibrary%2fgg663540.aspx"> 
        <a href="#" onclick="$('#selectLocaleForm').submit();return false;" title="Change your language">United States (English)</a> 
       </form> </span> 
      <div data-fragmentname="BottomLinks" id="Fragment_BottomLinks" xmlns="http://www.w3.org/1999/xhtml"> 
       <div class="linkList"> 
        <ul class="links horizontal"> 
         <li> <a href="https://msdn.microsoft.com/en-us/flashnewsletter" id="BottomLinks_2148_7" xmlns="http://www.w3.org/1999/xhtml">Newsletter</a> </li> 
         <li> <a href="https://msdn.microsoft.com/en-us/dn529288" id="BottomLinks_2148_8" xmlns="http://www.w3.org/1999/xhtml">Privacy &amp; cookies</a> </li> 
         <li> <a href="https://msdn.microsoft.com/en-us/cc300389" id="BottomLinks_2148_9" xmlns="http://www.w3.org/1999/xhtml">Terms of use</a> </li> 
         <li> <a href="https://www.microsoft.com/en-us/legal/intellectualproperty/Trademarks/" id="BottomLinks_2148_10" xmlns="http://www.w3.org/1999/xhtml">Trademarks</a> </li> 
        </ul> 
       </div> 
      </div> 
      <span class="logoLegal"> <span class="logoSpan clip67x13" role="img" tabindex="0" aria-label="microsoft logo"> <img alt="logo" class="logo" src="https://i-msdn.sec.s-msft.com/Areas/Centers/Themes/StandardDevCenter/Content/HeaderFooterSprite.png?v=636422593544160354"> </span> <span class="copyright">© 2017 Microsoft</span> </span> 
     </footer> 
    </div> 
   </div> 
   <div class="footerPrintView"> 
    <div class="footerCopyrightPrintView">
     © 2017 Microsoft
    </div> 
   </div> 
   <input id="tocPaddingPerLevel" type="hidden" value="17"> 
   <input id="MtpsDevice" type="hidden" value="Default"> Third party scripts and code linked to or referenced from this website are licensed to you by the parties that own such code, not by Microsoft. See ASP.NET Ajax CDN Terms of Use – http://www.asp.net/ajaxlibrary/CDN.ashx. WebTrends view model not available or IncludeLegacyWebTrendsScriptInGlobal feature flag is off 
   <div id="globalRequestVerification"> 
    <input name="__RequestVerificationToken" type="hidden" value="91XpDNRJCwSjVpywENQYagUucMOQxBACwTPljK61Z4xRDDXLZfHCEt316KCmY5_K3JDKG8A7FIih8LaHupdouISgPE01"> 
   </div> 
  </div> 
  <script type="text/javascript" class="mtps-injected">
/*<![CDATA[*/
(function(window,document){"use strict";function preload(scripts){for(var result=[],script,e,i=0;i<scripts.length;i++)script=scripts[i],script.hasOwnProperty("url")&&(e=document.createElement("script"),e.src=script.url,script.throwaway=e),result.push(script);return result}function inject(scripts,index){var script,elem;if(index>=scripts.length){delete mtps.injectScripts;return}script=scripts[index];elem=document.createElement("script");elem.className="mtps-injected";elem.async=!1;var isLoaded=!1,timeoutId=0,injectNextFnName="",injectNext=elem.onerror=function(){isLoaded||(isLoaded=!0,inject(scripts,index+1),window.clearTimeout(timeoutId),elem.onload=elem.onerror=elem.onreadystatechange=null,injectNextFnName&&delete mtps[injectNextFnName],elem.removeEventListener&&elem.removeEventListener("load",injectNext,!1))};elem.addEventListener?elem.addEventListener("load",injectNext,!1):elem.readyState==="uninitialized"?elem.onreadystatechange=function(){(this.readyState==="loaded"||this.readyState==="complete")&&injectNext()}:elem.onload=injectNext;script.hasOwnProperty("url")?(timeoutId=window.setTimeout(injectNext,12e4),elem.src=script.url):(injectNextFnName="_injectNextScript_"+index,mtps[injectNextFnName]=injectNext,timeoutId=window.setTimeout(injectNext,2e3),elem.text="try {\n"+script.txt+"\n} finally { MTPS."+injectNextFnName+" && MTPS."+injectNextFnName+"(); }");parent.appendChild(elem)}var mtps=window.MTPS||(window.MTPS={}),parent=document.getElementsByTagName("head")[0];mtps.injectScripts=function(scripts){inject(preload(scripts),0)}})(window,document);
MTPS.injectScripts([
	{ txt: "/**/\r\n(window.MTPS || (window.MTPS = {})).cdnDomains || (window.MTPS.cdnDomains = { \r\n\t\"image\": \"https://i-msdn.sec.s-msft.com\", \r\n\t\"js\": \"https://i2-msdn.sec.s-msft.com\", \r\n\t\"css\": \"https://i-msdn.sec.s-msft.com\", \r\n\t\"ttf\": \"https://i-msdn.sec.s-msft.com\"\r\n});\r\n/**/" },
	{ txt: "//\n\n        window.appInsightsId = \u00275eb1b2eb-c47a-497a-a7ac-a1c230b2882f\u0027;\n        //" },
	{ url: "https://i2-msdn.sec.s-msft.com/Combined.js?resources=0:Utilities,1:Layout,2:Header,3:Breadcrumbs,4:LibraryRightNavigationMenu,4:PrintExportButton,5:StandardRating,2:Footer,0:Topic,3:ResponsiveSupport,6:JSLLRecord,0:ABTestControl;/Areas/Epx/Content/Scripts:0,/Areas/Epx/Themes/Base/Content:1,/Areas/Centers/Themes/StandardDevCenter/Content:2,/Areas/Library/Content:3,/Areas/Library/Themes/Base/Content:4,/Areas/Global/Content:5,/Areas/Centers/Themes/Base/Content:6\u0026amp;hashKey=5BCC6179B3A366032BFF561B6ACBF9DE\u0026amp;v=F92669ED481360EA1F7BE15E43808B07" },
	{ url: "https://uhf.microsoft.com/mscc/statics/mscc-0.3.6.min.js" },
	{ url: "https://i2-msdn.sec.s-msft.com/Areas/Epx/Themes/Base/Content/SearchBox.js" },
	{ url: "https://i1.services.social.microsoft.com/search/Widgets/SearchBox.jss?boxid=HeaderSearchTextBox\u0026btnid=HeaderSearchButton\u0026minimumTermLength=2\u0026pgArea=header\u0026brand=Msdn\u0026loc=en-us\u0026focusOnInit=false\u0026emptyWatermark=true\u0026searchButtonTooltip=Search MSDN" },
	{ url: "https://i2-msdn.sec.s-msft.com/Combined.js?resources=0:JumpRedirect,1:CmpgrpForHeader,1:ResponsiveToc,1:LibraryMemberFilter,2:Toc_Fixed,2:CodeSnippet,2:TopicNotInScope,2:VersionSelector,2:SurveyBroker;/Areas/Epx/Themes/Base/Content:0,/Areas/Library/Content:1,/Areas/Epx/Content/Scripts:2\u0026amp;hashKey=E7F336C86AB4177F67844EA512D97992\u0026amp;v=F92669ED481360EA1F7BE15E43808B07" },
	{ txt: "$(document).ready(function() {\n        try {\n            var token = $(\"#globalRequestVerification input[name=\u0027__RequestVerificationToken\u0027]\").clone();\n            $(\"#siteFeedbackForm\").append(token);\n        } catch(err) {\n            \n        }\n    });" }
]);

/*]]>*/
</script>  
 </body>
</html>