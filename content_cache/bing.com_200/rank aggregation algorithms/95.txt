<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <!-- #BeginTemplate "../../Templates/basic.dwt" -->
 <head> 
  <meta http-equiv="Content-Language" content="en-us"> 
  <!-- #BeginEditable "doctitle" --> 
  <title>Calculating Quartiles </title> 
  <!-- #EndEditable --> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
  <!-- #BeginEditable "docdescription" --> 
  <!-- #EndEditable --> 
  <link rel="stylesheet" type="text/css" href="../../css/standard.css"> 
  <link rel="stylesheet" media="all" type="text/css" href="../../css/basic_dd.css"> 
  <style type="text/css">

.style2 {
	text-align: center;
}
</style> 
 </head> 
 <body style="margin-right: 20px; width: 640px"> 
  <div id="masthead"> 
   <img src="../../Images/Header.jpg" alt="Header" width="500" height="53">
  </div> 
  <div class="menu"> 
   <ul> 
    <li><a href="../../index.htm" title="Go to my home page">HOME</a></li> 
    <li><a href="../../courses/courses.htm">COURSES</a> 
     <ul> 
      <li> <a href="../../courses/C113Java/C113Home.htm" title="Programming in Java">CSC113 Java</a></li> 
      <li> <a href="../../courses/C121CompSci/C121Home.htm" title="Computer Science I">CSC121 Comp. Sci. I</a></li> 
      <li> <a href="../../courses/C122CompSci/C122Home.htm" title="Computer Science II">CSC122 Comp. Sci. II</a></li> 
      <li> <a href="../../courses/C391OrgSys/C391Home.htm" title="Computer Org/Sys">CSC391 Org/Sys</a></li> 
      <li> <a href="../../courses/M120Concepts/M120Home.htm" title="Concepts of Mathematics &amp; Technology">MAT120 Concepts</a></li> 
      <li> <a href="../../courses/M131FiniteMath/M131Home.htm" title="Finite Mathematics for Business">MAT131 Finite Math</a></li> 
      <li> <a href="../../courses/M132BusinessCalc/M132Home.htm" title="Calculus for Business">MAT132 Bus. Calc</a></li> 
     </ul> </li> 
    <li><a href="../other.htm">OTHER</a> 
     <ul> 
      <li> <a href="../SearchAlgorithms/SearchAlgorithms.htm" title="Linear and binary search algorithms">Search Algorithms</a></li> 
      <li> <a href="CalculatingQuartiles.htm" title="How different statistics software packages calculate quartiles">Quartiles</a></li> 
     </ul> </li> 
    <!-- <li><a href="../Modeling/Modeling.htm" title="Mathematical Models">MATH MODELING</a> </li> --> 
   </ul> 
   <div class="clear">
    &nbsp;
   </div> 
  </div> 
  <div id="page_content"> 
   <!-- #BeginEditable "content" --> 
   <h1 align="center">Calculating Quartiles</h1> 
   <h2 align="center">Why Computer-Generated Results Don't Always Agree</h2> 
   <p align="center">&nbsp;</p> 
   <h3 align="center">Introduction</h3> 
   <p>One of the most fundamental sets of descriptive statistics is the five-number summary: minimum, first quartile, median (second quartile), third quartile, maximum. It is a useful summary regardless of the shape of the distribution of data values (unlike the mean and standard deviation which are most appropriate with distributions that are normal or nearly so).</p> 
   <p>The procedure for finding the five-number summary is covered early in any introductory statistics book. Yet, it is interesting to note that such an elementary and fundamental topic is almost always accompanied by a caveat as illustrated by this quote from a popular textbook:</p> 
   <blockquote> 
    <p>"Some software packages use a slightly different rule to find the quartiles, so computer results may be a bit different from your own work. Don't worry about this. The differences will always be too small to be important."</p> 
   </blockquote> 
   <p>As a matter of fact, such a caveat is actually an understatement. Among the most commonly used statistics software packages, three different values may be generated for both the first and the third quartiles.</p> 
   <p>&nbsp;</p> 
   <h3 align="center">Basic Concepts</h3> 
   <p>Conceptually, the three quartiles (Q1, Q2, and Q3) divide the list of sorted data into four categories:</p> 
   <ul> 
    <li>25% of the values are less than or equal to Q1</li> 
    <li>25% of the values are between Q1 and Q2</li> 
    <li>25% of the values are between Q2 and Q3</li> 
    <li>25% of the values are greater than or equal to Q3</li> 
   </ul> 
   <p>and</p> 
   <ul> 
    <li>25% of the values are less than or equal to Q1</li> 
    <li>50% of the values are less than or equal to Q2</li> 
    <li>75% of the values are less than or equal to Q3</li> 
   </ul> 
   <p>For sample data, the location of the quartiles are interpreted as distances. The first quartile is at a position 1/4 of the way into the list, the second quartile is at a position 1/2 of the way into the list, and the third quartile is at a position 3/4 of the way into the list:</p> 
   <p> <img border="0" src="Images/Definitions.gif" width="600" height="35"></p> 
   <p>&nbsp;</p> 
   <h3 align="center">An Example</h3> 
   <p>Sandy Koufax pitched for the Dodgers from 1955 to 1966 (the Dodgers moved from Brooklyn to Los Angeles in 1958). The numbers of games he won per year during his career are given below; sorted in ascending order.</p> 
   <p><img border="0" src="Images/KoufaxData.gif" width="540" height="10"></p> 
   <p>To measure the distance to the location of the quartiles, you will need a special ruler:</p> 
   <p><img border="0" src="Images/Ruler.gif" width="625" height="64"></p> 
   <p>Both the data set and the ruler are GIF graphics. You can print out both, cut out the ruler, and use it to measure distances into the list. (This hands-on exercise isn't absolutely necessary, but I think it will help you understand the issues involved.)</p> 
   <ol> 
    <li>Using the ruler, measure the length of the list (using the printed ruler) and write down your result.</li> 
    <li>Divide the measured length by 4.</li> 
    <li>Use the ruler to measure this distance from the beginning of the list.</li> 
    <li>Mark the spot as the location of Q1.</li> 
    <li>Find the value of Q1 (use <a href="Interpolation.htm">interpolation</a>, if necessary).</li> 
   </ol> 
   <p>Depending on how you measured your distances (and assuming no arithmetic errors) you probably came up with one of the following values: 5.75, 6.5, or 7.25. Each of these results is generated by at least one commonly used software package.</p> 
   <ol> 
    <li>Divide the measured length by 2.</li> 
    <li>Use the ruler to measure this distance from the beginning of the list.</li> 
    <li>Mark the spot as the location of Q2.</li> 
    <li>Find the value of Q2.</li> 
   </ol> 
   <p>You should have come up with a value of 12.5. Every software package yields the same result for the median.</p> 
   <ol> 
    <li>Multiply the length of the list by 3/4.</li> 
    <li>Use the ruler to measure this distance from the beginning of the list.</li> 
    <li>Mark the spot as the location of Q3.</li> 
    <li>Find the value of Q3.</li> 
   </ol> 
   <p>You probably came up with one of the following values: 20.5, 22, or 23.5.</p> 
   <p>&nbsp;</p> 
   <h3 align="center">Three Algorithms</h3> 
   <p>The algorithms for calculating the quartiles differ only in how the length of the list is measured.</p> 
   <h4>Length = n-1</h4> 
   <p>This algorithm is used by Microsoft's Excel spreadsheet software. The length is measured as the distance between the first value and the last value in the list. A list with n elements has a length of n-1 and the quartiles are located at distances of 1/4(n-1), 1/2(n-1), and 3/4(n-1).</p> 
   <p>For our example data, the length of the list is 11:</p> 
   <p><img border="0" src="Images/N_minus_1.gif" width="538" height="87"></p> 
   <p>The location of each quartile and its value are given in the table below.</p> 
   <table border="1" cellpadding="3" cellspacing="1" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber2"> 
    <tbody>
     <tr> 
      <th>&nbsp;</th> 
      <th>Q1</th> 
      <th>Q2</th> 
      <th>Q3</th> 
     </tr> 
     <tr> 
      <td><b>Location</b></td> 
      <td>1/4(11) = 2.75</td> 
      <td>1/2(11) = 5.5</td> 
      <td>3/4(11) = 8.25</td> 
     </tr> 
     <tr> 
      <td><b>Value</b></td> 
      <td align="center">7.25</td> 
      <td align="center">12.5</td> 
      <td align="center">20.5</td> 
     </tr> 
    </tbody>
   </table> 
   <p> This algorithm uses an intuitive measurement technique; one that would be used to measure a physical object. Excel also has a Q0 (the minimum) located at 0/4(n-1) which is location 0; the first value in the list. Q4 (the maximum) is at location 4/4(n-1) which is location n-1; the last value in the list.</p> 
   <h4> Length = n</h4> 
   <p> The second algorithm is used by both the TI-83 calculator and the hand-calculation method but only when the number of values in the list is even. The length is measured from a point one half unit before the first value in the list to a point one half unit beyond the last value in the list. A list with n elements has a length of n and the quartiles are located at distances of 1/4(n), 1/2(n), and 3/4(n).</p> 
   <p> For our example data, the length of the list is 12:</p> 
   <p> <img border="0" src="Images/N.gif" width="583" height="87"></p> 
   <p> The location of each quartile and its value is given in the table below.</p> 
   <table border="1" cellpadding="3" cellspacing="1" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber3"> 
    <tbody>
     <tr> 
      <th>&nbsp;</th> 
      <th>Q1</th> 
      <th>Q2</th> 
      <th>Q3</th> 
     </tr> 
     <tr> 
      <td><b>Location</b></td> 
      <td>1/4(12) = 3.0</td> 
      <td>1/2(12) = 6.0</td> 
      <td>3/4(12) = 9.0</td> 
     </tr> 
     <tr> 
      <td><b>Value</b></td> 
      <td align="center">6.5</td> 
      <td align="center">12.5</td> 
      <td align="center">22.0</td> 
     </tr> 
    </tbody>
   </table> 
   <p>This algorithm leads to an intuitive result for the length of the list. I suspect that most people, if asked "How long is a list of 12 values?", would say, "12". I suspect the way in which the length is measured is not as intuitive.</p> 
   <h4>Length = n+1</h4> 
   <p>Minitab, SPSS, TI-83 (n odd) and the hand-calculation method (n odd) all measure the length from one full unit before the first value to one full unit after the last value. A list with n values has a length of n+1 and the quartiles are located at distances of 1/4(n+1), 1/2(n+1), and 3/4(n+1).</p> 
   <p>For our sample data, the length of the list is 13:</p> 
   <p><img border="0" src="Images/N_plus_1.gif" width="631" height="87"></p> 
   <p>The location of each quartile and its value is given in the table below.</p> 
   <table border="1" cellpadding="3" cellspacing="1" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber4"> 
    <tbody>
     <tr> 
      <th>&nbsp;</th> 
      <th>Q1</th> 
      <th>Q2</th> 
      <th>Q3</th> 
     </tr> 
     <tr> 
      <td><b>Location</b></td> 
      <td>1/4(13) = 3.25</td> 
      <td>1/2(13) = 6.5</td> 
      <td>3/4(13) = 9.75</td> 
     </tr> 
     <tr> 
      <td><b>Value</b></td> 
      <td align="center">5.75</td> 
      <td align="center">12.5</td> 
      <td align="center">23.5</td> 
     </tr> 
    </tbody>
   </table> 
   <p>For this algorithm, both the measurement technique and the resulting length are, in my opinion, counter-intuitive.</p> 
   <h4>Comparative Boxplots</h4> 
   <p>Boxplots (sometimes referred to as box and whisker plots) are used to illustrate the five-number summary. A line (whisker) extends from the minimum value to the first quartile. A box extends from the first quartile to the third quartile with a vertical line indicating the median. A second line extends from the third quartile to the maximum. The interval between the first and third quartiles (the box) determines the interquartile range.</p> 
   <p>While the differences among the first and third quartiles we got above may "be too small to be important", they do lead to boxplots with different visual impressions. The width of the interquartile range and the length of the whiskers are noticeably different:</p> 
   <p> <img border="0" src="Images/Koufax%20Boxplots.gif" width="479" height="269"></p> 
   <h4 align="left">Summary</h4> 
   <p>The table below summarizes the algorithms used by several common software packages and the hand-calculation method. Note that the TI-83 calculator implements the hand-calculation method. I'm sure the folks at Texas Instruments did this intentionally so calculator-generated results would agree with results generated by hand. However, it is also worth noting that this algorithm is inconsistent; calculating length one way when n is even and another way when n is odd.</p> 
   <table border="1" cellpadding="3" cellspacing="1" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber5"> 
    <tbody>
     <tr> 
      <th>Length = n-1</th> 
      <th>Length = n</th> 
      <th>Length = n+1</th> 
     </tr> 
     <tr> 
      <td valign="top">Excel</td> 
      <td valign="top">TI-83 (n even)<br> Hand-Calculation (n even)</td> 
      <td valign="top">TI-83 (n odd)<br> Hand-Calculation (n odd)<br> Minitab<br> SPSS</td> 
     </tr> 
    </tbody>
   </table> 
   <p align="center">&nbsp;</p> 
   <h3 align="center">Which Algorithm is the Best?</h3> 
   <p>Fifty thousand simple random samples of size 10 were drawn from the standard normal&nbsp; distribution (?=0 and ? =1). For each sample, the first quartile was calculated using each of the three basic algorithms. The boxplots for the distributions of sample first quartiles are shown here:</p> 
   <p> <img border="0" src="Images/Q1_SampleSize10.gif" width="403" height="181"></p> 
   <p>The vertical line near the center of the chart represents the first quartile of the population 
    <nobr>
     (-0.67449)
    </nobr>. The length n-1 algorithm tends to overestimate the value of the first quartile while the length = 
    <nobr>
     n+1
    </nobr> algorithm tends to underestimate it. The length = n algorithm tends to slightly overestimate Q1 but, in general, yields the most accurate results.</p> 
   <p>Here are the boxplots for the distributions of&nbsp; the third quartiles for this same experiment:</p> 
   <p><img border="0" src="Images/Q3_SampleSize10.gif" width="403" height="181"></p> 
   <p>The vertical line near the center of the chart represents the third quartile of the population 
    <nobr>
     (0.67449)
    </nobr>. The length n-1 algorithm tends to underestimate the value of the first quartile while the length = 
    <nobr>
     n-1
    </nobr> algorithm tends to overestimate it. The length = n algorithm tends to slightly under estimate Q3 but, in general, yields the most accurate results.</p> 
   <p>As the sample size increases, the differences among the results generated by the different algorithms diminish.</p> 
   <h4 align="left">Try It Yourself</h4> 
   <p>If you browser is capable of running Java Applets, you can run this experiment yourself with different sample sizes and different populations. Just run the <a href="QuartileApplet.htm">Quartile Calculation Applet</a>.</p> 
   <p align="left">&nbsp;</p> 
   <h3 align="center">Software Implementation</h3> 
   <p>While implementing a quartile algorithm in software requires the ability to write a computer program, the underlying issues can be understood even by those who lack this skill. The first issue involves the way in which lists of data are stored as one-dimensional arrays in a computer. The second issue involves the mapping of the location of a quartile (measured as a distance) to the corresponding position with the one-dimensional array.</p> 
   <p>In a computer, a list of data is stored as a one-dimensional array. Each element in such an array is identified by its position (index) within the array. Historically, some languages (such as FORTRAN and BASIC) assign an index of 1 to the first value in an array and other languages (such as C, C++, and Java) assign an index of 0 to the first value. (Array processing is slightly more efficient if the index of the first element is 0.)</p> 
   <p>When implementing the quartile calculation algorithms, the location of a quartile (as a distance) must be converted to the corresponding index in the array. If the resulting index is not an integer, interpolation is used to calculate the value of the quartile.</p> 
   <p>Converting the location of a quartile within the list (as a distance) to the corresponding index turns out to be quite simple. In every case, the index is the location plus or minus a constant offset. The value of the offset is determined by two things: the algorithm used to determine the length and whether the first element in the array is assigned an index of 0 or an index of 1.</p> 
   <h4>Base 0 Arrays</h4> 
   <p>If the length of the list is measured as n-1, the location of the quartile and the corresponding index are exactly the same; the offset is zero. In the illustration below, the bold red numbers represent the indices of the corresponding data values.</p> 
   <p> <img border="0" src="Images/N_minus_1a.gif" width="538" height="87"></p> 
   <p>If the length of the list is measured as n, the index is equal to the location minus one-half. In the example below, Q1 is at distance 3.0 which corresponds to an index of 2.5 (the value of Q1 is half-way between the values at indices 2 and 3).</p> 
   <p><img border="0" src="Images/Na.gif" width="583" height="87"></p> 
   <p>If the length of the list is measured as n+1, the index is equal to the location minus one. In the example below, the first quartile is at distance 3.25 which corresponds to an index of 2.25 (the value of Q1 is one-fourth of the way between the values at indices 2 and 3).</p> 
   <p> <img border="0" src="Images/N_plus_1a.gif" width="631" height="87"></p> 
   <h4>Base 1 Arrays</h4> 
   <p>If the length of the list is measured as n-1 then the index is equal to the location plus one. In the example below, the first quartile is at distance 2.75 which corresponds to an index of 3.75 (the value of Q1 is three-fourths of the way between the values at indices 3 and 4).</p> 
   <p> <img border="0" src="Images/N_minus_1b.gif" width="538" height="87"></p> 
   <p>If the length of the list is measured as n then the index is equal to the location plus one-half. In the example below, the first quartile is at distance 3.0 which corresponds to an index of 3.5 (the value of Q1 is one-half of the way between the values at indices 3 and 4).</p> 
   <p><img border="0" src="Images/Nb.gif" width="583" height="87"></p> 
   <p>If the length of the list is measured as n+1, the location of a value and the corresponding index are exactly the same.</p> 
   <p> <img border="0" src="Images/N_plus_1b.gif" width="631" height="87"></p> 
   <h4>Summary of Converting Location to Index</h4> 
   <p>The table below summarizes the mappings between location (as distance) and the corresponding index for the three quartile calculation algorithms and the two types of arrays.</p> 
   <table border="1" cellpadding="3" cellspacing="1" style="border-collapse: collapse" bordercolor="#111111" id="AutoNumber7"> 
    <tbody>
     <tr> 
      <th>Algorithm</th> 
      <th>Base 0 Array</th> 
      <th>Base 1 Array</th> 
     </tr> 
     <tr> 
      <th align="left">Length = n-1</th> 
      <td>Index = Location</td> 
      <td>Index = Location + 1.0</td> 
     </tr> 
     <tr> 
      <th align="left">Length = n</th> 
      <td>Index = Location - 0.5</td> 
      <td>Index = Location + 0.5</td> 
     </tr> 
     <tr> 
      <th align="left">Length = n+1</th> 
      <td>Index = Location - 1.0</td> 
      <td>Index = Location</td> 
     </tr> 
    </tbody>
   </table> 
   <p>I wouldn't be at all surprised to discover that the length = n-1 algorithm has its roots in a language that uses base 0 arrays and that the length = n+1 algorithm has its roots in one that uses base 1 arrays. In either case, the location and the index would be the same.</p> 
   <!-- #EndEditable --> 
  </div> 
  <div id="footer"> 
   <hr> 
   <!-- <span class="style1">Contact: <a href="mailto:desearls@windstream.net">
	desearls@windstream.net</a> </span> --> 
  </div>  
  <!-- #EndTemplate -->  
 </body>
</html>