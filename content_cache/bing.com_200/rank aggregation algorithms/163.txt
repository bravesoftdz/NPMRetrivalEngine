<!doctype html>
<html lang="en">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="HandheldFriendly" content="True"> 
  <meta name="MobileOptimized" content="480"> 
  <meta name="viewport" content="width=device-width, height=device-height initial-scale=1.0, maximum-scale=1.0, user-scalable=0"> 
  <title>Java Core Concepts</title> 
  <meta name="description" content="This text explains the core concepts in Java."> 
  <meta name="keywords" content="Java core concepts"> 
  <meta name="author" content="Jakob Jenkov"> 
  <meta name="twitter:card" content="summary_large_image"> 
  <meta name="twitter:site" content="@jjenkov"> 
  <meta name="twitter:title" content="Java Core Concepts"> 
  <meta name="twitter:description" content="This text explains the core concepts in Java."> 
  <meta name="twitter:creator" content="@jjenkov"> 
  <meta name="twitter:domain" content="jenkov.com"> 
  <meta name="twitter:image:src" content="http://tutorials.jenkov.com/images/java/java-language-teaser-500-300.png"> 
  <meta name="og:type" content="article"> 
  <meta name="og:title" content="Java Core Concepts"> 
  <meta property="og:url" content="http://tutorials.jenkov.com/java/core-concepts.html"> 
  <meta property="og:description" content="This text explains the core concepts in Java."> 
  <meta property="og:image" content="http://tutorials.jenkov.com/images/java/java-language-teaser-500-300.png"> 
  <link href="https://plus.google.com/108227213807945109821" rel="publisher"> 
  <meta name="google-site-verification" content="i_TwzdElg-by5uXLvyAjuIaCjxo0yjtW8LdRPUDEEcw"> 
  <!-- jQuery --> 
  <!--<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script> --> 
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script> 
 </head> 
 <body> 
  <style>
body {background-color: #f0f0f0;background-image: linear-gradient(180deg, #f0f0f0, #e0e0e0);}
.dataTable th, .dataTable td { padding: 2px 8px; }
</style> 
  <style id="layoutCss"></style> 
  <style id="jqcCss"></style> 
  <style id="articleCss"></style> 
  <style id="navBarCss"></style> 
  <style>
code  { font-size: 14px; }
</style> 
  <script>
lcv = "4";
ls = localStorage;
cacheLoaded = false;
pageLoaded = false;

var prevArticleInCategory = "/java/java-project-overview-compilation-and-execution.html";
var nextArticleInCategory = "/java/syntax.html";
</script> 
  <script id="jqcJs"></script> 
  <script id="bottomNavBarModule"></script> 
  <script>
function jsonp(url) {
    var script   = document.createElement("script"); script.type = "text/javascript"; script.src = url;
    document.body.appendChild(script);
}
function insertById(ids) {
    for(var i=0, n=ids.length; i < n; i++) {
        var el = document.getElementById(ids[i]);
        if(el != null) { el.innerHTML = localStorage[ids[i]]; }
    }
}
function insertByClass(ids) {
    for(var i=0, n=ids.length; i<n; i++) {
        var els = document.getElementsByClassName(ids[i]);
        for(var j=0,m=els.length; j<m; j++) { els[j].innerHTML = localStorage[ids[i]]; }
    }
}
function init() {
    if(cacheLoaded == true && pageLoaded == true) {
        console.log("initializing page");
        insertById(["layoutCss", "jqcCss", "topBarLogo", "articleCss", "navBarCss", "bottomNavBar", "bottomNavBarModule", "jqcJs"]);
        insertByClass(["authorPhoto", "authorSocialLinks", "newsletterForm", "googlePlusShare"]);
        $(document).ready(function() { bottomNavBarModule(); });
        console.log("page initialized");
    }
}
if(ls.lcv != lcv) {
    for(var i=0; i < ls.length; i++){
        ls.removeItem(ls.key(i));
    }
    jsonp("/cached-" + lcv + ".js");
    console.log("cache cleared");
} else {
    cacheLoaded = true;
}
ls.lcv = lcv;
</script> 
  <!-- jqComponents --> 
  <script>
articleLen = 9880;
adRandom = Math.random() * 100;

function dw(text) { document.write(text); }

function writeAd(adSlot, w, h) {
 dw("<script async src='//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js'><"); dw("/script>");
 dw("<ins class='adsbygoogle' style='display:inline-block;width:" + w + "px;height:" + h + "px' data-ad-client='ca-pub-5569543489255665' data-ad-slot='" +  adSlot + "'></ins>");
 dw("<script>");
 dw("(adsbygoogle = window.adsbygoogle || []).push({});");
 dw("<"); dw("/script>");
}

function topAdStyles(w, mT, mB) {
    var adEl = document.getElementById("topAds");
    adEl.style.width = (w + "px"); adEl.style.marginTop = (mT + "px"); adEl.style.marginBottom = (mB + "px"); adEl.style.marginRight = "auto"; adEl.style.marginLeft = "auto";
}

function bottomAdStyles(elId, w, mT, mB) {
    var adEl = document.getElementById(elId);
    adEl.style.width = (w + "px"); adEl.style.marginTop = (mT + "px"); adEl.style.marginBottom = (mB + "px"); adEl.style.marginRight = "auto"; adEl.style.marginLeft = "auto";
}
</script> 
  <div id="topBar"> 
   <div jqc-row jqc-row-paddings="0:0 3:24"> 
    <div jqc-cell="0:12c"> 
     <div id="topBarContent"> 
      <div id="topBarLogo"></div> 
      <div id="topBarPhrase">
       Tech and Media Labs
      </div> 
      <div id="topBarMenu"> 
       <a href="http://tutorials.jenkov.com">Tutorials</a> 
       <a href="http://jenkov.com/about/index.html">About</a> 
       <a href="http://jenkov.com/rss.xml">RSS</a> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div id="cookieNote"> 
   <div jqc-row jqc-row-widths="0:100% 4:1200" jqc-row-paddings="0:0 3:24"> 
    <div jqc-cell="0:12c"> 
     <div class="card">
       This site uses cookies to improve the user experience. 
      <button onclick="hideCookieNote()">OK</button> 
     </div> 
    </div> 
   </div> 
  </div> 
  <script>
function hideCookieNote() { document.getElementById("cookieNote").innerHTML = ""; ls.cookieNote = 0; }

if(ls.cookieNote == 0) {
    hideCookieNote();
}
</script> 
  <div jqc-row jqc-row-widths="0:100% 4:1200" jqc-row-paddings="0:0"> 
   <div jqc-cell="0:12c"> 
    <div id="topAds"> 
     <script>
                var adEl = document.getElementById("topAds");
                if(window.innerWidth > 970) {
                    if(adRandom <= 5){
                        writeAd("6094206201", 970, 90); /* wider ad - 5% of page views */
                        topAdStyles(970, 20, 20);
                    } else {
                        writeAd("7630855405", 728, 90); /* standard ad */
                        topAdStyles(728, 20, 20);
                    }
                } else if(window.innerWidth >= 728 && window.innerWidth <= 970)  {  /* Tutorials - Top Banner */
                    writeAd("7630855405", 728, 90);
                    topAdStyles(728, 20, 20);
                } else {  /* Tutorials - Top Banner - Mobile */
                    writeAd("3297914607", 320, 50);
                    topAdStyles(320, 10, 0);
                }
            </script> 
    </div> 
   </div> 
  </div> 
  <div id="main"> 
   <div jqc-row jqc-row-widths="0:100% 4:1200" jqc-column-counts="0:24" jqc-row-paddings="0:0 3:24" jqc-cell-spacings="0:8"> 
    <div jqc-cell="0:0c  3:7c"> 
     <div id="trailToc" class="card"> 
      <div id="trailTitle">
       Java Language
      </div>
      <ol>
       <li><a href="/java/index.html">Java Tutorial</a></li>
       <li><a href="/java/what-is-java.html">What is Java?</a></li>
       <li><a href="/java/installing-java-sdk.html">Installing the Java SDK</a></li>
       <li><a href="/java/your-first-java-app.html">Your First Java App</a></li>
       <li><a href="/java/main-method.html">Java Main Method</a></li>
       <li><a href="/java/java-project-overview-compilation-and-execution.html">Java Project Overview, Compilation and Execution</a></li>
       <li><a href="/java/core-concepts.html"><b>Java Core Concepts</b></a></li>
       <li><a href="/java/syntax.html">Java Syntax</a></li>
       <li><a href="/java/variables.html">Java Variables</a></li>
       <li><a href="/java/data-types.html">Java Data Types</a></li>
       <li><a href="/java/math-operators-and-math-class.html">Java Math Operators and Math Class</a></li>
       <li><a href="/java/arrays.html">Java Arrays</a></li>
       <li><a href="/java/strings.html">Java Strings</a></li>
       <li><a href="/java/operations.html">Java Operations</a></li>
       <li><a href="/java/if.html">Java if statements</a></li>
       <li><a href="/java/switch.html">Java Switch Statements</a></li>
       <li><a href="/java/for.html">Java for Loops</a></li>
       <li><a href="/java/while.html">Java while Loops</a></li>
       <li><a href="/java/classes.html">Java Classes</a></li>
       <li><a href="/java/fields.html">Java Fields</a></li>
       <li><a href="/java/methods.html">Java Methods</a></li>
       <li><a href="/java/constructors.html">Java Constructors</a></li>
       <li><a href="/java/packages.html">Java Packages</a></li>
       <li><a href="/java/access-modifiers.html">Java Access Modifiers</a></li>
       <li><a href="/java/inheritance.html">Java Inheritance</a></li>
       <li><a href="/java/nested-classes.html">Java Nested Classes</a></li>
       <li><a href="/java/abstract-classes.html">Java Abstract Classes</a></li>
       <li><a href="/java/interfaces.html">Java Interfaces</a></li>
       <li><a href="/java/interfaces-vs-abstract-classes.html">Java Interfaces vs. Abstract Classes</a></li>
       <li><a href="/java/enums.html">Java Enums</a></li>
       <li><a href="/java/annotations.html">Java Annotations</a></li>
       <li><a href="/java/lambda-expressions.html">Java Lambda Expressions</a></li>
       <li><a href="/java/exercises.html">Java Exercises</a></li>
      </ol> 
     </div> 
     <br>
     <br> 
     <!-- Left Bar Adsense Banner Ad --> 
     <div id="side-ads"> 
      <script>
                if(window.innerWidth >= 900){
                    if(adRandom <= 94)     { writeAd("5873880207", 300,  600);}
                    else if(adRandom < 96) { writeAd("3389666608", 160,  600);}
                    else                   { writeAd("4257546205", 300, 1050);}
                }
            </script> 
     </div> 
     <br>
     <br> 
     <div style="display: none;" class="card newsletterForm"> 
     </div> 
    </div> 
    <div jqc-cell="0:24c 3:17c"> 
     <div class="card"> 
      <h1>Java Core Concepts</h1> 
      <div id="mainBody"> 
       <div id="pageToc" itemscope itemtype="http://schema.org/SiteNavigationElement"> 
        <ul>
         <li><a href="#variables">Variables</a></li>
         <li><a href="#operations">Operations</a></li>
         <li><a href="#classes-objects">Classes + Objects</a>
          <ul>
           <li><a href="#fields">Fields</a></li>
           <li><a href="#constructors">Constructors</a></li>
           <li><a href="#methods">Methods</a></li>
          </ul></li>
         <li><a href="#interfaces">Interfaces</a></li>
         <li><a href="#packages">Packages</a></li>
        </ul> 
       </div> 
       <div id="lastUpdate"> 
        <table>
         <tbody>
          <tr>
           <td class="authorPhoto"></td> 
           <td><p style="margin: 0px 0px 6px 0px;"> Jakob Jenkov<br> Last update: 2015-02-13 </p> 
            <div class="authorSocialLinks"></div> </td> 
          </tr> 
         </tbody>
        </table> 
       </div> 
       <p> As mentioned in the text about <a href="/java/what-is-java.html">what Java is</a>, Java is more than just the programming language itself. Java is a platform with many subtopics and concepts. Within the Java language itself though, there are a handful of core concepts that are essential to understand. This text will take a closer look at these core Java concepts. </p> 
       <a name="variables"></a> 
       <h2>Variables</h2> 
       <p> Computer programs, regardless of programming language, typically read data from somewhere (file, keyboard, mouse, network etc.), process the data, and write some data somewhere again (to screen, file, network etc.). </p> 
       <p> In a Java program data is kept in <i>variables</i>. Your Java program first declares the variables, then read data into them, execute operations on the variables, and then write the variables (or data based on the variables) somewhere again. Variables are explained in more detail in the text on <a href="variables.html">Java variables</a>. </p> 
       <p> Each variable has a data type. The data type determines what kind of data the variable can contain, and what operations you can execute on it. For instance, a variable could be a number. Numbers can be added, subtracted, multiplied, divided etc. Or, a variable could be a string (text). String's can be divided into substrings, searched for characters, concatenated with other strings etc. Java comes with a set of built-in data types. These data types are described in more detail in the text on <a href="data-types.html">Java data types</a>. </p> 
       <p> Here is a simple Java variable declaration and operation example. Don't worry if you don't understand it now. Later texts in this Java language tutorial explains the details. The purpose of the example is just to give you a feeling for how working with Java variables look. </p> 
       <pre class="codeBox">
int myNumber;

myNumber = 0;

myNumber = myNumber + 5;
</pre> 
       <p> The first line of this example declares a variable named <code>myNumber</code> of the data type <code>int</code>. An <code>int</code> is a 32 bit integer (number without fractions). </p> 
       <p> The second line sets the value of the <code>myNumber</code> variable to 0. </p> 
       <p> The third line adds 5 to the current value of <code>myNumber</code> (which we just set to 0 in the line above). </p> 
       <a name="operations"></a> 
       <h2>Operations</h2> 
       <p> Operations in Java are the instructions you can use to process the data in variables. Some operations read and write the values of variables (as you have already seen examples of), while other operations control the program flow. The most important operations are: </p> 
       <ul> 
        <li>Variable operations 
         <ul> 
          <li>Variable assignment of values.</li> 
          <li>Variable reading of values.</li> 
          <li>Variable arithmetic.</li> 
          <li>Object instantiation.</li> 
         </ul> </li> 
        <li> Program flow 
         <ul> 
          <li><a href="/java/for.html"><code>for</code> loops</a>.</li> 
          <li><a href="/java/while.html"><code>while</code> loops</a>.</li> 
          <li><a href="/java/if.html"><code>if</code> statements (branches)</a>.</li> 
          <li><a href="/java/switch.html"><code>switch</code> statements</a>.</li> 
          <li>Method calls.</li> 
         </ul> </li> 
       </ul> 
       <p> All of these operations are explained in detail in their own texts. </p> 
       <p> Here are a few examples of operations: </p> 
       <pre class="codeBox">
int number = 0;
int abs    = 0;
    
//imagine some operations that assign a value to number 
// - but left out of this example.
    
if(number &gt;= 0) {
    abs = number;    
} else {
    abs = -number; 
}
</pre> 
       <p> This example first declares two variables named <code>number</code> and <code>abs</code>. The variable <code>abs</code> is supposed to contain the absolute value of <code>number</code>. The absolute value of a number is always positive. For positive numbers the absolute value is the number itself. For negative numbers the absolute value is the number without the negative sign. For instance, the absolute value of -10 is 10. </p> 
       <p> The <code>if</code> operation checks the value of the <code>number</code> variable to see if it is larger than or equal to 0. If it is, the absolute value assigned to the <code>abs</code> variable is the value of the <code>number</code> variable. If the <code>number</code> value is less than 0, then the value assigned to <code>number</code> is equal to <code>-number</code>. Negating a negative number gives a positive number, remember? -(-10) is 10. </p> 
       <a name="classes-objects"></a> 
       <h2>Classes + Objects</h2> 
       <p> Classes group variables and operations together in coherent modules. A class can have fields, constructors and methods (plus more, but that is not important now). I will shortly describe fields, constructors and methods here, but they are explained in more details in their own texts too. </p> 
       <p> Objects are instances of classes. When you create an object, that object is of a certain class. The class is like a template (or blueprint) telling how objects of that class should look. When you create an object, you say "give me an object of this class". </p> 
       <p> If you think of a factory producing lots and lots of the same items, then the class would be the blueprint / manual of how the finished product should look, and the objects would be each of the finished products. If the factory produced cars, then the blueprint / design manual of the cars to produce corresponds to a Java class, and the physical cars produced corresponds to Java objects. </p> 
       <p> Here is a simple diagram illustrating the principle of objects being of a certain class. The class determines what fields and methods the objects of that class have. </p> 
       <table class="diagram"> 
        <tbody>
         <tr>
          <td align="center"><img src="/images/java/classes-objects.png" alt="A Java class can contain fields, constructors and methods."></td>
         </tr> 
         <tr>
          <td align="center"><b>A Java class can contain fields, constructors and methods.</b></td>
         </tr> 
        </tbody>
       </table> 
       <p> Here is an example Java class declaration: </p> 
       <pre class="codeBox">
public class Car {

}
</pre> 
       <p> This example declares a class named <code>Car</code>. The Car class does not contain any fields, constructors or methods. It is empty. The example primarily serves to show you an example of how a class declaration looks in Java code. </p> 
       <a name="fields"></a> 
       <h3>Fields</h3> 
       <p> A field is a variable that belongs to a class or an object. It is a piece of data, in other words. For instance, a Car class could define the field <code>brand</code> which all Car objects would have. Each Car object could then have a different value for the brand field. </p> 
       <p> Fields are covered in more detail in the text on <a href="fields.html">Java fields</a>. </p> 
       <p> Here is the Car class declaration from above with a field name <code>brand</code> added: </p> 
       <pre class="codeBox">
public class Car {
    private String brand;
}
</pre> 
       <p> This example declares a field named <code>brand</code> of data type <code>String</code> which is text. </p> 
       <a name="constructors"></a> 
       <h3>Constructors</h3> 
       <p> Constructors are a special kind of method that is executed when an object of that class is created. Constructors typically initialize the objects internal fields - if necessary. </p> 
       <p> Constructors are covered in more detail in the text on <a href="constructors.html">Java constructors</a>. </p> 
       <p> Here is the Car class from before with a constructor that initializes the <code>brand</code> field: </p> 
       <pre class="codeBox">
public class Car {
    
    private String brand;

    public Car(String theBrand) {
        this.brand = theBrand;
    }
}
</pre> 
       <a name="methods"></a> 
       <h3>Methods</h3> 
       <p> Methods are groups of operations that carry out a certain function together. For instance, a method may add to numbers, and divide it by a third number. Or, a method could read and write data in a database etc. </p> 
       <p> Methods are typically used when you need to group operations together, that you need to be able execute from several different places. Or, if you just want your code to be easier to read. In other programming languages methods may be called "procedures" or "functions". </p> 
       <p> Methods are covered in more details in the text on <a href="methods.html">Java methods</a>. </p> 
       <p> Here is the Car class from before with a single, simple method named <code>getBrand</code> added: </p> 
       <pre class="codeBox">
public class Car {
    
    private String brand;

    public Car(String theBrand) {
        this.brand = theBrand;
    }
    
    
    public String getBrand() {
        return this.brand;
    }
}
</pre> 
       <a name="interfaces"></a> 
       <h2>Interfaces</h2> 
       <p> Interfaces is a central concept in Java. An interface describes what methods a certain object should have available on it. A class can implement an interface. When a class implements an interface, the class has to implement all the methods described in the interface. Interfaces are described more in my text about <a href="/java/interfaces.html">Java interfaces</a>. </p> 
       <a name="packages"></a> 
       <h2>Packages</h2> 
       <p> Packages in Java is another central concept. A package is a directory containing Java classes and interfaces. Packages provides a handy way of grouping related classes and interfaces, thus making modularization of your Java code easier. Packages are described in more detail in my text about <a href="/java/packages.html">Java packages</a>. </p> 
       <div> 
       </div> 
       <div id="next">
        Next: 
        <a href="/java/syntax.html">Java Syntax</a>
       </div> 
       <div id="bottomSocial"> 
        <div style="display:inline-block;"> 
         <table> 
          <tbody>
           <tr>
            <td colspan="2"> 
             <div class="g-plus" data-action="share" data-height="24" data-annotation="none"></div> <script type="text/javascript">
                                    (function() {
                                        var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
                                        po.src = 'https://apis.google.com/js/platform.js';
                                        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
                                     })();
                                </script> <a href="https://twitter.com/share" class="twitter-share-button" data-via="jjenkov" target="_blank">Tweet</a> <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script> </td>
           </tr> 
           <tr>
            <td class="authorPhoto"></td>
            <td><p style="margin: 0px 0px 6px 0px;">Jakob Jenkov</p>
             <div class="authorSocialLinks"></div></td>
           </tr> 
          </tbody>
         </table> 
        </div> 
        <div style="display:inline-block;" class="newsletterForm"></div> 
       </div> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <!-- Bottom ads - (nested row is working, but should perhaps not be a nested row?) (note: was a nested row in old design - not in new) --> 
  <div jqc-row jqc-row-paddings="0:0"> 
   <div jqc-cell="0:12c"> 
    <div id="pageBottomAds"> 
     <script>
                    if(articleLen >= 4000){ /* for longer articles place ads here, at the bottom of the page */
                        if(window.innerWidth >= 728 ) {  /* Adsense Ads - Bottom Banner */
                            if(adRandom < 5)       { writeAd("2721937400", 970, 90);  bottomAdStyles("pageBottomAds", 970, 20, 20);}
                            else if(adRandom < 30) { writeAd("9547200207", 970, 250); bottomAdStyles("pageBottomAds", 970, 20, 20);}
                            else                   { writeAd("7776167002", 728, 90);  bottomAdStyles("pageBottomAds", 728, 20, 20);}
                        } else if(window.innerWidth < 728) {  /* Adsense Ads - Bottom Banner - Mobile */
                            if(adRandom < 50) {
                                writeAd("4216244607", 320, 50); bottomAdStyles("pageBottomAds", 320, 10, 0);
                            } else {
                                writeAd("7377085404", 320, 100); bottomAdStyles("pageBottomAds", 320, 10, 0);
                            }
                        }
                    }
                </script> 
     <br>
     <br>
     <br> 
    </div> 
    <div style="height: 30px"></div> 
    <div id="disqusComments" class="card"> 
     <div id="disqus_thread"></div> 
     <script type="text/javascript">
                var disqus_shortname = 'tutorials-jenkov-com'; // required: replace example with your forum shortname

                /* * * DON'T EDIT BELOW THIS LINE * * */
                (function() {
                    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();
            </script> 
     <noscript>
      Please enable JavaScript to view the 
      <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
     </noscript> 
    </div> 
   </div> 
  </div> 
  <span id="layoutManager" jqc-type="jqcResponsiveLayoutManager" jqc-row-paddings="0:8 4:0"></span> 
  <div id="footerBar"> 
   <div jqc-row> 
    <div jqc-cell="0:12c">
      Copyright &nbsp;Jenkov Aps 
    </div> 
   </div> 
  </div> 
  <div id="trailTocFixedDiv"> 
   <div id="trailTocFixedCloseButton">
    Close TOC
   </div> 
   <div id="trailTocFixedInnerDiv"></div> 
  </div> 
  <div id="bottomNavBar"></div> 
  <!-- init page --> 
  <script>
pageLoaded = true;
init();
</script> 
  <!-- Google Analytics Script --> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-4036229-3', 'auto');
  ga('send', 'pageview');

</script>  
 </body>
</html>