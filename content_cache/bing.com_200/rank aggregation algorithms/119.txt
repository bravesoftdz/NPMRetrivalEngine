<!doctype html>
<!--[if lt IE 7]>
<html class="ie ie6 lte9 lte8 lte7" lang="en-US" prefix="og: http://ogp.me/ns#">
<![endif]-->
<!--[if IE 7]>
<html class="ie ie7 lte9 lte8 lte7" lang="en-US" prefix="og: http://ogp.me/ns#">
<![endif]-->
<!--[if IE 8]>
<html class="ie ie8 lte9 lte8" lang="en-US" prefix="og: http://ogp.me/ns#">
<![endif]-->
<!--[if IE 9]>
<html class="ie ie9" lang="en-US" prefix="og: http://ogp.me/ns#"> 
<![endif]-->
<!--[if gt IE 9]>  <html lang="en-US" prefix="og: http://ogp.me/ns#"> <![endif]-->
<!--[if !IE]>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
<![endif]-->
<html>
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width"> 
  <link type="text/css" media="all" href="http://www.sanfoundry.com/wp-content/cache/autoptimize/css/autoptimize_bba842864b4b5e2e87c0655ed0a86d87.css" rel="stylesheet">
  <title>Java Program to Find MST(Minimum Spanning Tree) using Prim's Algorithm - Sanfoundry</title> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="pingback" href="http://www.sanfoundry.com/xmlrpc.php"> 
  <!-- IE6-8 support of HTML5 elements --> 
  <!--[if lt IE 9]>
		<script src="http://www.sanfoundry.com/wp-content/themes/ifeaturepro5/inc/js/html5.js" type="text/javascript"></script>
	<![endif]--> 
  <!-- This site is optimized with the Yoast SEO plugin v2.3.5 - https://yoast.com/wordpress/plugins/seo/ --> 
  <link rel="canonical" href="http://www.sanfoundry.com/java-program-find-mst-using-prims-algorithm/"> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Java Program to Find MST(Minimum Spanning Tree) using Prim's Algorithm - Sanfoundry"> 
  <meta property="og:description" content="This Java program is to find MST using Prim’s algorithm.In computer science, Prim’s algorithm is a greedy algorithm that finds a minimum spanning tree for a connected weighted undirected graph. This means it finds a subset of the edges that forms a tree that includes every vertex, where the total weight of all the edgesRead More..."> 
  <meta property="og:url" content="http://www.sanfoundry.com/java-program-find-mst-using-prims-algorithm/"> 
  <meta property="og:site_name" content="Sanfoundry"> 
  <meta property="article:section" content="DS2 Using Java"> 
  <meta property="article:published_time" content="2013-08-06T09:46:01+00:00"> 
  <meta property="article:modified_time" content="2013-11-11T23:17:27+00:00"> 
  <meta property="og:updated_time" content="2013-11-11T23:17:27+00:00"> 
  <meta property="og:image" content="http://www.sanfoundry.com/wp-content/uploads/2014/08/Java-Programming-1000-Algorithms.png"> 
  <!-- / Yoast SEO plugin. --> 
  <link rel="alternate" type="application/rss+xml" title="Sanfoundry » Feed" href="http://www.sanfoundry.com/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Sanfoundry » Comments Feed" href="http://www.sanfoundry.com/comments/feed/"> 
  <link rel="shortcut icon" href="http://www.sanfoundry.com/wp-content/uploads/2017/05/sanfoundry-favicon-1.png" type="image/x-icon"> 
  <link rel="apple-touch-icon" href="http://www.sanfoundry.com/wp-content/uploads/2017/05/sanfoundry-favicon-2.png"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.sanfoundry.com\/wp-includes\/js\/wp-emoji-release.min.js"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <script type="text/javascript" src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.13.0/jquery.validate.min.js"></script> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.sanfoundry.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.sanfoundry.com/wp-includes/wlwmanifest.xml"> 
  <link rel="shortlink" href="http://www.sanfoundry.com/?p=25503"> 
  <script type="text/javascript">
var e_mailit_config = {display_counter:true,TwitterID:'sanfoundry',follow_services:{},thanks_message:'Thanks for sharing!',mobile_bar:false,after_share_dialog:false,display_ads:false,hover_pinit:false,open_on:'onclick',emailit_branding:true};(function() {	var b=document.createElement('script');	
                        b.type='text/javascript';b.async=true;
	
                        b.src='//www.e-mailit.com/widget/menu3x/js/button.js';
	
                        var c=document.getElementsByTagName('head')[0];	c.appendChild(b) })()</script> 
  <!-- MailerLite Universal --> 
  <script>
        (function(m,a,i,l,e,r){m['MailerLiteObject']=e;function f(){
        var c={a:arguments,q:[]};var r=this.push(c);return "number"!=typeof r?r:f.bind(c.q);}
        f.q=f.q||[];m[e]=m[e]||f.bind(f.q);m[e].q=m[e].q||f.q;r=a.createElement(i);
        var _=a.getElementsByTagName(i)[0];r.async=1;r.src=l+'?'+(~~(new Date().getTime()/10000000));
        _.parentNode.insertBefore(r,_);})(window, document, 'script', 'https://static.mailerlite.com/js/universal.js', 'ml');

        var ml_account = ml('accounts', '381541', 'z7o9v6x3r7', 'load');
    </script> 
  <!-- End MailerLite Universal --> 
 </head>
 <body class="single single-post postid-25503 single-format-standard cc-responsive">
  <div id="fb-root"></div> 
  <script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.5&appId=139987706155608";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script> 
  <!-- Place this tag in your head or just before your close body tag. --> 
  <script src="https://apis.google.com/js/platform.js" async defer></script> 
  <script data-cfasync="false" type="text/javascript">
    var debug = window.location.search.indexOf('fsdebug') == -1 ? false : true;
    var freestar = freestar || {};
    freestar.hitTime = Date.now();
    freestar.queue = freestar.queue || [];
    freestar.config = freestar.config || {};

    // Tag IDs set here, must match Tags served in the Body for proper setup
    freestar.config.enabled_slots = [
        "Sanfoundry_728x90_970x90_970x250_320x50_ATF",
        "Sanfoundry_300x250_320x50_BTF_1",
        "Sanfoundry_300x250_320x50_BTF_2",
        "Sanfoundry_300x250_320x50_BTF_3",
        "Sanfoundry_300x250_320x50_BTF_4"
    ];

    !function(a,b){var c=b.getElementsByTagName("script")[0],d=b.createElement("script"),e="https://a.pub.network/sanfoundry";e+=debug?"/qa/pubfig.min.js":"/pubfig.min.js",d.async=!0,d.src=e,c.parentNode.insertBefore(d,c)}(window,document);

</script> 
  <script>(function(a,b,c,d,e){e=a.createElement(b);a=a.getElementsByTagName(b)[0];e.async=1;e.src=c;a.parentNode.insertBefore(e,a)})(document,'script','//hammerhearing.com/2a610c8ea226821d0a90e9c74b32d34c46d16031c8e6e697f6d45ad856f8a0aadbb5cde0d54ea15ba7f15f4f720c05508b37d46a267fc4346b8e95e73585');</script> 
  <script type="text/javascript">  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-25734021-1', 'auto');
  ga('send', 'pageview');
</script>  
  <!-- ******************* Top Header ******************** --> 
  <!-- ********************** Header ******************** --> 
  <div id="header_section" class="container-full-width"> 
   <div class="container"> 
    <div class="container-fluid"> 
     <header id="cc-header" class="row-fluid"> 
      <div id="banner"> 
       <a href="//www.sanfoundry.com"><img src="//www.sanfoundry.com/wp-content/uploads/2016/12/sanfoundry-header-1120x90.png" alt="logo"></a> 
      </div> 
     </header> 
    </div>
    <!-- container fluid --> 
   </div>
   <!-- container --> 
  </div>
  <!-- container full width --> 
  <!-- ******************** Menu *********************** --> 
  <div class="container-full-width" id="main_navigation"> 
   <div class="container"> 
    <div class="container-fluid"> 
     <nav id="navigation" role="navigation"> 
      <div class="main-navigation navbar navbar-inverse"> 
       <div class="navbar-inner"> 
        <div class="container"> 
         <div class="nav-collapse collapse"> 
          <div class="menu-headermenu-container">
           <ul id="menu-headermenu" class="nav">
            <li id="menu-item-117" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-117"><a href="http://www.sanfoundry.com">Home</a></li> 
            <li id="menu-item-311" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-311"><a href="http://www.sanfoundry.com/about/">About</a></li> 
            <li id="menu-item-313" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-313"><a href="http://www.sanfoundry.com/coursesfees/">Bangalore Training</a></li> 
            <li id="menu-item-54940" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-54940"><a href="http://www.sanfoundry.com/online-training-san-linux-kernel-device-drivers/">Online Training</a></li> 
            <li id="menu-item-819" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-819"><a href="http://www.sanfoundry.com/salary-50l/">Developers</a></li> 
            <li id="menu-item-72932" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-72932"><a href="http://www.sanfoundry.com/jobs/">Jobs</a></li> 
            <li id="menu-item-54941" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-54941"><a href="http://www.sanfoundry.com/internship/">Internship</a></li> 
            <li id="menu-item-317" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-317"><a href="http://www.sanfoundry.com/contact/">Contact</a></li> 
           </ul>
          </div> 
          <form method="get" id="searchform" class="navbar-search pull-right" action="http://www.sanfoundry.com/" role="search"> 
           <input type="text" class="search-query input-medium" name="s" placeholder="Search …"> 
          </form> 
          <div class="clear"></div> 
         </div>
         <!-- collapse --> 
         <!-- .btn-navbar is used as the toggle for collapsed navbar content --> 
         <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </a> 
        </div>
        <!-- container --> 
       </div>
       <!-- .navbar-inner .row-fluid --> 
      </div>
      <!-- main-navigation navbar --> 
     </nav>
     <!-- #navigation --> 
    </div>
    <!-- container fluid --> 
   </div>
   <!-- container --> 
  </div>
  <!-- container full width --> 
  <div id="single_page" class="container-full-width"> 
   <div class="container"> 
    <div class="container-fluid"> 
     <div id="container" class="row-fluid"> 
      <div style="margin-top: 10px; margin-bottom: 10px; text-align: center; border: 1px solid #E5E5E5; background: #FDFDFD"> 
       <!-- Tag ID: Sanfoundry_728x90_970x90_970x250_320x50_ATF --> 
       <div align="center" id="Sanfoundry_728x90_970x90_970x250_320x50_ATF"> 
        <script data-cfasync="false" type="text/javascript">
        freestar.queue.push(function () { googletag.display('Sanfoundry_728x90_970x90_970x250_320x50_ATF'); });
    </script> 
       </div> 
      </div> 
      <div id="secondary" class="widget-area span3"> 
       <div id="sidebar"> 
        <aside id="text-103" class="widget-container widget_text"> 
         <div class="textwidget">
          <h3 class="sf-widget-title">Questions &amp; Answers</h3> 
          <div class="sf-postw-category"> 
           <a href="http://www.sanfoundry.com/c-interview-questions-answers/">C Interview Questions</a>
           <br> 
           <a href="http://www.sanfoundry.com/cplusplus-interview-questions-answers/">C++ Questions</a>
           <br> 
           <a href="http://www.sanfoundry.com/technical-interview-questions/">Linux MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/csharp-questions-answers/">C# Quiz</a>
           <br> 
           <a href="http://www.sanfoundry.com/java-questions-answers-freshers-experienced/">Java MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/1000-javascript-questions-answers/">JavaScript MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/san-storage-mcqs-freshers-experienced/">SAN Questions</a>
           <br> 
           <a href="http://www.sanfoundry.com/php-questions-answers/">PHP Questions</a>
           <br> 
           <a href="http://www.sanfoundry.com/1000-python-questions-answers/">Python Quiz</a>
           <br> 
           <br> 
          </div> 
          <h3 class="sf-widget-title">Computer Science Questions</h3> 
          <div class="sf-postw-category"> 
           <a href="http://www.sanfoundry.com/operating-system-questions-answers/">Operating System Quiz</a>
           <br> 
           <a href="http://www.sanfoundry.com/1000-computer-organization-architecture-questions-answers/">Computer Architecture MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/software-architecture-design-questions-answers/">Software Architecture MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/software-engineering-questions-answers/">Software Engineering MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/artificial-intelligence-questions-answers/">Artificial Intelligence MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/lisp-programming-questions-answers/">LISP Programming MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/1000-database-management-system-questions-answers/">Database Management MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/computer-network-questions-answers/">Computer Network MCQs</a>
           <br> 
           <a href="http://www.sanfoundry.com/microprocessors-questions-answers/">Microprocessor MCQs</a>
           <br> 
           <br> 
          </div> 
          <h3 class="sf-widget-title">C Programming Examples</h3> 
          <div class="sf-postw-category"> 
           <a href="http://www.sanfoundry.com/simple-c-programs/">Simple C Programs</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-arrays/">C - Arrays</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-matrix/">C - Matrix</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-strings/">C - Strings</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-bitwise-operations/">C - Bitwise Operations</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-linked-list/">C - Linked Lists</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-stacks/">C - Stacks &amp; Queues</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-searching-sorting/">C - Searching &amp; Sorting</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-on-trees/">C - Trees</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-strings/">C - Strings</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-file-handling/">C - File Handling</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-mathematical-functions/">C - Mathematical Functions</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-on-puzzles-games/">C - Puzzles &amp; Games</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-recursion/">C Programs - Recursion</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-without-using-recursion/">C Programs - No Recursion</a>
           <br> 
           <br> 
          </div> 
          <h3 class="sf-widget-title">Java Algorithms</h3> 
          <div class="sf-postw-category"> 
           <a href="http://www.sanfoundry.com/java-programming-examples-numerical-problems-algorithms/">Java - Numerical Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/java-programming-examples-combinatorial-problems-algorithms/">Java - Combinatorial Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/java-programming-examples-graph-problems-algorithms/">Java - Graph Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/java-programming-examples-hard-graph-problems-algorithms/">Java - Hard Graph Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/java-programming-examples-computational-geometry-problems-algorithms/">Java - Computation Geometry</a>
           <br> 
           <a href="http://www.sanfoundry.com/java-programming-examples-set-string-problems-algorithms/">Java - Sets &amp; Strings</a>
           <br> 
           <a href="http://www.sanfoundry.com/java-programming-examples-data-structures/">Java - Data-Structures</a>
           <br> 
           <a href="http://www.sanfoundry.com/java-programming-examples-collection-api/">Java - Collection API Problems</a>
           <br> 
           <br> 
          </div> 
          <h3 class="sf-widget-title">C++ Algorithms</h3> 
          <div class="sf-postw-category"> 
           <a href="http://www.sanfoundry.com/cpp-programming-examples-numerical-problems-algorithms/">C++ - Numerical Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/cpp-programming-examples-combinatorial-problems-algorithms/">C++ - Combinatorial Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/cpp-programming-examples-graph-problems-algorithms/">C++ - Graph Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/cpp-programming-examples-hard-graph-problems-algorithms/">C++ - Hard Graph Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/cpp-programming-examples-computational-geometry-problems-algorithms/">C++ - Computation Geometry</a>
           <br> 
           <a href="http://www.sanfoundry.com/cpp-programming-examples-set-string-problems-algorithms/">C++ - Sets &amp; Strings</a>
           <br> 
           <a href="http://www.sanfoundry.com/cpp-programming-examples-data-structures/">C++ - Data-Structures</a>
           <br> 
           <a href="http://www.sanfoundry.com/cpp-programming-examples-stl/">C++ - STL Library</a>
           <br> 
           <br> 
          </div> 
          <h3 class="sf-widget-title">C Algorithms</h3> 
          <div class="sf-postw-category"> 
           <a href="http://www.sanfoundry.com/c-programming-examples-numerical-problems-algorithms/">C - Numerical Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-combinatorial-problems-algorithms/">C - Combinatorial Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-graph-problems-algorithms/">C - Graph Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-hard-graph-problems-algorithms/">C - Hard Graph Problems</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-computational-geometry-problems-algorithms/">C - Computation Geometry</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-set-string-problems-algorithms/">C - Sets &amp; Strings</a>
           <br> 
           <a href="http://www.sanfoundry.com/c-programming-examples-data-structures/">C - Data-Structures</a>
           <br> 
           <br> 
          </div>
         </div> 
        </aside> 
       </div>
       <!-- #sidebar --> 
      </div>
      <!-- #secondary .widget-area .span3 --> 
      <div id="content" class=" span6 content-sidebar-2"> 
       <div style="padding: 0px 2px 0px 2px;  border: 0px solid #E5E5E5; background: #FDFDFD;"> 
        <div style="float: left; text-align: left;">
          « 
         <a href="http://www.sanfoundry.com/java-program-implement-sorted-array/" rel="prev">Prev Page</a> 
        </div> 
        <div style="float: right; text-align: right;"> 
         <a href="http://www.sanfoundry.com/java-program-implement-best-first-search/" rel="next">Next Page</a> » 
        </div>
        <div style="clear:both" ;></div>
       </div> 
       <article id="post-25503" class="post-25503 post type-post status-publish format-standard has-post-thumbnail hentry category-ds2-using-java"> 
        <header class="entry-header"> 
         <h1 class="entry-title"> Java Program to Find MST(Minimum Spanning Tree) using Prim’s Algorithm </h1> 
         <div class="entry-meta">
           Posted on 
          <a href="http://www.sanfoundry.com/java-program-find-mst-using-prims-algorithm/" title="9:46 am" rel="bookmark"> <time class="entry-date updated" datetime="2013-08-06T09:46:01+00:00">August 6, 2013</time> </a>
          <span class="byline"> by <span class="author vcard"> <a class="url fn n" href="http://www.sanfoundry.com/author/bhojas/" title="View all posts by Manish" rel="author">Manish</a> </span> </span> 
         </div>
         <!-- .entry-meta --> 
        </header>
        <!-- .entry-header --> 
        <div class="entry-content"> 
         <div style="text-align:justify">
           This Java program is to find MST using Prim’s algorithm.In computer science, Prim’s algorithm is a greedy algorithm that finds a minimum spanning tree for a connected weighted undirected graph. This means it finds a subset of the edges that forms a tree that includes every vertex, where the total weight of all the edges in the tree is minimized.
          <p></p> 
          <p>Here is the source code of the Java program to find MST using prim’s algorithm. The Java program is successfully compiled and run on a Linux system. The program output is also shown below. </p>
         </div> 
         <div class="hk1_style-wrap5">
          <div class="hk1_style-wrap4">
           <div class="hk1_style-wrap3">
            <div class="hk1_style-wrap2">
             <div class="hk1_style-wrap">
              <div class="hk1_style">
               <div class="java">
                <ol>
                 <li class="li1"><pre class="de1"><span class="kw1">import</span> <span class="co2">java.util.InputMismatchException</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1"><span class="kw1">import</span> <span class="co2">java.util.Scanner</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1"><span class="kw1">public</span> <span class="kw1">class</span> Prims</pre></li>
                 <li class="li1"><pre class="de1"><span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">private</span> <span class="kw4">boolean</span> unsettled<span class="br0">[</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">private</span> <span class="kw4">boolean</span> settled<span class="br0">[</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">private</span> <span class="kw4">int</span> numberofvertices<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">private</span> <span class="kw4">int</span> adjacencyMatrix<span class="br0">[</span><span class="br0">]</span><span class="br0">[</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">private</span> <span class="kw4">int</span> key<span class="br0">[</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw1">final</span> <span class="kw4">int</span> INFINITE <span class="sy0">=</span> <span class="nu0">999</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">private</span> <span class="kw4">int</span> parent<span class="br0">[</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">public</span> Prims<span class="br0">(</span><span class="kw4">int</span> numberofvertices<span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">this</span>.<span class="me1">numberofvertices</span> <span class="sy0">=</span> numberofvertices<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        unsettled <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw4">boolean</span><span class="br0">[</span>numberofvertices <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        settled <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw4">boolean</span><span class="br0">[</span>numberofvertices <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        adjacencyMatrix <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw4">int</span><span class="br0">[</span>numberofvertices <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">]</span><span class="br0">[</span>numberofvertices <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        key <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw4">int</span><span class="br0">[</span>numberofvertices <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        parent <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw4">int</span><span class="br0">[</span>numberofvertices <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">public</span> <span class="kw4">int</span> getUnsettledCount<span class="br0">(</span><span class="kw4">boolean</span> unsettled<span class="br0">[</span><span class="br0">]</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw4">int</span> count <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> index <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> index <span class="sy0">&lt;</span> unsettled.<span class="me1">length</span><span class="sy0">;</span> index<span class="sy0">++</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="kw1">if</span> <span class="br0">(</span>unsettled<span class="br0">[</span>index<span class="br0">]</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                count<span class="sy0">++;</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">return</span> count<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">public</span> <span class="kw4">void</span> primsAlgorithm<span class="br0">(</span><span class="kw4">int</span> adjacencyMatrix<span class="br0">[</span><span class="br0">]</span><span class="br0">[</span><span class="br0">]</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw4">int</span> evaluationVertex<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> source <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> source <span class="sy0">&lt;=</span> numberofvertices<span class="sy0">;</span> source<span class="sy0">++</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> destination <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> destination <span class="sy0">&lt;=</span> numberofvertices<span class="sy0">;</span> destination<span class="sy0">++</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                <span class="kw1">this</span>.<span class="me1">adjacencyMatrix</span><span class="br0">[</span>source<span class="br0">]</span><span class="br0">[</span>destination<span class="br0">]</span> <span class="sy0">=</span> adjacencyMatrix<span class="br0">[</span>source<span class="br0">]</span><span class="br0">[</span>destination<span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> index <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> index <span class="sy0">&lt;=</span> numberofvertices<span class="sy0">;</span> index<span class="sy0">++</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">            key<span class="br0">[</span>index<span class="br0">]</span> <span class="sy0">=</span> INFINITE<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">        key<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        unsettled<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span> <span class="sy0">=</span> <span class="kw2">true</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        parent<span class="br0">[</span><span class="nu0">1</span><span class="br0">]</span> <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">while</span> <span class="br0">(</span>getUnsettledCount<span class="br0">(</span>unsettled<span class="br0">)</span> <span class="sy0">!=</span> <span class="nu0">0</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">            evaluationVertex <span class="sy0">=</span> getMimumKeyVertexFromUnsettled<span class="br0">(</span>unsettled<span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            unsettled<span class="br0">[</span>evaluationVertex<span class="br0">]</span> <span class="sy0">=</span> <span class="kw2">false</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            settled<span class="br0">[</span>evaluationVertex<span class="br0">]</span> <span class="sy0">=</span> <span class="kw2">true</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            evaluateNeighbours<span class="br0">(</span>evaluationVertex<span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">}</span> </pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">private</span> <span class="kw4">int</span> getMimumKeyVertexFromUnsettled<span class="br0">(</span><span class="kw4">boolean</span><span class="br0">[</span><span class="br0">]</span> unsettled2<span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw4">int</span> min <span class="sy0">=</span> <span class="kw3">Integer</span>.<span class="me1">MAX_VALUE</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw4">int</span> node <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> vertex <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> vertex <span class="sy0">&lt;=</span> numberofvertices<span class="sy0">;</span> vertex<span class="sy0">++</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="kw1">if</span> <span class="br0">(</span>unsettled<span class="br0">[</span>vertex<span class="br0">]</span> <span class="sy0">==</span> <span class="kw2">true</span> <span class="sy0">&amp;&amp;</span> key<span class="br0">[</span>vertex<span class="br0">]</span> <span class="sy0">&lt;</span> min<span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                node <span class="sy0">=</span> vertex<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">                min <span class="sy0">=</span> key<span class="br0">[</span>vertex<span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">return</span> node<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">public</span> <span class="kw4">void</span> evaluateNeighbours<span class="br0">(</span><span class="kw4">int</span> evaluationVertex<span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> destinationvertex <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> destinationvertex <span class="sy0">&lt;=</span> numberofvertices<span class="sy0">;</span> destinationvertex<span class="sy0">++</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="kw1">if</span> <span class="br0">(</span>settled<span class="br0">[</span>destinationvertex<span class="br0">]</span> <span class="sy0">==</span> <span class="kw2">false</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                <span class="kw1">if</span> <span class="br0">(</span>adjacencyMatrix<span class="br0">[</span>evaluationVertex<span class="br0">]</span><span class="br0">[</span>destinationvertex<span class="br0">]</span> <span class="sy0">!=</span> INFINITE<span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">                <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                    <span class="kw1">if</span> <span class="br0">(</span>adjacencyMatrix<span class="br0">[</span>evaluationVertex<span class="br0">]</span><span class="br0">[</span>destinationvertex<span class="br0">]</span> <span class="sy0">&lt;</span> key<span class="br0">[</span>destinationvertex<span class="br0">]</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">                    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                        key<span class="br0">[</span>destinationvertex<span class="br0">]</span> <span class="sy0">=</span> adjacencyMatrix<span class="br0">[</span>evaluationVertex<span class="br0">]</span><span class="br0">[</span>destinationvertex<span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">                        parent<span class="br0">[</span>destinationvertex<span class="br0">]</span> <span class="sy0">=</span> evaluationVertex<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">                    <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">                    unsettled<span class="br0">[</span>destinationvertex<span class="br0">]</span> <span class="sy0">=</span> <span class="kw2">true</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">                <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">public</span> <span class="kw4">void</span> printMST<span class="br0">(</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"SOURCE  : DESTINATION = WEIGHT"</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> vertex <span class="sy0">=</span> <span class="nu0">2</span><span class="sy0">;</span> vertex <span class="sy0">&lt;=</span> numberofvertices<span class="sy0">;</span> vertex<span class="sy0">++</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span>parent<span class="br0">[</span>vertex<span class="br0">]</span> <span class="sy0">+</span> <span class="st0">"<span class="es0">\t</span>:<span class="es0">\t</span>"</span> <span class="sy0">+</span> vertex <span class="sy0">+</span><span class="st0">"<span class="es0">\t</span>=<span class="es0">\t</span>"</span><span class="sy0">+</span> adjacencyMatrix<span class="br0">[</span>parent<span class="br0">[</span>vertex<span class="br0">]</span><span class="br0">]</span><span class="br0">[</span>vertex<span class="br0">]</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">    <span class="kw1">public</span> <span class="kw1">static</span> <span class="kw4">void</span> main<span class="br0">(</span><span class="kw3">String</span>... <span class="me1">arg</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw4">int</span> adjacency_matrix<span class="br0">[</span><span class="br0">]</span><span class="br0">[</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw4">int</span> number_of_vertices<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        Scanner scan <span class="sy0">=</span> <span class="kw1">new</span> Scanner<span class="br0">(</span><span class="kw3">System</span>.<span class="me1">in</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">        <span class="kw1">try</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Enter the number of vertices"</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            number_of_vertices <span class="sy0">=</span> scan.<span class="me1">nextInt</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            adjacency_matrix <span class="sy0">=</span> <span class="kw1">new</span> <span class="kw4">int</span><span class="br0">[</span>number_of_vertices <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">]</span><span class="br0">[</span>number_of_vertices <span class="sy0">+</span> <span class="nu0">1</span><span class="br0">]</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">            <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Enter the Weighted Matrix for the graph"</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> i <span class="sy0">&lt;=</span> number_of_vertices<span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                <span class="kw1">for</span> <span class="br0">(</span><span class="kw4">int</span> j <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> j <span class="sy0">&lt;=</span> number_of_vertices<span class="sy0">;</span> j<span class="sy0">++</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">                <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                    adjacency_matrix<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span> <span class="sy0">=</span> scan.<span class="me1">nextInt</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">                    <span class="kw1">if</span> <span class="br0">(</span>i <span class="sy0">==</span> j<span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">                    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                        adjacency_matrix<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">                        <span class="kw1">continue</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">                    <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">                    <span class="kw1">if</span> <span class="br0">(</span>adjacency_matrix<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span> <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">                    <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">                        adjacency_matrix<span class="br0">[</span>i<span class="br0">]</span><span class="br0">[</span>j<span class="br0">]</span> <span class="sy0">=</span> INFINITE<span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">                    <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">                <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">            Prims prims <span class="sy0">=</span> <span class="kw1">new</span> Prims<span class="br0">(</span>number_of_vertices<span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            prims.<span class="me1">primsAlgorithm</span><span class="br0">(</span>adjacency_matrix<span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">            prims.<span class="me1">printMST</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">&nbsp;</pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">}</span> <span class="kw1">catch</span> <span class="br0">(</span>InputMismatchException inputMismatch<span class="br0">)</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">{</span></pre></li>
                 <li class="li1"><pre class="de1">            <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="st0">"Wrong Input Format"</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">        <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1">        scan.<span class="me1">close</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span></pre></li>
                 <li class="li1"><pre class="de1">    <span class="br0">}</span></pre></li>
                 <li class="li1"><pre class="de1"><span class="br0">}</span></pre></li>
                </ol>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div> 
         <p><br></p> 
         <div class="hk1_style-wrap5">
          <div class="hk1_style-wrap4">
           <div class="hk1_style-wrap3">
            <div class="hk1_style-wrap2">
             <div class="hk1_style-wrap">
              <div class="hk1_style">
               <div class="bash">
                <pre class="de1"><span class="re1">$javac</span> Prims.java
<span class="re1">$java</span> Prims
&nbsp;
Enter the number of vertices
<span class="nu0">5</span>
Enter the Weighted Matrix <span class="kw1">for</span> the graph
<span class="nu0">0</span> <span class="nu0">4</span> <span class="nu0">0</span> <span class="nu0">0</span> <span class="nu0">5</span>
<span class="nu0">4</span> <span class="nu0">0</span> <span class="nu0">3</span> <span class="nu0">6</span> <span class="nu0">1</span> 
<span class="nu0">0</span> <span class="nu0">3</span> <span class="nu0">0</span> <span class="nu0">6</span> <span class="nu0">2</span>
<span class="nu0">0</span> <span class="nu0">6</span> <span class="nu0">6</span> <span class="nu0">0</span> <span class="nu0">7</span>
<span class="nu0">5</span> <span class="nu0">1</span> <span class="nu0">2</span> <span class="nu0">7</span> <span class="nu0">0</span>
SOURCE  : DESTINATION   =    WEIGHT
<span class="nu0">1</span>       :      <span class="nu0">2</span>        =       <span class="nu0">4</span>
<span class="nu0">5</span>       :      <span class="nu0">3</span>        =       <span class="nu0">2</span>
<span class="nu0">2</span>       :      <span class="nu0">4</span>        =       <span class="nu0">6</span>
<span class="nu0">2</span>       :      <span class="nu0">5</span>        =       <span class="nu0">1</span></pre>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div> 
         <p><strong>Sanfoundry Global Education &amp; Learning Series – 1000 Java Programs.</strong></p> 
         <div style="text-align:justify">
           If you wish to look at all Java Programming examples, go to 
          <a href="http://www.sanfoundry.com/">Java Programs</a>. 
         </div> 
         <div>
          « 
          <a href="http://www.sanfoundry.com/java-program-implement-sorted-array/" rel="prev">Prev Page - Java Program to Implement Sorted Array</a>
         </div>
         <div>
          » 
          <a href="http://www.sanfoundry.com/java-program-implement-best-first-search/" rel="next">Next Page - Java Program to Implement Best-First Search</a>
         </div>
         <div class="e-mailit_bottom_toolbox">
          <div class="e-mailit_toolbox square size32 " data-emailit-url="http://www.sanfoundry.com/java-program-find-mst-using-prims-algorithm/" data-emailit-title="Java Program to Find MST(Minimum Spanning Tree) using Prim’s Algorithm"> 
           <div class="e-mailit_btn_Facebook"></div> 
           <div class="e-mailit_btn_Twitter"></div> 
           <div class="e-mailit_btn_LinkedIn"></div> 
           <div class="e-mailit_btn_Send_via_Email"></div> 
          </div> 
         </div> 
        </div>
        <!-- .entry-content --> 
       </article>
       <!-- #post-25503 --> 
       <div class="more-content"> 
        <div class="row-fluid"> 
         <div class="span6 previous-post">
           « 
          <a href="http://www.sanfoundry.com/php-questions-answers-working-with-dates/" rel="prev">PHP Questions &amp; Answers – Working with Dates</a> 
         </div> 
         <div class="span6 next-post"> 
          <a href="http://www.sanfoundry.com/cpp-program-implement-min-heap/" rel="next">C++ Program to Implement Min Heap</a> » 
         </div> 
        </div> 
       </div> 
       <div class="sf-post" style="padding: 0px 2px 0px 2px;"> 
        <div style="text-align: center; margin-bottom: 0px; text-align: center; border-top: 0px solid #E5E5E5; border-bottom: 0px solid #E5E5E5;"> 
         <!-- Tag ID: Sanfoundry_300x250_320x50_BTF_1 --> 
         <div align="center" id="Sanfoundry_300x250_320x50_BTF_1"> 
          <script data-cfasync="false" type="text/javascript">
        freestar.queue.push(function () { googletag.display('Sanfoundry_300x250_320x50_BTF_1'); });
    </script> 
         </div> 
        </div> 
       </div> 
       <div class="sf-post" style="padding-top: 0px; padding-bottom: 0px;"> 
        <div class="yarpp-related"> 
         <h3>Deep Dive @ Sanfoundry:</h3>
         <ol> 
          <li><a href="http://www.sanfoundry.com/c-programming-examples-graph-problems-algorithms/" rel="bookmark" title="C Programming Examples on Graph Problems &amp; Algorithms">C Programming Examples on Graph Problems &amp; Algorithms </a></li> 
          <li><a href="http://www.sanfoundry.com/java-programming-examples-numerical-problems-algorithms/" rel="bookmark" title="Java Programming Examples on Numerical Problems &amp; Algorithms">Java Programming Examples on Numerical Problems &amp; Algorithms </a></li> 
          <li><a href="http://www.sanfoundry.com/cpp-programming-examples-graph-problems-algorithms/" rel="bookmark" title="C++ Programming Examples on Graph Problems &amp; Algorithms">C++ Programming Examples on Graph Problems &amp; Algorithms </a></li> 
          <li><a href="http://www.sanfoundry.com/java-programming-examples-collection-api/" rel="bookmark" title="Java Programming Examples on Collection API">Java Programming Examples on Collection API </a></li> 
          <li><a href="http://www.sanfoundry.com/java-programming-examples-combinatorial-problems-algorithms/" rel="bookmark" title="Java Programming Examples on Combinatorial Problems &amp; Algorithms">Java Programming Examples on Combinatorial Problems &amp; Algorithms </a></li> 
          <li><a href="http://www.sanfoundry.com/java-programming-examples-data-structures/" rel="bookmark" title="Java Programming Examples on Data-Structures">Java Programming Examples on Data-Structures </a></li> 
          <li><a href="http://www.sanfoundry.com/java-programming-examples-computational-geometry-problems-algorithms/" rel="bookmark" title="Java Programming Examples on Computational Geometry Problems &amp; Algorithms">Java Programming Examples on Computational Geometry Problems &amp; Algorithms </a></li> 
          <li><a href="http://www.sanfoundry.com/java-programming-examples-graph-problems-algorithms/" rel="bookmark" title="Java Programming Examples on Graph Problems &amp; Algorithms">Java Programming Examples on Graph Problems &amp; Algorithms </a></li> 
          <li><a href="http://www.sanfoundry.com/java-programming-examples-hard-graph-problems-algorithms/" rel="bookmark" title="Java Programming Examples on Hard Graph Problems &amp; Algorithms">Java Programming Examples on Hard Graph Problems &amp; Algorithms </a></li> 
          <li><a href="http://www.sanfoundry.com/stp-spanning-tree-protocol-training/" rel="bookmark" title="STP – Spanning Tree Protocol Training">STP – Spanning Tree Protocol Training </a></li> 
         </ol> 
        </div> 
       </div> 
       <div class="sf-post" style="margin: 0px 0px;"> 
        <!--Carambola Script --> 
        <img height="0" width="0" alt="" src="//pixel.watch/iq5e" style="display:block;"> 
        <script data-cfasync="false" class="carambola_InContent" type="text/javascript" cbola_wid="0">  
(function (i,d,s,o,m,r,c,l,w,q,y,h,g) {  
var e=d.getElementById(r);if(e===null){  
var t = d.createElement(o); t.src = g; t.id = r; t.setAttribute(m, s);t.async = 1;var n=d.getElementsByTagName(o)[0];n.parentNode.insertBefore(t, n); 
var dt=new Date().getTime();  
try{i[l][w+y](h,i[l][q+y](h)+'&'+dt);}catch(er){i[h]=dt;}  
} else if(typeof i[c]!=='undefined'){i[c]++}  
else{i[c]=1;}  
})(window, document, 'InContent', 'script', 'mediaType', 'carambola_proxy','Cbola_IC','localStorage','set','get','Item','cbolaDt','//route.carambo.la/inimage/getlayer?pid=snfn76&did=112284&wid=0')  
</script> 
       </div> 
       <div class="sf-post" style="margin-bottom:5px;"> 
        <div style="float: left; text-align: center; padding-right: 20px;"> 
         <img src="//www.sanfoundry.com/wp-content/uploads/2017/01/Manish2.png" class="aligncenter" width="150px" height="150px"> 
        </div>
        <a href="http://www.sanfoundry.com/about/">Manish Bhojasia</a>, a technology veteran with 20+ years @ Cisco &amp; Wipro, is Founder and CTO at Sanfoundry. He is Linux Kernel Developer and SAN Architect and is passionate about competency developments in these areas. He lives in Bangalore and delivers focused training sessions to IT professionals in Linux Kernel, Linux Debugging, Linux Device Drivers, Linux Networking, Linux Storage &amp; Cluster Administration, Advanced C Programming, SAN Storage Technologies, SCSI Internals and Storage Protocols such as iSCSI &amp; Fiber Channel. Stay connected with him below:
        <br> 
        <a href="http://www.linkedin.com/in/manishbhojasia">LinkedIn</a> | 
        <a href="http://www.facebook.com/sanfoundry">Facebook</a> | 
        <a href="http://www.twitter.com/sanfoundry">Twitter</a> | 
        <a href="https://plus.google.com/104408026570656234343/posts">Google+</a> 
       </div> 
       <div style="margin-top: 20px; margin-bottom: 0px; border: 1px solid #E5E5E5;"> 
        <script type="text/javascript" src="//app.mailerlite.com/data/webforms/63357/t9m0n1.js?v3"></script> 
       </div> 
      </div>
      <!-- #content --> 
      <div id="secondary" class="widget-area span3"> 
       <div id="sidebar"> 
        <aside id="text-118" class="widget-container widget_text">
         <h3 class="widget-title">Best Careers</h3> 
         <div class="textwidget">
          <div class="sf-postw-category"> 
           <a href="http://www.sanfoundry.com/salary-50l/">Developer Tracks</a>
           <br> 
           <a href="http://www.sanfoundry.com/san-storage-developer-training-courses/">SAN Developer</a>
           <br> 
           <a href="http://www.sanfoundry.com/linux-kernel-developer-training-courses-jobs/">Linux Kernel Developer</a>
           <br> 
           <a href="http://www.sanfoundry.com/linux-device-driver-developer-training/">Linux Driver Developer</a>
           <br> 
           <a href="http://www.sanfoundry.com/linux-network-developer-training/">Linux Network Developer</a>
           <br>
           <br> 
           <a href="http://www.sanfoundry.com/sanfoundry-classes/">Live Training Photos</a>
           <br> 
           <a href="http://www.sanfoundry.com/professional-mentoring-coaching-career-guidance-cto/">Mentoring</a>
           <br> 
           <a href="http://www.sanfoundry.com/programming-discipline-and-software/">Software Productivity</a>
           <br> 
           <a href="http://www.sanfoundry.com/gdb-example-tutorial/">GDB Assignment</a>
           <br> 
          </div> 
         </div> 
        </aside>
        <aside id="text-104" class="widget-container widget_text"> 
         <div class="textwidget">
          <div style="text-align: center; "> 
           <!-- Tag ID: Sanfoundry_300x250_320x50_BTF_4 --> 
           <div align="center" id="Sanfoundry_300x250_320x50_BTF_4"> 
            <script data-cfasync="false" type="text/javascript">
        freestar.queue.push(function () { googletag.display('Sanfoundry_300x250_320x50_BTF_4'); });
    </script> 
           </div> 
          </div> 
         </div> 
        </aside>
        <aside id="text-116" class="widget-container widget_text"> 
         <div class="textwidget">
          <div style="text-align:justify;margin-top: 20px;"> 
           <em> 
            <blockquote>
              Sanfoundry is 
             <b>No. 1</b> choice for Deep Hands-ON Trainings in 
             <b>SAN, Linux &amp; C, Kernel Programming</b>. Our Founder has trained employees of almost all Top Companies in India such as VMware, Citrix, Oracle, Motorola, Ericsson, Aricent, HP, Intuit, Microsoft, Cisco, SAP Labs, Siemens, Symantec, Redhat, Chelsio, Cavium, ST-Micro, Samsung, LG-Soft, Wipro, TCS, HCL, IBM, Accenture, HSBC, Mphasis, Tata-Elxsi, Tata VSNL, Mindtree, Cognizant and Startups. 
            </blockquote> </em> 
          </div> 
         </div> 
        </aside>
        <aside id="text-71" class="widget-container widget_text"> 
         <div class="textwidget">
          <div style="text-align: center; "> 
           <!-- Tag ID: Sanfoundry_300x250_320x50_BTF_3 --> 
           <div align="center" id="Sanfoundry_300x250_320x50_BTF_3"> 
            <script data-cfasync="false" type="text/javascript">
        freestar.queue.push(function () { googletag.display('Sanfoundry_300x250_320x50_BTF_3'); });
    </script> 
           </div> 
          </div> 
         </div> 
        </aside>
        <aside id="text-124" class="widget-container widget_text">
         <h3 class="widget-title">Best Trainings</h3> 
         <div class="textwidget">
          <div class="sf-postw-category"> 
           <a href="http://www.sanfoundry.com/san-storage-area-networks-training/">SAN I - Technology</a>
           <br> 
           <a href="http://www.sanfoundry.com/san-administration-training-course/">SAN II - Admin</a>
           <br> 
           <a href="http://www.sanfoundry.com/linux-administration-training/">Linux Fundamentals</a>
           <br> 
           <a href="http://www.sanfoundry.com/advanced-c-programming-training/">Advanced C Training</a>
           <br> 
           <a href="http://www.sanfoundry.com/training-on-linux-debugging-techniques/">Linux-C Debugging</a>
           <br> 
           <a href="http://www.sanfoundry.com/training-on-linux-internals-systems/">System Programming</a>
           <br> 
           <a href="http://www.sanfoundry.com/training-socket-network-programming/">Network Programming</a>
           <br> 
           <a href="http://www.sanfoundry.com/training-multithreaded-parallel/">Linux Threads</a>
           <br> 
           <a href="http://www.sanfoundry.com/linux-kernel-internals-training/">Kernel Programming</a>
           <br> 
           <a href="http://www.sanfoundry.com/linux-kernel-debugging-training/">Kernel Debugging</a>
           <br> 
           <a href="http://www.sanfoundry.com/training-on-linux-device-drivers/">Linux Device Drivers</a>
           <br> 
          </div> 
         </div> 
        </aside>
        <!-- fixed widget -->
        <aside id="text-126" class="widget-container widget_text"> 
         <div class="textwidget">
          <div style="text-align: center; "> 
           <!-- Tag ID: Sanfoundry_300x250_320x50_BTF_2 --> 
           <div align="center" id="Sanfoundry_300x250_320x50_BTF_2"> 
            <script data-cfasync="false" type="text/javascript">
        freestar.queue.push(function () { googletag.display('Sanfoundry_300x250_320x50_BTF_2'); });
    </script> 
           </div> 
          </div> 
         </div> 
        </aside> 
       </div>
       <!-- #sidebar --> 
      </div>
      <!-- #secondary .widget-area .span3 --> 
     </div>
     <!-- #container .row-fluid--> 
    </div>
    <!--container fluid --> 
   </div>
   <!-- container --> 
  </div>
  <!-- container full width --> 
  <div id="footer_widgets_wrapper" class="container-full-width"> 
   <div id="footer_wrapper" class="container"> 
    <div id="wrapper" class="container-fluid"> 
     <div id="footer-widgets" class="row-fluid"> 
      <div id="footer-widget-container" class="span12"> 
       <div class="row-fluid"> 
        <aside id="text-138" class="widget-container span3 widget_text"> 
         <div class="textwidget">
          <h3 class="widget-title">Best Reference Books</h3> 
          <a href="http://www.sanfoundry.com/best-reference-books-computer-science-engineering/">Computer Science Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-programming-hot-technologies">Algorithm &amp; Programming Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-electrical-electronics-engineering/">Electronics Engineering Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-electrical-electronics-engineering/">Electrical Engineering Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-chemical-engineering/">Chemical Engineering Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-civil-engineering/">Civil Engineering Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-mechanical-engineering/">Mechanical Engineering Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-industrial-engineering-operations-research/">Industrial Engineering Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-instrumentation-engineering/">Instrumentation Engg Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-metallurgical-engineering/">Metallurgical Engineering Books</a>
          <br> 
          <a href="http://www.sanfoundry.com/best-reference-books-tech-engineering-sciences/">All Stream Best Books</a>
          <br> 
         </div> 
        </aside>
        <aside id="text-137" class="widget-container span3 widget_text"> 
         <div class="textwidget">
          <h3 class="widget-title">Questions and Answers</h3> 
          <a href="http://www.sanfoundry.com/c-interview-questions-answers/">1000 C Questions &amp; Answers</a>
          <br> 
          <a href="http://www.sanfoundry.com/cplusplus-interview-questions-answers/">1000 C++ Questions &amp; Answers</a>
          <br> 
          <a href="http://www.sanfoundry.com/1000-csharp-questions-answers/">1000 C# Questions &amp; Answers</a>
          <br> 
          <a href="http://www.sanfoundry.com/java-questions-answers-freshers-experienced/">1000 Java Questions &amp; Answers</a>
          <br> 
          <a href="http://www.sanfoundry.com/technical-interview-questions/">1000 Linux Questions &amp; Answers</a>
          <br> 
          <a href="http://www.sanfoundry.com/1000-python-questions-answers/">1000 Python Questions</a>
          <br> 
          <a href="http://www.sanfoundry.com/1000-php-questions-answers/">1000 PHP Questions &amp; Answers</a>
          <br> 
          <a href="http://www.sanfoundry.com/1000-hadoop-questions-answers/">1000 Hadoop Questions</a>
          <br> 
          <a href="http://www.sanfoundry.com/1000-cloud-computing-questions-answers/">Cloud Computing Questions</a>
          <br> 
          <a href="http://www.sanfoundry.com/computer-science-questions-answers/">Computer Science Questions</a>
          <br> 
          <a href="http://www.sanfoundry.com/">All Stream Questions &amp; Answers</a>
          <br> 
         </div> 
        </aside>
        <aside id="text-136" class="widget-container span3 widget_text"> 
         <div class="textwidget">
          <h3 class="widget-title">India Internships</h3> 
          <a href="http://www.sanfoundry.com/internships-computer-science-engineering/">Computer Science Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internships-instrumentation-engineering/">Instrumentation Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internships-electronics-electrical-engineering/">Electronics Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internships-electronics-electrical-engineering/">Electrical Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internships-mechanical-engineering/">Mechanical Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internship-industrial-engineering/">Industrial Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internships-systems-control-engineering/">Systems Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internships-chemical-engineering/">Chemical Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internships-civil-engineering/">Civil Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internship/">IT Internships</a>
          <br> 
          <a href="http://www.sanfoundry.com/internship/">All Stream Internships</a>
          <br> 
         </div> 
        </aside>
        <aside id="text-135" class="widget-container span3 widget_text"> 
         <div class="textwidget">
          <h3 class="widget-title">About Sanfoundry</h3> 
          <a href="http://www.sanfoundry.com/about/">About Us</a>
          <br> 
          <a href="http://www.sanfoundry.com/copyright/">Copyright</a>
          <br> 
          <a href="http://www.sanfoundry.com/tos-privacy-policy/">TOS &amp; Privacy</a>
          <br> 
          <a href="http://www.sanfoundry.com/jobs/">Jobs</a>
          <br> 
          <a href="http://www.sanfoundry.com/coursesfees/">Bangalore Training</a>
          <br> 
          <a href="http://www.sanfoundry.com/online-training-san-linux-kernel-device-drivers/">Online Training</a>
          <br> 
          <a href="http://www.sanfoundry.com/san-storage-area-networks-training/">SAN Training</a>
          <br> 
          <a href="http://www.sanfoundry.com/salary-50l/">Developers Track</a>
          <br> 
          <a href="http://www.sanfoundry.com/professional-mentoring-coaching-career-guidance-cto/">Mentoring Sessions</a>
          <br> 
          <a href="http://www.sanfoundry.com/contact/">Contact Us</a>
          <br> 
          <a href="http://www.sanfoundry.com/sitemap_index.xml">Sitemap</a> 
         </div> 
        </aside> 
       </div>
       <!-- .row-fluid --> 
      </div>
      <!-- #footer-widget-container --> 
     </div>
     <!-- #footer-widgets .row-fluid  --> 
    </div>
    <!-- #wrapper .container-fluid --> 
   </div>
   <!-- footer wrapper --> 
  </div>
  <!-- footer widgets wrapper --> 
  <div class="container-full-width" id="after_footer"> 
   <div class="container"> 
    <div class="container-fluid"> 
     <footer class="site-footer row-fluid"> 
      <!-- Adds the afterfooter copyright area --> 
      <div class="span12">
        © 2011
       <script>new Date().getFullYear()>2011&&document.write("-"+new Date().getFullYear());</script> Sanfoundry 
      </div> 
     </footer> 
     <!-- row-fluid --> 
    </div> 
    <!-- .container-fluid--> 
   </div> 
   <!-- .container --> 
  </div> 
  <!-- #after_footer --> 
  <script type="text/javascript">
var colomatduration = 'fast';
var colomatslideEffect = 'slideFade';
</script>
  <script type="text/javascript">var q2w3_sidebar_options = new Array();
q2w3_sidebar_options[0] = { "sidebar" : "sidebar-right", "margin_top" : 10, "margin_bottom" : 0, "stop_id" : "footer_widgets_wrapper", "screen_max_width" : 360, "screen_max_height" : 640, "width_inherit" : false, "refresh_interval" : 1500, "window_load_hook" : false, "disable_mo_api" : false, "widgets" : ['text-126'] };
</script> 
  <script type="text/javascript" defer src="http://www.sanfoundry.com/wp-content/cache/autoptimize/js/autoptimize_98d43ecb3eaf7cf2e28d403309666449.js"></script>  
  <!-- Dynamic page generated in 0.482 seconds. --> 
  <!-- Cached page generated by WP-Super-Cache on 2017-08-30 12:44:02 --> 
  <!-- Compression = gzip -->
 </body>
</html>