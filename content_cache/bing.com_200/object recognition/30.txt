<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US" prefix="og: http://ogp.me/ns#" itemscope itemtype="http://schema.org/WebSite">
 <head profile="http://gmpg.org/xfn/11"> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <title>Image recognition tutorial in R using deep convolutional neural networks (MXNet package) | R-bloggers</title> 
  <script src="/cdn-cgi/apps/head/pAx-dKbLyle7umPnDyx7D0pQbKA.js"></script>
  <link rel="stylesheet" href="https://www.r-bloggers.com/wp-content/themes/magazine-basic-child/style.css" type="text/css" media="screen"> 
  <style type="text/css">

body { width: 1024px; }

#mainwrapper { width: 1004px; }

#sidebar { width: 180px; }

#sidebar .side-widget { width: 160px; }


#secondsidebar { width: 300px; }

#secondsidebar .side-widget { width: 300px; }


#leftcontent, #twocol, #threecol, #threecol2, .commentlist { width: 456px; }

#leftcontent img, .wp-caption { max-width: 456px; }

#leftcontent .wp-caption img, #leftcontent .gallery-thumb img { max-width: 444px; }

<!-- fix for IE & Safari -->

.threepost embed { width: 132.24px !important; }

.twopost embed { width: 209.76px !important; }

<!-- end fix for Safari -->

</style> 
  <link rel="pingback" href="https://www.r-bloggers.com/xmlrpc.php"> 
  <!--[if IE]>
<link rel="stylesheet" type="text/css" href="https://www.r-bloggers.com/wp-content/themes/magazine-basic/iestyles.css" />
<![endif]--> 
  <!-- Open Graph Meta Tags generated by MashShare 3.4.2 - https://mashshare.net --> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Image recognition tutorial in R using deep convolutional neural networks (MXNet package)"> 
  <meta property="og:description" content="<p>This is a detailed tutorial on image recognition in R using a deep convolutional neural network provided by the <strong><a href=&quot;https://github.com/dmlc/mxnet&quot;>MXNet package</a></strong>. After a <a href=&quot;http://firsttimeprogrammer.blogspot.com/2016/07/image-recognition-in-r-using.html&quot;>short post</a> I wrote some times ago I received a lot of requests and emails for a much more detailed explanation, therefore I decided to write this tutorial. This post will show a reproducible example on how to get 97.5% accuracy score on a faces recognition task in R. </p> <p><a href=&quot;https://lh3.googleusercontent.com/-nEI6wVVWB2Q/V6UHVnx2WTI/AAAAAAAABtE/eLuJS_qyDC0/s1600-h/my_convolutional_neural_network%25255B6%25255D.jpg&quot;><img title=&quot;my_convolutional_neural_network&quot; border=&quot;0&quot; alt=&quot;my_convolutional_neural_network&quot; src=&quot;https://lh3.googleusercontent.com/-h55l2vVX1_E/V6UHV_zxf_I/AAAAAAAABtI/jif5V_AL_wE/my_convolutional_neural_network_thumb%25255B3%25255D.jpg?imgmax=800&quot; width=&quot;534&quot; height=&quot;153&quot;></a></p> <h2></h2> <a name=&quot;more&quot;></a> <h2><br>Premises</h2> <p>I feel some premises are necessary. I’m writing this <strong>tutorial</strong> with two main objectives.<br>The first one is to provide a fully reproducible example to everyone; the second objective is to provide a, hopefully, clear explanation to the most frequent questions I received via email on <a href=&quot;http://firsttimeprogrammer.blogspot.com/2016/07/image-recognition-in-r-using.html&quot;>the old post</a>. Please be aware that this is just how I decided to tackle this particular problem, this is certainly not the only way to solve it, and most certainly it is not the best. If you have any suggestion to improve the model or the process, or should you spot any mistake, please do leave a comment.</p> <h2>Requirements</h2> <p>I’m going to use both <strong>Python 3.x</strong> (for getting the data and some preprocessing) and <strong>R</strong> (for the core of the tutorial), so make sure to have both installed. The package requirements for R are the following:</p> <ol><li><a href=&quot;https://github.com/dmlc/mxnet/blob/master/docs/how_to/build.md&quot;>MXNet</a>. This package will provide you with the model we are going to be using in this tutorial, namely a deep convolutional neural network. You don’t need the GPU version, CPU will suffice for this task although it could be slower. If you feel like it, then go for the GPU version.  </li><li><a href=&quot;https://bioconductor.org/packages/release/bioc/html/EBImage.html&quot;>EBImage</a>. This package provides a wide variety of tools to work with images. It is a pleasure to work on images using this package, the documentation is crystal clear and pretty straightforward.</li></ol><p>As for Python 3.x please make sure to install both<strong> </strong><a href=&quot;http://www.numpy.org/&quot;><strong>Numpy</strong></a> and<strong> </strong><a href=&quot;http://scikit-learn.org/stable/&quot;><strong>Scikit-learn</strong></a>. I suggest to install the <strong><a href=&quot;https://www.continuum.io/downloads&quot;>Anaconda</a></strong> distribution which already has installed some commonly used packages for <strong>data science</strong> and <strong>machine learning</strong>.</p> <p>Once you have all these things installed and running, you are set to go.</p> <h2>The dataset</h2> <p>I am going to use the <a href=&quot;http://scikit-learn.org/stable/datasets/olivetti_faces.html&quot;>Olivetti faces dataset</a><sup>1</sup>. This dataset is a collection of 64x64 pixel 0-256 greyscale images.</p> <p>The dataset contains a total of 400 images of 40 subjects. With just 10 samples for each subject it is usually used for <strong>unsupervised </strong>or <strong>semi-supervised</strong> algorithms, but I’m going to try my best with the selected <strong>supervised </strong>method.</p> <p>First of all, you need to scale the images in the 0-1 range. This is automatically done by the function we are going to use to download the dataset, so you do not need to worry about it that much, just be aware that it has already been done for you. Should you use your own images be sure to <strong>scale</strong> them down in the 0-1 range (or –1,1 range, although the first seems work better with neural networks in my experience). This below is the Python script you need to run in order to download the dataset. Just change the paths to your selected paths and then run it either from your IDE or the terminal.</p><p>What this piece of code does is basically download the data, reshape the X datapoints (the images) and then save the numpy arrays to a .csv file.</p> <p>As you can see, the x array is a tensor (tensor is a fancy name for a multidimensional matrix) of shape (400, 64, 64): this means that the x array contains 400 samples of 64x64 matrices (read images). When in doubt about these things, just print out the first elements of the tensor and try to figure out the structure of the data with what you know. For instance, we know from the dataset description that we have 400 samples and that each image is 64x64 pixel. We flatten the x tensor into a matrix of shape&nbsp; 400x4096. That is, each 64x64 matrix (image) is now converted (flattened) to a row vector of length 4096.</p> <p>As for y, y is already a simple column vector of size 400. No need to reshape it.</p> <p>Take a look at the generated .csv and check that everything makes sense to you.</p> <h2>Some more preprocessing with R</h2> <p>Now we are going to use <strong>EBImage</strong> to resize each image to 28x28 pixel and generate the training and testing datasets. You may ask why I am resizing the images, well, for some reason my machine does not like 64x64 pixel images and my PC crash whenever I run the model with the data. Not good. But that’s ok since we can get good results with smaller images too (you can try running the model with the 64x64 size images if your PC does not crash though). Let’s go on now:</p><p>This part of the tutorial should be pretty self explanatory, if you are not sure on what is the output, I suggest taking a look at the <strong>rs_df </strong>dataframe. It should be a 400x785 dataframe as follows:</p> <p>label, pixel1, pixel2, … , pixel784<br>0, 0.2, 0.3, … ,0.1</p> <h2>Building the model</h2> <p>Now for the fun part, let’s build the model. Below you can find the script I used to train and test the model. After the script you can find my comments and explanations on the code.</p><p>After having loaded the training and testing dataset, I convert each dataframe to a numeric matrix using the <em>data.matrix</em> function. Remember that the first column of the data represents the labels associated with each image. Be sure to remove the labels from <em>train_array</em> and <em>test_array</em>. Then, after having separated the predictors from the labels, you need to tell MXNet the shape of the data. This is what I did at line 19 with the following piece of code “dim(train_array) &amp;lt;- c(28, 28, 1, ncol(train_x))” for the training array and at line 24 for the test arrray. By doing this, we are essentially telling the model that the training data is made of ncol(train_x) samples (360 images) of shape 28x28. The number 1 signals that the images are greyscale, ie they have only 1 channel. If the images were RGB then the 1 should have been replaced by a 3 since in that case each image would have 3 channels.</p> <p>As far as the model structure is concerned, this is a&nbsp; variation of the LeNet model using hyperbolic tangent instead of “Relu” as activation function, 2 convolutional layers, 2 pooling layers, 2 fully connected layer, and a typical softmax output.</p> <p>Each <strong>convolutional layer</strong> is using a 5x5 kernel and applying a fixed number of filters, check <a href=&quot;https://www.youtube.com/watch?v=BFdMrDOx_CM&quot;>this awesome video</a> for some qualitative insight into convolutional layers. The <strong>pooling layers</strong> apply a classical “max pooling” approach.</p> <p>During my tests <strong>tanh</strong> seemd to work far better than sigmoid and Relu but you can try and use the other activation functions if you want.</p> <p>As for the model <strong>hyperparameters</strong>, the learning rate is a little higher than usual but it turns out that it works fine, while the selected number of epochs is 480. Batch size of 40 seems to work fine. These hyperparameters were found out from many trials and error. As far as I know I could have performed a grid search at best, but I did not want to over complicate the code and therefore I just used the classical trial and error approach.</p> <p>At the end you should get 0.975 accuracy.</p> <h2>Conclusions</h2> <p>All in all, this model was fairly easy to set up and run. When running on CPU it takes about 4-5 minutes to train which is a bit long if you want to make some experiments but it is reasonable to work with.</p> <p>Considering the fact that we did not do any feature engineering and just made some simple and ordinary preprocessing steps, I believe the result achieved is quite good. Of course, in case we would like to get a better grasp on the “true” accuracy,&nbsp; we would need to perform some cross validation procedures (that will inevitably eat up a lot of computing time <img class=&quot;wlEmoticon wlEmoticon-smile&quot; alt=&quot;Smile&quot; src=&quot;https://lh3.googleusercontent.com/-C9fbfj6H5TI/V6UHWH3E9lI/AAAAAAAABtM/_q1i38Kt3Ps/wlEmoticon-smile%25255B2%25255D.png?imgmax=800&quot;>). </p> <p>Thank you for reading this far, I hope this tutorial helped you understanding how to set up and run this particular model. </p> <p> </p><hr> Dataset source and credits: <p><sup>1</sup>Olivetti faces dataset was made by AT&amp;amp;T Laboratories Cambridge.</p>"> 
  <meta property="og:url" content="https://www.r-bloggers.com/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package/"> 
  <meta property="og:site_name" content="R-bloggers"> 
  <meta property="article:publisher" content="https://www.facebook.com/rbloggers/"> 
  <meta property="article:published_time" content="2016-08-05T12:21:00+00:00"> 
  <meta property="article:modified_time" content="2016-08-05T15:39:09+00:00"> 
  <meta property="og:updated_time" content="2016-08-05T15:39:09+00:00"> 
  <!-- Open Graph Meta Tags generated by MashShare 3.4.2 - https://www.mashshare.net --> 
  <!-- Twitter Card generated by MashShare 3.4.2 - https://www.mashshare.net --> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:title" content="Image recognition tutorial in R using deep convolutional neural networks (MXNet package)"> 
  <meta name="twitter:description" content="<p>This is a detailed tutorial on image recognition in R using a deep convolutional neural network provided by the <strong><a href=&quot;https://github.com/dmlc/mxnet&quot;>MXNet package</a></strong>. After a <a href=&quot;http://firsttimeprogrammer.blogspot.com/2016/07/image-recognition-in-r-using.html&quot;>short post</a> I wrote some times ago I received a lot of requests and emails for a much more detailed explanation, therefore I decided to write this tutorial. This post will show a reproducible example on how to get 97.5% accuracy score on a faces recognition task in R. </p> <p><a href=&quot;https://lh3.googleusercontent.com/-nEI6wVVWB2Q/V6UHVnx2WTI/AAAAAAAABtE/eLuJS_qyDC0/s1600-h/my_convolutional_neural_network%25255B6%25255D.jpg&quot;><img title=&quot;my_convolutional_neural_network&quot; border=&quot;0&quot; alt=&quot;my_convolutional_neural_network&quot; src=&quot;https://lh3.googleusercontent.com/-h55l2vVX1_E/V6UHV_zxf_I/AAAAAAAABtI/jif5V_AL_wE/my_convolutional_neural_network_thumb%25255B3%25255D.jpg?imgmax=800&quot; width=&quot;534&quot; height=&quot;153&quot;></a></p> <h2></h2> <a name=&quot;more&quot;></a> <h2><br>Premises</h2> <p>I feel some premises are necessary. I’m writing this <strong>tutorial</strong> with two main objectives.<br>The first one is to provide a fully reproducible example to everyone; the second objective is to provide a, hopefully, clear explanation to the most frequent questions I received via email on <a href=&quot;http://firsttimeprogrammer.blogspot.com/2016/07/image-recognition-in-r-using.html&quot;>the old post</a>. Please be aware that this is just how I decided to tackle this particular problem, this is certainly not the only way to solve it, and most certainly it is not the best. If you have any suggestion to improve the model or the process, or should you spot any mistake, please do leave a comment.</p> <h2>Requirements</h2> <p>I’m going to use both <strong>Python 3.x</strong> (for getting the data and some preprocessing) and <strong>R</strong> (for the core of the tutorial), so make sure to have both installed. The package requirements for R are the following:</p> <ol><li><a href=&quot;https://github.com/dmlc/mxnet/blob/master/docs/how_to/build.md&quot;>MXNet</a>. This package will provide you with the model we are going to be using in this tutorial, namely a deep convolutional neural network. You don’t need the GPU version, CPU will suffice for this task although it could be slower. If you feel like it, then go for the GPU version.  </li><li><a href=&quot;https://bioconductor.org/packages/release/bioc/html/EBImage.html&quot;>EBImage</a>. This package provides a wide variety of tools to work with images. It is a pleasure to work on images using this package, the documentation is crystal clear and pretty straightforward.</li></ol><p>As for Python 3.x please make sure to install both<strong> </strong><a href=&quot;http://www.numpy.org/&quot;><strong>Numpy</strong></a> and<strong> </strong><a href=&quot;http://scikit-learn.org/stable/&quot;><strong>Scikit-learn</strong></a>. I suggest to install the <strong><a href=&quot;https://www.continuum.io/downloads&quot;>Anaconda</a></strong> distribution which already has installed some commonly used packages for <strong>data science</strong> and <strong>machine learning</strong>.</p> <p>Once you have all these things installed and running, you are set to go.</p> <h2>The dataset</h2> <p>I am going to use the <a href=&quot;http://scikit-learn.org/stable/datasets/olivetti_faces.html&quot;>Olivetti faces dataset</a><sup>1</sup>. This dataset is a collection of 64x64 pixel 0-256 greyscale images.</p> <p>The dataset contains a total of 400 images of 40 subjects. With just 10 samples for each subject it is usually used for <strong>unsupervised </strong>or <strong>semi-supervised</strong> algorithms, but I’m going to try my best with the selected <strong>supervised </strong>method.</p> <p>First of all, you need to scale the images in the 0-1 range. This is automatically done by the function we are going to use to download the dataset, so you do not need to worry about it that much, just be aware that it has already been done for you. Should you use your own images be sure to <strong>scale</strong> them down in the 0-1 range (or –1,1 range, although the first seems work better with neural networks in my experience). This below is the Python script you need to run in order to download the dataset. Just change the paths to your selected paths and then run it either from your IDE or the terminal.</p><p>What this piece of code does is basically download the data, reshape the X datapoints (the images) and then save the numpy arrays to a .csv file.</p> <p>As you can see, the x array is a tensor (tensor is a fancy name for a multidimensional matrix) of shape (400, 64, 64): this means that the x array contains 400 samples of 64x64 matrices (read images). When in doubt about these things, just print out the first elements of the tensor and try to figure out the structure of the data with what you know. For instance, we know from the dataset description that we have 400 samples and that each image is 64x64 pixel. We flatten the x tensor into a matrix of shape&nbsp; 400x4096. That is, each 64x64 matrix (image) is now converted (flattened) to a row vector of length 4096.</p> <p>As for y, y is already a simple column vector of size 400. No need to reshape it.</p> <p>Take a look at the generated .csv and check that everything makes sense to you.</p> <h2>Some more preprocessing with R</h2> <p>Now we are going to use <strong>EBImage</strong> to resize each image to 28x28 pixel and generate the training and testing datasets. You may ask why I am resizing the images, well, for some reason my machine does not like 64x64 pixel images and my PC crash whenever I run the model with the data. Not good. But that’s ok since we can get good results with smaller images too (you can try running the model with the 64x64 size images if your PC does not crash though). Let’s go on now:</p><p>This part of the tutorial should be pretty self explanatory, if you are not sure on what is the output, I suggest taking a look at the <strong>rs_df </strong>dataframe. It should be a 400x785 dataframe as follows:</p> <p>label, pixel1, pixel2, … , pixel784<br>0, 0.2, 0.3, … ,0.1</p> <h2>Building the model</h2> <p>Now for the fun part, let’s build the model. Below you can find the script I used to train and test the model. After the script you can find my comments and explanations on the code.</p><p>After having loaded the training and testing dataset, I convert each dataframe to a numeric matrix using the <em>data.matrix</em> function. Remember that the first column of the data represents the labels associated with each image. Be sure to remove the labels from <em>train_array</em> and <em>test_array</em>. Then, after having separated the predictors from the labels, you need to tell MXNet the shape of the data. This is what I did at line 19 with the following piece of code “dim(train_array) &amp;lt;- c(28, 28, 1, ncol(train_x))” for the training array and at line 24 for the test arrray. By doing this, we are essentially telling the model that the training data is made of ncol(train_x) samples (360 images) of shape 28x28. The number 1 signals that the images are greyscale, ie they have only 1 channel. If the images were RGB then the 1 should have been replaced by a 3 since in that case each image would have 3 channels.</p> <p>As far as the model structure is concerned, this is a&nbsp; variation of the LeNet model using hyperbolic tangent instead of “Relu” as activation function, 2 convolutional layers, 2 pooling layers, 2 fully connected layer, and a typical softmax output.</p> <p>Each <strong>convolutional layer</strong> is using a 5x5 kernel and applying a fixed number of filters, check <a href=&quot;https://www.youtube.com/watch?v=BFdMrDOx_CM&quot;>this awesome video</a> for some qualitative insight into convolutional layers. The <strong>pooling layers</strong> apply a classical “max pooling” approach.</p> <p>During my tests <strong>tanh</strong> seemd to work far better than sigmoid and Relu but you can try and use the other activation functions if you want.</p> <p>As for the model <strong>hyperparameters</strong>, the learning rate is a little higher than usual but it turns out that it works fine, while the selected number of epochs is 480. Batch size of 40 seems to work fine. These hyperparameters were found out from many trials and error. As far as I know I could have performed a grid search at best, but I did not want to over complicate the code and therefore I just used the classical trial and error approach.</p> <p>At the end you should get 0.975 accuracy.</p> <h2>Conclusions</h2> <p>All in all, this model was fairly easy to set up and run. When running on CPU it takes about 4-5 minutes to train which is a bit long if you want to make some experiments but it is reasonable to work with.</p> <p>Considering the fact that we did not do any feature engineering and just made some simple and ordinary preprocessing steps, I believe the result achieved is quite good. Of course, in case we would like to get a better grasp on the “true” accuracy,&nbsp; we would need to perform some cross validation procedures (that will inevitably eat up a lot of computing time <img class=&quot;wlEmoticon wlEmoticon-smile&quot; alt=&quot;Smile&quot; src=&quot;https://lh3.googleusercontent.com/-C9fbfj6H5TI/V6UHWH3E9lI/AAAAAAAABtM/_q1i38Kt3Ps/wlEmoticon-smile%25255B2%25255D.png?imgmax=800&quot;>). </p> <p>Thank you for reading this far, I hope this tutorial helped you understanding how to set up and run this particular model. </p> <p> </p><hr> Dataset source and credits: <p><sup>1</sup>Olivetti faces dataset was made by AT&amp;amp;T Laboratories Cambridge.</p>"> 
  <meta name="twitter:site" content="@Rbloggers"> 
  <!-- Twitter Card generated by MashShare 3.4.2 - https://www.mashshare.net --> 
  <!-- All in One SEO Pack 2.3.13.2 by Michael Torbert of Semper Fi Web Design[372,482] --> 
  <meta name="description" content="This is a detailed tutorial on image recognition in R using a deep convolutional neural network provided by the MXNet package. After a short post I wrote some"> 
  <link rel="canonical" href="https://www.r-bloggers.com/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package/"> 
  <!-- /all in one seo pack --> 
  <link rel="dns-prefetch" href="//s0.wp.com"> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.r-bloggers.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.6.1"}};
			!function(a,b,c){function d(a){var c,d,e,f,g,h=b.createElement("canvas"),i=h.getContext&&h.getContext("2d"),j=String.fromCharCode;if(!i||!i.fillText)return!1;switch(i.textBaseline="top",i.font="600 32px Arial",a){case"flag":return i.fillText(j(55356,56806,55356,56826),0,0),!(h.toDataURL().length<3e3)&&(i.clearRect(0,0,h.width,h.height),i.fillText(j(55356,57331,65039,8205,55356,57096),0,0),c=h.toDataURL(),i.clearRect(0,0,h.width,h.height),i.fillText(j(55356,57331,55356,57096),0,0),d=h.toDataURL(),c!==d);case"diversity":return i.fillText(j(55356,57221),0,0),e=i.getImageData(16,16,1,1).data,f=e[0]+","+e[1]+","+e[2]+","+e[3],i.fillText(j(55356,57221,55356,57343),0,0),e=i.getImageData(16,16,1,1).data,g=e[0]+","+e[1]+","+e[2]+","+e[3],f!==g;case"simple":return i.fillText(j(55357,56835),0,0),0!==i.getImageData(16,16,1,1).data[0];case"unicode8":return i.fillText(j(55356,57135),0,0),0!==i.getImageData(16,16,1,1).data[0];case"unicode9":return i.fillText(j(55358,56631),0,0),0!==i.getImageData(16,16,1,1).data[0]}return!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i;for(i=Array("simple","flag","unicode8","diversity","unicode9"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="snp_styles_reset-css" href="https://www.r-bloggers.com/wp-content/plugins/arscode-ninja-popups/themes/reset.min.css?ver=4.6.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="fancybox2-css" href="https://www.r-bloggers.com/wp-content/plugins/arscode-ninja-popups/fancybox2/jquery.fancybox.min.css?ver=4.6.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="snp_styles_theme6-css" href="https://www.r-bloggers.com/wp-content/plugins/arscode-ninja-popups/themes/theme6/css/theme6.css?ver=4.6.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="mashsb-styles-css" href="https://www.r-bloggers.com/wp-content/plugins/mashsharer/assets/css/mashsb.min.css?ver=3.4.2" type="text/css" media="all"> 
  <style id="mashsb-styles-inline-css" type="text/css">
.mashsb-count {color:#cccccc;}@media only screen and (min-width:568px){.mashsb-buttons a {min-width: 177px;}}
</style> 
  <link rel="stylesheet" id="wpt-twitter-feed-css" href="https://www.r-bloggers.com/wp-content/plugins/wp-to-twitter/css/twitter-feed.css?ver=4.6.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="jetpack_css-css" href="https://www.r-bloggers.com/wp-content/plugins/jetpack/css/jetpack.css?ver=4.7.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="codebox-css" href="https://www.r-bloggers.com/wp-content/plugins/wp-codebox/css/codebox.css?ver=0.1" type="text/css" media="screen"> 
  <!-- This site uses the Google Analytics by MonsterInsights plugin v6.2.0 - Using Analytics tracking - https://www.monsterinsights.com/ --> 
  <script type="text/javascript" data-cfasync="false">
	/* Function to detect opted out users */
	function __gaTrackerIsOptedOut() {
		return document.cookie.indexOf(disableStr + '=true') > -1;
	}

	/* Disable tracking if the opt-out cookie exists. */
	var disableStr = 'ga-disable-UA-419807-53';
	if ( __gaTrackerIsOptedOut() ) {
		window[disableStr] = true;
	}

	/* Opt-out function */
	function __gaTrackerOptout() {
	  document.cookie = disableStr + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';
	  window[disableStr] = true;
	}

	(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	})(window,document,'script','//www.google-analytics.com/analytics.js','__gaTracker');

	__gaTracker('create', 'UA-419807-53', 'auto');
	__gaTracker('set', 'forceSSL', true);
	__gaTracker('send','pageview');
</script> 
  <!-- / Google Analytics by MonsterInsights --> 
  <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script> 
  <script type="text/javascript">try{jQuery.noConflict();}catch(e){};</script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var related_posts_js_options = {"post_heading":"h4"};
/* ]]> */
</script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/jetpack/modules/related-posts/related-posts.js?ver=20150408"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var monsterinsights_frontend = {"js_events_tracking":"true","is_debug_mode":"false","download_extensions":"doc,exe,js,pdf,ppt,tgz,zip,xls","inbound_paths":"","home_url":"https:\/\/www.r-bloggers.com","track_download_as":"event","internal_label":"int","hash_tracking":"false"};
/* ]]> */
</script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/google-analytics-for-wordpress/assets/js/frontend.min.js?ver=6.2.0"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var mashsb = {"shares":"230","round_shares":"1","animate_shares":"0","dynamic_buttons":"0","share_url":"https:\/\/www.r-bloggers.com\/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package\/","title":"Image+recognition+tutorial+in+R+using+deep+convolutional+neural+networks+%28MXNet+package%29","image":null,"desc":"<p>This is a detailed tutorial on image recognition in R using a deep convolutional neural network provided by the <strong><a href=\"https:\/\/github.com\/dmlc\/mxnet\">MXNet package<\/a><\/strong>. After a <a href=\"http:\/\/firsttimeprogrammer.blogspot.com\/2016\/07\/image-recognition-in-r-using.html\">short post<\/a> I wrote some times ago I received a lot of requests and emails for a much more detailed explanation, therefore I decided to write this tutorial. This post will show a reproducible example on how to get 97.5% accuracy score on a faces recognition task in R. <\/p> <p><a href=\"https:\/\/lh3.googleusercontent.com\/-nEI6wVVWB2Q\/V6UHVnx2WTI\/AAAAAAAABtE\/eLuJS_qyDC0\/s1600-h\/my_convolutional_neural_network%25255B6%25255D.jpg\"><img title=\"my_convolutional_neural_network\" border=\"0\" alt=\"my_convolutional_neural_network\" src=\"https:\/\/lh3.googleusercontent.com\/-h55l2vVX1_E\/V6UHV_zxf_I\/AAAAAAAABtI\/jif5V_AL_wE\/my_convolutional_neural_network_thumb%25255B3%25255D.jpg?imgmax=800\" width=\"534\" height=\"153\"><\/a><\/p> <h2><\/h2> <a name=\"more\"><\/a> <h2><br>Premises<\/h2> <p>I feel some premises are necessary. I\u2019m writing this <strong>tutorial<\/strong> with two main objectives.<br>The first one is to provide a fully reproducible example to everyone; the second objective is to provide a, hopefully, clear explanation to the most frequent questions I received via email on <a href=\"http:\/\/firsttimeprogrammer.blogspot.com\/2016\/07\/image-recognition-in-r-using.html\">the old post<\/a>. Please be aware that this is just how I decided to tackle this particular problem, this is certainly not the only way to solve it, and most certainly it is not the best. If you have any suggestion to improve the model or the process, or should you spot any mistake, please do leave a comment.<\/p> <h2>Requirements<\/h2> <p>I\u2019m going to use both <strong>Python 3.x<\/strong> (for getting the data and some preprocessing) and <strong>R<\/strong> (for the core of the tutorial), so make sure to have both installed. The package requirements for R are the following:<\/p> <ol><li><a href=\"https:\/\/github.com\/dmlc\/mxnet\/blob\/master\/docs\/how_to\/build.md\">MXNet<\/a>. This package will provide you with the model we are going to be using in this tutorial, namely a deep convolutional neural network. You don\u2019t need the GPU version, CPU will suffice for this task although it could be slower. If you feel like it, then go for the GPU version.  <\/li><li><a href=\"https:\/\/bioconductor.org\/packages\/release\/bioc\/html\/EBImage.html\">EBImage<\/a>. This package provides a wide variety of tools to work with images. It is a pleasure to work on images using this package, the documentation is crystal clear and pretty straightforward.<\/li><\/ol><p>As for Python 3.x please make sure to install both<strong> <\/strong><a href=\"http:\/\/www.numpy.org\/\"><strong>Numpy<\/strong><\/a> and<strong> <\/strong><a href=\"http:\/\/scikit-learn.org\/stable\/\"><strong>Scikit-learn<\/strong><\/a>. I suggest to install the <strong><a href=\"https:\/\/www.continuum.io\/downloads\">Anaconda<\/a><\/strong> distribution which already has installed some commonly used packages for <strong>data science<\/strong> and <strong>machine learning<\/strong>.<\/p> <p>Once you have all these things installed and running, you are set to go.<\/p> <h2>The dataset<\/h2> <p>I am going to use the <a href=\"http:\/\/scikit-learn.org\/stable\/datasets\/olivetti_faces.html\">Olivetti faces dataset<\/a><sup>1<\/sup>. This dataset is a collection of 64x64 pixel 0-256 greyscale images.<\/p> <p>The dataset contains a total of 400 images of 40 subjects. With just 10 samples for each subject it is usually used for <strong>unsupervised <\/strong>or <strong>semi-supervised<\/strong> algorithms, but I\u2019m going to try my best with the selected <strong>supervised <\/strong>method.<\/p> <p>First of all, you need to scale the images in the 0-1 range. This is automatically done by the function we are going to use to download the dataset, so you do not need to worry about it that much, just be aware that it has already been done for you. Should you use your own images be sure to <strong>scale<\/strong> them down in the 0-1 range (or \u20131,1 range, although the first seems work better with neural networks in my experience). This below is the Python script you need to run in order to download the dataset. Just change the paths to your selected paths and then run it either from your IDE or the terminal.<\/p><p>What this piece of code does is basically download the data, reshape the X datapoints (the images) and then save the numpy arrays to a .csv file.<\/p> <p>As you can see, the x array is a tensor (tensor is a fancy name for a multidimensional matrix) of shape (400, 64, 64): this means that the x array contains 400 samples of 64x64 matrices (read images). When in doubt about these things, just print out the first elements of the tensor and try to figure out the structure of the data with what you know. For instance, we know from the dataset description that we have 400 samples and that each image is 64x64 pixel. We flatten the x tensor into a matrix of shape\u00a0 400x4096. That is, each 64x64 matrix (image) is now converted (flattened) to a row vector of length 4096.<\/p> <p>As for y, y is already a simple column vector of size 400. No need to reshape it.<\/p> <p>Take a look at the generated .csv and check that everything makes sense to you.<\/p> <h2>Some more preprocessing with R<\/h2> <p>Now we are going to use <strong>EBImage<\/strong> to resize each image to 28x28 pixel and generate the training and testing datasets. You may ask why I am resizing the images, well, for some reason my machine does not like 64x64 pixel images and my PC crash whenever I run the model with the data. Not good. But that\u2019s ok since we can get good results with smaller images too (you can try running the model with the 64x64 size images if your PC does not crash though). Let\u2019s go on now:<\/p><p>This part of the tutorial should be pretty self explanatory, if you are not sure on what is the output, I suggest taking a look at the <strong>rs_df <\/strong>dataframe. It should be a 400x785 dataframe as follows:<\/p> <p>label, pixel1, pixel2, \u2026 , pixel784<br>0, 0.2, 0.3, \u2026 ,0.1<\/p> <h2>Building the model<\/h2> <p>Now for the fun part, let\u2019s build the model. Below you can find the script I used to train and test the model. After the script you can find my comments and explanations on the code.<\/p><p>After having loaded the training and testing dataset, I convert each dataframe to a numeric matrix using the <em>data.matrix<\/em> function. Remember that the first column of the data represents the labels associated with each image. Be sure to remove the labels from <em>train_array<\/em> and <em>test_array<\/em>. Then, after having separated the predictors from the labels, you need to tell MXNet the shape of the data. This is what I did at line 19 with the following piece of code \u201cdim(train_array) <- c(28, 28, 1, ncol(train_x))\u201d for the training array and at line 24 for the test arrray. By doing this, we are essentially telling the model that the training data is made of ncol(train_x) samples (360 images) of shape 28x28. The number 1 signals that the images are greyscale, ie they have only 1 channel. If the images were RGB then the 1 should have been replaced by a 3 since in that case each image would have 3 channels.<\/p> <p>As far as the model structure is concerned, this is a\u00a0 variation of the LeNet model using hyperbolic tangent instead of \u201cRelu\u201d as activation function, 2 convolutional layers, 2 pooling layers, 2 fully connected layer, and a typical softmax output.<\/p> <p>Each <strong>convolutional layer<\/strong> is using a 5x5 kernel and applying a fixed number of filters, check <a href=\"https:\/\/www.youtube.com\/watch?v=BFdMrDOx_CM\">this awesome video<\/a> for some qualitative insight into convolutional layers. The <strong>pooling layers<\/strong> apply a classical \u201cmax pooling\u201d approach.<\/p> <p>During my tests <strong>tanh<\/strong> seemd to work far better than sigmoid and Relu but you can try and use the other activation functions if you want.<\/p> <p>As for the model <strong>hyperparameters<\/strong>, the learning rate is a little higher than usual but it turns out that it works fine, while the selected number of epochs is 480. Batch size of 40 seems to work fine. These hyperparameters were found out from many trials and error. As far as I know I could have performed a grid search at best, but I did not want to over complicate the code and therefore I just used the classical trial and error approach.<\/p> <p>At the end you should get 0.975 accuracy.<\/p> <h2>Conclusions<\/h2> <p>All in all, this model was fairly easy to set up and run. When running on CPU it takes about 4-5 minutes to train which is a bit long if you want to make some experiments but it is reasonable to work with.<\/p> <p>Considering the fact that we did not do any feature engineering and just made some simple and ordinary preprocessing steps, I believe the result achieved is quite good. Of course, in case we would like to get a better grasp on the \u201ctrue\u201d accuracy,\u00a0 we would need to perform some cross validation procedures (that will inevitably eat up a lot of computing time <img class=\"wlEmoticon wlEmoticon-smile\" alt=\"Smile\" src=\"https:\/\/lh3.googleusercontent.com\/-C9fbfj6H5TI\/V6UHWH3E9lI\/AAAAAAAABtM\/_q1i38Kt3Ps\/wlEmoticon-smile%25255B2%25255D.png?imgmax=800\">). <\/p> <p>Thank you for reading this far, I hope this tutorial helped you understanding how to set up and run this particular model. <\/p> <p> <\/p><hr> Dataset source and credits: <p><sup>1<\/sup>Olivetti faces dataset was made by AT&T Laboratories Cambridge.<\/p>","hashtag":"Rbloggers","subscribe":"link","subscribe_url":"https:\/\/feedburner.google.com\/fb\/a\/mailverify?uri=RBloggers","activestatus":"1","singular":"1","twitter_popup":"1","refresh":"1"};
/* ]]> */
</script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/mashsharer/assets/js/mashsb.min.js?ver=3.4.2"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/wp-codebox/js/codebox.js?ver=0.1"></script> 
  <link rel="https://api.w.org/" href="https://www.r-bloggers.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.r-bloggers.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.r-bloggers.com/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Higher Order Functions Exercises" href="https://www.r-bloggers.com/higher-order-functions-exercises/"> 
  <link rel="next" title="Creating Annotated Data Frames from GEO with the GEOquery package" href="https://www.r-bloggers.com/creating-annotated-data-frames-from-geo-with-the-geoquery-package/"> 
  <meta name="generator" content="WordPress 4.6.1"> 
  <link rel="shortlink" href="https://wp.me/pMm6L-zLj"> 
  <link rel="alternate" type="application/json+oembed" href="https://www.r-bloggers.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.r-bloggers.com%2Fimage-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="https://www.r-bloggers.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.r-bloggers.com%2Fimage-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package%2F&amp;format=xml"> 
  <!-- This site is powered by Tweet, Like, Plusone and Share Plugin - http://techxt.com/tweet-like-google-1-and-share-plugin-wordpress/ --> 
  <style type="text/css">div.socialicons{float:left;display:block;margin-right: 10px;line-height: 1;}div.socialiconsv{line-height: 1;}div.socialicons p{margin-bottom: 0px !important;margin-top: 0px !important;padding-bottom: 0px !important;padding-top: 0px !important;}div.social4iv{background: none repeat scroll 0 0 #FFFFFF;border: 1px solid #aaa;border-radius: 3px 3px 3px 3px;box-shadow: 3px 3px 3px #DDDDDD;padding: 3px;position: fixed;text-align: center;top: 55px;width: 68px;display:none;}div.socialiconsv{padding-bottom: 5px;}</style> 
  <link rel="dns-prefetch" href="//i0.wp.com"> 
  <link rel="dns-prefetch" href="//i1.wp.com"> 
  <link rel="dns-prefetch" href="//i2.wp.com"> 
  <style type="text/css">img#wpstats{display:none}</style>
  <link rel="amphtml" href="https://www.r-bloggers.com/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package/amp/">
  <style type="text/css" id="syntaxhighlighteranchor"></style> 
  <!-- WordPress Facebook Open Graph protocol plugin (WPFBOGP v2.0.13) http://rynoweb.com/wordpress-plugins/ --> 
  <meta property="fb:app_id" content="143207055763488"> 
  <meta property="og:image" content="https://www.r-bloggers.com/wp-content/uploads/2016/08/R_single_01-200-1.png"> 
  <meta property="og:image" content="https://lh3.googleusercontent.com/-C9fbfj6H5TI/V6UHWH3E9lI/AAAAAAAABtM/_q1i38Kt3Ps/wlEmoticon-smile%25255B2%25255D.png?imgmax=800"> 
  <!-- // end wpfbogp --> 
  <link rel="icon" href="https://i2.wp.com/www.r-bloggers.com/wp-content/uploads/2016/08/cropped-R_single_01-200.png?fit=32%2C32&amp;ssl=1" sizes="32x32"> 
  <link rel="icon" href="https://i2.wp.com/www.r-bloggers.com/wp-content/uploads/2016/08/cropped-R_single_01-200.png?fit=192%2C192&amp;ssl=1" sizes="192x192"> 
  <link rel="apple-touch-icon-precomposed" href="https://i2.wp.com/www.r-bloggers.com/wp-content/uploads/2016/08/cropped-R_single_01-200.png?fit=180%2C180&amp;ssl=1"> 
  <meta name="msapplication-TileImage" content="https://i2.wp.com/www.r-bloggers.com/wp-content/uploads/2016/08/cropped-R_single_01-200.png?fit=270%2C270&amp;ssl=1"> 
 </head> 
 <body class="single single-post postid-137473 single-format-standard wpusb-position-fixed-active"> 
  <!-- begin header --> 
  <div id="header"> 
   <a href="https://www.r-bloggers.com/" class="headerimage"><img src="https://www.r-bloggers.com/wp-content/uploads/2016/04/R_02_2016-05-01.png" alt="R-bloggers" class="aligncenter"></a> 
   <div id="description" class="aligncenter">
     R news and tutorials contributed by (750) R bloggers 
   </div> 
   <div class="main-navigation">
    <ul id="menu-top-nav" class="sf-menu">
     <li id="menu-item-48314" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-48314"><a href="https://www.r-bloggers.com">Home</a></li> 
     <li id="menu-item-92333" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-92333"><a href="https://www.r-bloggers.com/about/">About</a></li> 
     <li id="menu-item-50111" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-50111"><a href="https://feeds.feedburner.com/RBloggers">RSS</a></li> 
     <li id="menu-item-48313" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-48313"><a href="https://www.r-bloggers.com/add-your-blog/">add your blog!</a></li> 
     <li id="menu-item-111419" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-111419"><a href="https://www.r-bloggers.com/how-to-learn-r-2/">Learn R</a></li> 
     <li id="menu-item-75513" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-75513"><a href="https://www.r-users.com/">R jobs</a> 
      <ul class="sub-menu"> 
       <li id="menu-item-76945" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-76945"><a href="https://www.r-users.com/submit-job/">Submit a new job (it’s free)</a></li> 
       <li id="menu-item-76946" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-76946"><a href="https://www.r-users.com/">Browse latest jobs (also free)</a></li> 
      </ul> </li> 
     <li id="menu-item-48311" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-48311"><a href="https://www.r-bloggers.com/contact-us/">Contact us</a></li> 
    </ul>
   </div> 
  </div> 
  <!-- end header --> 
  <div id="mainwrapper"> 
   <!-- begin sidebar --> 
   <div id="sidebar"> 
    <div class="side-widget">
     <h2>Welcome!</h2> 
     <div class="textwidget">
      <iframe allowtransparency="true" frameborder="0" scrolling="no" src="//platform.twitter.com/widgets/follow_button.html?screen_name=rbloggers&amp;data-show-count" style="width:164px; height:30px;"></iframe> Here you will find daily 
      <strong>news and tutorials about R</strong>, contributed by over 750 bloggers. 
      <br> There are many ways to 
      <strong>follow us - </strong> 
      <br> 
      <a href="https://feedburner.google.com/fb/a/mailverify?uri=RBloggers">By e-mail:</a> 
      <form style="border:1px solid #ccc;padding:3px;text-align:center; background: none repeat scroll 0 0 #FDEADA;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open('https://feedburner.google.com/fb/a/mailverify?uri=RBloggers', 'popupwindow', 'scrollbars=yes,width=550,height=520');return true"> 
       <input type="text" style="width:110px" onclick="if (this.value == 'Your e-mail here') this.value = '';" value="Your e-mail here" name="email"> 
       <input type="hidden" value="RBloggers" name="uri">
       <input type="hidden" name="loc" value="en_US">
       <input type="submit" value="Subscribe"> 
       <a href="https://feeds.feedburner.com/RBloggers"><img src="https://feeds.feedburner.com/~fc/RBloggers?bg=99CCFF&amp;fg=444444&amp;anim=0" height="26" width="88" style="border:0" alt=""></a> 
      </form> 
      <a href="https://www.facebook.com/rbloggers">On Facebook:</a> 
      <iframe src="//www.facebook.com/plugins/likebox.php?href=http%3A%2F%2Fwww.facebook.com%2Fpages%2FR-bloggers%2F191414254890&amp;width=160&amp;height=298&amp;show_faces=true&amp;colorscheme=light&amp;stream=false&amp;border_color&amp;header=false&amp;appId=400430016676958" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:160px; height:238px;" allowtransparency="true"></iframe> 
      <br> 
      <strong>If you are an R blogger yourself</strong> you are invited to 
      <a href="https://www.r-bloggers.com/add-your-blog/">add your own R content feed to this site</a> (
      <strong>Non-English</strong> R bloggers should add themselves- 
      <a href="https://www.r-bloggers.com/lang/add-your-blog">here</a>)
     </div> 
    </div>
    <div class="side-widget">
     <h2><a class="rsswidget" href="https://feeds.feedburner.com/Rjobs"><img class="rss-widget-icon" style="border:0" width="14" height="14" src="https://www.r-bloggers.com/wp-includes/images/rss.png" alt="RSS"></a> <a class="rsswidget" href="https://www.r-users.com/">Jobs for R-users</a></h2>
     <ul>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/IMLTOhbchHg/">Data Scientist @ Garching bei München, Bayern, Germany</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/4pvT8nJpoMg/">Software Developer</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/O2Cg4km53EQ/">Senior Quantitative Analyst, Data Scientist</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/vR1NRfEDFyE/">R data wrangler</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/o12HBENqXeY/">Senior Data Scientist</a></li>
     </ul>
    </div>
    <div class="side-widget">
     <form method="get" id="searchform" action="https://www.r-bloggers.com/"> 
      <div> 
       <input type="text" class="search_input" value="Search &amp; Hit Enter" name="s" id="s" onfocus="if (this.value == 'Search &amp; Hit Enter') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search &amp; Hit Enter';}"> 
       <input type="hidden" id="searchsubmit"> 
      </div> 
     </form>
    </div>
    <div class="side-widget">
     <h2>Popular Searches</h2> 
     <ul> 
      <li><a href="https://www.r-bloggers.com/search/googlevis">googlevis</a></li> 
      <li><a href="https://www.r-bloggers.com/search/heatmap">heatmap</a></li> 
      <li><a href="https://www.r-bloggers.com/search/twitter">twitter</a></li> 
      <li><a href="https://www.r-bloggers.com/search/latex">latex</a></li> 
      <li><a href="https://www.r-bloggers.com/search/sales%20forecasting">sales forecasting</a></li> 
      <li><a href="https://www.r-bloggers.com/search/sql">sql</a></li> 
      <li><a href="https://www.r-bloggers.com/search/web%20Scraping">web Scraping</a></li> 
      <li><a href="https://www.r-bloggers.com/search/eof">eof</a></li> 
      <li><a href="https://www.r-bloggers.com/search/hadoop">hadoop</a></li> 
      <li><a href="https://www.r-bloggers.com/search/Jeff%20Hemsley">Jeff Hemsley</a></li> 
      <li><a href="https://www.r-bloggers.com/search/random%20forest">random forest</a></li> 
      <li><a href="https://www.r-bloggers.com/search/3%20d%20clusters">3 d clusters</a></li> 
      <li><a href="https://www.r-bloggers.com/search/anova">anova</a></li> 
      <li><a href="https://www.r-bloggers.com/search/blotter">blotter</a></li> 
      <li><a href="https://www.r-bloggers.com/search/boxplot">boxplot</a></li> 
      <li><a href="https://www.r-bloggers.com/search/coplot">coplot</a></li> 
      <li><a href="https://www.r-bloggers.com/search/decision%20tree">decision tree</a></li> 
      <li><a href="https://www.r-bloggers.com/search/discriminant">discriminant</a></li> 
      <li><a href="https://www.r-bloggers.com/search/financial">financial</a></li> 
      <li><a href="https://www.r-bloggers.com/search/ggplot%20background%20grid%20colour">ggplot background grid colour</a></li> 
      <li><a href="https://www.r-bloggers.com/search/how%20to%20import%20image%20file%20to%20r">how to import image file to r</a></li> 
      <li><a href="https://www.r-bloggers.com/search/maps">maps</a></li> 
      <li><a href="https://www.r-bloggers.com/search/purrr">purrr</a></li> 
      <li><a href="https://www.r-bloggers.com/search/rattle">rattle</a></li> 
      <li><a href="https://www.r-bloggers.com/search/Trading">Trading</a></li> 
      <li><a href="https://www.r-bloggers.com/search/bar%20chart">bar chart</a></li> 
      <li><a href="https://www.r-bloggers.com/search/barplot">barplot</a></li> 
      <li><a href="https://www.r-bloggers.com/search/Binary">Binary</a></li> 
      <li><a href="https://www.r-bloggers.com/search/climate">climate</a></li> 
      <li><a href="https://www.r-bloggers.com/search/contingency%20table%20data%20frame">contingency table data frame</a></li> 
     </ul> 
    </div> 
    <div class="side-widget"> 
     <h2>Recent Posts</h2> 
     <ul> 
      <li> <a href="https://www.r-bloggers.com/r-interface-to-spark/">R Interface to Spark</a> </li> 
      <li> <a href="https://www.r-bloggers.com/data-science-for-business-time-series-forecasting-part-2-forecasting-with-timekit/">Data Science for Business – Time Series Forecasting Part 2: Forecasting with timekit</a> </li> 
      <li> <a href="https://www.r-bloggers.com/run-massive-parallel-r-jobs-cheaply-with-updated-doazureparallel-package/">Run massive parallel R jobs cheaply with updated doAzureParallel package</a> </li> 
      <li> <a href="https://www.r-bloggers.com/introduction-to-set-theory-and-sets-with-r/">Introduction to Set Theory and Sets with R</a> </li> 
      <li> <a href="https://www.r-bloggers.com/campaign-response-testing-no-longer-published-on-udemy/">Campaign Response Testing no longer published on Udemy</a> </li> 
      <li> <a href="https://www.r-bloggers.com/neural-networks-exercises-part-1/">Neural networks Exercises (Part-1)</a> </li> 
      <li> <a href="https://www.r-bloggers.com/introducing-the-montecarlo-package/">Introducing the MonteCarlo Package</a> </li> 
      <li> <a href="https://www.r-bloggers.com/words-growing-or-shrinking-in-hacker-news-titles-a-tidy-analysis/">Words growing or shrinking in Hacker News titles: a tidy analysis</a> </li> 
      <li> <a href="https://www.r-bloggers.com/test-driving-microsoft-cognitive-toolkit-in-r-using-reticulate/">Test-driving Microsoft Cognitive Toolkit in R using reticulate</a> </li> 
      <li> <a href="https://www.r-bloggers.com/deep-learning-with-r/">Deep Learning with R</a> </li> 
      <li> <a href="https://www.r-bloggers.com/add-p-values-and-significance-levels-to-ggplots/">Add P-values and Significance Levels to ggplots</a> </li> 
      <li> <a href="https://www.r-bloggers.com/uk-r-courses/">UK R Courses</a> </li> 
      <li> <a href="https://www.r-bloggers.com/unconf-projects-4-cityquant-notary-packagemetrics-pegax/">Unconf projects 4: cityquant, notary, packagemetrics, pegax</a> </li> 
      <li> <a href="https://www.r-bloggers.com/tic-tac-toe-part-3-the-minimax-algorithm/">Tic Tac Toe Part 3: The Minimax Algorithm</a> </li> 
      <li> <a href="https://www.r-bloggers.com/what-is-the-tidyverse/">What is the tidyverse?</a> </li> 
     </ul> 
    </div> 
    <div class="side-widget">
     <h2>Other sites</h2> 
     <ul class="xoxo blogroll"> 
      <li><a href="http://www.proc-x.com/" title="SAS news gathered from bloggers">SAS blogs</a></li> 
      <li><a href="https://www.r-users.com/">Jobs for R-users</a></li> 
     </ul> 
    </div> 
   </div> 
   <!-- end sidebar --> 
   <div id="leftcontent"> 
    <div id="post-137473" class="post-137473 post type-post status-publish format-standard hentry category-r-bloggers"> 
     <h1>Image recognition tutorial in R using deep convolutional neural networks (MXNet package)</h1> 
     <div class="meta">
      <div class="date">
       August 5, 2016
      </div>By 
      <a href="https://www.r-bloggers.com/author/mic/" title="Posts by Mic" rel="author">Mic</a>
     </div>
     <div class="entry">
      <p class="syndicated-attribution"></p>
      <div class="social4i" style="height:29px;">
       <div class="social4in" style="height:29px;float: left;">
        <div class="socialicons s4fblike" style="float:left;margin-right: 10px;">
         <div class="fb-like" data-href="https://www.r-bloggers.com/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package/" data-send="true" data-layout="button_count" data-width="100" data-height="21" data-show-faces="false"></div>
        </div>
        <div class="socialicons s4linkedin" style="float:left;margin-right: 10px;">
         <script type="in/share" data-url="https://www.r-bloggers.com/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package/" data-counter="right"></script>
        </div>
       </div>
       <div style="clear:both"></div>
      </div> 
      <div style="border: 1px solid; background: none repeat scroll 0 0 #EDEDED; margin: 1px; font-size: 12px;">
        (This article was first published on 
       <strong><a href="http://firsttimeprogrammer.blogspot.com/2016/08/image-recognition-tutorial-in-r-using.html"> The Beginner Programmer</a></strong>, and kindly contributed to 
       <a href="https://www.r-bloggers.com/" rel="nofollow">R-bloggers)</a> 
      </div>
      <p></p> 
      <aside class="mashsb-container mashsb-main mashsb-stretched">
       <div class="mashsb-box">
        <div class="mashsb-count mash-small" style="float:left;">
         <div class="counts mashsbcount">
          230
         </div>
         <span class="mashsb-sharetext">SHARES</span>
        </div>
        <div class="mashsb-buttons">
         <a class="mashicon-facebook mash-small mash-center mashsb-noshadow" href="https://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.r-bloggers.com%2Fimage-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package%2F" target="_blank" rel="nofollow"><span class="icon"></span><span class="text">Share</span></a>
         <a class="mashicon-twitter mash-small mash-center mashsb-noshadow" href="https://twitter.com/intent/tweet?text=Image%20recognition%20tutorial%20in%20R%20using%20deep%20convolutional%20neural%20networks%20%28MXNet%20package%29&amp;url=https://www.r-bloggers.com/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package/&amp;via=Rbloggers" target="_blank" rel="nofollow"><span class="icon"></span><span class="text">Tweet</span></a>
         <div class="onoffswitch2 mash-small mashsb-noshadow" style="display:none;"></div>
        </div> 
       </div> 
       <div style="clear:both;"></div>
      </aside> 
      <!-- Share buttons by mashshare.net - Version: 3.4.2-->
      <p>This is a detailed tutorial on image recognition in R using a deep convolutional neural network provided by the <strong><a href="https://github.com/dmlc/mxnet" rel="nofollow" target="_blank">MXNet package</a></strong>. After a <a href="http://firsttimeprogrammer.blogspot.com/2016/07/image-recognition-in-r-using.html" rel="nofollow" target="_blank">short post</a> I wrote some times ago I received a lot of requests and emails for a much more detailed explanation, therefore I decided to write this tutorial. This post will show a reproducible example on how to get 97.5% accuracy score on a faces recognition task in R. </p> 
      <p><a href="https://i1.wp.com/lh3.googleusercontent.com/-nEI6wVVWB2Q/V6UHVnx2WTI/AAAAAAAABtE/eLuJS_qyDC0/s1600-h/my_convolutional_neural_network%25255B6%25255D.jpg?ssl=1" rel="nofollow" target="_blank"><img src="https://i0.wp.com/www.r-bloggers.com/wp-content/plugins/lazy-load/images/1x1.trans.gif?ssl=1" data-lazy-src="https://i1.wp.com/lh3.googleusercontent.com/-h55l2vVX1_E/V6UHV_zxf_I/AAAAAAAABtI/jif5V_AL_wE/my_convolutional_neural_network_thumb%25255B3%25255D.jpg?w=450&amp;ssl=1" title="my_convolutional_neural_network" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="my_convolutional_neural_network" data-recalc-dims="1">
        <noscript>
         <img title="my_convolutional_neural_network" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="my_convolutional_neural_network" src="https://i1.wp.com/lh3.googleusercontent.com/-h55l2vVX1_E/V6UHV_zxf_I/AAAAAAAABtI/jif5V_AL_wE/my_convolutional_neural_network_thumb%25255B3%25255D.jpg?w=450&amp;ssl=1" data-recalc-dims="1">
        </noscript></a></p> 
      <h2></h2> 
      <p> <a name="more"></a><br> </p>
      <h2>Premises</h2> 
      <p>I feel some premises are necessary. I’m writing this <strong>tutorial</strong> with two main objectives.<br>The first one is to provide a fully reproducible example to everyone; the second objective is to provide a, hopefully, clear explanation to the most frequent questions I received via email on <a href="http://firsttimeprogrammer.blogspot.com/2016/07/image-recognition-in-r-using.html" rel="nofollow" target="_blank">the old post</a>. Please be aware that this is just how I decided to tackle this particular problem, this is certainly not the only way to solve it, and most certainly it is not the best. If you have any suggestion to improve the model or the process, or should you spot any mistake, please do leave a comment.</p> 
      <h2>Requirements</h2> 
      <p>I’m going to use both <strong>Python 3.x</strong> (for getting the data and some preprocessing) and <strong>R</strong> (for the core of the tutorial), so make sure to have both installed. The package requirements for R are the following:</p> 
      <ol> 
       <li><a href="https://github.com/dmlc/mxnet/blob/master/docs/how_to/build.md" rel="nofollow" target="_blank">MXNet</a>. This package will provide you with the model we are going to be using in this tutorial, namely a deep convolutional neural network. You don’t need the GPU version, CPU will suffice for this task although it could be slower. If you feel like it, then go for the GPU version. </li>
       <li><a href="https://bioconductor.org/packages/release/bioc/html/EBImage.html" rel="nofollow" target="_blank">EBImage</a>. This package provides a wide variety of tools to work with images. It is a pleasure to work on images using this package, the documentation is crystal clear and pretty straightforward.</li> 
      </ol> 
      <p>As for Python 3.x please make sure to install both<strong> </strong><a href="http://www.numpy.org/" rel="nofollow" target="_blank"><strong>Numpy</strong></a> and<strong> </strong><a href="http://scikit-learn.org/stable/" rel="nofollow" target="_blank"><strong>Scikit-learn</strong></a>. I suggest to install the <strong><a href="https://www.continuum.io/downloads" rel="nofollow" target="_blank">Anaconda</a></strong> distribution which already has installed some commonly used packages for <strong>data science</strong> and <strong>machine learning</strong>.</p> 
      <p>Once you have all these things installed and running, you are set to go.</p> 
      <h2>The dataset</h2> 
      <p>I am going to use the <a href="http://scikit-learn.org/stable/datasets/olivetti_faces.html" rel="nofollow" target="_blank">Olivetti faces dataset</a><sup>1</sup>. This dataset is a collection of 64×64 pixel 0-256 greyscale images.</p> 
      <p>The dataset contains a total of 400 images of 40 subjects. With just 10 samples for each subject it is usually used for <strong>unsupervised </strong>or <strong>semi-supervised</strong> algorithms, but I’m going to try my best with the selected <strong>supervised </strong>method.</p> 
      <p>First of all, you need to scale the images in the 0-1 range. This is automatically done by the function we are going to use to download the dataset, so you do not need to worry about it that much, just be aware that it has already been done for you. Should you use your own images be sure to <strong>scale</strong> them down in the 0-1 range (or –1,1 range, although the first seems work better with neural networks in my experience). This below is the Python script you need to run in order to download the dataset. Just change the paths to your selected paths and then run it either from your IDE or the terminal.</p> 
      <p><script src="https://gist.github.com/mick001/0782247969b1fa25795b09574d7ecf0a.js"></script> </p>
      <p>What this piece of code does is basically download the data, reshape the X datapoints (the images) and then save the numpy arrays to a .csv file.</p> 
      <p>As you can see, the x array is a tensor (tensor is a fancy name for a multidimensional matrix) of shape (400, 64, 64): this means that the x array contains 400 samples of 64×64 matrices (read images). When in doubt about these things, just print out the first elements of the tensor and try to figure out the structure of the data with what you know. For instance, we know from the dataset description that we have 400 samples and that each image is 64×64 pixel. We flatten the x tensor into a matrix of shape&nbsp; 400×4096. That is, each 64×64 matrix (image) is now converted (flattened) to a row vector of length 4096.</p> 
      <p>As for y, y is already a simple column vector of size 400. No need to reshape it.</p> 
      <p>Take a look at the generated .csv and check that everything makes sense to you.</p> 
      <h2>Some more preprocessing with R</h2> 
      <p>Now we are going to use <strong>EBImage</strong> to resize each image to 28×28 pixel and generate the training and testing datasets. You may ask why I am resizing the images, well, for some reason my machine does not like 64×64 pixel images and my PC crash whenever I run the model with the data. Not good. But that’s ok since we can get good results with smaller images too (you can try running the model with the 64×64 size images if your PC does not crash though). Let’s go on now:</p> 
      <p><script src="https://gist.github.com/mick001/5070816817171f1a1d5880c20c1c93ed.js"></script> </p>
      <p>This part of the tutorial should be pretty self explanatory, if you are not sure on what is the output, I suggest taking a look at the <strong>rs_df </strong>dataframe. It should be a 400×785 dataframe as follows:</p> 
      <p>label, pixel1, pixel2, … , pixel784<br>0, 0.2, 0.3, … ,0.1</p> 
      <h2>Building the model</h2> 
      <p>Now for the fun part, let’s build the model. Below you can find the script I used to train and test the model. After the script you can find my comments and explanations on the code.</p> 
      <p><script src="https://gist.github.com/mick001/a32f2a5540a7dcca880948a939108bcc.js"></script> </p>
      <p>After having loaded the training and testing dataset, I convert each dataframe to a numeric matrix using the <em>data.matrix</em> function. Remember that the first column of the data represents the labels associated with each image. Be sure to remove the labels from <em>train_array</em> and <em>test_array</em>. Then, after having separated the predictors from the labels, you need to tell MXNet the shape of the data. This is what I did at line 19 with the following piece of code “dim(train_array) &lt;- c(28, 28, 1, ncol(train_x))” for the training array and at line 24 for the test arrray. By doing this, we are essentially telling the model that the training data is made of ncol(train_x) samples (360 images) of shape 28×28. The number 1 signals that the images are greyscale, ie they have only 1 channel. If the images were RGB then the 1 should have been replaced by a 3 since in that case each image would have 3 channels.</p> 
      <p>As far as the model structure is concerned, this is a&nbsp; variation of the LeNet model using hyperbolic tangent instead of “Relu” as activation function, 2 convolutional layers, 2 pooling layers, 2 fully connected layer, and a typical softmax output.</p> 
      <p>Each <strong>convolutional layer</strong> is using a 5×5 kernel and applying a fixed number of filters, check <a href="https://www.youtube.com/watch?v=BFdMrDOx_CM" rel="nofollow" target="_blank">this awesome video</a> for some qualitative insight into convolutional layers. The <strong>pooling layers</strong> apply a classical “max pooling” approach.</p> 
      <p>During my tests <strong>tanh</strong> seemd to work far better than sigmoid and Relu but you can try and use the other activation functions if you want.</p> 
      <p>As for the model <strong>hyperparameters</strong>, the learning rate is a little higher than usual but it turns out that it works fine, while the selected number of epochs is 480. Batch size of 40 seems to work fine. These hyperparameters were found out from many trials and error. As far as I know I could have performed a grid search at best, but I did not want to over complicate the code and therefore I just used the classical trial and error approach.</p> 
      <p>At the end you should get 0.975 accuracy.</p> 
      <h2>Conclusions</h2> 
      <p>All in all, this model was fairly easy to set up and run. When running on CPU it takes about 4-5 minutes to train which is a bit long if you want to make some experiments but it is reasonable to work with.</p> 
      <p>Considering the fact that we did not do any feature engineering and just made some simple and ordinary preprocessing steps, I believe the result achieved is quite good. Of course, in case we would like to get a better grasp on the “true” accuracy,&nbsp; we would need to perform some cross validation procedures (that will inevitably eat up a lot of computing time <img src="https://i0.wp.com/www.r-bloggers.com/wp-content/plugins/lazy-load/images/1x1.trans.gif?ssl=1" data-lazy-src="https://i0.wp.com/lh3.googleusercontent.com/-C9fbfj6H5TI/V6UHWH3E9lI/AAAAAAAABtM/_q1i38Kt3Ps/wlEmoticon-smile%25255B2%25255D.png?w=456&amp;ssl=1" class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" data-recalc-dims="1">
       <noscript>
        <img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none" alt="Smile" src="https://i0.wp.com/lh3.googleusercontent.com/-C9fbfj6H5TI/V6UHWH3E9lI/AAAAAAAABtM/_q1i38Kt3Ps/wlEmoticon-smile%25255B2%25255D.png?w=456&amp;ssl=1" data-recalc-dims="1">
       </noscript>). </p> 
      <p>Thank you for reading this far, I hope this tutorial helped you understanding how to set up and run this particular model. </p> 
      <p> </p>
      <hr> Dataset source and credits:
      <p></p> 
      <p><sup>1</sup>Olivetti faces dataset was made by AT&amp;T Laboratories Cambridge.</p> 
      <script type="text/javascript">
		  var vglnk = { key: '949efb41171ac6ec1bf7f206d57e90b8' };

		  (function(d, t) {
			var s = d.createElement(t); s.type = 'text/javascript'; s.async = true;
			s.src = '//cdn.viglink.com/api/vglnk.js';
			var r = d.getElementsByTagName(t)[0]; r.parentNode.insertBefore(s, r);
		  }(document, 'script'));
		</script> 
      <div id="jp-relatedposts" class="jp-relatedposts"> 
       <h3 class="jp-relatedposts-headline"><em>Related</em></h3> 
      </div>
      <aside class="mashsb-container mashsb-main mashsb-stretched">
       <div class="mashsb-box">
        <div class="mashsb-count mash-small" style="float:left;">
         <div class="counts mashsbcount">
          230
         </div>
         <span class="mashsb-sharetext">SHARES</span>
        </div>
        <div class="mashsb-buttons">
         <a class="mashicon-facebook mash-small mash-center mashsb-noshadow" href="https://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.r-bloggers.com%2Fimage-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package%2F" target="_blank" rel="nofollow"><span class="icon"></span><span class="text">Share</span></a>
         <a class="mashicon-twitter mash-small mash-center mashsb-noshadow" href="https://twitter.com/intent/tweet?text=Image%20recognition%20tutorial%20in%20R%20using%20deep%20convolutional%20neural%20networks%20%28MXNet%20package%29&amp;url=https://www.r-bloggers.com/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package/&amp;via=Rbloggers" target="_blank" rel="nofollow"><span class="icon"></span><span class="text">Tweet</span></a>
         <div class="onoffswitch2 mash-small mashsb-noshadow" style="display:none;"></div>
        </div> 
       </div> 
       <div style="clear:both;"></div>
      </aside> 
      <!-- Share buttons by mashshare.net - Version: 3.4.2--> 
      <p class="syndicated-attribution"> </p>
      <div style="border: 1px solid; background: none repeat scroll 0 0 #EDEDED; margin: 1px; font-size: 13px;"> 
       <div style="text-align: center;">
        To 
        <strong>leave a comment</strong> for the author, please follow the link and comment on their blog: 
        <strong><a href="http://firsttimeprogrammer.blogspot.com/2016/08/image-recognition-tutorial-in-r-using.html"> The Beginner Programmer</a></strong>.
       </div> 
       <hr> 
       <a href="https://www.r-bloggers.com/" rel="nofollow">R-bloggers.com</a> offers 
       <strong><a href="https://feedburner.google.com/fb/a/mailverify?uri=RBloggers" rel="nofollow">daily e-mail updates</a></strong> about 
       <a title="The R Project for Statistical Computing" href="https://www.r-project.org/" rel="nofollow">R</a> news and 
       <a title="R tutorials" href="https://www.r-bloggers.com/search/tutorial" rel="nofollow">tutorials</a> on topics such as: 
       <a title="Data science" href="https://www.r-bloggers.com/search/data%20science" rel="nofollow">Data science</a>, 
       <a title="Big Data" href="https://www.r-bloggers.com/search/Big%20Data" rel="nofollow">Big Data, </a>
       <a title="R jobs" href="https://www.r-users.com/" rel="nofollow">R jobs</a>, visualization (
       <a title="ggplot and ggplot2 tutorials" href="https://www.r-bloggers.com/search/ggplot2" rel="nofollow">ggplot2</a>, 
       <a title="Boxplots using lattice and ggplot2 tutorials" href="https://www.r-bloggers.com/search/boxplot" rel="nofollow">Boxplots</a>, 
       <a title="Maps and gis" href="https://www.r-bloggers.com/search/map" rel="nofollow">maps</a>, 
       <a title="Animation in R" href="https://www.r-bloggers.com/search/animation" rel="nofollow">animation</a>), programming (
       <a title="RStudio IDE for R" href="https://www.r-bloggers.com/search/RStudio" rel="nofollow">RStudio</a>, 
       <a title="Sweave and literate programming" href="https://www.r-bloggers.com/search/sweave" rel="nofollow">Sweave</a>, 
       <a title="LaTeX in R" href="https://www.r-bloggers.com/search/LaTeX" rel="nofollow">LaTeX</a>, 
       <a title="SQL and databases" href="https://www.r-bloggers.com/search/SQL" rel="nofollow">SQL</a>, 
       <a title="Eclipse IDE for R" href="https://www.r-bloggers.com/search/eclipse" rel="nofollow">Eclipse</a>, 
       <a title="git and github, Version Control System" href="https://www.r-bloggers.com/search/git" rel="nofollow">git</a>, 
       <a title="Large data in R using Hadoop" href="https://www.r-bloggers.com/search/hadoop" rel="nofollow">hadoop</a>, 
       <a title="Web Scraping of google, facebook, yahoo, twitter and more using R" href="https://www.r-bloggers.com/search/Web+Scraping" rel="nofollow">Web Scraping</a>) statistics (
       <a title="Regressions and ANOVA analysis tutorials" href="https://www.r-bloggers.com/search/regression" rel="nofollow">regression</a>, 
       <a title="principal component analysis tutorial" href="https://www.r-bloggers.com/search/PCA" rel="nofollow">PCA</a>, 
       <a title="Time series" href="https://www.r-bloggers.com/search/time+series" rel="nofollow">time series</a>, 
       <a title="finance trading" href="https://www.r-bloggers.com/search/trading" rel="nofollow">trading</a>) and more... 
      </div>
      <p></p>
      <hr>
      <hr> 
      <div style="border: 1px solid #EB9349; background: none repeat scroll 0 0 #FDEADA; text-align: center; margin: 10px; font-size: 16px;">
        If you got this far, why not 
       <strong><u>subscribe for updates</u> </strong>from the site? Choose your flavor: 
       <a href="http://feedburner.google.com/fb/a/mailverify?uri=RBloggers" rel="nofollow">e-mail</a>, 
       <a href="https://twitter.com/#!/rbloggers" rel="nofollow">twitter</a>, 
       <a href="http://feeds.feedburner.com/RBloggers" rel="nofollow">RSS</a>, or 
       <a href="http://www.facebook.com/pages/R-bloggers/191414254890" rel="nofollow">facebook</a>... 
      </div>
      <div class="social4i" style="height:29px;">
       <div class="social4in" style="height:29px;float: left;">
        <div class="socialicons s4fblike" style="float:left;margin-right: 10px;">
         <div class="fb-like" data-href="https://www.r-bloggers.com/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package/" data-send="true" data-layout="button_count" data-width="100" data-height="21" data-show-faces="false"></div>
        </div>
        <div class="socialicons s4linkedin" style="float:left;margin-right: 10px;">
         <script type="in/share" data-url="https://www.r-bloggers.com/image-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package/" data-counter="right"></script>
        </div>
       </div>
       <div style="clear:both"></div>
      </div>
     </div> 
    </div>
    <!-- #post-## --> 
    <div id="comments"> 
     <div id="comment-user-details"> 
      <p class="nocomments">Comments are closed.</p> 
     </div> 
    </div>
    <!-- #comments --> 
   </div> 
   <!-- begin second sidebar --> 
   <div id="secondsidebar"> 
    <div class="side-widget">
     <form method="get" id="searchform" action="https://www.r-bloggers.com/"> 
      <div> 
       <input type="text" class="search_input" value="Search &amp; Hit Enter" name="s" id="s" onfocus="if (this.value == 'Search &amp; Hit Enter') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search &amp; Hit Enter';}"> 
       <input type="hidden" id="searchsubmit"> 
      </div> 
     </form>
    </div>
    <div class="side-widget">
     <h2>Recent popular posts</h2>
     <ul> 
      <li> <a href="https://www.r-bloggers.com/deep-learning-with-r/" class="bump-view" data-bump-view="tp"> Deep Learning with R </a> </li> 
      <li> <a href="https://www.r-bloggers.com/add-p-values-and-significance-levels-to-ggplots/" class="bump-view" data-bump-view="tp"> Add P-values and Significance Levels to ggplots </a> </li> 
      <li> <a href="https://www.r-bloggers.com/introducing-the-montecarlo-package/" class="bump-view" data-bump-view="tp"> Introducing the MonteCarlo Package </a> </li> 
      <li> <a href="https://www.r-bloggers.com/how-to-create-dot-density-maps-in-r/" class="bump-view" data-bump-view="tp"> How to create dot-density maps in R </a> </li> 
     </ul>
    </div>
    <div class="side-widget">
     <h2>Most visited articles of the week</h2> 
     <ol class="wppp_list"> 
      <li><a href="https://www.r-bloggers.com/how-to-write-the-first-for-loop-in-r/" title="How to write the first for loop in R">How to write the first for loop in R</a></li> 
      <li><a href="https://www.r-bloggers.com/installing-r-packages/" title="Installing R packages">Installing R packages</a></li> 
      <li><a href="https://www.r-bloggers.com/using-apply-sapply-lapply-in-r/" title="Using apply, sapply, lapply in R">Using apply, sapply, lapply in R</a></li> 
      <li><a href="https://www.r-bloggers.com/how-to-make-a-histogram-with-basic-r/" title="How to Make a Histogram with Basic R">How to Make a Histogram with Basic R</a></li> 
      <li><a href="https://www.r-bloggers.com/how-to-learn-r-2/" title="Tutorials for learning R">Tutorials for learning R</a></li> 
      <li><a href="https://www.r-bloggers.com/how-to-perform-a-logistic-regression-in-r/" title="How to perform a Logistic Regression in R">How to perform a Logistic Regression in R</a></li> 
      <li><a href="https://www.r-bloggers.com/freedmans-paradox/" title="Freedman's paradox">Freedman's paradox</a></li> 
      <li><a href="https://www.r-bloggers.com/in-depth-introduction-to-machine-learning-in-15-hours-of-expert-videos/" title="In-depth introduction to machine learning in 15 hours of expert videos">In-depth introduction to machine learning in 15 hours of expert videos</a></li> 
      <li><a href="https://www.r-bloggers.com/shiny-app-to-explore-ggplot2/" title="Shiny app to explore ggplot2">Shiny app to explore ggplot2</a></li> 
     </ol> 
    </div>
    <div class="side-widget">
     <h2>Sponsors</h2> 
     <div class="textwidget">
      <script data-cfasync="false" type="text/javascript">
// https://support.cloudflare.com/hc/en-us/articles/200169436-How-can-I-have-Rocket-Loader-ignore-my-script-s-in-Automatic-Mode-
// this must be placed higher. Otherwise it doesn't work.
// data-cfasync="false" is for making sure cloudflares' rocketcache doesn't interfeare with this
// in this case it only works because it was used at the original script in the text widget


function createCookie(name,value,days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days*24*60*60*1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + value + expires + "; path=/";
}

function readCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
}

function eraseCookie(name) {
    createCookie(name,"",-1);
}


function readTextFile(file)
{
	// Helps people browse between pages without the need to keep downloading the same 
	// ads txt page everytime. This way, it allows them to use their browser's cache.
	var random_number = readCookie("ad_random_number_cookie");
	if(random_number == null) {
		var random_number = Math.floor(Math.random()*100*(new Date().getTime()/1000));
		createCookie("ad_random_number_cookie",random_number,1)
	}
	
    file += '?t='+random_number;
    var rawFile = new XMLHttpRequest();
    rawFile.onreadystatechange = function ()
    {
        if(rawFile.readyState === 4)
        {
            if(rawFile.status === 200 || rawFile.status == 0)
            {
                // var allText = rawFile.responseText;
                // document.write(allText);
                document.write(rawFile.responseText);
            }
        }
    }
    rawFile.open("GET", file, false);
    rawFile.send(null);
}

// readTextFile('https://raw.githubusercontent.com/Raynos/file-store/master/temp.txt');

readTextFile("https://www.r-bloggers.com/wp-content/uploads/text-widget_anti-cache.txt");

</script> 
     </div> 
    </div>
    <div class="side-widget">
     <h2><a class="rsswidget" href="https://feeds.feedburner.com/Rjobs"><img class="rss-widget-icon" style="border:0" width="14" height="14" src="https://www.r-bloggers.com/wp-includes/images/rss.png" alt="RSS"></a> <a class="rsswidget" href="https://www.r-users.com/">Jobs for R users</a></h2>
     <ul>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/IMLTOhbchHg/">Data Scientist @ Garching bei München, Bayern, Germany</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/4pvT8nJpoMg/">Software Developer</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/O2Cg4km53EQ/">Senior Quantitative Analyst, Data Scientist</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/vR1NRfEDFyE/">R data wrangler</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/o12HBENqXeY/">Senior Data Scientist</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/wT5YvwCiInw/">Manager, Statistical Consulting &amp; Data Science</a></li>
      <li><a class="rsswidget" href="http://feedproxy.google.com/~r/RJobs/~3/UhybEEaWZkM/">Financial Controller</a></li>
     </ul>
    </div>
    <div class="side-widget">
     <form method="get" id="searchform" action="https://www.r-bloggers.com/"> 
      <div> 
       <input type="text" class="search_input" value="Search &amp; Hit Enter" name="s" id="s" onfocus="if (this.value == 'Search &amp; Hit Enter') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search &amp; Hit Enter';}"> 
       <input type="hidden" id="searchsubmit"> 
      </div> 
     </form>
    </div>
    <div class="side-widget"> 
     <div class="textwidget">
      <strong><a href="https://www.r-bloggers.com/blogs-list/">Full list of contributing R-bloggers</a></strong>
     </div> 
    </div> 
   </div> 
   <!-- end second sidebar -->
  </div> 
  <!-- begin footer --> 
  <div id="footer"> 
   <strong><a href="https://www.r-bloggers.com">R-bloggers</a></strong> was founded by 
   <a href="http://www.r-statistics.com/about/">Tal Galili</a>, with gratitude to the 
   <a href="http://www.r-project.org/">R</a> community. 
   <br> Is powered by 
   <a href="http://www.wordpress.org">WordPress</a> using a 
   <a href="http://themes.bavotasan.com" rel="nofollow">bavotasan.com</a> design.
   <br> Copyright © 2017 
   <strong>R-bloggers</strong>. All Rights Reserved. 
   <a href="http://www.r-bloggers.com/terms/">Terms and Conditions</a> for this website
   <br> 
  </div> 
  <!--
TPC! Memory Usage (http://webjawns.com)
Memory Usage: 63728040Memory Peak Usage: 64641288WP Memory Limit: 820MPHP Memory Limit: 512MCheckpoints: 11--> 
  <div class="wpusb wpusb-buttons wpusb-fixed-right   wpusb-fixed wpusb-layout-buttons-content wpusb-fixed-position_fixed" id="wpusb-container-fixed" data-element-url="https%3A%2F%2Fwww.r-bloggers.com%2Fimage-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package%2F%3Futm_source%3Dshare_buttons%26utm_medium%3Dsocial_media%26utm_campaign%3Dsocial_share" data-element-title="Image%20recognition%20tutorial%20in%20R%20using%20deep%20convolutional%20neural%20networks%20%28MXNet%20package%29" data-attr-reference="137473" data-is-term="0" data-element="fixed" data-attr-nonce="d8d3e625c0" data-disabled-share-counts="1" data-wpusb-component="counter-social-share"> 
   <div data-element="buttons" class="wpusb-fixed-right-container "> 
    <div class="wpusb-item wpusb-facebook "> 
     <a href="https://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.r-bloggers.com%2Fimage-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package%2F%3Futm_source%3Dshare_buttons%26utm_medium%3Dsocial_media%26utm_campaign%3Dsocial_share" target="_blank" data-action="open-popup" class="wpusb-layout-buttons wpusb-button wpusb-btn " title="Share on Facebook" rel="nofollow"> <i class="wpusb-icon-facebook-buttons "></i> </a> 
    </div> 
    <div class="wpusb-item wpusb-twitter "> 
     <a href="https://twitter.com/share?url=https%3A%2F%2Fwww.r-bloggers.com%2Fimage-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package%2F%3Futm_source%3Dshare_buttons%26utm_medium%3Dsocial_media%26utm_campaign%3Dsocial_share&amp;text=Image%20recognition%20tutorial%20in%20R%20using%20deep%20convolutional%20neural%20networks%20%28MXNet%20package%29 #rstats #datascience&amp;via=rbloggers" target="_blank" data-action="open-popup" class="wpusb-layout-buttons wpusb-button wpusb-btn " title="Tweet" rel="nofollow"> <i class="wpusb-icon-twitter-buttons "></i> </a> 
    </div> 
    <div class="wpusb-item wpusb-linkedin "> 
     <a href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A%2F%2Fwww.r-bloggers.com%2Fimage-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package%2F%3Futm_source%3Dshare_buttons%26utm_medium%3Dsocial_media%26utm_campaign%3Dsocial_share&amp;title=Image%20recognition%20tutorial%20in%20R%20using%20deep%20convolutional%20neural%20networks%20%28MXNet%20package%29" target="_blank" data-action="open-popup" class="wpusb-layout-buttons wpusb-button wpusb-btn " title="Share on Linkedin" rel="nofollow"> <i class="wpusb-icon-linkedin-buttons "></i> </a> 
    </div> 
    <div class="wpusb-item wpusb-google-plus "> 
     <a href="https://plus.google.com/share?url=https%3A%2F%2Fwww.r-bloggers.com%2Fimage-recognition-tutorial-in-r-using-deep-convolutional-neural-networks-mxnet-package%2F%3Futm_source%3Dshare_buttons%26utm_medium%3Dsocial_media%26utm_campaign%3Dsocial_share" target="_blank" data-action="open-popup" class="wpusb-layout-buttons wpusb-button wpusb-btn " title="Share on Google+" rel="nofollow"> <i class="wpusb-icon-google-plus-buttons "></i> </a> 
    </div> 
   </div> 
   <span class="wpusb-toggle" data-action="close-buttons"></span> 
  </div> 
  <script>
        var snp_f = [];
        var snp_hostname = new RegExp(location.host);
        var snp_http = new RegExp("^(http|https)://", "i");
        var snp_cookie_prefix = '';
        var snp_separate_cookies = false;
        var snp_ajax_url = 'https://www.r-bloggers.com/wp-admin/admin-ajax.php';
        var snp_ignore_cookies = false;
        var snp_enable_analytics_events = false;
        var snp_enable_mobile = false;
        var snp_use_in_all = false;
        var snp_excluded_urls = [];
        snp_excluded_urls.push('');    </script> 
  <div class="snp-root"> 
   <input type="hidden" id="snp_popup" value=""> 
   <input type="hidden" id="snp_popup_id" value=""> 
   <input type="hidden" id="snp_popup_theme" value=""> 
   <input type="hidden" id="snp_exithref" value=""> 
   <input type="hidden" id="snp_exittarget" value=""> 
   <div id="snppopup-welcome" class="snp-pop-109583 snppopup">
    <input type="hidden" class="snp_open" value="scroll">
    <input type="hidden" class="snp_show_on_exit" value="2">
    <input type="hidden" class="snp_exit_js_alert_text" value="">
    <input type="hidden" class="snp_open_scroll" value="50">
    <input type="hidden" class="snp_optin_redirect_url" value="">
    <input type="hidden" class="snp_show_cb_button" value="yes">
    <input type="hidden" class="snp_popup_id" value="109583">
    <input type="hidden" class="snp_popup_theme" value="theme6">
    <input type="hidden" class="snp_overlay" value="disabled">
    <input type="hidden" class="snp_cookie_conversion" value="30">
    <input type="hidden" class="snp_cookie_close" value="180">
    <div class="snp-fb snp-theme6"> 
     <div class="snp-subscribe-inner"> 
      <h1 class="snp-header"><i>Never miss an update! </i> <br> <strong>Subscribe to R-bloggers</strong> to receive <br>e-mails with the latest R posts.<br> <small>(You will not see this message again.)</small></h1> 
      <div class="snp-form"> 
       <form action="https://feedburner.google.com/fb/a/mailverify?uri=RBloggers" method="post" class="snp-subscribeform snp_subscribeform"> 
        <fieldset> 
         <div class="snp-field"> 
          <input type="text" name="email" id="snp_email" placeholder="Your E-mail..." class="snp-field snp-field-email"> 
         </div> 
         <button type="submit" class="snp-submit">Submit</button> 
        </fieldset> 
       </form> 
      </div> 
      <a href="#" class="snp_nothanks snp-close">Click here to close (This popup will not appear again)</a> 
     </div> 
    </div> 
    <style>.snp-pop-109583 .snp-theme6 { max-width: 700px;}
.snp-pop-109583 .snp-theme6 h1 {font-size: 17px;}
.snp-pop-109583 .snp-theme6 { color: #a0a4a9;}
.snp-pop-109583 .snp-theme6 .snp-field ::-webkit-input-placeholder { color: #a0a4a9;}
.snp-pop-109583 .snp-theme6 .snp-field :-moz-placeholder { color: #a0a4a9;}
.snp-pop-109583 .snp-theme6 .snp-field :-ms-input-placeholder { color: #a0a4a9;}
.snp-pop-109583  .snp-theme6 .snp-field input { border: 1px solid #a0a4a9;}
.snp-pop-109583 .snp-theme6 .snp-field { color: #000000;}
.snp-pop-109583 .snp-theme6 { background: #f2f2f2;}
</style>
   </div> 
  </div> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushAS3.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushBash.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushColdFusion.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/third-party-brushes/shBrushClojure.js?ver=20090602"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCSharp.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCss.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushDelphi.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushDiff.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushErlang.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/third-party-brushes/shBrushFSharp.js?ver=20091003"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushGroovy.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJavaFX.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJScript.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/third-party-brushes/shBrushLatex.js?ver=20090613"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/third-party-brushes/shBrushMatlabKey.js?ver=20091209"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/third-party-brushes/shBrushObjC.js?ver=20091207"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPerl.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPhp.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPlain.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPowerShell.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPython.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/third-party-brushes/shBrushR.js?ver=20100919"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushRuby.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushScala.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushSql.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushVb.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushXml.js?ver=3.0.9b"></script> 
  <script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "https://www.r-bloggers.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script> 
  <link rel="stylesheet" id="wpusb-style-css" href="https://www.r-bloggers.com/wp-content/plugins/wpupper-share-buttons/assets/stylesheets/style.css?ver=1496217075" type="text/css" media="all"> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/arscode-ninja-popups/js/jquery.ck.min.js?ver=4.6.1"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/arscode-ninja-popups/js/ninjapopups.min.js?ver=4.6.1"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/arscode-ninja-popups/fancybox2/jquery.fancybox.min.js?ver=4.6.1"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-includes/js/comment-reply.min.js?ver=4.6.1"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/themes/magazine-basic/js/effects.js?ver=4.6.1"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/jetpack/modules/photon/photon.js?ver=20130122"></script> 
  <script type="text/javascript" src="https://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201723"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/lazy-load/js/jquery.sonar.min.js?ver=0.6.1"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/plugins/lazy-load/js/lazy-load.js?ver=0.6.1"></script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-includes/js/wp-embed.min.js?ver=4.6.1"></script> 
  <div id="fb-root"></div> 
  <script type="text/javascript" src="https://platform.twitter.com/widgets.js"></script>
  <script type="text/javascript" src="//connect.facebook.net/en_US/all.js#xfbml=1"></script>
  <script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
  <script type="text/javascript" src="https://platform.linkedin.com/in.js"></script>
  <script type="text/javascript" src="https://stats.wp.com/e-201723.js" async defer></script> 
  <script type="text/javascript">
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:4.7.1',blog:'11524731',post:'137473',tz:'-6',srv:'www.r-bloggers.com'} ]);
	_stq.push([ 'clickTrackerInit', '11524731', '137473' ]);
</script> 
  <script type="text/javascript" src="https://www.r-bloggers.com/wp-content/themes/magazine-basic/js/effects.js"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
jQuery(function(){
	jQuery("ul.sf-menu").supersubs({ 
		minWidth:    12,
		maxWidth:    27,
		extraWidth:  1
	}).superfish({ 
		delay:       100,
		speed:       250 
	});	});
/* ]]> */
</script>   
  <!-- Dynamic page generated in 0.793 seconds. --> 
  <!-- Cached page generated by WP-Super-Cache on 2017-06-09 12:32:09 --> 
  <!-- Compression = gzip -->
 </body>
</html>