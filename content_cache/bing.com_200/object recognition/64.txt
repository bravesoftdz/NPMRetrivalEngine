<!doctype html>
<html lang="en">
 <head> 
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"> 
  <title>Object Recognition JavaScript API</title> 
  <meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport"> 
  <style data-fill-with="stylesheet">/******************************************************************************
 *                   Style sheet for the W3C specifications                   *
 *
 * Special classes handled by this style sheet include:
 *
 * Indices
 *   - .toc for the Table of Contents (<ol class="toc">)
 *     + <span class="secno"> for the section numbers
 *   - #toc for the Table of Contents (<nav id="toc">)
 *   - ul.index for Indices (<a href="#ref">term</a><span>, in §N.M</span>)
 *   - table.index for Index Tables (e.g. for properties or elements)
 *
 * Structural Markup
 *   - table.data for general data tables
 *     -> use 'scope' attribute, <colgroup>, <thead>, and <tbody> for best results !
 *     -> use <table class='complex data'> for extra-complex tables
 *     -> use <td class='long'> for paragraph-length cell content
 *     -> use <td class='pre'> when manual line breaks/indentation would help readability
 *   - dl.switch for switch statements
 *   - ol.algorithm for algorithms (helps to visualize nesting)
 *   - .figure and .caption (HTML4) and figure and figcaption (HTML5)
 *     -> .sidefigure for right-floated figures
 *   - ins/del
 *
 * Code
 *   - pre and code
 *
 * Special Sections
 *   - .note       for informative notes             (div, p, span, aside, details)
 *   - .example    for informative examples          (div, p, pre, span)
 *   - .issue      for issues                        (div, p, span)
 *   - .assertion  for assertions                    (div, p, span)
 *   - .advisement for loud normative statements     (div, p, strong)
 *   - .annoying-warning for spec obsoletion notices (div, aside, details)
 *
 * Definition Boxes
 *   - pre.def   for WebIDL definitions
 *   - table.def for tables that define other entities (e.g. CSS properties)
 *   - dl.def    for definition lists that define other entitles (e.g. HTML elements)
 *
 * Numbering
 *   - .secno for section numbers in .toc and headings (<span class='secno'>3.2</span>)
 *   - .marker for source-inserted example/figure/issue numbers (<span class='marker'>Issue 4</span>)
 *   - ::before styled for CSS-generated issue/example/figure numbers:
 *     -> Documents wishing to use this only need to add
 *        figcaption::before,
 *        .caption::before { content: "Figure "  counter(figure) " ";  }
 *        .example::before { content: "Example " counter(example) " "; }
 *        .issue::before   { content: "Issue "   counter(issue) " ";   }
 *
 * Header Stuff (ignore, just don't conflict with these classes)
 *   - .head for the header
 *   - .copyright for the copyright
 *
 * Miscellaneous
 *   - .overlarge for things that should be as wide as possible, even if
 *     that overflows the body text area. This can be used on an item or
 *     on its container, depending on the effect desired.
 *     Note that this styling basically doesn't help at all when printing,
 *     since A4 paper isn't much wider than the max-width here.
 *     It's better to design things to fit into a narrower measure if possible.
 *   - js-added ToC jump links (see fixup.js)
 *
 ******************************************************************************/

/******************************************************************************/
/*                                   Body                                     */
/******************************************************************************/

	body {
		counter-reset: example figure issue;

		/* Layout */
		max-width: 50em;               /* limit line length to 50em for readability   */
		margin: 0 auto;                /* center text within page                     */
		padding: 1.6em 1.5em 2em 50px; /* assume 16px font size for downlevel clients */
		padding: 1.6em 1.5em 2em calc(26px + 1.5em); /* leave space for status flag     */

		/* Typography */
		line-height: 1.5;
		font-family: sans-serif;
		widows: 2;
		orphans: 2;
		word-wrap: break-word;
		overflow-wrap: break-word;
		hyphens: auto;

		/* Colors */
		color: black;
		background: white top left fixed no-repeat;
		background-size: 25px auto;
	}


/******************************************************************************/
/*                         Front Matter & Navigation                          */
/******************************************************************************/

/** Header ********************************************************************/

	div.head { margin-bottom: 1em }
	div.head hr { border-style: solid; }

	div.head h1 {
		font-weight: bold;
		margin: 0 0 .1em;
		font-size: 220%;
	}

	div.head h2 { margin-bottom: 1.5em;}

/** W3C Logo ******************************************************************/

	.head .logo {
		float: right;
		margin: 0.4rem 0 0.2rem .4rem;
	}

	.head img[src*="logos/W3C"] {
		display: block;
		border: solid #1a5e9a;
		border-width: .65rem .7rem .6rem;
		border-radius: .4rem;
		background: #1a5e9a;
		color: white;
		font-weight: bold;
	}

	.head a:hover > img[src*="logos/W3C"],
	.head a:focus > img[src*="logos/W3C"] {
		opacity: .8;
	}

	.head a:active > img[src*="logos/W3C"] {
		background: #c00;
		border-color: #c00;
	}

	/* see also additional rules in Link Styling section */

/** Copyright *****************************************************************/

	p.copyright,
	p.copyright small { font-size: small }

/** Back to Top / ToC Toggle **************************************************/

	@media print {
		#toc-nav {
			display: none;
		}
	}
	@media not print {
		#toc-nav {
			position: fixed;
			z-index: 2;
			bottom: 0; left: 0;
			margin: 0;
			min-width: 1.33em;
			border-top-right-radius: 2rem;
			box-shadow: 0 0 2px;
			font-size: 1.5em;
			color: black;
		}
		#toc-nav > a {
			display: block;
			white-space: nowrap;

			height: 1.33em;
			padding: .1em 0.3em;
			margin: 0;

			background: white;
			box-shadow: 0 0 2px;
			border: none;
			border-top-right-radius: 1.33em;
			background: white;
		}
		#toc-nav > #toc-jump {
			padding-bottom: 2em;
			margin-bottom: -1.9em;
		}

		#toc-nav > a:hover,
		#toc-nav > a:focus {
			background: #f8f8f8;
		}
		#toc-nav > a:not(:hover):not(:focus) {
			color: #707070;
		}

		/* statusbar gets in the way on keyboard focus; remove once browsers fix */
		#toc-nav > a[href="#toc"]:not(:hover):focus:last-child {
			padding-bottom: 1.5rem;
		}

		#toc-nav:not(:hover) > a:not(:focus) > span + span {
			/* Ideally this uses :focus-within on #toc-nav */
			display: none;
		}
		#toc-nav > a > span + span {
			padding-right: 0.2em;
		}

		#toc-toggle-inline {
			vertical-align: 0.05em;
			font-size: 80%;
			color: gray;
			color: hsla(203,20%,40%,.7);
			border-style: none;
			background: transparent;
			position: relative;
		}
		#toc-toggle-inline:hover:not(:active),
		#toc-toggle-inline:focus:not(:active) {
			text-shadow: 1px 1px silver;
			top: -1px;
			left: -1px;
		}

		#toc-nav :active {
			color: #C00;
		}
	}

/** ToC Sidebar ***************************************************************/

	/* Floating sidebar */
	@media screen {
		body.toc-sidebar #toc {
			position: fixed;
			top: 0; bottom: 0;
			left: 0;
			width: 23.5em;
			max-width: 80%;
			max-width: calc(100% - 2em - 26px);
			overflow: auto;
			padding: 0 1em;
			padding-left: 42px;
			padding-left: calc(1em + 26px);
			background: inherit;
			background-color: #f7f8f9;
			z-index: 1;
			box-shadow: -.1em 0 .25em rgba(0,0,0,.1) inset;
		}
		body.toc-sidebar #toc h2 {
			margin-top: .8rem;
			font-variant: small-caps;
			font-variant: all-small-caps;
			text-transform: lowercase;
			font-weight: bold;
			color: gray;
			color: hsla(203,20%,40%,.7);
		}
		body.toc-sidebar #toc-jump:not(:focus) {
			width: 0;
			height: 0;
			padding: 0;
			position: absolute;
			overflow: hidden;
		}
	}
	/* Hide main scroller when only the ToC is visible anyway */
	@media screen and (max-width: 28em) {
		body.toc-sidebar {
			overflow: hidden;
		}
	}

	/* Sidebar with its own space */
	@media screen and (min-width: 78em) {
		body:not(.toc-inline) #toc {
			position: fixed;
			top: 0; bottom: 0;
			left: 0;
			width: 23.5em;
			overflow: auto;
			padding: 0 1em;
			padding-left: 42px;
			padding-left: calc(1em + 26px);
			background: inherit;
			background-color: #f7f8f9;
			z-index: 1;
			box-shadow: -.1em 0 .25em rgba(0,0,0,.1) inset;
		}
		body:not(.toc-inline) #toc h2 {
			margin-top: .8rem;
			font-variant: small-caps;
			font-variant: all-small-caps;
			text-transform: lowercase;
			font-weight: bold;
			color: gray;
			color: hsla(203,20%,40%,.7);
		}

		body:not(.toc-inline) {
			padding-left: 29em;
		}
		/* See also Overflow section at the bottom */

		body:not(.toc-inline) #toc-jump:not(:focus) {
			width: 0;
			height: 0;
			padding: 0;
			position: absolute;
			overflow: hidden;
		}
	}
	@media screen and (min-width: 90em) {
		body:not(.toc-inline) {
			margin: 0 4em;
		}
	}

/******************************************************************************/
/*                                Sectioning                                  */
/******************************************************************************/

/** Headings ******************************************************************/

	h1, h2, h3, h4, h5, h6, dt {
		page-break-after: avoid;
		page-break-inside: avoid;
		font: 100% sans-serif;   /* Reset all font styling to clear out UA styles */
		font-family: inherit;    /* Inherit the font family. */
		line-height: 1.2;        /* Keep wrapped headings compact */
		hyphens: manual;         /* Hyphenated headings look weird */
	}

	h2, h3, h4, h5, h6 {
		margin-top: 3rem;
	}

	h1, h2, h3 {
		color: #005A9C;
		background: transparent;
	}

	h1 { font-size: 170%; }
	h2 { font-size: 140%; }
	h3 { font-size: 120%; }
	h4 { font-weight: bold; }
	h5 { font-style: italic; }
	h6 { font-variant: small-caps; }
	dt { font-weight: bold; }

/** Subheadings ***************************************************************/

	h1 + h2,
	#subtitle {
		/* #subtitle is a subtitle in an H2 under the H1 */
		margin-top: 0;
	}
	h2 + h3,
	h3 + h4,
	h4 + h5,
	h5 + h6 {
		margin-top: 1.2em; /* = 1 x line-height */
	}

/** Section divider ***********************************************************/

	:not(.head) > hr {
		font-size: 1.5em;
		text-align: center;
		margin: 1em auto;
		height: auto;
		border: transparent solid 0;
		background: transparent;
	}
	:not(.head) > hr::before {
		content: "\2727\2003\2003\2727\2003\2003\2727";
	}

/******************************************************************************/
/*                            Paragraphs and Lists                            */
/******************************************************************************/

	p {
		margin: 1em 0;
	}

	dd > p:first-child,
	li > p:first-child {
		margin-top: 0;
	}

	ul, ol {
		margin-left: 0;
		padding-left: 2em;
	}

	li {
		margin: 0.25em 0 0.5em;
		padding: 0;
	}

	dl dd {
		margin: 0 0 .5em 2em;
	}

	.head dd + dd { /* compact for header */
		margin-top: -.5em;
	}

	/* Style for algorithms */
	ol.algorithm ol:not(.algorithm),
	.algorithm > ol ol:not(.algorithm) {
	 border-left: 0.5em solid #DEF;
	}

	/* Put nice boxes around each algorithm. */
	[data-algorithm]:not(.heading) {
	  padding: .5em;
	  border: thin solid #ddd; border-radius: .5em;
	  margin: .5em 0;
	}
	[data-algorithm]:not(.heading) > :first-child {
	  margin-top: 0;
	}
	[data-algorithm]:not(.heading) > :last-child {
	  margin-bottom: 0;
	}

	/* Style for switch/case <dl>s */
	dl.switch > dd > ol.only,
	dl.switch > dd > .only > ol {
	 margin-left: 0;
	}
	dl.switch > dd > ol.algorithm,
	dl.switch > dd > .algorithm > ol {
	 margin-left: -2em;
	}
	dl.switch {
	 padding-left: 2em;
	}
	dl.switch > dt {
	 text-indent: -1.5em;
	 margin-top: 1em;
	}
	dl.switch > dt + dt {
	 margin-top: 0;
	}
	dl.switch > dt::before {
	 content: '\21AA';
	 padding: 0 0.5em 0 0;
	 display: inline-block;
	 width: 1em;
	 text-align: right;
	 line-height: 0.5em;
	}

/** Terminology Markup ********************************************************/


/******************************************************************************/
/*                                 Inline Markup                              */
/******************************************************************************/

/** Terminology Markup ********************************************************/
	dfn   { /* Defining instance */
		font-weight: bolder;
	}
	a > i { /* Instance of term */
		font-style: normal;
	}
	dt dfn code, code.idl {
		font-size: normal;
	}
	dfn var {
		font-style: normal;
	}

/** Change Marking ************************************************************/

	del { color: red;  text-decoration: line-through; }
	ins { color: #080; text-decoration: underline;    }

/** Miscellaneous improvements to inline formatting ***************************/

	sup {
		vertical-align: super;
		font-size: 80%
	}

/******************************************************************************/
/*                                    Code                                    */
/******************************************************************************/

/** General monospace/pre rules ***********************************************/

	pre, code, samp {
		font-family: Menlo, Consolas, "DejaVu Sans Mono", Monaco, monospace;
		font-size: .9em;
		page-break-inside: avoid;
		hyphens: none;
		text-transform: none;
	}
	pre code,
	code code {
		font-size: 100%;
	}

	pre {
		margin-top: 1em;
		margin-bottom: 1em;
		overflow: auto;
	}

/** Inline Code fragments *****************************************************/

  /* Do something nice. */

/******************************************************************************/
/*                                    Links                                   */
/******************************************************************************/

/** General Hyperlinks ********************************************************/

	/* We hyperlink a lot, so make it less intrusive */
	a[href] {
		color: #034575;
		text-decoration: none;
		border-bottom: 1px solid #707070;
		/* Need a bit of extending for it to look okay */
		padding: 0 1px 0;
		margin: 0 -1px 0;
	}
	a:visited {
		border-bottom-color: #BBB;
	}

	/* Use distinguishing colors when user is interacting with the link */
	a[href]:focus,
	a[href]:hover {
		background: #f8f8f8;
		background: rgba(75%, 75%, 75%, .25);
		border-bottom-width: 3px;
		margin-bottom: -2px;
	}
	a[href]:active {
		color: #C00;
		border-color: #C00;
	}

	/* Backout above styling for W3C logo */
	.head .logo,
	.head .logo a {
		border: none;
		text-decoration: none;
		background: transparent;
	}

/******************************************************************************/
/*                                    Images                                  */
/******************************************************************************/

	img {
		border-style: none;
	}

	/* For autogen numbers, add
	   .caption::before, figcaption::before { content: "Figure " counter(figure) ". "; }
	*/

	figure, .figure, .sidefigure {
		page-break-inside: avoid;
		text-align: center;
		margin: 2.5em 0;
	}
	.figure img,    .sidefigure img,    figure img,
	.figure object, .sidefigure object, figure object {
		max-width: 100%;
		margin: auto;
	}
	.figure pre, .sidefigure pre, figure pre {
		text-align: left;
		display: table;
		margin: 1em auto;
	}
	.figure table, figure table {
		margin: auto;
	}
	@media screen and (min-width: 20em) {
		.sidefigure {
			float: right;
			width: 50%;
			margin: 0 0 0.5em 0.5em
		}
	}
	.caption, figcaption, caption {
		font-style: italic;
		font-size: 90%;
	}
	.caption::before, figcaption::before, figcaption > .marker {
		font-weight: bold;
	}
	.caption, figcaption {
		counter-increment: figure;
	}

	/* DL list is indented 2em, but figure inside it is not */
	dd > .figure, dd > figure { margin-left: -2em }

/******************************************************************************/
/*                             Colored Boxes                                  */
/******************************************************************************/

	.issue, .note, .example, .assertion, .advisement, blockquote {
		padding: .5em;
		border: .5em;
		border-left-style: solid;
		page-break-inside: avoid;
	}
	span.issue, span.note {
		padding: .1em .5em .15em;
		border-right-style: solid;
	}

	.issue,
	.note,
	.example,
	.advisement,
	.assertion,
	blockquote {
		margin: 1em auto;
	}
	.note  > p:first-child,
	.issue > p:first-child,
	blockquote > :first-child {
		margin-top: 0;
	}
	blockquote > :last-child {
		margin-bottom: 0;
	}

/** Blockquotes ***************************************************************/

	blockquote {
		border-color: silver;
	}

/** Open issue ****************************************************************/

	.issue {
		border-color: #E05252;
		background: #FBE9E9;
		counter-increment: issue;
		overflow: auto;
	}
	.issue::before, .issue > .marker {
		text-transform: uppercase;
		color: #AE1E1E;
		padding-right: 1em;
		text-transform: uppercase;
	}
	/* Add .issue::before { content: "Issue " counter(issue) " "; } for autogen numbers,
	   or use class="marker" to mark up the issue number in source. */

/** Example *******************************************************************/

	.example {
		border-color: #E0CB52;
		background: #FCFAEE;
		counter-increment: example;
		overflow: auto;
		clear: both;
	}
	.example::before, .example > .marker {
		text-transform: uppercase;
		color: #827017;
		min-width: 7.5em;
		display: block;
	}
	/* Add .example::before { content: "Example " counter(example) " "; } for autogen numbers,
	   or use class="marker" to mark up the example number in source. */

/** Non-normative Note ********************************************************/

	.note {
		border-color: #52E052;
		background: #E9FBE9;
		overflow: auto;
	}

	.note::before, .note > .marker,
	details.note > summary::before,
	details.note > summary > .marker {
		text-transform: uppercase;
		display: block;
		color: hsl(120, 70%, 30%);
	}
	/* Add .note::before { content: "Note"; } for autogen label,
	   or use class="marker" to mark up the label in source. */

	details.note > summary {
		display: block;
		color: hsl(120, 70%, 30%);
	}
	details.note[open] > summary {
		border-bottom: 1px silver solid;
	}

/** Assertion Box *************************************************************/
	/*  for assertions in algorithms */

	.assertion {
		border-color: #AAA;
		background: #EEE;
	}

/** Advisement Box ************************************************************/
	/*  for attention-grabbing normative statements */

	.advisement {
		border-color: orange;
		border-style: none solid;
		background: #FFEECC;
	}
	strong.advisement {
		display: block;
		text-align: center;
	}
	.advisement > .marker {
		color: #B35F00;
	}

/** Spec Obsoletion Notice ****************************************************/
	/* obnoxious obsoletion notice for older/abandoned specs. */

	details {
		display: block;
	}
	summary {
		font-weight: bolder;
	}

	.annoying-warning:not(details),
	details.annoying-warning:not([open]) > summary,
	details.annoying-warning[open] {
		background: #fdd;
		color: red;
		font-weight: bold;
		padding: .75em 1em;
		border: thick red;
		border-style: solid;
		border-radius: 1em;
	}
	.annoying-warning :last-child {
		margin-bottom: 0;
	}

@media not print {
	details.annoying-warning[open] {
		position: fixed;
		left: 1em;
		right: 1em;
		bottom: 1em;
		z-index: 1000;
	}
}

	details.annoying-warning:not([open]) > summary {
		text-align: center;
	}

/** Entity Definition Boxes ***************************************************/

	.def {
		padding: .5em 1em;
		background: #DEF;
		margin: 1.2em 0;
		border-left: 0.5em solid #8CCBF2;
	}

/******************************************************************************/
/*                                    Tables                                  */
/******************************************************************************/

	th, td {
		text-align: left;
		text-align: start;
	}

/** Property/Descriptor Definition Tables *************************************/

	table.def {
		/* inherits .def box styling, see above */
		width: 100%;
		border-spacing: 0;
	}

	table.def td,
	table.def th {
		padding: 0.5em;
		vertical-align: baseline;
		border-bottom: 1px solid #bbd7e9;
	}

	table.def > tbody > tr:last-child th,
	table.def > tbody > tr:last-child td {
		border-bottom: 0;
	}

	table.def th {
		font-style: italic;
		font-weight: normal;
		padding-left: 1em;
		width: 3em;
	}

	/* For when values are extra-complex and need formatting for readability */
	table td.pre {
		white-space: pre-wrap;
	}

	/* A footnote at the bottom of a def table */
	table.def           td.footnote {
		padding-top: 0.6em;
	}
	table.def           td.footnote::before {
		content: " ";
		display: block;
		height: 0.6em;
		width: 4em;
		border-top: thin solid;
	}

/** Data tables (and properly marked-up index tables) *************************/
	/*
		 <table class="data"> highlights structural relationships in a table
		 when correct markup is used (e.g. thead/tbody, th vs. td, scope attribute)

		 Use class="complex data" for particularly complicated tables --
		 (This will draw more lines: busier, but clearer.)

		 Use class="long" on table cells with paragraph-like contents
		 (This will adjust text alignment accordingly.)
		 Alternately use class="longlastcol" on tables, to have the last column assume "long".
	*/

	table {
		word-wrap: normal;
		overflow-wrap: normal;
		hyphens: manual;
	}

	table.data,
	table.index {
		margin: 1em auto;
		border-collapse: collapse;
		border: hidden;
		width: 100%;
	}
	table.data caption,
	table.index caption {
		max-width: 50em;
		margin: 0 auto 1em;
	}

	table.data td,  table.data th,
	table.index td, table.index th {
		padding: 0.5em 1em;
		border-width: 1px;
		border-color: silver;
		border-top-style: solid;
	}

	table.data thead td:empty {
		padding: 0;
		border: 0;
	}

	table.data  thead,
	table.index thead,
	table.data  tbody,
	table.index tbody {
		border-bottom: 2px solid;
	}

	table.data colgroup,
	table.index colgroup {
		border-left: 2px solid;
	}

	table.data  tbody th:first-child,
	table.index tbody th:first-child  {
		border-right: 2px solid;
		border-top: 1px solid silver;
		padding-right: 1em;
	}

	table.data th[colspan],
	table.data td[colspan] {
		text-align: center;
	}

	table.complex.data th,
	table.complex.data td {
		border: 1px solid silver;
		text-align: center;
	}

	table.data.longlastcol td:last-child,
	table.data td.long {
	 vertical-align: baseline;
	 text-align: left;
	}

	table.data img {
		vertical-align: middle;
	}


/*
Alternate table alignment rules

	table.data,
	table.index {
		text-align: center;
	}

	table.data  thead th[scope="row"],
	table.index thead th[scope="row"] {
		text-align: right;
	}

	table.data  tbody th:first-child,
	table.index tbody th:first-child  {
		text-align: right;
	}

Possible extra rowspan handling

	table.data  tbody th[rowspan]:not([rowspan='1']),
	table.index tbody th[rowspan]:not([rowspan='1']),
	table.data  tbody td[rowspan]:not([rowspan='1']),
	table.index tbody td[rowspan]:not([rowspan='1']) {
		border-left: 1px solid silver;
	}

	table.data  tbody th[rowspan]:first-child,
	table.index tbody th[rowspan]:first-child,
	table.data  tbody td[rowspan]:first-child,
	table.index tbody td[rowspan]:first-child{
		border-left: 0;
		border-right: 1px solid silver;
	}
*/

/******************************************************************************/
/*                                  Indices                                   */
/******************************************************************************/


/** Table of Contents *********************************************************/

	.toc a {
		/* More spacing; use padding to make it part of the click target. */
		padding-top: 0.1rem;
		/* Larger, more consistently-sized click target */
		display: block;
		/* Reverse color scheme */
		color: black;
		border-color: #3980B5;
		border-bottom-width: 3px !important;
		margin-bottom: 0px !important;
	}
	.toc a:visited {
		border-color: #054572;
	}
	.toc a:not(:focus):not(:hover) {
		/* Allow colors to cascade through from link styling */
		border-bottom-color: transparent;
	}

	.toc, .toc ol, .toc ul, .toc li {
		list-style: none; /* Numbers must be inlined into source */
		/* because generated content isn't search/selectable and markers can't do multilevel yet */
		margin:  0;
		padding: 0;
		line-height: 1.1rem; /* consistent spacing */
	}

	/* ToC not indented until third level, but font style & margins show hierarchy */
	.toc > li             { font-weight: bold;   }
	.toc > li li          { font-weight: normal; }
	.toc > li li li       { font-size:   95%;    }
	.toc > li li li li    { font-size:   90%;    }
	.toc > li li li li li { font-size:   85%;    }

	.toc > li             { margin: 1.5rem 0;    }
	.toc > li li          { margin: 0.3rem 0;    }
	.toc > li li li       { margin-left: 2rem;   }

	/* Section numbers in a column of their own */
	.toc .secno {
		float: left;
		width: 4rem;
		white-space: nowrap;
	}
	.toc > li li li li .secno {
		font-size: 85%;
	}
	.toc > li li li li li .secno {
		font-size: 100%;
	}

	:not(li) > .toc              { margin-left:  5rem; }
	.toc .secno                  { margin-left: -5rem; }
	.toc > li li li .secno       { margin-left: -7rem; }
	.toc > li li li li .secno    { margin-left: -9rem; }
	.toc > li li li li li .secno { margin-left: -11rem; }

	/* Tighten up indentation in narrow ToCs */
	@media (max-width: 30em) {
		:not(li) > .toc              { margin-left:  4rem; }
		.toc .secno                  { margin-left: -4rem; }
		.toc > li li li              { margin-left:  1rem; }
		.toc > li li li .secno       { margin-left: -5rem; }
		.toc > li li li li .secno    { margin-left: -6rem; }
		.toc > li li li li li .secno { margin-left: -7rem; }
	}
	@media screen and (min-width: 78em) {
		body:not(.toc-inline) :not(li) > .toc              { margin-left:  4rem; }
		body:not(.toc-inline) .toc .secno                  { margin-left: -4rem; }
		body:not(.toc-inline) .toc > li li li              { margin-left:  1rem; }
		body:not(.toc-inline) .toc > li li li .secno       { margin-left: -5rem; }
		body:not(.toc-inline) .toc > li li li li .secno    { margin-left: -6rem; }
		body:not(.toc-inline) .toc > li li li li li .secno { margin-left: -7rem; }
	}
	body.toc-sidebar #toc :not(li) > .toc              { margin-left:  4rem; }
	body.toc-sidebar #toc .toc .secno                  { margin-left: -4rem; }
	body.toc-sidebar #toc .toc > li li li              { margin-left:  1rem; }
	body.toc-sidebar #toc .toc > li li li .secno       { margin-left: -5rem; }
	body.toc-sidebar #toc .toc > li li li li .secno    { margin-left: -6rem; }
	body.toc-sidebar #toc .toc > li li li li li .secno { margin-left: -7rem; }

	.toc li {
		clear: both;
	}


/** Index *********************************************************************/

	/* Index Lists: Layout */
	ul.index       { margin-left: 0; columns: 15em; text-indent: 1em hanging; }
	ul.index li    { margin-left: 0; list-style: none; break-inside: avoid; }
	ul.index li li { margin-left: 1em }
	ul.index dl    { margin-top: 0; }
	ul.index dt    { margin: .2em 0 .2em 20px;}
	ul.index dd    { margin: .2em 0 .2em 40px;}
	/* Index Lists: Typography */
	ul.index ul,
	ul.index dl { font-size: smaller; }
	@media not print {
		ul.index li span {
			white-space: nowrap;
			color: transparent; }
		ul.index li a:hover + span,
		ul.index li a:focus + span {
			color: #707070;
		}
	}

/** Index Tables *****************************************************/
	/* See also the data table styling section, which this effectively subclasses */

	table.index {
		font-size: small;
		border-collapse: collapse;
		border-spacing: 0;
		text-align: left;
		margin: 1em 0;
	}

	table.index td,
	table.index th {
		padding: 0.4em;
	}

	table.index tr:hover td:not([rowspan]),
	table.index tr:hover th:not([rowspan]) {
		background: #f7f8f9;
	}

	/* The link in the first column in the property table (formerly a TD) */
	table.index th:first-child a {
		font-weight: bold;
	}

/******************************************************************************/
/*                                    Print                                   */
/******************************************************************************/

	@media print {
		/* Pages have their own margins. */
		html {
			margin: 0;
		}
		/* Serif for print. */
		body {
			font-family: serif;
		}
	}
	@page {
		margin: 1.5cm 1.1cm;
	}

/******************************************************************************/
/*                                    Legacy                                  */
/******************************************************************************/

	/* This rule is inherited from past style sheets. No idea what it's for. */
	.hide { display: none }



/******************************************************************************/
/*                             Overflow Control                               */
/******************************************************************************/

	.figure .caption, .sidefigure .caption, figcaption {
		/* in case figure is overlarge, limit caption to 50em */
		max-width: 50rem;
		margin-left: auto;
		margin-right: auto;
	}
	.overlarge > table {
		/* limit preferred width of table */
		max-width: 50em;
		margin-left: auto;
		margin-right: auto;
	}

	@media (min-width: 55em) {
		.overlarge {
			margin-left: calc(13px + 26.5rem - 50vw);
			margin-right: calc(13px + 26.5rem - 50vw);
			max-width: none;
		}
	}
	@media screen and (min-width: 78em) {
		body:not(.toc-inline) .overlarge {
			/* 30.5em body padding 50em content area */
			margin-left: calc(40em - 50vw) !important;
			margin-right: calc(40em - 50vw) !important;
		}
	}
	@media screen and (min-width: 90em) {
		body:not(.toc-inline) .overlarge {
			/* 4em html margin 30.5em body padding 50em content area */
			margin-left: 0 !important;
			margin-right: calc(84.5em - 100vw) !important;
		}
	}

	@media not print {
		.overlarge {
			overflow-x: auto;
			/* See Lea Verou's explanation background-attachment:
			 * http://lea.verou.me/2012/04/background-attachment-local/
			 *
			background: top left  / 4em 100% linear-gradient(to right,  #ffffff, rgba(255, 255, 255, 0)) local,
			            top right / 4em 100% linear-gradient(to left, #ffffff, rgba(255, 255, 255, 0)) local,
			            top left  / 1em 100% linear-gradient(to right,  #c3c3c5, rgba(195, 195, 197, 0)) scroll,
			            top right / 1em 100% linear-gradient(to left, #c3c3c5, rgba(195, 195, 197, 0)) scroll,
			            white;
			background-repeat: no-repeat;
			*/
		}
	}
</style> 
  <meta content="Bikeshed version 645534c1532bca4fdb4f3859efc66268a218d7c8" name="generator"> 
  <style>
table {
  text-indent: 20px;
  word-wrap: normal;
  overflow-wrap: normal;
  hyphens: manual;
  border-collapse: collapse;
  border-left-style: hidden;
  border-right-style: hidden;
  text-align: left;
}
table caption {
//  font-weight: bold;
  padding: 3px;
  text-align: left;
}
table td, table th {
  border: 1px solid black;
  padding: 3px;
}

li {list-style-type: none;}
</style> 
  <style>/* style-md-lists */

            /* This is a weird hack for me not yet following the commonmark spec
               regarding paragraph and lists. */
            [data-md] > :first-child {
                margin-top: 0;
            }
            [data-md] > :last-child {
                margin-bottom: 0;
            }</style> 
  <style>/* style-selflinks */

            .heading, .issue, .note, .example, li, dt {
                position: relative;
            }
            a.self-link {
                position: absolute;
                top: 0;
                left: calc(-1 * (3.5rem - 26px));
                width: calc(3.5rem - 26px);
                height: 2em;
                text-align: center;
                border: none;
                transition: opacity .2s;
                opacity: .5;
            }
            a.self-link:hover {
                opacity: 1;
            }
            .heading > a.self-link {
                font-size: 83%;
            }
            li > a.self-link {
                left: calc(-1 * (3.5rem - 26px) - 2em);
            }
            dfn > a.self-link {
                top: auto;
                left: auto;
                opacity: 0;
                width: 1.5em;
                height: 1.5em;
                background: gray;
                color: white;
                font-style: normal;
                transition: opacity .2s, background-color .2s, color .2s;
            }
            dfn:hover > a.self-link {
                opacity: 1;
            }
            dfn > a.self-link:hover {
                color: black;
            }

            a.self-link::before            { content: "¶"; }
            .heading > a.self-link::before { content: "§"; }
            dfn > a.self-link::before      { content: "#"; }</style> 
  <style>/* style-counters */

            body {
                counter-reset: example figure issue;
            }
            .issue {
                counter-increment: issue;
            }
            .issue:not(.no-marker)::before {
                content: "Issue " counter(issue);
            }

            .example {
                counter-increment: example;
            }
            .example:not(.no-marker)::before {
                content: "Example " counter(example);
            }
            .invalid.example:not(.no-marker)::before,
            .illegal.example:not(.no-marker)::before {
                content: "Invalid Example" counter(example);
            }

            figcaption {
                counter-increment: figure;
            }
            figcaption:not(.no-marker)::before {
                content: "Figure " counter(figure) " ";
            }</style> 
  <style>/* style-autolinks */

            .css.css, .property.property, .descriptor.descriptor {
                color: #005a9c;
                font-size: inherit;
                font-family: inherit;
            }
            .css::before, .property::before, .descriptor::before {
                content: "";
            }
            .css::after, .property::after, .descriptor::after {
                content: "";
            }
            .property, .descriptor {
                /* Don't wrap property and descriptor names */
                white-space: nowrap;
            }
            .type { /* CSS value <type> */
                font-style: italic;
            }
            pre .property::before, pre .property::after {
                content: "";
            }
            [data-link-type="property"]::before,
            [data-link-type="propdesc"]::before,
            [data-link-type="descriptor"]::before,
            [data-link-type="value"]::before,
            [data-link-type="function"]::before,
            [data-link-type="at-rule"]::before,
            [data-link-type="selector"]::before,
            [data-link-type="maybe"]::before {
                content: "";
            }
            [data-link-type="property"]::after,
            [data-link-type="propdesc"]::after,
            [data-link-type="descriptor"]::after,
            [data-link-type="value"]::after,
            [data-link-type="function"]::after,
            [data-link-type="at-rule"]::after,
            [data-link-type="selector"]::after,
            [data-link-type="maybe"]::after {
                content: "";
            }

            [data-link-type].production::before,
            [data-link-type].production::after,
            .prod [data-link-type]::before,
            .prod [data-link-type]::after {
                content: "";
            }

            [data-link-type=element],
            [data-link-type=element-attr] {
                font-family: Menlo, Consolas, "DejaVu Sans Mono", monospace;
                font-size: .9em;
            }
            [data-link-type=element]::before { content: "<" }
            [data-link-type=element]::after  { content: ">" }

            [data-link-type=biblio] {
                white-space: pre;
            }</style> 
  <style>/* style-dfn-panel */

        .dfn-panel {
            position: absolute;
            z-index: 35;
            height: auto;
            width: -webkit-fit-content;
            width: fit-content;
            max-width: 300px;
            max-height: 500px;
            overflow: auto;
            padding: 0.5em 0.75em;
            font: small Helvetica Neue, sans-serif, Droid Sans Fallback;
            background: #DDDDDD;
            color: black;
            border: outset 0.2em;
        }
        .dfn-panel:not(.on) { display: none; }
        .dfn-panel * { margin: 0; padding: 0; text-indent: 0; }
        .dfn-panel > b { display: block; }
        .dfn-panel a { color: black; }
        .dfn-panel a:not(:hover) { text-decoration: none !important; border-bottom: none !important; }
        .dfn-panel > b + b { margin-top: 0.25em; }
        .dfn-panel ul { padding: 0; }
        .dfn-panel li { list-style: inside; }
        .dfn-panel.activated {
            display: inline-block;
            position: fixed;
            left: .5em;
            bottom: 2em;
            margin: 0 auto;
            max-width: calc(100vw - 1.5em - .4em - .5em);
            max-height: 30vh;
        }

        .dfn-paneled { cursor: pointer; }
        </style> 
  <style>/* style-syntax-highlighting */
pre.idl.highlight { color: #708090; }
        .highlight:not(.idl) { background: hsl(24, 20%, 95%); }
        code.highlight { padding: .1em; border-radius: .3em; }
        pre.highlight, pre > code.highlight { display: block; padding: 1em; margin: .5em 0; overflow: auto; border-radius: 0; }
        .highlight .c { color: #708090 } /* Comment */
        .highlight .k { color: #990055 } /* Keyword */
        .highlight .l { color: #000000 } /* Literal */
        .highlight .n { color: #0077aa } /* Name */
        .highlight .o { color: #999999 } /* Operator */
        .highlight .p { color: #999999 } /* Punctuation */
        .highlight .cm { color: #708090 } /* Comment.Multiline */
        .highlight .cp { color: #708090 } /* Comment.Preproc */
        .highlight .c1 { color: #708090 } /* Comment.Single */
        .highlight .cs { color: #708090 } /* Comment.Special */
        .highlight .kc { color: #990055 } /* Keyword.Constant */
        .highlight .kd { color: #990055 } /* Keyword.Declaration */
        .highlight .kn { color: #990055 } /* Keyword.Namespace */
        .highlight .kp { color: #990055 } /* Keyword.Pseudo */
        .highlight .kr { color: #990055 } /* Keyword.Reserved */
        .highlight .kt { color: #990055 } /* Keyword.Type */
        .highlight .ld { color: #000000 } /* Literal.Date */
        .highlight .m { color: #000000 } /* Literal.Number */
        .highlight .s { color: #a67f59 } /* Literal.String */
        .highlight .na { color: #0077aa } /* Name.Attribute */
        .highlight .nc { color: #0077aa } /* Name.Class */
        .highlight .no { color: #0077aa } /* Name.Constant */
        .highlight .nd { color: #0077aa } /* Name.Decorator */
        .highlight .ni { color: #0077aa } /* Name.Entity */
        .highlight .ne { color: #0077aa } /* Name.Exception */
        .highlight .nf { color: #0077aa } /* Name.Function */
        .highlight .nl { color: #0077aa } /* Name.Label */
        .highlight .nn { color: #0077aa } /* Name.Namespace */
        .highlight .py { color: #0077aa } /* Name.Property */
        .highlight .nt { color: #669900 } /* Name.Tag */
        .highlight .nv { color: #222222 } /* Name.Variable */
        .highlight .ow { color: #999999 } /* Operator.Word */
        .highlight .mb { color: #000000 } /* Literal.Number.Bin */
        .highlight .mf { color: #000000 } /* Literal.Number.Float */
        .highlight .mh { color: #000000 } /* Literal.Number.Hex */
        .highlight .mi { color: #000000 } /* Literal.Number.Integer */
        .highlight .mo { color: #000000 } /* Literal.Number.Oct */
        .highlight .sb { color: #a67f59 } /* Literal.String.Backtick */
        .highlight .sc { color: #a67f59 } /* Literal.String.Char */
        .highlight .sd { color: #a67f59 } /* Literal.String.Doc */
        .highlight .s2 { color: #a67f59 } /* Literal.String.Double */
        .highlight .se { color: #a67f59 } /* Literal.String.Escape */
        .highlight .sh { color: #a67f59 } /* Literal.String.Heredoc */
        .highlight .si { color: #a67f59 } /* Literal.String.Interpol */
        .highlight .sx { color: #a67f59 } /* Literal.String.Other */
        .highlight .sr { color: #a67f59 } /* Literal.String.Regex */
        .highlight .s1 { color: #a67f59 } /* Literal.String.Single */
        .highlight .ss { color: #a67f59 } /* Literal.String.Symbol */
        .highlight .vc { color: #0077aa } /* Name.Variable.Class */
        .highlight .vg { color: #0077aa } /* Name.Variable.Global */
        .highlight .vi { color: #0077aa } /* Name.Variable.Instance */
        .highlight .il { color: #000000 } /* Literal.Number.Integer.Long */
        </style> 
 </head>
 <body class="h-entry"> 
  <div class="head"> 
   <p data-fill-with="logo"></p> 
   <h1 class="p-name no-ref" id="title">Object Recognition JavaScript API</h1> 
   <h2 class="no-num no-toc no-ref heading settled" id="subtitle"><span class="content">Living Standard, <time class="dt-updated" datetime="2017-02-24">24 February 2017</time></span></h2> 
   <div data-fill-with="spec-metadata"> 
    <dl> 
     <dt>
      This version: 
     </dt>
     <dd>
      <a class="u-url" href="https://github.com/01org/node-realsense">https://github.com/01org/node-realsense</a> 
     </dd>
     <dt>
      Issue Tracking: 
     </dt>
     <dd>
      <a href="https://github.com/01org/node-realsense/issues/">GitHub</a> 
     </dd>
     <dt class="editor">
      Editor: 
     </dt>
     <dd class="editor p-author h-card vcard">
      <span class="p-name fn">Kenny Yuan</span> 
     </dd>
    </dl> 
   </div> 
   <div data-fill-with="warning"></div> 
   <p class="copyright" data-fill-with="copyright"><a href="http://creativecommons.org/publicdomain/zero/1.0/" rel="license"><img alt="CC0" src="https://licensebuttons.net/p/zero/1.0/80x15.png"></a> To the extent possible under law, the editors have waived all copyright and related or neighboring rights to this work. In addition, as of 24 February 2017, the editors have made this specification available under the <a href="http://www.openwebfoundation.org/legal/the-owf-1-0-agreements/owfa-1-0" rel="license">Open Web Foundation Agreement Version 1.0</a>, which is available at http://www.openwebfoundation.org/legal/the-owf-1-0-agreements/owfa-1-0. Parts of this work may be from another specification document. If so, those parts are instead covered by the license of that specification document. </p> 
   <hr title="Separator for header"> 
  </div> 
  <h2 class="no-num no-toc no-ref heading settled" id="abstract"><span class="content">Abstract</span></h2> 
  <div class="p-summary" data-fill-with="abstract"> 
   <p>This specification describes the Object Recognition JavaScript API for Intel® RealSense camera.</p> 
  </div> 
  <div data-fill-with="at-risk"></div> 
  <nav data-fill-with="table-of-contents" id="toc"> 
   <h2 class="no-num no-toc no-ref" id="contents">Table of Contents</h2> 
   <ol class="toc" role="directory"> 
    <li><a href="#introduction"><span class="secno">1</span> <span class="content">Introduction</span></a> </li>
    <li> <a href="#interface"><span class="secno">2</span> <span class="content">Interface</span></a> 
     <ol class="toc"> 
      <li> <a href="#moduleInterface"><span class="secno">2.1</span> <span class="content"><span>Module</span></span></a> 
       <ol class="toc"> 
        <li><a href="#methods-moduleInterface"><span class="secno">2.1.1</span> <span class="content">Methods</span></a> </li>
       </ol> </li>
      <li> <a href="#objectRecognizerInterface"><span class="secno">2.2</span> <span class="content"><span>ObjectRecognizer</span></span></a> 
       <ol class="toc"> 
        <li><a href="#attributes-1"><span class="secno">2.2.1</span> <span class="content">Attributes</span></a> </li>
        <li><a href="#methods-1"><span class="secno">2.2.2</span> <span class="content">Methods</span></a> </li>
        <li><a href="#events-1"><span class="secno">2.2.3</span> <span class="content">Events</span></a> </li>
       </ol> </li>
      <li> <a href="#recognitionInfo"><span class="secno">2.3</span> <span class="content"><span>RecognitionInfo</span></span></a> 
       <ol class="toc"> 
        <li><a href="#attributes-recognitionInfo"><span class="secno">2.3.1</span> <span class="content">Attributes</span></a> </li>
       </ol> </li>
      <li> <a href="#localizationInfo"><span class="secno">2.4</span> <span class="content"><span>LocalizationInfo</span></span></a> 
       <ol class="toc"> 
        <li><a href="#attributes-localizationInfo"><span class="secno">2.4.1</span> <span class="content">Attributes</span></a> </li>
       </ol> </li>
      <li> <a href="#trackingInfo"><span class="secno">2.5</span> <span class="content"><span>TrackingInfo</span></span></a> 
       <ol class="toc"> 
        <li><a href="#attributes-trackingInfo"><span class="secno">2.5.1</span> <span class="content">Attributes</span></a> </li>
       </ol> </li>
     </ol> </li>
    <li> <a href="#dictionaries"><span class="secno">3</span> <span class="content">Dictionaries</span></a> 
     <ol class="toc"> 
      <li> <a href="#objectRecognitionOptions"><span class="secno">3.1</span> <span class="content"><span>ObjectRecognitionOptions</span></span></a> 
       <ol class="toc"> 
        <li><a href="#objectRecognitionOptionsMembers"><span class="secno">3.1.1</span> <span class="content">Dictionary <span>ObjectRecognitionOptions</span> Members</span></a> </li>
       </ol> </li>
     </ol> </li>
    <li> <a href="#enumerators"><span class="secno">4</span> <span class="content">Enumerators</span></a> 
     <ol class="toc"> 
      <li><a href="#RecognitionMode"><span class="secno">4.1</span> <span class="content"><span>RecognitionMode</span> enum</span></a> </li>
      <li><a href="#ComputeEngine"><span class="secno">4.2</span> <span class="content"><span>ComputeEngine</span> enum</span></a> </li>
      <li><a href="#ObjectRecognitionState"><span class="secno">4.3</span> <span class="content"><span>ObjectRecognitionState</span> enum</span></a> </li>
     </ol> </li>
    <li><a href="#examples"><span class="secno">5</span> <span class="content">Examples</span></a> </li>
    <li><a href="#conformance"><span class="secno"></span> <span class="content"> Conformance</span></a> </li>
    <li> <a href="#index"><span class="secno"></span> <span class="content">Index</span></a> 
     <ol class="toc"> 
      <li><a href="#index-defined-here"><span class="secno"></span> <span class="content">Terms defined by this specification</span></a> </li>
      <li><a href="#index-defined-elsewhere"><span class="secno"></span> <span class="content">Terms defined by reference</span></a> </li>
     </ol> </li>
    <li> <a href="#references"><span class="secno"></span> <span class="content">References</span></a> 
     <ol class="toc"> 
      <li><a href="#normative"><span class="secno"></span> <span class="content">Normative References</span></a> </li>
     </ol> </li>
    <li><a href="#idl-index"><span class="secno"></span> <span class="content">IDL Index</span></a> </li>
   </ol> 
  </nav> 
  <main> 
   <h2 class="heading settled" data-level="1" id="introduction"><span class="secno">1. </span><span class="content">Introduction</span><a class="self-link" href="#introduction"></a></h2> 
   <p>The APIs described in this document are exposed through <code>realsense-object-recognition</code> module.</p> 
   <h2 class="heading settled" data-level="2" id="interface"><span class="secno">2. </span><span class="content">Interface</span><a class="self-link" href="#interface"></a></h2> 
   <h3 class="heading settled" data-level="2.1" id="moduleInterface"><span class="secno">2.1. </span><span class="content"><dfn data-dfn-type="dfn" data-noexport="" id="module">Module<a class="self-link" href="#module"></a></dfn></span><a class="self-link" href="#moduleInterface"></a></h3> 
   <pre class="idl highlight def"><span class="kt">partial</span> <span class="kt">interface</span> <a class="nv idl-code" data-link-type="interface">Module</a> {
  <span class="kt">static</span> <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name" href="#objectrecognizer0" id="ref-for-objectrecognizer0-1">ObjectRecognizer</a>&gt; <dfn class="nv idl-code" data-dfn-for="Module" data-dfn-type="method" data-export="" data-lt="createObjectRecognizer(options, cameraOptions)|createObjectRecognizer(options)|createObjectRecognizer()" id="dom-module-createobjectrecognizer">createObjectRecognizer<a class="self-link" href="#dom-module-createobjectrecognizer"></a></dfn>(<span class="kt">optional</span> <a class="n" data-link-type="idl-name" href="#dictdef-objectrecognitionoptions" id="ref-for-dictdef-objectrecognitionoptions-1">ObjectRecognitionOptions</a> <dfn class="nv idl-code" data-dfn-for="Module/createObjectRecognizer(options, cameraOptions), Module/createObjectRecognizer(options), Module/createObjectRecognizer()" data-dfn-type="argument" data-export="" id="dom-module-createobjectrecognizer-options-cameraoptions-options">options<a class="self-link" href="#dom-module-createobjectrecognizer-options-cameraoptions-options"></a></dfn>, <span class="kt">optional</span> <a class="n" data-link-type="idl-name">CameraOptions</a> <dfn class="nv idl-code" data-dfn-for="Module/createObjectRecognizer(options, cameraOptions), Module/createObjectRecognizer(options), Module/createObjectRecognizer()" data-dfn-type="argument" data-export="" id="dom-module-createobjectrecognizer-options-cameraoptions-cameraoptions">cameraOptions<a class="self-link" href="#dom-module-createobjectrecognizer-options-cameraoptions-cameraoptions"></a></dfn>);
};
</pre> 
   <h4 class="heading settled" data-level="2.1.1" id="methods-moduleInterface"><span class="secno">2.1.1. </span><span class="content">Methods</span><a class="self-link" href="#methods-moduleInterface"></a></h4> 
   <dl> 
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl">createObjectRecognizer</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Use this static method to create an Object Recognition instance. An object recognizer is a running unit that can connect to an Intel® RealSense camera and perform object recognition algorithm.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;<a data-link-type="dfn" href="#objectrecognizer" id="ref-for-objectrecognizer-1">ObjectRecognizer</a>&gt;</code></p> 
    </dd>
   </dl> 
   <h3 class="heading settled" data-level="2.2" id="objectRecognizerInterface"><span class="secno">2.2. </span><span class="content"><dfn class="dfn-paneled" data-dfn-type="dfn" data-noexport="" id="objectrecognizer">ObjectRecognizer</dfn></span><a class="self-link" href="#objectRecognizerInterface"></a></h3> 
   <pre class="idl highlight def"><span class="kt">interface</span> <dfn class="nv dfn-paneled idl-code" data-dfn-type="interface" data-export="" id="objectrecognizer0">ObjectRecognizer</dfn> {
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name" href="#enumdef-objectrecognitionstate" id="ref-for-enumdef-objectrecognitionstate-1">ObjectRecognitionState</a> <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="attribute" data-export="" data-readonly="" data-type="ObjectRecognitionState" id="dom-objectrecognizer-state">state</dfn>;

  <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name">CameraOptions</a>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="getCameraOptions()" id="dom-objectrecognizer-getcameraoptions">getCameraOptions<a class="self-link" href="#dom-objectrecognizer-getcameraoptions"></a></dfn>();
  <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name" href="#dictdef-objectrecognitionoptions" id="ref-for-dictdef-objectrecognitionoptions-2">ObjectRecognitionOptions</a>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="getObjectRecognitionOptions()" id="dom-objectrecognizer-getobjectrecognitionoptions">getObjectRecognitionOptions<a class="self-link" href="#dom-objectrecognizer-getobjectrecognitionoptions"></a></dfn>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="setCameraOptions(options)" id="dom-objectrecognizer-setcameraoptions">setCameraOptions<a class="self-link" href="#dom-objectrecognizer-setcameraoptions"></a></dfn>(<a class="n" data-link-type="idl-name">CameraOptions</a> <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer/setCameraOptions(options)" data-dfn-type="argument" data-export="" id="dom-objectrecognizer-setcameraoptions-options-options">options<a class="self-link" href="#dom-objectrecognizer-setcameraoptions-options-options"></a></dfn>);
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="setObjectRecognitionOptions(options)|setObjectRecognitionOptions()" id="dom-objectrecognizer-setobjectrecognitionoptions">setObjectRecognitionOptions<a class="self-link" href="#dom-objectrecognizer-setobjectrecognitionoptions"></a></dfn>(<span class="kt">optional</span> <a class="n" data-link-type="idl-name" href="#dictdef-objectrecognitionoptions" id="ref-for-dictdef-objectrecognitionoptions-3">ObjectRecognitionOptions</a> <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer/setObjectRecognitionOptions(options), ObjectRecognizer/setObjectRecognitionOptions()" data-dfn-type="argument" data-export="" id="dom-objectrecognizer-setobjectrecognitionoptions-options-options">options<a class="self-link" href="#dom-objectrecognizer-setobjectrecognitionoptions-options-options"></a></dfn>);

  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="start()" id="dom-objectrecognizer-start">start<a class="self-link" href="#dom-objectrecognizer-start"></a></dfn>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="stop()" id="dom-objectrecognizer-stop">stop<a class="self-link" href="#dom-objectrecognizer-stop"></a></dfn>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="pause()" id="dom-objectrecognizer-pause">pause<a class="self-link" href="#dom-objectrecognizer-pause"></a></dfn>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="resume()" id="dom-objectrecognizer-resume">resume<a class="self-link" href="#dom-objectrecognizer-resume"></a></dfn>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="reset()" id="dom-objectrecognizer-reset">reset<a class="self-link" href="#dom-objectrecognizer-reset"></a></dfn>();

  <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name">FrameData</a>&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="getFrameData()" id="dom-objectrecognizer-getframedata">getFrameData<a class="self-link" href="#dom-objectrecognizer-getframedata"></a></dfn>();

  <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name">String</a>[]&gt; <dfn class="nv idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="method" data-export="" data-lt="getRecognizableObjectNames()" id="dom-objectrecognizer-getrecognizableobjectnames">getRecognizableObjectNames<a class="self-link" href="#dom-objectrecognizer-getrecognizableobjectnames"></a></dfn>();

  <span class="kt">attribute</span> <a class="n" data-link-type="idl-name" href="https://html.spec.whatwg.org/multipage/webappapis.html#eventhandler">EventHandler</a> <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="attribute" data-export="" data-type="EventHandler" id="dom-objectrecognizer-onrecognition">onrecognition</dfn>;
  <span class="kt">attribute</span> <a class="n" data-link-type="idl-name" href="https://html.spec.whatwg.org/multipage/webappapis.html#eventhandler">EventHandler</a> <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="attribute" data-export="" data-type="EventHandler" id="dom-objectrecognizer-onlocalization">onlocalization</dfn>;
  <span class="kt">attribute</span> <a class="n" data-link-type="idl-name" href="https://html.spec.whatwg.org/multipage/webappapis.html#eventhandler">EventHandler</a> <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognizer" data-dfn-type="attribute" data-export="" data-type="EventHandler" id="dom-objectrecognizer-ontracking">ontracking</dfn>;
};
</pre> 
   <h4 class="heading settled" data-level="2.2.1" id="attributes-1"><span class="secno">2.2.1. </span><span class="content">Attributes</span><a class="self-link" href="#attributes-1"></a></h4> 
   <dl> 
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-objectrecognizer-state" id="ref-for-dom-objectrecognizer-state-1">state</a></code> of type <a data-link-type="dfn" href="#objectrecognitionstate" id="ref-for-objectrecognitionstate-1">ObjectRecognitionState</a>, readonly</p> 
    </dt>
    <dd data-md=""> 
     <p>The current state of the Object Recognition instance.</p> 
    </dd>
   </dl> 
   <h4 class="heading settled" data-level="2.2.2" id="methods-1"><span class="secno">2.2.2. </span><span class="content">Methods</span><a class="self-link" href="#methods-1"></a></h4> 
   <dl> 
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl">GetCameraOptions</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Get the current options of Intel® RealSense camera.</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled with current <a data-link-type="dfn">CameraOptions</a> containing ImageStreamConfig and MotionSensorConfig if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>No parameters.</em></p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;<a data-link-type="dfn">CameraOptions</a>&gt;</code></p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl">setCameraOptions</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Setup the Intel® RealSense camera. Providing the items that you want to override the default ones.</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
   </dl> 
   <table class="argumentdef data"> 
    <caption>
     Arguments for the 
     <a class="idl-code" data-link-type="method">ObjectRecognizer.setCameraOptions(CameraOptions options)</a> method.
    </caption> 
    <thead> 
     <tr> 
      <th>Parameter </th>
      <th>Type </th>
      <th>Nullable </th>
      <th>Optional </th>
      <th>Description </th>
     </tr>
    </thead>
    <tbody> 
     <tr> 
      <td><dfn class="idl-code" data-dfn-for="ObjectRecognizer/setCameraOptions(CameraOptions options)" data-dfn-type="argument" data-export="" id="dom-objectrecognizer-setcameraoptions-cameraoptions-options-options">options<a class="self-link" href="#dom-objectrecognizer-setcameraoptions-cameraoptions-options-options"></a></dfn> </td>
      <td> CameraOptions </td>
      <td> <span class="no">?</span> </td>
      <td> <span class="no">?</span> </td>
      <td>The camera configure containing the image stream configure for color, depth, fisheye and the motion sensor configure for accelerator, gyroscope. </td>
     </tr>
    </tbody>
   </table> 
   <p>The following options for <code>color</code> and <code>depth</code> stream in camera options are supported by Object Recognition module.</p> 
   <p>Other options that are supported by Intel® RealSense camera wont be supported in Object Recognition module.</p> 
   <table class="data"> 
    <thead> 
     <tr> 
      <th>Index </th>
      <th>Color Stream </th>
      <th>Depth Stream </th>
      <th>FPS </th>
     </tr>
    </thead>
    <tbody> 
     <tr> 
      <td>1 </td>
      <td>1920x1080 </td>
      <td>628x468 </td>
      <td>30 </td>
     </tr>
     <tr> 
     </tr>
     <tr> 
      <td>2 </td>
      <td>1920x1080 </td>
      <td>320x240 </td>
      <td>30 </td>
     </tr>
     <tr> 
     </tr>
     <tr> 
      <td>3 </td>
      <td>1920x1080 </td>
      <td>480x360 </td>
      <td>30 </td>
     </tr>
     <tr> 
     </tr>
     <tr> 
      <td>4 </td>
      <td>640x480 </td>
      <td>628x468 </td>
      <td>30 </td>
     </tr>
     <tr> 
     </tr>
     <tr> 
      <td>5 </td>
      <td>640x480 </td>
      <td>640x480 </td>
      <td>30 </td>
     </tr>
     <tr> 
     </tr>
     <tr> 
      <td>6 </td>
      <td>640x480 </td>
      <td>320x240 </td>
      <td>30 </td>
     </tr>
     <tr> 
     </tr>
    </tbody>
   </table> 
   <dl> 
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;void&gt;</code></p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl">getObjectRecognitionOptions</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Get the current options of object recognition algorithm.</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled with current <a data-link-type="dfn" href="#objectrecognitionoptions" id="ref-for-objectrecognitionoptions-1">ObjectRecognitionOptions</a> if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>No parameters.</em></p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;<a data-link-type="dfn" href="#objectrecognitionoptions" id="ref-for-objectrecognitionoptions-2">ObjectRecognitionOptions</a>&gt;</code></p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl">setObjectRecognitionOptions</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Setup the object recognition algorithm. Providing the items that you want to override the default ones.</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;void&gt;</code></p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="https://w3c.github.io/FileAPI/#dfn-start">start</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Start the Intel® RealSense camera capture, and then perform object recognition algorithm</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;void&gt;</code></p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="https://w3c.github.io/sensors/#dom-sensor-stop">stop</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Stop the Intel® RealSense camera and object recognition algorithm</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;void&gt;</code></p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl">pause</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Pause the Intel® RealSense camera and object recognition algorithm</p> 
    </dd>
    <dd data-md=""> 
     <p>Unlike stop(), this wont free any internal resources, e.g. the Intel® RealSense camera will be still working.</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;void&gt;</code></p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl">resume</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Resume the Intel® RealSense camera and object recognition algorithm</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;void&gt;</code></p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="https://wicg.github.io/webusb/#dom-usbdevice-reset">reset</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Reset the instance state to default as if it were just created, release as much resource as possible</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;void&gt;</code></p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl">getRecognizableObjectNames</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>Get a list of all the names of objects that can be recognized.</p> 
    </dd>
    <dd data-md=""> 
     <p>This method returns a promise. The promise will be fulfilled if there are no errors. The promise will be rejected with the Exception object if there is a failure.</p> 
    </dd>
    <dd data-md=""> 
     <p><em>Return type</em>: <code>Promise&lt;String[]&gt;</code>. Below is a typical list of all recognizable objects</p> 
     <pre>    1._0background 2.cake 3.cup 4.light 5.pillow 6.stove_top
    7.area_rug 8.can 9.dishwasher 10.light_switch 11.refrigerator
    12.table 13.bag 14.cat 15.dog 16.microwave 17.shoes 18.toilet 19.bed
    20.chair 21.dresser 22.monitor 23.sink 24.toys 25.bookcase 26.clock
    27.garbagebin 28.open_door 29.smartphone 30.tv_remote 31.bottle
    32.closed_door 33.houseplant 34.oven 35.soccer_ball 36.washing_machine
    37.cabinet 38.closet 39.laptop 40.picture 41.sofa 42.window
</pre> 
    </dd>
   </dl> 
   <h4 class="heading settled" data-level="2.2.3" id="events-1"><span class="secno">2.2.3. </span><span class="content">Events</span><a class="self-link" href="#events-1"></a></h4> 
   <dl> 
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-objectrecognizer-onrecognition" id="ref-for-dom-objectrecognizer-onrecognition-1">onrecognition</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>This event will be fired when there is a new recognition result</p> 
    </dd>
    <dd data-md=""> 
     <p class="note" role="note">Note: this is just a notation, the underlying mechanism is the <code>EventEmitter</code> of <code>Node.js</code>, please use <code>objectRecognizer.on('recognition', function(e) { ... })</code> to handle the event</p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-objectrecognizer-onlocalization" id="ref-for-dom-objectrecognizer-onlocalization-1">onlocalization</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>This event will be fired when there is a new localization result</p> 
    </dd>
    <dd data-md=""> 
     <p class="note" role="note">Note: this is just a notation, the underlying mechanism is the <code>EventEmitter</code> of <code>Node.js</code>, please use <code>objectRecognizer.on('localization', function(e) { ... })</code> to handle the event</p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-objectrecognizer-ontracking" id="ref-for-dom-objectrecognizer-ontracking-1">ontracking</a></code></p> 
    </dt>
    <dd data-md=""> 
     <p>This event will be fired when there is a new tracking result</p> 
    </dd>
    <dd data-md=""> 
     <p class="note" role="note">Note: this is just a notation, the underlying mechanism is the <code>EventEmitter</code> of <code>Node.js</code>, please use <code>objectRecognizer.on('tracking', function(e) { ... })</code> to handle the event</p> 
    </dd>
   </dl> 
   <h3 class="heading settled" data-level="2.3" id="recognitionInfo"><span class="secno">2.3. </span><span class="content"><dfn data-dfn-type="dfn" data-noexport="" id="recognitioninfo">RecognitionInfo<a class="self-link" href="#recognitioninfo"></a></dfn></span><a class="self-link" href="#recognitionInfo"></a></h3> 
   <pre class="idl highlight def"><span class="kt">interface</span> <dfn class="nv idl-code" data-dfn-type="interface" data-export="" id="recognitioninfo0">RecognitionInfo<a class="self-link" href="#recognitioninfo0"></a></dfn> {
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">String</a>       <dfn class="nv dfn-paneled idl-code" data-dfn-for="RecognitionInfo" data-dfn-type="attribute" data-export="" data-readonly="" data-type="String" id="dom-recognitioninfo-label">label</dfn>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <span class="kt">float</span>        <dfn class="nv dfn-paneled idl-code" data-dfn-for="RecognitionInfo" data-dfn-type="attribute" data-export="" data-readonly="" data-type="float" id="dom-recognitioninfo-probability">probability</dfn>;
};
</pre> 
   <h4 class="heading settled" data-level="2.3.1" id="attributes-recognitionInfo"><span class="secno">2.3.1. </span><span class="content">Attributes</span><a class="self-link" href="#attributes-recognitionInfo"></a></h4> 
   <dl> 
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-recognitioninfo-label" id="ref-for-dom-recognitioninfo-label-1">label</a></code> of type <code>String</code>, readonly</p> 
    </dt>
    <dd data-md=""> 
     <p>The current recognized object name</p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-recognitioninfo-probability" id="ref-for-dom-recognitioninfo-probability-1">probability</a></code> of type <code>float</code>, readonly</p> 
    </dt>
    <dd data-md=""> 
     <p>The current probability/confidence of that recognized object.</p> 
    </dd>
   </dl> 
   <h3 class="heading settled" data-level="2.4" id="localizationInfo"><span class="secno">2.4. </span><span class="content"><dfn data-dfn-type="dfn" data-noexport="" id="localizationinfo">LocalizationInfo<a class="self-link" href="#localizationinfo"></a></dfn></span><a class="self-link" href="#localizationInfo"></a></h3> 
   <pre class="idl highlight def"><span class="kt">interface</span> <dfn class="nv idl-code" data-dfn-type="interface" data-export="" id="localizationinfo0">LocalizationInfo<a class="self-link" href="#localizationinfo0"></a></dfn> {
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">String</a>       <dfn class="nv idl-code" data-dfn-for="LocalizationInfo" data-dfn-type="attribute" data-export="" data-readonly="" data-type="String" id="dom-localizationinfo-label">label<a class="self-link" href="#dom-localizationinfo-label"></a></dfn>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <span class="kt">float</span>        <dfn class="nv idl-code" data-dfn-for="LocalizationInfo" data-dfn-type="attribute" data-export="" data-readonly="" data-type="float" id="dom-localizationinfo-probability">probability<a class="self-link" href="#dom-localizationinfo-probability"></a></dfn>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">Rect2D</a>       <dfn class="nv dfn-paneled idl-code" data-dfn-for="LocalizationInfo" data-dfn-type="attribute" data-export="" data-readonly="" data-type="Rect2D" id="dom-localizationinfo-roi">roi</dfn>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">Point3D</a>      <dfn class="nv dfn-paneled idl-code" data-dfn-for="LocalizationInfo" data-dfn-type="attribute" data-export="" data-readonly="" data-type="Point3D" id="dom-localizationinfo-objectcenter">objectCenter</dfn>;
};
</pre> 
   <h4 class="heading settled" data-level="2.4.1" id="attributes-localizationInfo"><span class="secno">2.4.1. </span><span class="content">Attributes</span><a class="self-link" href="#attributes-localizationInfo"></a></h4> 
   <dl> 
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-recognitioninfo-label" id="ref-for-dom-recognitioninfo-label-2">label</a></code> of type <code>String</code>, readonly</p> 
    </dt>
    <dd data-md=""> 
     <p>The current recognized object name</p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-recognitioninfo-probability" id="ref-for-dom-recognitioninfo-probability-2">probability</a></code> of type <code>float</code>, readonly</p> 
    </dt>
    <dd data-md=""> 
     <p>The current probability/confidence of that recognized object.</p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-localizationinfo-roi" id="ref-for-dom-localizationinfo-roi-1">roi</a></code> of type <a data-link-type="dfn">Rect2D</a>, readonly</p> 
    </dt>
    <dd data-md=""> 
     <p>The Region of Interest of that recognized object</p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-localizationinfo-objectcenter" id="ref-for-dom-localizationinfo-objectcenter-1">objectCenter</a></code> of type <a data-link-type="dfn">Point3D</a>, readonly</p> 
    </dt>
    <dd data-md=""> 
     <p>The center point of that recognized object</p> 
    </dd>
   </dl> 
   <h3 class="heading settled" data-level="2.5" id="trackingInfo"><span class="secno">2.5. </span><span class="content"><dfn data-dfn-type="dfn" data-noexport="" id="trackinginfo">TrackingInfo<a class="self-link" href="#trackinginfo"></a></dfn></span><a class="self-link" href="#trackingInfo"></a></h3> 
   <pre class="idl highlight def"><span class="kt">interface</span> <dfn class="nv idl-code" data-dfn-type="interface" data-export="" id="trackinginfo0">TrackingInfo<a class="self-link" href="#trackinginfo0"></a></dfn> {
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">Rect2D</a>       <dfn class="nv idl-code" data-dfn-for="TrackingInfo" data-dfn-type="attribute" data-export="" data-readonly="" data-type="Rect2D" id="dom-trackinginfo-roi">roi<a class="self-link" href="#dom-trackinginfo-roi"></a></dfn>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">Point3D</a>      <dfn class="nv idl-code" data-dfn-for="TrackingInfo" data-dfn-type="attribute" data-export="" data-readonly="" data-type="Point3D" id="dom-trackinginfo-objectcenter">objectCenter<a class="self-link" href="#dom-trackinginfo-objectcenter"></a></dfn>;
};
</pre> 
   <h4 class="heading settled" data-level="2.5.1" id="attributes-trackingInfo"><span class="secno">2.5.1. </span><span class="content">Attributes</span><a class="self-link" href="#attributes-trackingInfo"></a></h4> 
   <dl> 
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-localizationinfo-roi" id="ref-for-dom-localizationinfo-roi-2">roi</a></code> of type <a data-link-type="dfn">Rect2D</a>, readonly</p> 
    </dt>
    <dd data-md=""> 
     <p>The Region of Interest of that recognized object</p> 
    </dd>
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-localizationinfo-objectcenter" id="ref-for-dom-localizationinfo-objectcenter-2">objectCenter</a></code> of type <a data-link-type="dfn">Point3D</a>, readonly</p> 
    </dt>
    <dd data-md=""> 
     <p>The center point of that recognized object</p> 
    </dd>
   </dl> 
   <h2 class="heading settled" data-level="3" id="dictionaries"><span class="secno">3. </span><span class="content">Dictionaries</span><a class="self-link" href="#dictionaries"></a></h2> 
   <h3 class="heading settled" data-level="3.1" id="objectRecognitionOptions"><span class="secno">3.1. </span><span class="content"><dfn class="dfn-paneled" data-dfn-type="dfn" data-noexport="" id="objectrecognitionoptions">ObjectRecognitionOptions</dfn></span><a class="self-link" href="#objectRecognitionOptions"></a></h3> 
   <pre class="idl highlight def"><span class="kt">dictionary</span> <dfn class="nv dfn-paneled idl-code" data-dfn-type="dictionary" data-export="" id="dictdef-objectrecognitionoptions">ObjectRecognitionOptions</dfn> {
  <a class="n" data-link-type="idl-name" href="#enumdef-recognitionmode" id="ref-for-enumdef-recognitionmode-1">RecognitionMode</a>   <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognitionOptions" data-dfn-type="dict-member" data-export="" data-type="RecognitionMode   " id="dom-objectrecognitionoptions-mode">mode</dfn>;
  <span class="kt">float</span>             <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognitionOptions" data-dfn-type="dict-member" data-export="" data-type="float             " id="dom-objectrecognitionoptions-confidencethreshold">confidenceThreshold</dfn>;
  <a class="n" data-link-type="idl-name" href="#enumdef-computeengine" id="ref-for-enumdef-computeengine-1">ComputeEngine</a>     <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognitionOptions" data-dfn-type="dict-member" data-export="" data-type="ComputeEngine     " id="dom-objectrecognitionoptions-computeengine">computeEngine</dfn>;
  <span class="kt">boolean</span>           <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognitionOptions" data-dfn-type="dict-member" data-export="" data-type="boolean           " id="dom-objectrecognitionoptions-enablesegmentation">enableSegmentation</dfn>;
  <span class="kt">long</span>              <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognitionOptions" data-dfn-type="dict-member" data-export="" data-type="long              " id="dom-objectrecognitionoptions-maxreturnobjectcount">maxReturnObjectCount</dfn>;
  <span class="kt">boolean</span>           <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognitionOptions" data-dfn-type="dict-member" data-export="" data-type="boolean           " id="dom-objectrecognitionoptions-enableobjectcenterestimation">enableObjectCenterEstimation</dfn>;
  <a class="n" data-link-type="idl-name">String</a>            <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognitionOptions" data-dfn-type="dict-member" data-export="" data-type="String            " id="dom-objectrecognitionoptions-activeclassifier">activeClassifier</dfn>;
  <a class="n" data-link-type="idl-name">Rect2D</a>            <dfn class="nv idl-code" data-dfn-for="ObjectRecognitionOptions" data-dfn-type="dict-member" data-export="" data-type="Rect2D            " id="dom-objectrecognitionoptions-roi">roi<a class="self-link" href="#dom-objectrecognitionoptions-roi"></a></dfn>;
  <a class="n" data-link-type="idl-name">Rect2D</a>[]          <dfn class="nv dfn-paneled idl-code" data-dfn-for="ObjectRecognitionOptions" data-dfn-type="dict-member" data-export="" data-type="Rect2D[]          " id="dom-objectrecognitionoptions-trackingroi">trackingRoi</dfn>;
};

</pre> 
   <h4 class="heading settled" data-level="3.1.1" id="objectRecognitionOptionsMembers"><span class="secno">3.1.1. </span><span class="content">Dictionary <a data-link-type="dfn" href="#objectrecognitionoptions" id="ref-for-objectrecognitionoptions-3">ObjectRecognitionOptions</a> Members</span><a class="self-link" href="#objectRecognitionOptionsMembers"></a></h4> 
   <dl> 
    <dt data-md=""> 
     <p><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionoptions-mode" id="ref-for-dom-objectrecognitionoptions-mode-1">mode</a></code> of type <code><a data-link-type="dfn" href="#recognitionmode" id="ref-for-recognitionmode-1">RecognitionMode</a></code></p> 
     <code> </code> 
    </dt>
    <dd data-md=""> 
     <p><code>Set the working mode of object recognition algorithm.</code></p> 
     <code> </code> 
    </dd>
    <dt data-md=""> 
     <p><code><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionoptions-confidencethreshold" id="ref-for-dom-objectrecognitionoptions-confidencethreshold-1">confidenceThreshold</a></code> of type <code>float</code></code></p> 
     <code> </code> 
    </dt>
    <dd data-md=""> 
     <p><code>Set the "confidence" threshold, which describes how certain the classifier is in its prediction. All recognized objects with confidence value less than the threshold won not be sent out as recognition result.</code></p> 
     <code> </code> 
    </dd>
    <dt data-md=""> 
     <p><code><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionoptions-computeengine" id="ref-for-dom-objectrecognitionoptions-computeengine-1">computeEngine</a></code> of type <a data-link-type="dfn" href="#computeengine" id="ref-for-computeengine-1">ComputeEngine</a></code></p> 
     <code> </code> 
    </dt>
    <dd data-md=""> 
     <p><code>Setup the Object Recognition algorithm to use CPU or GPU</code></p> 
     <code> </code> 
    </dd>
    <dt data-md=""> 
     <p><code><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionoptions-enablesegmentation" id="ref-for-dom-objectrecognitionoptions-enablesegmentation-1">enableSegmentation</a></code> of type <code>boolean</code></code></p> 
     <code> </code> 
    </dt>
    <dd data-md=""> 
     <p><code>Set to enable segmentation or not</code></p> 
     <code> </code> 
    </dd>
    <dt data-md=""> 
     <p><code><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionoptions-maxreturnobjectcount" id="ref-for-dom-objectrecognitionoptions-maxreturnobjectcount-1">maxReturnObjectCount</a></code> of type <code>long</code></code></p> 
     <code> </code> 
    </dt>
    <dd data-md=""> 
     <p><code>Set the maximum number of recognized objects for the object recognition algorithm</code></p> 
     <code> </code> 
    </dd>
    <dt data-md=""> 
     <p><code><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionoptions-enableobjectcenterestimation" id="ref-for-dom-objectrecognitionoptions-enableobjectcenterestimation-1">enableObjectCenterEstimation</a></code> of type <code>boolean</code></code></p> 
     <code> </code> 
    </dt>
    <dd data-md=""> 
     <p><code>Set to enable center estimation of not.</code></p> 
     <code> </code> 
    </dd>
    <dt data-md=""> 
     <p><code><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionoptions-activeclassifier" id="ref-for-dom-objectrecognitionoptions-activeclassifier-1">activeClassifier</a></code> of type <code>String</code></code></p> 
     <code> </code> 
    </dt>
    <dd data-md=""> 
     <p><code>Set the active classier. TODO: figure out the available values for this.</code></p> 
     <code> </code> 
    </dd>
    <dt data-md=""> 
     <p><code><code class="idl"><a data-link-type="idl" href="#dom-localizationinfo-roi" id="ref-for-dom-localizationinfo-roi-3">roi</a></code> of type <code>Rect2D</code></code></p> 
     <code> </code> 
    </dt>
    <dd data-md=""> 
     <p><code>Set the ROI (region of interest) of the Object Recognition algorithm</code></p> 
     <code> </code> 
    </dd>
    <dt data-md=""> 
     <p><code><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionoptions-trackingroi" id="ref-for-dom-objectrecognitionoptions-trackingroi-1">trackingRoi</a></code> of type <code>Rect2D[]</code></code></p> 
     <code> </code> 
    </dt>
    <dd data-md=""> 
     <p><code>Set the series of ROI (region of interest) of the Object Recognition tracking algorithm</code></p> 
     <code> <pre class="note">Note: all member of ObjectRecognitionOptions are optional. Absense means do-not-change the previous or default settings.
</pre> </code> 
    </dd>
   </dl> 
   <code> <h2 class="heading settled" data-level="4" id="enumerators"><span class="secno">4. </span><span class="content">Enumerators</span><a class="self-link" href="#enumerators"></a></h2> <h3 class="heading settled" data-level="4.1" id="RecognitionMode"><span class="secno">4.1. </span><span class="content"><dfn class="dfn-paneled" data-dfn-type="dfn" data-noexport="" id="recognitionmode">RecognitionMode</dfn> enum</span><a class="self-link" href="#RecognitionMode"></a></h3> <pre class="idl highlight def"><span class="kt">enum</span> <dfn class="nv dfn-paneled idl-code" data-dfn-type="enum" data-export="" id="enumdef-recognitionmode">RecognitionMode</dfn> {
  <dfn class="s dfn-paneled idl-code" data-dfn-for="RecognitionMode" data-dfn-type="enum-value" data-export="" data-lt="&quot;tracking&quot;|tracking" id="dom-recognitionmode-tracking">"tracking"</dfn>,
  <dfn class="s dfn-paneled idl-code" data-dfn-for="RecognitionMode" data-dfn-type="enum-value" data-export="" data-lt="&quot;single-recognition&quot;|single-recognition" id="dom-recognitionmode-single-recognition">"single-recognition"</dfn>,
  <dfn class="s dfn-paneled idl-code" data-dfn-for="RecognitionMode" data-dfn-type="enum-value" data-export="" data-lt="&quot;localization&quot;|localization" id="dom-recognitionmode-localization">"localization"</dfn>
};
</pre> 
    <table class="data"> 
     <thead>
      <tr>
       <th>Member</th>
       <th>Definition </th>
      </tr>
     </thead>
     <tbody> 
      <tr> 
       <td><code class="idl"><a data-link-type="idl" href="#dom-recognitionmode-tracking" id="ref-for-dom-recognitionmode-tracking-1">"tracking"</a></code> </td>
       <td>Set the object recognition algorithm in tracking mode, which enables the machine to keep track of objects previously recognized and localized. </td>
      </tr>
      <tr> 
       <td><code class="idl"><a data-link-type="idl" href="#dom-recognitionmode-single-recognition" id="ref-for-dom-recognitionmode-single-recognition-1">"single-recognition"</a></code> </td>
       <td>Set the object recognition algorithm in single-recognition mode, which identifies a single object in a scene. </td>
      </tr>
      <tr> 
       <td><code class="idl"><a data-link-type="idl" href="#dom-recognitionmode-localization" id="ref-for-dom-recognitionmode-localization-1">"localization"</a></code> </td>
       <td>Set the object recognition algorithm in localization mode, which identifies and locates multiple objects in a scene </td>
      </tr>
     </tbody>
    </table> <h3 class="heading settled" data-level="4.2" id="ComputeEngine"><span class="secno">4.2. </span><span class="content"><dfn class="dfn-paneled" data-dfn-type="dfn" data-noexport="" id="computeengine">ComputeEngine</dfn> enum</span><a class="self-link" href="#ComputeEngine"></a></h3> <pre class="idl highlight def"><span class="kt">enum</span> <dfn class="nv dfn-paneled idl-code" data-dfn-type="enum" data-export="" id="enumdef-computeengine">ComputeEngine</dfn> {
  <dfn class="s dfn-paneled idl-code" data-dfn-for="ComputeEngine" data-dfn-type="enum-value" data-export="" data-lt="&quot;CPU&quot;|CPU" id="dom-computeengine-cpu">"CPU"</dfn>,
  <dfn class="s dfn-paneled idl-code" data-dfn-for="ComputeEngine" data-dfn-type="enum-value" data-export="" data-lt="&quot;GPU&quot;|GPU" id="dom-computeengine-gpu">"GPU"</dfn>
};
</pre> 
    <table class="data"> 
     <thead>
      <tr>
       <th>Member</th>
       <th>Definition </th>
      </tr>
     </thead>
     <tbody> 
      <tr> 
       <td><code class="idl"><a data-link-type="idl" href="#dom-computeengine-cpu" id="ref-for-dom-computeengine-cpu-1">"CPU"</a></code> </td>
       <td>Use CPU to perform algorithm calculation. </td>
      </tr>
      <tr> 
       <td><code class="idl"><a data-link-type="idl" href="#dom-computeengine-gpu" id="ref-for-dom-computeengine-gpu-1">"GPU"</a></code> </td>
       <td>Use GPU to perform algorithm calculation. Generally speaking, <code>GPU</code> option is much faster than <code>CPU</code>. </td>
      </tr>
     </tbody>
    </table> <h3 class="heading settled" data-level="4.3" id="ObjectRecognitionState"><span class="secno">4.3. </span><span class="content"><dfn class="dfn-paneled" data-dfn-type="dfn" data-noexport="" id="objectrecognitionstate">ObjectRecognitionState</dfn> enum</span><a class="self-link" href="#ObjectRecognitionState"></a></h3> <pre class="idl highlight def"><span class="kt">enum</span> <dfn class="nv dfn-paneled idl-code" data-dfn-type="enum" data-export="" id="enumdef-objectrecognitionstate">ObjectRecognitionState</dfn> {
  <dfn class="s dfn-paneled idl-code" data-dfn-for="ObjectRecognitionState" data-dfn-type="enum-value" data-export="" data-lt="&quot;ready&quot;|ready" id="dom-objectrecognitionstate-ready">"ready"</dfn>,
  <dfn class="s dfn-paneled idl-code" data-dfn-for="ObjectRecognitionState" data-dfn-type="enum-value" data-export="" data-lt="&quot;running&quot;|running" id="dom-objectrecognitionstate-running">"running"</dfn>,
  <dfn class="s dfn-paneled idl-code" data-dfn-for="ObjectRecognitionState" data-dfn-type="enum-value" data-export="" data-lt="&quot;paused&quot;|paused" id="dom-objectrecognitionstate-paused">"paused"</dfn>,
  <dfn class="s dfn-paneled idl-code" data-dfn-for="ObjectRecognitionState" data-dfn-type="enum-value" data-export="" data-lt="&quot;errored&quot;|errored" id="dom-objectrecognitionstate-errored">"errored"</dfn>
};
</pre> 
    <table class="data"> 
     <thead>
      <tr>
       <th>Member</th>
       <th>Definition </th>
      </tr>
     </thead>
     <tbody> 
      <tr> 
       <td><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionstate-ready" id="ref-for-dom-objectrecognitionstate-ready-1">"ready"</a></code> </td>
       <td>Ready to use </td>
      </tr>
      <tr> 
       <td><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionstate-running" id="ref-for-dom-objectrecognitionstate-running-1">"running"</a></code> </td>
       <td>The Intel® RealSense camera &amp; algorithm are working. </td>
      </tr>
      <tr> 
       <td><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionstate-paused" id="ref-for-dom-objectrecognitionstate-paused-1">"paused"</a></code> </td>
       <td>The Intel® RealSense camera &amp; algorithm are paused. </td>
      </tr>
      <tr> 
       <td><code class="idl"><a data-link-type="idl" href="#dom-objectrecognitionstate-errored" id="ref-for-dom-objectrecognitionstate-errored-1">"errored"</a></code> </td>
       <td>The instance is currently in a wrong state, this might happen after an error that is uncoverable </td>
      </tr>
     </tbody>
    </table> <h2 class="heading settled" data-level="5" id="examples"><span class="secno">5. </span><span class="content">Examples</span><a class="self-link" href="#examples"></a></h2> <pre class="example" id="example-3d0b621d"><a class="self-link" href="#example-3d0b621d"></a>var options = {
  mode: 'single-recognition',
  confidenceThreshold: 0.75,
  computeEngine: 'CPU',
  enableSegmentation: true,
  maxReturnObjectCount: 3,
  enableObjectCenterEstimation: false
};
var or = undefined;

addon.createObjectRecognizer().then(inst =&gt; {
  or = inst;

  console.log('1. Creating or');
  console.log(or);

  console.log('2. Setup event listeners');
  or.on('recognition', function (evt) {
    console.log('New event: ', evt);
  });

  return or.setObjectRecognitionOptions(options);
}).then(function () {
  console.log('3. Start RealSense camera');
  return or.start();
}).then(function() {
  console.log('Camera started...');
}).catch(e =&gt; {
  console.log(<code>Something was wrong ${e}</code>);
});
</pre> <pre class="example" id="example-94eb6871"><a class="self-link" href="#example-94eb6871"></a>var options = {
  mode: 'localization',
  confidenceThreshold: 0.75,
  computeEngine: 'CPU',
  enableSegmentation: true,
  maxReturnObjectCount: 3,
  enableObjectCenterEstimation: true
};
var or = undefined;

addon.createObjectRecognizer().then(objectRecognizer =&gt; {
  or = objectRecognizer;

  console.log('1. Creating or');
  // console.log(or);

  console.log('2. Setup event listeners');
  or.on('localization', function (evt) {
    console.log('New event: ', evt.label, evt.probability, evt.objectCenter, evt.roi.toString());
    or.getFrameData().then(function (info) {
      console.log(info);
    });
  });

  return or.setObjectRecognitionOptions(options);
}).then(function () {
  console.log('3. Start RealSense camera');
  return or.start();
}).then(function() {
  console.log('Camera started...');
}).catch(e =&gt; {
  console.log(<code>Something was wrong ${e}</code>);
});
</pre> </code> 
  </main> 
  <code> 
   <div data-fill-with="conformance"> 
    <h2 class="no-ref no-num heading settled" id="conformance"><span class="content"> Conformance</span><a class="self-link" href="#conformance"></a></h2> 
    <p> Conformance requirements are expressed with a combination of descriptive assertions and RFC 2119 terminology. The key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL in the normative parts of this document are to be interpreted as described in RFC 2119. However, for readability, these words do not appear in all uppercase letters in this specification. </p>
    <p> All of the text of this specification is normative except sections explicitly marked as non-normative, examples, and notes. <a data-link-type="biblio" href="#biblio-rfc2119">[RFC2119]</a> </p>
    <p> Examples in this specification are introduced with the words for example or are set apart from the normative text with <code>class="example"</code>, like this: </p>
    <div class="example" id="example-ae2b6bc0">
     <a class="self-link" href="#example-ae2b6bc0"></a> This is an example of an informative example. 
    </div> 
    <p> Informative notes begin with the word Note and are set apart from the normative text with <code>class="note"</code>, like this: </p>
    <p class="note" role="note"> Note, this is an informative note. </p>
   </div> <script>
(function() {
  "use strict";
  var collapseSidebarText = '<span aria-hidden="true">?</span> '
                          + '<span>Collapse Sidebar</span>';
  var expandSidebarText   = '<span aria-hidden="true">?</span> '
                          + '<span>Pop Out Sidebar</span>';
  var tocJumpText         = '<span aria-hidden="true">?</span> '
                          + '<span>Jump to Table of Contents</span>';

  var sidebarMedia = window.matchMedia('screen and (min-width: 78em)');
  var autoToggle   = function(e){ toggleSidebar(e.matches) };
  if(sidebarMedia.addListener) {
    sidebarMedia.addListener(autoToggle);
  }

  function toggleSidebar(on) {
    if (on == undefined) {
      on = !document.body.classList.contains('toc-sidebar');
    }

    /* Dont scroll to compensate for the ToC if were above it already. */
    var headY = 0;
    var head = document.querySelector('.head');
    if (head) {
      // terrible approx of "top of ToC"
      headY += head.offsetTop + head.offsetHeight;
    }
    var skipScroll = window.scrollY < headY;

    var toggle = document.getElementById('toc-toggle');
    var tocNav = document.getElementById('toc');
    if (on) {
      var tocHeight = tocNav.offsetHeight;
      document.body.classList.add('toc-sidebar');
      document.body.classList.remove('toc-inline');
      toggle.innerHTML = collapseSidebarText;
      if (!skipScroll) {
        window.scrollBy(0, 0 - tocHeight);
      }
      tocNav.focus();
      sidebarMedia.addListener(autoToggle); // auto-collapse when out of room
    }
    else {
      document.body.classList.add('toc-inline');
      document.body.classList.remove('toc-sidebar');
      toggle.innerHTML = expandSidebarText;
      if (!skipScroll) {
        window.scrollBy(0, tocNav.offsetHeight);
      }
      if (toggle.matches(':hover')) {
        /* Unfocus button when not using keyboard navigation,
           because I dont know where else to send the focus. */
        toggle.blur();
      }
    }
  }

  function createSidebarToggle() {
    /* Create the sidebar toggle in JS; it shouldnt exist when JS is off. */
    var toggle = document.createElement('a');
      /* This should probably be a button, but appearance isnt standards-track.*/
    toggle.id = 'toc-toggle';
    toggle.class = 'toc-toggle';
    toggle.href = '#toc';
    toggle.innerHTML = collapseSidebarText;

    sidebarMedia.addListener(autoToggle);
    var toggler = function(e) {
      e.preventDefault();
      sidebarMedia.removeListener(autoToggle); // persist explicit off states
      toggleSidebar();
      return false;
    }
    toggle.addEventListener('click', toggler, false);


    /* Get <nav id=toc-nav>, or make it if we dont have one. */
    var tocNav = document.getElementById('toc-nav');
    if (!tocNav) {
      tocNav = document.createElement('p');
      tocNav.id = 'toc-nav';
      /* Prepend for better keyboard navigation */
      document.body.insertBefore(tocNav, document.body.firstChild);
    }
    /* While were at it, make sure we have a Jump to Toc link. */
    var tocJump = document.getElementById('toc-jump');
    if (!tocJump) {
      tocJump = document.createElement('a');
      tocJump.id = 'toc-jump';
      tocJump.href = '#toc';
      tocJump.innerHTML = tocJumpText;
      tocNav.appendChild(tocJump);
    }

    tocNav.appendChild(toggle);
  }

  var toc = document.getElementById('toc');
  if (toc) {
    createSidebarToggle();
    toggleSidebar(sidebarMedia.matches);

    /* If the sidebar has been manually opened and is currently overlaying the text
       (window too small for the MQ to add the margin to body),
       then auto-close the sidebar once you click on something in there. */
    toc.addEventListener('click', function(e) {
      if(e.target.tagName.toLowerCase() == "a" && document.body.classList.contains('toc-sidebar') && !sidebarMedia.matches) {
        toggleSidebar(false);
      }
    }, false);
  }
  else {
    console.warn("Cant find Table of Contents. Please use <nav id='toc'> around the ToC.");
  }

  /* Wrap tables in case they overflow */
  var tables = document.querySelectorAll(':not(.overlarge) > table.data, :not(.overlarge) > table.index');
  var numTables = tables.length;
  for (var i = 0; i < numTables; i++) {
    var table = tables[i];
    var wrapper = document.createElement('div');
    wrapper.className = 'overlarge';
    table.parentNode.insertBefore(wrapper, table);
    wrapper.appendChild(table);
  }

})();
</script> </code> 
  <h2 class="no-num no-ref heading settled" id="index"><span class="content">Index</span><a class="self-link" href="#index"></a></h2> 
  <h3 class="no-num no-ref heading settled" id="index-defined-here"><span class="content">Terms defined by this specification</span><a class="self-link" href="#index-defined-here"></a></h3> 
  <ul class="index"> 
   <li><a href="#dom-objectrecognitionoptions-activeclassifier">activeClassifier</a><span>, in §3.1</span> </li>
   <li> ComputeEngine 
    <ul> 
     <li><a href="#computeengine">definition of</a><span>, in §4.2</span> </li>
     <li><a href="#enumdef-computeengine">(enum)</a><span>, in §4.2</span> </li>
    </ul> </li>
   <li><a href="#dom-objectrecognitionoptions-computeengine">computeEngine</a><span>, in §3.1</span> </li>
   <li><a href="#dom-objectrecognitionoptions-confidencethreshold">confidenceThreshold</a><span>, in §3.1</span> </li>
   <li><a href="#dom-computeengine-cpu">CPU</a><span>, in §4.2</span> </li>
   <li><a href="#dom-computeengine-cpu">"CPU"</a><span>, in §4.2</span> </li>
   <li><a href="#dom-module-createobjectrecognizer">createObjectRecognizer()</a><span>, in §2.1</span> </li>
   <li><a href="#dom-module-createobjectrecognizer">createObjectRecognizer(options)</a><span>, in §2.1</span> </li>
   <li><a href="#dom-module-createobjectrecognizer">createObjectRecognizer(options, cameraOptions)</a><span>, in §2.1</span> </li>
   <li><a href="#dom-objectrecognitionoptions-enableobjectcenterestimation">enableObjectCenterEstimation</a><span>, in §3.1</span> </li>
   <li><a href="#dom-objectrecognitionoptions-enablesegmentation">enableSegmentation</a><span>, in §3.1</span> </li>
   <li><a href="#dom-objectrecognitionstate-errored">errored</a><span>, in §4.3</span> </li>
   <li><a href="#dom-objectrecognitionstate-errored">"errored"</a><span>, in §4.3</span> </li>
   <li><a href="#dom-objectrecognizer-getcameraoptions">getCameraOptions()</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-getframedata">getFrameData()</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-getobjectrecognitionoptions">getObjectRecognitionOptions()</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-getrecognizableobjectnames">getRecognizableObjectNames()</a><span>, in §2.2</span> </li>
   <li><a href="#dom-computeengine-gpu">"GPU"</a><span>, in §4.2</span> </li>
   <li><a href="#dom-computeengine-gpu">GPU</a><span>, in §4.2</span> </li>
   <li> label 
    <ul> 
     <li><a href="#dom-recognitioninfo-label">attribute for RecognitionInfo</a><span>, in §2.3</span> </li>
     <li><a href="#dom-localizationinfo-label">attribute for LocalizationInfo</a><span>, in §2.4</span> </li>
    </ul> </li>
   <li><a href="#dom-recognitionmode-localization">localization</a><span>, in §4.1</span> </li>
   <li><a href="#dom-recognitionmode-localization">"localization"</a><span>, in §4.1</span> </li>
   <li> LocalizationInfo 
    <ul> 
     <li><a href="#localizationinfo">definition of</a><span>, in §2.4</span> </li>
     <li><a href="#localizationinfo0">(interface)</a><span>, in §2.4</span> </li>
    </ul> </li>
   <li><a href="#dom-objectrecognitionoptions-maxreturnobjectcount">maxReturnObjectCount</a><span>, in §3.1</span> </li>
   <li><a href="#dom-objectrecognitionoptions-mode">mode</a><span>, in §3.1</span> </li>
   <li><a href="#module">Module</a><span>, in §2.1</span> </li>
   <li> objectCenter 
    <ul> 
     <li><a href="#dom-localizationinfo-objectcenter">attribute for LocalizationInfo</a><span>, in §2.4</span> </li>
     <li><a href="#dom-trackinginfo-objectcenter">attribute for TrackingInfo</a><span>, in §2.5</span> </li>
    </ul> </li>
   <li> ObjectRecognitionOptions 
    <ul> 
     <li><a href="#objectrecognitionoptions">definition of</a><span>, in §3.1</span> </li>
     <li><a href="#dictdef-objectrecognitionoptions">(dictionary)</a><span>, in §3.1</span> </li>
    </ul> </li>
   <li> ObjectRecognitionState 
    <ul> 
     <li><a href="#objectrecognitionstate">definition of</a><span>, in §4.3</span> </li>
     <li><a href="#enumdef-objectrecognitionstate">(enum)</a><span>, in §4.3</span> </li>
    </ul> </li>
   <li> ObjectRecognizer 
    <ul> 
     <li><a href="#objectrecognizer">definition of</a><span>, in §2.2</span> </li>
     <li><a href="#objectrecognizer0">(interface)</a><span>, in §2.2</span> </li>
    </ul> </li>
   <li><a href="#dom-objectrecognizer-onlocalization">onlocalization</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-onrecognition">onrecognition</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-ontracking">ontracking</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-pause">pause()</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognitionstate-paused">"paused"</a><span>, in §4.3</span> </li>
   <li><a href="#dom-objectrecognitionstate-paused">paused</a><span>, in §4.3</span> </li>
   <li> probability 
    <ul> 
     <li><a href="#dom-recognitioninfo-probability">attribute for RecognitionInfo</a><span>, in §2.3</span> </li>
     <li><a href="#dom-localizationinfo-probability">attribute for LocalizationInfo</a><span>, in §2.4</span> </li>
    </ul> </li>
   <li><a href="#dom-objectrecognitionstate-ready">ready</a><span>, in §4.3</span> </li>
   <li><a href="#dom-objectrecognitionstate-ready">"ready"</a><span>, in §4.3</span> </li>
   <li> RecognitionInfo 
    <ul> 
     <li><a href="#recognitioninfo">definition of</a><span>, in §2.3</span> </li>
     <li><a href="#recognitioninfo0">(interface)</a><span>, in §2.3</span> </li>
    </ul> </li>
   <li> RecognitionMode 
    <ul> 
     <li><a href="#recognitionmode">definition of</a><span>, in §4.1</span> </li>
     <li><a href="#enumdef-recognitionmode">(enum)</a><span>, in §4.1</span> </li>
    </ul> </li>
   <li><a href="#dom-objectrecognizer-reset">reset()</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-resume">resume()</a><span>, in §2.2</span> </li>
   <li> roi 
    <ul> 
     <li><a href="#dom-localizationinfo-roi">attribute for LocalizationInfo</a><span>, in §2.4</span> </li>
     <li><a href="#dom-trackinginfo-roi">attribute for TrackingInfo</a><span>, in §2.5</span> </li>
     <li><a href="#dom-objectrecognitionoptions-roi">dict-member for ObjectRecognitionOptions</a><span>, in §3.1</span> </li>
    </ul> </li>
   <li><a href="#dom-objectrecognitionstate-running">"running"</a><span>, in §4.3</span> </li>
   <li><a href="#dom-objectrecognitionstate-running">running</a><span>, in §4.3</span> </li>
   <li><a href="#dom-objectrecognizer-setcameraoptions">setCameraOptions(options)</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-setobjectrecognitionoptions">setObjectRecognitionOptions()</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-setobjectrecognitionoptions">setObjectRecognitionOptions(options)</a><span>, in §2.2</span> </li>
   <li><a href="#dom-recognitionmode-single-recognition">"single-recognition"</a><span>, in §4.1</span> </li>
   <li><a href="#dom-recognitionmode-single-recognition">single-recognition</a><span>, in §4.1</span> </li>
   <li><a href="#dom-objectrecognizer-start">start()</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-state">state</a><span>, in §2.2</span> </li>
   <li><a href="#dom-objectrecognizer-stop">stop()</a><span>, in §2.2</span> </li>
   <li><a href="#dom-recognitionmode-tracking">"tracking"</a><span>, in §4.1</span> </li>
   <li><a href="#dom-recognitionmode-tracking">tracking</a><span>, in §4.1</span> </li>
   <li> TrackingInfo 
    <ul> 
     <li><a href="#trackinginfo">definition of</a><span>, in §2.5</span> </li>
     <li><a href="#trackinginfo0">(interface)</a><span>, in §2.5</span> </li>
    </ul> </li>
   <li><a href="#dom-objectrecognitionoptions-trackingroi">trackingRoi</a><span>, in §3.1</span> </li>
  </ul> 
  <h3 class="no-num no-ref heading settled" id="index-defined-elsewhere"><span class="content">Terms defined by reference</span><a class="self-link" href="#index-defined-elsewhere"></a></h3> 
  <ul class="index"> 
   <li> <a data-link-type="biblio">[FileAPI]</a> defines the following terms: 
    <ul> 
     <li><a href="https://w3c.github.io/FileAPI/#dfn-start">start</a> </li>
    </ul> </li>
   <li> <a data-link-type="biblio">[generic-sensor]</a> defines the following terms: 
    <ul> 
     <li><a href="https://w3c.github.io/sensors/#dom-sensor-stop">stop</a> </li>
    </ul> </li>
   <li> <a data-link-type="biblio">[HTML]</a> defines the following terms: 
    <ul> 
     <li><a href="https://html.spec.whatwg.org/multipage/webappapis.html#eventhandler">EventHandler</a> </li>
    </ul> </li>
   <li> <a data-link-type="biblio">[WEBUSB]</a> defines the following terms: 
    <ul> 
     <li><a href="https://wicg.github.io/webusb/#dom-usbdevice-reset">reset</a> </li>
    </ul> </li>
  </ul> 
  <h2 class="no-num no-ref heading settled" id="references"><span class="content">References</span><a class="self-link" href="#references"></a></h2> 
  <h3 class="no-num no-ref heading settled" id="normative"><span class="content">Normative References</span><a class="self-link" href="#normative"></a></h3> 
  <dl> 
   <dt id="biblio-fileapi">
    [FileAPI] 
   </dt>
   <dd>
    Arun Ranganathan; Jonas Sicking. 
    <a href="https://w3c.github.io/FileAPI/">File API</a>. URL: 
    <a href="https://w3c.github.io/FileAPI/">https://w3c.github.io/FileAPI/</a> 
   </dd>
   <dt id="biblio-generic-sensor">
    [GENERIC-SENSOR] 
   </dt>
   <dd>
    Tobie Langel; Rick Waldron. 
    <a href="https://w3c.github.io/sensors/">Generic Sensor API</a>. URL: 
    <a href="https://w3c.github.io/sensors/">https://w3c.github.io/sensors/</a> 
   </dd>
   <dt id="biblio-html">
    [HTML] 
   </dt>
   <dd>
    Ian Hickson. 
    <a href="https://html.spec.whatwg.org/multipage/">HTML Standard</a>. Living Standard. URL: 
    <a href="https://html.spec.whatwg.org/multipage/">https://html.spec.whatwg.org/multipage/</a> 
   </dd>
   <dt id="biblio-rfc2119">
    [RFC2119] 
   </dt>
   <dd>
    S. Bradner. 
    <a href="https://tools.ietf.org/html/rfc2119">Key words for use in RFCs to Indicate Requirement Levels</a>. March 1997. Best Current Practice. URL: 
    <a href="https://tools.ietf.org/html/rfc2119">https://tools.ietf.org/html/rfc2119</a> 
   </dd>
   <dt id="biblio-webusb">
    [WEBUSB] 
   </dt>
   <dd>
    <a href="https://wicg.github.io/webusb/">WebUSB API specification draft</a>. Living Standard. URL: 
    <a href="https://wicg.github.io/webusb/">https://wicg.github.io/webusb/</a> 
   </dd>
  </dl> 
  <h2 class="no-num no-ref heading settled" id="idl-index"><span class="content">IDL Index</span><a class="self-link" href="#idl-index"></a></h2> 
  <pre class="idl def"><span class="kt">partial</span> <span class="kt">interface</span> <a class="nv idl-code" data-link-type="interface">Module</a> {
  <span class="kt">static</span> <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name" href="#objectrecognizer0">ObjectRecognizer</a>&gt; <a class="nv" href="#dom-module-createobjectrecognizer">createObjectRecognizer</a>(<span class="kt">optional</span> <a class="n" data-link-type="idl-name" href="#dictdef-objectrecognitionoptions">ObjectRecognitionOptions</a> <a class="nv" href="#dom-module-createobjectrecognizer-options-cameraoptions-options">options</a>, <span class="kt">optional</span> <a class="n" data-link-type="idl-name">CameraOptions</a> <a class="nv" href="#dom-module-createobjectrecognizer-options-cameraoptions-cameraoptions">cameraOptions</a>);
};

<span class="kt">interface</span> <a class="nv" href="#objectrecognizer0">ObjectRecognizer</a> {
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name" href="#enumdef-objectrecognitionstate">ObjectRecognitionState</a> <a class="nv" data-readonly="" data-type="ObjectRecognitionState" href="#dom-objectrecognizer-state">state</a>;

  <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name">CameraOptions</a>&gt; <a class="nv" href="#dom-objectrecognizer-getcameraoptions">getCameraOptions</a>();
  <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name" href="#dictdef-objectrecognitionoptions">ObjectRecognitionOptions</a>&gt; <a class="nv" href="#dom-objectrecognizer-getobjectrecognitionoptions">getObjectRecognitionOptions</a>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <a class="nv" href="#dom-objectrecognizer-setcameraoptions">setCameraOptions</a>(<a class="n" data-link-type="idl-name">CameraOptions</a> <a class="nv" href="#dom-objectrecognizer-setcameraoptions-options-options">options</a>);
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <a class="nv" href="#dom-objectrecognizer-setobjectrecognitionoptions">setObjectRecognitionOptions</a>(<span class="kt">optional</span> <a class="n" data-link-type="idl-name" href="#dictdef-objectrecognitionoptions">ObjectRecognitionOptions</a> <a class="nv" href="#dom-objectrecognizer-setobjectrecognitionoptions-options-options">options</a>);

  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <a class="nv" href="#dom-objectrecognizer-start">start</a>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <a class="nv" href="#dom-objectrecognizer-stop">stop</a>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <a class="nv" href="#dom-objectrecognizer-pause">pause</a>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <a class="nv" href="#dom-objectrecognizer-resume">resume</a>();
  <span class="kt">Promise</span>&lt;<span class="kt">void</span>&gt; <a class="nv" href="#dom-objectrecognizer-reset">reset</a>();

  <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name">FrameData</a>&gt; <a class="nv" href="#dom-objectrecognizer-getframedata">getFrameData</a>();

  <span class="kt">Promise</span>&lt;<a class="n" data-link-type="idl-name">String</a>[]&gt; <a class="nv" href="#dom-objectrecognizer-getrecognizableobjectnames">getRecognizableObjectNames</a>();

  <span class="kt">attribute</span> <a class="n" data-link-type="idl-name" href="https://html.spec.whatwg.org/multipage/webappapis.html#eventhandler">EventHandler</a> <a class="nv" data-type="EventHandler" href="#dom-objectrecognizer-onrecognition">onrecognition</a>;
  <span class="kt">attribute</span> <a class="n" data-link-type="idl-name" href="https://html.spec.whatwg.org/multipage/webappapis.html#eventhandler">EventHandler</a> <a class="nv" data-type="EventHandler" href="#dom-objectrecognizer-onlocalization">onlocalization</a>;
  <span class="kt">attribute</span> <a class="n" data-link-type="idl-name" href="https://html.spec.whatwg.org/multipage/webappapis.html#eventhandler">EventHandler</a> <a class="nv" data-type="EventHandler" href="#dom-objectrecognizer-ontracking">ontracking</a>;
};

<span class="kt">interface</span> <a class="nv" href="#recognitioninfo0">RecognitionInfo</a> {
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">String</a>       <a class="nv" data-readonly="" data-type="String" href="#dom-recognitioninfo-label">label</a>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <span class="kt">float</span>        <a class="nv" data-readonly="" data-type="float" href="#dom-recognitioninfo-probability">probability</a>;
};

<span class="kt">interface</span> <a class="nv" href="#localizationinfo0">LocalizationInfo</a> {
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">String</a>       <a class="nv" data-readonly="" data-type="String" href="#dom-localizationinfo-label">label</a>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <span class="kt">float</span>        <a class="nv" data-readonly="" data-type="float" href="#dom-localizationinfo-probability">probability</a>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">Rect2D</a>       <a class="nv" data-readonly="" data-type="Rect2D" href="#dom-localizationinfo-roi">roi</a>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">Point3D</a>      <a class="nv" data-readonly="" data-type="Point3D" href="#dom-localizationinfo-objectcenter">objectCenter</a>;
};

<span class="kt">interface</span> <a class="nv" href="#trackinginfo0">TrackingInfo</a> {
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">Rect2D</a>       <a class="nv" data-readonly="" data-type="Rect2D" href="#dom-trackinginfo-roi">roi</a>;
  <span class="kt">readonly</span> <span class="kt">attribute</span> <a class="n" data-link-type="idl-name">Point3D</a>      <a class="nv" data-readonly="" data-type="Point3D" href="#dom-trackinginfo-objectcenter">objectCenter</a>;
};

<span class="kt">dictionary</span> <a class="nv" href="#dictdef-objectrecognitionoptions">ObjectRecognitionOptions</a> {
  <a class="n" data-link-type="idl-name" href="#enumdef-recognitionmode">RecognitionMode</a>   <a class="nv" data-type="RecognitionMode   " href="#dom-objectrecognitionoptions-mode">mode</a>;
  <span class="kt">float</span>             <a class="nv" data-type="float             " href="#dom-objectrecognitionoptions-confidencethreshold">confidenceThreshold</a>;
  <a class="n" data-link-type="idl-name" href="#enumdef-computeengine">ComputeEngine</a>     <a class="nv" data-type="ComputeEngine     " href="#dom-objectrecognitionoptions-computeengine">computeEngine</a>;
  <span class="kt">boolean</span>           <a class="nv" data-type="boolean           " href="#dom-objectrecognitionoptions-enablesegmentation">enableSegmentation</a>;
  <span class="kt">long</span>              <a class="nv" data-type="long              " href="#dom-objectrecognitionoptions-maxreturnobjectcount">maxReturnObjectCount</a>;
  <span class="kt">boolean</span>           <a class="nv" data-type="boolean           " href="#dom-objectrecognitionoptions-enableobjectcenterestimation">enableObjectCenterEstimation</a>;
  <a class="n" data-link-type="idl-name">String</a>            <a class="nv" data-type="String            " href="#dom-objectrecognitionoptions-activeclassifier">activeClassifier</a>;
  <a class="n" data-link-type="idl-name">Rect2D</a>            <a class="nv" data-type="Rect2D            " href="#dom-objectrecognitionoptions-roi">roi</a>;
  <a class="n" data-link-type="idl-name">Rect2D</a>[]          <a class="nv" data-type="Rect2D[]          " href="#dom-objectrecognitionoptions-trackingroi">trackingRoi</a>;
};


<span class="kt">enum</span> <a class="nv" href="#enumdef-recognitionmode">RecognitionMode</a> {
  <a class="s" href="#dom-recognitionmode-tracking">"tracking"</a>,
  <a class="s" href="#dom-recognitionmode-single-recognition">"single-recognition"</a>,
  <a class="s" href="#dom-recognitionmode-localization">"localization"</a>
};

<span class="kt">enum</span> <a class="nv" href="#enumdef-computeengine">ComputeEngine</a> {
  <a class="s" href="#dom-computeengine-cpu">"CPU"</a>,
  <a class="s" href="#dom-computeengine-gpu">"GPU"</a>
};

<span class="kt">enum</span> <a class="nv" href="#enumdef-objectrecognitionstate">ObjectRecognitionState</a> {
  <a class="s" href="#dom-objectrecognitionstate-ready">"ready"</a>,
  <a class="s" href="#dom-objectrecognitionstate-running">"running"</a>,
  <a class="s" href="#dom-objectrecognitionstate-paused">"paused"</a>,
  <a class="s" href="#dom-objectrecognitionstate-errored">"errored"</a>
};

</pre> 
  <aside class="dfn-panel" data-for="objectrecognizer"> 
   <b><a href="#objectrecognizer">#objectrecognizer</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-objectrecognizer-1">2.1.1. Methods</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="objectrecognizer0"> 
   <b><a href="#objectrecognizer0">#objectrecognizer0</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-objectrecognizer0-1">2.1. Module</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognizer-state"> 
   <b><a href="#dom-objectrecognizer-state">#dom-objectrecognizer-state</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognizer-state-1">2.2.1. Attributes</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognizer-onrecognition"> 
   <b><a href="#dom-objectrecognizer-onrecognition">#dom-objectrecognizer-onrecognition</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognizer-onrecognition-1">2.2.3. Events</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognizer-onlocalization"> 
   <b><a href="#dom-objectrecognizer-onlocalization">#dom-objectrecognizer-onlocalization</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognizer-onlocalization-1">2.2.3. Events</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognizer-ontracking"> 
   <b><a href="#dom-objectrecognizer-ontracking">#dom-objectrecognizer-ontracking</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognizer-ontracking-1">2.2.3. Events</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-recognitioninfo-label"> 
   <b><a href="#dom-recognitioninfo-label">#dom-recognitioninfo-label</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-recognitioninfo-label-1">2.3.1. Attributes</a> </li>
    <li><a href="#ref-for-dom-recognitioninfo-label-2">2.4.1. Attributes</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-recognitioninfo-probability"> 
   <b><a href="#dom-recognitioninfo-probability">#dom-recognitioninfo-probability</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-recognitioninfo-probability-1">2.3.1. Attributes</a> </li>
    <li><a href="#ref-for-dom-recognitioninfo-probability-2">2.4.1. Attributes</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-localizationinfo-roi"> 
   <b><a href="#dom-localizationinfo-roi">#dom-localizationinfo-roi</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-localizationinfo-roi-1">2.4.1. Attributes</a> </li>
    <li><a href="#ref-for-dom-localizationinfo-roi-2">2.5.1. Attributes</a> </li>
    <li><a href="#ref-for-dom-localizationinfo-roi-3">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-localizationinfo-objectcenter"> 
   <b><a href="#dom-localizationinfo-objectcenter">#dom-localizationinfo-objectcenter</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-localizationinfo-objectcenter-1">2.4.1. Attributes</a> </li>
    <li><a href="#ref-for-dom-localizationinfo-objectcenter-2">2.5.1. Attributes</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="objectrecognitionoptions"> 
   <b><a href="#objectrecognitionoptions">#objectrecognitionoptions</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-objectrecognitionoptions-1">2.2.2. Methods</a> <a href="#ref-for-objectrecognitionoptions-2">(2)</a> </li>
    <li><a href="#ref-for-objectrecognitionoptions-3">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dictdef-objectrecognitionoptions"> 
   <b><a href="#dictdef-objectrecognitionoptions">#dictdef-objectrecognitionoptions</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dictdef-objectrecognitionoptions-1">2.1. Module</a> </li>
    <li><a href="#ref-for-dictdef-objectrecognitionoptions-2">2.2. ObjectRecognizer</a> <a href="#ref-for-dictdef-objectrecognitionoptions-3">(2)</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionoptions-mode"> 
   <b><a href="#dom-objectrecognitionoptions-mode">#dom-objectrecognitionoptions-mode</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionoptions-mode-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionoptions-confidencethreshold"> 
   <b><a href="#dom-objectrecognitionoptions-confidencethreshold">#dom-objectrecognitionoptions-confidencethreshold</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionoptions-confidencethreshold-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionoptions-computeengine"> 
   <b><a href="#dom-objectrecognitionoptions-computeengine">#dom-objectrecognitionoptions-computeengine</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionoptions-computeengine-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionoptions-enablesegmentation"> 
   <b><a href="#dom-objectrecognitionoptions-enablesegmentation">#dom-objectrecognitionoptions-enablesegmentation</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionoptions-enablesegmentation-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionoptions-maxreturnobjectcount"> 
   <b><a href="#dom-objectrecognitionoptions-maxreturnobjectcount">#dom-objectrecognitionoptions-maxreturnobjectcount</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionoptions-maxreturnobjectcount-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionoptions-enableobjectcenterestimation"> 
   <b><a href="#dom-objectrecognitionoptions-enableobjectcenterestimation">#dom-objectrecognitionoptions-enableobjectcenterestimation</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionoptions-enableobjectcenterestimation-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionoptions-activeclassifier"> 
   <b><a href="#dom-objectrecognitionoptions-activeclassifier">#dom-objectrecognitionoptions-activeclassifier</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionoptions-activeclassifier-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionoptions-trackingroi"> 
   <b><a href="#dom-objectrecognitionoptions-trackingroi">#dom-objectrecognitionoptions-trackingroi</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionoptions-trackingroi-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="recognitionmode"> 
   <b><a href="#recognitionmode">#recognitionmode</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-recognitionmode-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="enumdef-recognitionmode"> 
   <b><a href="#enumdef-recognitionmode">#enumdef-recognitionmode</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-enumdef-recognitionmode-1">3.1. ObjectRecognitionOptions</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-recognitionmode-tracking"> 
   <b><a href="#dom-recognitionmode-tracking">#dom-recognitionmode-tracking</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-recognitionmode-tracking-1">4.1. RecognitionMode enum</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-recognitionmode-single-recognition"> 
   <b><a href="#dom-recognitionmode-single-recognition">#dom-recognitionmode-single-recognition</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-recognitionmode-single-recognition-1">4.1. RecognitionMode enum</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-recognitionmode-localization"> 
   <b><a href="#dom-recognitionmode-localization">#dom-recognitionmode-localization</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-recognitionmode-localization-1">4.1. RecognitionMode enum</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="computeengine"> 
   <b><a href="#computeengine">#computeengine</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-computeengine-1">3.1.1. Dictionary ObjectRecognitionOptions Members</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="enumdef-computeengine"> 
   <b><a href="#enumdef-computeengine">#enumdef-computeengine</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-enumdef-computeengine-1">3.1. ObjectRecognitionOptions</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-computeengine-cpu"> 
   <b><a href="#dom-computeengine-cpu">#dom-computeengine-cpu</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-computeengine-cpu-1">4.2. ComputeEngine enum</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-computeengine-gpu"> 
   <b><a href="#dom-computeengine-gpu">#dom-computeengine-gpu</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-computeengine-gpu-1">4.2. ComputeEngine enum</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="objectrecognitionstate"> 
   <b><a href="#objectrecognitionstate">#objectrecognitionstate</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-objectrecognitionstate-1">2.2.1. Attributes</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="enumdef-objectrecognitionstate"> 
   <b><a href="#enumdef-objectrecognitionstate">#enumdef-objectrecognitionstate</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-enumdef-objectrecognitionstate-1">2.2. ObjectRecognizer</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionstate-ready"> 
   <b><a href="#dom-objectrecognitionstate-ready">#dom-objectrecognitionstate-ready</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionstate-ready-1">4.3. ObjectRecognitionState enum</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionstate-running"> 
   <b><a href="#dom-objectrecognitionstate-running">#dom-objectrecognitionstate-running</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionstate-running-1">4.3. ObjectRecognitionState enum</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionstate-paused"> 
   <b><a href="#dom-objectrecognitionstate-paused">#dom-objectrecognitionstate-paused</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionstate-paused-1">4.3. ObjectRecognitionState enum</a> </li>
   </ul> 
  </aside> 
  <aside class="dfn-panel" data-for="dom-objectrecognitionstate-errored"> 
   <b><a href="#dom-objectrecognitionstate-errored">#dom-objectrecognitionstate-errored</a></b>
   <b>Referenced in:</b> 
   <ul> 
    <li><a href="#ref-for-dom-objectrecognitionstate-errored-1">4.3. ObjectRecognitionState enum</a> </li>
   </ul> 
  </aside> 
  <script>/* script-dfn-panel */

        document.body.addEventListener("click", function(e) {
            var queryAll = function(sel) { return [].slice.call(document.querySelectorAll(sel)); }
            // Find the dfn element or panel, if any, that was clicked on.
            var el = e.target;
            var target;
            var hitALink = false;
            while(el.parentElement) {
                if(el.tagName == "A") {
                    // Clicking on a link in a <dfn> shouldn't summon the panel
                    hitALink = true;
                }
                if(el.classList.contains("dfn-paneled")) {
                    target = "dfn";
                    break;
                }
                if(el.classList.contains("dfn-panel")) {
                    target = "dfn-panel";
                    break;
                }
                el = el.parentElement;
            }
            if(target != "dfn-panel") {
                // Turn off any currently "on" or "activated" panels.
                queryAll(".dfn-panel.on, .dfn-panel.activated").forEach(function(el){
                    el.classList.remove("on");
                    el.classList.remove("activated");
                });
            }
            if(target == "dfn" && !hitALink) {
                // open the panel
                var dfnPanel = document.querySelector(".dfn-panel[data-for='" + el.id + "']");
                if(dfnPanel) {
                    console.log(dfnPanel);
                    dfnPanel.classList.add("on");
                    var rect = el.getBoundingClientRect();
                    dfnPanel.style.left = window.scrollX + rect.right + 5 + "px";
                    dfnPanel.style.top = window.scrollY + rect.top + "px";
                    var panelRect = dfnPanel.getBoundingClientRect();
                    var panelWidth = panelRect.right - panelRect.left;
                    if(panelRect.right > document.body.scrollWidth && (rect.left - (panelWidth + 5)) > 0) {
                        // Reposition, because the panel is overflowing
                        dfnPanel.style.left = window.scrollX + rect.left - (panelWidth + 5) + "px";
                    }
                } else {
                    console.log("Couldn't find .dfn-panel[data-for='" + el.id + "']");
                }
            } else if(target == "dfn-panel") {
                // Switch it to "activated" state, which pins it.
                el.classList.add("activated");
                el.style.left = null;
                el.style.top = null;
            }

        });
        </script>
 </body>
</html>