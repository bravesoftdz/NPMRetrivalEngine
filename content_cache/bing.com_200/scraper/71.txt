<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
 <head> 
  <meta content="text/html; charset=utf-8" http-equiv="content-type"> 
  <title>graphscraper 0.1.1 : Python Package Index</title> 
  <meta content="graph network webscraping sqlalchemy database db caching"> 
  <meta content="Graph implementation that loads graph data (nodes and edges) from external sources and caches the loaded data in a database using sqlalchemy or flask-sqlalchemy."> 
  <link rel="alternate" type="application/rss+xml" title="RSS: 40 latest updates" href="https://testpypi.python.org/pypi?:action=rss"> 
  <link rel="alternate" type="application/rss+xml" title="RSS: 40 newest packages" href="https://testpypi.python.org/pypi?:action=packages_rss"> 
  <link rel="stylesheet" media="screen" href="/static/styles/screen-switcher-default.css" type="text/css"> 
  <link media="screen" href="/static/styles/netscape4.css" type="text/css" rel="stylesheet"> 
  <link media="print" href="/static/styles/print.css" type="text/css" rel="stylesheet"> 
  <link media="screen" href="/static/styles/largestyles.css" type="text/css" rel="alternate stylesheet" title="large text"> 
  <link media="screen" href="/static/styles/defaultfonts.css" type="text/css" rel="alternate stylesheet" title="default fonts"> 
  <link rel="stylesheet" media="screen" href="/static/css/docutils.css" type="text/css"> 
  <link rel="stylesheet" media="screen" href="/static/css/pygments.css" type="text/css"> 
  <!-- allow pypi to override the standard pydotorg/docutils/etc. styles --> 
  <link rel="stylesheet" href="/static/css/pypi.css" type="text/css"> 
  <link media="screen" rel="stylesheet" href="/static/css/pypi-screen.css" type="text/css"> 
  <meta name="keywords" content="graph network webscraping sqlalchemy database db caching"> 
  <meta name="description" content="Graph implementation that loads graph data (nodes and edges) from external sources and caches the loaded data in a database using sqlalchemy or flask-sqlalchemy."> 
  <link rel="meta" title="DOAP" type="application/rdf+xml" href="/pypi?:action=doap&amp;name=graphscraper&amp;version=0.1.1"> 
  <style type="text/css">
  table.form th {white-space: pre;}
 </style> 
  <style type="text/css">
       </style> 
 </head> 
 <body> 
  <img src="/static/images/testing-site.png" style="z-index: 100; position: absolute; top: 0; left: 0; border: 0;" alt="Testing Site"> 
  <img src="/static/images/testing-site-right.png" style="z-index: 100; position: absolute; top: 0; right: 0; border: 0;" alt="Testing Site"> 
  <!--  Logo  --> 
  <h1 id="logoheader"> <a accesskey="1" href="http://www.python.org" id="logolink"> <img src="/static/images/python-logo.png" alt="homepage" border="0" id="logo"> </a> </h1> 
  <!--  Skip to Navigation  --> 
  <div class="skiptonav">
   <a accesskey="2" href="#left-hand-navigation"><img src="/static/images/trans.gif" alt="skip to navigation" border="0" id="skiptonav"></a>
  </div> 
  <div class="skiptonav">
   <a accesskey="3" href="#content-body"><img src="/static/images/trans.gif" alt="skip to content" border="0" id="skiptocontent"></a>
  </div> 
  <!--  Utility Menu  --> 
  <div id="utility-menu"> 
   <!--  Search Box  --> 
   <div id="searchbox"> 
    <form id="searchform" method="get" name="searchform" action="/pypi"> 
     <input type="hidden" name=":action" value="search"> 
     <div id="search"> 
      <input class="input-text" id="term" name="term" autofocus> 
      <input class="input-button" type="submit" name="submit" value="search" id="submit"> 
     </div> 
    </form> 
   </div> 
   <!-- XXX: reinstate this       <div id="screen-switcher"></div> --> 
  </div> 
  <div id="left-hand-navigation"> 
   <!--  Main Menu NEED LEVEL TWO HEADER AND FOOTER --> 
   <div id="menu"> 
    <ul class="level-one"> 
     <li class="selected"> <a class="selected" href="/pypi">Package Index</a> 
      <ul class="level-two"> 
       <li class=""><a class="" href="/pypi?%3Aaction=browse">Browse&nbsp;packages</a></li> 
       <li class=""><a class="" href="/pypi?%3Aaction=list_classifiers">List&nbsp;trove&nbsp;classifiers</a></li> 
       <li class=""><a class="" href="/pypi?%3Aaction=rss">RSS&nbsp;(latest&nbsp;40&nbsp;updates)</a></li> 
       <li class=""><a class="" href="/pypi?%3Aaction=packages_rss">RSS&nbsp;(newest&nbsp;40&nbsp;packages)</a></li> 
       <li><a href="/tos">Terms of Service</a></li> 
       <li><a href="http://wiki.python.org/moin/CheeseShopTutorial">PyPI Tutorial</a></li> 
       <li><a href="/security">PyPI Security</a></li> 
       <li><a href="http://sourceforge.net/tracker/?group_id=66150&amp;atid=513504">PyPI Support</a></li> 
       <li><a href="https://github.com/pypa/pypi-legacy/issues">PyPI Bug Reports</a></li> 
       <li><a href="http://www.python.org/sigs/distutils-sig/">PyPI Discussion</a></li> 
       <li><a href="http://wiki.python.org/moin/CheeseShopDev">PyPI Developer Info</a></li> 
      </ul> </li> 
     <li class=""><a href="http://www.python.org/about" class="" title="About The Python Language">About</a> </li>
     <li class=""><a href="http://www.python.org/news" class="" title="">News</a> </li>
     <li class=""><a href="http://www.python.org/doc" class="" title="">Documentation</a> </li>
     <li class=""><a href="http://www.python.org/download" title="">Download</a> </li>
     <li class=""><a href="http://www.python.org/community" class="" title="">Community</a> </li>
     <li class=""><a href="http://www.python.org/psf" class="" title="Python Software Foundation">Foundation</a> </li>
     <li class=""><a href="http://www.python.org/dev" class="" title="Python Core Language Development">Core Development</a> </li> 
    </ul> 
   </div> 
  </div> 
  <div id="content-body"> 
   <div id="body-main"> 
    <div id="content"> 
     <div id="breadcrumb"> 
      <a href="/pypi">Package Index</a> 
      <span class="breadcrumb-separator">&gt;</span> 
      <a href="/pypi/graphscraper">graphscraper</a> 
      <span class="breadcrumb-separator">&gt;</span> 
      <a href="/pypi/graphscraper/0.1.1">0.1.1</a> 
     </div> 
     <div id="document-floating"> 
      <div id="document-navigation" style="overflow-y: auto; max-height: 15em; overflow-x: hidden;"> 
       <h4>Not Logged In</h4> 
       <ul> 
        <li><a href="/pypi?%3Aaction=login_form">Login</a></li> 
        <li><a href="/pypi?%3Aaction=register_form">Register</a></li> 
        <li><a href="/pypi?%3Aaction=forgotten_password_form">Lost Login?</a></li> 
        <li><a href="/openid_login">Login with OpenID</a> <a style="border: none;" href="/openid_login?provider=Launchpad"><img width="16" height="16" alt="Launchpad" src="https://launchpad.net/@@/launchpad.png" title="Launchpad"></a> </li> 
        <li><a href="/google_login">Login with Google<img width="16" height="16" src="https://www.google.com/favicon.ico" title="Google Login" alt="Google Login"></a></li> 
       </ul> 
       <div id="statusdiv"> 
       </div> 
      </div> 
     </div> 
     <div class="section"> 
      <h1>graphscraper 0.1.1</h1> 
      <div id="download-button"> 
       <a class="button green" style="float:right;" href="https://testpypi.python.org/packages/bc/02/08d4afedccdb2b46d0945d8dc490b72eefacf7a856c1b76dc19cfc5fca4c/graphscraper-0.1.1-py3-none-any.whl">Download<br> <span style="font-size: 75%">graphscraper-0.1.1-py3-none-any.whl</span> </a> 
      </div> 
      <p style="font-style: italic">Graph implementation that loads graph data (nodes and edges) from external sources and caches the loaded data in a database using sqlalchemy or flask-sqlalchemy.</p> 
      <p>GraphScraper is a Python 3 library that contains a base graph implementation designed to be turned into a web scraper for graph data. It has two major features:</p> 
      <p>1) The graph automatically manages a database (using either SQLAlchemy or Flask-SQLAlchemy) where it stores all the nodes and edges the graph has seen.</p> 
      <p>2) The base graph implementation provides hook methods that, if implemented, turn the graph into a web scraper.</p> 
      <div id="yet-another-graph-implementation-why"> 
       <h2>Yet another graph implementation - why</h2> 
       <p>There are many excellent graph libraries available for different purposes. I started implementing this one because i haven’t found a graph library that is dynamic (i don’t need the whole graph in memory - or on disk - before i start working with it), that can be used as a web scraper (to seamlessly load nodes and edges from some remote data source when that piece of data is needed) and that keeps all data (the graph) automatically up-to-date on the disk. GraphScraper aims to satisfy these requirements.</p> 
      </div> 
      <div id="demo-igraph"> 
       <h2>Demo - igraph</h2> 
       <p>Besides the base graph implementation, a working demo using the <a href="http://igraph.org" rel="nofollow">igraph</a> library is also included that shows how you can implement and use an actual graph-scraper. Instead of web-scraping, this demo uses an igraph graph instance as the “remote” source to scrape data from.</p> 
      </div> 
      <div id="dependencies"> 
       <h2>Dependencies</h2> 
       <p>The project requires <a href="https://www.sqlalchemy.org/" rel="nofollow">SQLAlchemy</a> or <a href="http://flask-sqlalchemy.pocoo.org/" rel="nofollow">Flask-SQLAlchemy</a> to be installed. If you wish to the included igraph-based graph implementation, you will also need <a href="http://igraph.org" rel="nofollow">igraph</a> library.</p> 
      </div> 
      <div id="contribution"> 
       <h2>Contribution</h2> 
       <p>Any form of constructive contribution (feedback, features, bug fixes, tests, additional documentation, etc.) is welcome.</p> 
      </div> 
      <a name="downloads">&nbsp;</a> 
      <table class="list" style="margin-bottom: 10px;"> 
       <tbody>
        <tr> 
         <th>File</th> 
         <th>Type</th> 
         <th>Py Version</th> 
         <th>Uploaded on</th> 
         <th style="text-align: right;">Size</th> 
        </tr> 
        <tr class="odd"> 
         <td> <span style="white-space: nowrap;"> <a href="https://testpypi.python.org/packages/bc/02/08d4afedccdb2b46d0945d8dc490b72eefacf7a856c1b76dc19cfc5fca4c/graphscraper-0.1.1-py3-none-any.whl#md5=08f97c97b1bc5e18c236d66c3fa0b75d">graphscraper-0.1.1-py3-none-any.whl</a> (<a title="MD5 Digest" href="/pypi?:action=show_md5&amp;digest=08f97c97b1bc5e18c236d66c3fa0b75d">md5</a>) </span> </td> 
         <td style="white-space: nowrap;"> Python Wheel </td> 
         <td> py3 </td> 
         <td>2017-09-30</td> 
         <td style="text-align: right;">17KB</td> 
        </tr> 
        <tr>
         <td id="last" colspan="6"></td>
        </tr> 
       </tbody>
      </table> 
      <ul class="nodot"> 
       <li> <strong>Author:</strong> <span>Peter Volf</span> </li> 
       <!-- The <th> elements below are a terrible terrible hack for setuptools --> 
       <li> <strong>Home Page:</strong> 
        <!-- <th>Home Page --> <a href="https://github.com/volfpeter/graphscraper">https://github.com/volfpeter/graphscraper</a> </li> 
       <li> <strong>Keywords:</strong> <span>graph network webscraping sqlalchemy database db caching</span> </li> 
       <li> <strong>License:</strong> <span>MIT</span> </li> 
       <!-- TODO: add link to products in follow dependencies... --> 
       <li> <strong>Categories</strong> 
        <ul class="nodot"> 
         <li> <a href="/pypi?:action=browse&amp;c=4">Development Status :: 4 - Beta</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=30">Intended Audience :: Developers</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=35">Intended Audience :: Information Technology</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=40">Intended Audience :: Science/Research</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=69">License :: OSI Approved :: MIT License</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=104">Natural Language :: English</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=533">Programming Language :: Python :: 3</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=256">Topic :: Database</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=319">Topic :: Internet</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=385">Topic :: Scientific/Engineering</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=417">Topic :: Software Development :: Libraries</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=501">Topic :: Utilities</a> </li> 
        </ul> </li> 
       <li> <strong>Requires Python</strong>: &gt;=3 </li> 
       <li> <strong>Package Index Owner:</strong> <span>volfp</span> </li> 
       <li> <strong><a href="https://github.com/edumbill/doap/wiki">DOAP</a> record:</strong> <a href="/pypi?:action=doap&amp;name=graphscraper&amp;version=0.1.1">graphscraper-0.1.1.xml</a> </li> 
      </ul> 
     </div> 
    </div> 
    <div id="footer"> 
     <div id="credits"> 
      <div style="float: left; margin-right: 1em;" id="badges"> 
       <img src="/static/images/PythonPoweredAnimSmall.gif" alt="darn right it is" title="Python Powered" border="0"> 
      </div> 
      <div style="float: right" id="donations"> 
       <a href="http://www.python.org/about/website">Website maintained by the Python community</a>
       <br> 
       <a href="https://www.fastly.com/" title="Real-time CDN services provided by Fastly">Real-time CDN by Fastly</a> / 
       <a href="http://developer.rackspace.com/" title="Server hosting by Rackspace Open Source support">Hosting by Rackspace</a>
       <br> 
       <a href="https://aws.amazon.com/s3/" title="Object storage provided by Amazon S3">Object storage by Amazon S3</a> / 
       <a href="http://www.timparkin.co.uk/" title="Design by Tim Parkin, Yorkshire man, photographer and developer">Design by Tim Parkin</a> 
      </div> 
     </div> Copyright © 1990-2017, 
     <a href="http://www.python.org/psf">Python Software Foundation</a>
     <br> 
     <a href="https://pypi.org/policy/terms-of-use/">Terms of Use</a> 
    </div> 
   </div> 
  </div> 
  <script type="text/javascript" src="//statuspage-production.s3.amazonaws.com/se-v2.js">
      </script> 
  <script type="text/javascript">
        var sp = new StatusPage.page({ page : '928bjjg42vzc' });
        sp.summary({
          // <![CDATA[
          success: function(data) {
            var div = document.getElementById('statusdiv');
            var reports = "</br><h4 id='statusbox'>Status</h4>\n";
            var outage = 0;
            var maintenance = 0;
            for (i in data.incidents) {
              var incident = data.incidents[i];
              var message, status = incident.status;
              if (status === 'scheduled') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' scheduled.</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status === 'in_progress') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' is currently in progress.' + '</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ': ' + incident.status + '</a></li>\n';
                reports += message;
                outage += 1;
              }
            }
            for (i in data.scheduled_maintenances) {
              var incident = data.scheduled_maintenances[i];
              var message, status = incident.status;
              if (status === 'scheduled') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' scheduled.</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status === 'in_progress') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' is currently in progress.' + '</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ': ' + incident.status + '</a></li>\n';
                reports += message;
                outage += 1;
              }
            }
            if (outage + maintenance === 0) {
              reports += "<li><a href='http://status.python.org'>Nothing to report</a></li>";
            }
            div.innerHTML=reports;
            if (outage > 0) {
              var statusbox = document.getElementById("statusbox");
              statusbox.style.background = '#FC234A';
            }
          }
          // ]]>
        });
      </script>   
 </body>
</html>