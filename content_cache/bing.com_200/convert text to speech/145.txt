<!--?xml version="1.0" encoding="UTF-8" standalone="no"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>Text-to-Speech Utilities</title>
  <link rel="stylesheet" type="text/css" href="styles.css">
  <meta name="generator" content="DocBook XSL Stylesheets V1.76.1">
  <link rel="home" href="index.html" title="Asterisk™: The Definitive Guide">
  <link rel="up" href="ExternalServices.html" title="Chapter&nbsp;18.&nbsp;External Services">
  <link rel="prev" href="ExternalServices_id291590.html" title="LDAP Integration">
  <link rel="next" href="ExternalServices_id291644.html" title="Conclusion">
 </head>
 <body> 
  <div id="adsense_left"> 
   <script type="text/javascript"><!--
// Text Ad: Skyscraper (120x600)
google_ad_client = "pub-8316482144448761";
google_ad_width = 120;
google_ad_height = 600;
google_ad_format = "120x600_as";
google_ad_channel = "";
google_color_border = "ffffff";
google_color_bg = "ffffff";
google_color_link = "0000ff";
google_color_url = "008000";
google_color_text = "000000";
//--></script> 
   <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> 
  </div> 
  <div class="navheader">
   <table width="100%" summary="Navigation header">
    <tbody>
     <tr>
      <th colspan="3" align="center">Text-to-Speech Utilities</th>
     </tr>
     <tr>
      <td width="20%" align="left"><a accesskey="p" href="ExternalServices_id291590.html">Prev</a>&nbsp;</td>
      <th width="60%" align="center">Chapter&nbsp;18.&nbsp;External Services</th>
      <td width="20%" align="right">&nbsp;<a accesskey="n" href="ExternalServices_id291644.html">Next</a></td>
     </tr>
    </tbody>
   </table>
   <hr>
  </div>
  <div class="sect1" title="Text-to-Speech Utilities">
   <div class="titlepage">
    <div>
     <div>
      <h2 class="title" style="clear: both"><a id="ExternalServices_id291618"></a>Text-to-Speech Utilities</h2>
     </div>
    </div>
   </div>
   <p><a id="ExternalServices_id291623"></a><a id="index-736B345DH7B" class="indexterm"></a><a id="index-553S433WM8L" class="indexterm"></a>Text-to-speech utilities are used to convert strings of words into audio that can be played to your callers. Text-to-speech has been around for many years, and has been continually improving. While we can’t recommend text-to-speech utilities to take the place of professionally recorded prompts, they do offer some degree of usefulness in applications where dynamic data needs to be communicated to a caller.</p>
   <div class="sect2" title="Festival">
    <div class="titlepage">
     <div>
      <div>
       <h3 class="title"><a id="ExternalServices_id291626"></a>Festival</h3>
      </div>
     </div>
    </div>
    <p><a id="ExternalServices_id291631"></a>Festival <a id="I_indexterm18_d1e42742" class="indexterm"></a><a id="I_indexterm18_d1e42749" class="indexterm"></a><a id="I_indexterm18_d1e42752" class="indexterm"></a><a id="I_indexterm18_d1e42757" class="indexterm"></a>is one of the oldest running applications for text-to-speech on Linux. While the quality of Festival is not sufficient for us to recommend it for production use, it is certainly a useful way of testing a text-to-speech-based application. If a more polished sound is required for your application, we recommend you look at Cepstral (covered next).</p>
    <div class="sect3" title="Installing Festival on CentOS">
     <div class="titlepage">
      <div>
       <div>
        <h4 class="title"><a id="ExternalServices_id36055967"></a>Installing Festival on CentOS</h4>
       </div>
      </div>
     </div>
     <p><a id="ExternalServices_id36055973"></a><a id="I_indexterm18_d1e42769" class="indexterm"></a><a id="I_indexterm18_d1e42774" class="indexterm"></a>Installing Festival and its dependencies on CentOS is straightforward. Simply use <span class="command"><strong>yum</strong></span> to install the <code class="filename">festival</code> package:</p>
     <a id="ExternalServices_id36055983"></a>
     <pre class="screen">$ <strong class="userinput"><code>sudo yum install festival</code></strong></pre>
    </div>
    <div class="sect3" title="Installing Festival on Ubuntu">
     <div class="titlepage">
      <div>
       <div>
        <h4 class="title"><a id="ExternalServices_id36055989"></a>Installing Festival on Ubuntu</h4>
       </div>
      </div>
     </div>
     <p><a id="ExternalServices_id36055995"></a><a id="I_indexterm18_d1e42794" class="indexterm"></a>To install Festival and its dependencies on Ubuntu, simply use <code class="filename">apt-get</code> to install the <code class="filename">festival</code> package:</p>
     <a id="ExternalServices_id36056002"></a>
     <pre class="screen">$ <strong class="userinput"><code>sudo apt-get install festival</code></strong></pre>
    </div>
    <div class="sect3" title="Using Festival with Asterisk">
     <div class="titlepage">
      <div>
       <div>
        <h4 class="title"><a id="ExternalServices_id36056008"></a>Using Festival with Asterisk</h4>
       </div>
      </div>
     </div>
     <p><a id="ExternalServices_id36056014"></a>With Festival installed, we need to modify the <code class="filename">festival.scm</code> file in order to enable <span class="keep-together">Asterisk</span> to connect to the Festival server. On both CentOS and Ubuntu, the file is located in <code class="filename">/usr/share/festival/</code>. Open the file and place the following text just above the last line, <code class="literal">(provide 'festival)</code>:</p>
     <p><a id="ExternalServices_id36056029"></a><a id="ExternalServices_id36056030"></a></p>
     <pre class="programlisting">(define (tts_textasterisk string mode)
"(tts_textasterisk STRING MODE)
Apply tts to STRING. This function is specifically designed for
use in server mode so a single function call may synthesize the string.
This function name may be added to the server safe functions."
(let ((wholeutt (utt.synth (eval (list 'Utterance 'Text string)))))
(utt.wave.resample wholeutt 8000)
(utt.wave.rescale wholeutt 5)
(utt.send.wave.client wholeutt)))</pre>
     <p>After adding that, you need to start the Festival server:</p>
     <p><a id="ExternalServices_id36056039"></a><a id="ExternalServices_id36056040"></a></p>
     <pre class="screen">$ <strong class="userinput"><code>sudo festival_server 2&gt;&amp;1 &gt; /dev/null &amp;</code></strong></pre>
     <p>Using <span class="command"><strong>menuselect</strong></span> from your Asterisk source directory, verify that the <code class="literal">app_festival</code> application has been selected under the <span class="emphasis"><em>Applications</em></span> heading. If it was not already selected, be sure to run <span class="command"><strong>make install</strong></span> after selecting it to install the <code class="literal">Festival()</code> dialplan application.</p>
     <p><a id="ExternalServices_id36056061"></a>Before you can use the <code class="literal">Festival()</code> application, you need to tell Asterisk how to connect to the Festival server. The <code class="filename">festival.conf</code> file is used for controlling how Asterisk connects to and interacts with the Festival server. The sample <code class="filename">festival.conf</code> file located in the Asterisk source directory is a good place to start, so copy <code class="filename">festival.conf.sample</code> from the <code class="filename">configs/</code> subdirectory of your Asterisk source to the <code class="filename">/etc/asterisk/</code> configuration directory now:</p>
     <p><a id="ExternalServices_id36056087"></a><a id="ExternalServices_id36056088"></a></p>
     <pre class="screen">$ <strong class="userinput"><code>cp ~/asterisk-complete/asterisk/1.8/configs/festival.conf.sample \ /etc/asterisk/festival.conf</code></strong></pre>
     <p><a id="ExternalServices_id36056094"></a>The default configuration is typically enough to connect to the Festival server running on the local machine, but you can optionally configure parameters such as the <code class="literal">host</code> where the Festival server is running (if remote), the <code class="literal">port</code> to connect to, whether to enable caching of files (defaults to <code class="literal">no</code>), the location of the cache directory (defaults to <code class="filename">/tmp</code>), and the command Asterisk passes to the Festival server.</p>
     <p><a id="ExternalServices_id36056111"></a>You can verify that the <code class="literal">Festival()</code> dialplan application is accessible by running <span class="command"><strong>core show application festival</strong></span><a id="I_indexterm18_d1e42899" class="indexterm"></a><a id="I_indexterm18_d1e42902" class="indexterm"></a> from the Asterisk console:</p>
     <a id="ExternalServices_id36056121"></a>
     <pre class="screen">*CLI&gt; <strong class="userinput"><code>core show application festival</code></strong></pre>
     <p><a id="ExternalServices_id36056126"></a>If you don’t get output, you may need to load the <code class="filename">app_festival.so</code> module:</p>
     <p><a id="ExternalServices_id36056133"></a><a id="ExternalServices_id36056134"></a></p>
     <pre class="screen">*CLI&gt; <strong class="userinput"><code>module load app_festival.so</code></strong></pre>
     <p>Verify that the <code class="filename">app_festival.so</code> module exists in <code class="filename">/usr/lib/asterisk/modules/</code> if you’re still having issues with loading the module.</p>
     <p><a id="ExternalServices_id36056151"></a>After loading the <code class="literal">Festival()</code> application into Asterisk, you need to create a test dialplan extension to verify that <code class="literal">Festival()</code> is working:</p>
     <p><a id="ExternalServices_id36056162"></a><a id="ExternalServices_id36056163"></a></p>
     <pre class="programlisting">[LocalSets]
exten =&gt; 203,1,Verbose(2,This is a Festival test)
   same =&gt; n,Answer()
   same =&gt; n,Playback(silence/1)
   same =&gt; n,Festival(Hello World)
   same =&gt; n,Hangup()</pre>
     <p>Reload the dialplan with the <span class="command"><strong>dialplan reload</strong></span> command <a id="I_indexterm18_d1e42945" class="indexterm"></a><a id="I_indexterm18_d1e42948" class="indexterm"></a>from the Asterisk console, and test out the connection to Festival by dialing extension <code class="literal">203</code>.</p>
     <p><a id="ExternalServices_id36056173"></a>Alternatively, if you’re having issues with the Festival server, you could use the following method to generate files with the <span class="command"><strong>text2wave</strong></span> application <a id="I_indexterm18_d1e42962" class="indexterm"></a><a id="I_indexterm18_d1e42965" class="indexterm"></a>supplied with the <code class="filename">festival</code> package:</p>
     <p><a id="ExternalServices_id36056184"></a><a id="ExternalServices_id36056185"></a></p>
     <pre class="programlisting">exten =&gt; 202,1,Verbose(2,Trying out Festival)
   same =&gt; n,Answer()

; *** This line should not have any line breaks
   same =&gt; n,System(echo "This is a test of Festival" 
| /usr/bin/text2wave -scale 1.5 -F 8000 -o /tmp/festival.wav)

   same =&gt; n,Playback(/tmp/festival)
   same =&gt; n,System(rm -f /tmp/festival.wav)
   same =&gt; n,Hangup()</pre>
     <p>You should now have enough to get started with generating text-to-speech audio for your Asterisk system. The audio quality is not brilliant, and the speech generated is not clear enough to be easy to understand over a telephone, but for development and testing purposes Festival is an application that can fill the gap until you’re ready for a more professional-sounding text-to-speech generator such as Cepstral.</p>
    </div>
   </div>
   <div class="sect2" title="Cepstral">
    <div class="titlepage">
     <div>
      <div>
       <h3 class="title"><a id="ExternalServices_id291634"></a>Cepstral</h3>
      </div>
     </div>
    </div>
    <p><a id="ExternalServices_id291639"></a><a id="I_indexterm18_d1e42982" class="indexterm"></a><a id="I_indexterm18_d1e42989" class="indexterm"></a><a id="I_indexterm18_d1e42996" class="indexterm"></a>Cepstral is a text-to-speech engine that works in a similar manner as the <code class="literal">Festival()</code> application in the dialplan, but produces much higher-quality sound. Not only is the quality significantly better, but Cepstral has developed a text-to-speech engine that emulates Allison’s voice, so your text-to-speech engine can sound the same as the English sound files that ship with Asterisk by default, to give a consistent experience to the caller.</p>
    <p><a id="ExternalServices_id36021474"></a>Cepstral is commercial module, but for around $30 you can have a text-to-speech engine that is clearer, is more consistent with other sound prompts on your system, and provides a more pleasurable experience for your callers. The Cepstral software and installation instructions can be downloaded from the Digium.com webstore at <a class="ulink" href="http://www.digium.com/en/products/software/cepstral.php" target="_top">http://www.digium.com/en/products/software/cepstral.php</a>.<a id="I_indexterm18_d1e43007" class="indexterm"></a><a id="I_indexterm18_d1e43008" class="indexterm"></a></p>
   </div>
  </div> 
  <div id="adsense_bottom"> 
   <script type="text/javascript"><!--
// Text Ad: Medium Rectangle (300x250)
google_ad_client = "pub-8316482144448761";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_channel = "";
google_color_border = "ffffff";
google_color_bg = "ffffff";
google_color_link = "0000ff";
google_color_url = "000000";
google_color_text = "000000";
//--></script> 
   <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> 
  </div> 
  <div class="navfooter">
   <hr>
   <table width="100%" summary="Navigation footer">
    <tbody>
     <tr>
      <td width="40%" align="left"><a accesskey="p" href="ExternalServices_id291590.html">Prev</a>&nbsp;</td>
      <td width="20%" align="center"><a accesskey="u" href="ExternalServices.html">Up</a></td>
      <td width="40%" align="right">&nbsp;<a accesskey="n" href="ExternalServices_id291644.html">Next</a></td>
     </tr>
     <tr>
      <td width="40%" align="left" valign="top">LDAP Integration&nbsp;</td>
      <td width="20%" align="center"><a accesskey="h" href="index.html">Home</a></td>
      <td width="40%" align="right" valign="top">&nbsp;Conclusion</td>
     </tr>
    </tbody>
   </table>
  </div>
  <div xmlns="" id="svn-footer">
   <hr>
   <p>You are reading <em>Asterisk: The Definitive Guide</em> (3nd Edition for Asterisk 1.8), by Leif Madsen, Jim Van Meggelen, and Russell Bryant.<br> This work is licensed under the <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/">Creative Commons Attribution-Noncommercial-No Derivative Works License v3.0</a>.<br> To submit comments, corrections, or other contributions to the text, please visit <a href="http://oreilly.com/catalog/errata.csp?isbn=9780596517342">http://oreilly.com/catalog/errata.csp?isbn=9780596517342</a>.</p>
  </div> 
  <script src="http://www.google-analytics.com/urchin.js" type="text/javascript"></script> 
  <script type="text/javascript">
_uacct = "UA-2732771-1";
urchinTracker();
</script>  
 </body>
</html>