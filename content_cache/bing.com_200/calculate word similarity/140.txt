<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<html>
 <head> 
  <!-- Generated by javadoc (build 1.5.0_22) on Sun Nov 28 19:10:42 MET 2010 --> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
  <title>
Similarity (Lucene 3.0.3 API)
</title> 
  <meta NAME="keywords" CONTENT="org.apache.lucene.search.Similarity class"> 
  <link REL="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style"> 
  <script type="text/javascript">
function windowTitle()
{
    parent.document.title="Similarity (Lucene 3.0.3 API)";
}
</script> 
  <noscript> 
  </noscript> 
 </head> 
 <body bgcolor="white" onload="windowTitle();"> 
  <!-- ========= START OF TOP NAVBAR ======= --> 
  <a name="navbar_top">
   <!-- --></a> 
  <a href="#skip-navbar_top" title="Skip navigation links"></a> 
  <table border="0" width="100%" cellpadding="1" cellspacing="0" summary=""> 
   <tbody>
    <tr> 
     <td colspan="2" bgcolor="#EEEEFF" class="NavBarCell1"> <a name="navbar_top_firstrow">
       <!-- --></a> 
      <table border="0" cellpadding="0" cellspacing="3" summary=""> 
       <tbody>
        <tr align="center" valign="top"> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../../overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td> 
         <td bgcolor="#FFFFFF" class="NavBarCell1Rev"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="class-use/Similarity.html"><font class="NavBarFont1"><b>Use</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../../deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../../index-all.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../../help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td> 
        </tr> 
       </tbody>
      </table> </td> 
     <td align="right" valign="top" rowspan="3"><em> </em> </td> 
    </tr> 
    <tr> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> &nbsp;<a href="../../../../org/apache/lucene/search/Searcher.html" title="class in org.apache.lucene.search"><b>PREV CLASS</b></a>&nbsp; &nbsp;<a href="../../../../org/apache/lucene/search/SimilarityDelegator.html" title="class in org.apache.lucene.search"><b>NEXT CLASS</b></a></font></td> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> <a href="../../../../index.html?org/apache/lucene/search/Similarity.html" target="_top"><b>FRAMES</b></a> &nbsp; &nbsp;<a href="Similarity.html" target="_top"><b>NO FRAMES</b></a> &nbsp; &nbsp;<script type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</script> 
       <noscript> 
        <a href="../../../../allclasses-noframe.html"><b>All Classes</b></a> 
       </noscript> </font></td> 
    </tr> 
    <tr> 
     <td valign="top" class="NavBarCell3"><font size="-2"> SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<a href="#field_summary">FIELD</a>&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td> 
     <td valign="top" class="NavBarCell3"><font size="-2"> DETAIL:&nbsp;<a href="#field_detail">FIELD</a>&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td> 
    </tr> 
   </tbody>
  </table> 
  <a name="skip-navbar_top"></a> 
  <!-- ========= END OF TOP NAVBAR ========= --> 
  <hr> 
  <!-- ======== START OF CLASS DATA ======== --> 
  <h2> <font size="-1"> org.apache.lucene.search</font> <br> Class Similarity</h2> 
  <pre>
<a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html" title="class or interface in java.lang">java.lang.Object</a>
  <img SRC="../../../../resources/inherit.gif" ALT="extended by "><b>org.apache.lucene.search.Similarity</b>
</pre> 
  <dl> 
   <dt>
    <b>All Implemented Interfaces:</b> 
   </dt>
   <dd>
    <a href="http://java.sun.com/j2se/1.5/docs/api/java/io/Serializable.html" title="class or interface in java.io">Serializable</a>
   </dd> 
  </dl> 
  <dl> 
   <dt>
    <b>Direct Known Subclasses:</b> 
   </dt>
   <dd>
    <a href="../../../../org/apache/lucene/search/DefaultSimilarity.html" title="class in org.apache.lucene.search">DefaultSimilarity</a>, 
    <a href="../../../../org/apache/lucene/search/SimilarityDelegator.html" title="class in org.apache.lucene.search">SimilarityDelegator</a>
   </dd> 
  </dl> 
  <hr> 
  <dl> 
   <dt>
    <pre>public abstract class <b>Similarity</b>
     <dt>
      extends 
      <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html" title="class or interface in java.lang">Object</a>
     </dt>
     <dt>
      implements 
      <a href="http://java.sun.com/j2se/1.5/docs/api/java/io/Serializable.html" title="class or interface in java.io">Serializable</a>
     </dt></pre>
   </dt>
  </dl>  
  <p> Expert: Scoring API. </p>
  <p>Similarity defines the components of Lucene scoring. Overriding computation of these components is a convenient way to alter Lucene scoring. </p>
  <p>Suggested reading: <a href="http://nlp.stanford.edu/IR-book/html/htmledition/queries-as-vectors-1.html"> Introduction To Information Retrieval, Chapter 6</a>. </p>
  <p>The following describes how Lucene scoring evolves from underlying information retrieval models to (efficient) implementation. We first brief on <i>VSM Score</i>, then derive from it <i>Lucene's Conceptual Scoring Formula</i>, from which, finally, evolves <i>Lucene's Practical Scoring Function</i> (the latter is connected directly with Lucene classes and methods). </p>
  <p>Lucene combines <a href="http://en.wikipedia.org/wiki/Standard_Boolean_model"> Boolean model (BM) of Information Retrieval</a> with <a href="http://en.wikipedia.org/wiki/Vector_Space_Model"> Vector Space Model (VSM) of Information Retrieval</a> - documents "approved" by BM are scored by VSM. </p>
  <p>In VSM, documents and queries are represented as weighted vectors in a multi-dimensional space, where each distinct index term is a dimension, and weights are <a href="http://en.wikipedia.org/wiki/Tfidf">Tf-idf</a> values. </p>
  <p>VSM does not require weights to be <i>Tf-idf</i> values, but <i>Tf-idf</i> values are believed to produce search results of high quality, and so Lucene is using <i>Tf-idf</i>. <i>Tf</i> and <i>Idf</i> are described in more detail below, but for now, for completion, let's just say that for given term <i>t</i> and document (or query) <i>x</i>, <i>Tf(t,x)</i> varies with the number of occurrences of term <i>t</i> in <i>x</i> (when one increases so does the other) and <i>idf(t)</i> similarly varies with the inverse of the number of index documents containing term <i>t</i>. </p>
  <p><i>VSM score</i> of document <i>d</i> for query <i>q</i> is the <a href="http://en.wikipedia.org/wiki/Cosine_similarity"> Cosine Similarity</a> of the weighted query vectors <i>V(q)</i> and <i>V(d)</i>: <br>&nbsp;<br> </p>
  <table cellpadding="2" cellspacing="2" border="0" align="center"> 
   <tbody>
    <tr>
     <td> 
      <table cellpadding="1" cellspacing="0" border="1" align="center"> 
       <tbody>
        <tr>
         <td> 
          <table cellpadding="2" cellspacing="2" border="0" align="center"> 
           <tbody>
            <tr> 
             <td valign="middle" align="right" rowspan="1"> cosine-similarity(q,d) &nbsp; = &nbsp; </td> 
             <td valign="middle" align="center"> 
              <table> 
               <tbody>
                <tr>
                 <td align="center"><small>V(q)&nbsp;·&nbsp;V(d)</small></td>
                </tr> 
                <tr>
                 <td align="center">–––––––––</td>
                </tr> 
                <tr>
                 <td align="center"><small>|V(q)|&nbsp;|V(d)|</small></td>
                </tr> 
               </tbody>
              </table> </td> 
            </tr> 
           </tbody>
          </table> </td>
        </tr> 
       </tbody>
      </table> </td>
    </tr> 
    <tr>
     <td> 
      <center>
       <font=-1>
        <u>VSM Score</u>
       </font=-1>
      </center> </td>
    </tr> 
   </tbody>
  </table> 
  <br>&nbsp;
  <br> Where 
  <i>V(q)</i> · 
  <i>V(d)</i> is the 
  <a href="http://en.wikipedia.org/wiki/Dot_product">dot product</a> of the weighted vectors, and 
  <i>|V(q)|</i> and 
  <i>|V(d)|</i> are their 
  <a href="http://en.wikipedia.org/wiki/Euclidean_norm#Euclidean_norm">Euclidean norms</a>. 
  <p>Note: the above equation can be viewed as the dot product of the normalized weighted vectors, in the sense that dividing <i>V(q)</i> by its euclidean norm is normalizing it to a unit vector. </p>
  <p>Lucene refines <i>VSM score</i> for both search quality and usability: </p>
  <ul> 
   <li>Normalizing <i>V(d)</i> to the unit vector is known to be problematic in that it removes all document length information. For some documents removing this info is probably ok, e.g. a document made by duplicating a certain paragraph <i>10</i> times, especially if that paragraph is made of distinct terms. But for a document which contains no duplicated paragraphs, this might be wrong. To avoid this problem, a different document length normalization factor is used, which normalizes to a vector equal to or larger than the unit vector: <i>doc-len-norm(d)</i>. </li> 
   <li>At indexing, users can specify that certain documents are more important than others, by assigning a document boost. For this, the score of each document is also multiplied by its boost value <i>doc-boost(d)</i>. </li> 
   <li>Lucene is field based, hence each query term applies to a single field, document length normalization is by the length of the certain field, and in addition to document boost there are also document fields boosts. </li> 
   <li>The same field can be added to a document during indexing several times, and so the boost of that field is the multiplication of the boosts of the separate additions (or parts) of that field within the document. </li> 
   <li>At search time users can specify boosts to each query, sub-query, and each query term, hence the contribution of a query term to the score of a document is multiplied by the boost of that query term <i>query-boost(q)</i>. </li> 
   <li>A document may match a multi term query without containing all the terms of that query (this is correct for some of the queries), and users can further reward documents matching more query terms through a coordination factor, which is usually larger when more terms are matched: <i>coord-factor(q,d)</i>. </li> 
  </ul> 
  <p>Under the simplifying assumption of a single field in the index, we get <i>Lucene's Conceptual scoring formula</i>: <br>&nbsp;<br> </p>
  <table cellpadding="2" cellspacing="2" border="0" align="center"> 
   <tbody>
    <tr>
     <td> 
      <table cellpadding="1" cellspacing="0" border="1" align="center"> 
       <tbody>
        <tr>
         <td> 
          <table cellpadding="2" cellspacing="2" border="0" align="center"> 
           <tbody>
            <tr> 
             <td valign="middle" align="right" rowspan="1"> score(q,d) &nbsp; = &nbsp; <font color="#FF9933">coord-factor(q,d)</font> · &nbsp; <font color="#CCCC00">query-boost(q)</font> · &nbsp; </td> 
             <td valign="middle" align="center"> 
              <table> 
               <tbody>
                <tr>
                 <td align="center"><small><font color="#993399">V(q)&nbsp;·&nbsp;V(d)</font></small></td>
                </tr> 
                <tr>
                 <td align="center">–––––––––</td>
                </tr> 
                <tr>
                 <td align="center"><small><font color="#FF33CC">|V(q)|</font></small></td>
                </tr> 
               </tbody>
              </table> </td> 
             <td valign="middle" align="right" rowspan="1"> &nbsp; · &nbsp; <font color="#3399FF">doc-len-norm(d)</font> &nbsp; · &nbsp; <font color="#3399FF">doc-boost(d)</font> </td> 
            </tr> 
           </tbody>
          </table> </td>
        </tr> 
       </tbody>
      </table> </td>
    </tr> 
    <tr>
     <td> 
      <center>
       <font=-1>
        <u>Lucene Conceptual Scoring Formula</u>
       </font=-1>
      </center> </td>
    </tr> 
   </tbody>
  </table> 
  <br>&nbsp;
  <br> 
  <p>The conceptual formula is a simplification in the sense that (1) terms and documents are fielded and (2) boosts are usually per query term rather than per query. </p>
  <p>We now describe how Lucene implements this conceptual scoring formula, and derive from it <i>Lucene's Practical Scoring Function</i>. </p>
  <p>For efficient score computation some scoring components are computed and aggregated in advance: </p>
  <ul> 
   <li><i>Query-boost</i> for the query (actually for each query term) is known when search starts. </li> 
   <li>Query Euclidean norm <i>|V(q)|</i> can be computed when search starts, as it is independent of the document being scored. From search optimization perspective, it is a valid question why bother to normalize the query at all, because all scored documents will be multiplied by the same <i>|V(q)|</i>, and hence documents ranks (their order by score) will not be affected by this normalization. There are two good reasons to keep this normalization: 
    <ul> 
     <li>Recall that <a href="http://en.wikipedia.org/wiki/Cosine_similarity"> Cosine Similarity</a> can be used find how similar two documents are. One can use Lucene for e.g. clustering, and use a document as a query to compute its similarity to other documents. In this use case it is important that the score of document <i>d3</i> for query <i>d1</i> is comparable to the score of document <i>d3</i> for query <i>d2</i>. In other words, scores of a document for two distinct queries should be comparable. There are other applications that may require this. And this is exactly what normalizing the query vector <i>V(q)</i> provides: comparability (to a certain extent) of two or more queries. </li> 
     <li>Applying query normalization on the scores helps to keep the scores around the unit vector, hence preventing loss of score data because of floating point precision limitations. </li> 
    </ul> </li> 
   <li>Document length norm <i>doc-len-norm(d)</i> and document boost <i>doc-boost(d)</i> are known at indexing time. They are computed in advance and their multiplication is saved as a single value in the index: <i>norm(d)</i>. (In the equations below, <i>norm(t in d)</i> means <i>norm(field(t) in doc d)</i> where <i>field(t)</i> is the field associated with term <i>t</i>.) </li> 
  </ul> 
  <p><i>Lucene's Practical Scoring Function</i> is derived from the above. The color codes demonstrate how it relates to those of the <i>conceptual</i> formula: </p>
  <p> </p>
  <table cellpadding="2" cellspacing="2" border="0" align="center"> 
   <tbody>
    <tr>
     <td> 
      <table cellpadding="" cellspacing="2" border="2" align="center"> 
       <tbody>
        <tr>
         <td> 
          <table cellpadding="2" cellspacing="2" border="0" align="center"> 
           <tbody>
            <tr> 
             <td valign="middle" align="right" rowspan="1"> score(q,d) &nbsp; = &nbsp; <a href="#formula_coord"><font color="#FF9933">coord(q,d)</font></a> &nbsp;·&nbsp; <a href="#formula_queryNorm"><font color="#FF33CC">queryNorm(q)</font></a> &nbsp;·&nbsp; </td> 
             <td valign="bottom" align="center" rowspan="1"> <big><big><big>?</big></big></big> </td> 
             <td valign="middle" align="right" rowspan="1"> <big><big>(</big></big> <a href="#formula_tf"><font color="#993399">tf(t in d)</font></a> &nbsp;·&nbsp; <a href="#formula_idf"><font color="#993399">idf(t)</font></a><sup>2</sup> &nbsp;·&nbsp; <a href="#formula_termBoost"><font color="#CCCC00">t.getBoost()</font></a>&nbsp;·&nbsp; <a href="#formula_norm"><font color="#3399FF">norm(t,d)</font></a> <big><big>)</big></big> </td> 
            </tr> 
            <tr valigh="top"> 
             <td></td> 
             <td align="center"><small>t in q</small></td> 
             <td></td> 
            </tr> 
           </tbody>
          </table> </td>
        </tr> 
       </tbody>
      </table> </td>
    </tr> 
    <tr>
     <td> 
      <center>
       <font=-1>
        <u>Lucene Practical Scoring Function</u>
       </font=-1>
      </center> </td>
    </tr> 
   </tbody>
  </table> 
  <p> where </p>
  <ol> 
   <li> <a name="formula_tf"></a> <b><i>tf(t in d)</i></b> correlates to the term's <i>frequency</i>, defined as the number of times term <i>t</i> appears in the currently scored document <i>d</i>. Documents that have more occurrences of a given term receive a higher score. Note that <i>tf(t in q)</i> is assumed to be <i>1</i> and therefore it does not appear in this equation, However if a query contains twice the same term, there will be two term-queries with that same term and hence the computation would still be correct (although not very efficient). The default computation for <i>tf(t in d)</i> in <a href="../../../../org/apache/lucene/search/DefaultSimilarity.html#tf(float)"><code>DefaultSimilarity</code></a> is: <br>&nbsp;<br> 
    <table cellpadding="2" cellspacing="2" border="0" align="center"> 
     <tbody>
      <tr> 
       <td valign="middle" align="right" rowspan="1"> <a href="../../../../org/apache/lucene/search/DefaultSimilarity.html#tf(float)"><code>tf(t in d)</code></a> &nbsp; = &nbsp; </td> 
       <td valign="top" align="center" rowspan="1"> frequency<sup><big>½</big></sup> </td> 
      </tr> 
     </tbody>
    </table> <br>&nbsp;<br> </li> 
   <li> <a name="formula_idf"></a> <b><i>idf(t)</i></b> stands for Inverse Document Frequency. This value correlates to the inverse of <i>docFreq</i> (the number of documents in which the term <i>t</i> appears). This means rarer terms give higher contribution to the total score. <i>idf(t)</i> appears for <i>t</i> in both the query and the document, hence it is squared in the equation. The default computation for <i>idf(t)</i> in <a href="../../../../org/apache/lucene/search/DefaultSimilarity.html#idf(int, int)"><code>DefaultSimilarity</code></a> is: <br>&nbsp;<br> 
    <table cellpadding="2" cellspacing="2" border="0" align="center"> 
     <tbody>
      <tr> 
       <td valign="middle" align="right"> <a href="../../../../org/apache/lucene/search/DefaultSimilarity.html#idf(int, int)"><code>idf(t)</code></a>&nbsp; = &nbsp; </td> 
       <td valign="middle" align="center"> 1 + log <big>(</big> </td> 
       <td valign="middle" align="center"> 
        <table> 
         <tbody>
          <tr>
           <td align="center"><small>numDocs</small></td>
          </tr> 
          <tr>
           <td align="center">–––––––––</td>
          </tr> 
          <tr>
           <td align="center"><small>docFreq+1</small></td>
          </tr> 
         </tbody>
        </table> </td> 
       <td valign="middle" align="center"> <big>)</big> </td> 
      </tr> 
     </tbody>
    </table> <br>&nbsp;<br> </li> 
   <li> <a name="formula_coord"></a> <b><i>coord(q,d)</i></b> is a score factor based on how many of the query terms are found in the specified document. Typically, a document that contains more of the query's terms will receive a higher score than another document with fewer query terms. This is a search time factor computed in <a href="../../../../org/apache/lucene/search/Similarity.html#coord(int, int)"><code>coord(q,d)</code></a> by the Similarity in effect at search time. <br>&nbsp;<br> </li> 
   <li><b> <a name="formula_queryNorm"></a> <i>queryNorm(q)</i> </b> is a normalizing factor used to make scores between queries comparable. This factor does not affect document ranking (since all ranked documents are multiplied by the same factor), but rather just attempts to make scores from different queries (or even different indexes) comparable. This is a search time factor computed by the Similarity in effect at search time. The default computation in <a href="../../../../org/apache/lucene/search/DefaultSimilarity.html#queryNorm(float)"><code>DefaultSimilarity</code></a> produces a <a href="http://en.wikipedia.org/wiki/Euclidean_norm#Euclidean_norm">Euclidean norm</a>: <br>&nbsp;<br> 
    <table cellpadding="1" cellspacing="0" border="0" align="center"> 
     <tbody>
      <tr> 
       <td valign="middle" align="right" rowspan="1"> queryNorm(q) &nbsp; = &nbsp; <a href="../../../../org/apache/lucene/search/DefaultSimilarity.html#queryNorm(float)"><code>queryNorm(sumOfSquaredWeights)</code></a> &nbsp; = &nbsp; </td> 
       <td valign="middle" align="center" rowspan="1"> 
        <table> 
         <tbody>
          <tr>
           <td align="center"><big>1</big></td>
          </tr> 
          <tr>
           <td align="center"><big> –––––––––––––– </big></td>
          </tr> 
          <tr>
           <td align="center">sumOfSquaredWeights<sup><big>½</big></sup></td>
          </tr> 
         </tbody>
        </table> </td> 
      </tr> 
     </tbody>
    </table> <br>&nbsp;<br> The sum of squared weights (of the query terms) is computed by the query <a href="../../../../org/apache/lucene/search/Weight.html" title="class in org.apache.lucene.search"><code>Weight</code></a> object. For example, a <a href="../../../../org/apache/lucene/search/BooleanQuery.html" title="class in org.apache.lucene.search"><code>boolean query</code></a> computes this value as: <br>&nbsp;<br> 
    <table cellpadding="1" cellspacing="0" border="0" n align="center"> 
     <tbody>
      <tr> 
       <td valign="middle" align="right" rowspan="1"> <a href="../../../../org/apache/lucene/search/Weight.html#sumOfSquaredWeights()"><code>sumOfSquaredWeights</code></a> &nbsp; = &nbsp; <a href="../../../../org/apache/lucene/search/Query.html#getBoost()"><code>q.getBoost()</code></a> <sup><big>2</big></sup> &nbsp;·&nbsp; </td> 
       <td valign="bottom" align="center" rowspan="1"> <big><big><big>?</big></big></big> </td> 
       <td valign="middle" align="right" rowspan="1"> <big><big>(</big></big> <a href="#formula_idf">idf(t)</a> &nbsp;·&nbsp; <a href="#formula_termBoost">t.getBoost()</a> <big><big>) <sup>2</sup> </big></big> </td> 
      </tr> 
      <tr valigh="top"> 
       <td></td> 
       <td align="center"><small>t in q</small></td> 
       <td></td> 
      </tr> 
     </tbody>
    </table> <br>&nbsp;<br> </li> 
   <li> <a name="formula_termBoost"></a> <b><i>t.getBoost()</i></b> is a search time boost of term <i>t</i> in the query <i>q</i> as specified in the query text (see <a href="../../../../../../queryparsersyntax.html#Boosting a Term">query syntax</a>), or as set by application calls to <a href="../../../../org/apache/lucene/search/Query.html#setBoost(float)"><code>setBoost()</code></a>. Notice that there is really no direct API for accessing a boost of one term in a multi term query, but rather multi terms are represented in a query as multi <a href="../../../../org/apache/lucene/search/TermQuery.html" title="class in org.apache.lucene.search"><code>TermQuery</code></a> objects, and so the boost of a term in the query is accessible by calling the sub-query <a href="../../../../org/apache/lucene/search/Query.html#getBoost()"><code>getBoost()</code></a>. <br>&nbsp;<br> </li> 
   <li> <a name="formula_norm"></a> <b><i>norm(t,d)</i></b> encapsulates a few (indexing time) boost and length factors: 
    <ul> 
     <li><b>Document boost</b> - set by calling <a href="../../../../org/apache/lucene/document/Document.html#setBoost(float)"><code>doc.setBoost()</code></a> before adding the document to the index. </li> 
     <li><b>Field boost</b> - set by calling <a href="../../../../org/apache/lucene/document/Fieldable.html#setBoost(float)"><code>field.setBoost()</code></a> before adding the field to a document. </li> 
     <li><a href="../../../../org/apache/lucene/search/Similarity.html#lengthNorm(java.lang.String, int)"><code><b>lengthNorm</b>(field)</code></a> - computed when the document is added to the index in accordance with the number of tokens of this field in the document, so that shorter fields contribute more to the score. LengthNorm is computed by the Similarity class in effect at indexing. </li> 
    </ul> <p> When a document is added to the index, all the above factors are multiplied. If the document has multiple fields with the same name, all their boosts are multiplied together: <br>&nbsp;<br> </p>
    <table cellpadding="1" cellspacing="0" border="0" n align="center"> 
     <tbody>
      <tr> 
       <td valign="middle" align="right" rowspan="1"> norm(t,d) &nbsp; = &nbsp; <a href="../../../../org/apache/lucene/document/Document.html#getBoost()"><code>doc.getBoost()</code></a> &nbsp;·&nbsp; <a href="../../../../org/apache/lucene/search/Similarity.html#lengthNorm(java.lang.String, int)"><code>lengthNorm(field)</code></a> &nbsp;·&nbsp; </td> 
       <td valign="bottom" align="center" rowspan="1"> <big><big><big>?</big></big></big> </td> 
       <td valign="middle" align="right" rowspan="1"> <a href="../../../../org/apache/lucene/document/Fieldable.html#getBoost()"><code>f.getBoost</code></a>() </td> 
      </tr> 
      <tr valigh="top"> 
       <td></td> 
       <td align="center"><small>field <i><b>f</b></i> in <i>d</i> named as <i><b>t</b></i></small></td> 
       <td></td> 
      </tr> 
     </tbody>
    </table> <br>&nbsp;<br> However the resulted <i>norm</i> value is <a href="../../../../org/apache/lucene/search/Similarity.html#encodeNorm(float)"><code>encoded</code></a> as a single byte before being stored. At search time, the norm byte value is read from the index <a href="../../../../org/apache/lucene/store/Directory.html" title="class in org.apache.lucene.store"><code>directory</code></a> and <a href="../../../../org/apache/lucene/search/Similarity.html#decodeNorm(byte)"><code>decoded</code></a> back to a float <i>norm</i> value. This encoding/decoding, while reducing index size, comes with the price of precision loss - it is not guaranteed that <i>decode(encode(x)) = x</i>. For instance, <i>decode(encode(0.89)) = 0.75</i>. <br>&nbsp;<br> Compression of norm values to a single byte saves memory at search time, because once a field is referenced at search time, its norms - for all documents - are maintained in memory. <br>&nbsp;<br> The rationale supporting such lossy compression of norm values is that given the difficulty (and inaccuracy) of users to express their true information need by a query, only big differences matter. <br>&nbsp;<br> Last, note that search time is too late to modify this <i>norm</i> part of scoring, e.g. by using a different <a href="../../../../org/apache/lucene/search/Similarity.html" title="class in org.apache.lucene.search"><code>Similarity</code></a> for search. <br>&nbsp;<br> </li> 
  </ol> 
  <p> </p>
  <p> </p>
  <dl> 
   <dt>
    <b>See Also:</b>
   </dt>
   <dd>
    <a href="../../../../org/apache/lucene/search/Similarity.html#setDefault(org.apache.lucene.search.Similarity)"><code>setDefault(Similarity)</code></a>, 
    <a href="../../../../org/apache/lucene/index/IndexWriter.html#setSimilarity(org.apache.lucene.search.Similarity)"><code>IndexWriter.setSimilarity(Similarity)</code></a>, 
    <a href="../../../../org/apache/lucene/search/Searcher.html#setSimilarity(org.apache.lucene.search.Similarity)"><code>Searcher.setSimilarity(Similarity)</code></a>, 
    <a href="../../../../serialized-form.html#org.apache.lucene.search.Similarity">Serialized Form</a>
   </dd>
  </dl> 
  <hr> 
  <p> 
   <!-- =========== FIELD SUMMARY =========== --> <a name="field_summary">
    <!-- --></a> </p>
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="2"><font size="+2"> <b>Field Summary</b></font></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;int</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#NO_DOC_ID_PROVIDED">NO_DOC_ID_PROVIDED</a></b></code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td> 
    </tr> 
   </tbody>
  </table> &nbsp; 
  <!-- ======== CONSTRUCTOR SUMMARY ======== --> 
  <a name="constructor_summary">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="2"><font size="+2"> <b>Constructor Summary</b></font></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#Similarity()">Similarity</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td> 
    </tr> 
   </tbody>
  </table> &nbsp; 
  <!-- ========== METHOD SUMMARY =========== --> 
  <a name="method_summary">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="2"><font size="+2"> <b>Method Summary</b></font></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#computeNorm(java.lang.String, org.apache.lucene.index.FieldInvertState)">computeNorm</a></b>(<a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/String.html" title="class or interface in java.lang">String</a>&nbsp;field, <a href="../../../../org/apache/lucene/index/FieldInvertState.html" title="class in org.apache.lucene.index">FieldInvertState</a>&nbsp;state)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compute the normalization value for a field, given the accumulated state of term processing for this field (see <a href="../../../../org/apache/lucene/index/FieldInvertState.html" title="class in org.apache.lucene.index"><code>FieldInvertState</code></a>).</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>abstract &nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#coord(int, int)">coord</a></b>(int&nbsp;overlap, int&nbsp;maxOverlap)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes a score factor based on the fraction of all query terms that a document contains.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#decodeNorm(byte)">decodeNorm</a></b>(byte&nbsp;b)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Decodes a normalization factor stored in an index.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;byte</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#encodeNorm(float)">encodeNorm</a></b>(float&nbsp;f)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encodes a normalization factor for storage in an index.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;<a href="../../../../org/apache/lucene/search/Similarity.html" title="class in org.apache.lucene.search">Similarity</a></code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#getDefault()">getDefault</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the default Similarity implementation used by indexing and search code.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;float[]</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#getNormDecoder()">getNormDecoder</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a table for decoding normalization bytes.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>abstract &nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#idf(int, int)">idf</a></b>(int&nbsp;docFreq, int&nbsp;numDocs)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes a score factor based on a term's document frequency (the number of documents which contain the term).</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../../../../org/apache/lucene/search/Explanation.IDFExplanation.html" title="class in org.apache.lucene.search">Explanation.IDFExplanation</a></code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#idfExplain(java.util.Collection, org.apache.lucene.search.Searcher)">idfExplain</a></b>(<a href="http://java.sun.com/j2se/1.5/docs/api/java/util/Collection.html" title="class or interface in java.util">Collection</a>&lt;<a href="../../../../org/apache/lucene/index/Term.html" title="class in org.apache.lucene.index">Term</a>&gt;&nbsp;terms, <a href="../../../../org/apache/lucene/search/Searcher.html" title="class in org.apache.lucene.search">Searcher</a>&nbsp;searcher)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes a score factor for a phrase.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;<a href="../../../../org/apache/lucene/search/Explanation.IDFExplanation.html" title="class in org.apache.lucene.search">Explanation.IDFExplanation</a></code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#idfExplain(org.apache.lucene.index.Term, org.apache.lucene.search.Searcher)">idfExplain</a></b>(<a href="../../../../org/apache/lucene/index/Term.html" title="class in org.apache.lucene.index">Term</a>&nbsp;term, <a href="../../../../org/apache/lucene/search/Searcher.html" title="class in org.apache.lucene.search">Searcher</a>&nbsp;searcher)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes a score factor for a simple term and returns an explanation for that score factor.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>abstract &nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#lengthNorm(java.lang.String, int)">lengthNorm</a></b>(<a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/String.html" title="class or interface in java.lang">String</a>&nbsp;fieldName, int&nbsp;numTokens)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes the normalization value for a field given the total number of terms contained in a field.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>abstract &nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#queryNorm(float)">queryNorm</a></b>(float&nbsp;sumOfSquaredWeights)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes the normalization value for a query given the sum of the squared weights of each of the query terms.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#scorePayload(int, java.lang.String, int, int, byte[], int, int)">scorePayload</a></b>(int&nbsp;docId, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/String.html" title="class or interface in java.lang">String</a>&nbsp;fieldName, int&nbsp;start, int&nbsp;end, byte[]&nbsp;payload, int&nbsp;offset, int&nbsp;length)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Calculate a scoring factor based on the data in the payload.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>static&nbsp;void</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#setDefault(org.apache.lucene.search.Similarity)">setDefault</a></b>(<a href="../../../../org/apache/lucene/search/Similarity.html" title="class in org.apache.lucene.search">Similarity</a>&nbsp;similarity)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the default Similarity implementation used by indexing and search code.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>abstract &nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#sloppyFreq(int)">sloppyFreq</a></b>(int&nbsp;distance)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes the amount of a sloppy phrase match, based on an edit distance.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>abstract &nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#tf(float)">tf</a></b>(float&nbsp;freq)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes a score factor based on a term or phrase's frequency in a document.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;float</code></font></td> 
     <td><code><b><a href="../../../../org/apache/lucene/search/Similarity.html#tf(int)">tf</a></b>(int&nbsp;freq)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Computes a score factor based on a term or phrase's frequency in a document.</td> 
    </tr> 
   </tbody>
  </table> &nbsp;
  <a name="methods_inherited_from_class_java.lang.Object">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#EEEEFF" class="TableSubHeadingColor"> 
     <th align="left"><b>Methods inherited from class java.lang.<a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html" title="class or interface in java.lang">Object</a></b></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#clone()" title="class or interface in java.lang">clone</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#equals(java.lang.Object)" title="class or interface in java.lang">equals</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#finalize()" title="class or interface in java.lang">finalize</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#getClass()" title="class or interface in java.lang">getClass</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#hashCode()" title="class or interface in java.lang">hashCode</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#notify()" title="class or interface in java.lang">notify</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#notifyAll()" title="class or interface in java.lang">notifyAll</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#toString()" title="class or interface in java.lang">toString</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#wait()" title="class or interface in java.lang">wait</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#wait(long)" title="class or interface in java.lang">wait</a>, <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/Object.html#wait(long, int)" title="class or interface in java.lang">wait</a></code></td> 
    </tr> 
   </tbody>
  </table> &nbsp; 
  <p> 
   <!-- ============ FIELD DETAIL =========== --> <a name="field_detail">
    <!-- --></a> </p>
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="1"><font size="+2"> <b>Field Detail</b></font></th> 
    </tr> 
   </tbody>
  </table> 
  <a name="NO_DOC_ID_PROVIDED">
   <!-- --></a>
  <h3> NO_DOC_ID_PROVIDED</h3> 
  <pre>
public static final int <b>NO_DOC_ID_PROVIDED</b></pre> 
  <dl> 
   <dl> 
    <dt>
     <b>See Also:</b>
    </dt>
    <dd>
     <a href="../../../../constant-values.html#org.apache.lucene.search.Similarity.NO_DOC_ID_PROVIDED">Constant Field Values</a>
    </dd>
   </dl> 
  </dl> 
  <!-- ========= CONSTRUCTOR DETAIL ======== --> 
  <a name="constructor_detail">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="1"><font size="+2"> <b>Constructor Detail</b></font></th> 
    </tr> 
   </tbody>
  </table> 
  <a name="Similarity()">
   <!-- --></a>
  <h3> Similarity</h3> 
  <pre>
public <b>Similarity</b>()</pre> 
  <dl> 
  </dl> 
  <!-- ============ METHOD DETAIL ========== --> 
  <a name="method_detail">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="1"><font size="+2"> <b>Method Detail</b></font></th> 
    </tr> 
   </tbody>
  </table> 
  <a name="setDefault(org.apache.lucene.search.Similarity)">
   <!-- --></a>
  <h3> setDefault</h3> 
  <pre>
public static void <b>setDefault</b>(<a href="../../../../org/apache/lucene/search/Similarity.html" title="class in org.apache.lucene.search">Similarity</a>&nbsp;similarity)</pre> 
  <dl> 
   <dd>
    Set the default Similarity implementation used by indexing and search code. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../../../../org/apache/lucene/search/Searcher.html#setSimilarity(org.apache.lucene.search.Similarity)"><code>Searcher.setSimilarity(Similarity)</code></a>, 
      <a href="../../../../org/apache/lucene/index/IndexWriter.html#setSimilarity(org.apache.lucene.search.Similarity)"><code>IndexWriter.setSimilarity(Similarity)</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getDefault()">
   <!-- --></a>
  <h3> getDefault</h3> 
  <pre>
public static <a href="../../../../org/apache/lucene/search/Similarity.html" title="class in org.apache.lucene.search">Similarity</a> <b>getDefault</b>()</pre> 
  <dl> 
   <dd>
    Return the default Similarity implementation used by indexing and search code. 
    <p>This is initially an instance of <a href="../../../../org/apache/lucene/search/DefaultSimilarity.html" title="class in org.apache.lucene.search"><code>DefaultSimilarity</code></a>. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../../../../org/apache/lucene/search/Searcher.html#setSimilarity(org.apache.lucene.search.Similarity)"><code>Searcher.setSimilarity(Similarity)</code></a>, 
      <a href="../../../../org/apache/lucene/index/IndexWriter.html#setSimilarity(org.apache.lucene.search.Similarity)"><code>IndexWriter.setSimilarity(Similarity)</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="decodeNorm(byte)">
   <!-- --></a>
  <h3> decodeNorm</h3> 
  <pre>
public static float <b>decodeNorm</b>(byte&nbsp;b)</pre> 
  <dl> 
   <dd>
    Decodes a normalization factor stored in an index. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../../../../org/apache/lucene/search/Similarity.html#encodeNorm(float)"><code>encodeNorm(float)</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getNormDecoder()">
   <!-- --></a>
  <h3> getNormDecoder</h3> 
  <pre>
public static float[] <b>getNormDecoder</b>()</pre> 
  <dl> 
   <dd>
    Returns a table for decoding normalization bytes. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../../../../org/apache/lucene/search/Similarity.html#encodeNorm(float)"><code>encodeNorm(float)</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="computeNorm(java.lang.String, org.apache.lucene.index.FieldInvertState)">
   <!-- --></a>
  <h3> computeNorm</h3> 
  <pre>
public float <b>computeNorm</b>(<a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/String.html" title="class or interface in java.lang">String</a>&nbsp;field,
                         <a href="../../../../org/apache/lucene/index/FieldInvertState.html" title="class in org.apache.lucene.index">FieldInvertState</a>&nbsp;state)</pre> 
  <dl> 
   <dd>
    Compute the normalization value for a field, given the accumulated state of term processing for this field (see 
    <a href="../../../../org/apache/lucene/index/FieldInvertState.html" title="class in org.apache.lucene.index"><code>FieldInvertState</code></a>). 
    <p>Implementations should calculate a float value based on the field state and then return that value. </p>
    <p>For backward compatibility this method by default calls <a href="../../../../org/apache/lucene/search/Similarity.html#lengthNorm(java.lang.String, int)"><code>lengthNorm(String, int)</code></a> passing <a href="../../../../org/apache/lucene/index/FieldInvertState.html#getLength()"><code>FieldInvertState.getLength()</code></a> as the second argument, and then multiplies this value by <a href="../../../../org/apache/lucene/index/FieldInvertState.html#getBoost()"><code>FieldInvertState.getBoost()</code></a>.</p> 
    <p><b>WARNING</b>: This API is new and experimental and may suddenly change.</p> 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>field</code> - field name
     </dd>
     <dd>
      <code>state</code> - current processing state for this field 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      the calculated float norm
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="lengthNorm(java.lang.String, int)">
   <!-- --></a>
  <h3> lengthNorm</h3> 
  <pre>
public abstract float <b>lengthNorm</b>(<a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/String.html" title="class or interface in java.lang">String</a>&nbsp;fieldName,
                                 int&nbsp;numTokens)</pre> 
  <dl> 
   <dd>
    Computes the normalization value for a field given the total number of terms contained in a field. These values, together with field boosts, are stored in an index and multipled into scores for hits on each field by the search code. 
    <p>Matches in longer fields are less precise, so implementations of this method usually return smaller values when <code>numTokens</code> is large, and larger values when <code>numTokens</code> is small. </p>
    <p>Note that the return values are computed under <a href="../../../../org/apache/lucene/index/IndexWriter.html#addDocument(org.apache.lucene.document.Document)"><code>IndexWriter.addDocument(org.apache.lucene.document.Document)</code></a> and then stored using <a href="../../../../org/apache/lucene/search/Similarity.html#encodeNorm(float)"><code>encodeNorm(float)</code></a>. Thus they have limited precision, and documents must be re-indexed if this method is altered. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>fieldName</code> - the name of the field
     </dd>
     <dd>
      <code>numTokens</code> - the total number of tokens contained in fields named 
      <i>fieldName</i> of 
      <i>doc</i>. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      a normalization factor for hits on this field of this document
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../../../../org/apache/lucene/document/AbstractField.html#setBoost(float)"><code>AbstractField.setBoost(float)</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="queryNorm(float)">
   <!-- --></a>
  <h3> queryNorm</h3> 
  <pre>
public abstract float <b>queryNorm</b>(float&nbsp;sumOfSquaredWeights)</pre> 
  <dl> 
   <dd>
    Computes the normalization value for a query given the sum of the squared weights of each of the query terms. This value is multiplied into the weight of each query term. While the classic query normalization factor is computed as 1/sqrt(sumOfSquaredWeights), other implementations might completely ignore sumOfSquaredWeights (ie return 1). 
    <p>This does not affect ranking, but the default implementation does make scores from different queries more comparable than they would be by eliminating the magnitude of the Query vector as a factor in the score. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>sumOfSquaredWeights</code> - the sum of the squares of query term weights 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      a normalization factor for query weights
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="encodeNorm(float)">
   <!-- --></a>
  <h3> encodeNorm</h3> 
  <pre>
public static byte <b>encodeNorm</b>(float&nbsp;f)</pre> 
  <dl> 
   <dd>
    Encodes a normalization factor for storage in an index. 
    <p>The encoding uses a three-bit mantissa, a five-bit exponent, and the zero-exponent point at 15, thus representing values from around 7x10^9 to 2x10^-9 with about one significant decimal digit of accuracy. Zero is also represented. Negative numbers are rounded up to zero. Values too large to represent are rounded down to the largest representable value. Positive values too small to represent are rounded up to the smallest positive representable value. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../../../../org/apache/lucene/document/AbstractField.html#setBoost(float)"><code>AbstractField.setBoost(float)</code></a>, 
      <a href="../../../../org/apache/lucene/util/SmallFloat.html" title="class in org.apache.lucene.util"><code>SmallFloat</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="tf(int)">
   <!-- --></a>
  <h3> tf</h3> 
  <pre>
public float <b>tf</b>(int&nbsp;freq)</pre> 
  <dl> 
   <dd>
    Computes a score factor based on a term or phrase's frequency in a document. This value is multiplied by the 
    <a href="../../../../org/apache/lucene/search/Similarity.html#idf(int, int)"><code>idf(int, int)</code></a> factor for each term in the query and these products are then summed to form the initial score for a document. 
    <p>Terms and phrases repeated in a document indicate the topic of the document, so implementations of this method usually return larger values when <code>freq</code> is large, and smaller values when <code>freq</code> is small. </p>
    <p>The default implementation calls <a href="../../../../org/apache/lucene/search/Similarity.html#tf(float)"><code>tf(float)</code></a>. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>freq</code> - the frequency of a term within a document 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      a score factor based on a term's within-document frequency
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="sloppyFreq(int)">
   <!-- --></a>
  <h3> sloppyFreq</h3> 
  <pre>
public abstract float <b>sloppyFreq</b>(int&nbsp;distance)</pre> 
  <dl> 
   <dd>
    Computes the amount of a sloppy phrase match, based on an edit distance. This value is summed for each sloppy phrase match in a document to form the frequency that is passed to 
    <a href="../../../../org/apache/lucene/search/Similarity.html#tf(float)"><code>tf(float)</code></a>. 
    <p>A phrase match with a small edit distance to a document passage more closely matches the document, so implementations of this method usually return larger values when the edit distance is small and smaller values when it is large. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>distance</code> - the edit distance of this sloppy phrase match 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      the frequency increment for this match
     </dd>
     <dt>
      <b>See Also:</b>
     </dt>
     <dd>
      <a href="../../../../org/apache/lucene/search/PhraseQuery.html#setSlop(int)"><code>PhraseQuery.setSlop(int)</code></a>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="tf(float)">
   <!-- --></a>
  <h3> tf</h3> 
  <pre>
public abstract float <b>tf</b>(float&nbsp;freq)</pre> 
  <dl> 
   <dd>
    Computes a score factor based on a term or phrase's frequency in a document. This value is multiplied by the 
    <a href="../../../../org/apache/lucene/search/Similarity.html#idf(int, int)"><code>idf(int, int)</code></a> factor for each term in the query and these products are then summed to form the initial score for a document. 
    <p>Terms and phrases repeated in a document indicate the topic of the document, so implementations of this method usually return larger values when <code>freq</code> is large, and smaller values when <code>freq</code> is small. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>freq</code> - the frequency of a term within a document 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      a score factor based on a term's within-document frequency
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="idfExplain(org.apache.lucene.index.Term, org.apache.lucene.search.Searcher)">
   <!-- --></a>
  <h3> idfExplain</h3> 
  <pre>
public <a href="../../../../org/apache/lucene/search/Explanation.IDFExplanation.html" title="class in org.apache.lucene.search">Explanation.IDFExplanation</a> <b>idfExplain</b>(<a href="../../../../org/apache/lucene/index/Term.html" title="class in org.apache.lucene.index">Term</a>&nbsp;term,
                                             <a href="../../../../org/apache/lucene/search/Searcher.html" title="class in org.apache.lucene.search">Searcher</a>&nbsp;searcher)
                                      throws <a href="http://java.sun.com/j2se/1.5/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</a></pre> 
  <dl> 
   <dd>
    Computes a score factor for a simple term and returns an explanation for that score factor. 
    <p> The default implementation uses: </p>
    <pre>
 idf(searcher.docFreq(term), searcher.maxDoc());
 </pre> Note that 
    <a href="../../../../org/apache/lucene/search/Searcher.html#maxDoc()"><code>Searcher.maxDoc()</code></a> is used instead of 
    <a href="../../../../org/apache/lucene/index/IndexReader.html#numDocs()"><code>IndexReader#numDocs()</code></a> because also 
    <a href="../../../../org/apache/lucene/search/Searcher.html#docFreq(org.apache.lucene.index.Term)"><code>Searcher.docFreq(Term)</code></a> is used, and when the latter is inaccurate, so is 
    <a href="../../../../org/apache/lucene/search/Searcher.html#maxDoc()"><code>Searcher.maxDoc()</code></a>, and in the same direction. In addition, 
    <a href="../../../../org/apache/lucene/search/Searcher.html#maxDoc()"><code>Searcher.maxDoc()</code></a> is more efficient to compute 
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>term</code> - the term in question
     </dd>
     <dd>
      <code>searcher</code> - the document collection being searched 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      an IDFExplain object that includes both an idf score factor and an explanation for the term. 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://java.sun.com/j2se/1.5/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</a></code>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="idfExplain(java.util.Collection, org.apache.lucene.search.Searcher)">
   <!-- --></a>
  <h3> idfExplain</h3> 
  <pre>
public <a href="../../../../org/apache/lucene/search/Explanation.IDFExplanation.html" title="class in org.apache.lucene.search">Explanation.IDFExplanation</a> <b>idfExplain</b>(<a href="http://java.sun.com/j2se/1.5/docs/api/java/util/Collection.html" title="class or interface in java.util">Collection</a>&lt;<a href="../../../../org/apache/lucene/index/Term.html" title="class in org.apache.lucene.index">Term</a>&gt;&nbsp;terms,
                                             <a href="../../../../org/apache/lucene/search/Searcher.html" title="class in org.apache.lucene.search">Searcher</a>&nbsp;searcher)
                                      throws <a href="http://java.sun.com/j2se/1.5/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</a></pre> 
  <dl> 
   <dd>
    Computes a score factor for a phrase. 
    <p> The default implementation sums the idf factor for each term in the phrase. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>terms</code> - the terms in the phrase
     </dd>
     <dd>
      <code>searcher</code> - the document collection being searched 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      an IDFExplain object that includes both an idf score factor for the phrase and an explanation for each term. 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code><a href="http://java.sun.com/j2se/1.5/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</a></code>
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="idf(int, int)">
   <!-- --></a>
  <h3> idf</h3> 
  <pre>
public abstract float <b>idf</b>(int&nbsp;docFreq,
                          int&nbsp;numDocs)</pre> 
  <dl> 
   <dd>
    Computes a score factor based on a term's document frequency (the number of documents which contain the term). This value is multiplied by the 
    <a href="../../../../org/apache/lucene/search/Similarity.html#tf(int)"><code>tf(int)</code></a> factor for each term in the query and these products are then summed to form the initial score for a document. 
    <p>Terms that occur in fewer documents are better indicators of topic, so implementations of this method usually return larger values for rare terms, and smaller values for common terms. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>docFreq</code> - the number of documents which contain the term
     </dd>
     <dd>
      <code>numDocs</code> - the total number of documents in the collection 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      a score factor based on the term's document frequency
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="coord(int, int)">
   <!-- --></a>
  <h3> coord</h3> 
  <pre>
public abstract float <b>coord</b>(int&nbsp;overlap,
                            int&nbsp;maxOverlap)</pre> 
  <dl> 
   <dd>
    Computes a score factor based on the fraction of all query terms that a document contains. This value is multiplied into scores. 
    <p>The presence of a large portion of the query terms indicates a better match with the query, so implementations of this method usually return larger values when the ratio between these parameters is large and smaller values when the ratio between them is small. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>overlap</code> - the number of query terms matched in the document
     </dd>
     <dd>
      <code>maxOverlap</code> - the total number of terms in the query 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      a score factor based on term overlap with the query
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="scorePayload(int, java.lang.String, int, int, byte[], int, int)">
   <!-- --></a>
  <h3> scorePayload</h3> 
  <pre>
public float <b>scorePayload</b>(int&nbsp;docId,
                          <a href="http://java.sun.com/j2se/1.5/docs/api/java/lang/String.html" title="class or interface in java.lang">String</a>&nbsp;fieldName,
                          int&nbsp;start,
                          int&nbsp;end,
                          byte[]&nbsp;payload,
                          int&nbsp;offset,
                          int&nbsp;length)</pre> 
  <dl> 
   <dd>
    Calculate a scoring factor based on the data in the payload. Overriding implementations are responsible for interpreting what is in the payload. Lucene makes no assumptions about what is in the byte array. 
    <p> The default implementation returns 1. </p>
    <p> </p>
   </dd>
   <dd>
    <dl> 
    </dl> 
   </dd> 
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>docId</code> - The docId currently being scored. If this value is 
      <a href="../../../../org/apache/lucene/search/Similarity.html#NO_DOC_ID_PROVIDED"><code>NO_DOC_ID_PROVIDED</code></a>, then it should be assumed that the PayloadQuery implementation does not provide document information
     </dd>
     <dd>
      <code>fieldName</code> - The fieldName of the term this payload belongs to
     </dd>
     <dd>
      <code>start</code> - The start position of the payload
     </dd>
     <dd>
      <code>end</code> - The end position of the payload
     </dd>
     <dd>
      <code>payload</code> - The payload byte array to be scored
     </dd>
     <dd>
      <code>offset</code> - The offset into the payload array
     </dd>
     <dd>
      <code>length</code> - The length in the array 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      An implementation dependent float to be used as a scoring factor
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <!-- ========= END OF CLASS DATA ========= --> 
  <hr> 
  <!-- ======= START OF BOTTOM NAVBAR ====== --> 
  <a name="navbar_bottom">
   <!-- --></a> 
  <a href="#skip-navbar_bottom" title="Skip navigation links"></a> 
  <table border="0" width="100%" cellpadding="1" cellspacing="0" summary=""> 
   <tbody>
    <tr> 
     <td colspan="2" bgcolor="#EEEEFF" class="NavBarCell1"> <a name="navbar_bottom_firstrow">
       <!-- --></a> 
      <table border="0" cellpadding="0" cellspacing="3" summary=""> 
       <tbody>
        <tr align="center" valign="top"> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../../overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td> 
         <td bgcolor="#FFFFFF" class="NavBarCell1Rev"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="class-use/Similarity.html"><font class="NavBarFont1"><b>Use</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../../deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../../index-all.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../../help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td> 
        </tr> 
       </tbody>
      </table> </td> 
     <td align="right" valign="top" rowspan="3"><em> </em> </td> 
    </tr> 
    <tr> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> &nbsp;<a href="../../../../org/apache/lucene/search/Searcher.html" title="class in org.apache.lucene.search"><b>PREV CLASS</b></a>&nbsp; &nbsp;<a href="../../../../org/apache/lucene/search/SimilarityDelegator.html" title="class in org.apache.lucene.search"><b>NEXT CLASS</b></a></font></td> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> <a href="../../../../index.html?org/apache/lucene/search/Similarity.html" target="_top"><b>FRAMES</b></a> &nbsp; &nbsp;<a href="Similarity.html" target="_top"><b>NO FRAMES</b></a> &nbsp; &nbsp;<script type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</script> 
       <noscript> 
        <a href="../../../../allclasses-noframe.html"><b>All Classes</b></a> 
       </noscript> </font></td> 
    </tr> 
    <tr> 
     <td valign="top" class="NavBarCell3"><font size="-2"> SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<a href="#field_summary">FIELD</a>&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td> 
     <td valign="top" class="NavBarCell3"><font size="-2"> DETAIL:&nbsp;<a href="#field_detail">FIELD</a>&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td> 
    </tr> 
   </tbody>
  </table> 
  <a name="skip-navbar_bottom"></a> 
  <!-- ======== END OF BOTTOM NAVBAR ======= --> 
  <hr> Copyright © 2000-2010 Apache Software Foundation. All Rights Reserved.   
 </body>
</html>