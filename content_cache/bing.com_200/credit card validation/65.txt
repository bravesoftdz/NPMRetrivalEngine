<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml"> 
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /> 
  <title>Source Packages/com/corejsf/CreditCardValidator.java</title> 
 </head> 
 <body> 
  <div id="ROOT" title="Source Packages/com/corejsf/CreditCardValidator.java"> 
   <pre><span class="keyword-directive">package</span> com.corejsf;

<span class="keyword-directive">import</span> java.io.Serializable;
<span class="keyword-directive">import</span> java.text.MessageFormat;
<span class="keyword-directive">import</span> java.util.Locale;

<span class="keyword-directive">import</span> javax.faces.application.FacesMessage;
<span class="keyword-directive">import</span> javax.faces.component.UIComponent;
<span class="keyword-directive">import</span> javax.faces.context.FacesContext;
<span class="keyword-directive">import</span> javax.faces.validator.FacesValidator;
<span class="keyword-directive">import</span> javax.faces.validator.Validator;
<span class="keyword-directive">import</span> javax.faces.validator.ValidatorException;

@FacesValidator(<span class="character">"</span><span class="character">com.corejsf.CreditCard</span><span class="character">"</span>)
<span class="keyword-directive">public</span> <span class="keyword-directive">class</span> CreditCardValidator <span class="keyword-directive">imp</span><span class="keyword-directive">lements</span> Validator, Serializable {
   <span class="keyword-directive">private</span> String errorSummary;
   <span class="keyword-directive">private</span> String errorDetail;

   <span class="keyword-directive">public</span> <span class="keyword-directive">void</span> validate(FacesContext context, UIComponent component,
         Object value) {
      <span class="keyword-directive">if</span>(value == <span class="keyword-directive">null</span>) <span class="keyword-directive">return</span>;
      String cardNumber;
      <span class="keyword-directive">if</span> (value <span class="keyword-directive">instanceof</span> CreditCard)
         cardNumber = value.toString();
      <span class="keyword-directive">else</span>
         cardNumber = getDigitsOnly(value.toString());
      <span class="keyword-directive">if</span>(!luhnCheck(cardNumber)) {
         FacesMessage message
            = com.corejsf.util.Messages.getMessage(
               <span class="character">"</span><span class="character">com.corejsf.messages</span><span class="character">"</span>, <span class="character">"</span><span class="character">badLuhnCheck</span><span class="character">"</span>, <span class="keyword-directive">null</span>);
         message.setSeverity(FacesMessage.SEVERITY_ERROR);
         Locale locale = context.getViewRoot().getLocale();
         Object[] params = <span class="keyword-directive">new</span> Object[] { value };
         <span class="keyword-directive">if</span> (errorSummary != <span class="keyword-directive">null</span>)
            message.setSummary(
                  <span class="keyword-directive">new</span> MessageFormat(errorSummary, locale).format(params));
         <span class="keyword-directive">if</span> (errorDetail != <span class="keyword-directive">null</span>)
            message.setDetail(
                  <span class="keyword-directive">new</span> MessageFormat(errorDetail, locale).format(params));
         <span class="keyword-directive">throw</span> <span class="keyword-directive">new</span> ValidatorException(message);
      }
   }

   <span class="keyword-directive">public</span> <span class="keyword-directive">void</span> setErrorSummary(String newValue) {
      errorSummary = newValue;
   }

   <span class="keyword-directive">public</span> <span class="keyword-directive">void</span> setErrorDetail(String newValue) {
      errorDetail = newValue;
   }

   <span class="keyword-directive">private</span> <span class="keyword-directive">static</span> <span class="keyword-directive">boolean</span> luhnCheck(String cardNumber) {
      <span class="keyword-directive">int</span> sum = 0;

      <span class="keyword-directive">for</span>(<span class="keyword-directive">int</span> i = cardNumber.length() - 1; i &gt;= 0; i -= 2) {
         sum += Integer.parseInt(cardNumber.substring(i, i + 1));
         <span class="keyword-directive">if</span>(i &gt; 0) {
            <span class="keyword-directive">int</span> d = 2 * Integer.parseInt(cardNumber.substring(i - 1, i));
            <span class="keyword-directive">if</span>(d &gt; 9) d -= 9;
            sum += d;
         }
      }

      <span class="keyword-directive">return</span> sum % 10 == 0;
   }

   <span class="keyword-directive">private</span> <span class="keyword-directive">stati</span><span class="keyword-directive">c</span> String getDigitsOnly(String s) {
      StringBuilder digitsOnly = <span class="keyword-directive">new</span> StringBuilder ();
      <span class="keyword-directive">char</span> c;
      <span class="keyword-directive">for</span>(<span class="keyword-directive">int</span> i = 0; i &lt; s.length (); i++) {
         c = s.charAt (i);
         <span class="keyword-directive">if</span> (Character.isDigit(c)) {
            digitsOnly.append(c);
         }
      }
      <span class="keyword-directive">return</span> digitsOnly.toString ();
   }
}</pre> 
  </div> 
 </body> 
</html>