<!doctype html>
<html lang="en" prefix="og: http://ogp.me/ns#">
 <head> 
  <meta charset="utf-8"> 
  <title>chat-service</title> 
  <meta name="description" content="An extensible and scalable chat-like messaging server."> 
  <meta property="og:description" content="An extensible and scalable chat-like messaging server."> 
  <meta property="og:title" content="chat-service"> 
  <meta property="og:url" content="https://www.npmjs.com/package/chat-service"> 
  <meta property="og:site_name" content="npm"> 
  <meta name="keywords" content="chat,messaging,IoT,framework,websocket,websockets,service,microservice,cluster"> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:url" content="https://www.npmjs.com/package/chat-service"> 
  <meta name="twitter:title" content="npm: chat-service"> 
  <meta name="twitter:description" content="An extensible and scalable chat-like messaging server."> 
  <meta http-equiv="cleartype" content="on"> 
  <meta name="apple-mobile-web-app-capable" content="no"> 
  <meta name="viewport" content="width=device-width,minimum-scale=1.0,initial-scale=1,user-scalable=yes"> 
  <meta name="x-npm:ga:id" content="UA-47041310-1"> 
  <meta name="x-npm:ga:dimensions" content="{&quot;aboveChrome&quot;:&quot;dimension1&quot;,&quot;belowHeader&quot;:&quot;dimension3&quot;,&quot;packagePage&quot;:&quot;dimension2&quot;}"> 
  <link rel="canonical" href="https://www.npmjs.com/package/chat-service"> 
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="npm"> 
  <link rel="stylesheet" media="all" href="/static/css/index.css?last-changed=6ce127b3f2f1d381a89d0ac9646eaa04"> 
  <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js"></script>
  <![endif]--> 
  <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700"> 
  <script src="/static/js/index.min.js?last-changed=804eef6a8969a48ed62dc89e2bb9ce65"></script> 
  <style>
      .marketing {
  margin: 0px;
  margin-left: -10px;
  margin-bottom: 40px;
  padding: 0px 0px;
  font-size: 15px;
  font-style: normal;
  fond-variant: normal;
  fort-weight: normal;
  background: rgba(0, 0, 0, 0.02);
  border-radius: 2px;
  border: 1px solid rgba(0, 0, 0, 0.2);
  color: rgba(0, 0, 0, 0.4);
  text-decoration: none;
  letter-spacing: -0.03em;
  line-height: 22.5px;
  }
  
  .marketing a {
  font-weight: 400;
  text-decoration: none;
  color: #cb3837;
  }
  
  .marketing h3 {
  display: block;
  margin: 0;
  padding: 20px 0 10px 0;
  font-size: 20px;
  font-style: normal;
  font-variant: normal;
  font-weight: 400;
  line-height: 22px;
  text-decoration: none;
  color: rgba(0, 0, 0, 0.8);
  }
  
  .marketing h3 a {
  color: rgba(0, 0, 0, 0.8);
  }
  
  .marketing h3 a:hover {
  color: #cb3837;
  }
  
  .marketing p {
  line-height: 22.5px;
  margin-left: 10px;
  margin-right: 10px;
  }
  
  .marketing p a {
  white-space: nowrap;
  }
  
  #marketing-texthed {
  margin-left: 10px;
  }
    </style> 
  <link rel="apple-touch-icon" sizes="57x57" href="/static/images/touch-icons/apple-touch-icon-57x57.png"> 
  <link rel="apple-touch-icon" sizes="60x60" href="/static/images/touch-icons/apple-touch-icon-60x60.png"> 
  <link rel="apple-touch-icon" sizes="72x72" href="/static/images/touch-icons/apple-touch-icon-72x72.png"> 
  <link rel="apple-touch-icon" sizes="76x76" href="/static/images/touch-icons/apple-touch-icon-76x76.png"> 
  <link rel="apple-touch-icon" sizes="114x114" href="/static/images/touch-icons/apple-touch-icon-114x114.png"> 
  <link rel="apple-touch-icon" sizes="120x120" href="/static/images/touch-icons/apple-touch-icon-120x120.png"> 
  <link rel="apple-touch-icon" sizes="144x144" href="/static/images/touch-icons/apple-touch-icon-144x144.png"> 
  <link rel="apple-touch-icon" sizes="152x152" href="/static/images/touch-icons/apple-touch-icon-152x152.png"> 
  <link rel="apple-touch-icon" sizes="180x180" href="/static/images/touch-icons/apple-touch-icon-180x180.png"> 
  <link rel="icon" type="image/png" href="/static/images/touch-icons/favicon-32x32.png" sizes="32x32"> 
  <link rel="icon" type="image/png" href="/static/images/touch-icons/favicon-230x230.png" sizes="230x230"> 
  <link rel="icon" type="image/png" href="/static/images/touch-icons/favicon-96x96.png" sizes="96x96"> 
  <link rel="icon" type="image/png" href="/static/images/touch-icons/android-chrome-192x192.png" sizes="192x192"> 
  <link rel="icon" type="image/png" href="/static/images/touch-icons/coast-228x228.png" sizes="228x228"> 
  <link rel="icon" type="image/png" href="/static/images/touch-icons/favicon-16x16.png" sizes="16x16"> 
  <link rel="manifest" href="/static/images/touch-icons/manifest.json"> 
  <link rel="yandex-tableau-widget" href="/static/images/touch-icons/yandex-browser-manifest.json"> 
  <meta property="og:image" content="https://www.npmjs.com/static/images/touch-icons/open-graph.png"> 
  <meta name="apple-mobile-web-app-capable" content="yes"> 
  <meta name="msapplication-TileColor" content="#cb3837"> 
  <meta name="msapplication-TileImage" content="/static/images/touch-icons/mstile-144x144.png"> 
  <meta name="msapplication-config" content="/static/images/touch-icons/browserconfig.xml"> 
  <meta name="theme-color" content="#cb3837"> 
 </head> 
 <body itemscope itemtype="http://schema.org/WebSite" data-crumb="rqLVRdUwaYwXAi779mxNY_iIGc9ZL4b4RAsyJ1VCAAH"> 
  <meta itemprop="url" content="https://www.npmjs.com/"> 
  <header class="anonymous   "> 
   <!-- logo --> 
   <div class="header-item brand-container"> 
    <div class="logo-container" id="npm-logo"> 
     <a href="/">
      <svg viewbox="0 0 18 7"> 
       <path fill="#CB3837" d="M0,0v6h5v1h4v-1h9v-6" /> 
       <path fill="#FFF" d="M1,1v4h2v-3h1v3h1v-4h1v5h2v-4h1v2h-1v1h2v-4h1v4h2v-3h1v3h1v-3h1v3h1v-4" /> 
      </svg></a> 
    </div> 
   </div> 
   <!-- /logo --> 
   <!-- search --> 
   <div class="header-item header-search-container"> 
    <form class="site-search" id="npm-search" action="/search" method="get" itemprop="potentialAction" itemscope itemtype="http://schema.org/SearchAction"> 
     <meta itemprop="target" content="https://www.npmjs.com/search?q={q}"> 
     <div id="site-search-container"> 
      <input name="q" value="" type="search" id="site-search" placeholder="find packages" tabindex="1" autocorrect="off" autocapitalize="off" itemprop="query-input"> 
     </div> 
     <button tabindex="2" type="submit"> <span class="a11y-only">Search</span> 
      <svg viewbox="0 0 34 34" fill="none" stroke="currentColor"> 
       <ellipse stroke-width="3" cx="16" cy="15" rx="12" ry="12" /> 
       <path d="M26 26 l 8 8" stroke-width="3" stroke-linecap="square" /> 
      </svg> </button> 
    </form> 
   </div> 
   <!-- menu 1 --> 
   <div class="header-item user-info-container"> 
    <div class="user-info"> 
     <ul class="user-info-salutation single"> 
      <li><a href="/signup">sign up</a> or <a href="/login">log in</a></li> 
      <li><a href="/login"><span class="a11y-only">log in</span>
        <svg viewbox="-2765 2857 1080 1080"> 
         <path fill="#986844" d="M-1811.2 3598.5c-.1-4.3-.3-11.3-.8-20.3-.9-15.8-2.7-40.9-6.6-70.7-6.9-52.6-21.6-130.1-52.6-200.4-22.3-50.4-53.5-97.1-90.3-135.2-4.4-20.5-16.7-66.5-43.5-104.8l-5-7.2-54 35.5c-44.5-22.4-91-33.7-138.6-33.7-47.5 0-94.1 11.3-138.6 33.7l-54-35.5-5 7.2c-26.8 38.3-39 84.3-43.5 104.8-36.8 38.1-68 84.8-90.3 135.3-31.1 70.3-45.8 147.8-52.6 200.4-6.1 46.6-7.2 81.6-7.5 93.8 16.6 14 31.3 29.8 46.9 45 17.2 16.7 39.4 28.2 59.1 41.6 1.7 1.1 3.1 2.6 4.2 4.1 15.7 10.4 31 15.4 50.2 19.5 19.2 4.1 35.6 5.6 55.6 7.3 38.7 3.2 77 7.7 115.5 12.6 43.1 5.4 86.5 11.5 130 13.1 41.6 1.5 81.8-9 121.8-19.3 8.9-2.3 17.9-4.5 26.8-6.8.6-4.2 3-8.1 6.7-10.4 40.1-25 81.2-48.2 122-72 5.9-3.5 13.7-1.9 17.9 3.3 9-8.9 17.1-18.2 24.3-27.9l.2-.2.2-.2c1.7-2.6 1.8-2.7 1.5-12.6z" /> 
         <path fill="#FFF" d="M-1808.7 3494.8c-6.9-53.2-21.8-131.7-53.4-203.2-22.3-50.5-53.5-97.5-90.3-136.1-5.5-24.4-18.2-68.2-44.5-105.7l-10.6-15.1-57.3 37.7c-44.3-21.4-90.6-32.2-137.9-32.2-47.2 0-93.6 10.8-137.9 32.2l-57.3-37.7-10.6 15.1c-26.2 37.5-39 81.2-44.5 105.7-36.7 38.5-67.9 85.5-90.3 136.1-31.6 71.4-46.5 149.9-53.4 203.2-7.5 57.7-7.6 98-7.6 99.7v6.3l3.8 5.1c26 35 62.9 64.7 109.6 88.3 36.9 18.6 80 33.6 128.3 44.4 82.2 18.5 151.8 19 159.5 19h.6c7.7 0 77.3-.5 159.5-19 48.3-10.8 91.4-25.8 128.3-44.4 46.7-23.6 83.6-53.3 109.6-88.3l3.7-5v-6.3c.4-1.8.2-42.3-7.3-99.8zm-118.3 174.3c-34.8 17.6-75.8 31.8-121.8 42.1-80.7 18.1-150.4 18.3-153.4 18.3h-.6c-2.9 0-72.7-.2-153.4-18.3-46-10.3-87-24.5-121.8-42.1-41.7-21.1-74.7-47.2-98-77.6.4-22.5 5.1-167.5 58.6-288.5 21.8-49.3 52.4-94.9 88.5-131.8l1.8-1.9.5-2.6c2.7-13.1 12.9-56.4 36.3-93.4l37.2 24.5-7.3 16.6 22.8-11.9c43.3-22.6 88.7-34.1 135-34.1s91.7 11.5 135 34.1l22.8 11.9-7.3-16.6 37.2-24.5c23.4 37 33.6 80.4 36.3 93.4l.5 2.6 1.8 1.9c36.1 36.9 66.7 82.5 88.5 131.8 53.5 121 58.2 266.1 58.6 288.5-23.2 30.4-56.1 56.5-97.8 77.6zm-163-13c0 30.1-50.4 54.4-112.5 54.4s-112.5-24.4-112.5-54.4c0-30.1 50.4-54.4 112.5-54.4s112.5 24.3 112.5 54.4zm-223.5-65.3c0 12.3-10 22.3-22.3 22.3s-22.3-10-22.3-22.3 10-22.3 22.3-22.3c12.3-.1 22.3 9.9 22.3 22.3zm267.8 0c0 12.3-10 22.3-22.3 22.3s-22.3-10-22.3-22.3 10-22.3 22.3-22.3c12.3-.1 22.3 9.9 22.3 22.3z" /> 
        </svg></a></li> 
     </ul> 
    </div> 
    <!-- .user-info --> 
   </div> 
   <!-- /menu 1 --> 
   <!-- menu 2 --> 
   <div class="header-item header-nav-menu-container"> 
    <a href="#" id="npm-expansions" class="npm-expansions" data-event-trigger="click" data-event-name="npm-expansions">node package manager</a> 
    <div class="nav-menu-container" role="navigation"> 
     <a class="nav-toggle drop-down-menu-toggle" href="#product-navigation"><span class="a11y-only">Toggle Navigation</span> 
      <svg viewbox="0 0 44 44"> 
       <rect x="4" y="12" fill="currentColor" width="36" height="2" /> 
       <rect x="4" y="20" fill="currentColor" width="36" height="2" /> 
       <rect x="4" y="28" fill="currentColor" width="36" height="2" /> 
      </svg> </a> 
     <div class="drop-down-menu-container" role="menu"> 
      <nav id="product-navigation" class="product-navigation drop-down-menu"> 
       <ul class="drop-down-menu-section products-list"> 
        <li><a id="nav-enterprise-link" href="/npm/enterprise">npm Enterprise</a></li> 
        <li><a id="nav-features-link" href="/features" data-event-trigger="click" data-event-name="features-nav-link">features</a></li> 
        <li><a id="nav-pricing-link" href="/pricing">pricing</a></li> 
        <li><a id="nav-docs-link" href="https://docs.npmjs.com">documentation</a></li> 
        <li><a id="nav-support-link" href="/support">support</a></li> 
       </ul> 
      </nav> 
     </div> 
    </div> 
   </div> 
   <!-- /menu 2 --> 
  </header> 
  <div class="container content"> 
   <div class="content-column"> 
    <h1 class="package-name"> <a href="/package/chat-service">chat-service</a> <i class="icon-public"></i> </h1> 
    <form class="star"> 
     <input type="hidden" name="name" value="chat-service"> 
     <input id="star-input" type="checkbox" name="isStarred" value="true"> 
     <label for="star-input" class="icon-star"></label> 
     <input type="hidden" name="crumb" value="rqLVRdUwaYwXAi779mxNY_iIGc9ZL4b4RAsyJ1VCAAH"> 
    </form> 
    <div id="readme" class="markdown"> 
     <h1 class="package-name-redundant"><a id="user-content-chat-service" class="deep-link" href="#chat-service">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Chat Service</h1> 
     <p><a href="https://badge.fury.io/js/chat-service"><img src="https://badge.fury.io/js/chat-service.svg" alt="NPM Version" class="badge"></a> <a href="https://travis-ci.org/an-sh/chat-service"><img src="https://travis-ci.org/an-sh/chat-service.svg?branch=master" alt="Build Status" class="badge"></a> <a href="https://ci.appveyor.com/project/an-sh/chat-service"><img src="https://ci.appveyor.com/api/projects/status/qy7v2maica2urkss/branch/master?svg=true" alt="Appveyor status"></a> <a href="https://codecov.io/gh/an-sh/chat-service"><img src="https://codecov.io/gh/an-sh/chat-service/branch/master/graph/badge.svg" alt="Coverage Status" class="badge"></a> <a href="https://david-dm.org/an-sh/chat-service"><img src="https://david-dm.org/an-sh/chat-service.svg" alt="Dependency Status" class="badge"></a> <a href="http://standardjs.com/"><img src="https://img.shields.io/badge/code%20style-standard-brightgreen.svg" alt="JavaScript Style Guide" class="badge"></a></p> 
     <p>Room messaging server implementation that is using a bidirectional RPC protocol to implement chat-like communication. Designed to handle common public network messaging problems like reliable delivery, multiple connections from a single user, real-time permissions and presence. RPC requests processing and a room messages format are customisable via hooks, allowing to implement anything from a chat-rooms server to a collaborative application with a complex conflict resolution. Room messages also can be used to create public APIs or to tunnel M2M communications for IoT devices.</p> 
     <h3><a id="user-content-features" class="deep-link" href="#features">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Features</h3> 
     <ul> 
      <li> <p>Reliable room messaging using a server side history storage and a synchronisation API.</p> </li> 
      <li> <p>Arbitrary messages format via just a validation function (hook), allowing custom/heterogeneous messages formats (including a binary data inside messages).</p> </li> 
      <li> <p>Per-room user presence API with notifications.</p> </li> 
      <li> <p>Realtime room creation and per-room users permissions management APIs. Supports for blacklist or whitelist based access modes and an optional administrators group.</p> </li> 
      <li> <p>Seamless support of multiple users' connections from various devises to any service instance.</p> </li> 
      <li> <p>Written as a stateless microservice, uses Redis (also supports cluster configurations) as a state store, can be horizontally scaled on demand.</p> </li> 
      <li> <p>Extensive customisation support. Custom functionality can be added via hooks before/after for any client request processing. And requests (commands) handlers can be invoked server side via an API.</p> </li> 
      <li> <p>Pluginable networking transport. Client-server communication is done via a bidirectional RPC protocol. Socket.io transport implementation is included.</p> </li> 
      <li> <p>Pluginable state store. Memory and Redis stores are included.</p> </li> 
      <li> <p>Supports lightweight online user to online user messaging.</p> </li> 
      <li> <p>Written in ES2015 (ES6), runs natively on Node.js <code>&gt;= 6</code> (ES5 Babel transpiled code is included and is automatically used for Node.js <code>4.x</code> compatibility).</p> </li> 
     </ul> 
     <h2><a id="user-content-table-of-contents" class="deep-link" href="#table-of-contents">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Table of Contents</h2> 
     <ul> 
      <li><a href="#background">Background</a></li> 
      <li><a href="#installation">Installation</a></li> 
      <li><a href="#usage">Usage</a></li> 
      <li><a href="#api">API</a></li> 
      <li><a href="#concepts-overview">Concepts overview</a></li> 
      <li><a href="#customisation-examples">Customisation examples</a></li> 
      <li><a href="#contribute">Contribute</a></li> 
      <li><a href="#license">License</a></li> 
     </ul> 
     <h2><a id="user-content-background" class="deep-link" href="#background">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Background</h2> 
     <p>Read this <a href="https://medium.com/@an_sh_1/chat-service-project-announcement-and-overview-92283fe80d93">article</a> for more background information.</p> 
     <h2><a id="user-content-installation" class="deep-link" href="#installation">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Installation</h2> 
     <p>This project is a <a href="http://nodejs.org">node</a> module available via <a href="https://npmjs.com">npm</a>. Go check them out if you don't have them locally installed.</p> 
     <div class="highlight sh">
      <pre class="editor editor-colors">
       <div class="line">
        <span class="source shell"><span>$&nbsp;npm&nbsp;i&nbsp;chat-service</span></span>
       </div></pre>
     </div> 
     <h2><a id="user-content-usage" class="deep-link" href="#usage">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Usage</h2> 
     <h3><a id="user-content-quickstart-with-socketio" class="deep-link" href="#quickstart-with-socketio">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Quickstart with socket.io</h3> 
     <p>First define a server configuration. On a server-side define a socket connection hook, as the service is relying on an extern auth implementation. An user just needs to pass an auth check, no explicit user adding step is required.</p> 
     <div class="highlight javascript">
      <pre class="editor editor-colors">
       <div class="line">
        <span class="source js"><span class="storage modifier js"><span>const</span></span><span>&nbsp;</span><span class="constant other js"><span>ChatService</span></span><span>&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>chat-service</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;</span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="storage modifier js"><span>const</span></span><span>&nbsp;</span><span class="constant other js"><span>port</span></span><span>&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="constant numeric decimal js"><span>8000</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;</span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span>&nbsp;</span><span class="entity name function js"><span>onConnect</span></span><span>&nbsp;</span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>service</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="variable function js"><span>id</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span>&nbsp;</span><span class="punctuation definition function begin curly js"><span>{</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="punctuation comment js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Assuming&nbsp;that&nbsp;auth&nbsp;data&nbsp;is&nbsp;passed&nbsp;in&nbsp;a&nbsp;query&nbsp;string.</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;&nbsp;</span><span class="storage type js"><span>let</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span><span>&nbsp;query&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="variable other object js"><span>service</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other object js"><span>transport</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>getHandshakeData</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>id</span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;&nbsp;</span><span class="storage type js"><span>let</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span><span>&nbsp;userName&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;query</span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="punctuation comment js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Actually&nbsp;check&nbsp;auth&nbsp;data.</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="punctuation comment js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;...</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="punctuation comment js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Return&nbsp;a&nbsp;promise&nbsp;that&nbsp;resolves&nbsp;with&nbsp;a&nbsp;login&nbsp;string.</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="variable other object js"><span>Promise</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>resolve</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>userName</span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="punctuation definition function end curly js"><span>}</span></span></span>
       </div></pre>
     </div> 
     <p>Creating a server is a simple object instantiation. Note: <code>close</code> method <em>must</em> be called to correctly shutdown a service instance (see <a href="#failures-recovery">Failures recovery</a>).</p> 
     <div class="highlight javascript">
      <pre class="editor editor-colors">
       <div class="line">
        <span class="source js"><span class="storage modifier js"><span>const</span></span><span>&nbsp;</span><span class="constant other js"><span>chatService</span></span><span>&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>ChatService</span></span></span><span class="meta brace round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span>port</span><span class="meta brace curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span><span>onConnect</span><span class="meta brace curly js"><span>}</span></span><span class="meta brace round js"><span>)</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;</span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="support variable js"><span>process</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>on</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>SIGINT</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span>&nbsp;</span><span class="storage type function js"><span>=&gt;</span></span></span><span>&nbsp;</span><span class="variable other object js"><span>chatService</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function dom js"><span>close</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>finally</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span>&nbsp;</span><span class="storage type function js"><span>=&gt;</span></span></span><span>&nbsp;</span><span class="support variable js"><span>process</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>exit</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div></pre>
     </div> 
     <p>Server is now running on port <code>8000</code>, using <code>memory</code> state. By default <code>'/chat-service'</code> socket.io namespace is used. Add a room with <code>admin</code> user as the room owner. All rooms must be explicitly created (option to allow rooms creation from a client side is also provided).</p> 
     <div class="highlight javascript">
      <pre class="editor editor-colors">
       <div class="line">
        <span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;The&nbsp;room&nbsp;configuration&nbsp;and&nbsp;messages&nbsp;will&nbsp;persist&nbsp;if&nbsp;redis&nbsp;state&nbsp;is</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;used.&nbsp;addRoom&nbsp;will&nbsp;reject&nbsp;a&nbsp;promise&nbsp;if&nbsp;the&nbsp;room&nbsp;is&nbsp;already&nbsp;created.</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="variable other object js"><span>chatService</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>hasRoom</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>default</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>then</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>hasRoom</span></span></span><span>&nbsp;</span><span class="storage type function js"><span>=&gt;</span></span></span><span>&nbsp;</span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator logical js"><span>!</span></span><span>hasRoom</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="variable other object js"><span>chatService</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>addRoom</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>default</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span><span>&nbsp;owner</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>admin</span><span class="punctuation definition string end js"><span>'</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div></pre>
     </div> 
     <p>On a client just a <code>socket.io-client</code> implementation is required. To send a request (command) use <code>emit</code> method, the result (or an error) will be returned in socket.io ack callback. To listen to server messages use <code>on</code> method.</p> 
     <div class="highlight javascript">
      <pre class="editor editor-colors">
       <div class="line">
        <span class="source js"><span class="storage modifier js"><span>const</span></span><span>&nbsp;</span><span class="constant other js"><span>io</span></span><span>&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>socket.io-client</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;</span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Use&nbsp;https&nbsp;or&nbsp;wss&nbsp;in&nbsp;production.</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="storage type js"><span>let</span></span><span>&nbsp;url&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>ws://localhost:8000/chat-service</span><span class="punctuation definition string end js"><span>'</span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="storage type js"><span>let</span></span><span>&nbsp;userName&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>user</span><span class="punctuation definition string end js"><span>'</span></span></span><span>&nbsp;</span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;for&nbsp;example&nbsp;and&nbsp;debug</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="storage type js"><span>let</span></span><span>&nbsp;token&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>token</span><span class="punctuation definition string end js"><span>'</span></span></span><span>&nbsp;</span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;auth&nbsp;token</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="storage type js"><span>let</span></span><span>&nbsp;query&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="string quoted template js"><span class="punctuation definition string begin js"><span>`</span></span><span>userName=</span><span class="source js embedded source"><span class="punctuation section embedded js"><span>${</span></span><span>userName</span><span class="punctuation section embedded js"><span>}</span></span></span><span>&amp;token=</span><span class="source js embedded source"><span class="punctuation section embedded js"><span>${</span></span><span>token</span><span class="punctuation section embedded js"><span>}</span></span></span><span class="punctuation definition string end js"><span>`</span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="storage type js"><span>let</span></span><span>&nbsp;opts&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span><span>&nbsp;query&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;</span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Connect&nbsp;to&nbsp;a&nbsp;server.</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="storage type js"><span>let</span></span><span>&nbsp;socket&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="variable other object js"><span>io</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>connect</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>url</span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;opts</span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;</span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Rooms&nbsp;messages&nbsp;handler&nbsp;(own&nbsp;messages&nbsp;are&nbsp;here&nbsp;too).</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="variable other object js"><span>socket</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>on</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>roomMessage</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>room</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="variable function js"><span>msg</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span>&nbsp;</span><span class="storage type function js"><span>=&gt;</span></span></span><span>&nbsp;</span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span>&nbsp;&nbsp;</span><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>log</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted template js"><span class="punctuation definition string begin js"><span>`</span></span><span class="source js embedded source"><span class="punctuation section embedded js"><span>${</span></span><span class="variable other object js"><span>msg</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>author</span></span><span class="punctuation section embedded js"><span>}</span></span></span><span>:&nbsp;</span><span class="source js embedded source"><span class="punctuation section embedded js"><span>${</span></span><span class="variable other object js"><span>msg</span></span><span class="meta delimiter period js"><span>.</span></span><span class="variable other js"><span>textMessage</span></span><span class="punctuation section embedded js"><span>}</span></span></span><span class="punctuation definition string end js"><span>`</span></span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;</span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Auth&nbsp;success&nbsp;handler.</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="variable other object js"><span>socket</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>on</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>loginConfirmed</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>userName</span></span></span><span>&nbsp;</span><span class="storage type function js"><span>=&gt;</span></span></span><span>&nbsp;</span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation comment js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Join&nbsp;room&nbsp;named&nbsp;'default'.</span><span>&nbsp;</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span>&nbsp;&nbsp;</span><span class="variable other object js"><span>socket</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>emit</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>roomJoin</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>default</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="meta function js"><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="variable function js"><span>error</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="variable function js"><span>data</span></span><span class="punctuation definition end round js"><span>)</span></span></span><span>&nbsp;</span><span class="storage type function js"><span>=&gt;</span></span></span><span>&nbsp;</span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="meta js"><span class="meta js"><span class="punctuation comment js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Check&nbsp;for&nbsp;a&nbsp;command&nbsp;error.</span><span>&nbsp;</span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="meta js"><span class="meta js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>error</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span><span>&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="meta js"><span class="meta js"><span class="punctuation comment js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Now&nbsp;we&nbsp;will&nbsp;receive&nbsp;'default'&nbsp;room&nbsp;messages&nbsp;in&nbsp;'roomMessage'&nbsp;handler.</span><span>&nbsp;</span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="meta js"><span class="meta js"><span class="punctuation comment js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Now&nbsp;we&nbsp;can&nbsp;also&nbsp;send&nbsp;a&nbsp;message&nbsp;to&nbsp;'default'&nbsp;room:</span><span>&nbsp;</span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="meta js"><span class="meta js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable other object js"><span>socket</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>emit</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>roomMessage</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>default</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span><span>&nbsp;textMessage</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>Hello!</span><span class="punctuation definition string end js"><span>'</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="meta js"><span class="meta js"><span>&nbsp;&nbsp;</span><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span>&nbsp;</span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Auth&nbsp;error&nbsp;handler.</span><span>&nbsp;</span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="variable other object js"><span>socket</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>on</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>'</span></span><span>loginRejected</span><span class="punctuation definition string end js"><span>'</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="meta function js"><span class="meta js"><span class="variable function js"><span>error</span></span></span><span>&nbsp;</span><span class="storage type function js"><span>=&gt;</span></span></span><span>&nbsp;</span><span class="punctuation definition function begin curly js"><span>{</span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span>&nbsp;&nbsp;</span><span class="entity name type object console js"><span>console</span></span><span class="meta js"><span class="meta delimiter method period js"><span>.</span></span><span class="support function console js"><span>error</span></span><span class="meta js"><span class="punctuation definition begin round js"><span>(</span></span><span>error</span><span class="punctuation definition end round js"><span>)</span></span></span></span></span></span></span>
       </div>
       <div class="line">
        <span class="source js"><span class="meta js"><span class="meta js"><span class="punctuation definition function end curly js"><span>}</span></span><span class="punctuation definition end round js"><span>)</span></span></span></span></span>
       </div></pre>
     </div> 
     <p>It is a runnable code, files are in <code>example</code> directory.</p> 
     <h3><a id="user-content-integrating-with-other-messaging-systems" class="deep-link" href="#integrating-with-other-messaging-systems">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Integrating with other messaging systems</h3> 
     <p>It is possible to use other transports other than socket.io. There is a proof of concept <a href="https://github.com/an-sh/chat-service-ws-messaging">transport</a>, that is using a WebSocket connection with some minimal API abstraction layer <a href="https://github.com/an-sh/ws-messaging">ws-messaging</a> and a simple <a href="https://github.com/an-sh/emitter-pubsub-broker">emitter-pubsub-broker</a> as backend messaging fanout abstraction.</p> 
     <p>Here are the main things that a transport must allow to do:</p> 
     <ul> 
      <li> <p>Send messages from a server to groups of clients (based on a single string full match criteria, a.k.a. room messaging).</p> </li> 
      <li> <p>Implement request-reply communication from a client to a server.</p> </li> 
      <li> <p>Implement some kind of persistent connection (or semantically equivalent), it is required for a presence tracking.</p> </li> 
     </ul> 
     <h3><a id="user-content-integrating-with-other-databases" class="deep-link" href="#integrating-with-other-databases">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Integrating with other databases</h3> 
     <p>Chat Service is using Redis as a shared store with persistence. In a real application some of this information may be needed by other services, but it is not practical to fully reimplement the state store. A better alternative approach is to use hooks. For example, to save all room messages inside an another database just a <code>roomMessageAfter</code> hook can be used. Also <code>ServiceAPI</code> can be exposed via backend messaging buses to other internal servers.</p> 
     <h3><a id="user-content-debugging" class="deep-link" href="#debugging">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Debugging</h3> 
     <p>Under normal circumstances all errors that are returned to a service user (via request replies, <code>loginConfirmed</code> or <code>loginRejected</code> messages) are instances of <code>ChatServiceError</code>. All other errors indicate a program bug or a failure in a service infrastructure. To enable debug logging of such errors use <code>export NODE_DEBUG=ChatService</code>. The library is using bluebird <code>^3.0.0</code> promises implementation, so to enable long stack traces use <code>export BLUEBIRD_DEBUG=1</code>. It is highly recommended to use promise versions of APIs for hooks and <code>ChatServiceError</code> subclasses for returning hooks custom errors.</p> 
     <h2><a id="user-content-api" class="deep-link" href="#api">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>API</h2> 
     <p>Server side <a href="https://an-sh.github.io/chat-service/0.14/chat-service.html">API</a> and <a href="https://an-sh.github.io/chat-service/0.14/rpc.html">RPC</a> documentation is available online.</p> 
     <h2><a id="user-content-concepts-overview" class="deep-link" href="#concepts-overview">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Concepts overview</h2> 
     <h3><a id="user-content-user-multiple-connections" class="deep-link" href="#user-multiple-connections">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>User multiple connections</h3> 
     <p>Service completely abstracts a connection concept from a user concept, so a single user can have more than one connection (including connections across different nodes). For user presence the number of joined sockets must be just greater than zero. All APIs designed to work on the user level, handling seamlessly user's multiple connections.</p> 
     <p>Connections are completely independent, no additional client side support is required. But there are info messages and commands that can be used to get information about other user's connections. It makes possible to realise client-side sync patterns, like keeping all connections to be joined to the same rooms.</p> 
     <h3><a id="user-content-room-permissions" class="deep-link" href="#room-permissions">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Room permissions</h3> 
     <p>Each room has a permissions system. There is a single owner user, that has all administrator privileges and can assign users to the administrators group. Administrators can manage other users' access permissions. Two modes are supported: blacklist and whitelist. After access lists/mode modifications, service automatically removes users that have lost an access permission.</p> 
     <p>If <code>enableRoomsManagement</code> options is enabled users can create rooms via <code>roomCreate</code> command. The creator of a room will be it's owner and can also delete it via <code>roomDelete</code> command.</p> 
     <p>Before hooks can be used to implement additional permissions systems.</p> 
     <h3><a id="user-content-reliable-messaging-and-history-synchronisation" class="deep-link" href="#reliable-messaging-and-history-synchronisation">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Reliable messaging and history synchronisation</h3> 
     <p>When a user sends a room message, in RPC reply the message <code>id</code> is returned. It means that the message has been saved in a store (in an append only circular buffer like structure). Room message ids are a sequence starting from <code>1</code>, that increases by one for each successfully sent message in the room. A client can always check the last room message id via <code>roomHistoryInfo</code> command, and use <code>roomHistoryGet</code> command to get missing messages. Such approach ensures that a message can be received, unless it is deleted due to rotation.</p> 
     <h3><a id="user-content-custom-messages-format" class="deep-link" href="#custom-messages-format">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Custom messages format</h3> 
     <p>By default a client can send messages that are limited to just a <code>{textMessage: 'Some string'}</code>. To enable custom messages format provide <code>directMessagesChecker</code> or <code>roomMessagesChecker</code> hooks. When a hook resolves, a message format is accepted. Messages can be arbitrary data with a few restrictions. The top level must be an <code>Object</code>, without <code>timestamp</code>, <code>author</code> or <code>id</code> fields (service will fill this fields before sending messages). The nested levels can include arbitrary data types (even binary), but no nested objects with a field <code>type</code> set to <code>'Buffer'</code> (used for binary data manipulations).</p> 
     <h3><a id="user-content-integration-and-customisations" class="deep-link" href="#integration-and-customisations">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Integration and customisations</h3> 
     <p>Each user command supports before and after hook adding, and a client connection/disconnection hooks are supported too. Command and hooks are executed sequentially: before hook - command - after hook (it will be called on command errors too). Sequence termination in before hooks is possible. Clients can send additional command arguments, hooks can read them, and reply with additional arguments.</p> 
     <p>To execute an user command server side <code>execUserCommand</code> is provided. Also there are some more server side only methods provided by <code>ServiceAPI</code> and <code>TransportInterface</code>. Look for some customisation cases in <a href="#customisation-examples">Customisation examples</a>.</p> 
     <h3><a id="user-content-failures-recovery" class="deep-link" href="#failures-recovery">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Failures recovery</h3> 
     <p>Service keeps user presence and connection data in a store, that may be persistent or shared. So if an instance is shutdown incorrectly (without calling or waiting for <code>close</code> method to finish) or lost completely network connection to a store, presence data will become incorrect. To fix this case <code>instanceRecovery</code> method is provided.</p> 
     <p>Also there are more subtle cases regarding connection-dependant data consistency. Transport communication instances and store instances can experience various kind of network, software or hardware failures. In some edge cases (like operation on multiple users) such failures can cause inconsistencies (for the most part errors will be returned to the command's issuers). These events are reported via an instance emitter (like <code>storeConsistencyFailure</code> event), and data can be sync via <code>RecoveryAPI</code> methods.</p> 
     <h2><a id="user-content-customisation-examples" class="deep-link" href="#customisation-examples">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Customisation examples</h2> 
     <h3><a id="user-content-anonymous-listeners" class="deep-link" href="#anonymous-listeners">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Anonymous listeners</h3> 
     <p>By default every user is assumed to have an unique login (userName). Instead of managing names generation, an integration with a separate transport can be used (or a multiplexed connection, for example an another socket.io namespace). Room messages can be forwarded from <code>roomMessage</code> after hook to a transport, that is accessible without a login. And vice versa some service commands can be executed by anonymous users via <code>execUserCommand</code> with bypassing permissions option turned on.</p> 
     <h3><a id="user-content-messages-aggregation-and-filtering" class="deep-link" href="#messages-aggregation-and-filtering">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Messages aggregation and filtering</h3> 
     <p>A <code>roomMessage</code> after hook can be also used to forward messages from one room to another. So rooms can be used for messages aggregation from another rooms. Since hooks are just functions and have a full access to messages content, it allows to implement arbitrary content-based forwarding rules. Including implementing systems with highly personalised user (client) specific feeds.</p> 
     <h3><a id="user-content-explicit-multi-device-announcements" class="deep-link" href="#explicit-multi-device-announcements">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Explicit multi-device announcements</h3> 
     <p>By default there is no way for other users to know the number and types of user connections joined to a room. Such information can be passed, for example in a query string and then saved via a connection hook. The announcement can be made in <code>onJoin</code> and <code>onLeave</code> hooks, using directly transport <code>sendToChannel</code> method. Also additional information regarding joined devices types should be sent from <code>roomGetAccessList</code> after hook (when list name is equal to <code>'userlist'</code>).</p> 
     <h3><a id="user-content-messages-editing-and-deletion" class="deep-link" href="#messages-editing-and-deletion">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Messages editing and deletion</h3> 
     <p>There is no delete or edit operation, as they will make inconsistencies inside a room history. A common alternative for deleting and editing is to use room messages with a special meaning that clients will use to hide or alter messages.</p> 
     <h2><a id="user-content-contribute" class="deep-link" href="#contribute">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>Contribute</h2> 
     <p>If you encounter a bug in this package, please submit a bug report to github repo <a href="https://github.com/an-sh/chat-service/issues">issues</a>.</p> 
     <p>PRs are also accepted.</p> 
     <h2><a id="user-content-license" class="deep-link" href="#license">
       <svg aria-hidden="true" class="deep-link-icon" height="16" version="1.1" width="16">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path>
       </svg></a>License</h2> 
     <p>MIT</p> 
    </div> 
   </div> 
   <div class="sidebar"> 
    <div class="promotion" data-promotion-id="725" data-promotion-spot="packagePage">
     <div class="marketing"> 
      <h3 id="marketing-texthed"><a href="https://www.npmjs.com/features?utm_source=house&amp;utm_medium=package%20page&amp;utm_term=Unleash%20awesomeness&amp;utm_content=hed&amp;utm_campaign=orgs#features-plans-and-enterprise-pane" title="Private Packages and Organizations">Unleash awesomeness</a></h3> 
      <p>Private packages, team management tools, and powerful integrations. <a style="white-space: normal;" href="https://www.npmjs.com/features?utm_source=house&amp;utm_medium=package%20page&amp;utm_term=unleash%20awesomeness&amp;utm_content=body&amp;utm_campaign=orgs#features-plans-and-enterprise-pane" title="Private Packages and Organizations">Get started with npm Orgs</a></p>
     </div>
    </div> 
    <div class="autoselect-wrapper npm-install icon-download"> 
     <input type="text" value="npm install chat-service" readonly> 
     <p><a href="/package/chat-service/tutorial">how? learn more</a></p> 
    </div> 
    <ul class="box"> 
     <li class="last-publisher"> <a href="/~an-sh"> <img src="https://s.gravatar.com/avatar/407be4776ec4f5e1fb0b8522b8fd7e3e?size=100&amp;default=retro" alt="an-sh"> <span>an-sh</span> </a> published <span data-date="2017-02-03T19:26:10.288Z" data-date-format="relative"> 2017-02-03T19:26:10.288Z </span> </li> 
     <li> <strong>0.14.0</strong> is the latest of 23 releases </li> 
     <li> <a href="https://github.com/an-sh/chat-service">github.com/an-sh/chat-service</a> </li> 
     <li> <a href="http://spdx.org/licenses/MIT.html">MIT</a> </li> 
    </ul> 
    <h3 title="collaborators"> Collaborators <small><a href="/package/chat-service/access">list</a></small> </h3> 
    <ul class="humans collaborators"> 
     <li> <a href="/~an-sh" rel="tipsy" title="an-sh"> <img src="https://s.gravatar.com/avatar/407be4776ec4f5e1fb0b8522b8fd7e3e?size=100&amp;default=retro" alt="an-sh"> </a> </li> 
    </ul> 
    <h3>Stats</h3> 
    <ul class="box"> 
     <li> <strong class="pretty-number daily-downloads">0</strong> downloads in the last day </li> 
     <li> <strong class="pretty-number weekly-downloads">50</strong> downloads in the last week </li> 
     <li> <strong class="pretty-number monthly-downloads">152</strong> downloads in the last month </li> 
     <li id="issues" data-ghapi="https://api.github.com/repos/an-sh/chat-service"> <span class="original">Have an issue? <a href="https://github.com/an-sh/chat-service/issues">File it.</a></span> <span class="enhanced" style="display:none"> <a href="https://github.com/an-sh/chat-service/issues"></a> on GitHub </span> </li> 
     <li id="pull_requests" style="display:none"> <a href="https://github.com/an-sh/chat-service/pulls"></a> on GitHub </li> 
    </ul> 
    <h3>Try it out</h3> 
    <ul class="box"> 
     <li class="runkit"><a href="https://runkit.com/npm/chat-service" target="_blank">Test chat-service in your browser.</a></li> 
    </ul> 
    <h3>Keywords</h3> 
    <p class="list-of-links"> <a href="/browse/keyword/chat">chat</a>, <a href="/browse/keyword/messaging">messaging</a>, <a href="/browse/keyword/IoT">IoT</a>, <a href="/browse/keyword/framework">framework</a>, <a href="/browse/keyword/websocket">websocket</a>, <a href="/browse/keyword/websockets">websockets</a>, <a href="/browse/keyword/service">service</a>, <a href="/browse/keyword/microservice">microservice</a>, <a href="/browse/keyword/cluster">cluster</a> </p> 
    <h3>Dependencies (11)</h3> 
    <p class="list-of-links"> <a href="/package/bluebird">bluebird</a>, <a href="/package/check-types">check-types</a>, <a href="/package/event-to-promise">event-to-promise</a>, <a href="/package/ioredis">ioredis</a>, <a href="/package/lodash">lodash</a>, <a href="/package/promise-retry">promise-retry</a>, <a href="/package/safe-buffer">safe-buffer</a>, <a href="/package/semver">semver</a>, <a href="/package/socket.io">socket.io</a>, <a href="/package/socket.io-redis">socket.io-redis</a>, <a href="/package/uid-safe">uid-safe</a> </p> 
    <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "SoftwareApplication",
      "name": "chat-service",
      "description": "An extensible and scalable chat-like messaging server.",
      "url": "https://www.npmjs.com/package/chat-service",
      "keywords": "chat,messaging,IoT,framework,websocket,websockets,service,microservice,cluster",
      "applicationCategory": "DeveloperApplication",
      "offers": {
         "@type": "Offer",
         "price": "0.00"
      }
    }
  </script> 
    <div class="hiring-container" data-template="sidebar"></div> 
   </div> 
  </div> 
  <footer class="pane bg-npm-navy-1"> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-md-6 col-md-offset-3"> 
      <h3 class="h4 type-npm-pastel-3">You Need Help</h3> 
      <hr class="divider-1"> 
      <ul class="list-unstyled h6 em-default"> 
       <li class="pbl"><a class="type-neutral-11" href="https://docs.npmjs.com">Documentation</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="/support">Support / Contact Us</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="http://status.npmjs.org/">Registry Status</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="https://github.com/npm/www/issues">Website Issues</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="https://github.com/npm/npm/issues">CLI Issues</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="/policies/security">Security</a></li> 
      </ul> 
     </div> 
     <div class="col-md-6 col-md-offset-1"> 
      <h3 class="h4 type-npm-pastel-3">About npm</h3> 
      <hr class="divider-1"> 
      <ul class="list-unstyled h6 em-default"> 
       <li class="pbl"><a class="type-neutral-11" href="/about">About npm, Inc</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="/jobs">Jobs</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="/npm-weekly">npm Weekly</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="http://blog.npmjs.org">Blog</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="https://twitter.com/npmjs">Twitter</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="https://github.com/npm">GitHub</a></li> 
      </ul> 
     </div> 
     <div class="col-md-6 col-md-offset-1"> 
      <h3 class="h4 type-npm-pastel-3">Legal Stuff</h3> 
      <hr class="divider-1"> 
      <ul class="list-unstyled h6 em-default"> 
       <li class="pbl"><a class="type-neutral-11" href="/policies/terms">Terms of Use</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="/policies/conduct">Code of Conduct</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="/policies/disputes">Package Name Disputes</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="/policies/privacy">Privacy Policy</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="/policies/receiving-reports">Reporting Abuse</a></li> 
       <li class="pbl"><a class="type-neutral-11" href="/policies/">Other policies</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
   <div class="txt-c container"> 
    <a class="npm-loves-you type-neutral-11" href="/"> npm loves you </a> 
   </div> 
  </footer> 
  <script defer async src="https://cdn.optimizely.com/js/3318080746.js"></script> 
  <script defer async src="//img.en25.com/i/elqCfg.min.js"></script>
  <!-- Eloqua -->   
  <!-- pid&#x3D;16819 f173a7705e431fbd7774914a59fe83a013648d7b https://www.npmjs.com www-17-west.internal.npmjs.com  --> 
 </body>
</html>