<!doctype html>
<html lang="en">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="HandheldFriendly" content="True"> 
  <meta name="MobileOptimized" content="480"> 
  <meta name="viewport" content="width=device-width, height=device-height initial-scale=1.0, maximum-scale=1.0, user-scalable=0"> 
  <title>Java Fields</title> 
  <meta name="description" content="This tutorial explains Java fields, how to define them and work with them."> 
  <meta name="keywords" content="Java field fields"> 
  <meta name="author" content="Jakob Jenkov"> 
  <meta name="twitter:card" content="summary_large_image"> 
  <meta name="twitter:site" content="@jjenkov"> 
  <meta name="twitter:title" content="Java Fields"> 
  <meta name="twitter:description" content="This tutorial explains Java fields, how to define them and work with them."> 
  <meta name="twitter:creator" content="@jjenkov"> 
  <meta name="twitter:domain" content="jenkov.com"> 
  <meta name="twitter:image:src" content="http://tutorials.jenkov.com/images/java/java-language-teaser-500-300.png"> 
  <meta name="og:type" content="article"> 
  <meta name="og:title" content="Java Fields"> 
  <meta property="og:url" content="http://tutorials.jenkov.com/java/fields.html"> 
  <meta property="og:description" content="This tutorial explains Java fields, how to define them and work with them."> 
  <meta property="og:image" content="http://tutorials.jenkov.com/images/java/java-language-teaser-500-300.png"> 
  <link href="https://plus.google.com/108227213807945109821" rel="publisher"> 
  <meta name="google-site-verification" content="i_TwzdElg-by5uXLvyAjuIaCjxo0yjtW8LdRPUDEEcw"> 
  <!-- jQuery --> 
  <!--<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script> --> 
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script> 
 </head> 
 <body> 
  <style>
body {background-color: #f0f0f0;background-image: linear-gradient(180deg, #f0f0f0, #e0e0e0);}
.dataTable th, .dataTable td { padding: 2px 8px; }
</style> 
  <style id="layoutCss"></style> 
  <style id="jqcCss"></style> 
  <style id="articleCss"></style> 
  <style id="navBarCss"></style> 
  <style>
code  { font-size: 14px; }
</style> 
  <script>
lcv = "4";
ls = localStorage;
cacheLoaded = false;
pageLoaded = false;

var prevArticleInCategory = "/java/classes.html";
var nextArticleInCategory = "/java/methods.html";
</script> 
  <script id="jqcJs"></script> 
  <script id="bottomNavBarModule"></script> 
  <script>
function jsonp(url) {
    var script   = document.createElement("script"); script.type = "text/javascript"; script.src = url;
    document.body.appendChild(script);
}
function insertById(ids) {
    for(var i=0, n=ids.length; i < n; i++) {
        var el = document.getElementById(ids[i]);
        if(el != null) { el.innerHTML = localStorage[ids[i]]; }
    }
}
function insertByClass(ids) {
    for(var i=0, n=ids.length; i<n; i++) {
        var els = document.getElementsByClassName(ids[i]);
        for(var j=0,m=els.length; j<m; j++) { els[j].innerHTML = localStorage[ids[i]]; }
    }
}
function init() {
    if(cacheLoaded == true && pageLoaded == true) {
        console.log("initializing page");
        insertById(["layoutCss", "jqcCss", "topBarLogo", "articleCss", "navBarCss", "bottomNavBar", "bottomNavBarModule", "jqcJs"]);
        insertByClass(["authorPhoto", "authorSocialLinks", "newsletterForm", "googlePlusShare"]);
        $(document).ready(function() { bottomNavBarModule(); });
        console.log("page initialized");
    }
}
if(ls.lcv != lcv) {
    for(var i=0; i < ls.length; i++){
        ls.removeItem(ls.key(i));
    }
    jsonp("/cached-" + lcv + ".js");
    console.log("cache cleared");
} else {
    cacheLoaded = true;
}
ls.lcv = lcv;
</script> 
  <!-- jqComponents --> 
  <script>
articleLen = 9733;
adRandom = Math.random() * 100;

function dw(text) { document.write(text); }

function writeAd(adSlot, w, h) {
 dw("<script async src='//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js'><"); dw("/script>");
 dw("<ins class='adsbygoogle' style='display:inline-block;width:" + w + "px;height:" + h + "px' data-ad-client='ca-pub-5569543489255665' data-ad-slot='" +  adSlot + "'></ins>");
 dw("<script>");
 dw("(adsbygoogle = window.adsbygoogle || []).push({});");
 dw("<"); dw("/script>");
}

function topAdStyles(w, mT, mB) {
    var adEl = document.getElementById("topAds");
    adEl.style.width = (w + "px"); adEl.style.marginTop = (mT + "px"); adEl.style.marginBottom = (mB + "px"); adEl.style.marginRight = "auto"; adEl.style.marginLeft = "auto";
}

function bottomAdStyles(elId, w, mT, mB) {
    var adEl = document.getElementById(elId);
    adEl.style.width = (w + "px"); adEl.style.marginTop = (mT + "px"); adEl.style.marginBottom = (mB + "px"); adEl.style.marginRight = "auto"; adEl.style.marginLeft = "auto";
}
</script> 
  <div id="topBar"> 
   <div jqc-row jqc-row-paddings="0:0 3:24"> 
    <div jqc-cell="0:12c"> 
     <div id="topBarContent"> 
      <div id="topBarLogo"></div> 
      <div id="topBarPhrase">
       Tech and Media Labs
      </div> 
      <div id="topBarMenu"> 
       <a href="http://tutorials.jenkov.com">Tutorials</a> 
       <a href="http://jenkov.com/about/index.html">About</a> 
       <a href="http://jenkov.com/rss.xml">RSS</a> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div id="cookieNote"> 
   <div jqc-row jqc-row-widths="0:100% 4:1200" jqc-row-paddings="0:0 3:24"> 
    <div jqc-cell="0:12c"> 
     <div class="card">
       This site uses cookies to improve the user experience. 
      <button onclick="hideCookieNote()">OK</button> 
     </div> 
    </div> 
   </div> 
  </div> 
  <script>
function hideCookieNote() { document.getElementById("cookieNote").innerHTML = ""; ls.cookieNote = 0; }

if(ls.cookieNote == 0) {
    hideCookieNote();
}
</script> 
  <div jqc-row jqc-row-widths="0:100% 4:1200" jqc-row-paddings="0:0"> 
   <div jqc-cell="0:12c"> 
    <div id="topAds"> 
     <script>
                var adEl = document.getElementById("topAds");
                if(window.innerWidth > 970) {
                    if(adRandom <= 5){
                        writeAd("6094206201", 970, 90); /* wider ad - 5% of page views */
                        topAdStyles(970, 20, 20);
                    } else {
                        writeAd("7630855405", 728, 90); /* standard ad */
                        topAdStyles(728, 20, 20);
                    }
                } else if(window.innerWidth >= 728 && window.innerWidth <= 970)  {  /* Tutorials - Top Banner */
                    writeAd("7630855405", 728, 90);
                    topAdStyles(728, 20, 20);
                } else {  /* Tutorials - Top Banner - Mobile */
                    writeAd("3297914607", 320, 50);
                    topAdStyles(320, 10, 0);
                }
            </script> 
    </div> 
   </div> 
  </div> 
  <div id="main"> 
   <div jqc-row jqc-row-widths="0:100% 4:1200" jqc-column-counts="0:24" jqc-row-paddings="0:0 3:24" jqc-cell-spacings="0:8"> 
    <div jqc-cell="0:0c  3:7c"> 
     <div id="trailToc" class="card"> 
      <div id="trailTitle">
       Java Language
      </div>
      <ol>
       <li><a href="/java/index.html">Java Tutorial</a></li>
       <li><a href="/java/what-is-java.html">What is Java?</a></li>
       <li><a href="/java/installing-java-sdk.html">Installing the Java SDK</a></li>
       <li><a href="/java/your-first-java-app.html">Your First Java App</a></li>
       <li><a href="/java/main-method.html">Java Main Method</a></li>
       <li><a href="/java/java-project-overview-compilation-and-execution.html">Java Project Overview, Compilation and Execution</a></li>
       <li><a href="/java/core-concepts.html">Java Core Concepts</a></li>
       <li><a href="/java/syntax.html">Java Syntax</a></li>
       <li><a href="/java/variables.html">Java Variables</a></li>
       <li><a href="/java/data-types.html">Java Data Types</a></li>
       <li><a href="/java/math-operators-and-math-class.html">Java Math Operators and Math Class</a></li>
       <li><a href="/java/arrays.html">Java Arrays</a></li>
       <li><a href="/java/strings.html">Java Strings</a></li>
       <li><a href="/java/operations.html">Java Operations</a></li>
       <li><a href="/java/if.html">Java if statements</a></li>
       <li><a href="/java/switch.html">Java Switch Statements</a></li>
       <li><a href="/java/for.html">Java for Loops</a></li>
       <li><a href="/java/while.html">Java while Loops</a></li>
       <li><a href="/java/classes.html">Java Classes</a></li>
       <li><a href="/java/fields.html"><b>Java Fields</b></a></li>
       <li><a href="/java/methods.html">Java Methods</a></li>
       <li><a href="/java/constructors.html">Java Constructors</a></li>
       <li><a href="/java/packages.html">Java Packages</a></li>
       <li><a href="/java/access-modifiers.html">Java Access Modifiers</a></li>
       <li><a href="/java/inheritance.html">Java Inheritance</a></li>
       <li><a href="/java/nested-classes.html">Java Nested Classes</a></li>
       <li><a href="/java/abstract-classes.html">Java Abstract Classes</a></li>
       <li><a href="/java/interfaces.html">Java Interfaces</a></li>
       <li><a href="/java/interfaces-vs-abstract-classes.html">Java Interfaces vs. Abstract Classes</a></li>
       <li><a href="/java/enums.html">Java Enums</a></li>
       <li><a href="/java/annotations.html">Java Annotations</a></li>
       <li><a href="/java/lambda-expressions.html">Java Lambda Expressions</a></li>
       <li><a href="/java/exercises.html">Java Exercises</a></li>
      </ol> 
     </div> 
     <br>
     <br> 
     <!-- Left Bar Adsense Banner Ad --> 
     <div id="side-ads"> 
      <script>
                if(window.innerWidth >= 900){
                    if(adRandom <= 94)     { writeAd("5873880207", 300,  600);}
                    else if(adRandom < 96) { writeAd("3389666608", 160,  600);}
                    else                   { writeAd("4257546205", 300, 1050);}
                }
            </script> 
     </div> 
     <br>
     <br> 
     <div style="display: none;" class="card newsletterForm"> 
     </div> 
    </div> 
    <div jqc-cell="0:24c 3:17c"> 
     <div class="card"> 
      <h1>Java Fields</h1> 
      <div id="mainBody"> 
       <div id="pageToc" itemscope itemtype="http://schema.org/SiteNavigationElement"> 
        <ul>
         <li><a href="#field-declaration-syntax">Field Declaration Syntax</a></li>
         <li><a href="#java-field-access-modifiers">Java Field Access Modifiers</a></li>
         <li><a href="#static-and-non-static-fields">Static and Non-static Fields</a></li>
         <li><a href="#final-fields">Final Fields</a></li>
         <li><a href="#naming-fields">Naming Java Fields</a></li>
         <li><a href="#initial-field-value">Initial Field Value</a></li>
        </ul> 
       </div> 
       <div id="lastUpdate"> 
        <table>
         <tbody>
          <tr>
           <td class="authorPhoto"></td> 
           <td><p style="margin: 0px 0px 6px 0px;"> Jakob Jenkov<br> Last update: 2015-03-03 </p> 
            <div class="authorSocialLinks"></div> </td> 
          </tr> 
         </tbody>
        </table> 
       </div> 
       <p> A Java field is a variable inside a class. For instance, in a class representing an employee, the <code>Employee</code> class might contain the following fields: </p> 
       <ul> 
        <li>name</li> 
        <li>position</li> 
        <li>salary</li> 
        <li>hiredDate</li> 
       </ul> 
       <p> The corresponding Java class could be defined like this: </p> 
       <pre class="codeBox">
public class Employee {
  String  name     ;
  String  position ;
  int     salary   ;
  Date    hiredDate;
}
</pre> 
       <a name="field-declaration-syntax"></a> 
       <h2>Field Declaration Syntax</h2> 
       <p> A Java field is declared using the following syntax: </p> 
       <pre class="codeBox">
    [access_modifier] [static] [final] type name [= initial value] ;
</pre> 
       <p> The square brackets [ ] around some of the keywords mean that this option is optional. Only type and name are required. </p> 
       <p> First an access modifier can be declared for a Java field. The access modifier determines which object classes that can access the field. In the <code>Employee</code> example above there were no access modifiers. </p> 
       <p> Second, a data type for the Java field must be assigned. In the <code>Employee</code> example above the data types <code>String</code>, <code>int</code> and <code>Date</code> were used. </p> 
       <p> Third, the Java field can be declared <code>static</code>. In Java, static fields belongs to the class, not instances of the class. Thus, all instances of any class will access the same static field variable. A non-static field value can be different for every object (instance) of a class. </p> 
       <p> Fourth, the Java field can be declared <code>final</code> or not. A <code>final</code> field cannot have its value changed. A final field must have an initial value assigned to it, and once set, the value cannot be changed again. A <code>final</code> field is often also declared <code>static</code>. A field declared <code>static</code> and <code>final</code> is also called a "constant". </p> 
       <p> Fifth, the Java field is given a name. You can choose this name freely, but there are some restrictions on what characters the name can contain. </p> 
       <p> Sixth, you can optionally set an initial value for the field. </p> 
       <p> Some of the above options are described in more detail in the following sections. </p> 
       <a name="java-field-access-modifiers"></a> 
       <h2>Java Field Access Modifiers</h2> 
       <p> The Java field access modifier determines whether the field can be accessed by classes other than the the class owning the field. There are four possible access modifiers for Java fields: </p> 
       <ul> 
        <li>private</li> 
        <li>package</li> 
        <li>protected</li> 
        <li>public</li> 
       </ul> 
       <p> The <code>private</code> access modifier means that only code inside the class itself can access this Java field. </p> 
       <p> The <code>package</code> access modifier means that only code inside the class itself, or other classes in the same package, can access the field. You don't actually write the package modifier. By leaving out any access modifier, the access modifier defaults to package scope. </p> 
       <p> The <code>protected</code> access modifier is like the <code>package</code> modifier, except subclasses of the class can also access the field, even if the subclass is not located in the same package. </p> 
       <p> The <code>public</code> access modifier means that the field can be accessed by all classes in your application. </p> 
       <p> Here are a few examples of fields declared with access modifiers. The modifiers are in bold. </p> 
       <pre class="codeBox">
public class Customer {

    <b>private</b>   String email;
              String position;   //no modifier = package access modifier
    <b>protected</b> String name;
    <b>public</b>    String city;

}
</pre> 
       <p> The above use of Java field access modifiers are for the sake of this example only. You would probably not use all access modifiers in the same class. Most often you use <code>private</code> and <code>protected</code>. For simple, data carrying classes you may declare all fields <code>public</code>. </p> 
       <p> The Java access modifiers are covered in more detail in my <a href="access-modifiers.html">Java access modifiers tutorial</a>. </p> 
       <a name="static-and-non-static-fields"></a> 
       <h2>Static and Non-static Fields</h2> 
       <p> A Java field can be static or non-static. </p> 
       <p> A static field belongs to the class. Thus, no matter how many objects you create of that class, there will only exist one field located in the class, and the value of that field is the same, no matter from which object it is accessed. Here is a diagram illustrating static fields: </p> 
       <table class="diagram"> 
        <tbody>
         <tr>
          <td align="center"><img src="/images/java/static-fields.png" alt="Static Java fields are located in the class, not in the instances of the class."></td>
         </tr> 
         <tr>
          <td align="center"><b>Static Java fields are located in the class, not in the instances of the class.</b></td>
         </tr> 
        </tbody>
       </table> 
       <p> You define a static field by using the <code>static</code> keyword in the field declaration, like this: </p> 
       <pre class="codeBox">
public class Customer {

    <b>static</b> String staticField1;

}
</pre> 
       <p> Static fields are located in the class, so you don't need an instance of the class to access static fields. You just write the class name in front, like this: </p> 
       <pre class="codeBox">
Customer.staticField1 = "value";

System.out.println(Customer.staticField1);
</pre> 
       <p> Non-static Java fields, on the other hand, are located in the instances of the class. Each instance of the class can have its own values for these fields. Here is a diagram illustrating non-static fields: </p> 
       <table class="diagram"> 
        <tbody>
         <tr>
          <td align="center"><img src="/images/java/non-static-fields.png" alt="Non-static Java fields are located in the instances of the class."></td>
         </tr> 
         <tr>
          <td align="center"><b>Non-static Java fields are located in the instances of the class.</b></td>
         </tr> 
        </tbody>
       </table> 
       <p> You define a non-static Java field simply by leaving out the <code>static</code> keyword. Here is an example: </p> 
       <pre class="codeBox">
public class Customer {

    String field1;

}
</pre> 
       <p> To access a non-static field you need an instance of the class (an object) on which you can access it. Here is an example: </p> 
       <pre class="codeBox">
Customer customer = new Customer();

customer.field1 = "value";

System.out.println(customer.field1);
</pre> 
       <a name="final-fields"></a> 
       <h2>Final Fields</h2> 
       <p> A Java field can be declared <code>final</code>. A <code>final</code> field cannot have its value changed, once assigned. You declare a field to be <code>final</code> by adding the <code>final</code> keyword to the field declaration. Here is an example: </p> 
       <pre class="codeBox">
public class Customer {

    <b>final</b> String field1 = "Fixed Value";

}
</pre> 
       <p> The value of the <code>field1</code> field cannot be changed now. That means, that even if the field belongs to objects (class instances), you cannot vary the value of the field from object to object. </p> 
       <p> When you cannot change the value of a final field anyways, in many cases it makes sense to also declare it <code>static</code>. That way it only exists in the class, not in every object too. Here is an example: </p> 
       <pre class="codeBox">
public class Customer {

    <b>static final</b> String field1 = "Fixed Value";

}
</pre> 
       <p> Since <code>static final</code> fields are often used as constants, the naming convention is to write the field name in all uppercase, and to separate the words with underscore _ . Here is a Java <code>static</code> <code>final</code> field example: </p> 
       <pre class="codeBox">
public class Customer {

    <b>static final</b> String CONSTANT_1 = "Fixed Value";

}
</pre> 
       <a name="naming-fields"></a> 
       <h2>Naming Java Fields</h2> 
       <p> The name of a Java field is used to refer to that field from your code. Here is an example: </p> 
       <pre class="codeBox">
Customer customer = new Customer();

customer.<b>city</b> = "New York";

System.out.println(customer.<b>city</b>);
</pre> 
       <p> The first line creates a new <code>Customer</code> object (an instance of the <code>Customer</code> class), and stores it in a variable called <code>customer</code>. The second line assigns the <code>String</code> value <code>New York</code> to the <code>Customer</code> objects <code>city</code> field. The third line prints out the value of the <code>city</code> field to the console output. </p> 
       <p> The naming restrictions and naming conventions for fields are the same as for any other type of variable. </p> 
       <a name="initial-field-value"></a> 
       <h2>Initial Field Value</h2> 
       <p> A Java field can have be given an initial value. This value is assigned to the field when the field is created in the JVM. Static fields are created when the class is loaded. A class is loaded the first time it is referenced in your program. Non-static fields are created when the object owning them are created. </p> 
       <p> Here is an example of a Java field being declared with an initial value: </p> 
       <pre class="codeBox">
public class Customer {

    String customerType = "OnlineCustomer";

}
</pre> 
       <p> Whether you want to initialize your Java fields (and other variables) to an initial value is up to you. I have made it a habit to always initialize my variables to some sensible value, but it is just a habit. It is not necessary to do so. </p> 
       <div> 
       </div> 
       <div id="next">
        Next: 
        <a href="/java/methods.html">Java Methods</a>
       </div> 
       <div id="bottomSocial"> 
        <div style="display:inline-block;"> 
         <table> 
          <tbody>
           <tr>
            <td colspan="2"> 
             <div class="g-plus" data-action="share" data-height="24" data-annotation="none"></div> <script type="text/javascript">
                                    (function() {
                                        var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
                                        po.src = 'https://apis.google.com/js/platform.js';
                                        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
                                     })();
                                </script> <a href="https://twitter.com/share" class="twitter-share-button" data-via="jjenkov" target="_blank">Tweet</a> <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script> </td>
           </tr> 
           <tr>
            <td class="authorPhoto"></td>
            <td><p style="margin: 0px 0px 6px 0px;">Jakob Jenkov</p>
             <div class="authorSocialLinks"></div></td>
           </tr> 
          </tbody>
         </table> 
        </div> 
        <div style="display:inline-block;" class="newsletterForm"></div> 
       </div> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <!-- Bottom ads - (nested row is working, but should perhaps not be a nested row?) (note: was a nested row in old design - not in new) --> 
  <div jqc-row jqc-row-paddings="0:0"> 
   <div jqc-cell="0:12c"> 
    <div id="pageBottomAds"> 
     <script>
                    if(articleLen >= 4000){ /* for longer articles place ads here, at the bottom of the page */
                        if(window.innerWidth >= 728 ) {  /* Adsense Ads - Bottom Banner */
                            if(adRandom < 5)       { writeAd("2721937400", 970, 90);  bottomAdStyles("pageBottomAds", 970, 20, 20);}
                            else if(adRandom < 30) { writeAd("9547200207", 970, 250); bottomAdStyles("pageBottomAds", 970, 20, 20);}
                            else                   { writeAd("7776167002", 728, 90);  bottomAdStyles("pageBottomAds", 728, 20, 20);}
                        } else if(window.innerWidth < 728) {  /* Adsense Ads - Bottom Banner - Mobile */
                            if(adRandom < 50) {
                                writeAd("4216244607", 320, 50); bottomAdStyles("pageBottomAds", 320, 10, 0);
                            } else {
                                writeAd("7377085404", 320, 100); bottomAdStyles("pageBottomAds", 320, 10, 0);
                            }
                        }
                    }
                </script> 
     <br>
     <br>
     <br> 
    </div> 
    <div style="height: 30px"></div> 
    <div id="disqusComments" class="card"> 
     <div id="disqus_thread"></div> 
     <script type="text/javascript">
                var disqus_shortname = 'tutorials-jenkov-com'; // required: replace example with your forum shortname

                /* * * DON'T EDIT BELOW THIS LINE * * */
                (function() {
                    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();
            </script> 
     <noscript>
      Please enable JavaScript to view the 
      <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
     </noscript> 
    </div> 
   </div> 
  </div> 
  <span id="layoutManager" jqc-type="jqcResponsiveLayoutManager" jqc-row-paddings="0:8 4:0"></span> 
  <div id="footerBar"> 
   <div jqc-row> 
    <div jqc-cell="0:12c">
      Copyright &nbsp;Jenkov Aps 
    </div> 
   </div> 
  </div> 
  <div id="trailTocFixedDiv"> 
   <div id="trailTocFixedCloseButton">
    Close TOC
   </div> 
   <div id="trailTocFixedInnerDiv"></div> 
  </div> 
  <div id="bottomNavBar"></div> 
  <!-- init page --> 
  <script>
pageLoaded = true;
init();
</script> 
  <!-- Google Analytics Script --> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-4036229-3', 'auto');
  ga('send', 'pageview');

</script>  
 </body>
</html>