<!doctype html>
<html>
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <title>FitNesse.UserGuide.FixtureGallery.SourceCode</title> 
  <!--[if lt IE 9]>
   <script>
    document.createElement('header');
    document.createElement('nav');
    document.createElement('section');
    document.createElement('article');
    document.createElement('footer');
   </script>
  <![endif]--> 
  <link rel="shortcut icon" type="image/png" href="/files/fitnesse/images/favicon.png"> 
  <link rel="stylesheet" type="text/css" href="/files/fitnesse/css/fitnesse_wiki.css"> 
  <link rel="stylesheet" type="text/css" href="/files/fitnesse/css/fitnesse_pages.css"> 
  <link rel="stylesheet" type="text/css" href="/files/fitnesse/wysiwyg/wysiwyg.css" media="screen"> 
  <link rel="stylesheet" type="text/css" href="/files/fitnesse/bootstrap/css/fitnesse-bootstrap.css"> 
  <script src="/files/fitnesse/javascript/jquery-1.11.3.min.js" type="text/javascript"></script> 
  <script src="/files/fitnesse/javascript/fitnesse.js" type="text/javascript"></script> 
  <script src="/files/fitnesse/bootstrap/js/bootstrap.js" type="text/javascript"></script> 
  <script src="/files/fitnesse/bootstrap/js/respond.js" type="text/javascript"></script> 
 </head> 
 <body class="wikiPage"> 
  <nav class="navbar-fixed-top " role="navigation"> 
   <div class="navbar navbar-default"> 
    <!-- Brand and toggle get grouped for better mobile display --> 
    <div class="navbar-header"> 
     <a class="navbar-brand" href="/FrontPage"><span>FitNesse</span></a> 
    </div> 
    <ul class="nav navbar-nav"> 
     <li><a href="/FitNesseFeatures">Features</a></li> 
     <li><a href="/FitNesseDownload">Download</a></li> 
     <li><a href="/PlugIns">Plug-ins</a></li> 
     <li><a href="/FitNesse.UserGuide">User Guide</a></li> 
    </ul> 
   </div> 
   <ol class="page-actions btn-group"> 
    <li class="expandall btn btn-xs">Expand All</li> 
    <li class="collapseall btn btn-xs">Collapse All</li> 
   </ol> 
   <ol class="breadcrumb"> 
    <li><a href="/FitNesse">FitNesse</a></li> 
    <li><a href="/FitNesse.UserGuide">UserGuide</a></li> 
    <li><a href="/FitNesse.UserGuide.FixtureGallery">FixtureGallery</a></li> 
    <li>SourceCode</li> 
   </ol> 
  </nav> 
  <header> 
  </header> 
  <article> 
   <i>Previous page: <a href="FitNesse.UserGuide.FixtureGallery.GalleryIntroduction">Introduction</a> Next page: <a href="FitNesse.UserGuide.FixtureGallery.BasicFitFixtures">Basic FIT fixtures</a> Parent page: <a href="FitNesse.UserGuide.FixtureGallery.TableOfContents">Table of contents</a></i>
   <br>
   <h2>Source code</h2> You can get the source code for all the examples from this document from SourceForge (
   <a href="http://sourceforge.net/projects/fixturegallery">http://sourceforge.net/projects/fixturegallery</a> ). A lot of examples in this document demonstrate how to work with business domain services and objects. To keep things as simple as possible, and still show all relevant features, all those examples use the following "business" classes:
   <br>
   <br>
   <h3>Java domain code</h3> 
   <pre>
package info.fitnesse.fixturegallery.domain;

import java.util.ArrayList;
import java.util.List;

public class Player{
	public String name;
	public String postCode;
	public double balance;
	public double getCreditLimit(){
		return balance;
	}
	public Player(){
	}
	public Player(String name, String postCode, double balance){
		this.name=name; this.postCode=postCode; this.balance=balance;
	}
	public static List&lt;Player&gt; players=new ArrayList&lt;Player&gt;();
	public static void addPlayer(String name, String postCode, double balance){
		players.add(new Player(name,postCode,balance));
	}
}
</pre> 
   <br>
   <pre>
package info.fitnesse.fixturegallery.domain;

import java.util.LinkedList;

public class Queue {
	private LinkedList&lt;String&gt; ll=new java.util.LinkedList&lt;String&gt;();
	public String dequeue(){
		return ll.poll();
	}
	public void enqueue(String s){
		ll.add(s);
	}
	public int getCount(){
		return ll.size();
	}
}
</pre> 
   <br>
   <pre>
package info.fitnesse.fixturegallery.domain;

public class TaxCalculator
{
  public double GetTax(String code, double price)
  {
    if (code.startsWith("B")) return 0;
    return 0.1 * price;
  }
}
</pre> 
   <br>
   <pre>
package info.fitnesse.fixturegallery.domain;

public class Words {
	public String firstPart;
	public String secondPart;
	public String together(){
		return firstPart+", "+secondPart;
	}
	public String getSentence(){
		return together();
	}
	public static Words[] firstExample(){
		Words[] someWords=new Words[2];
		someWords[0]=new Words();
		someWords[0].firstPart="Hello";
		someWords[0].secondPart="World";
		someWords[1]=new Words();
		someWords[1].firstPart="Houston";
		someWords[1].secondPart="We Have a Problem";
		return someWords;
	}
}
</pre> 
   <br>
   <h3>.NET domain code</h3> 
   <pre>
using System;
using System.Collections.Generic;
using System.Text;

namespace info.fitnesse.fixturegallery
{

    public class Player
    {
        public static List&lt;Player&gt; players=new List&lt;Player&gt;();

        private string _name;

        public string Name
        {
            get { return _name; }
            set { _name = value; }
        }
        private string _postCode;

        public string PostCode
        {
            get { return _postCode; }
            set { _postCode= value; }
        }
        private decimal _balance;

        public decimal Balance
        {
            get { return _balance; }
            set { _balance = value; }
        }
        public decimal CreditLimit()
        {
            return _balance;
        }
    }
    public class Text
    {
        public String word;
        public Text(String w)
        {
            word = w;
        }
        public int TotalLength
        {
            get { return word.Length; }
        }
    }
    public class TaxCalculator
    {
        public decimal GetTax(String code, decimal price)
        {
            if (code.StartsWith("B")) return 0;
            return 0.1m * price;
        }
    }


}
</pre> 
   <br>
   <h3>Python domain code</h3> 
   <pre>
class Player(object):
    _typeDict = {
        "name":     "String",
        "postCode": "String",
        "balance":  "Float"
    }

    def __init__(self, name="", postCode="", balance=0.0):
        self.name     = name
        self.postCode = postCode
        self.balance  = balance

    def getCreditLimit(self):
        return self.balance

    _typeDict["creditLimit"] = "Float"
    creditLimit = property(getCreditLimit)

    # -- DATA STORE: Players object store, simplistic database.
    players = []    #&lt; CLASS-ATTRIBUTE
    @classmethod
    def addPlayer(cls, name, postCode, balance):
        cls.players.append(Player(name, postCode, balance))
</pre> 
   <br>
   <pre>
class Queue(object):
    _typeDict = {
        "Enqueue.RenameTo": "enqueue" #&lt; NEEDED-FOR: SystemUnderTestExample
    }

    def __init__(self):
        self.ll = []

    _typeDict["dequeue"] = "String"
    _typeDict["dequeue.types"] = [ "String" ]
    def dequeue(self):
        return self.ll.pop(0)

    _typeDict["enqueue"] = "String"
    _typeDict["enqueue.types"] = [ None, "String" ]
    def enqueue(self, s):
        return self.ll.append(s)

    def getCount(self):
        return len(self.ll)
    _typeDict["count"] = "Integer"
    count = property(getCount)
</pre> 
   <br>
   <pre>
import types

class TaxCalculator(object):

    def getTax(self, code, price):
        assert isinstance(code, types.StringTypes)
        assert type(price) == types.FloatType
        if code.startswith("B"):
            return 0
        return 0.1 * price
</pre> 
   <br>
   <pre>
class Words(object):
    _typeDict = {
        "firstPart":  "String",
        "secondPart": "String"
    }

    def __init__(self, firstPart="", secondPart=""):
        self.firstPart  = firstPart
        self.secondPart = secondPart

    _typeDict["together"] = "String"
    def together(self):
        return "%s, %s" % (self.firstPart, self.secondPart)

    _typeDict["getSentence"] = "String"
    def getSentence(self):
        return self.together()

    @staticmethod
    def firstExample():
        someWords = [ None, None ]
        someWords[0] = Words(firstPart="Hello",   secondPart="World")
        someWords[1] = Words(firstPart="Houston", secondPart="We Have a Problem")
        return someWords
</pre> 
   <br>
   <br>
   <i>Previous page: <a href="FitNesse.UserGuide.FixtureGallery.GalleryIntroduction">Introduction</a> Next page: <a href="FitNesse.UserGuide.FixtureGallery.BasicFitFixtures">Basic FIT fixtures</a> Parent page: <a href="FitNesse.UserGuide.FixtureGallery.TableOfContents">Table of contents</a></i>
   <br> 
   <div id="-shortcut-keys" class="modal-dialog"> 
    <div> 
     <h4>Keyboard Shortcuts <kbd>?</kbd></h4> 
     <div> 
      <ul class="help-list"> 
       <li><h4>General</h4></li> 
       <li> <kbd>t</kbd> <span class="help-key-def">Test page or suite</span> </li> 
       <li> <kbd>e</kbd> <span class="help-key-def">Edit page</span> </li> 
       <li> <kbd>v</kbd> <span class="help-key-def">View page (after test)</span> </li> 
       <li> <kbd>a</kbd> <span class="help-key-def">Add new page</span> </li> 
       <li><h4>Go To</h4></li> 
       <li> <kbd>g u</kbd> <span class="help-key-def">User Guide</span> </li> 
       <li> <kbd>g q</kbd> <span class="help-key-def">Quick Reference Guide</span> </li> 
       <li> <kbd>g f</kbd> <span class="help-key-def">Full Reference Guide</span> </li> 
       <li> <kbd>g c</kbd> <span class="help-key-def">Recent Changes</span> </li> 
      </ul> 
      <ul class="help-list"> 
       <li><h4>Edit Mode</h4></li> 
       <li> <kbd>CTRL+s</kbd> <span class="help-key-def">Save page</span> </li> 
       <li> <kbd>ESC</kbd> <span class="help-key-def">Cancel edit</span> </li> 
       <li><h4>Tools</h4></li> 
       <li> <kbd>p</kbd> <span class="help-key-def">Properties</span> </li> 
       <li> <kbd>w</kbd> <span class="help-key-def">Where used?</span> </li> 
       <li> <kbd>AK+v</kbd> <span class="help-key-def">Versions</span> </li> 
       <li> <kbd>AK+h</kbd> <span class="help-key-def">Page History</span> </li> 
       <li> <kbd>/</kbd> <span class="help-key-def">Focus on search bar</span> </li> 
       <li> <kbd>s</kbd> <span class="help-key-def">Open search page</span> </li> 
      </ul> 
     </div> 
     <a href="javascript:history.back()" class="button">Close</a> 
    </div> 
   </div> 
   <script src="/files/fitnesse/javascript/mousetrap.min.js" type="text/javascript"></script> 
   <script type="text/javascript">
  
   Mousetrap.bind('v', function() { window.location.href ="FitNesse.UserGuide.FixtureGallery.SourceCode"; });

        Mousetrap.bind('e', function() { window.location.href ="FitNesse.UserGuide.FixtureGallery.SourceCode?edit"; });
        Mousetrap.bind('a', function() { window.location.href ="FitNesse.UserGuide.FixtureGallery.SourceCode?new"; });
        Mousetrap.bind('p', function() { window.location.href ="FitNesse.UserGuide.FixtureGallery.SourceCode?properties"; });
        Mousetrap.bind('w', function() { window.location.href ="FitNesse.UserGuide.FixtureGallery.SourceCode?whereUsed"; });
        Mousetrap.bind('s', function() { window.location.href ="FitNesse.UserGuide.FixtureGallery.SourceCode?searchForm"; });
    Mousetrap.bind('/', function() { 
      document.getElementById('searchString').focus();
      return false;  // stops the / character appearing in search box
    });
        Mousetrap.bind('g u', function() { window.location.href =".FitNesse.UserGuide"; });
    Mousetrap.bind('g q', function() { window.open(".FitNesse.UserGuide.QuickReferenceGuide", "_blank"); });
    Mousetrap.bind('g f', function() { window.open(".FitNesse.FullReferenceGuide", "_blank"); });
    Mousetrap.bind('g c', function() { window.location.href ="RecentChanges"; });
  
 Mousetrap.bind('?', function() { window.location.hash = "-shortcut-keys"; });

</script> 
  </article> 
  <footer> 
   <a href="FitNesse.UserGuide.FixtureGallery">Table of contents</a>| Fixture Gallery on 
   <a href="http://sourceforge.net/projects/fixturegallery">SourceForge</a> | Fixture Gallery live wiki on 
   <a href="http://fitnesse.info/fixturegallery">UserGuide.Info</a> | 
   <a href="http://gojko.net/fitnesse/fixturegallery">Comments and Feedback</a> | 
   <a href="FrontPage">Front Page</a>
   <br> 
  </footer>   
 </body>
</html>