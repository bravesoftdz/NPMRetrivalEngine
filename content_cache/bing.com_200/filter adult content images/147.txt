<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<html>
 <head> 
  <!-- Generated by javadoc (build 1.5.0_16) on Fri Dec 26 15:10:47 PST 2008 --> 
  <title>
MultipartRequest
</title> 
  <meta NAME="keywords" CONTENT="com.oreilly.servlet.MultipartRequest class"> 
  <link REL="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style"> 
  <script type="text/javascript">
function windowTitle()
{
    parent.document.title="MultipartRequest";
}
</script> 
  <noscript> 
  </noscript> 
 </head> 
 <body bgcolor="white" onload="windowTitle();"> 
  <!-- ========= START OF TOP NAVBAR ======= --> 
  <a name="navbar_top">
   <!-- --></a> 
  <a href="#skip-navbar_top" title="Skip navigation links"></a> 
  <table border="0" width="100%" cellpadding="1" cellspacing="0" summary=""> 
   <tbody>
    <tr> 
     <td colspan="2" bgcolor="#EEEEFF" class="NavBarCell1"> <a name="navbar_top_firstrow">
       <!-- --></a> 
      <table border="0" cellpadding="0" cellspacing="3" summary=""> 
       <tbody>
        <tr align="center" valign="top"> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td> 
         <td bgcolor="#FFFFFF" class="NavBarCell1Rev"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../index-all.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td> 
        </tr> 
       </tbody>
      </table> </td> 
     <td align="right" valign="top" rowspan="3"><em> </em> </td> 
    </tr> 
    <tr> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> &nbsp;<a href="../../../com/oreilly/servlet/MultipartFilter.html" title="class in com.oreilly.servlet"><b>PREV CLASS</b></a>&nbsp; &nbsp;<a href="../../../com/oreilly/servlet/MultipartResponse.html" title="class in com.oreilly.servlet"><b>NEXT CLASS</b></a></font></td> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> <a href="../../../index.html?com/oreilly/servlet/MultipartRequest.html" target="_top"><b>FRAMES</b></a> &nbsp; &nbsp;<a href="MultipartRequest.html" target="_top"><b>NO FRAMES</b></a> &nbsp; &nbsp;<script type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</script> 
       <noscript> 
        <a href="../../../allclasses-noframe.html"><b>All Classes</b></a> 
       </noscript> </font></td> 
    </tr> 
    <tr> 
     <td valign="top" class="NavBarCell3"><font size="-2"> SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<a href="#field_summary">FIELD</a>&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td> 
     <td valign="top" class="NavBarCell3"><font size="-2"> DETAIL:&nbsp;<a href="#field_detail">FIELD</a>&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td> 
    </tr> 
   </tbody>
  </table> 
  <a name="skip-navbar_top"></a> 
  <!-- ========= END OF TOP NAVBAR ========= --> 
  <hr> 
  <!-- ======== START OF CLASS DATA ======== --> 
  <h2> <font size="-1"> com.oreilly.servlet</font> <br> Class MultipartRequest</h2> 
  <pre>
java.lang.Object
  <img SRC="../../../resources/inherit.gif" ALT="extended by "><b>com.oreilly.servlet.MultipartRequest</b>
</pre> 
  <hr> 
  <dl> 
   <dt>
    <pre>public class <b>MultipartRequest</b>
     <dt>
      extends java.lang.Object
     </dt></pre>
   </dt>
  </dl>  
  <p> A utility class to handle <code>multipart/form-data</code> requests, the kind of requests that support file uploads. This class emulates the interface of <code>HttpServletRequest</code>, making it familiar to use. It uses a "push" model where any incoming files are read and saved directly to disk in the constructor. If you wish to have more flexibility, e.g. write the files to a database, use the "pull" model <code>MultipartParser</code> instead. </p>
  <p> This class can receive arbitrarily large files (up to an artificial limit you can set), and fairly efficiently too. It cannot handle nested data (multipart content within multipart content). It <b>can</b> now with the latest release handle internationalized content (such as non Latin-1 filenames). </p>
  <p> To avoid collisions and have fine control over file placement, there's a constructor variety that takes a pluggable FileRenamePolicy implementation. A particular policy can choose to rename or change the location of the file before it's written. </p>
  <p> See the included upload.war for an example of how to use this class. </p>
  <p> The full file upload specification is contained in experimental RFC 1867, available at <a href="http://www.ietf.org/rfc/rfc1867.txt"> http://www.ietf.org/rfc/rfc1867.txt</a>. </p>
  <p> </p>
  <p> </p>
  <dl> 
   <dt>
    <b>Version:</b>
   </dt> 
   <dd>
    1.12, 2004/04/11, added null check for Opera malformed bug
    <br>, 1.11, 2002/11/01, combine query string params in param list
    <br>, 1.10, 2002/05/27, added access to the original file names
    <br>, 1.9, 2002/04/30, added support for file renaming, thanks to Changshin Lee
    <br>, 1.8, 2002/04/30, added support for internationalization, thanks to Changshin Lee
    <br>, 1.7, 2001/02/07, made fields protected to increase user flexibility
    <br>, 1.6, 2000/07/21, redid internals to use MultipartParser, thanks to Geoff Soutter
    <br>, 1.5, 2000/02/04, added auto MacBinary decoding for IE on Mac
    <br>, 1.4, 2000/01/05, added getParameterValues(), WebSphere 2.x getContentType() workaround, stopped writing empty "unknown" file
    <br>, 1.3, 1999/12/28, IE4 on Win98 lastIndexOf("boundary=") workaround
    <br>, 1.2, 1999/12/20, IE4 on Mac readNextPart() workaround
    <br>, 1.1, 1999/01/15, JSDK readLine() bug workaround
    <br>, 1.0, 1998/09/18
    <br>
   </dd> 
   <dt>
    <b>Author:</b>
   </dt> 
   <dd>
    Jason Hunter, Geoff Soutter
   </dd> 
   <dt>
    <b>See Also:</b>
   </dt>
   <dd>
    <a href="../../../com/oreilly/servlet/multipart/MultipartParser.html" title="class in com.oreilly.servlet.multipart"><code>MultipartParser</code></a>
   </dd>
  </dl> 
  <hr> 
  <p> 
   <!-- =========== FIELD SUMMARY =========== --> <a name="field_summary">
    <!-- --></a> </p>
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="2"><font size="+2"> <b>Field Summary</b></font></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>protected &nbsp;java.util.Hashtable</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#files">files</a></b></code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>protected &nbsp;java.util.Hashtable</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#parameters">parameters</a></b></code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td> 
    </tr> 
   </tbody>
  </table> &nbsp; 
  <!-- ======== CONSTRUCTOR SUMMARY ======== --> 
  <a name="constructor_summary">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="2"><font size="+2"> <b>Constructor Summary</b></font></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String)">MultipartRequest</a></b>(javax.servlet.http.HttpServletRequest&nbsp;request, java.lang.String&nbsp;saveDirectory)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to 1 Megabyte.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, int)">MultipartRequest</a></b>(javax.servlet.http.HttpServletRequest&nbsp;request, java.lang.String&nbsp;saveDirectory, int&nbsp;maxPostSize)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, int, com.oreilly.servlet.multipart.FileRenamePolicy)">MultipartRequest</a></b>(javax.servlet.http.HttpServletRequest&nbsp;request, java.lang.String&nbsp;saveDirectory, int&nbsp;maxPostSize, <a href="../../../com/oreilly/servlet/multipart/FileRenamePolicy.html" title="interface in com.oreilly.servlet.multipart">FileRenamePolicy</a>&nbsp;policy)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, int, java.lang.String)">MultipartRequest</a></b>(javax.servlet.http.HttpServletRequest&nbsp;request, java.lang.String&nbsp;saveDirectory, int&nbsp;maxPostSize, java.lang.String&nbsp;encoding)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, int, java.lang.String, com.oreilly.servlet.multipart.FileRenamePolicy)">MultipartRequest</a></b>(javax.servlet.http.HttpServletRequest&nbsp;request, java.lang.String&nbsp;saveDirectory, int&nbsp;maxPostSize, java.lang.String&nbsp;encoding, <a href="../../../com/oreilly/servlet/multipart/FileRenamePolicy.html" title="interface in com.oreilly.servlet.multipart">FileRenamePolicy</a>&nbsp;policy)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)">MultipartRequest</a></b>(javax.servlet.http.HttpServletRequest&nbsp;request, java.lang.String&nbsp;saveDirectory, java.lang.String&nbsp;encoding)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#MultipartRequest(javax.servlet.ServletRequest, java.lang.String)">MultipartRequest</a></b>(javax.servlet.ServletRequest&nbsp;request, java.lang.String&nbsp;saveDirectory)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor with an old signature, kept for backward compatibility.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#MultipartRequest(javax.servlet.ServletRequest, java.lang.String, int)">MultipartRequest</a></b>(javax.servlet.ServletRequest&nbsp;request, java.lang.String&nbsp;saveDirectory, int&nbsp;maxPostSize)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor with an old signature, kept for backward compatibility.</td> 
    </tr> 
   </tbody>
  </table> &nbsp; 
  <!-- ========== METHOD SUMMARY =========== --> 
  <a name="method_summary">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="2"><font size="+2"> <b>Method Summary</b></font></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;java.lang.String</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#getContentType(java.lang.String)">getContentType</a></b>(java.lang.String&nbsp;name)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the content type of the specified file (as supplied by the client browser), or null if the file was not included in the upload.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;java.io.File</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#getFile(java.lang.String)">getFile</a></b>(java.lang.String&nbsp;name)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a File object for the specified file saved on the server's filesystem, or null if the file was not included in the upload.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;java.util.Enumeration</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#getFileNames()">getFileNames</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the names of all the uploaded files as an Enumeration of Strings.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;java.lang.String</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#getFilesystemName(java.lang.String)">getFilesystemName</a></b>(java.lang.String&nbsp;name)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the filesystem name of the specified file, or null if the file was not included in the upload.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;java.lang.String</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#getOriginalFileName(java.lang.String)">getOriginalFileName</a></b>(java.lang.String&nbsp;name)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the original filesystem name of the specified file (before any renaming policy was applied), or null if the file was not included in the upload.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;java.lang.String</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#getParameter(java.lang.String)">getParameter</a></b>(java.lang.String&nbsp;name)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the value of the named parameter as a String, or null if the parameter was not sent or was sent without a value.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;java.util.Enumeration</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#getParameterNames()">getParameterNames</a></b>()</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the names of all the parameters as an Enumeration of Strings.</td> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td align="right" valign="top" width="1%"><font size="-1"> <code>&nbsp;java.lang.String[]</code></font></td> 
     <td><code><b><a href="../../../com/oreilly/servlet/MultipartRequest.html#getParameterValues(java.lang.String)">getParameterValues</a></b>(java.lang.String&nbsp;name)</code> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the values of the named parameter as a String array, or null if the parameter was not sent.</td> 
    </tr> 
   </tbody>
  </table> &nbsp;
  <a name="methods_inherited_from_class_java.lang.Object">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#EEEEFF" class="TableSubHeadingColor"> 
     <th align="left"><b>Methods inherited from class java.lang.Object</b></th> 
    </tr> 
    <tr bgcolor="white" class="TableRowColor"> 
     <td><code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></td> 
    </tr> 
   </tbody>
  </table> &nbsp; 
  <p> 
   <!-- ============ FIELD DETAIL =========== --> <a name="field_detail">
    <!-- --></a> </p>
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="1"><font size="+2"> <b>Field Detail</b></font></th> 
    </tr> 
   </tbody>
  </table> 
  <a name="parameters">
   <!-- --></a>
  <h3> parameters</h3> 
  <pre>
protected java.util.Hashtable <b>parameters</b></pre> 
  <dl> 
   <dl> 
   </dl> 
  </dl> 
  <hr> 
  <a name="files">
   <!-- --></a>
  <h3> files</h3> 
  <pre>
protected java.util.Hashtable <b>files</b></pre> 
  <dl> 
   <dl> 
   </dl> 
  </dl> 
  <!-- ========= CONSTRUCTOR DETAIL ======== --> 
  <a name="constructor_detail">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="1"><font size="+2"> <b>Constructor Detail</b></font></th> 
    </tr> 
   </tbody>
  </table> 
  <a name="MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String)">
   <!-- --></a>
  <h3> MultipartRequest</h3> 
  <pre>
public <b>MultipartRequest</b>(javax.servlet.http.HttpServletRequest&nbsp;request,
                        java.lang.String&nbsp;saveDirectory)
                 throws java.io.IOException</pre> 
  <dl> 
   <dd>
    Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to 1 Megabyte. If the content is too large, an IOException is thrown. This constructor actually parses the 
    <tt>multipart/form-data</tt> and throws an IOException if there's any problem reading or parsing the request. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>request</code> - the servlet request.
     </dd>
     <dd>
      <code>saveDirectory</code> - the directory in which to save any uploaded files. 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code>java.io.IOException</code> - if the uploaded content is larger than 1 Megabyte or there's a problem reading or parsing the request.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, int)">
   <!-- --></a>
  <h3> MultipartRequest</h3> 
  <pre>
public <b>MultipartRequest</b>(javax.servlet.http.HttpServletRequest&nbsp;request,
                        java.lang.String&nbsp;saveDirectory,
                        int&nbsp;maxPostSize)
                 throws java.io.IOException</pre> 
  <dl> 
   <dd>
    Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length. If the content is too large, an IOException is thrown. This constructor actually parses the 
    <tt>multipart/form-data</tt> and throws an IOException if there's any problem reading or parsing the request. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>request</code> - the servlet request.
     </dd>
     <dd>
      <code>saveDirectory</code> - the directory in which to save any uploaded files.
     </dd>
     <dd>
      <code>maxPostSize</code> - the maximum size of the POST content. 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code>java.io.IOException</code> - if the uploaded content is larger than 
      <tt>maxPostSize</tt> or there's a problem reading or parsing the request.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)">
   <!-- --></a>
  <h3> MultipartRequest</h3> 
  <pre>
public <b>MultipartRequest</b>(javax.servlet.http.HttpServletRequest&nbsp;request,
                        java.lang.String&nbsp;saveDirectory,
                        java.lang.String&nbsp;encoding)
                 throws java.io.IOException</pre> 
  <dl> 
   <dd>
    Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length. If the content is too large, an IOException is thrown. This constructor actually parses the 
    <tt>multipart/form-data</tt> and throws an IOException if there's any problem reading or parsing the request. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>request</code> - the servlet request.
     </dd>
     <dd>
      <code>saveDirectory</code> - the directory in which to save any uploaded files.
     </dd>
     <dd>
      <code>encoding</code> - the encoding of the response, such as ISO-8859-1 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code>java.io.IOException</code> - if the uploaded content is larger than 1 Megabyte or there's a problem reading or parsing the request.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, int, com.oreilly.servlet.multipart.FileRenamePolicy)">
   <!-- --></a>
  <h3> MultipartRequest</h3> 
  <pre>
public <b>MultipartRequest</b>(javax.servlet.http.HttpServletRequest&nbsp;request,
                        java.lang.String&nbsp;saveDirectory,
                        int&nbsp;maxPostSize,
                        <a href="../../../com/oreilly/servlet/multipart/FileRenamePolicy.html" title="interface in com.oreilly.servlet.multipart">FileRenamePolicy</a>&nbsp;policy)
                 throws java.io.IOException</pre> 
  <dl> 
   <dd>
    Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length. If the content is too large, an IOException is thrown. This constructor actually parses the 
    <tt>multipart/form-data</tt> and throws an IOException if there's any problem reading or parsing the request. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>request</code> - the servlet request.
     </dd>
     <dd>
      <code>saveDirectory</code> - the directory in which to save any uploaded files.
     </dd>
     <dd>
      <code>maxPostSize</code> - the maximum size of the POST content.
     </dd>
     <dd>
      <code>policy</code> - the rules for renaming in case of file name collisions 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code>java.io.IOException</code> - if the uploaded content is larger than 
      <tt>maxPostSize</tt> or there's a problem reading or parsing the request.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, int, java.lang.String)">
   <!-- --></a>
  <h3> MultipartRequest</h3> 
  <pre>
public <b>MultipartRequest</b>(javax.servlet.http.HttpServletRequest&nbsp;request,
                        java.lang.String&nbsp;saveDirectory,
                        int&nbsp;maxPostSize,
                        java.lang.String&nbsp;encoding)
                 throws java.io.IOException</pre> 
  <dl> 
   <dd>
    Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length. If the content is too large, an IOException is thrown. This constructor actually parses the 
    <tt>multipart/form-data</tt> and throws an IOException if there's any problem reading or parsing the request. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>request</code> - the servlet request.
     </dd>
     <dd>
      <code>saveDirectory</code> - the directory in which to save any uploaded files.
     </dd>
     <dd>
      <code>maxPostSize</code> - the maximum size of the POST content.
     </dd>
     <dd>
      <code>encoding</code> - the encoding of the response, such as ISO-8859-1 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code>java.io.IOException</code> - if the uploaded content is larger than 
      <tt>maxPostSize</tt> or there's a problem reading or parsing the request.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="MultipartRequest(javax.servlet.http.HttpServletRequest, java.lang.String, int, java.lang.String, com.oreilly.servlet.multipart.FileRenamePolicy)">
   <!-- --></a>
  <h3> MultipartRequest</h3> 
  <pre>
public <b>MultipartRequest</b>(javax.servlet.http.HttpServletRequest&nbsp;request,
                        java.lang.String&nbsp;saveDirectory,
                        int&nbsp;maxPostSize,
                        java.lang.String&nbsp;encoding,
                        <a href="../../../com/oreilly/servlet/multipart/FileRenamePolicy.html" title="interface in com.oreilly.servlet.multipart">FileRenamePolicy</a>&nbsp;policy)
                 throws java.io.IOException</pre> 
  <dl> 
   <dd>
    Constructs a new MultipartRequest to handle the specified request, saving any uploaded files to the given directory, and limiting the upload size to the specified length. If the content is too large, an IOException is thrown. This constructor actually parses the 
    <tt>multipart/form-data</tt> and throws an IOException if there's any problem reading or parsing the request. To avoid file collisions, this constructor takes an implementation of the FileRenamePolicy interface to allow a pluggable rename policy. 
    <p> </p>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>request</code> - the servlet request.
     </dd>
     <dd>
      <code>saveDirectory</code> - the directory in which to save any uploaded files.
     </dd>
     <dd>
      <code>maxPostSize</code> - the maximum size of the POST content.
     </dd>
     <dd>
      <code>encoding</code> - the encoding of the response, such as ISO-8859-1
     </dd>
     <dd>
      <code>policy</code> - a pluggable file rename policy 
     </dd>
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code>java.io.IOException</code> - if the uploaded content is larger than 
      <tt>maxPostSize</tt> or there's a problem reading or parsing the request.
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="MultipartRequest(javax.servlet.ServletRequest, java.lang.String)">
   <!-- --></a>
  <h3> MultipartRequest</h3> 
  <pre>
public <b>MultipartRequest</b>(javax.servlet.ServletRequest&nbsp;request,
                        java.lang.String&nbsp;saveDirectory)
                 throws java.io.IOException</pre> 
  <dl> 
   <dd>
    Constructor with an old signature, kept for backward compatibility. Without this constructor, a servlet compiled against a previous version of this class (pre 1.4) would have to be recompiled to link with this version. This constructor supports the linking via the old signature. Callers must simply be careful to pass in an HttpServletRequest. 
    <p> </p>
    <dl> 
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code>java.io.IOException</code>
     </dd>
    </dl> 
   </dd>
  </dl> 
  <hr> 
  <a name="MultipartRequest(javax.servlet.ServletRequest, java.lang.String, int)">
   <!-- --></a>
  <h3> MultipartRequest</h3> 
  <pre>
public <b>MultipartRequest</b>(javax.servlet.ServletRequest&nbsp;request,
                        java.lang.String&nbsp;saveDirectory,
                        int&nbsp;maxPostSize)
                 throws java.io.IOException</pre> 
  <dl> 
   <dd>
    Constructor with an old signature, kept for backward compatibility. Without this constructor, a servlet compiled against a previous version of this class (pre 1.4) would have to be recompiled to link with this version. This constructor supports the linking via the old signature. Callers must simply be careful to pass in an HttpServletRequest. 
    <p> </p>
    <dl> 
     <dt>
      <b>Throws:</b> 
     </dt>
     <dd>
      <code>java.io.IOException</code>
     </dd>
    </dl> 
   </dd>
  </dl> 
  <!-- ============ METHOD DETAIL ========== --> 
  <a name="method_detail">
   <!-- --></a> 
  <table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""> 
   <tbody>
    <tr bgcolor="#CCCCFF" class="TableHeadingColor"> 
     <th align="left" colspan="1"><font size="+2"> <b>Method Detail</b></font></th> 
    </tr> 
   </tbody>
  </table> 
  <a name="getParameterNames()">
   <!-- --></a>
  <h3> getParameterNames</h3> 
  <pre>
public java.util.Enumeration <b>getParameterNames</b>()</pre> 
  <dl> 
   <dd>
    Returns the names of all the parameters as an Enumeration of Strings. It returns an empty Enumeration if there are no parameters. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      the names of all the parameters as an Enumeration of Strings.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getFileNames()">
   <!-- --></a>
  <h3> getFileNames</h3> 
  <pre>
public java.util.Enumeration <b>getFileNames</b>()</pre> 
  <dl> 
   <dd>
    Returns the names of all the uploaded files as an Enumeration of Strings. It returns an empty Enumeration if there are no file input fields on the form. Any file input field that's left empty will result in a FilePart with null contents. Each file name is the name specified by the form, not by the user. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      the names of all the uploaded files as an Enumeration of Strings.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getParameter(java.lang.String)">
   <!-- --></a>
  <h3> getParameter</h3> 
  <pre>
public java.lang.String <b>getParameter</b>(java.lang.String&nbsp;name)</pre> 
  <dl> 
   <dd>
    Returns the value of the named parameter as a String, or null if the parameter was not sent or was sent without a value. The value is guaranteed to be in its normal, decoded form. If the parameter has multiple values, only the last one is returned (for backward compatibility). For parameters with multiple values, it's possible the last "value" may be null. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>name</code> - the parameter name. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      the parameter value.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getParameterValues(java.lang.String)">
   <!-- --></a>
  <h3> getParameterValues</h3> 
  <pre>
public java.lang.String[] <b>getParameterValues</b>(java.lang.String&nbsp;name)</pre> 
  <dl> 
   <dd>
    Returns the values of the named parameter as a String array, or null if the parameter was not sent. The array has one entry for each parameter field sent. If any field was sent without a value that entry is stored in the array as a null. The values are guaranteed to be in their normal, decoded form. A single value is returned as a one-element array. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>name</code> - the parameter name. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      the parameter values.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getFilesystemName(java.lang.String)">
   <!-- --></a>
  <h3> getFilesystemName</h3> 
  <pre>
public java.lang.String <b>getFilesystemName</b>(java.lang.String&nbsp;name)</pre> 
  <dl> 
   <dd>
    Returns the filesystem name of the specified file, or null if the file was not included in the upload. A filesystem name is the name specified by the user. It is also the name under which the file is actually saved. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>name</code> - the html page's file parameter name. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      the filesystem name of the file.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getOriginalFileName(java.lang.String)">
   <!-- --></a>
  <h3> getOriginalFileName</h3> 
  <pre>
public java.lang.String <b>getOriginalFileName</b>(java.lang.String&nbsp;name)</pre> 
  <dl> 
   <dd>
    Returns the original filesystem name of the specified file (before any renaming policy was applied), or null if the file was not included in the upload. A filesystem name is the name specified by the user. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>name</code> - the html page's file parameter name. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      the original file name of the file.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getContentType(java.lang.String)">
   <!-- --></a>
  <h3> getContentType</h3> 
  <pre>
public java.lang.String <b>getContentType</b>(java.lang.String&nbsp;name)</pre> 
  <dl> 
   <dd>
    Returns the content type of the specified file (as supplied by the client browser), or null if the file was not included in the upload. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>name</code> - the html page's file parameter name. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      the content type of the file.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <hr> 
  <a name="getFile(java.lang.String)">
   <!-- --></a>
  <h3> getFile</h3> 
  <pre>
public java.io.File <b>getFile</b>(java.lang.String&nbsp;name)</pre> 
  <dl> 
   <dd>
    Returns a File object for the specified file saved on the server's filesystem, or null if the file was not included in the upload. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt>
      <b>Parameters:</b>
     </dt>
     <dd>
      <code>name</code> - the html page's file parameter name. 
     </dd>
     <dt>
      <b>Returns:</b>
     </dt>
     <dd>
      a File object for the named file.
     </dd>
    </dl> 
   </dd> 
  </dl> 
  <!-- ========= END OF CLASS DATA ========= --> 
  <hr> 
  <!-- ======= START OF BOTTOM NAVBAR ====== --> 
  <a name="navbar_bottom">
   <!-- --></a> 
  <a href="#skip-navbar_bottom" title="Skip navigation links"></a> 
  <table border="0" width="100%" cellpadding="1" cellspacing="0" summary=""> 
   <tbody>
    <tr> 
     <td colspan="2" bgcolor="#EEEEFF" class="NavBarCell1"> <a name="navbar_bottom_firstrow">
       <!-- --></a> 
      <table border="0" cellpadding="0" cellspacing="3" summary=""> 
       <tbody>
        <tr align="center" valign="top"> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td> 
         <td bgcolor="#FFFFFF" class="NavBarCell1Rev"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../index-all.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td> 
         <td bgcolor="#EEEEFF" class="NavBarCell1"> <a href="../../../help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td> 
        </tr> 
       </tbody>
      </table> </td> 
     <td align="right" valign="top" rowspan="3"><em> </em> </td> 
    </tr> 
    <tr> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> &nbsp;<a href="../../../com/oreilly/servlet/MultipartFilter.html" title="class in com.oreilly.servlet"><b>PREV CLASS</b></a>&nbsp; &nbsp;<a href="../../../com/oreilly/servlet/MultipartResponse.html" title="class in com.oreilly.servlet"><b>NEXT CLASS</b></a></font></td> 
     <td bgcolor="white" class="NavBarCell2"><font size="-2"> <a href="../../../index.html?com/oreilly/servlet/MultipartRequest.html" target="_top"><b>FRAMES</b></a> &nbsp; &nbsp;<a href="MultipartRequest.html" target="_top"><b>NO FRAMES</b></a> &nbsp; &nbsp;<script type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</script> 
       <noscript> 
        <a href="../../../allclasses-noframe.html"><b>All Classes</b></a> 
       </noscript> </font></td> 
    </tr> 
    <tr> 
     <td valign="top" class="NavBarCell3"><font size="-2"> SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<a href="#field_summary">FIELD</a>&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td> 
     <td valign="top" class="NavBarCell3"><font size="-2"> DETAIL:&nbsp;<a href="#field_detail">FIELD</a>&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td> 
    </tr> 
   </tbody>
  </table> 
  <a name="skip-navbar_bottom"></a> 
  <!-- ======== END OF BOTTOM NAVBAR ======= --> 
  <hr>   
 </body>
</html>