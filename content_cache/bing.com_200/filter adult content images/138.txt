<html>
 <head> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <title>Combine CSS</title> 
  <style>body{font-family:sans-serif;margin:0;padding:0;line-height:1.5;word-wrap:break-word}a{color:#0288d1;text-decoration:none}a:hover{text-decoration:underline}#header,#navline{color:#fff}#header a,#navline a{color:#fff}#logoline{background-color:#0061ff;padding:1em}#logo{display:inline-block;position:relative;top:4px}#logotext{font-size:32px;display:inline-block}#navline a{background-color:#3d87ff;display:block;padding:.5em 1em .5em 1em}#content{margin:.5em;max-width:50em}code,pre{background:#f7f7f7;color:#37474f}.note,.note code{background:#e1f5fe;color:#0288d1}.note a{color:#0288d1;text-decoration:underline}.caution,.caution code{background:#fff3e0;color:#dd2c00}.caution a{color:#dd2c00;text-decoration:underline}.warning,.warning code{background:#fbe9e7;color:#d50000}.warning a{color:#d50000;text-decoration:underline}.note,.caution,.warning{padding:1em}pre{padding:1em;overflow:auto;line-height:1.1}table{margin-top:1em;margin-bottom:1em;border-collapse:collapse}th{color:#fff;vertical-align:middle;background-color:#555}td{border-top:1px solid #e0e0e0;background-color:#f7f7f7}th,td{padding:1em}li{margin-top:.5em;margin-bottom:.5em}img{max-width:100%}.table-wrapper{max-width:100%;overflow:auto}#downloads .download{margin-top:.5em;margin-bottom:.5em}#toc{border-left:4px solid #0061ff;font-size:.9em;max-width:25em;margin-top:1em;margin-left:1em}#toc-contents{color:#757575;font-weight:bold;padding-left:1em}#toc ul{list-style:none;list-style-position:inside;padding-left:1em}@media screen and (min-width:55em){#toc{float:right;max-width:18em;padding-right:1em}}.header-link{visibility:hidden;font-size:80%}h2:hover .header-link,h3:hover .header-link,h4:hover .header-link,h5:hover .header-link,h6:hover .header-link{visibility:initial;text-decoration:none}.column{margin:.5em}.columns{max-width:75em}@media screen and (min-width:50em){.column{display:inline-block;vertical-align:top}}</style> 
 </head> 
 <body> 
  <div id="header"> 
   <div id="logoline"> 
    <div id="logo"> 
     <script data-pagespeed-no-defer type="text/javascript">//<![CDATA[
(function(){for(var g="function"==typeof Object.defineProperties?Object.defineProperty:function(b,c,a){if(a.get||a.set)throw new TypeError("ES3 does not support getters and setters.");b!=Array.prototype&&b!=Object.prototype&&(b[c]=a.value)},h="undefined"!=typeof window&&window===this?this:"undefined"!=typeof global&&null!=global?global:this,k=["String","prototype","repeat"],l=0;l<k.length-1;l++){var m=k[l];m in h||(h[m]={});h=h[m]}var n=k[k.length-1],p=h[n],q=p?p:function(b){var c;if(null==this)throw new TypeError("The 'this' value for String.prototype.repeat must not be null or undefined");c=this+"";if(0>b||1342177279<b)throw new RangeError("Invalid count value");b|=0;for(var a="";b;)if(b&1&&(a+=c),b>>>=1)c+=c;return a};q!=p&&null!=q&&g(h,n,{configurable:!0,writable:!0,value:q});var t=this;function u(b,c){var a=b.split("."),d=t;a[0]in d||!d.execScript||d.execScript("var "+a[0]);for(var e;a.length&&(e=a.shift());)a.length||void 0===c?d[e]?d=d[e]:d=d[e]={}:d[e]=c};function v(b){var c=b.length;if(0<c){for(var a=Array(c),d=0;d<c;d++)a[d]=b[d];return a}return[]};function w(b){var c=window;if(c.addEventListener)c.addEventListener("load",b,!1);else if(c.attachEvent)c.attachEvent("onload",b);else{var a=c.onload;c.onload=function(){b.call(this);a&&a.call(this)}}};var x;function y(b,c,a,d,e){this.h=b;this.j=c;this.l=a;this.f=e;this.g={height:window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,width:window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth};this.i=d;this.b={};this.a=[];this.c={}}function z(b,c){var a,d,e=c.getAttribute("data-pagespeed-url-hash");if(a=e&&!(e in b.c))if(0>=c.offsetWidth&&0>=c.offsetHeight)a=!1;else{d=c.getBoundingClientRect();var f=document.body;a=d.top+("pageYOffset"in window?window.pageYOffset:(document.documentElement||f.parentNode||f).scrollTop);d=d.left+("pageXOffset"in window?window.pageXOffset:(document.documentElement||f.parentNode||f).scrollLeft);f=a.toString()+","+d;b.b.hasOwnProperty(f)?a=!1:(b.b[f]=!0,a=a<=b.g.height&&d<=b.g.width)}a&&(b.a.push(e),b.c[e]=!0)}y.prototype.checkImageForCriticality=function(b){b.getBoundingClientRect&&z(this,b)};u("pagespeed.CriticalImages.checkImageForCriticality",function(b){x.checkImageForCriticality(b)});u("pagespeed.CriticalImages.checkCriticalImages",function(){A(x)});function A(b){b.b={};for(var c=["IMG","INPUT"],a=[],d=0;d<c.length;++d)a=a.concat(v(document.getElementsByTagName(c[d])));if(a.length&&a[0].getBoundingClientRect){for(d=0;c=a[d];++d)z(b,c);a="oh="+b.l;b.f&&(a+="&n="+b.f);if(c=!!b.a.length)for(a+="&ci="+encodeURIComponent(b.a[0]),d=1;d<b.a.length;++d){var e=","+encodeURIComponent(b.a[d]);131072>=a.length+e.length&&(a+=e)}b.i&&(e="&rd="+encodeURIComponent(JSON.stringify(B())),131072>=a.length+e.length&&(a+=e),c=!0);C=a;if(c){d=b.h;b=b.j;var f;if(window.XMLHttpRequest)f=new XMLHttpRequest;else if(window.ActiveXObject)try{f=new ActiveXObject("Msxml2.XMLHTTP")}catch(r){try{f=new ActiveXObject("Microsoft.XMLHTTP")}catch(D){}}f&&(f.open("POST",d+(-1==d.indexOf("?")?"?":"&")+"url="+encodeURIComponent(b)),f.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),f.send(a))}}}function B(){var b={},c;c=document.getElementsByTagName("IMG");if(!c.length)return{};var a=c[0];if(!("naturalWidth"in a&&"naturalHeight"in a))return{};for(var d=0;a=c[d];++d){var e=a.getAttribute("data-pagespeed-url-hash");e&&(!(e in b)&&0<a.width&&0<a.height&&0<a.naturalWidth&&0<a.naturalHeight||e in b&&a.width>=b[e].o&&a.height>=b[e].m)&&(b[e]={rw:a.width,rh:a.height,ow:a.naturalWidth,oh:a.naturalHeight})}return b}var C="";u("pagespeed.CriticalImages.getBeaconData",function(){return C});u("pagespeed.CriticalImages.Run",function(b,c,a,d,e,f){var r=new y(b,c,a,e,f);x=r;d&&w(function(){window.setTimeout(function(){A(r)},0)})});})();pagespeed.CriticalImages.Run('/mod_pagespeed_beacon','https://www.modpagespeed.com/doc/filter-css-combine','Dk5DWHnOq6',true,false,'6vQvQ29nnUA');
//]]></script>
     <img src="https://www.gstatic.com/images/branding/product/1x/pagespeed_32dp.png" srcset="https://www.gstatic.com/images/branding/product/2x/pagespeed_32dp.png" width="32" height="32" alt="pagespeed logo" data-pagespeed-url-hash="1122293307" onload="pagespeed.CriticalImages.checkImageForCriticality(this);"> 
    </div> 
    <div id="logotext">
     PageSpeed
    </div> 
   </div> 
   <div id="navline"> 
    <a href="/doc/">? documentation index</a> 
   </div> 
  </div> 
  <div id="toc"></div> 
  <div id="content"> 
   <h1>Combine CSS</h1> 
   <h2>Configuration</h2> 
   <p> The 'Combine CSS' filter is enabled by specifying: </p> 
   <dl> 
    <dt>
     Apache:
    </dt>
    <dd>
     <pre class="prettyprint">ModPagespeedEnableFilters combine_css</pre> 
    </dd>
    <dt>
     Nginx:
    </dt>
    <dd>
     <pre class="prettyprint">pagespeed EnableFilters combine_css;</pre> 
    </dd>
   </dl> 
   <p> in the configuration file. </p> 
   <h2>Description</h2> 
   <p> 'Combine CSS' seeks to reduce the number of HTTP requests made by a browser during page refresh by replacing multiple distinct CSS files with a single CSS file, containing the contents of all of them. This is particularly important in old browsers, that were limited to two connections per domain. In addition to reduced overhead for HTTP headers and communications warm-up, this approach works better with TCP/IP slow-start, increasing the effective payload bit-rate through the browser's network connection. </p> 
   <p> This <a href="/speed/docs/best-practices/rtt#CombineExternalCSS">practice</a> reduces the number of round-trip times. </p> 
   <h2>Operation</h2> 
   <p> The "CSS Combine" filter finds all CSS <code>&lt;link&gt;</code> tags. If there was more than one in a flush window, it removes each of those links and replaces them with a single <code>&lt;link&gt;</code> to the merged document, which it places wherever the first CSS <code>&lt;link&gt;</code> originally was. </p> 
   <p> For example, if the HTML document looks like this: </p> 
   <pre class="prettyprint">
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel="stylesheet" type="text/css" href="styles/yellow.css"&gt;
    &lt;link rel="stylesheet" type="text/css" href="styles/blue.css"&gt;
    &lt;link rel="stylesheet" type="text/css" href="styles/big.css"&gt;
    &lt;link rel="stylesheet" type="text/css" href="styles/bold.css"&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div class="blue yellow big bold"&gt;
      Hello, world!
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre> 
   <p> Then PageSpeed will rewrite it into: </p> 
   <pre class="prettyprint">
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel="stylesheet" type="text/css" href="styles/yellow.css+blue.css+big.css+bold.css.pagespeed.cc.xo4He3_gYf.css"&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div class="blue yellow big bold"&gt;
      Hello, world!
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre> 
   <h3>Example</h3> 
   <p> You can see the filter in action at <code>www.modpagespeed.com</code> on this <a href="http://www.modpagespeed.com/combine_css.html?ModPagespeed=on&amp;ModPagespeedFilters=combine_css">example</a>. </p> 
   <h2>Parameters that affect CSS optimization</h2> 
   <h3 id="MaxCombinedCssBytes">MaxCombinedCssBytes</h3> 
   <dl> 
    <dt>
     Apache:
    </dt>
    <dd>
     <pre class="prettyprint">ModPagespeedMaxCombinedCssBytes MaxBytes</pre> 
    </dd>
    <dt>
     Nginx:
    </dt>
    <dd>
     <pre class="prettyprint">pagespeed MaxCombinedCssBytes MaxBytes;</pre> 
    </dd>
   </dl> 
   <p> <code>MaxBytes</code> is the maximum size in bytes of the combined CSS files. CSS files larger than <code>MaxBytes</code> will be kept intact; other CSS files will be combined into one or more files, each being no more than <code>MaxBytes</code> in size. The current default value for <code>MaxBytes</code> is -1 (unlimited). </p> 
   <h2>Limitations</h2> 
   <p>The CSS Combine filter operates within the scope of a "flush window". Specifically, large, or dynamically generated HTML files may be "flushed" by the resource generator before they are complete. When the CSS combiner encounters a flush, it will emit all CSS combinations seen up to the point of the flush. After the flush, it will begin collecting a new CSS combination. </p> 
   <p>This filter generates URLs that are essentially the concatenation of the URLs of all the CSS files being combined. The maximum URL size is generally limited to about 2k characters due to IE: See <a href="http://support.microsoft.com/kb/208427/EN-US">http://support.microsoft.com/kb/208427/EN-US</a>. Apache servers by default impose a further limitation of about 250 characters per URL segment (text between slashes). PageSpeed circumvents this limitation when it runs within Apache, but if you employ proxy servers in your path you may need to re-impose it by overriding the setting here. The default setting is 1024.</p> 
   <dl> 
    <dt>
     Apache:
    </dt>
    <dd>
     <pre class="prettyprint">ModPagespeedMaxSegmentLength 250</pre> 
    </dd>
    <dt>
     Nginx:
    </dt>
    <dd>
     <pre class="prettyprint">pagespeed MaxSegmentLength 250;</pre> 
    </dd>
   </dl> 
   <h3 id="permit-ids-for-css-combining">Combining Resources with IDs</h3> 
   <p class="note"><strong>Note: New feature as of 1.12.34.1</strong></p> 
   <p> By default PageSpeed won't combine CSS files that have <code>id</code> attributes, because this often indicates that the site designer intended to reference them in javascript. However, some content management systems, including WordPress, put <code>id</code>s on all stylesheets for clarity. To enable combining these files, you can provide one or more wildcards. For example, this would mark stylesheets with ids starting with <code>font</code> as eligible for combining: </p> 
   <dl> 
    <dt>
     Apache:
    </dt>
    <dd>
     <pre class="prettyprint">ModPagespeedPermitIdsForCssCombining font*</pre> 
    </dd>
    <dt>
     Nginx:
    </dt>
    <dd>
     <pre class="prettyprint">pagespeed PermitIdsForCssCombining font*;</pre> 
    </dd>
   </dl> 
   <h2>Requirements</h2> 
   <p> The 'Combine CSS' filter may need to <em>absolutify</em> relative URLs, if rewriting the CSS causes the path to be moved. The filter will not merge together resources from multiple distinct domains, even if those domains are each authorized by <code>Domain</code>. It <strong>will</strong> merge together resources from multiple distinct domains that have been mapped together via <code>MapRewriteDomain</code>. </p> 
   <p> By default, the filter will combine together CSS files from different paths, placing the combined element at the lowest level common to both origins. In some cases, this may be undesirable. You can turn off the behavior with: </p> 
   <dl> 
    <dt>
     Apache:
    </dt>
    <dd>
     <pre class="prettyprint">ModPagespeedCombineAcrossPaths off</pre> 
    </dd>
    <dt>
     Nginx:
    </dt>
    <dd>
     <pre class="prettyprint">pagespeed CombineAcrossPaths off;</pre> 
    </dd>
   </dl> 
   <p> The filter will maintain the order of the CSS contents, as class order can be significant. </p> 
   <p> IE Directives containing CSS links form a "barrier" for the CSS combiner. Multiple CSS elements found before an IE directive are combined together immediately before the IE directive. Multiple CSS elements found after are also combined, but the combination does not span across the IE directive, as that would affect the order that the browser sees the CSS elements. </p> 
   <h2>Risks</h2> 
   <p> This filter is considered low risk. However, JavaScript can be written that walks the DOM looking for <code>&lt;link&gt;</code> entries with certain syntax. Such JavaScript may behave differently on a page which has modified CSS links in this way. </p> 
  </div> 
  <div id="footer"> 
   <div id="navline"> 
    <a href="/doc/">? documentation index</a> 
   </div> 
  </div> 
  <script>function buildTocHelper(node,headers){if(node.nodeType==1){var nodeName=node.nodeName.toLowerCase();if(nodeName=="h2"||nodeName=="h3"||nodeName=="h4"||nodeName=="h5"||nodeName=="h6"){if(node.id){headers.push([nodeName,node.innerHTML,node.id]);node.appendChild(document.createTextNode("\u00A0"));var a=document.createElement("a");a.class="header-link";a.href="#"+node.id;a.textContent="\uD83D\uDD17";node.appendChild(a);}}else{for(var i=0;i<node.childNodes.length;i++){buildTocHelper(node.childNodes[i],headers);}}}}function buildToc(){var headers=[];buildTocHelper(document.body,headers);if(headers.length==0){return;}var toc=document.getElementById("toc");var tocContents=document.createElement("div");tocContents.id="toc-contents";tocContents.textContent="Contents";toc.appendChild(tocContents);var level=1;var currentUl=null;for(var i=0;i<headers.length;i++){var header=headers[i];var headerLevel=header[0];var headerValue=header[1];var headerId=header[2];var newLevel=parseInt(headerLevel.substring(1));while(newLevel>level){var newUl=document.createElement("ul");if(currentUl==null){toc.appendChild(newUl);}else{currentUl.appendChild(newUl);}currentUl=newUl;level++;}while(newLevel<level){currentUl=currentUl.parentNode;level--;}var li=document.createElement("li");var a=document.createElement("a");a.href="#"+headerId;a.textContent=headerValue;li.appendChild(a);currentUl.appendChild(li);}}function wrapTables(){var tables=document.getElementsByTagName("table");for(var i=0;i<tables.length;i++){var table=tables[i];var parent=table.parentNode;var div=document.createElement('div');div.className="table-wrapper";parent.insertBefore(div,table);div.appendChild(table);}}buildToc();wrapTables();</script> 
  <script>if(window.parent==window){(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-105228961-1','auto',{'siteSpeedSampleRate':100});ga('send','pageview');}</script>  
 </body>
</html>