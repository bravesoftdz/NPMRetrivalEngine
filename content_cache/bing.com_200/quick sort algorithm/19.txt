<!doctype html>
<html lang="en-US" itemscope itemtype="http://schema.org/Article" prefix="og: http://ogp.me/ns#">
 <head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="profile" href="http://gmpg.org/xfn/11">
  <link rel="pingback" href="https://www.codingeek.com/xmlrpc.php">
  <link type="text/css" media="all" href="https://www.codingeek.com/wp-content/cache/autoptimize/css/autoptimize_69215d480f202c8d54610ce3ad491ac4.css" rel="stylesheet">
  <title>Heap Sort Algorithm – Explanation &amp; Implementation | CodinGeek</title>
  <!-- All in One SEO Pack 2.3.4.2 by Michael Torbert of Semper Fi Web Designob_start_detected [-1,-1] -->
  <meta name="description" itemprop="description" content="Heap Sort is comparison based sorting algorithm. It uses binary heap data structure. Heap Sort can be assumed as improvised version of Selection Sort with O(n">
  <meta name="keywords" itemprop="keywords" content="heap sort algorithm,heap sort,heap sort explanation,heap sort pseudocode,heap sort complexity,heap sort implementation in c,heap sort implementation in java,heap sort example,algorithm pseudocode,algorithms analysis,algorithms and data structure,algorithms complexity,algorithms examples,algorithms implementation in c,algorithms implementation in java,sorting algorithms">
  <link rel="canonical" href="https://www.codingeek.com/algorithms/heap-sort-algorithm-explanation-and-implementation/">
  <meta property="og:title" content="Heap Sort Algorithm – Explanation &amp; Implementation | CodinGeek">
  <meta property="og:type" content="article">
  <meta property="og:url" content="https://www.codingeek.com/algorithms/heap-sort-algorithm-explanation-and-implementation/">
  <meta property="og:image" content="https://www.codingeek.com/wp-content/uploads/2016/07/heap-1.png">
  <meta property="og:site_name" content="CodinGeek">
  <meta property="fb:admins" content="100001302218938">
  <meta property="og:description" content="Heap Sort is comparison based sorting algorithm. It uses binary heap data structure. Heap Sort can be assumed as improvised version of Selection Sort with O(n*logn) running time complexity.">
  <meta property="article:publisher" content="https://www.facebook.com/CodinGeekDevelopersFriend">
  <meta property="article:published_time" content="2016-07-16T08:23:43Z">
  <meta property="article:modified_time" content="2016-08-28T16:52:34Z">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="Heap Sort Algorithm – Explanation &amp; Implementation | CodinGeek">
  <meta name="twitter:description" content="Heap Sort is comparison based sorting algorithm. It uses binary heap data structure. Heap Sort can be assumed as improvised version of Selection Sort with O(n*logn) running time complexity.">
  <meta name="twitter:image" content="https://www.codingeek.com/wp-content/uploads/2016/07/heap-1.png">
  <meta itemprop="image" content="https://www.codingeek.com/wp-content/uploads/2016/07/heap-1.png"> 
  <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

			ga('create', 'UA-54114053-1', 'auto');
			
			ga('send', 'pageview');</script> 
  <!-- /all in one seo pack -->
  <link rel="dns-prefetch" href="//fonts.googleapis.com">
  <link rel="dns-prefetch" href="//s.w.org">
  <link rel="alternate" type="application/rss+xml" title="CodinGeek » Feed" href="https://www.codingeek.com/feed/">
  <link rel="alternate" type="application/rss+xml" title="CodinGeek » Comments Feed" href="https://www.codingeek.com/comments/feed/">
  <link rel="alternate" type="application/rss+xml" title="CodinGeek » Heap Sort Algorithm – Explanation and Implementation Comments Feed" href="https://www.codingeek.com/algorithms/heap-sort-algorithm-explanation-and-implementation/feed/">
  <link rel="stylesheet" id="theme-slug-fonts-css" href="//fonts.googleapis.com/css?family=Droid+Sans%3A400%2C700" type="text/css" media="all"> 
  <script type="text/javascript" src="https://www.codingeek.com/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <link rel="https://api.w.org/" href="https://www.codingeek.com/wp-json/">
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.codingeek.com/xmlrpc.php?rsd">
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.codingeek.com/wp-includes/wlwmanifest.xml">
  <link rel="prev" title="Deletion from Linked List – Explanation, Types and Implementation" href="https://www.codingeek.com/data-structure/deletion-to-linked-list-explanation-types-and-implementation/">
  <link rel="next" title="Linked List reversal – Implementation and Explanation" href="https://www.codingeek.com/data-structure/linked-list-reversal-implementation-and-explanation/">
  <meta name="generator" content="WordPress 4.8.1">
  <link rel="shortlink" href="https://www.codingeek.com/?p=1010">
  <link rel="alternate" type="application/json+oembed" href="https://www.codingeek.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.codingeek.com%2Falgorithms%2Fheap-sort-algorithm-explanation-and-implementation%2F">
  <link rel="alternate" type="text/xml+oembed" href="https://www.codingeek.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.codingeek.com%2Falgorithms%2Fheap-sort-algorithm-explanation-and-implementation%2F&amp;format=xml"> 
  <script data-cfasync="false" src="//load.sumome.com/" data-sumo-platform="wordpress" data-sumo-site-id="205f00bc1a8ff266cdb61fd5f92d2632fe81e785587d7aa1f1227cfd99d7ddc9" async></script> 
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
 </head>
 <body id="blog" class="post-template-default single single-post postid-1010 single-format-standard custom-background">
  <div class="main-container">
   <div class="trending-articles">
    <ul>
     <li class="firstlink">Now Trending:</li>
     <li class="trendingPost "> <a href="https://www.codingeek.com/puzzles/brainstorming-puzzles-set-12-open-doors-the-poisoned-wine/" title="Brainstorming Puzzles Set 12 Open Doors | The Poisoned Wine" rel="bookmark">Brainstorming Puzzles Se...</a></li>
     <li class="trendingPost "> <a href="https://www.codingeek.com/puzzles/brainstorming-puzzles-set-11-maximum-distance-travelled-the-fake-note-colliding-ants/" title="Brainstorming Puzzles Set 11 Maximum Distance Travelled | The Fake Note | Colliding Ants" rel="bookmark">Brainstorming Puzzles Se...</a></li>
     <li class="trendingPost "> <a href="https://www.codingeek.com/puzzles/brainstorming-puzzles-set-10-identify-the-identical-sisters-the-missing-fish/" title="Brainstorming Puzzles Set 10&nbsp;– Identify The Identical Sisters | The Missing Fish" rel="bookmark">Brainstorming Puzzles Se...</a></li>
     <li class="trendingPost last"> <a href="https://www.codingeek.com/puzzles/brainstorming-puzzles-set-9-guess-the-shirt-color-crossing-the-bridge-counting-the-pets/" title="Brainstorming Puzzles Set 9 – Guess the Shirt Color | Crossing The Bridge | Counting The Pets" rel="bookmark">Brainstorming Puzzles Se...</a></li>
    </ul>
   </div>
   <header id="masthead" class="site-header" role="banner">
    <div class="site-branding">
     <h2 id="logo" class="text-logo" itemprop="headline"> <a href="https://www.codingeek.com">CodinGeek</a></h2>
     <!-- END #logo --> 
     <a href="#" id="pull" class="toggle-mobile-menu">Menu</a>
     <div class="primary-navigation">
      <nav id="navigation" class="mobile-menu-wrapper" role="navigation">
       <ul id="menu-main-menu" class="menu clearfix">
        <li id="menu-item-1630" class="menu-item menu-item-type-taxonomy menu-item-object-category"><a href="https://www.codingeek.com/category/tutorials/c-programming/">C<br><span class="sub"></span></a></li>
        <li id="menu-item-131" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children"><a href="https://www.codingeek.com/category/java/">Java<br><span class="sub"></span></a>
         <ul class="sub-menu">
          <li id="menu-item-187" class="menu-item menu-item-type-taxonomy menu-item-object-category"><a href="https://www.codingeek.com/category/java/strings/">Java Strings<br><span class="sub"></span></a></li>
          <li id="menu-item-230" class="menu-item menu-item-type-taxonomy menu-item-object-category"><a href="https://www.codingeek.com/category/java/io/">Java I/O<br><span class="sub"></span></a></li>
         </ul></li>
        <li id="menu-item-1571" class="menu-item menu-item-type-taxonomy menu-item-object-category"><a href="https://www.codingeek.com/category/tutorials/python/">Python<br><span class="sub"></span></a></li>
        <li id="menu-item-623" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent"><a href="https://www.codingeek.com/category/algorithms/">Algo<br><span class="sub"></span></a></li>
        <li id="menu-item-1224" class="menu-item menu-item-type-custom menu-item-object-custom"><a href="/category/data-structure/">DS<br><span class="sub"></span></a></li>
        <li id="menu-item-372" class="menu-item menu-item-type-taxonomy menu-item-object-category"><a href="https://www.codingeek.com/category/how-to/">How To<br><span class="sub"></span></a></li>
        <li id="menu-item-726" class="menu-item menu-item-type-custom menu-item-object-custom"><a href="https://www.codingeek.com/forum">Forum<br><span class="sub"></span></a></li>
       </ul>
      </nav>
      <!-- #navigation -->
     </div>
     <!-- .primary-navigation -->
    </div>
    <!-- .site-branding -->
   </header>
   <!-- #masthead --> 
   <!-- Hitesh code for header ad start -->
   <div class="hit-ads"> 
    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
    <!-- Responsive --> 
    <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-4829687731530978" data-ad-slot="9378510249" data-ad-format="auto"></ins> 
    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script> 
   </div> 
   <!-- Hitesh code for header ad ends -->
   <div id="page" class="single">
    <div class="content"> 
     <!-- Start Article -->
     <article class="article">
      <div id="post-1010" class="post post-1010 type-post status-publish format-standard has-post-thumbnail hentry category-algorithms tag-algorithm-pseudocode tag-algorithms-analysis tag-algorithms-and-data-structure tag-algorithms-complexity tag-algorithms-examples tag-algorithms-implementation-in-c tag-algorithms-implementation-in-java tag-sorting-algorithms">
       <div class="single_post">
        <header> 
         <!-- Start Title -->
         <h1 class="title single-title">Heap Sort Algorithm – Explanation and Implementation</h1> 
         <!-- End Title --> 
         <!-- Start Post Meta -->
         <div class="post-info">
          <span class="theauthor"><a href="https://www.codingeek.com/author/priyanshmangal/" title="Posts by Priyansh Mangal" rel="author">Priyansh Mangal</a></span> | 
          <span class="thetime">July 16, 2016</span> | 
          <span class="thecategory"><a href="https://www.codingeek.com/category/algorithms/" rel="category tag">algorithms</a></span> | 
          <span class="thecomment"><a href="https://www.codingeek.com/algorithms/heap-sort-algorithm-explanation-and-implementation/#comments"><span class="dsq-postid" data-dsqidentifier="1010 http://www.codingeek.com/?p=1010">2 Comments</span></a></span>
         </div> 
         <!-- End Post Meta -->
        </header> 
        <!-- Start Content -->
        <div class="post-single-content box mark-links">
         <blockquote>
          <p><strong>Heap Sort is comparison based sorting algorithm</strong>. It uses <em><strong>binary heap data structure</strong></em>. Heap Sort can be assumed as improvised version of <a href="/algorithms/selection-sort-algorithm-and-its-implementation/" target="_blank">Selection Sort</a> where we find the largest element and place it at end index. But unlike selection sort and like <a href="/algorithms/quick-sort-algorithm-explanation-implementation-and-complexity/" target="_blank">quick sort</a> its time complexity is O(n*logn). Heap sort is an in-place sorting algorithm but is not a stable sort.</p>
         </blockquote>
         <p>Before continuing with the algorithm lets get familiar to some frequent terms use in this algorithm and this post as well.</p>
         <p><strong>Heap Property</strong> -&gt; A data structure in which all nodes of the heap is either greater than equal to its children or less than equal to its children.<br> <strong>Max-Heapify</strong> -&gt; Process which satisfy max-heap property (A[parent[i]] &gt;=&nbsp;A[i]). Here larger element is stored at root.<br> <strong>Min-Heapify</strong> -&gt; Process which satisfy min-heap property (A[parent[i]] &lt;=&nbsp;A[i]). Here smaller element is stored at root.</p>
         <div class="LsUtUNFQ" style="clear:both;float:left;width:100%;margin:0 0 20px 0;">
          <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
          <!-- Large rectangles -->
          <div class="hit-ads"> 
           <ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4829687731530978" data-ad-slot="3865296240"></ins>
          </div> 
          <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
         </div>
         <hr>
         <div id="ez-toc-container" class="counter-hierarchy ez-toc-grey">
          <div class="ez-toc-title-container">
           <p class="ez-toc-title">Table of Contents</p> 
           <span class="ez-toc-title-toggle"><a class="pull-right btn btn-xs btn-default ez-toc-toggle"><i class="glyphicon ez-toc-icon-toggle"></i></a></span>
          </div>
          <ul class="ez-toc-list">
           <ul>
            <li><a href="#how_heap_sort_works_8211" title="How Heap sort works –">How Heap sort works –</a></li>
            <li><a href="#here_are_some_key_points_of_heap_sort_algorithm" title="Here are some key points of Heap sort algorithm –">Here are some key points of Heap sort algorithm –</a></li>
            <li><a href="#lets_understand_it_with_an_example_8211" title="Let’s understand it with an example –">Let’s understand it with an example –</a></li>
            <li><a href="#working_of_heap_sort_with_max-heapify_function" title="Working of Heap sort with Max-Heapify() function:">Working of Heap sort with Max-Heapify() function:</a></li>
            <li><a href="#pseudocode_of_heap_sort" title="Pseudocode of Heap Sort">Pseudocode of Heap Sort</a></li>
            <li><a href="#analysis_of_build-max-heapify_function" title="Analysis of Build-Max-Heapify() function">Analysis of Build-Max-Heapify() function</a></li>
            <li><a href="#asymptotic_analysis_of_heap_sort" title="Asymptotic Analysis of Heap Sort">Asymptotic Analysis of Heap Sort</a></li>
            <li><a href="#implementation_of_heap_sort_in_various_programming_language" title="Implementation of Heap Sort in various programming language">Implementation of Heap Sort in various programming language</a></li>
           </ul>
           <li><a href="#c" title="C">C</a>
            <ul>
             <li><a href="#implementation_of_heap_sort_in_java_programming_language" title="Implementation of Heap Sort in Java programming language">Implementation of Heap Sort in Java programming language</a></li>
            </ul></li>
           <li><a href="#java" title="JAVA">JAVA</a></li>
          </ul>
         </div>
         <h3><span class="ez-toc-section" id="how_heap_sort_works_8211">How Heap sort works –</span></h3>
         <p>Heap Sort algorithm inserts all elements (from an unsorted array) into a heap then swap the first element (maximum) with the last element(minimum) and reduce the heap size (array size) by one because last element is already at its final location in the sorted array. Then we heapify the first element because swapping has broken the max heap property. We continue this process until heap size remains one.</p>
         <p>Hereafter swapping, it may not satisfy the heap property. So, we need to adjust the location of element&nbsp;to maintain heap property. This process is called <strong>heapify</strong>. Here we Recursively fix the children until all of them satisfy the heap property.</p>
         <hr>
         <h3><span class="ez-toc-section" id="here_are_some_key_points_of_heap_sort_algorithm"><em>Here are some key points of Heap sort algorithm –</em></span></h3>
         <ul>
          <li>Heap Sort is one of the best examples of comparison based sorting algorithm.</li>
          <li><strong>&nbsp;</strong>Time complexity of <strong>Max-Heapify function is O(logn)</strong>. Time complexity of <strong>Build-Max-Heap() function is O(n)</strong> .</li>
          <li>Performance of Heap Sort is O(n+n*logn) which is evaluated to O(n*logn) in all 3 cases (worst, average and best) .</li>
          <li>It is an in-place sorting algorithm as it requires a constant amount of additional space.</li>
          <li>Heap sort and Quick Sort both are in-place sorting algorithm but heap sort has an advantage over quick sort in worst case as heap sort run in O(n*logn) even in worst case.</li>
          <li>Heap Sort is not a stable sort, it does not retrieve the same order of equal elements in the sorted array.</li>
         </ul>
         <hr>
         <h3><span class="ez-toc-section" id="lets_understand_it_with_an_example_8211">Let’s understand it with an example –</span></h3>
         <p>Observe each step in the animation below carefully and try to visualize the concept of this algorithm.</p>
         <figure id="attachment_1011" style="width: 350px" class="wp-caption aligncenter">
          <a href="http://www.codingeek.com/wp-content/uploads/2016/07/Heapsort-example.gif" rel="attachment wp-att-1011"><img class="wp-image-1011 size-full" src="http://www.codingeek.com/wp-content/uploads/2016/07/Heapsort-example.gif" alt="Heapsort-example" width="350" height="280"></a>
          <figcaption class="wp-caption-text">
           Heap-Sort Algorithm
          </figcaption>
         </figure>
         <h3><span class="ez-toc-section" id="working_of_heap_sort_with_max-heapify_function">Working of Heap sort with Max-Heapify() function:</span></h3>
         <p>First Step we call Build-Max-Heap() function which inserts each element of the unsorted list in a heap and maintain heap property. Once heap is built our first element of the heap is the largest element. So we swap the first element with the last element of the heap. And then, we reduce the size of a heap by one. Then we recursively call Max-Heapify() function on first element and we again get heap with first element as largest, we again swap it with the last element and reduce the size of a heap by one. We continue this process until our heap size remains one. Finally, we get our sorted list.</p>
         <hr>
         <h3><span class="ez-toc-section" id="pseudocode_of_heap_sort">Pseudocode of Heap Sort</span></h3>
         <pre class="brush: cpp; title: ; notranslate" title="">
MaxHeapify(A, i)
    l = left(i)
    r = right(i)
    if l &lt;= heap-size[A] and A[l] &gt; A[i]
        then largest = l
        else largest = i
    if r &lt;= heap-size[A] and A[r] &gt; A[largest]
        then largest = r
    if largest != i
        then swap A[i] with A[largest]
        MaxHeapify(A, largest)
end func

BuildMaxHeap(A)
    heap-size[A] = length[A]
    for i = |length[A]/2| downto 1
        do MaxHeapify(A, i)
end func

HeapSort(A)
    BuildMaxHeap(A)
    for i = length[A] downto 2
        do swap A[1] with A[i]
            heap-size[A] = heap-size[A] – 1
            MaxHeapify(A, 1)
end func

</pre>
         <p>&nbsp;</p>
         <hr>
         <h3><span class="ez-toc-section" id="analysis_of_build-max-heapify_function">Analysis of Build-Max-Heapify() function</span></h3>
         <p>In Build-Max-heapify() function we call Max-Heapify function about n/2 times=O(n). And running time complexity of Max-Heapify is O(h) = O(logn).So, we see that Build-Max-Heapify runs in O(n*logn).</p>
         <p><strong>Tighter Bound for <i>T</i>(<i>BuildMaxHeap</i>):</strong></p>
         <p>Cost of a call to MaxHeapify at a node depends on the height, h, of the node –&gt; O(h).<br> And most of the heapification takes place at lower level. Height of node h ranges from 0 to logn.<br> And, at most [n/2<sup>h+1 </sup>] nodes are there at any height h. Therefore, running time complexity of Build-Max-Heap can be expressed as:<br> <img class="aligncenter" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0945901c8f499bb5e98e3b830956c1e8506a977d" alt="{\displaystyle {\begin{aligned}\sum _{h=0}^{\lceil \log n\rceil }{\frac {n}{2^{h+1}}}O(h)&amp;=O\left(n\sum _{h=0}^{\lceil \log n\rceil }{\frac {h}{2^{h+1}}}\right)\\&amp;=O\left({\frac {n}{2}}\sum _{h=0}^{\lceil \log n\rceil }{\frac {h}{2^{h}}}\right)\\&amp;=O\left(n\sum _{h=0}^{\infty }{\frac {h}{2^{h}}}\right)\\&amp;=O(2n)\\&amp;=O(n)\end{aligned}}}" width="298" height="235"></p>
         <hr>
         <h3><span class="ez-toc-section" id="asymptotic_analysis_of_heap_sort">Asymptotic Analysis of Heap Sort</span></h3>
         <p>Since in Heap Sort we first call Build-Max-Heap function which takes O(n) time then we call Max-Heapify function n time, where Max-Heapify function takes O(logn) time so, total time complexity of heap-sort comes out to be O(n+n*logn) which further evaluated to O(n*logn). Summarising all this –</p>
         <p>Time Complexity of Max-Heapify: O(logn)<br> Time Complexity of Build-Max-Heapify:O(n)<br> Time Complexity of Heap Sort-<br> <em>Worst Case : O (n*logn)<br> Average Case : O(n*logn)<br> Best Case : O(n*logn)</em><br> Space Complexity: O(1) Constant space<br> Sorting In Place: Yes<br> Stable:&nbsp;No</p>
         <hr>
         <h3><span class="ez-toc-section" id="implementation_of_heap_sort_in_various_programming_language">Implementation of Heap Sort in various programming language</span></h3>
         <div class="responsive-tabs">
          <h2 class="tabtitle"><span class="ez-toc-section" id="c">C</span></h2>
          <div class="tabcontent">
           <pre class="brush: cpp; title: ; notranslate" title="">
/* C implementation HeapSort */
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;math.h&gt;
// Swapping numbers using call by reference
void swap(int* x, int* y)
{
    int temp = *x;
    *x = *y;
    *y = temp;
}
 
// To Max-Heapify a subtree rooted at node i which is
// an index in A[]. n -&gt; size of heap
// this function insure that child node
// of i node is always smaller than it.
void MaxHeapify(int A[], int n, int i)
{
    int largest = i;  // Initialize largest as root
    int l = 2*i + 1;  // left = 2*i + 1
    int r = 2*i + 2;  // right  = 2*i + 2
 
    // If left child is larger than root
    if (l &lt; n &amp;&amp; A[l] &gt; A[largest])
        largest = l;
    // If right child is larger than largest so far
    if (r &lt; n &amp;&amp; A[r] &gt; A[largest])
        largest = r;
 
    // If largest is not root
    if (largest != i)
    {
        //swap A[i] with A[largest]
        swap(&amp;A[i], &amp;A[largest]);
        // Recursively Max-Heapify the affected sub-tree
        MaxHeapify(A, n, largest);
    }
}
 
// Build-Max-Heap (rearrange array)
//Converting array A to Max-Heap
BuildMaxHeap(int A[], int n)
{
    int i;
    for (i=(n/2)-1;i&gt;=0;i--){
        MaxHeapify(A, n, i);
        }
}
 
// main function to do Heap Sort
void heapSort(int A[], int n)
{
    int i;
    BuildMaxHeap(A, n);
    // One by one extract an element from heap
    //and get the sorted array
    for (i=n-1; i&gt;=0; i--)
    {
        // Move top root element to end element
        swap(&amp;A[0], &amp;A[i]);
        //And reduce size of heap
        int heap_size= i;
        // call max heapify on the reduced heap
        MaxHeapify(A, heap_size, 0);
    }
}
 
/*  function to print an array */
void print_array(int A[], int size)
{
    int i;
    for (i=0; i &lt; size; i++)
        printf("%d ", A[i]);
    printf("\n");
}
 
// Driver program
int main()
{
    int A[] = {6,5,3,1,8,7,2,4};
    int n = sizeof(A)/sizeof(A[0]);
 
    printf("Unsorted array: ");
    print_array(A, n);
    printf("\n");
    //Call heap sort function
    heapSort(A, n);
 
    printf("Sorted array: ");
    print_array(A, n);
    return 0;
}

</pre>
           <h3><span class="ez-toc-section" id="implementation_of_heap_sort_in_java_programming_language">Implementation of Heap Sort in Java programming language</span></h3>
          </div>
          <h2 class="tabtitle"><span class="ez-toc-section" id="java">JAVA</span></h2>
          <div class="tabcontent">
           <pre class="brush: java; title: ; notranslate" title="">
package com.codingeek;
import java.util.Arrays;
 
public class HeapSort {
    int A[];
     
    private void swap(int i, int j) {
         int temp = A[i];
         A[i] = A[j];
         A[j] = temp;
     }
     
    // To Max-Heapify a subtree rooted at node i which is
    // an index in A[].  n -&gt; size of heap
    void maxHeapify(int A[],int n, int i)
    {
        int largest = i;  // Initialize largest as root
        int l = 2*i + 1;  // left = 2*i + 1
        int r = 2*i + 2;  // right = 2*i + 2
  
        // If left child is larger than root
        if (l &lt; n &amp;&amp; A[l] &gt; A[largest])
            largest = l;
  
        // If right child is larger than largest so far
        if (r &lt; n &amp;&amp; A[r] &gt; A[largest])
            largest = r;
  
        // If largest is not root
        if (largest != i)
        {
             
            swap(i,largest);
            // Recursively heapify the affected sub-tree
            maxHeapify(A,n,largest);
        }
    }
     
 // Build-Max-Heap (rearrange array)
  //Converting array A to Max-Heap
    public void BuildMaxHeap(int A[])
    {
        int n = A.length; 
        // one by one checking all root nodes
        //and calling Heapify function 
        //if they does not satisfy heap property
        for (int i = n / 2 - 1; i &gt;= 0; i--)
            maxHeapify(A,n,i);
    }
     
    // main function to do Heap Sort
    public void heapSort(int arr[])
    {   
        this.A=arr;
        int n = A.length;
         
        BuildMaxHeap(A);
        // One by one extract an element from heap
        //and get the sorted array
        for (int i=n-1; i&gt;=0; i--)
        {
            // Move top root element to end element
            swap(0,i);
            // call max heapify on the reduced heap
            maxHeapify(arr, i, 0);
        }
    }
  
    // Driver program
    public static void main(String args[])
    {
        int arr[] = {6,5,3,1,8,7,2,4};
      //print unsorted array using Arrays.toString()
        System.out.print("Unsorted array: ");
        System.out.println(Arrays.toString(arr));
  
        HeapSort ob = new HeapSort();
        ob.heapSort(arr);
  
        System.out.print("Sorted array: ");
        //print sorted array
          System.out.println(Arrays.toString(arr)); 
    }
}
</pre>
          </div>
         </div>
         <pre class="output"><span style="text-decoration: underline;"><strong>Output:-</strong></span>
Unsorted array:  6 5 3 1 8 7 2 4 
Sorted array:    1 2 3 4 5 6 7 8
</pre>
         <hr>
         <p>That’s all for heap sort, one of the most famous comparison based sorting algorithm. As a programmer, one should be aware of this algorithm and it is quite fast with time complexity of O(n log n) in all three cases. It is better than<a href="/algorithms/merge-sort-algorithm-explanation-implementation-and-complexity/" target="_blank"> Merge Sort</a> as it is in-place sorting Algorithm. And it is better than Quick Sort because it takes O(n*logn) even in the worst case where as quick sort takes O(n*n).<br> Although in practise heap sort run slower than quick sort and merge sort&nbsp;on modern computers.<br> <strong>Introsort</strong> is an alternative to heapsort that combines quicksort and heapsort to retain advantages of both: worst case speed of heapsort and average speed of quicksort.(Wiki)</p>
         <p><strong>Knowledge is most useful when liberated and shared. Share this to motivate us to keep writing such online tutorials for free and do comment if anything is missing or wrong or you need any kind of help.</strong></p>
         <p><strong>Keep Learning… Happy Learning.. ?</strong></p> 
         <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
         <!-- Large rectangles -->
         <div class="hit-ads"> 
          <ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4829687731530978" data-ad-slot="3865296240"></ins>
         </div> 
         <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
         <p></p>
         <div id="mye_param" data-json="{'type':'post','v':'3.92'}" style="display:none;"></div>
         <div id="effecto_bar" style="text-align:center;" data-json="{&quot;effectoCategory&quot;:&quot;a&quot;,&quot;mob&quot;:&quot;1&quot;,&quot;t_img&quot;:&quot;https://www.codingeek.com/wp-content/uploads/2016/07/heap-1-150x150.png&quot;,&quot;effecto_uniquename&quot;:&quot;ebuzzI26DLSJ9LD-2482881&quot;,&quot;effectoPostId&quot;:&quot;1010&quot;,&quot;effectoPreview&quot;:&quot;false&quot;,&quot;effectoPagetitle&quot;:&quot;Heap Sort Algorithm – Explanation and Implementation&quot;,&quot;effectoPublDate&quot;:&quot;Saturday,July 16,2016&quot;,&quot;effectoTag&quot;:&quot;Algorithm pseudocode¸Algorithms Analysis¸algorithms and data structure¸algorithms complexity¸algorithms examples¸algorithms implementation in c¸algorithms implementation in java¸sorting algorithms¸&quot;,&quot;purl&quot;:&quot;&quot;}"></div>
         <script id="effecto-code" src="https://effecto.azureedge.net/jsc/mye-wp.js" type="text/javascript" async="true"></script>
         <div class="hatom-extra" style="display:none;visibility:hidden;">
          <span class="entry-title">Heap Sort Algorithm – Explanation and Implementation</span> was last modified: 
          <span class="updated"> August 28th, 2016</span> by 
          <span class="author vcard"><span class="fn">Priyansh Mangal</span></span>
         </div> 
         <!-- Start Tags -->
         <div class="tags">
          <span class="tagtext">Tags:</span>
          <a href="https://www.codingeek.com/tag/algorithm-pseudocode/" rel="tag">Algorithm pseudocode</a>, 
          <a href="https://www.codingeek.com/tag/algorithms-analysis/" rel="tag">Algorithms Analysis</a>, 
          <a href="https://www.codingeek.com/tag/algorithms-and-data-structure/" rel="tag">algorithms and data structure</a>, 
          <a href="https://www.codingeek.com/tag/algorithms-complexity/" rel="tag">algorithms complexity</a>, 
          <a href="https://www.codingeek.com/tag/algorithms-examples/" rel="tag">algorithms examples</a>, 
          <a href="https://www.codingeek.com/tag/algorithms-implementation-in-c/" rel="tag">algorithms implementation in c</a>, 
          <a href="https://www.codingeek.com/tag/algorithms-implementation-in-java/" rel="tag">algorithms implementation in java</a>, 
          <a href="https://www.codingeek.com/tag/sorting-algorithms/" rel="tag">sorting algorithms</a>
         </div> 
         <!-- End Tags -->
        </div> 
        <!-- End Content --> 
        <!-- Start Related Posts -->
        <div class="related-posts">
         <h3>Related Posts</h3>
         <div class="postauthor-top">
          <ul>
           <li class=" rpexcerpt1 "> <a rel="bookmark" class="relatedthumb" href="https://www.codingeek.com/algorithms/a-tutorial-on-dynamic-programming-dp-approach/" title="A tutorial on Dynamic Programming (DP) Approach"> <span class="rthumb"> <img width="60" height="57" src="https://www.codingeek.com/wp-content/uploads/2017/08/fibonacci-60x57.png" class="attachment-widgetthumb size-widgetthumb wp-post-image" alt="Subproblems in fibonacci function" title="" srcset="https://www.codingeek.com/wp-content/uploads/2017/08/fibonacci-60x57.png 60w, https://www.codingeek.com/wp-content/uploads/2017/08/fibonacci-140x130.png 140w" sizes="(max-width: 60px) 100vw, 60px"> </span> <span> A tutorial on Dynamic Programming (DP) Approach </span> </a>
            <div class="meta"> 
             <a href="https://www.codingeek.com/algorithms/a-tutorial-on-dynamic-programming-dp-approach/#respond" rel="nofollow"><span class="dsq-postid" data-dsqidentifier="2940 http://www.codingeek.com/?p=2940">No Comments</span></a> | 
             <span class="thetime">Aug 13, 2017</span>
            </div> 
            <!--end .entry-meta--></li>
           <li class=" rpexcerpt2 last"> <a rel="bookmark" class="relatedthumb" href="https://www.codingeek.com/algorithms/linear-search-algorithm-and-its-implementation-example/" title="Linear Search Algorithm and its Implementation"> <span class="rthumb"> <img width="60" height="57" src="https://www.codingeek.com/wp-content/uploads/2015/04/Linearsearch-60x57.png" class="attachment-widgetthumb size-widgetthumb wp-post-image" alt="Linear search and its Implementation" title="" srcset="https://www.codingeek.com/wp-content/uploads/2015/04/Linearsearch-60x57.png 60w, https://www.codingeek.com/wp-content/uploads/2015/04/Linearsearch-140x130.png 140w" sizes="(max-width: 60px) 100vw, 60px"> </span> <span> Linear Search Algorithm and its Implementation </span> </a>
            <div class="meta"> 
             <a href="https://www.codingeek.com/algorithms/linear-search-algorithm-and-its-implementation-example/#comments" rel="nofollow"><span class="dsq-postid" data-dsqidentifier="485 http://www.codingeek.com/?p=485">2 Comments</span></a> | 
             <span class="thetime">Apr 21, 2015</span>
            </div> 
            <!--end .entry-meta--></li>
           <li class=" rpexcerpt3 "> <a rel="bookmark" class="relatedthumb" href="https://www.codingeek.com/algorithms/insertion-sort-algorithm-explanation-complexity-and-implementation/" title="Insertion Sort Algorithm – Explanation, Complexity and Implementation"> <span class="rthumb"> <img width="60" height="57" src="https://www.codingeek.com/wp-content/uploads/2016/06/Insertion-Sort-and-its-implementation-60x57.png" class="attachment-widgetthumb size-widgetthumb wp-post-image" alt="Insertion Sort and its implementation" title="" srcset="https://www.codingeek.com/wp-content/uploads/2016/06/Insertion-Sort-and-its-implementation-60x57.png 60w, https://www.codingeek.com/wp-content/uploads/2016/06/Insertion-Sort-and-its-implementation-140x130.png 140w" sizes="(max-width: 60px) 100vw, 60px"> </span> <span> Insertion Sort Algorithm – Explanation, Complexity and Implementation </span> </a>
            <div class="meta"> 
             <a href="https://www.codingeek.com/algorithms/insertion-sort-algorithm-explanation-complexity-and-implementation/#comments" rel="nofollow"><span class="dsq-postid" data-dsqidentifier="800 http://www.codingeek.com/?p=800">1 Comment</span></a> | 
             <span class="thetime">Jun 10, 2016</span>
            </div> 
            <!--end .entry-meta--></li>
           <li class="last rpexcerpt4 last"> <a rel="bookmark" class="relatedthumb" href="https://www.codingeek.com/algorithms/merge-sort-algorithm-explanation-implementation-and-complexity/" title="Merge Sort Algorithm – Explanation,  Implementation and Complexity"> <span class="rthumb"> <img width="60" height="57" src="https://www.codingeek.com/wp-content/uploads/2016/06/word-image-1-60x57.png" class="attachment-widgetthumb size-widgetthumb wp-post-image" alt="• Merge Sort is type of recursive algorithm" title="" srcset="https://www.codingeek.com/wp-content/uploads/2016/06/word-image-1-60x57.png 60w, https://www.codingeek.com/wp-content/uploads/2016/06/word-image-1-300x289.png 300w, https://www.codingeek.com/wp-content/uploads/2016/06/word-image-1-140x130.png 140w, https://www.codingeek.com/wp-content/uploads/2016/06/word-image-1.png 618w" sizes="(max-width: 60px) 100vw, 60px"> </span> <span> Merge Sort Algorithm – Explanation, Implementation and Complexity </span> </a>
            <div class="meta"> 
             <a href="https://www.codingeek.com/algorithms/merge-sort-algorithm-explanation-implementation-and-complexity/#comments" rel="nofollow"><span class="dsq-postid" data-dsqidentifier="885 http://www.codingeek.com/?p=885">4 Comments</span></a> | 
             <span class="thetime">Jun 21, 2016</span>
            </div> 
            <!--end .entry-meta--></li>
          </ul>
         </div>
        </div> 
        <!-- End Related Posts --> 
        <!-- Start Author Box -->
        <div class="postauthor-container">
         <h4>About The Author</h4>
         <div class="postauthor"> 
          <img alt="" src="https://secure.gravatar.com/avatar/26f4749a73aab9c8ff4da5377b4f6937?s=100&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/26f4749a73aab9c8ff4da5377b4f6937?s=200&amp;d=mm&amp;r=g 2x" class="avatar avatar-100 photo" height="100" width="100">
          <h5>PriyanshMangal</h5>
          <p></p>
         </div>
        </div> 
        <!-- End Author Box -->
       </div>
      </div>
      <div id="disqus_thread">
       <div id="dsq-content">
        <ul id="dsq-comments">
         <li class="comment even thread-even depth-1" id="dsq-comment-155">
          <div id="dsq-comment-header-155" class="dsq-comment-header"> 
           <cite id="dsq-cite-155"> <span id="dsq-author-user-155">Sourav Anand</span> </cite>
          </div>
          <div id="dsq-comment-body-155" class="dsq-comment-body">
           <div id="dsq-comment-message-155" class="dsq-comment-message">
            <p>You shamelessly copied the example from Wikipedia. You should know that this file has copyright.</p>
           </div>
          </div>
          <ul class="children">
           <li class="comment odd alt depth-2" id="dsq-comment-156">
            <div id="dsq-comment-header-156" class="dsq-comment-header"> 
             <cite id="dsq-cite-156"> <a id="dsq-author-user-156" href="http://www.codingeek.com" target="_blank" rel="nofollow">Hitesh Garg</a> </cite>
            </div>
            <div id="dsq-comment-body-156" class="dsq-comment-body">
             <div id="dsq-comment-message-156" class="dsq-comment-message">
              <p>I believe you are talking about the image linked below and for you information these images are part of commons wikimedia and are licensed to be used by others and since we do not claim that this is our own work we are not violating any laws for that. I hope I have cleared your confusion. To understand more go to the image actual link and read the licensing term.</p>
              <p><a href="https://commons.wikimedia.org/wiki/File:Heapsort-example.gif" rel="nofollow">https://commons.wikimedia.org/wiki/File:Heapsort-example.gif</a></p>
             </div>
            </div></li>
           <!-- #comment-## -->
          </ul>
          <!-- .children --></li>
         <!-- #comment-## -->
        </ul>
       </div>
      </div> 
      <script type="text/javascript">var disqus_url = 'https://www.codingeek.com/algorithms/heap-sort-algorithm-explanation-and-implementation/';
var disqus_identifier = '1010 http://www.codingeek.com/?p=1010';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'codingeek';
var disqus_title = "Heap Sort Algorithm – Explanation and Implementation";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=1010';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();</script> 
     </article> 
     <!-- End Article --> 
     <!-- Start Sidebar -->
     <aside class="sidebar c-4-12">
      <div id="sidebars" class="sidebar">
       <div class="sidebar_list">
        <aside id="search-2" class="widget widget_search">
         <h3 class="widget-title">Ask me something</h3>
         <form method="get" id="searchform" class="search-form" action="https://www.codingeek.com" _lpchecked="1">
          <fieldset> 
           <input type="text" name="s" id="s" value="Search the site" onblur="if (this.value == '') {this.value = 'Search the site';}" onfocus="if (this.value == 'Search the site') {this.value = '';}"> 
           <button id="search-image" class="sbutton" type="submit" value=""> <i class="point-icon icon-search"></i> </button> 
           <!-- <input id="search-image" class="sbutton" type="submit" style="border:0; vertical-align: top;" value=""> -->
          </fieldset>
         </form>
        </aside>
        <aside id="text-11" class="widget widget_text">
         <h3 class="widget-title">Share knowledge with WORLD</h3>
         <div class="textwidget">
          Do you have technical content that you want to share with the world? 
          <br> Then join us and reach visitors all over the world. Drop a mail to 
          <b>contact[at]codingeek[dot]com</b>.
         </div>
        </aside>
        <aside id="text-9" class="widget widget_text">
         <div class="textwidget">
          <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
          <!-- Wide Skyscraper -->
          <div class="hit-ads"> 
           <ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-4829687731530978" data-ad-slot="3725695443"></ins>
          </div> 
          <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
         </div>
        </aside>
        <aside id="text-7" class="widget widget_text">
         <h3 class="widget-title">Get Connected</h3>
         <div class="textwidget">
          <!--Feedly share button-->
          <div style="padding-left:15px"> 
           <a href="https://cloud.feedly.com/#subscription%2Ffeed%2Fhttp%3A%2F%2Ffeeds.feedburner.com%2FCodingeek" target="blank"><img id="feedlyFollow" src="https://s3.feedly.com/img/follows/feedly-follow-rectangle-flat-big_2x.png" alt="follow us in feedly" width="131" height="56"></a>
           <!-- Place this tag where you want the su badge to render --> 
           <su:badge layout="5"></su:badge>
           <!-- Place this snippet wherever appropriate -->
          </div> 
          <!-- Share box-->
          <div class="hit_share_box">
           <div class="hit_rss"> 
            <a class="hit_link" href="http://feeds.feedburner.com/codingeek" target="_blank"> <span class="hit_logo hit_rss_logo"> </span> <strong> 101</strong> <span class="title"> Subscribers </span> </a>
           </div>
           <div class="hit_fb"> 
            <a class="hit_link" href="https://www.facebook.com/CodinGeekDevelopersFriend" target="_blank"> <span class="hit_logo hit_fb_logo"> </span> <strong>107</strong> <span class="title"> Fans </span> </a>
           </div>
           <div class="hit_twt"> 
            <a class="hit_link" href="https://twitter.com/_codingeek" target="_blank"> <span class="hit_logo hit_twt_logo" target="_blank"> </span> <strong> 5</strong> <span class="title"> Followers </span> </a>
           </div>
           <div class="hit_linked"> 
            <a class="hit_link" href="http://in.linkedin.com/in/HiteshGarg21" target="_blank"> <span class="hit_logo hit_linked_logo" target="_blank"> </span> <strong> 109</strong> <span class="title"> Followers </span> </a>
           </div>
           <div class="hit_gplus"> 
            <a class="hit_link" href="https://plus.google.com/+Codingeek/posts" target="_blank"> <span class="hit_logo hit_gplus_logo" target="_blank"> </span> <strong> 16</strong> <span class="title"> Followers </span> </a>
           </div>
          </div>
         </div>
        </aside>
        <aside id="rss-2" class="widget widget_rss">
         <h3 class="widget-title"><a class="rsswidget" href="https://www.codingeek.com/forum/feed/qa.rss"><img class="rss-widget-icon" style="border:0" width="14" height="14" src="https://www.codingeek.com/wp-includes/images/rss.png" alt="RSS"></a> <a class="rsswidget" href="https://www.codingeek.com/forum/qa">Codingeek Forum</a></h3>
         <ul>
          <li><a class="rsswidget" href="https://www.codingeek.com/forum/68/check-existence-attribute-object-python?show=72#a72">Answered: How to check existence of an attribute in an object in python?</a></li>
          <li><a class="rsswidget" href="https://www.codingeek.com/forum/69/change-extension-files-command-windows?show=71#a71">Answered: How to change extension of all files with one command in Windows?</a></li>
          <li><a class="rsswidget" href="https://www.codingeek.com/forum/67/python-ternary-conditional-operator-java?show=70#a70">Answered: Does Python have a ternary conditional operator like java?</a></li>
          <li><a class="rsswidget" href="https://www.codingeek.com/forum/65/increase-code-font-size-intellij-shorcut?show=66#a66">Answered: How to increase code font size in IntelliJ using a shorcut?</a></li>
          <li><a class="rsswidget" href="https://www.codingeek.com/forum/64/oracle-create-replace-view-equivalent-sql-server">What is the Oracle's CREATE OR REPLACE VIEW equivalent for SQL Server?</a></li>
          <li><a class="rsswidget" href="https://www.codingeek.com/forum/63/solve-create-view-statement-query-batch">How to solve 'CREATE VIEW' must be the first statement in a query batch.</a></li>
          <li><a class="rsswidget" href="https://www.codingeek.com/forum/62/prevent-auto-closing-console-execution-batch-file">How to prevent auto-closing of console at the end of execution of a batch file.</a></li>
         </ul>
        </aside>
        <aside id="tag_cloud-2" class="widget widget_tag_cloud">
         <h3 class="widget-title">Categories</h3>
         <div class="tagcloud">
          <a href="https://www.codingeek.com/category/dotnet/" class="tag-cloud-link tag-link-48 tag-link-position-1" style="font-size: 14.125pt;" aria-label=".NET (4 items)">.NET</a> 
          <a href="https://www.codingeek.com/category/algorithms/" class="tag-cloud-link tag-link-42 tag-link-position-2" style="font-size: 18.325pt;" aria-label="algorithms (14 items)">algorithms</a> 
          <a href="https://www.codingeek.com/category/angularjs/" class="tag-cloud-link tag-link-24 tag-link-position-3" style="font-size: 12.2pt;" aria-label="AngularJs (2 items)">AngularJs</a> 
          <a href="https://www.codingeek.com/category/tutorials/c-programming/" class="tag-cloud-link tag-link-153 tag-link-position-4" style="font-size: 22pt;" aria-label="c programming (39 items)">c programming</a> 
          <a href="https://www.codingeek.com/category/data-structure/" class="tag-cloud-link tag-link-94 tag-link-position-5" style="font-size: 20.5125pt;" aria-label="Data Structure (26 items)">Data Structure</a> 
          <a href="https://www.codingeek.com/category/how-to/" class="tag-cloud-link tag-link-29 tag-link-position-6" style="font-size: 16.75pt;" aria-label="How To (9 items)">How To</a> 
          <a href="https://www.codingeek.com/category/practice-examples/interview-programming-problems/" class="tag-cloud-link tag-link-144 tag-link-position-7" style="font-size: 12.2pt;" aria-label="Interview Questions (2 items)">Interview Questions</a> 
          <a href="https://www.codingeek.com/category/java/io/" class="tag-cloud-link tag-link-20 tag-link-position-8" style="font-size: 17.45pt;" aria-label="io (11 items)">io</a> 
          <a href="https://www.codingeek.com/category/java/" class="tag-cloud-link tag-link-9 tag-link-position-9" style="font-size: 19.725pt;" aria-label="Java (21 items)">Java</a> 
          <a href="https://www.codingeek.com/category/java/java8/" class="tag-cloud-link tag-link-174 tag-link-position-10" style="font-size: 10.625pt;" aria-label="java8 (1 item)">java8</a> 
          <a href="https://www.codingeek.com/category/tutorials/javascript/" class="tag-cloud-link tag-link-72 tag-link-position-11" style="font-size: 12.2pt;" aria-label="Javascript (2 items)">Javascript</a> 
          <a href="https://www.codingeek.com/category/news/" class="tag-cloud-link tag-link-32 tag-link-position-12" style="font-size: 15.4375pt;" aria-label="news (6 items)">news</a> 
          <a href="https://www.codingeek.com/category/tutorials/nodejs/" class="tag-cloud-link tag-link-64 tag-link-position-13" style="font-size: 10.625pt;" aria-label="NodeJS (1 item)">NodeJS</a> 
          <a href="https://www.codingeek.com/category/oops/" class="tag-cloud-link tag-link-4 tag-link-position-14" style="font-size: 13.25pt;" aria-label="OOPS (3 items)">OOPS</a> 
          <a href="https://www.codingeek.com/category/practice-examples/" class="tag-cloud-link tag-link-145 tag-link-position-15" style="font-size: 8pt;" aria-label="Practice (0 items)">Practice</a> 
          <a href="https://www.codingeek.com/category/puzzles/" class="tag-cloud-link tag-link-189 tag-link-position-16" style="font-size: 17.7125pt;" aria-label="Puzzles (12 items)">Puzzles</a> 
          <a href="https://www.codingeek.com/category/tutorials/python/" class="tag-cloud-link tag-link-84 tag-link-position-17" style="font-size: 14.825pt;" aria-label="Python (5 items)">Python</a> 
          <a href="https://www.codingeek.com/category/sql/" class="tag-cloud-link tag-link-185 tag-link-position-18" style="font-size: 16.3125pt;" aria-label="Sql (8 items)">Sql</a> 
          <a href="https://www.codingeek.com/category/java/strings/" class="tag-cloud-link tag-link-17 tag-link-position-19" style="font-size: 16.3125pt;" aria-label="Strings (8 items)">Strings</a> 
          <a href="https://www.codingeek.com/category/tutorials/" class="tag-cloud-link tag-link-8 tag-link-position-20" style="font-size: 8pt;" aria-label="tutorials (0 items)">tutorials</a> 
          <a href="https://www.codingeek.com/category/uncategorized/" class="tag-cloud-link tag-link-1 tag-link-position-21" style="font-size: 10.625pt;" aria-label="Uncategorized (1 item)">Uncategorized</a>
         </div>
        </aside>
        <aside id="text-10" class="widget widget_text">
         <h3 class="widget-title">Copying is a bad karma..</h3>
         <div class="textwidget">
          <a href="https://www.dmca.com/Protection/Status.aspx?ID=0f5432d7-ee45-486f-a683-51508559520e" title="DMCA.com Protection Status" class="dmca-badge"> <img src="https://images.dmca.com/Badges/dmca_protected_sml_120l.png?ID=0f5432d7-ee45-486f-a683-51508559520e" alt="DMCA.com Protection Status"></a>
         </div>
        </aside>
        <aside id="text-14" class="widget widget_text">
         <h3 class="widget-title">Partner website</h3>
         <div class="textwidget">
          <a href="http://www.lyricsys.com" target="_blank">LYRICSYS</a>
          <link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.0.3/cookieconsent.min.css"> 
          <script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.0.3/cookieconsent.min.js"></script> 
         </div>
        </aside>
        <aside id="categories-2" class="widget widget_categories">
         <h3 class="widget-title">Categories</h3>
         <ul>
          <li class="cat-item cat-item-48"><a href="https://www.codingeek.com/category/dotnet/">.NET</a> (4)</li>
          <li class="cat-item cat-item-42"><a href="https://www.codingeek.com/category/algorithms/">algorithms</a> (14)</li>
          <li class="cat-item cat-item-24"><a href="https://www.codingeek.com/category/angularjs/" title="Angular JS tutorials and coding practices">AngularJs</a> (2)</li>
          <li class="cat-item cat-item-94"><a href="https://www.codingeek.com/category/data-structure/" title="Find complete and best tutorials for data structures.">Data Structure</a> (26)</li>
          <li class="cat-item cat-item-29"><a href="https://www.codingeek.com/category/how-to/">How To</a> (9)</li>
          <li class="cat-item cat-item-9"><a href="https://www.codingeek.com/category/java/" title="Java coding tutorials with working examples and detailed explanations">Java</a> (39)
           <ul class="children">
            <li class="cat-item cat-item-20"><a href="https://www.codingeek.com/category/java/io/" title="input output tutorials in Java with detailed examples">io</a> (11)</li>
            <li class="cat-item cat-item-174"><a href="https://www.codingeek.com/category/java/java8/">java8</a> (1)</li>
            <li class="cat-item cat-item-17"><a href="https://www.codingeek.com/category/java/strings/" title="String tutorials in Java. Learn how to use String easily and effectively">Strings</a> (8)</li>
           </ul></li>
          <li class="cat-item cat-item-32"><a href="https://www.codingeek.com/category/news/">news</a> (6)</li>
          <li class="cat-item cat-item-4"><a href="https://www.codingeek.com/category/oops/" title="Learn Object oriented programming concepts in details">OOPS</a> (3)</li>
          <li class="cat-item cat-item-145"><a href="https://www.codingeek.com/category/practice-examples/" title="Practice problems from all the domains and languages.">Practice</a> (2)
           <ul class="children">
            <li class="cat-item cat-item-144"><a href="https://www.codingeek.com/category/practice-examples/interview-programming-problems/" title="Questions asked in interview in various companies">Interview Questions</a> (2)</li>
           </ul></li>
          <li class="cat-item cat-item-189"><a href="https://www.codingeek.com/category/puzzles/">Puzzles</a> (12)</li>
          <li class="cat-item cat-item-185"><a href="https://www.codingeek.com/category/sql/">Sql</a> (8)</li>
          <li class="cat-item cat-item-8"><a href="https://www.codingeek.com/category/tutorials/" title="Latest tutorials related java, oops, Web Technologies, J2ee, Hibernate, Struts, Springs etc">tutorials</a> (47)
           <ul class="children">
            <li class="cat-item cat-item-153"><a href="https://www.codingeek.com/category/tutorials/c-programming/">c programming</a> (39)</li>
            <li class="cat-item cat-item-72"><a href="https://www.codingeek.com/category/tutorials/javascript/">Javascript</a> (2)</li>
            <li class="cat-item cat-item-64"><a href="https://www.codingeek.com/category/tutorials/nodejs/">NodeJS</a> (1)</li>
            <li class="cat-item cat-item-84"><a href="https://www.codingeek.com/category/tutorials/python/">Python</a> (5)</li>
           </ul></li>
          <li class="cat-item cat-item-1"><a href="https://www.codingeek.com/category/uncategorized/">Uncategorized</a> (1)</li>
         </ul>
        </aside>
       </div>
      </div>
      <!--sidebars-->
     </aside> 
     <!-- End Sidebar -->
    </div>
    <!-- .content -->
   </div>
   <!-- #page -->
   <footer>
    <div class="carousel">
     <h3 class="frontTitle">
      <div class="latest">
       data-structure
      </div></h3>
     <div class="excerpt"> 
      <a href="https://www.codingeek.com/data-structure/complete-guide-open-addressing-classification-eliminate-collisions/" title="A Complete Guide to Open Addressing &amp; its Classification to eliminate Collisions" rel="nofollow" id="footer-thumbnail">
       <div>
        <div class="hover">
         <i class="point-icon icon-zoom-in"></i>
        </div> 
        <img width="140" height="130" src="https://www.codingeek.com/wp-content/uploads/2017/07/linear-and-quadratic-probing-140x130.png" class="attachment-carousel size-carousel wp-post-image" alt="Linear and quadratic probing approach" title="" srcset="https://www.codingeek.com/wp-content/uploads/2017/07/linear-and-quadratic-probing-140x130.png 140w, https://www.codingeek.com/wp-content/uploads/2017/07/linear-and-quadratic-probing-60x57.png 60w" sizes="(max-width: 140px) 100vw, 140px">
       </div><p class="footer-title"> <span class="featured-title">A Complete Guide to Open Addressing &amp; its Classification to eliminate Collisions</span></p> </a>
     </div>
     <!--.post excerpt-->
     <div class="excerpt"> 
      <a href="https://www.codingeek.com/data-structure/a-guide-to-separate-chaining-and-its-implementation-in-c/" title="A guide to “Separate Chaining” and its implementation in C" rel="nofollow" id="footer-thumbnail">
       <div>
        <div class="hover">
         <i class="point-icon icon-zoom-in"></i>
        </div> 
        <img width="140" height="130" src="https://www.codingeek.com/wp-content/uploads/2017/07/after-rehash-140x130.png" class="attachment-carousel size-carousel wp-post-image" alt="After insertion of more than 10 elements" title="" srcset="https://www.codingeek.com/wp-content/uploads/2017/07/after-rehash-140x130.png 140w, https://www.codingeek.com/wp-content/uploads/2017/07/after-rehash-60x57.png 60w" sizes="(max-width: 140px) 100vw, 140px">
       </div><p class="footer-title"> <span class="featured-title">A guide to “Separate Chaining” and its implementation in C</span></p> </a>
     </div>
     <!--.post excerpt-->
     <div class="excerpt"> 
      <a href="https://www.codingeek.com/data-structure/a-complete-guide-to-hashing-and-collision-resolution-strategy/" title="A complete guide to hashing and collision resolution strategy" rel="nofollow" id="footer-thumbnail">
       <div>
        <div class="hover">
         <i class="point-icon icon-zoom-in"></i>
        </div> 
        <img width="140" height="130" src="https://www.codingeek.com/wp-content/uploads/2017/07/NO-CollisionHash_table_4_1_0_0_0_0_0_LL.svg_-140x130.png" class="attachment-carousel size-carousel wp-post-image" alt="No collision" title="" srcset="https://www.codingeek.com/wp-content/uploads/2017/07/NO-CollisionHash_table_4_1_0_0_0_0_0_LL.svg_-140x130.png 140w, https://www.codingeek.com/wp-content/uploads/2017/07/NO-CollisionHash_table_4_1_0_0_0_0_0_LL.svg_-60x57.png 60w" sizes="(max-width: 140px) 100vw, 140px">
       </div><p class="footer-title"> <span class="featured-title">A complete guide to hashing and collision resolution strategy</span></p> </a>
     </div>
     <!--.post excerpt-->
     <div class="excerpt"> 
      <a href="https://www.codingeek.com/data-structure/dijkstras-algo-single-source-shortest-path-implementation-pseudocode-explanation/" title="Dijkstra’s Algo – single source shortest path Implementation, Pseudocode &amp; Explanation" rel="nofollow" id="footer-thumbnail">
       <div>
        <div class="hover">
         <i class="point-icon icon-zoom-in"></i>
        </div> 
        <img width="140" height="130" src="https://www.codingeek.com/wp-content/uploads/2017/07/linear-and-quadratic-probing-140x130.png" class="attachment-carousel size-carousel wp-post-image" alt="Linear and quadratic probing approach" title="" srcset="https://www.codingeek.com/wp-content/uploads/2017/07/linear-and-quadratic-probing-140x130.png 140w, https://www.codingeek.com/wp-content/uploads/2017/07/linear-and-quadratic-probing-60x57.png 60w" sizes="(max-width: 140px) 100vw, 140px">
       </div><p class="footer-title"> <span class="featured-title">Dijkstra’s Algo – single source shortest path Implementation, Pseudocode &amp; Explanation</span></p> </a>
     </div>
     <!--.post excerpt-->
     <div class="excerpt"> 
      <a href="https://www.codingeek.com/data-structure/avl-tree-introduction-to-rotations-and-its-implementation/" title="AVL Tree – Introduction to rotations and its implementation" rel="nofollow" id="footer-thumbnail">
       <div>
        <div class="hover">
         <i class="point-icon icon-zoom-in"></i>
        </div> 
        <img width="140" height="130" src="https://www.codingeek.com/wp-content/uploads/2017/04/RR-140x130.png" class="attachment-carousel size-carousel wp-post-image" alt="Right right rotation" title="" srcset="https://www.codingeek.com/wp-content/uploads/2017/04/RR-140x130.png 140w, https://www.codingeek.com/wp-content/uploads/2017/04/RR-60x57.png 60w" sizes="(max-width: 140px) 100vw, 140px">
       </div><p class="footer-title"> <span class="featured-title">AVL Tree – Introduction to rotations and its implementation</span></p> </a>
     </div>
     <!--.post excerpt-->
     <div class="excerpt"> 
      <a href="https://www.codingeek.com/data-structure/memory-efficient-doubly-linked-list-explanation-and-implementation/" title="Memory Efficient Doubly Linked List – Explanation and Implementation" rel="nofollow" id="footer-thumbnail">
       <div>
        <div class="hover">
         <i class="point-icon icon-zoom-in"></i>
        </div> 
        <img width="140" height="130" src="https://www.codingeek.com/wp-content/uploads/2017/03/XOR-doubly-ll-140x130.png" class="attachment-carousel size-carousel wp-post-image" alt="XOR linked list" title="" srcset="https://www.codingeek.com/wp-content/uploads/2017/03/XOR-doubly-ll-140x130.png 140w, https://www.codingeek.com/wp-content/uploads/2017/03/XOR-doubly-ll-60x57.png 60w" sizes="(max-width: 140px) 100vw, 140px">
       </div><p class="footer-title"> <span class="featured-title">Memory Efficient Doubly Linked List – Explanation and Implementation</span></p> </a>
     </div>
     <!--.post excerpt-->
    </div>
   </footer>
   <!--footer--> 
   <!--start copyrights-->
   <div class="copyrights">
    <div class="row" id="copyright-note">
     <div class="copyright-left-text">
      Copyright © 2017 
      <a href="https://www.codingeek.com" title="A programming Geeks Portal" rel="nofollow">CodinGeek</a>.
     </div>
     <div class="copyright-text"></div>
     <div class="footer-navigation">
      <ul class="menu">
       <li class="page_item page-item-1516"><a href="https://www.codingeek.com/newsletter/">Subscribe to our Newsletter !!</a></li>
      </ul>
     </div>
     <div class="top">
      <a href="#top" class="toplink"><i class="point-icon icon-up-dir"></i></a>
     </div>
    </div>
   </div> 
   <!--end copyrights--> 
   <script type="text/javascript" src="https://www.codingeek.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9b"></script> 
   <script type="text/javascript" src="https://www.codingeek.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0.9b"></script> 
   <script type="text/javascript" src="https://www.codingeek.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js?ver=3.0.9b"></script> 
   <script type="text/javascript">(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "https://www.codingeek.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "https://www.codingeek.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();</script> 
   <!--HITESH -Code for smooth scrolling for inlinks-->
  </div>
  <!-- main-container --> 
  <script type="text/javascript" defer src="https://www.codingeek.com/wp-content/cache/autoptimize/js/autoptimize_8ec8b6a6aeabbcdff89c1cda037b4e04.js"></script> 
  <!-- Dynamic page generated in 0.366 seconds. --> 
  <!-- Cached page generated by WP-Super-Cache on 2017-09-10 06:18:26 --> 
  <!-- Compression = gzip -->
 </body>
</html>