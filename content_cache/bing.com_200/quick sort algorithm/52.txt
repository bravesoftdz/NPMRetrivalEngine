<!doctype html>
<html lang="en">
 <head>
  <meta charset="utf-8">
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=900">
  <title>Combine Quick Sort Insertion Sort : Sort Search&nbsp;«&nbsp;Collections Data Structure&nbsp;«&nbsp;Java</title>
  <meta http-equiv="content-style-type" content="text/css">
  <meta name="author" content="" Demo Source and Support Ltd.'>
  <meta name="copyright" content="2015 Demo Source and Support Ltd.">
  <meta name="description" content="Combine Quick Sort Insertion Sort : Sort Search&nbsp;«&nbsp;Collections Data Structure&nbsp;«&nbsp;Java">
  <meta name="keywords" content="Combine Quick Sort Insertion Sort : Sort Search&nbsp;«&nbsp;Collections Data Structure&nbsp;«&nbsp;Java">
  <link rel="shortcut icon" href="http://www.java2s.com/style/favicon.ico">
  <link href="http://java2s.com/style/bootstrap.min.css" rel="stylesheet">
  <link href="http://java2s.com/style/longTutorial.css" rel="stylesheet">
  <script src="http://java2s.com/style/jquery-1.11.0.js"></script>
  <script src="http://java2s.com/style/bootstrap.min.js"></script>
  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!-- WARNING: Respond.js doesn't work if you view the page via file:-->
  <!--[if lt IE 9]><script src='https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js'></script><script src='https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js'></script><![endif]-->
  <script>$(document).ready(function() {$('[data-toggle=offcanvas]').click(function() {$('.row-offcanvas').toggleClass('active');});});</script> 
 </head>
 <body>
  <div class="container-fluid">
   <div class="row row-offcanvas row-offcanvas-left">
    <div class="col-sm-3 col-md-3 sidebar-offcanvas" id="sidebar" role="navigation">
     <ul style="word-wrap: break-word;" class="nav nav-sidebar">
      <li><a href="http://www.java2s.com">Home</a></li>
      <li><a href="/Code/Java/CatalogJava.htm">Java</a></li>
      <li><a href="/Code/Java/2D-Graphics-GUI/Catalog2D-Graphics-GUI.htm">2D Graphics GUI</a></li>
      <li><a href="/Code/Java/3D/Catalog3D.htm">3D</a></li>
      <li><a href="/Code/Java/Advanced-Graphics/CatalogAdvanced-Graphics.htm">Advanced Graphics</a></li>
      <li><a href="/Code/Java/Ant/CatalogAnt.htm">Ant</a></li>
      <li><a href="/Code/Java/Apache-Common/CatalogApache-Common.htm">Apache Common</a></li>
      <li><a href="/Code/Java/Chart/CatalogChart.htm">Chart</a></li>
      <li><a href="/Code/Java/Class/CatalogClass.htm">Class</a></li>
      <li class="active"><a href="">Collections Data Structure</a></li>
      <li><a href="/Code/Java/Data-Type/CatalogData-Type.htm">Data Type</a></li>
      <li><a href="/Code/Java/Database-SQL-JDBC/CatalogDatabase-SQL-JDBC.htm">Database SQL JDBC</a></li>
      <li><a href="/Code/Java/Design-Pattern/CatalogDesign-Pattern.htm">Design Pattern</a></li>
      <li><a href="/Code/Java/Development-Class/CatalogDevelopment-Class.htm">Development Class</a></li>
      <li><a href="/Code/Java/EJB3/CatalogEJB3.htm">EJB3</a></li>
      <li><a href="/Code/Java/Email/CatalogEmail.htm">Email</a></li>
      <li><a href="/Code/Java/Event/CatalogEvent.htm">Event</a></li>
      <li><a href="/Code/Java/File-Input-Output/CatalogFile-Input-Output.htm">File Input Output</a></li>
      <li><a href="/Code/Java/Game/CatalogGame.htm">Game</a></li>
      <li><a href="/Code/Java/Generics/CatalogGenerics.htm">Generics</a></li>
      <li><a href="/Code/Java/GWT/CatalogGWT.htm">GWT</a></li>
      <li><a href="/Code/Java/Hibernate/CatalogHibernate.htm">Hibernate</a></li>
      <li><a href="/Code/Java/I18N/CatalogI18N.htm">I18N</a></li>
      <li><a href="/Code/Java/J2EE/CatalogJ2EE.htm">J2EE</a></li>
      <li><a href="/Code/Java/J2ME/CatalogJ2ME.htm">J2ME</a></li>
      <li><a href="/Code/Java/JavaFX/CatalogJavaFX.htm">JavaFX</a></li>
      <li><a href="/Code/Java/JDK-6/CatalogJDK-6.htm">JDK 6</a></li>
      <li><a href="/Code/Java/JDK-7/CatalogJDK-7.htm">JDK 7</a></li>
      <li><a href="/Code/Java/JNDI-LDAP/CatalogJNDI-LDAP.htm">JNDI LDAP</a></li>
      <li><a href="/Code/Java/JPA/CatalogJPA.htm">JPA</a></li>
      <li><a href="/Code/Java/JSP/CatalogJSP.htm">JSP</a></li>
      <li><a href="/Code/Java/JSTL/CatalogJSTL.htm">JSTL</a></li>
      <li><a href="/Code/Java/Language-Basics/CatalogLanguage-Basics.htm">Language Basics</a></li>
      <li><a href="/Code/Java/Network-Protocol/CatalogNetwork-Protocol.htm">Network Protocol</a></li>
      <li><a href="/Code/Java/PDF-RTF/CatalogPDF-RTF.htm">PDF RTF</a></li>
      <li><a href="/Code/Java/Reflection/CatalogReflection.htm">Reflection</a></li>
      <li><a href="/Code/Java/Regular-Expressions/CatalogRegular-Expressions.htm">Regular Expressions</a></li>
      <li><a href="/Code/Java/Scripting/CatalogScripting.htm">Scripting</a></li>
      <li><a href="/Code/Java/Security/CatalogSecurity.htm">Security</a></li>
      <li><a href="/Code/Java/Servlets/CatalogServlets.htm">Servlets</a></li>
      <li><a href="/Code/Java/Spring/CatalogSpring.htm">Spring</a></li>
      <li><a href="/Code/Java/Swing-Components/CatalogSwing-Components.htm">Swing Components</a></li>
      <li><a href="/Code/Java/Swing-JFC/CatalogSwing-JFC.htm">Swing JFC</a></li>
      <li><a href="/Code/Java/SWT-JFace-Eclipse/CatalogSWT-JFace-Eclipse.htm">SWT JFace Eclipse</a></li>
      <li><a href="/Code/Java/Threads/CatalogThreads.htm">Threads</a></li>
      <li><a href="/Code/Java/Tiny-Application/CatalogTiny-Application.htm">Tiny Application</a></li>
      <li><a href="/Code/Java/Velocity/CatalogVelocity.htm">Velocity</a></li>
      <li><a href="/Code/Java/Web-Services-SOA/CatalogWeb-Services-SOA.htm">Web Services SOA</a></li>
      <li><a href="/Code/Java/XML/CatalogXML.htm">XML</a></li>
     </ul>
    </div>
    <div class="col-sm-9 col-md-9">
     <form class="form-inline pull-right" action="http://www.google.com/cse" id="cse-search-box">
      <fieldset>
       <label class="control-label"><input type="hidden" name="cx" value="partner-pub-1130008796007602:iri8be-v211"><input type="hidden" name="ie" value="ISO-8859-1"><input type="text" size="15" name="q"><input type="submit" name="sa" value="Search"></label>
      </fieldset>
     </form>
     <script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script>
     <h1>Combine Quick Sort Insertion Sort : Sort Search&nbsp;«&nbsp;Collections Data Structure&nbsp;«&nbsp;Java</h1>
     <script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=728;google_ad_height=90;google_ad_format="728x90_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="ffffff";google_color_link="003399";google_color_text="000000";google_color_url="75a3ed";
//--></script>
     <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
     <br>
     <br>
     <br>
     <br>
     <br>
     <ol class="breadcrumb">
      <li><a href="/Code/Java/CatalogJava.htm">Java</a></li>
      <li><a href="/Code/Java/Collections-Data-Structure/CatalogCollections-Data-Structure.htm">Collections Data Structure</a></li>
      <li><a href="/Code/Java/Collections-Data-Structure/Sort-Search.htm">Sort Search</a></li>
      <li></li>
     </ol>
     <p>Combine Quick Sort Insertion Sort</p>
     <img border="0" alt="Combine Quick Sort Insertion Sort" src="http://www.java2s.com/Code/JavaImages/CombineQuickSortInsertionSort.PNG">
     <pre>     
<font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>class</b></font> CombineQuickSortInsertionSort {
  <font color="#7f0055"><b>private</b></font> <font color="#7f0055"><b>long</b></font>[] data;

  <font color="#7f0055"><b>private</b></font> <font color="#7f0055"><b>int</b></font> len; 

  <font color="#7f0055"><b>public</b></font> CombineQuickSortInsertionSort(<font color="#7f0055"><b>int</b></font> max) {
    data = <font color="#7f0055"><b>new</b></font> <font color="#7f0055"><b>long</b></font>[max];
    len = 0;
  }

  <font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>void</b></font> insert(<font color="#7f0055"><b>long</b></font> value) {
    data[len] = value; 
    len++;
  }

  <font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>void</b></font> display() {
    System.out.print(<font color="#2a00ff">"Data:"</font>);
    <font color="#7f0055"><b>for</b></font> (<font color="#7f0055"><b>int</b></font> j = 0; j &lt; len; j++)
      System.out.print(data[j] + <font color="#2a00ff">" "</font>);
    System.out.println(<font color="#2a00ff">""</font>);
  }

  <font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>void</b></font> quickSort() {
    recQuickSort(0, len - 1);
  }

  <font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>void</b></font> recQuickSort(<font color="#7f0055"><b>int</b></font> left, <font color="#7f0055"><b>int</b></font> right) {
    <font color="#7f0055"><b>int</b></font> size = right - left + 1;
    <font color="#7f0055"><b>if</b></font> (size &lt; 10) <font color="#3f7f5f">// insertion sort if small
</font>      insertionSort(left, right);
    <font color="#7f0055"><b>else</b></font> <font color="#3f7f5f">// quicksort if large
</font>    {
      <font color="#7f0055"><b>long</b></font> median = medianOf3(left, right);
      <font color="#7f0055"><b>int</b></font> partition = partitionIt(left, right, median);
      recQuickSort(left, partition - 1);
      recQuickSort(partition + 1, right);
    }
  }

  <font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>long</b></font> medianOf3(<font color="#7f0055"><b>int</b></font> left, <font color="#7f0055"><b>int</b></font> right) {
    <font color="#7f0055"><b>int</b></font> center = (left + right) / 2;
    <font color="#3f7f5f">// order left &amp; center
</font>    <font color="#7f0055"><b>if</b></font> (data[left] &gt; data[center])
      swap(left, center);
    <font color="#3f7f5f">// order left &amp; right
</font>    <font color="#7f0055"><b>if</b></font> (data[left] &gt; data[right])
      swap(left, right);
    <font color="#3f7f5f">// order center &amp; right
</font>    <font color="#7f0055"><b>if</b></font> (data[center] &gt; data[right])
      swap(center, right);

    swap(center, right - 1); 
    <font color="#7f0055"><b>return</b></font> data[right - 1]; 
  }

  <font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>void</b></font> swap(<font color="#7f0055"><b>int</b></font> d1, <font color="#7f0055"><b>int</b></font> d2) {
    <font color="#7f0055"><b>long</b></font> temp = data[d1];
    data[d1] = data[d2];
    data[d2] = temp;
  }

  <font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>int</b></font> partitionIt(<font color="#7f0055"><b>int</b></font> left, <font color="#7f0055"><b>int</b></font> right, <font color="#7f0055"><b>long</b></font> pivot) {
    <font color="#7f0055"><b>int</b></font> leftPtr = left; <font color="#3f7f5f">// right of first elem
</font>    <font color="#7f0055"><b>int</b></font> rightPtr = right - 1; <font color="#3f7f5f">// left of pivot
</font>    <font color="#7f0055"><b>while</b></font> (true) {
      <font color="#3f7f5f">//find bigger
</font>      <font color="#7f0055"><b>while</b></font> (data[++leftPtr] &lt; pivot)
        ;
      <font color="#3f7f5f">//find smaller
</font>      <font color="#7f0055"><b>while</b></font> (data[--rightPtr] &gt; pivot)
        ;
      <font color="#7f0055"><b>if</b></font> (leftPtr &gt;= rightPtr) <font color="#3f7f5f">// if pointers cross, partition done
</font>        <font color="#7f0055"><b>break</b></font>;
      <font color="#7f0055"><b>else</b></font>
        swap(leftPtr, rightPtr);
    }
    swap(leftPtr, right - 1); <font color="#3f7f5f">// restore pivot
</font>    <font color="#7f0055"><b>return</b></font> leftPtr; <font color="#3f7f5f">// return pivot location
</font>  }

  <font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>void</b></font> insertionSort(<font color="#7f0055"><b>int</b></font> left, <font color="#7f0055"><b>int</b></font> right) {
    <font color="#7f0055"><b>int</b></font> in, out;
    <font color="#3f7f5f">//  sorted on left of out
</font>    <font color="#7f0055"><b>for</b></font> (out = left + 1; out &lt;= right; out++) {
      <font color="#7f0055"><b>long</b></font> temp = data[out]; <font color="#3f7f5f">// remove marked item
</font>      in = out; <font color="#3f7f5f">// start shifts at out
</font>      <font color="#3f7f5f">// until one is smaller,
</font>      <font color="#7f0055"><b>while</b></font> (in &gt; left &amp;&amp; data[in - 1] &gt;= temp) {
        data[in] = data[in - 1]; <font color="#3f7f5f">// shift item to right
</font>        --in; <font color="#3f7f5f">// go left one position
</font>      }
      data[in] = temp; <font color="#3f7f5f">// insert marked item
</font>    }
  }

  <font color="#7f0055"><b>public</b></font> <font color="#7f0055"><b>static</b></font> <font color="#7f0055"><b>void</b></font> main(String[] args) {
    <font color="#7f0055"><b>int</b></font> maxSize = 16; 
    CombineQuickSortInsertionSort arr = <font color="#7f0055"><b>new</b></font> CombineQuickSortInsertionSort(maxSize); 

    <font color="#7f0055"><b>for</b></font> (<font color="#7f0055"><b>int</b></font> j = 0; j &lt; maxSize; j++) 
    { 
      <font color="#7f0055"><b>long</b></font> n = (<font color="#7f0055"><b>int</b></font>) (java.lang.Math.random() * 99);
      arr.insert(n);
    }
    arr.display(); 
    arr.quickSort();
    arr.display(); 
  }
}

           
         
    
    
    
    
  
</pre>
     <table class="table"></table>
     <table>
      <tbody> 
       <tr>
        <td align="left"><br><br><br><br><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc";google_color_text="000000";
//--></script><script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script></td> 
       </tr>
       <tr>
        <td><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=300;google_ad_height=250;google_ad_format="300x250_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="FFFFFF";google_color_link="0077cc";google_color_url="0077cc";google_color_text="000000";
//--></script><script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script><br><br><br><br></td>
       </tr>
      </tbody>
     </table>
     <h3>Related examples in the same category</h3>
     <table class="table">
      <tbody>
       <tr class="even">
        <td>1.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Linearsearch.htm">Linear search</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>2.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Animationforquicksort.htm">Animation for quick sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>3.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/QuickSortImplementationwithmedianofthreepartitioningandcutoffforsmallarrays.htm">Quick Sort Implementation with median-of-three partitioning and cutoff for small arrays</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>4.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/SimpleSortDemo.htm">Simple Sort Demo</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/SimpleSortDemo.htm"><img border="0" alt="Simple Sort Demo" src="http://www.java2s.com/Code/JavaImages/SortDemo.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="even">
        <td>5.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Asimpleappletclasstodemonstrateasortalgorithm.htm">A simple applet class to demonstrate a sort algorithm</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>6.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/SortinganarrayofStrings.htm">Sorting an array of Strings</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/SortinganarrayofStrings.htm"><img border="0" alt="Sorting an array of Strings" src="http://www.java2s.com/Code/JavaImages/StringSorting.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="even">
        <td>7.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Simpleversionofquicksort.htm">Simple version of quick sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Simpleversionofquicksort.htm"><img border="0" alt="Simple version of quick sort" src="http://www.java2s.com/Code/JavaImages/QuickSortSimpleVersion.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="odd">
        <td>8.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Quicksortwithmedianofthreepartitioning.htm">Quick sort with median-of-three partitioning</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Quicksortwithmedianofthreepartitioning.htm"><img border="0" alt="Quick sort with median-of-three partitioning" src="http://www.java2s.com/Code/JavaImages/AnotherQuickSort.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="even">
        <td>9.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/FastQuickSort.htm">Fast Quick Sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>10.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Selectionsort.htm">Selection sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Selectionsort.htm"><img border="0" alt="Selection sort" src="http://www.java2s.com/Code/JavaImages/SelectionSort.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="even">
        <td>11.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/InsertSortforobjects.htm">Insert Sort for objects</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/InsertSortforobjects.htm"><img border="0" alt="Insert Sort for objects" src="http://www.java2s.com/Code/JavaImages/ObjectInsertSort.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="odd">
        <td>12.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Insertsort.htm">Insert sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Insertsort.htm"><img border="0" alt="Insert sort" src="http://www.java2s.com/Code/JavaImages/InsertSort.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="even">
        <td>13.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Bubblesort.htm">Bubble sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Bubblesort.htm"><img border="0" alt="Bubble sort" src="http://www.java2s.com/Code/JavaImages/BubbleSort.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="odd">
        <td>14.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Mergesort.htm">Merge sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Mergesort.htm"><img border="0" alt="Merge sort" src="http://www.java2s.com/Code/JavaImages/MergeSortArray.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="even">
        <td>15.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/FastMergeSort.htm">Fast Merge Sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>16.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/BinarySearch.htm">Binary Search</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/BinarySearch.htm"><img border="0" alt="Binary Search" src="http://www.java2s.com/Code/JavaImages/BinarySearchArray.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="even">
        <td>17.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Shellsort.htm">Shell sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Shellsort.htm"><img border="0" alt="Shell sort" src="http://www.java2s.com/Code/JavaImages/ShellSort.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="odd">
        <td>18.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/RecursiveBinarySearchImplementationinJava.htm">Recursive Binary Search Implementation in Java</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>19.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Topologicalsorting.htm">Topological sorting</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Topologicalsorting.htm"><img border="0" alt="Topological sorting" src="http://www.java2s.com/Code/JavaImages/GraphTS.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="odd">
        <td>20.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Heapsort.htm">Heap sort</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Heapsort.htm"><img border="0" alt="Heap sort" src="http://www.java2s.com/Code/JavaImages/Heap.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="even">
        <td>21.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/SortNumbers.htm">Sort Numbers</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/SortNumbers.htm"><img border="0" alt="Sort Numbers" src="http://www.java2s.com/Code/JavaImages/SortNumbers.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="odd">
        <td>22.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Aquicksortdemonstrationalgorithm.htm">A quick sort demonstration algorithm</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/Aquicksortdemonstrationalgorithm.htm"><img border="0" alt="A quick sort demonstration algorithm" src="http://www.java2s.com/Code/JavaImages/Sort.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="even">
        <td>23.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/PerformingBinarySearchonJavabyteArrayExample.htm">Performing Binary Search on Java byte Array Example</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>24.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/PerformingBinarySearchonJavacharArrayExample.htm">Performing Binary Search on Java char Array Example</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>25.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/PerformingBinarySearchonJavadoubleArrayExample.htm">Performing Binary Search on Java double Array Example</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>26.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/PerformingBinarySearchonJavafloatArrayExample.htm">Performing Binary Search on Java float Array Example</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>27.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/PerformingBinarySearchonJavaintArrayExample.htm">Performing Binary Search on Java int Array Example</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>28.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/PerformingBinarySearchonJavalongArrayExample.htm">Performing Binary Search on Java long Array Example</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>29.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/PerformingBinarySearchonJavashortArray.htm">Performing Binary Search on Java short Array</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>30.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Sortitemsofanarray.htm">Sort items of an array</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>31.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Sortanarrayofobjects.htm">Sort an array of objects</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>32.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/SortaStringarray.htm">Sort a String array</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>33.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/SortstringarraywithCollator.htm">Sort string array with Collator</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>34.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Binarysearchroutines.htm">Binary search routines</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>35.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/FastQSortsthelrpartitioninclusiveofthespecfiedarrayofRowsusingthecomparator.htm">FastQ Sorts the [l,r] partition (inclusive) of the specfied array of Rows, using the comparator.</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/FastQSortsthelrpartitioninclusiveofthespecfiedarrayofRowsusingthecomparator.htm"><img border="0" alt="FastQ Sorts the [l,r] partition (inclusive) of the specfied array of Rows, using the comparator." src="http://www.java2s.com/Code/JavaImages/Sort.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="odd">
        <td>36.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Abinarysearchimplementation.htm">A binary search implementation.</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>37.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/HandlesQuickSortandallofitsmethods.htm">Handles QuickSort and all of its methods.</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="odd">
        <td>38.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/ImplementsQuickSortthreedifferentways.htm">Implements QuickSort three different ways</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
       <tr class="even">
        <td>39.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/AquicksortalgorithmtosortVectorsorarraysProvidessortandbinarysearchcapabilities.htm">A quick sort algorithm to sort Vectors or arrays. Provides sort and binary search capabilities.</a></td>
        <td width="32"></td>
        <td width="200" align="right"><a href="/Code/Java/Collections-Data-Structure/AquicksortalgorithmtosortVectorsorarraysProvidessortandbinarysearchcapabilities.htm"><img border="0" alt="A quick sort algorithm to sort Vectors or arrays. Provides sort and binary search capabilities." src="http://www.java2s.com/Code/JavaImages/Sort.PNG" width="200" height="40"></a></td>
       </tr>
       <tr class="odd">
        <td>40.</td>
        <td align="left"><a href="/Code/Java/Collections-Data-Structure/Returnsanarrayofindicesindicatingtheorderthedatashouldbesortedin.htm">Returns an array of indices indicating the order the data should be sorted in.</a></td>
        <td width="32"></td>
        <td width="200" align="right"></td>
       </tr>
      </tbody>
     </table>
    </div>
   </div>
   <footer>
    <p class="pull-right"><a href="http://www.java2s.com/">java2s.com</a> &nbsp;|&nbsp;Email:info at java2s.com&nbsp;|&nbsp;© Demo Source and Support. All rights reserved.</p>
   </footer>
  </div>
 </body>
</html>