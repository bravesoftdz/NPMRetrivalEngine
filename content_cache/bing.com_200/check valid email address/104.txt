<html>
 <head> 
  <title>JavaScript - Valid email address</title> 
  <link REL="stylesheet" HREF="js.css"> 
  <script src="js.js"></script> 
  <script language="JavaScript" type="text/javascript">
<!--

function checkMail()
{
	var x = document.forms[0].email.value;
	var filter  = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
	if (filter.test(x)) alert('YES! Correct email address');
	else alert('NO! Incorrect email address');
}

// -->
</script> 
 </head> 
 <body bgcolor="#FFFFFF" onload="if (parent.erin) parent.erin('mailcheck')" onunload="if (parent.eruit) parent.eruit('mailcheck')"> 
  <p class="new">This page is no longer maintained. The script on it is incorrect and I know too little about regular expressions to maintain it.</p> 
  <h2>Valid email address</h2> 
  <script language="JavaScript" type="text/javascript">
<!--
if (self.lastMod) document.write(lastMod());
// -->
</script> 
  <div class="compat"> 
   <li>This is a <a href="browsers.html#ver4" onmouseover="parent.over('browsers')" onmouseout="parent.uit('browsers')">Version 4</a> script that also works in <b>WebTV</b>.</li> 
  </div> 
  <p>Many thanks to <a href="http://www.hortus-mechanicus.net/" class="external" title="To Joost's homepage" target="_blank">Joost Diepenmaat</a> for providing the regular expression and solving an iCab problem. Many thanks to <a href="http://yippie.nl.net/" class="external" title="To Arjan's rather basic homepage" target="_blank">Arjan van de Ven</a> for some technical advice on valid mail addresses.</p> 
  <p>A reader has translated this page into <a href="http://www.jsdir.com/tutorials/remail.asp" class="external" target="_blank">Italian</a>.</p> 
  <p class="hr">&nbsp;</p> 
  <p class="intro">This tiny script checks if a user has entered a valid mail address. Of course the script does not check if the address actually exists, it merely makes sure that the address has the correct syntax and <em>could</em> exist.</p> 
  <p>It uses Regular Expressions, which are not yet explained on my site. You won't learn using them by reading this page. If you don't understand them, just say "Yeah, right" and copy the script. It works.</p> 
  <p id="toc"></p> 
  <h3>Example</h3> 
  <p>Try it by filling in a mail address and hitting 'Check'.</p> 
  <form NAME="testform"> 
   <center> 
    <input NAME="email">
    <br> 
    <input TYPE="button" VALUE="Check" onClick="checkMail()"> 
   </center> 
  </form> 
  <h3>The script</h3> 
  <p>This script is executed when you press the button:</p> 
  <pre>
function checkMail()
{
	var x = document.forms[0].email.value;
	var filter  = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
	if (filter.test(x)) alert('YES! Correct email address');
	else alert('NO! Incorrect email address');
}
</pre> 
  <h3>Explanation</h3> 
  <p>First take the data</p> 
  <pre>
function checkMail()
{
	var x = document.forms[0].email.value;
</pre> 
  <h5>The regular expression</h5> 
  <p>Then define the regular expression we need.</p> 
  <pre>
	var filter  = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
</pre> 
  <p>The regular expression does the following: it wants to scan the entire value from the beginning of the line (<em>^</em>) to its end (<em>$</em>):</p> 
  <pre>
/^ [stuff] $/
</pre> 
  <p>The address should start with a bunch of alphanumerical (letters or numbers), underscores, dots or dashes. This is the user name.</p> 
  <pre>
([a-zA-Z0-9_\.\-])+
</pre> 
  <p>Then comes an <em>@</em>.</p> 
  <pre>
\@
</pre> 
  <p>After that comes the domain name, which may include several sub-domains (<em>mail.international.company.</em>). Therefore we now allow several series of alphanumerical characters and dashes, followed by a dot.</p> 
  <pre>
(([a-zA-Z0-9\-])+\.)+
</pre> 
  <p>Finally the top level domain, once again we check for alphanumerical characters, but now without the dash. Also, a top level domain name must be between 2 and 4 characters.</p> 
  <pre>
([a-zA-Z0-9]{2,4})+$/;
</pre> 
  <p class="smallink">(Why not simply check for three or four letters as the top level domain name? Because IP addresses are also valid domains, an address could be <em>me@187.223.45.119</em>).</p> 
  <h5>Using it</h5> 
  <p>Now we check if the value of the input field actually matches this regular expression. This is done by the <em>test()</em> method that is automatically available for each regular expression. If the test succeeds (if the address is formed according to the rules set out above), it returns <em>true</em>, else it returns <em>false</em>.</p> 
  <pre>
	filter.test(x)
</pre> 
  <p>I added an alert based on this return value.</p> 
  <pre>
	if (filter.test(x)) alert('YES! Correct email address');
	else alert('NO! Incorrect email address');
</pre> 
  <p>Of course you have to insert this script into your own form validator. But these are the basics.</p> 
  <h3>Strange mail addresses</h3> 
  <p>When I'd written this script I asked the advice of a friend who has administered mail servers. He let me know that the script as such is good enough, but that there are some rare cases that aren't adequately covered by it:</p> 
  <p>First of all, if the user name (left of the <em>@</em>) is between quotes <em>""</em>, a lot more is allowed. As far as I've understood this</p> 
  <pre>
"J. P. 's-Gravezande, a.k.a. The Hacker!"@server.com
</pre> 
  <p>is a valid email address, since all strange characters are between quotes. However, this syntax is rarely used. I didn't know it was allowed until my friend told me, and I guess most people don't know about it. </p>
  <p>Also, the strict syntax for addresses with IP numbers in them is</p> 
  <pre>
me@[187.223.45.119]
</pre> 
  <p>However, it seems that even some mail servers don't know about this syntax and don't correctly deliver mails sent to such addresses. It is rarely used.</p> 
  <p>Finally, historically a domain name may not begin with a number, but in practice this rule is disregarded. So my script (and mail servers) will accept</p> 
  <pre>
someone@123.com
</pre> 
  <p>as a valid mail address, even though strictly speaking it's not allowed.</p> 
  <p>My script doesn't take this unusual syntax into account. Therefore the conclusion must be that this script accurately checks about 99.5% of the email addresses, so it's not completely fail safe. It will serve for common situations, however, since about 99.9% of the users are unaware of these possibilities and have a normal address.</p> 
  <h4><a href="intro.html" onmouseover="parent.over('hoom')" onmouseout="parent.uit('hoom')">Home</a></h4>   
 </body>
</html>