<html>
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <title>Java Code Example android.speech.RecognizerIntent</title> 
  <link type="text/css" rel="stylesheet" media="screen" href="./includes/css/main.css"> 
  <link type="text/css" rel="stylesheet" media="screen" href="./includes/css/login.css"> 
  <script src="./includes/js/dist/libs/jquery.js"></script> 
  <script language="javaScript" src="./includes/js/jquery.highlight-3.js"></script> 
  <link type="text/css" rel="stylesheet" media="screen" href="./includes/js/google-code-prettify/prettify.css"> 
  <script language="javaScript" src="./includes/js/google-code-prettify/prettify.js"></script> 
  <meta name="description" content="This page provides Java code examples for android.speech.RecognizerIntent. 
		The examples are extracted from open source Java projects from GitHub. "> 
  <meta name="keywords" content="Java code examples, android.speech.RecognizerIntent"> 
 </head> 
 <body onload="prettyPrint()"> 
  <script>
			  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
			
			  ga('create', 'UA-7639629-4', 'auto');
			  ga('send', 'pageview');
			
	</script> 
  <div id="header"> 
   <div id="header-center"> 
    <span id="navigation"> 
     <!-- <img alt="Program Creek" src="./includes/images/pc-logo.png" width="80px" /> &nbsp;&nbsp; --> <a href="https://www.programcreek.com/java-api-examples/index.php">Search</a> &nbsp;&nbsp;&nbsp; <a href="https://www.programcreek.com/java-api-examples/index.php?action=index">Popular Classes</a> 
     <!-- &nbsp;&nbsp;
			<a href="http://www.programcreek.com/2015/12/top-10-java-utility-classes/">Top 16 Utility Classes</a>
			&nbsp; &nbsp; 
	     	<a href="http://www.programcreek.com/2015/12/top-10-api-related-questions-from-stack-overflow/">Top 10 API Questions</a>
 			
	     	&nbsp; &nbsp; 
	     	<a href="http://www.programcreek.com">Program Creek</a>
 		
 &nbsp; &nbsp; 
	     	<a href="http://www.programcreek.com/simple-java/">Simple Java</a>
 			--> </span> 
    <span id="login"> <a href="https://www.programcreek.com/java-api-examples/index.php?action=login">Log in</a> &nbsp; &nbsp; &nbsp; <a href="https://www.programcreek.com/java-api-examples/index.php?action=register">Sign up</a> <span style="font-size:12px; color:green; ">(Save the examples you like)</span> 
     <!-- 
			&nbsp; &nbsp;
			<span style="font-size:12px; color:grey; ">{11462 active users}</span>
			--> </span> 
    <!-- 
		<span style="float:right; margin-top: 4px;">
				<ins class="adsbygoogle"
				     style="display:inline-block;width:728px;height:15px"
				     data-ad-client="ca-pub-5732630628268628"
				     data-ad-slot="9596194014"></ins>
				<script>
				(adsbygoogle = window.adsbygoogle || []).push({});
				</script>
		
		</span>
		
		--> 
    <!-- 
		<div class="addthis_toolbox addthis_default_style" style="width:50%">
		<a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
		<a class="addthis_button_tweet"></a>
		<a class="addthis_counter addthis_pill_style"></a>
		</div>
		<script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=xa-4e1a385f21c923c3"></script>
	--> 
    <!--
	<span style="width:200px;float:left;">
	<table width="20%">
	<tr>
	<td width="50%"><div class="fb-like" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false"></div></td>
	<td width="20%"><div class="g-plusone" data-size="medium"></div></td>
	<td width="30%"><a href="https://twitter.com/share" class="twitter-share-button" data-via="ProgramCreek">Tweet</a>
	<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></td>
	</tr>
	</table>
	</span>
	--> 
   </div> 
  </div> 
  <div style="clear: both; width: 100%;"></div> 
  <link type="text/css" rel="stylesheet" media="screen" href="./includes/js/qtip/jquery.qtip.min.css"> 
  <script language="javaScript" src="./includes/js/qtip/jquery.qtip.min.js"></script> 
  <style>
.myCustomClass{
	border-color: #d8d8d8;
	background-color: #ffffff;
	font-size: 14px;
}
</style> 
  <div id="content"> 
   <style>
 .sidebarbox{
 	border: 1px solid #d8d8d8;
    border-radius: 3px;
     /*e0dcbf*/
 	padding: 0px;
    word-wrap: break-word;
    background-color: #ffffff;
 }
 
 .sidebarbox li{
 	 list-style-image: url('./includes//images/c2.png');

 }

 .sidebarboxheader{
 	font-size: 17px; 
 	padding: 5px 0 5px 10px; 
 	border-bottom: 1px solid #d8d8d8;
     background-color: #f7f7f7;
 }
 
 .sidebarboxbody{
 	margin: 2px 0px 0px 18px; 
 	padding: 5px;
 }

 #view_complete_list:hover{
     cursor:pointer;
     cursor:hand;
 }

</style> 
   <script language="javaScript">
    $(document).ready(function(){
        //$('#memo').focus();
        //click to delete
        $('#view_complete_list').click(function(){

            $(this).hide();
            //alert(item_id);
           $(".memberList").show();
        });

        $('#commentMethod').qtip({ // Grab some elements to apply the tooltip to
            content: {
                text: 'View examples for common methods or constants'
            },

            style: { classes: 'myCustomClass' },
            position: {

                at: 'bottom center', // at the bottom right of...

            }

        })

        $('#relatedClass').qtip({ // Grab some elements to apply the tooltip to
            content: {
                text: 'View examples for related classes'
            },

            style: { classes: 'myCustomClass' },

            position: {

                at: 'bottom center', // at the bottom right of...

            }
        })

    });
</script> 
   <div id="sidebar-example"> 
    <div style="height: 25px;clear:both;"></div> 
    <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-5732630628268628" data-ad-slot="1961849215"></ins> 
    <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
                </script> 
    <!-- Common Methods --> 
    <div style="height: 10px;clear:both;"></div> 
    <div class="sidebarbox"> 
     <div class="sidebarboxheader" id="commentMethod">
      <b>Popular Methods</b>
     </div> 
     <div class="sidebarboxbody"> 
      <ul> 
       <li class="memberList"> <a href="https://www.programcreek.com/java-api-examples/index.php?class=android.speech.RecognizerIntent&amp;method=LANGUAGE_MODEL_FREE_FORM"> LANGUAGE_MODEL_FREE_FORM </a> </li> 
       <li class="memberList"> <a href="https://www.programcreek.com/java-api-examples/index.php?class=android.speech.RecognizerIntent&amp;method=ACTION_RECOGNIZE_SPEECH"> ACTION_RECOGNIZE_SPEECH </a> </li> 
       <li class="memberList"> <a href="https://www.programcreek.com/java-api-examples/index.php?class=android.speech.RecognizerIntent&amp;method=ACTION_WEB_SEARCH"> ACTION_WEB_SEARCH </a> </li> 
      </ul> 
      <!--
                    <span style="font-size: 11px">
                            <a href="http://www.programcreek.com/java-api-examples/index.php?action=register">Sign up to view the complete list</a>
                    </span>
                    --> 
     </div> 
    </div> 
    <!-- 
             <div style="height: 10px;clear:both;"></div>
               
	         <ins class="adsbygoogle"
	                     style="display:inline-block;width:300px;height:250px"
	                     data-ad-client="ca-pub-5732630628268628"
	                     data-ad-slot="3672680817"></ins>
	         <script>
	                (adsbygoogle = window.adsbygoogle || []).push({});
	         </script>
			--> 
    <!-- Ad after Related Classes --> 
    <div style="height: 10px;clear:both;"></div> 
    <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-5732630628268628" data-ad-slot="1961849215"></ins> 
    <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
                </script> 
    <!-- END Ad after Related Classes --> 
    <div style="height: 10px;clear:both;"></div> 
    <!-- Related Classes --> 
    <div class="sidebarbox"> 
     <div class="sidebarboxheader" id="relatedClass">
      <b>Top Related Classes</b>
     </div> 
     <div class="sidebarboxbody"> 
      <ul> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.app.SearchableInfo">android.app.SearchableInfo</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.content.Context">android.content.Context</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.util.AttributeSet">android.util.AttributeSet</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.text.TextUtils">android.text.TextUtils</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.app.PendingIntent">android.app.PendingIntent</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.os.Bundle">android.os.Bundle</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.content.ComponentName">android.content.ComponentName</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.view.View">android.view.View</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.view.LayoutInflater">android.view.LayoutInflater</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.content.Intent">android.content.Intent</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.content.res.Resources">android.content.res.Resources</a> </li> 
       <li> <a href="https://www.programcreek.com/java-api-examples/index.php?api=android.os.Build">android.os.Build</a> </li> 
      </ul> 
     </div> 
    </div> 
    <!-- END Related Classes --> 
    <!-- 
         		<div style="height: 10px;clear:both;"></div>

                <ins class="adsbygoogle"
                     style="display:inline-block;width:300px;height:250px"
                     data-ad-client="ca-pub-5732630628268628"
                     data-ad-slot="3672680817"></ins>
                <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
                </script>
		
                <div style="height: 10px;clear:both;"></div>

                <ins class="adsbygoogle"
                     style="display:inline-block;width:300px;height:250px"
                     data-ad-client="ca-pub-5732630628268628"
                     data-ad-slot="5172936410"></ins>
                <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
                </script>
                
        
        		<div style="height: 10px;clear:both;"></div>



                <ins class="adsbygoogle"
                     style="display:inline-block;width:300px;height:250px"
                     data-ad-client="ca-pub-5732630628268628"
                     data-ad-slot="3672680817"></ins>
                <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
                </script>

                <div style="height: 10px;clear:both;"></div>

                <ins class="adsbygoogle"
                     style="display:inline-block;width:300px;height:250px"
                     data-ad-client="ca-pub-5732630628268628"
                     data-ad-slot="5172936410"></ins>
                <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
                </script>
       --> 
    <div style="height: 10px;clear:both;"></div> 
    <ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-5732630628268628" data-ad-slot="6392048811"></ins> 
    <script>
                (adsbygoogle = window.adsbygoogle || []).push({});
                </script> 
   </div> 
   <div id="main"> 
    <script language="javaScript">
$(document).ready(function(){
	//$('#memo').focus();
	//click to delete
	$('.vote_up').click(function(){
		var item_id = $(this).attr("id");
		//$(this).text("thanks");
		//$(this).prop("disabled",true);
		$(this).fadeOut();


		var realId = item_id.split("=")[0];
		//alert("good".concat(realId));
		var oldVotes = $('#'.concat(realId).concat("votes")).text();
		var newVotes = parseInt(oldVotes)+1;

		//alert(newVotes);
		$('#'.concat(realId).concat("votes")).text(newVotes);
		//alert(item_id);
		$.post('./back.php',
		{
			todo: "vote",
			method_id: item_id 
			
		},function(data){
			//$('#memo_list').text(data);
		});	
	});

	$('.vote_down').click(function(){
		var item_id = $(this).attr("id");
		//$(this).text("thanks");
		//$(this).prop("disabled",true);
		$(this).fadeOut();


		var realId = item_id.split("=")[0];
		//alert("good".concat(realId));
		var oldVotes = $('#'.concat(realId).concat("votes")).text();
		var newVotes = parseInt(oldVotes)-1;

		//alert(newVotes);
		$('#'.concat(realId).concat("votes")).text(newVotes);
		//alert(item_id);
		$.post('./back.php',
		{
			todo: "dislike",
			method_id: item_id 
			
		},function(data){
			//$('#memo_list').text(data);
		});	
	});
	
	$('#saveClass').click(function(){


		var className = $(this).attr("classname");
		var userId = $(this).attr("userid");

		if(!userId){
			alert("Sign up first to save API classes");
			exit();
		}



		//$(this).prop("disabled",true);
		$(this).fadeOut();


		//alert(item_id);
		$.post('./back.php',
				{
					todo: "saveClass",
					className: className,
					userId:userId

				},function(data){
					//$('#memo_list').text(data);
				});
	});



	$('.vote_up').qtip({ // Grab some elements to apply the tooltip to
		content: {
			text: 'This example is very useful.'
		},

		style: { classes: 'myCustomClass' }
	})

	
	$('.vote_down').qtip({ // Grab some elements to apply the tooltip to
		content: {
			text: 'This example is not useful.'
		},

		style: { classes: 'myCustomClass' }
	})
	
		$('#saveClass').qtip({ // Grab some elements to apply the tooltip to
		content: {
			text: 'Sign up first to save API classes'
		},

		style: { classes: 'myCustomClass' }
	})

	
});
</script> 
    <h1 style="font-weight:100;
	color:#333333;
	font-size: 24px;
    line-height: 34px;
	letter-spacing:0px;
	text-align:center;
	margin-bottom:10px;"> Java Code Examples for android.speech.RecognizerIntent</h1> 
    <div style="margin-top:10px;"> 
     <p> The following are top voted examples for showing how to use <span style="color:#3A5099;">android.speech.RecognizerIntent</span>. These examples are extracted from open source projects. You can vote up the examples you like and your votes will be used in our system to product more good examples. <br> </p> 
    </div> 
    <div style="margin: 20px 0; width;100%;"> 
     <div id="saveClass" class="click_button" classname="android.speech.RecognizerIntent" userid="" style="float:right;"> 
      <span style="font-weight: 900;">+</span>
      <a> Save this class to your library</a> 
     </div> 
    </div> 
    <div style=" height: 5px;"> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 1
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">trime</span>&nbsp;&nbsp; File: <span style="font-style:italic;">Speech.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=trime-master/src/com/osfans/trime/Speech.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="219363votes">8</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="219363==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="219363==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public Speech(Context context) {
  this.context = context;
  speech = SpeechRecognizer.createSpeechRecognizer(context);
  speech.setRecognitionListener(this);
  recognizerIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
  recognizerIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 1);
  //recognizerIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_PREFERENCE, "en");
  //recognizerIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, context.getPackageName());
  //recognizerIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
  //recognizerIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, "????");
}
 </pre> 
     </div> 
    </div> 
    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
    <!-- java api examples --> 
    <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-5732630628268628" data-ad-slot="8058070175"></ins> 
    <script>
				(adsbygoogle = window.adsbygoogle || []).push({});
				</script> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 2
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">SealBrowser</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SpeechRecognition.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=SealBrowser-master/chromium_webview-master/java/src/org/chromium/content/browser/SpeechRecognition.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="379041votes">7</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="379041==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="379041==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">private SpeechRecognition(final Context context, long nativeSpeechRecognizerImplAndroid) {
    mContext = context;
    mContinuous = false;
    mNativeSpeechRecognizerImplAndroid = nativeSpeechRecognizerImplAndroid;
    mListener = new Listener();
    mIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);

    if (sRecognitionProvider != null) {
        mRecognizer = SpeechRecognizer.createSpeechRecognizer(mContext, sRecognitionProvider);
    } else {
        // It is possible to force-enable the speech recognition web platform feature (using a
        // command-line flag) even if initialize() failed to find the PROVIDER_PACKAGE_NAME
        // provider, in which case the first available speech recognition provider is used.
        // Caveat: Continuous mode may not work as expected with a different provider.
        mRecognizer = SpeechRecognizer.createSpeechRecognizer(mContext);
    }

    mRecognizer.setRecognitionListener(mListener);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 3
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">K6nele</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SimpleDemo.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=K6nele-master/app/src/ee/ioc/phon/android/speak/demo/SimpleDemo.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="2759515votes">7</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="2759515==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="2759515==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * &lt;p&gt;Constructing a very simple ACTION_WEB_SEARCH intent.
 * The only required extra is EXTRA_LANGUAGE_MODEL.&lt;/p&gt;
 * 
 * @return ACTION_WEB_SEARCH-intent
 */
private static Intent createRecognizerIntent() {
	Intent intent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
	intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
	intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 3);
	return intent;
}
 </pre> 
     </div> 
    </div> 
    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
    <!-- java api examples --> 
    <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-5732630628268628" data-ad-slot="8058070175"></ins> 
    <script>
				(adsbygoogle = window.adsbygoogle || []).push({});
				</script> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 4
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">cordova-plugin-speech-recognizer</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SpeechRecognizer.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=cordova-plugin-speech-recognizer-master/src/android/SpeechRecognizer.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="63822votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="63822==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="63822==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException{		
	// Check action
	if( action.equals("recognize") ){
		// Get the reference to the callbacks and parameters
		this.speechRecognizerCallbackContext= callbackContext;
		if( args.length() &gt; 0 ){
			if( args.getInt(0) &gt;= 1 )
				maxResults= args.getInt(0);
			else{
				callbackContext.error("maxResults argument must to be equal or more than 1");
				return true;
			}
		}			
		if( args.length() &gt; 1 )
			promptMessage= args.getString(1);
		
		// Start the recognition process
		recognizerIntent= new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
		recognizerIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
		if( promptMessage != null )
			recognizerIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, promptMessage);
		cordova.startActivityForResult(this, recognizerIntent, REQUEST_CODE);
		
		return true;
	}
	
	return false;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 5
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">notes</span>&nbsp;&nbsp; File: <span style="font-style:italic;">NoteDetail.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=notes-master/app/src/main/java/com/odoo/addons/notes/NoteDetail.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="88351votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="88351==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="88351==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">private void requestSpeechToText() {
    PackageManager mPackageManager = this.getPackageManager();
    List&lt;ResolveInfo&gt; activities = mPackageManager.queryIntentActivities(
            new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH), 0);
    if (activities.size() == 0) {
        Toast.makeText(this, "No audio recorder present.",
                Toast.LENGTH_LONG).show();
    } else {
        Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
                RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
        intent.putExtra(RecognizerIntent.EXTRA_PROMPT, "speak now...");
        intent.putExtra("stage_id", mStageId);
        startActivityForResult(intent, REQUEST_SPEECH_TO_TEXT);
    }
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 6
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">DemoProject</span>&nbsp;&nbsp; File: <span style="font-style:italic;">VoiceRecognition.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=DemoProject-master/ApiDemos/src/main/java/com/example/android/apis/app/VoiceRecognition.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="187442votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="187442==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="187442==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Fire an intent to start the speech recognition activity.
 */
private void startVoiceRecognitionActivity() {
    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);

    // Specify the calling package to identify your application
    intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, getClass().getPackage().getName());

    // Display an hint to the user about what he should say.
    intent.putExtra(RecognizerIntent.EXTRA_PROMPT, "Speech recognition demo");

    // Given an hint to the recognizer about what the user is going to say
    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);

    // Specify how many results you want to receive. The results will be sorted
    // where the first result is the one with higher confidence.
    intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 5);

    // Specify the recognition language. This parameter has to be specified only if the
    // recognition has to be done in a specific language and not the default one (i.e., the
    // system locale). Most of the applications do not have to set this parameter.
    if (!mSupportedLanguageView.getSelectedItem().toString().equals("Default")) {
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE,
                mSupportedLanguageView.getSelectedItem().toString());
    }

    startActivityForResult(intent, VOICE_RECOGNITION_REQUEST_CODE);
}
 </pre> 
     </div> 
    </div> 
    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
    <!-- java api examples --> 
    <ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-5732630628268628" data-ad-slot="8058070175"></ins> 
    <script>
				(adsbygoogle = window.adsbygoogle || []).push({});
				</script> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 7
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">jdroid</span>&nbsp;&nbsp; File: <span style="font-style:italic;">VoiceRecognizerIntent.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=jdroid-master/jdroid-android/src/main/java/com/jdroid/android/voice/VoiceRecognizerIntent.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="212707votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="212707==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="212707==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public static void initiateRecord() {
	Activity activity = AbstractApplication.get().getCurrentActivity();
	
	Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
	intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);
	
	try {
		activity.startActivityForResult(intent, REQUEST_CODE);
	} catch (ActivityNotFoundException e) {
		GooglePlayUtils.showDownloadDialog(R.string.voiceSearch, PACKAGE);
	}
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 8
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">andevcon-2014-jl</span>&nbsp;&nbsp; File: <span style="font-style:italic;">VoiceRecognition.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=andevcon-2014-jl-master/ApiDemos/src/main/java/com/example/android/apis/app/VoiceRecognition.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="333636votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="333636==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="333636==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Fire an intent to start the speech recognition activity.
 */
private void startVoiceRecognitionActivity() {
    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);

    // Specify the calling package to identify your application
    intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, getClass().getPackage().getName());

    // Display an hint to the user about what he should say.
    intent.putExtra(RecognizerIntent.EXTRA_PROMPT, "Speech recognition demo");

    // Given an hint to the recognizer about what the user is going to say
    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);

    // Specify how many results you want to receive. The results will be sorted
    // where the first result is the one with higher confidence.
    intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 5);

    // Specify the recognition language. This parameter has to be specified only if the
    // recognition has to be done in a specific language and not the default one (i.e., the
    // system locale). Most of the applications do not have to set this parameter.
    if (!mSupportedLanguageView.getSelectedItem().toString().equals("Default")) {
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE,
                mSupportedLanguageView.getSelectedItem().toString());
    }

    startActivityForResult(intent, VOICE_RECOGNITION_REQUEST_CODE);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 9
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">Galaxy-Tab-Gingerbread-Stock-Keyboard</span>&nbsp;&nbsp; File: <span style="font-style:italic;">VoiceInput.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=Galaxy-Tab-Gingerbread-Stock-Keyboard-master/java/src/com/android/inputmethod/voice/VoiceInput.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="385085votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="385085==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="385085==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">private static Intent makeIntent() {
    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);

    // On Cupcake, use VoiceIMEHelper since VoiceSearch doesn't support.
    // On Donut, always use VoiceSearch, since VoiceIMEHelper and
    // VoiceSearch may conflict.
    if (Build.VERSION.RELEASE.equals("1.5")) {
        intent = intent.setClassName(
          "com.google.android.voiceservice",
          "com.google.android.voiceservice.IMERecognitionService");
    } else {
        intent = intent.setClassName(
          "com.google.android.voicesearch",
          "com.google.android.voicesearch.RecognitionService");
    }

    return intent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 10
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">YANA</span>&nbsp;&nbsp; File: <span style="font-style:italic;">Yana.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=YANA-master/src/fr/nover/yana/Yana.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="401218votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="401218==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="401218==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">void Initialisation(){ // Initialise le processus
      Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, "fr-FR");
	
try {
	startActivityForResult(intent, RESULT_SPEECH);} // Lance l'acquisition vocale
	
catch (ActivityNotFoundException a) {
	Toast t = Toast.makeText(getApplicationContext(),
			"Oh bah zut alors ! Ton Android n'a pas install? le STT ou ne le supporte pas. Regarde les options (langue et saisie).",
			Toast.LENGTH_SHORT);
	t.show();}
      }
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 11
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">apidemo</span>&nbsp;&nbsp; File: <span style="font-style:italic;">VoiceRecognition.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=apidemo-master/ApiDemos/src/com/example/android/apis/app/VoiceRecognition.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="457349votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="457349==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="457349==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Fire an intent to start the speech recognition activity.
 */
private void startVoiceRecognitionActivity() {
    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
    intent.putExtra(RecognizerIntent.EXTRA_PROMPT, "Speech recognition demo");
    startActivityForResult(intent, VOICE_RECOGNITION_REQUEST_CODE);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 12
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">api-ai-unity</span>&nbsp;&nbsp; File: <span style="font-style:italic;">RecognitionHelper.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=api-ai-unity-master/native/Android/UnityHelper/app/src/main/java/ai/api/unityhelper/RecognitionHelper.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="477133votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="477133==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="477133==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 *
 * @param lang recognition language
 */
private void startListening(final String lang) {
    if (!recognitionActive) {

        final Intent sttIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
        sttIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
                RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);

        final String language = lang.replace('-', '_');

        sttIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
        sttIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_PREFERENCE, language);

        // WORKAROUND for https://code.google.com/p/android/issues/detail?id=75347
        // TODO Must be removed after fix in Android
        sttIntent.putExtra("android.speech.extra.EXTRA_ADDITIONAL_LANGUAGES", new String[]{});

        runInUiThread(new Runnable() {
            @Override
            public void run() {
                initializeRecognizer();

                speechRecognizer.startListening(sttIntent);
                recognitionActive = true;
            }
        });

    } else {
        Log.w(TAG, "Trying to start recognition while another recognition active");
    }
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 13
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">appJavou</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchCardLiveo.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=appJavou-master/searchliveo/src/main/java/br/liveo/searchliveo/SearchCardLiveo.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="507149votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="507149==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="507149==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">private void startVoice(EditText editText) {
    ((InputMethodManager) mContext.getSystemService(Context.INPUT_METHOD_SERVICE)).
            hideSoftInputFromWindow(editText.getWindowToken(), 0);

    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault());
    intent.putExtra(RecognizerIntent.EXTRA_PROMPT, mContext.getString(R.string.searchview_voice));
    try {
        mContext.startActivityForResult(intent, REQUEST_CODE_SPEECH_INPUT);
    } catch (ActivityNotFoundException a) {
        Toast.makeText(mContext.getApplicationContext(), R.string.not_supported, Toast.LENGTH_SHORT).show();
    }
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 14
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">Loop</span>&nbsp;&nbsp; File: <span style="font-style:italic;">MaterialSearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=Loop-master/app/src/main/java/com/etiennelawlor/loop/ui/MaterialSearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="1012604votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="1012604==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="1012604==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">@OnClick(R.id.microphone_iv)
public void microphoneImageViewClicked() {
    if (isVoiceAvailable()) {
        hideSearchSuggestions();

        Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
        intent.putExtra(RecognizerIntent.EXTRA_PROMPT, "Speak now");
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);
        intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 1);

        ((Activity) ((ContextWrapper) mMicrophoneImageView.getContext()).getBaseContext()).startActivityForResult(intent, REQUEST_VOICE);
    }
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 15
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">HomeGenie-Android</span>&nbsp;&nbsp; File: <span style="font-style:italic;">VoiceControl.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=HomeGenie-Android-master/homegenie/src/main/java/com/glabs/homegenie/util/VoiceControl.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="1150879votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="1150879==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="1150879==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public void startListen() {
    _recognizer = getSpeechRecognizer();
    _recognizer.setRecognitionListener(this);
    //
    //speech recognition is supported - detect user button clicks
    //start the speech recognition intent passing required data
    Intent recognizerIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    //indicate package
    //recognizerIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, getClass().getPackage().getName());
    //message to display while listening
    recognizerIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, "Your wish is my command!");
    //set speech model
    recognizerIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
    //specify number of results to retrieve
    recognizerIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, 1);
    //start listening
    //startActivityForResult(listenIntent, VR_REQUEST);
    //startActivityForResult(recognizerIntent, VR_REQUEST);
    _recognizer.startListening(recognizerIntent);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 16
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">Basic</span>&nbsp;&nbsp; File: <span style="font-style:italic;">Run.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=Basic-master/src/com/rfo/basic/Run.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="1160957votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="1160957==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="1160957==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public static Intent buildVoiceRecognitionIntent() {
	if (sttPrompt == null) { sttPrompt = sttDefaultPrompt; }
	Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
	intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
			RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
	intent.putExtra(RecognizerIntent.EXTRA_PROMPT, sttPrompt);
	return intent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 17
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">mdapp</span>&nbsp;&nbsp; File: <span style="font-style:italic;">Icd10ChapterActivity.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=mdapp-master/mdapp/app/src/main/java/net/olejon/mdapp/Icd10ChapterActivity.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="1164987votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="1164987==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="1164987==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">@Override
public boolean onOptionsItemSelected(MenuItem item)
{
    switch(item.getItemId())
    {
        case android.R.id.home:
        {
            NavUtils.navigateUpFromSameTask(this);
            return true;
        }
        case R.id.icd10_chapter_menu_voice_search:
        {
            try
            {
                Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
                intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, "nb-NO");
                intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
                startActivityForResult(intent, VOICE_SEARCH_REQUEST_CODE);
            }
            catch(Exception e)
            {
                new MaterialDialog.Builder(mContext).title(getString(R.string.device_not_supported_dialog_title)).content(getString(R.string.device_not_supported_dialog_message)).positiveText(getString(R.string.device_not_supported_dialog_positive_button)).contentColorRes(R.color.black).positiveColorRes(R.color.dark_blue).show();
            }

            return true;
        }
        default:
        {
            return super.onOptionsItemSelected(item);
        }
    }
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 18
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">cnAndroidDocs</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchDialog.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=cnAndroidDocs-master/core/java/android/app/SearchDialog.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="1237388votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="1237388==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="1237388==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Constructor - fires it up and makes it look like the search UI.
 * 
 * @param context Application Context we can use for system acess
 */
public SearchDialog(Context context, SearchManager searchManager) {
    super(context, resolveDialogTheme(context));

    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 19
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">platform_packages_apps_Launcher2</span>&nbsp;&nbsp; File: <span style="font-style:italic;">Launcher.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=platform_packages_apps_Launcher2-master/src/com/android/launcher2/Launcher.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="1370916votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="1370916==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="1370916==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">private boolean updateVoiceSearchIcon(boolean searchVisible) {
    final View searchDivider = findViewById(R.id.search_divider);
    final View voiceButtonContainer = findViewById(R.id.voice_button_container);
    final View voiceButton = findViewById(R.id.voice_button);

    // We only show/update the voice search icon if the search icon is enabled as well
    Intent intent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    ComponentName activityName = intent.resolveActivity(getPackageManager());
    if (searchVisible &amp;&amp; activityName != null) {
        int coi = getCurrentOrientationIndexForGlobalIcons();
        sVoiceSearchIcon[coi] = updateButtonWithIconFromExternalActivity(
                R.id.voice_button, activityName, R.drawable.ic_home_voice_search_holo);
        if (searchDivider != null) searchDivider.setVisibility(View.VISIBLE);
        if (voiceButtonContainer != null) voiceButtonContainer.setVisibility(View.VISIBLE);
        voiceButton.setVisibility(View.VISIBLE);
        return true;
    } else {
        if (searchDivider != null) searchDivider.setVisibility(View.GONE);
        if (voiceButtonContainer != null) voiceButtonContainer.setVisibility(View.GONE);
        voiceButton.setVisibility(View.GONE);
        return false;
    }
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 20
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">folio100_frameworks_base</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchDialog.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=folio100_frameworks_base-master/core/java/android/app/SearchDialog.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="2485814votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="2485814==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="2485814==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Constructor - fires it up and makes it look like the search UI.
 * 
 * @param context Application Context we can use for system acess
 */
public SearchDialog(Context context, SearchManager searchManager) {
    super(context, com.android.internal.R.style.Theme_SearchBar);

    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mSearchManager = searchManager;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 21
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">android-15</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchDialog.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=android-15-master/android/app/SearchDialog.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="2988107votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="2988107==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="2988107==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Constructor - fires it up and makes it look like the search UI.
 * 
 * @param context Application Context we can use for system acess
 */
public SearchDialog(Context context, SearchManager searchManager) {
    super(context, resolveDialogTheme(context));

    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 22
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">android-imf-ext</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchDialog.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=android-imf-ext-master/android-ws/frameworks/base/core/java/android/app/SearchDialog.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="3346705votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="3346705==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="3346705==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Constructor - fires it up and makes it look like the search UI.
 * 
 * @param context Application Context we can use for system acess
 */
public SearchDialog(Context context) {
    super(context, com.android.internal.R.style.Theme_GlobalSearchBar);

    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 23
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">android-sdk-sources-for-api-level-23</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchDialog.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=android-sdk-sources-for-api-level-23-master/android/app/SearchDialog.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="3815805votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="3815805==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="3815805==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Constructor - fires it up and makes it look like the search UI.
 * 
 * @param context Application Context we can use for system acess
 */
public SearchDialog(Context context, SearchManager searchManager) {
    super(context, resolveDialogTheme(context));

    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 24
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">XBrowser</span>&nbsp;&nbsp; File: <span style="font-style:italic;">Controller.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=XBrowser-master/src/com/android/xbrowser/Controller.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="4245164votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="4245164==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="4245164==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public void startVoiceSearch() {
    Intent intent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);
    intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE,
            mActivity.getComponentName().flattenToString());
    intent.putExtra(SEND_APP_ID_EXTRA, false);
    intent.putExtra(RecognizerIntent.EXTRA_WEB_SEARCH_ONLY, true);
    mActivity.startActivity(intent);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 25
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">CompilingLauncher2</span>&nbsp;&nbsp; File: <span style="font-style:italic;">Launcher.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=CompilingLauncher2-master/src/com/appaholics/launcher/Launcher.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="4254352votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="4254352==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="4254352==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Event handler for the voice button
 *
 * @param v The view that was clicked.
 */
public void onClickVoiceButton(View v) {
    v.performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY);

    Intent intent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
    startActivity(intent);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 26
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">Android-Trebuchet-Launcher-Standalone</span>&nbsp;&nbsp; File: <span style="font-style:italic;">Launcher.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=Android-Trebuchet-Launcher-Standalone-master/src/com/cyanogenmod/trebuchet/Launcher.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="4560810votes">6</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="4560810==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="4560810==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Event handler for the voice button
 *
 * @param v The view that was clicked.
 */
public void onClickVoiceButton(View v) {
    v.performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY);

    Intent intent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS);
    startActivity(intent);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 27
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">ExcusePro</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=ExcusePro-master/libs/actionbarsherlock/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="29685votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="29685==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="29685==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 28
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">NcueWifiAuth_android</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=NcueWifiAuth_android-master/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="64845votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="64845==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="64845==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 29
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">TasksProject</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=TasksProject-master/ActionBarSherlock/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="88004votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="88004==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="88004==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 30
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">TwAndroid</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=TwAndroid-master/actionbarsherlock/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="100747votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="100747==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="100747==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 31
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">okjsp-android</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=okjsp-android-master/actionbarsherlock/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="187972votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="187972==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="187972==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 32
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">BeautifulWidgets_SkinMixer_Android</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=BeautifulWidgets_SkinMixer_Android-master/ExternalLibs/ActionBarSherlock/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="232721votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="232721==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="232721==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 33
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">quitesleep</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=quitesleep-master/com_actionbarsherlock/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="235845votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="235845==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="235845==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 34
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">learning_gradle_android</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=learning_gradle_android-master/04_proguard/ActionBarSherlock/library/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="309320votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="309320==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="309320==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 35
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">TextBack-android</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=TextBack-android-master/libs/actionbarsherlock/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="401499votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="401499==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="401499==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 36
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">ActionBarShareLock</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=ActionBarShareLock-master/actionbarsherlock/src/com/actionbarsherlock/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="437921votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="437921==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="437921==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * Create and return an Intent that can launch the voice search activity, perform a specific
 * voice transcription, and forward the results to the searchable activity.
 *
 * @param baseIntent The voice app search intent to start from
 * @return A completely-configured intent ready to send to the voice search activity
 */
private Intent createVoiceAppSearchIntent(Intent baseIntent, SearchableInfo searchable) {
    ComponentName searchActivity = searchable.getSearchActivity();

    // create the necessary intent to set up a search-and-forward operation
    // in the voice search system.   We have to keep the bundle separate,
    // because it becomes immutable once it enters the PendingIntent
    Intent queryIntent = new Intent(Intent.ACTION_SEARCH);
    queryIntent.setComponent(searchActivity);
    PendingIntent pending = PendingIntent.getActivity(getContext(), 0, queryIntent,
            PendingIntent.FLAG_ONE_SHOT);

    // Now set up the bundle that will be inserted into the pending intent
    // when it's time to do the search.  We always build it here (even if empty)
    // because the voice search activity will always need to insert "QUERY" into
    // it anyway.
    Bundle queryExtras = new Bundle();

    // Now build the intent to launch the voice search.  Add all necessary
    // extras to launch the voice recognizer, and then all the necessary extras
    // to forward the results to the searchable activity
    Intent voiceIntent = new Intent(baseIntent);

    // Add all of the configuration options supplied by the searchable's metadata
    String languageModel = RecognizerIntent.LANGUAGE_MODEL_FREE_FORM;
    String prompt = null;
    String language = null;
    int maxResults = 1;

    Resources resources = getResources();
    if (searchable.getVoiceLanguageModeId() != 0) {
        languageModel = resources.getString(searchable.getVoiceLanguageModeId());
    }
    if (searchable.getVoicePromptTextId() != 0) {
        prompt = resources.getString(searchable.getVoicePromptTextId());
    }
    if (searchable.getVoiceLanguageId() != 0) {
        language = resources.getString(searchable.getVoiceLanguageId());
    }
    if (searchable.getVoiceMaxResults() != 0) {
        maxResults = searchable.getVoiceMaxResults();
    }
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, searchActivity == null ? null
            : searchActivity.flattenToShortString());

    // Add the values that configure forwarding the results
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT, pending);
    voiceIntent.putExtra(RecognizerIntent.EXTRA_RESULTS_PENDINGINTENT_BUNDLE, queryExtras);

    return voiceIntent;
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 37
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">FileSpace-Android</span>&nbsp;&nbsp; File: <span style="font-style:italic;">HomeFragment.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=FileSpace-Android-master/filespace/src/main/java/mercandalli/com/filespace/ui/fragment/HomeFragment.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="1042275votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="1042275==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="1042275==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public void updateAdapter() {
    if (mRecyclerView != null &amp;&amp; mModelHomeList != null &amp;&amp; isAdded()) {
        circularProgressBar.setVisibility(View.GONE);

        mAdapter = new AdapterModelHome(mActivity, mModelHomeList);
        mRecyclerView.setAdapter(mAdapter);
        mRecyclerView.setItemAnimator(/*new SlideInFromLeftItemAnimator(mRecyclerView)*/new DefaultItemAnimator());

        if ((rootView.findViewById(R.id.circle)).getVisibility() == View.GONE) {
            (rootView.findViewById(R.id.circle)).setVisibility(View.VISIBLE);
            Animation animOpen = AnimationUtils.loadAnimation(mActivity, R.anim.circle_button_bottom_open);
            (rootView.findViewById(R.id.circle)).startAnimation(animOpen);
        }

        (rootView.findViewById(R.id.circle)).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try {
                    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
                    // Specify the calling package to identify your application
                    intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, this.getClass()
                            .getPackage().getName());

                    // Display an hint to the user about what he should say.
                    intent.putExtra(RecognizerIntent.EXTRA_PROMPT, "FileSpace");

                    // Given an hint to the recognizer about what the user is going to say
                    intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

                    int noOfMatches = 1;
                    // Specify how many results you want to receive. The results will be
                    // sorted where the first result is the one with higher confidence.

                    intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, noOfMatches);

                    HomeFragment.this.startActivityForResult(intent, 1001);
                } catch (ActivityNotFoundException e) {
                    Toast.makeText(getActivity(), "Google voice recognition not found.", Toast.LENGTH_LONG).show();
                }
                if (myTTS == null)
                    myTTS = new TextToSpeech(HomeFragment.this.getActivity(), HomeFragment.this);
            }

        });

        this.mAdapter.setOnItemClickListener(new AdapterModelHome.OnItemClickListener() {
            @Override
            public void onItemClick(View view, int position) {

            }
        });

        this.swipeRefreshLayout.setRefreshing(false);
    }
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 38
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">WS171-frameworks-base</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchDialog.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=WS171-frameworks-base-master/core/java/android/app/SearchDialog.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="1362480votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="1362480==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="1362480==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">/**
 * We create the search dialog just once, and it stays around (hidden)
 * until activated by the user.
 */
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    Window theWindow = getWindow();
    theWindow.setGravity(Gravity.TOP|Gravity.FILL_HORIZONTAL);

    setContentView(com.android.internal.R.layout.search_bar);

    theWindow.setLayout(ViewGroup.LayoutParams.FILL_PARENT,
            ViewGroup.LayoutParams.WRAP_CONTENT);
    WindowManager.LayoutParams lp = theWindow.getAttributes();
    lp.setTitle("Search Dialog");
    lp.softInputMode = WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE;
    theWindow.setAttributes(lp);

    // get the view elements for local access
    mBadgeLabel = (TextView) findViewById(com.android.internal.R.id.search_badge);
    mSearchTextField = (AutoCompleteTextView) 
            findViewById(com.android.internal.R.id.search_src_text);
    mGoButton = (Button) findViewById(com.android.internal.R.id.search_go_btn);
    mVoiceButton = (ImageButton) findViewById(com.android.internal.R.id.search_voice_btn);
    
    // attach listeners
    mSearchTextField.addTextChangedListener(mTextWatcher);
    mSearchTextField.setOnKeyListener(mTextKeyListener);
    mGoButton.setOnClickListener(mGoButtonClickListener);
    mGoButton.setOnKeyListener(mButtonsKeyListener);
    mVoiceButton.setOnClickListener(mVoiceButtonClickListener);
    mVoiceButton.setOnKeyListener(mButtonsKeyListener);

    // pre-hide all the extraneous elements
    mBadgeLabel.setVisibility(View.GONE);

    // Additional adjustments to make Dialog work for Search

    // Touching outside of the search dialog will dismiss it 
    setCanceledOnTouchOutside(true);
    
    // Set up broadcast filters
    mCloseDialogsFilter = new IntentFilter(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);
    mPackageFilter = new IntentFilter();
    mPackageFilter.addAction(Intent.ACTION_PACKAGE_ADDED);
    mPackageFilter.addAction(Intent.ACTION_PACKAGE_REMOVED);
    mPackageFilter.addAction(Intent.ACTION_PACKAGE_CHANGED);
    mPackageFilter.addDataScheme("package");
    
    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);
    
    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 39
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">Android_Example_Projects</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=Android_Example_Projects-master/HoloEverywhere/src/android/support/v7/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="2362142votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="2362142==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="2362142==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public SearchView(Context context, AttributeSet attrs) {
    super(context, attrs);

    LayoutInflater inflater = (LayoutInflater) context
            .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    inflater.inflate(R.layout.abc_search_view, this, true);

    mSearchButton = findViewById(R.id.search_button);
    mQueryTextView = (SearchAutoComplete) findViewById(R.id.search_src_text);
    mQueryTextView.setSearchView(this);

    mSearchEditFrame = findViewById(R.id.search_edit_frame);
    mSearchPlate = findViewById(R.id.search_plate);
    mSubmitArea = findViewById(R.id.submit_area);
    mSubmitButton = findViewById(R.id.search_go_btn);
    mCloseButton = (ImageView) findViewById(R.id.search_close_btn);
    mVoiceButton = findViewById(R.id.search_voice_btn);
    mSearchHintIcon = (ImageView) findViewById(R.id.search_mag_icon);

    mSearchButton.setOnClickListener(mOnClickListener);
    mCloseButton.setOnClickListener(mOnClickListener);
    mSubmitButton.setOnClickListener(mOnClickListener);
    mVoiceButton.setOnClickListener(mOnClickListener);
    mQueryTextView.setOnClickListener(mOnClickListener);

    mQueryTextView.addTextChangedListener(mTextWatcher);
    mQueryTextView.setOnEditorActionListener(mOnEditorActionListener);
    mQueryTextView.setOnItemClickListener(mOnItemClickListener);
    mQueryTextView.setOnItemSelectedListener(mOnItemSelectedListener);
    mQueryTextView.setOnKeyListener(mTextKeyListener);
    // Inform any listener of focus changes
    mQueryTextView.setOnFocusChangeListener(new OnFocusChangeListener() {

        public void onFocusChange(View v, boolean hasFocus) {
            if (mOnQueryTextFocusChangeListener != null) {
                mOnQueryTextFocusChangeListener.onFocusChange(SearchView.this, hasFocus);
            }
        }
    });

    TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.SearchView, 0, 0);
    setIconifiedByDefault(a.getBoolean(R.styleable.SearchView_iconifiedByDefault, true));
    int maxWidth = a.getDimensionPixelSize(R.styleable.SearchView_android_maxWidth, -1);
    if (maxWidth != -1) {
        setMaxWidth(maxWidth);
    }
    CharSequence queryHint = a.getText(R.styleable.SearchView_queryHint);
    if (!TextUtils.isEmpty(queryHint)) {
        setQueryHint(queryHint);
    }
    int imeOptions = a.getInt(R.styleable.SearchView_android_imeOptions, -1);
    if (imeOptions != -1) {
        setImeOptions(imeOptions);
    }
    int inputType = a.getInt(R.styleable.SearchView_android_inputType, -1);
    if (inputType != -1) {
        setInputType(inputType);
    }

    a.recycle();

    boolean focusable = true;

    a = context.obtainStyledAttributes(attrs, R.styleable.View, 0, 0);
    focusable = a.getBoolean(R.styleable.View_android_focusable, focusable);
    a.recycle();
    setFocusable(focusable);

    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

    mDropDownAnchor = findViewById(mQueryTextView.getDropDownAnchor());
    if (mDropDownAnchor != null) {
        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
            addOnLayoutChangeListenerToDropDownAnchorSDK11();
        } else {
            addOnLayoutChangeListenerToDropDownAnchorBase();
        }
    }

    updateViewsVisibility(mIconifiedByDefault);
    updateQueryHint();
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 40
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">android-arrow-drawable-sample</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=android-arrow-drawable-sample-master/appcompat/src/android/support/v7/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="3305637votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="3305637==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="3305637==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public SearchView(Context context, AttributeSet attrs, int defStyleAttr) {
    super(context, attrs, defStyleAttr);

    final TintTypedArray a = TintTypedArray.obtainStyledAttributes(context,
            attrs, R.styleable.SearchView, defStyleAttr, 0);
    // Keep the TintManager in case we need it later
    mTintManager = a.getTintManager();

    final LayoutInflater inflater = (LayoutInflater) context.getSystemService(
            Context.LAYOUT_INFLATER_SERVICE);
    final int layoutResId = a.getResourceId(R.styleable.SearchView_layout, 0);
    inflater.inflate(layoutResId, this, true);
    mQueryTextView = (SearchAutoComplete) findViewById(R.id.search_src_text);
    mQueryTextView.setSearchView(this);

    mSearchEditFrame = findViewById(R.id.search_edit_frame);
    mSearchPlate = findViewById(R.id.search_plate);
    mSubmitArea = findViewById(R.id.submit_area);
    mSearchButton = (ImageView) findViewById(R.id.search_button);
    mSubmitButton = (ImageView) findViewById(R.id.search_go_btn);
    mCloseButton = (ImageView) findViewById(R.id.search_close_btn);
    mVoiceButton = (ImageView) findViewById(R.id.search_voice_btn);
    mSearchHintIcon = (ImageView) findViewById(R.id.search_mag_icon);
    // Set up icons and backgrounds.
    mSearchPlate.setBackgroundDrawable(a.getDrawable(R.styleable.SearchView_queryBackground));
    mSubmitArea.setBackgroundDrawable(a.getDrawable(R.styleable.SearchView_submitBackground));
    mSearchIconResId = a.getResourceId(R.styleable.SearchView_searchIcon, 0);
    mSearchButton.setImageResource(mSearchIconResId);
    mSubmitButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_goIcon));
    mCloseButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_closeIcon));
    mVoiceButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_voiceIcon));
    mSearchHintIcon.setImageDrawable(a.getDrawable(R.styleable.SearchView_searchIcon));

    // Extract dropdown layout resource IDs for later use.
    mSuggestionRowLayout = a.getResourceId(R.styleable.SearchView_suggestionRowLayout, 0);
    mSuggestionCommitIconResId = a.getResourceId(R.styleable.SearchView_commitIcon, 0);

    mSearchButton.setOnClickListener(mOnClickListener);
    mCloseButton.setOnClickListener(mOnClickListener);
    mSubmitButton.setOnClickListener(mOnClickListener);
    mVoiceButton.setOnClickListener(mOnClickListener);
    mQueryTextView.setOnClickListener(mOnClickListener);

    mQueryTextView.addTextChangedListener(mTextWatcher);
    mQueryTextView.setOnEditorActionListener(mOnEditorActionListener);
    mQueryTextView.setOnItemClickListener(mOnItemClickListener);
    mQueryTextView.setOnItemSelectedListener(mOnItemSelectedListener);
    mQueryTextView.setOnKeyListener(mTextKeyListener);
    // Inform any listener of focus changes
    mQueryTextView.setOnFocusChangeListener(new OnFocusChangeListener() {

        public void onFocusChange(View v, boolean hasFocus) {
            if (mOnQueryTextFocusChangeListener != null) {
                mOnQueryTextFocusChangeListener.onFocusChange(SearchView.this, hasFocus);
            }
        }
    });
    setIconifiedByDefault(a.getBoolean(R.styleable.SearchView_iconifiedByDefault, true));

    final int maxWidth = a.getDimensionPixelSize(R.styleable.SearchView_android_maxWidth, -1);
    if (maxWidth != -1) {
        setMaxWidth(maxWidth);
    }
    final CharSequence queryHint = a.getText(R.styleable.SearchView_queryHint);
    if (!TextUtils.isEmpty(queryHint)) {
        setQueryHint(queryHint);
    }
    final int imeOptions = a.getInt(R.styleable.SearchView_android_imeOptions, -1);
    if (imeOptions != -1) {
        setImeOptions(imeOptions);
    }
    final int inputType = a.getInt(R.styleable.SearchView_android_inputType, -1);
    if (inputType != -1) {
        setInputType(inputType);
    }

    boolean focusable = true;
    focusable = a.getBoolean(R.styleable.SearchView_android_focusable, focusable);
    setFocusable(focusable);

    a.recycle();

    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

    mDropDownAnchor = findViewById(mQueryTextView.getDropDownAnchor());
    if (mDropDownAnchor != null) {
        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
            addOnLayoutChangeListenerToDropDownAnchorSDK11();
        } else {
            addOnLayoutChangeListenerToDropDownAnchorBase();
        }
    }

    updateViewsVisibility(mIconifiedByDefault);
    updateQueryHint();
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 41
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">platform_frameworks_support</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=platform_frameworks_support-master/v7/appcompat/src/android/support/v7/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="4405682votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="4405682==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="4405682==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public SearchView(Context context, AttributeSet attrs, int defStyleAttr) {
    super(context, attrs, defStyleAttr);

    final TintTypedArray a = TintTypedArray.obtainStyledAttributes(context,
            attrs, R.styleable.SearchView, defStyleAttr, 0);
    // Keep the TintManager in case we need it later
    mTintManager = a.getTintManager();

    final LayoutInflater inflater = LayoutInflater.from(context);
    final int layoutResId = a.getResourceId(
            R.styleable.SearchView_layout, R.layout.abc_search_view);
    inflater.inflate(layoutResId, this, true);

    mSearchSrcTextView = (SearchAutoComplete) findViewById(R.id.search_src_text);
    mSearchSrcTextView.setSearchView(this);

    mSearchEditFrame = findViewById(R.id.search_edit_frame);
    mSearchPlate = findViewById(R.id.search_plate);
    mSubmitArea = findViewById(R.id.submit_area);
    mSearchButton = (ImageView) findViewById(R.id.search_button);
    mGoButton = (ImageView) findViewById(R.id.search_go_btn);
    mCloseButton = (ImageView) findViewById(R.id.search_close_btn);
    mVoiceButton = (ImageView) findViewById(R.id.search_voice_btn);
    mCollapsedIcon = (ImageView) findViewById(R.id.search_mag_icon);

    // Set up icons and backgrounds.
    mSearchPlate.setBackgroundDrawable(a.getDrawable(R.styleable.SearchView_queryBackground));
    mSubmitArea.setBackgroundDrawable(a.getDrawable(R.styleable.SearchView_submitBackground));
    mSearchButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_searchIcon));
    mGoButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_goIcon));
    mCloseButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_closeIcon));
    mVoiceButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_voiceIcon));
    mCollapsedIcon.setImageDrawable(a.getDrawable(R.styleable.SearchView_searchIcon));

    mSearchHintIcon = a.getDrawable(R.styleable.SearchView_searchHintIcon);

    // Extract dropdown layout resource IDs for later use.
    mSuggestionRowLayout = a.getResourceId(R.styleable.SearchView_suggestionRowLayout,
            R.layout.abc_search_dropdown_item_icons_2line);
    mSuggestionCommitIconResId = a.getResourceId(R.styleable.SearchView_commitIcon, 0);

    mSearchButton.setOnClickListener(mOnClickListener);
    mCloseButton.setOnClickListener(mOnClickListener);
    mGoButton.setOnClickListener(mOnClickListener);
    mVoiceButton.setOnClickListener(mOnClickListener);
    mSearchSrcTextView.setOnClickListener(mOnClickListener);

    mSearchSrcTextView.addTextChangedListener(mTextWatcher);
    mSearchSrcTextView.setOnEditorActionListener(mOnEditorActionListener);
    mSearchSrcTextView.setOnItemClickListener(mOnItemClickListener);
    mSearchSrcTextView.setOnItemSelectedListener(mOnItemSelectedListener);
    mSearchSrcTextView.setOnKeyListener(mTextKeyListener);

    // Inform any listener of focus changes
    mSearchSrcTextView.setOnFocusChangeListener(new OnFocusChangeListener() {

        public void onFocusChange(View v, boolean hasFocus) {
            if (mOnQueryTextFocusChangeListener != null) {
                mOnQueryTextFocusChangeListener.onFocusChange(SearchView.this, hasFocus);
            }
        }
    });
    setIconifiedByDefault(a.getBoolean(R.styleable.SearchView_iconifiedByDefault, true));

    final int maxWidth = a.getDimensionPixelSize(R.styleable.SearchView_android_maxWidth, -1);
    if (maxWidth != -1) {
        setMaxWidth(maxWidth);
    }

    mDefaultQueryHint = a.getText(R.styleable.SearchView_defaultQueryHint);
    mQueryHint = a.getText(R.styleable.SearchView_queryHint);

    final int imeOptions = a.getInt(R.styleable.SearchView_android_imeOptions, -1);
    if (imeOptions != -1) {
        setImeOptions(imeOptions);
    }

    final int inputType = a.getInt(R.styleable.SearchView_android_inputType, -1);
    if (inputType != -1) {
        setInputType(inputType);
    }

    boolean focusable = true;
    focusable = a.getBoolean(R.styleable.SearchView_android_focusable, focusable);
    setFocusable(focusable);

    a.recycle();

    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

    mDropDownAnchor = findViewById(mSearchSrcTextView.getDropDownAnchor());
    if (mDropDownAnchor != null) {
        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
            addOnLayoutChangeListenerToDropDownAnchorSDK11();
        } else {
            addOnLayoutChangeListenerToDropDownAnchorBase();
        }
    }

    updateViewsVisibility(mIconifiedByDefault);
    updateQueryHint();
}
 </pre> 
     </div> 
    </div> 
    <!-- 1. example number --> 
    <div style="margin:20px 2px; color:#424345; font-weight:bold;">
     Example 42
    </div> 
    <div class="examplebox"> 
     <!-- 2. description --> 
     <div class="exampleboxheader"> 
      <table width="100%"> 
       <tbody>
        <tr> 
         <td width="80%" style="padding: 2px; font-size:14px;line-height: 25px;"> Project: <span style="font-style:italic;">RTL-Toolbar-Android-AppCompat</span>&nbsp;&nbsp; File: <span style="font-style:italic;">SearchView.java</span> <a href="https://www.programcreek.com/java-api-examples/index.php?source_dir=RTL-Toolbar-Android-AppCompat-master/appcompat/src/android/support/v7/widget/SearchView.java"> <span style="font-style:italic; margin-left:10px;">View source code</span> </a> </td> 
         <td width="10%" align="right" style="padding-right:5px; font-size:14px; color:#0088cc;"> <span style="color:#0088cc;" id="4746293votes">5</span> votes </td> 
         <td width="12%" align="right" style="padding-right:5px; font-size:14px;"> <span class="vote vote_down click_button" style="float:right; padding-bottom:-2px;border-radius: 2px; border:1px solid #d8d8d8;" id="4746293==android.speech.RecognizerIntent"> <img alt="vote down" src="./includes/images/dislike.png" width="26"> </span> <span class="vote vote_up click_button" style="float:left;padding-top:-2px;border-radius: 2px;	border:1px solid #d8d8d8;" id="4746293==android.speech.RecognizerIntent"> 
           <!-- Vote up --> <img alt="vote up" src="./includes/images/like.png" width="26"> </span> </td> 
        </tr> 
       </tbody>
      </table> 
     </div> 
     <!-- 3. code --> 
     <div class="exampleboxbody"> 
      <pre class="prettyprint">public SearchView(Context context, AttributeSet attrs, int defStyleAttr) {
    super(context, attrs, defStyleAttr);

    final TintTypedArray a = TintTypedArray.obtainStyledAttributes(context,
            attrs, R.styleable.SearchView, defStyleAttr, 0);
    // Keep the TintManager in case we need it later
    mTintManager = a.getTintManager();

    final LayoutInflater inflater = LayoutInflater.from(context);
    final int layoutResId = a.getResourceId(
            R.styleable.SearchView_layout, R.layout.abc_search_view);
    inflater.inflate(layoutResId, this, true);

    mSearchSrcTextView = (SearchAutoComplete) findViewById(R.id.search_src_text);
    mSearchSrcTextView.setSearchView(this);

    mSearchEditFrame = findViewById(R.id.search_edit_frame);
    mSearchPlate = findViewById(R.id.search_plate);
    mSubmitArea = findViewById(R.id.submit_area);
    mSearchButton = (ImageView) findViewById(R.id.search_button);
    mGoButton = (ImageView) findViewById(R.id.search_go_btn);
    mCloseButton = (ImageView) findViewById(R.id.search_close_btn);
    mVoiceButton = (ImageView) findViewById(R.id.search_voice_btn);
    mCollapsedIcon = (ImageView) findViewById(R.id.search_mag_icon);

    // Set up icons and backgrounds.
    mSearchPlate.setBackgroundDrawable(a.getDrawable(R.styleable.SearchView_queryBackground));
    mSubmitArea.setBackgroundDrawable(a.getDrawable(R.styleable.SearchView_submitBackground));
    mSearchButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_searchIcon));
    mGoButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_goIcon));
    mCloseButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_closeIcon));
    mVoiceButton.setImageDrawable(a.getDrawable(R.styleable.SearchView_voiceIcon));
    mCollapsedIcon.setImageDrawable(a.getDrawable(R.styleable.SearchView_searchIcon));

    mSearchHintIcon = a.getDrawable(R.styleable.SearchView_searchHintIcon);

    // Extract dropdown layout resource IDs for later use.
    mSuggestionRowLayout = a.getResourceId(R.styleable.SearchView_suggestionRowLayout,
            R.layout.abc_search_dropdown_item_icons_2line);
    mSuggestionCommitIconResId = a.getResourceId(R.styleable.SearchView_commitIcon, 0);

    mSearchButton.setOnClickListener(mOnClickListener);
    mCloseButton.setOnClickListener(mOnClickListener);
    mGoButton.setOnClickListener(mOnClickListener);
    mVoiceButton.setOnClickListener(mOnClickListener);
    mSearchSrcTextView.setOnClickListener(mOnClickListener);

    mSearchSrcTextView.addTextChangedListener(mTextWatcher);
    mSearchSrcTextView.setOnEditorActionListener(mOnEditorActionListener);
    mSearchSrcTextView.setOnItemClickListener(mOnItemClickListener);
    mSearchSrcTextView.setOnItemSelectedListener(mOnItemSelectedListener);
    mSearchSrcTextView.setOnKeyListener(mTextKeyListener);

    // Inform any listener of focus changes
    mSearchSrcTextView.setOnFocusChangeListener(new OnFocusChangeListener() {

        public void onFocusChange(View v, boolean hasFocus) {
            if (mOnQueryTextFocusChangeListener != null) {
                mOnQueryTextFocusChangeListener.onFocusChange(SearchView.this, hasFocus);
            }
        }
    });
    setIconifiedByDefault(a.getBoolean(R.styleable.SearchView_iconifiedByDefault, true));

    final int maxWidth = a.getDimensionPixelSize(R.styleable.SearchView_android_maxWidth, -1);
    if (maxWidth != -1) {
        setMaxWidth(maxWidth);
    }

    final CharSequence queryHint = a.getText(R.styleable.SearchView_queryHint);
    if (!TextUtils.isEmpty(queryHint)) {
        setQueryHint(queryHint);
    }

    final int imeOptions = a.getInt(R.styleable.SearchView_android_imeOptions, -1);
    if (imeOptions != -1) {
        setImeOptions(imeOptions);
    }

    final int inputType = a.getInt(R.styleable.SearchView_android_inputType, -1);
    if (inputType != -1) {
        setInputType(inputType);
    }

    boolean focusable = true;
    focusable = a.getBoolean(R.styleable.SearchView_android_focusable, focusable);
    setFocusable(focusable);

    a.recycle();

    // Save voice intent for later queries/launching
    mVoiceWebSearchIntent = new Intent(RecognizerIntent.ACTION_WEB_SEARCH);
    mVoiceWebSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    mVoiceWebSearchIntent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
            RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH);

    mVoiceAppSearchIntent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
    mVoiceAppSearchIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

    mDropDownAnchor = findViewById(mSearchSrcTextView.getDropDownAnchor());
    if (mDropDownAnchor != null) {
        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
            addOnLayoutChangeListenerToDropDownAnchorSDK11();
        } else {
            addOnLayoutChangeListenerToDropDownAnchorBase();
        }
    }

    updateViewsVisibility(mIconifiedByDefault);
    updateQueryHint();
}
 </pre> 
     </div> 
    </div> 
    <script type="text/javascript">
		$('.vote').hover(
			function () {
				$(this).addClass("hover");
			},
			function () {
				$(this).removeClass("hover");
			}
		);
		
		
		$("pre").highlight("RecognizerIntent", {caseSensitive:true});
		
		//$(this).html().replace( new RegExp(RecognizerIntent, "ig") ,'<div style="background-color:red">' + RecognizerIntent + '</div>')
		
</script> 
   </div> 
   <div style="height: 1px; width: 100%; clear:both;"></div> 
   <!-- footer --> 
   <div id="footer"> 
    <div style="width: 800px; margin:0 auto;"> 
     <!--The examples above are mined from open source projects. Each example
			has a reference to <br> its resource, but the http link may not be
			provided due to the evoluation of the project.
			--> 
     <style>
				#footer-list li{
					font-size: 13px;
					display: inline-block;

					padding:3px;
					text-align: center;
				}

			</style> 
     <ul id="footer-list"> 
      <li><a href="./index.php?action=privacy">Terms of Use</a></li> 
      <li><a href="./index.php?action=privacy">Privacy</a></li> 
      <li><a href="./index.php?action=privacy"> Support &amp; Contact</a></li> 
     </ul> 
    </div> 
    <div style="margin-top:15px;"> 
     <a href="http://www.programcreek.com"><img alt="Program Creek" src="./includes/images/pc-logo.png" width="100"></a> 
    </div> 
   </div>   
  </div> 
 </body>
</html>