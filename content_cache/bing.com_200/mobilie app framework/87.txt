<!doctype html>
<!--[if lt IE 7]><html id="html" class="ie oldie ie6" lang="en"><![endif]-->
<!--[if IE 7]><html id="html" class="ie oldie ie7" lang="en"><![endif]-->
<!--[if IE 8]><html id="html" class="ie oldie ie8" lang="en"><![endif]-->
<!--[if IE 9]><html id="html" class="ie ie9" lang="en"><![endif]-->
<!--[if !IE]>-->
<html id="html" lang="en">
 <!--<![endif]-->
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
  <title>Planning A Front-end JavaScript Application -</title> 
  <meta name="viewport" content="width=device-width,initial-scale=1"> 
  <link href="https://developer.telerik.com/wp-content/themes/tdnv2/style.css?1504121756" rel="stylesheet"> 
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="https://developer.telerik.com/feed/"> 
  <link rel="pingback" href="https://developer.telerik.com/xmlrpc.php"> 
  <link rel="shortcut icon" href="https://developer.telerik.com/wp-content/themes/tdnv2/assets/img/favicon.ico"> 
  <script async defer src="//survey.g.doubleclick.net/async_survey?site=l2o5nmhmescld5tf6mvsjxeb6m"></script> 
  <!-- This site is optimized with the Yoast SEO plugin v5.4.2 - https://yoast.com/wordpress/plugins/seo/ --> 
  <meta name="description" content="16 detailed steps needed to develop a maintainable complex enterprise application using a JavaScript stack according to Cody Lindley."> 
  <link rel="canonical" href="https://developer.telerik.com/featured/planning-front-end-javascript-application/"> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Planning A Front-end JavaScript Application -"> 
  <meta property="og:description" content="16 detailed steps needed to develop a maintainable complex enterprise application using a JavaScript stack according to Cody Lindley."> 
  <meta property="og:url" content="https://developer.telerik.com/featured/planning-front-end-javascript-application/"> 
  <meta property="og:site_name" content="Telerik Developer Network"> 
  <meta property="article:section" content="Featured"> 
  <meta property="article:published_time" content="2014-12-11T12:22:47-04:00"> 
  <meta property="article:modified_time" content="2017-02-21T10:00:10-04:00"> 
  <meta property="og:updated_time" content="2017-02-21T10:00:10-04:00"> 
  <meta property="og:image" content="https://developer.telerik.com/wp-content/uploads/2014/12/planning_header.jpg"> 
  <meta property="og:image:secure_url" content="https://developer.telerik.com/wp-content/uploads/2014/12/planning_header.jpg"> 
  <meta property="og:image:width" content="1170"> 
  <meta property="og:image:height" content="297"> 
  <script type="application/ld+json">{"@context":"http:\/\/schema.org","@type":"WebSite","@id":"#website","url":"https:\/\/developer.telerik.com\/","name":"Telerik Developer Network","potentialAction":{"@type":"SearchAction","target":"https:\/\/developer.telerik.com\/?s={search_term_string}","query-input":"required name=search_term_string"}}</script> 
  <script type="application/ld+json">{"@context":"http:\/\/schema.org","@type":"Organization","url":"https:\/\/developer.telerik.com\/featured\/planning-front-end-javascript-application\/","sameAs":[],"@id":"#organization","name":"Telerik","logo":"http:\/\/developer.telerik.com\/wp-content\/uploads\/2016\/03\/telerik-small.png"}</script> 
  <!-- / Yoast SEO plugin. --> 
  <link rel="dns-prefetch" href="//kendo.cdn.telerik.com"> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="Telerik Developer Network » Planning A Front-end JavaScript Application Comments Feed" href="https://developer.telerik.com/featured/planning-front-end-javascript-application/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/developer.telerik.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.8.2"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b!==c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="cm-ad-ouibounce-css" href="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/css/ouibounce.css?ver=4.8.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="kendo-common-css" href="https://kendo.cdn.telerik.com/2016.2.714/styles/kendo.common.min.css?ver=4.8.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="kendo-default-css" href="https://kendo.cdn.telerik.com/2016.2.714/styles/kendo.default.min.css?ver=4.8.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="prism-line-numbers-css" href="https://developer.telerik.com/wp-content/plugins/prism-wp/libs/prism/plugins/line-numbers/prism-line-numbers.css?ver=1.0.0" type="text/css" media="all"> 
  <link rel="stylesheet" id="minqueue-b4790aa0-575b2bde-css" href="https://developer.telerik.com/wp-content/uploads/minqueue-cache/minqueue-b4790aa0-575b2bde.css" type="text/css" media="all"> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var cmac_data = {"ajaxurl":"https:\/\/developer.telerik.com\/wp-admin\/admin-ajax.php","pluginurl":"https:\/\/developer.telerik.com\/wp-content\/plugins\/cm-ad-changer-server-pro"};
/* ]]> */
</script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/js/front-scripts.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/js/jquery.tcycle.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/js/ouibounce.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/js/flyingBottom.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/uploads/minqueue-cache/minqueue-ab0cd199-b6b64d22.js"></script> 
  <link rel="https://api.w.org/" href="https://developer.telerik.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://developer.telerik.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://developer.telerik.com/wp-includes/wlwmanifest.xml"> 
  <link rel="shortlink" href="https://developer.telerik.com/?p=24601"> 
  <link rel="alternate" type="application/json+oembed" href="https://developer.telerik.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fdeveloper.telerik.com%2Ffeatured%2Fplanning-front-end-javascript-application%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="https://developer.telerik.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fdeveloper.telerik.com%2Ffeatured%2Fplanning-front-end-javascript-application%2F&amp;format=xml"> 
  <link rel="amphtml" href="https://developer.telerik.com/featured/planning-front-end-javascript-application/amp/">
 </head> 
 <body> 
  <!-- Google Tag Manager --> 
  <noscript> 
   <iframe src="//www.googletagmanager.com/ns.html?id=GTM-6X92" height="0" width="0" style="display: none; visibility: hidden"></iframe> 
  </noscript> 
  <script>(function (w, d, s, l, i) {
    w[l] = w[l] || [];
    w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
    var f = d.getElementsByTagName(s)[0], j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
    j.async = true;
    j.src = '//www.googletagmanager.com/gtm.js?id=' + i + dl;
    f.parentNode.insertBefore(j, f);
})(window, document, 'script', 'dataLayer', 'GTM-6X92');</script> 
  <!-- End Google Tag Manager --> 
  <!-- Article Page Banner --> 
  <script async src="https://www.googletagservices.com/tag/js/gpt.js"></script> 
  <script>
  var googletag = googletag || {};
  googletag.cmd = googletag.cmd || [];
</script> 
  <script>
  googletag.cmd.push(function() {
    googletag.defineSlot('/22061388/tdn_topics', [210, 410], 'div-gpt-ad-1477482962874-0').setTargeting('tdn_topic', ['cloud', 'desktop', 'mobile-development', 'net', 'progress-labs', 'testing', 'web-development']).addService(googletag.pubads());
    googletag.pubads().enableSingleRequest();
    googletag.enableServices();
  });
</script> 
  <div class="container">
   <div class="row">
    <div class="col-3">
     <figure class="TK-Hat-Brand">
      <a href="https://www.progress.com" class="TK-PRGS-Logo">
       <svg xmlns="http://www.w3.org/2000/svg" width="94" height="40" viewbox="0 0 512 120">
        <path fill="#5ce500" d="M95.52 29.33v51a3.93 3.93 0 0 1-1.78 3.08l-1.67 1-12.72 7.35-8.59 5-1.78 1V42.6L21.23 15 43.91 1.93 46 .74a3.94 3.94 0 0 1 3.56 0L81 18.9l14.51 8.38v2.05zM58.36 48.72l-9.79-5.66-22.91-13.23a4 4 0 0 0-3.56 0L1.77 41.57 0 42.6l34.49 19.91v39.83l20.3-11.73 1.79-1a3.94 3.94 0 0 0 1.78-3.08V48.72zM0 82.43l23.86 13.78V68.63z"></path>
        <path fill="#4b4e52" d="M148.09 27.28h-26v70.48h11.55V70.1h14.57c15.77 0 24.45-7.7 24.45-21.69 0-6.35-2.4-21.12-24.55-21.12m12.78 21.31c0 7.95-4.12 11.19-14.24 11.19h-13v-22.1h14.57c8.56 0 12.71 3.57 12.71 10.91M207 46.41l.87.42-2 10.42-1.35-.42a11.32 11.32 0 0 0-3.34-.51c-10.79 0-11.67 8.59-11.67 19v22.44h-10.64V46h10v6.24c2.73-4.2 6-6.37 10.37-6.9a14.55 14.55 0 0 1 7.76 1.07M233.29 45c-8.42 0-15.16 3.2-19.5 9.27-4.56 6.37-5.23 13.85-5.23 17.74 0 16.36 9.7 26.92 24.73 26.92 18.26 0 24.73-14.71 24.73-27.3 0-7.25-2.15-13.82-6-18.51-4.41-5.31-10.87-8.12-18.7-8.12m0 44.38c-8.37 0-13.57-6.66-13.57-17.37s5.2-17.55 13.57-17.55S247 61.23 247 71.78c0 10.83-5.24 17.56-13.66 17.56m114.55-42.93l.87.42-2 10.42-1.35-.42a11.26 11.26 0 0 0-3.33-.51c-10.78 0-11.66 8.59-11.66 19v22.44h-10.66V46h10v6.24c2.73-4.2 6-6.37 10.37-6.9a14.54 14.54 0 0 1 7.73 1.06m38.4 34.76l-.2.57c-2.23 6.36-7.57 7.7-11.65 7.7-8.09 0-13.3-5.37-13.81-14.09h36.59l.13-1a31.26 31.26 0 0 0 .12-4.12v-.93C396.93 54.78 387.48 45 374 45c-7.9 0-14.37 3.1-18.73 9a30.85 30.85 0 0 0-5.54 18c0 16 9.95 26.74 24.74 26.74 11.45 0 19.33-5.82 22.2-16.38l.33-1.2h-10.7zM361 66.05c.9-7.17 5.81-11.73 12.79-11.73 5.33 0 11.64 3.1 12.52 11.73H361zm-60.7-15.71c-3.45-3.58-8.06-5.39-13.76-5.39-15.69 0-22.83 13.81-22.83 26.63 0 13.16 7.06 26.44 22.83 26.44a18.33 18.33 0 0 0 13.35-5.42c0 2.28-.1 4.45-.16 5.38-.58 8.54-4.68 12.51-12.91 12.51-4.47 0-9.61-1.59-10.6-6l-.22-1h-10.54l.17 1.41c1.1 9.12 9.11 14.79 20.9 14.79 10.34 0 17.7-3.9 21.28-11.26 1.73-3.55 2.6-8.72 2.6-15.37V46h-10.13v4.34zm-13.11 38.15c-3.74 0-12.43-1.69-12.43-17.37 0-10.3 4.87-16.7 12.71-16.7 6.06 0 12.52 4.39 12.52 16.7 0 10.87-4.79 17.37-12.81 17.37m159.67-6.31c0 8.23-6.83 16.53-22.09 16.53-13.5 0-21.53-5.85-22.61-16.45l-.15-1.1h10.52l.21.84c1.29 6.38 7.37 7.72 12.24 7.72 5.34 0 11-1.72 11-6.54 0-2.44-1.59-4.18-4.73-5.16-1.86-.55-4.15-1.2-6.56-1.87-4.16-1.16-8.47-2.38-11.12-3.29-6.56-2.35-10.33-6.93-10.33-12.56 0-10.43 10.16-15.11 20.22-15.11 13.46 0 20.42 5.07 21.3 15.49l.09 1.07H434.5l-.14-.82c-1-6-7-6.9-10.48-6.9-3 0-10 .53-10 5.5 0 2.25 1.93 3.91 5.89 5.06 1.18.33 2.94.78 5 1.31 4.22 1.09 9.48 2.46 12.13 3.37 6.59 2.32 9.93 6.67 9.93 13m49.39 0c0 8.23-6.83 16.53-22.09 16.53-13.5 0-21.53-5.85-22.61-16.45l-.11-1.09H462l.12.74c1.29 6.38 7.37 7.72 12.24 7.72 5.34 0 11-1.72 11-6.54 0-2.44-1.59-4.18-4.72-5.16-1.86-.55-4.15-1.2-6.57-1.87-4.16-1.16-8.46-2.38-11.11-3.29-6.57-2.35-10.33-6.93-10.33-12.56 0-10.43 10.16-15.11 20.22-15.11 13.46 0 20.42 5.07 21.29 15.49l.09 1.07H483.9l-.14-.82c-1-6-7-6.9-10.48-6.9-3 0-9.95.53-9.95 5.5 0 2.25 1.93 3.91 5.89 5.06 1.18.33 2.94.78 5 1.31 4.22 1.09 9.48 2.46 12.13 3.37 6.58 2.32 9.93 6.67 9.93 13m8.43-30.78a7.37 7.37 0 1 1 7.29-7.37 7.23 7.23 0 0 1-7.29 7.37m0-13.49a6.12 6.12 0 1 0 6 6.12 5.91 5.91 0 0 0-6-6.12m-.85 7.49v2.46h-2.17v-7.74h3.62a2.58 2.58 0 0 1 2.86 2.7 2.26 2.26 0 0 1-1.49 2.34l1.77 2.7H506l-1.49-2.46h-.68zm1.21-3.49h-1.21v1.73h1.21a.86.86 0 0 0 1-.85.88.88 0 0 0-1-.89"></path>
       </svg></a>
     </figure>
    </div>
   </div>
  </div> 
  <div class="Bar"> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-3"> 
      <a href="https://developer.telerik.com/" class="Bar-Logo"><img src="https://developer.telerik.com/wp-content/themes/tdnv2/assets/img/TDN_logo_new.png"></a> 
      <div class="Bar-Nav"> 
       <div class="Bar-Dropdown icon-menu">
        <a href="#">Topics</a>
        <ul> 
         <li><a href="https://developer.telerik.com/category/topics/web-development/">Web</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/mobile-development/">Mobile</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/net/">.NET</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/progress-labs/">Progress Labs</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/cloud/">Cloud</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/testing/">Testing</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/desktop/">Desktop</a></li> 
        </ul>
       </div> 
       <a href="https://developer.telerik.com/community/" class="Bar-Link icon-community">Community</a> 
       <a href="/feed" class="Bar-Link icon-rss">RSS</a> 
       <a href="http://www.telerik.com" class="Bar-Link icon-external">Telerik.com</a> 
      </div> 
     </div> 
     <div class="col-1"> 
      <div class="Bar-Search"> 
       <form action="https://developer.telerik.com/" role="search" name="searchForm" method="get"> 
        <input name="s" type="text"> 
        <button type="submit" class="icon-search"></button> 
       </form> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="container u-tac u-pb1"> 
   <div class="u-oh u-pt2"> 
    <div class="Label Label--l Label--web-development">
     <a href="https://developer.telerik.com/category/topics/web-development/">Web</a>
    </div> 
   </div> 
   <h1 class="u-mb1">Planning A Front-end JavaScript Application</h1> 
   <ul class="Meta u-mb1"> 
    <li><a href="https://developer.telerik.com/category/content-types/opinion/">Opinion</a> by <img src="https://developer.telerik.com/wp-content/uploads/userphoto/241.png" alt="Cody Lindley" width="136" height="150" class="photo" style="margin-right:0px;">&nbsp; <a href="https://developer.telerik.com/author/clindley/" class="author">Cody Lindley</a> </li> 
    <li class="icon-time">December 11, 2014</li> 
    <li class="icon-comment"><a href="https://developer.telerik.com/featured/planning-front-end-javascript-application/#disqus_thread">Comments</a></li> 
   </ul> 
  </div> 
  <div class="container"> 
   <div class="row Content"> 
    <div class="col-3 Content-main"> 
     <img width="1170" height="297" src="https://developer.telerik.com/wp-content/uploads/2014/12/planning_header.jpg" class="attachment-full size-full wp-post-image" alt="" srcset="https://developer.telerik.com/wp-content/uploads/2014/12/planning_header.jpg 1170w, https://developer.telerik.com/wp-content/uploads/2014/12/planning_header-300x76.jpg 300w, https://developer.telerik.com/wp-content/uploads/2014/12/planning_header-1024x259.jpg 1024w" sizes="(max-width: 1170px) 100vw, 1170px"> 
     <div class="Nav"> 
      <div class="container"> 
       <div class="row"> 
        <div class="col-3"> 
         <div class="Label Label--l Label--web-development">
          <a href="https://developer.telerik.com/category/topics/web-development/">Web</a>
         </div> 
         <h2>Planning A Front-end JavaScript Application</h2> 
        </div> 
        <div class="col-1"> 
         <div class="SocialIcons"> 
          <a onclick="window.open('http://www.facebook.com/share.php?u=https://developer.telerik.com/featured/planning-front-end-javascript-application/','facebook','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" href="http://www.facebook.com/share.php?u=https://developer.telerik.com/featured/planning-front-end-javascript-application/" title="Planning A Front-end JavaScript Application" target="blank" class="icon-facebook"></a> 
          <a onclick="window.open('http://twitter.com/home?status=Planning+A+Front-end+JavaScript+Application - https://developer.telerik.com/featured/planning-front-end-javascript-application/','twitter','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" href="http://twitter.com/home?status=Planning+A+Front-end+JavaScript+Application - https://developer.telerik.com/featured/planning-front-end-javascript-application/" title="Planning A Front-end JavaScript Application" target="blank" class="icon-twitter"></a> 
          <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://developer.telerik.com/featured/planning-front-end-javascript-application/&amp;title=Planning+A+Front-end+JavaScript+Application&amp;source=Telerik Developer Network" target="_blank" class="icon-linkedin"></a> 
          <a href="https://plus.google.com/share?url=https://developer.telerik.com/featured/planning-front-end-javascript-application/" onclick="window.open('https://plus.google.com/share?url=https://developer.telerik.com/featured/planning-front-end-javascript-application/','gplusshare','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" class="icon-google"></a> 
         </div> 
        </div> 
       </div> 
      </div> 
     </div> 
     <div class="Article"> 
      <div class="SocialIcons"> 
       <a onclick="window.open('http://www.facebook.com/share.php?u=https://developer.telerik.com/featured/planning-front-end-javascript-application/','facebook','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" href="http://www.facebook.com/share.php?u=https://developer.telerik.com/featured/planning-front-end-javascript-application/" title="Planning A Front-end JavaScript Application" target="blank" class="icon-facebook"></a> 
       <a onclick="window.open('http://twitter.com/home?status=Planning+A+Front-end+JavaScript+Application - https://developer.telerik.com/featured/planning-front-end-javascript-application/','twitter','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" href="http://twitter.com/home?status=Planning+A+Front-end+JavaScript+Application - https://developer.telerik.com/featured/planning-front-end-javascript-application/" title="Planning A Front-end JavaScript Application" target="blank" class="icon-twitter"></a> 
       <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://developer.telerik.com/featured/planning-front-end-javascript-application/&amp;title=Planning+A+Front-end+JavaScript+Application&amp;source=Telerik Developer Network" target="_blank" class="icon-linkedin"></a> 
       <a href="https://plus.google.com/share?url=https://developer.telerik.com/featured/planning-front-end-javascript-application/" onclick="window.open('https://plus.google.com/share?url=https://developer.telerik.com/featured/planning-front-end-javascript-application/','gplusshare','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" class="icon-google"></a> 
      </div> 
      <p>Planning a front-end web application is about more than just picking a few JavaScript solutions to aid in the architecture and testing of a web application. While this might be where much of the front-end community focuses, seasoned developers know that building enterprise-grade software is much more than this.</p> 
      <p>In this article, I am going to describe 16 steps that front-end developers should go through when planning a front-end web application. These steps aim to cover the entire life-cycle of a front-end application. However, before diving in, I need to clarify a few front-end terms that remain unsettled in the industry.</p> 
      <h2>Terminology</h2> 
      <p>First, when I use the term Front-end JavaScript Application, I am talking about a <a href="http://en.wikipedia.org/wiki/Single-page_application">Single Page Application</a>, <a href="http://www.codegent.com/blog/2013/8/the-value-of-api-driven-development">API driven</a>, likely <a href="https://unhosted.org/">unhosted</a>, and built by a team of developers, as opposed to one developer playing the part of a full-stack engineer.</p> 
      <p>Second, when I use the term front-end developer, I am speaking about a developer who develops using JavaScript, HTML, and CSS in a first class manner. These technologies are the at the core of the developers competencies and the developer views these technologies as the primary (and the web platform) materials for building complex applications.</p> 
      <p>Third, crafting a web application with just the right parts is a skill likened to building a race car. A professional race car is not bought off the lot at the local car dealer and neither should an entire front-end application solution. Thus, the developer Im speaking about is, more than likely not, a fan of all-in-one integrated development environments, full-stack development tools, or heavy handed frameworks in general.</p> 
      <p>I also need to clarify that the front-end developer Im speaking about works on a large team of developers and would rarely be responsible for developing the entire app front-to-back, the data api, or any back-end services consumed by the front-end team. Thus, tools that offer integrated full stack features are avoided by this type of front-end developer.</p> 
      <p>The last clarification I need to make is that I dont presuppose that building an enterprise grade app requires a monolithic integrated framework from a single vendor and that its completeness alone makes it an enterprise-worthy solution. This, I believe, is a dying concept from the early years of software development. Modern, front-end engineers favor loosely coupled systems that avoid vendor lock-in (i.e. hard to change systems) and lock down (systems that dont play well with others). These modern systems are not only viable for the enterprise, they can elevate a lot of the downfalls associated with enterprise software. In my opinion, these styles of tools which were once considered helpful to developers, are now considered harmful.</p> 
      <p>An example of a more modern stack of loosely coupled tools for building enterprise applications is <a href="http://developer.telerik.com/featured/case-kendo-ui/">Kendo UI</a>. It provides enterprise grade tools, but it wont lock you in or lock you out of being able to change, evolve, or use it with other third party solutions.</p> 
      <p>With that all said, lets begin.</p> 
      <h2>Step 1. Verify you have a working &amp; stable data API.</h2> 
      <p>This first step presumes <a href="http://blog.mashape.com/three-ways-api-first-development-is-the-future-of-web/">API first development</a>, which is <a href="https://lob.com/blog/api-first-development-makes-lob-more-productive">an excellent</a> method that I highly recommended.</p> 
      <p>In a nutshell, API first development means you document, build, and test your API first. This means you have a relatively stable API before you write any application code.</p> 
      <p><img src="http://codylindley.com/spotlight-front-end/images/teams-2_cab68920fa72994bebdd4e68d4328a6618723215.jpg" alt=""></p> 
      <p>Note that during API construction, front-end developers should be prototyping minimal viable features using the API and providing feedback to the API engineers.</p> 
      <p>The main reason to follow <a href="http://www.api-first.com/">API first development</a> is to reduce the possible deficiencies in the API from being amplified in the data layer and causing ten-fold pain and misery. Ive found the following quote, from <a href="https://twitter.com/julio_ody">@julio_ody</a> in the <a href="http://pragmatic-backbone.com/">Pragmatic Guide to Backbone.js Apps</a> book to be painfully true:</p> 
      <blockquote> 
       <p>data layer will absorb your APIs ugliness and amplify it by one hundred  <a href="https://twitter.com/julio_ody">@julio_ody</a></p> 
      </blockquote> 
      <p>You want to do everything in your power up front to avoid having to make up for your APIs deficiencies in your application logic. Not having a documented and mostly solidified data API before a line of application code is written, is asking for pain and misery in the future. Build your API first. Document it, test it, and then be <a href="http://apiary.io/">ready</a> to evolve it as you build out the applications that use it.</p> 
      <p>Its worth noting that it may be assumed that security and authentication details will accompany the API. It is also assumed that the API developers will provide a development API to be used for development. Using the same data API for both development and production should never be an option.</p> 
      <h2>Step 2. Select software management tools</h2> 
      <p>To manage the development of the front-end application, youll minimally need to select the following software management tools to manage code, assets, and team members tasks:</p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> software management tools </th> 
         <th align="center"> examples </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> ticketing system (i.e. bugs) </td> 
         <td align="center"> <a href="https://github.com/">github</a> </td> 
        </tr> 
        <tr> 
         <td> version control system </td> 
         <td align="center"><a href="https://github.com/">github</a></td> 
        </tr> 
        <tr> 
         <td> document/asset storage </td> 
         <td align="center"> <a href="https://slack.com/">slack</a> &amp; <a href="https://conceptboard.com/">conceptboard</a> </td> 
        </tr> 
        <tr> 
         <td> team communication </td> 
         <td align="center"> <a href="https://slack.com/">slack</a> &amp; <a href="https://conceptboard.com/">conceptboard</a> </td> 
        </tr> 
        <tr> 
         <td> task manager </td> 
         <td align="center"> <a href="https://trello.com/">trello</a> </td> 
        </tr> 
       </tbody> 
      </table> 
      <p>Pick these up front and make everyone use them. If you have a team member who wont get on board with the tools, then you have an enemy within. Please dont take my last statement and use it as a tool to force development tools on developers. Development tools and development management tools are not the same thing. Developers should never be forced into something like an IDE, text editor, or command like text editor.</p> 
      <h2>Step 3. Create a foundational specification</h2> 
      <p>Each project is going to be different and will, of course, have its own specification relevant to the problem being solved. However, a foundational specification can be created before you spec out the actual application. These specifications are important to establish upfront and should remain unchanged during development. All decisions made after the foundation spec will depend on the decisions made in the foundational specification.</p> 
      <p>Make sure you carefully consider each specification mentioned below.</p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> foundational spec. </th> 
         <th align="center"> example </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> devices &amp; min. resolutions </td> 
         <td align="center"> laptop/desktop &amp; 1024×768 </td> 
        </tr> 
        <tr> 
         <td> OS/browsers </td> 
         <td align="center"> OS X &amp; Win 8 on ie9+, FF, Safari &amp; Chrome, latest </td> 
        </tr> 
        <tr> 
         <td> languages (i.e. localization) </td> 
         <td align="center"> English &amp; Bulgarian language </td> 
        </tr> 
        <tr> 
         <td> cultures (i.e. globalization) </td> 
         <td align="center"> English &amp; Bulgarian culture </td> 
        </tr> 
        <tr> 
         <td> <a href="https://developer.chrome.com/apps/offline_apps">offline first</a></td> 
         <td align="center"> Yes </td> 
        </tr> 
        <tr> 
         <td> accessibility </td> 
         <td align="center"> section 508 &amp; WAI-ARIA 1.0 </td> 
        </tr> 
        <tr> 
         <td> SEO </td> 
         <td align="center"> none (done on product site) </td> 
        </tr> 
       </tbody> 
      </table> 
      <blockquote>
       <p>Note: What Im about to say is contentious. You might just skip this part if you are easily offend by a differing opinion.</p>
      </blockquote> 
      <p>I do not mention responsive design or mobile first when creating a foundational specification for front-end <strong>applications</strong>. I did this because I assume no one who builds user-centered web application interfaces would do this for an <strong>application</strong>. In general, you should build applications (user heavy data interactions) specifically to the needs of the user and the device they are using. Constructing a single code base that can meet the needs of users on multiple devices is simply too problematic on too many fronts. Mission critical interactions are too diverse across devices and thus the code is extremely diverse. This much diversity in the code is unnecessary complexity. A RWD web app is a concept that seeds complexity. Id avoid it. With that said, and before you send me textual hate, I do believe responsive design has its place among websites. My main point is that it loses its value and purpose quickly when you shove its patterns and practices into application development. For example, facebook would never build an application from a single code base that runs on all platforms/devices. They build platform/device specific applications because that is what is best for the user.</p> 
      <h3>Step 4. Select a software development process</h3> 
      <p>In my experience, picking a process and making sure everyone follows it is more important than the actual type of process one chooses. Ive tried several software development methodologies. Most have left me feeling like that moment when you recognize the gap between what you are sold and what you actually get.</p> 
      <p><img src="http://codylindley.com/spotlight-front-end/images/1zj7cnQ_d3bf71a6f9f120fabdb0eb905c6bda7d47fef65a.jpg" alt=""></p> 
      <p>The more recent agile-minded software development processes feel like the sweet spot for building applications. Ive tried very strict agile processes and very loose agile processes. The processes Ive found to be ideal are the custom, loosely enforced, agile-like processes that can be wrapped around the uniqueness of the project and team members. Roughly, the process Id choose to start with looks something like this:</p> 
      <ul> 
       <li>meet Monday morning, prioritize development tasks then pick tasks that you can accomplish by the weeks end so that you avoid the dreaded two day context switch (i.e. the weekend);</li> 
       <li>meet at the start of each day (Tues  Fri) and discuss what you are doing and what you need in order to get things done;</li> 
       <li>communicate with whomever you need to, however you can;</li> 
       <li>iterate until its right (for the users), then release per your release plan;</li> 
      </ul> 
      <h2>Step 5. Select a development platform &amp; a host platform (i.e. staging &amp; production platforms)</h2> 
      <p>A platform (i.e. server &amp; server language) for serving the application both locally and on the web should be selected. The obvious choice, and likely the only right choice for front-end engineers working on a JavaScript application, is Node.js.</p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> platforms </th> 
         <th align="center"> example </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> development </td> 
         <td align="center"> <a href="http://nodejs.org/">Node.js</a> running locally </td> 
        </tr> 
        <tr> 
         <td> staging &amp; production host </td> 
         <td align="center"> <a href="http://nodejs.org/">Node.JS</a> running on <a href="https://modulus.io/">modulus.io</a> </td> 
        </tr> 
       </tbody> 
      </table> 
      <p>Most front-end engineers will never be professional back-end Node.js developers by trade. But, the fact that they can get a lot of stuff done (serving, testing, preprocessing, creating tasks etc.) using Node.js is the ideal situation when compared to older platform scenarios that require a front-end engineer to do a language and skill switch. Or worse, platform scenarios that require a job title switch, like being a DBA on a locally running instance of MySQL running on a random OS or virtual machine. Switching operating systems, platforms, and languages to build a front-end application is completely unnecessary today. Consider using JavaScript for everything, not because JavaScript is the best for everything, but because the average developer can get more done faster without language switching.</p> 
      <h2>Step 6. Select package managers</h2> 
      <p>Managing third party code and their dependencies should not be a manual task performed by a human. Package managers should perform this duty. As of today, I believe it still makes good sense to select a separate package manager for your application code and your code that is parsed by a browser engine. Below are some choices for front-end developers.</p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> package managers </th> 
         <th align="center"> example </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> Node.js package manager </td> 
         <td align="center"> <a href="https://www.npmjs.org/">NPM</a> </td> 
        </tr> 
        <tr> 
         <td> browser package manager </td> 
         <td align="center"> <a href="http://bower.io/">bower</a> </td> 
        </tr> 
       </tbody> 
      </table> 
      <h3>Step 7. Select site &amp; user analytic tools</h3> 
      <p>A lot of developers wait until the end of a project to integrate analytics, but one should not wait for development to end to select, plan, and integrate analytic tools. The reason not to wait is that these tools often have tentacles (especially user analytic tools) into the application code and its organization. Select analytic tools up front, plan accordingly, and consider their usage during development. Its fairly common to have a separate tool for site analytics and one to help facilitate the type of user analytics you require.</p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> analytics tools </th> 
         <th align="center"> example </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> site analytics </td> 
         <td align="center"> <a href="https://chartbeat.com/">chartbeat</a> </td> 
        </tr> 
        <tr> 
         <td> user analytics </td> 
         <td align="center"> <a href="https://mixpanel.com/">mixpanel</a> </td> 
        </tr> 
       </tbody> 
      </table> 
      <h2>Step 8. Select error, quality, and style code enforcement tools</h2> 
      <p>When working on a team, the goal should be that each file is written as if it were coded from a single developers mind in regards to error prevention, formating, and style. Three main types of tools (i.e. code linters/hinters, code style checker, and a code editor config file) aid this process and should be properly implement and configured before coding begins.</p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> error, quality, and style enforcement code tools </th> 
         <th align="center"> example </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> linters/hinters </td> 
         <td align="center"> <a href="http://csslint.net/">CSSLint</a>, <a href="http://htmlhint.com/">HTMLhint</a>, <a href="http://jshint.com/">JShint</a> </td> 
        </tr> 
        <tr> 
         <td> code style checker </td> 
         <td align="center"> <a href="https://github.com/jscs-dev/node-jscs">JavaScript Code Style</a> </td> 
        </tr> 
        <tr> 
         <td> code editor configuration file </td> 
         <td align="center"> <a href="http://editorconfig.org/">.editorconfig</a> </td> 
        </tr> 
       </tbody> 
      </table> 
      <p>Its fairly common that these tools will run every time a developer saves a file in their code editor and/or commits code to a revision system like Git. Ive even implemented a <a href="http://githooks.com/">Git hook</a> that would double check the enforcements and reject a code push if any of the code failed to pass. However, the most common implementation of these tools is found in a the application building process.</p> 
      <h2>Step 9. Select an automated task running tool</h2> 
      <p>A tool will be required to automate tasks because humans fail miserably at completing repetitive tasks consistently, especially very complicated tasks like those associated with software creation. Ideally, the tasking tool will be programmable in a familiar language (i.e. JavaScript) and even better if the language you write to create tasks is the same language as the platform you develop on (i.e. Node.JS). The task tool will be used locally, on the continuous integration server, and potentially on the staging and production host mostly for making builds (enforcement, testing, deploying, constructing, and optimizing code etc).</p> 
      <p>The most common JavaScript task runners are <a href="http://gruntjs.com/">Grunt.js</a>, <a href="http://gulpjs.com/">Gulp.js</a>, or <a href="http://substack.net/task_automation_with_npm_run"><code>npm run</code> using your package.json file</a>.</p> 
      <p>Whatever you do, just dont assume humans will manually perform tasks or that you can afford the expense of human-driven processes.</p> 
      <h2>Step 10. Select application architecture/structure (and corresponding tools/solutions)</h2> 
      <p>This step is where the majority of those doing front-end application development give their time and attention. I believe this is a mistake. If you are still with me by this point, you see that I believe that this is only one step of many in planning a front-end application.</p> 
      <p>In this step, you have to pick a set of tools that will fit your team and the organization when architecting and structuring application code. The solutions might not always be what you personally think is best, but instead what is pragmatically best for the problem you are trying to solve and the types of developers who are solving it.</p> 
      <p>When I am asked what JavaScript application tool one should use, I simply reply, the one you think all the developers can use that wont end up in a horrible mess of unmanageable code. This of course is relative to the company, team, and problem you are solving!</p> 
      <p>A possible stack of solutions you might consider which is rather popular today could be:</p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> app architecture/structure </th> 
         <th align="center"> example </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> MV* </td> 
         <td align="center"> <a href="https://angularjs.org/">AngularJS</a> </td> 
        </tr> 
        <tr> 
         <td> templates </td> 
         <td align="center"> MVVM from <a href="https://angularjs.org/">AngularJS</a> </td> 
        </tr> 
        <tr> 
         <td> module communication </td> 
         <td align="center"> AngularJS $rootScope.$broadcast and $scope.$on for a PubSub communication. </td> 
        </tr> 
        <tr> 
         <td> data abstraction </td> 
         <td align="center"> <a href="http://docs.telerik.com/kendo-ui/framework/datasource/overview">Kendo UI dataSource</a> </td> 
        </tr> 
        <tr> 
         <td> app structure </td> 
         <td align="center"> <a href="https://github.com/angular/angular-seed">NG seed</a> </td> 
        </tr> 
        <tr> 
         <td> routing </td> 
         <td align="center"> <a href="https://github.com/angular-ui/ui-router">AngularUI Router</a> </td> 
        </tr> 
        <tr> 
         <td> dependency management </td> 
         <td align="center"> <a href="https://docs.angularjs.org/guide/di">AngularJS Dependency Injection</a> </td> 
        </tr> 
        <tr> 
         <td> widgets/components </td> 
         <td align="center"> <a href="http://docs.telerik.com/kendo-ui/introduction">Kendo UI</a> (using <a href="http://docs.telerik.com/kendo-ui/AngularJS/introduction#creating-widgets-the-angular-way">built-in directives</a>) </td> 
        </tr> 
        <tr> 
         <td> css UI frameworks </td> 
         <td align="center"> <a href="https://material.angularjs.org/#/">Material Design for Angular</a> </td> 
        </tr> 
       </tbody> 
      </table> 
      <p>I hope after you examine the stack above you will concern yourself less with the actual examples given, and more with the how I labeled the parts. What I want you to realize is that your application needs:</p> 
      <ul> 
       <li>MV* (something to organize models, views, and app logic/controller)</li> 
       <li>templates (e.g. strings templates or MVVM)</li> 
       <li>module communication (i.e. global event bus or sub/pub)</li> 
       <li>data abstraction (i.e. abstraction that deals with data api &amp; models)</li> 
       <li>app structure (i.e. folder structure and how you break up the parts of the app)</li> 
       <li>routing system (i.e. call X function when url changes)</li> 
       <li>dependency management (i.e. how are module dependencies loaded/required)</li> 
       <li>widgets/components (e.g. grid widget, make sure these fit into your globalization and localization specifications)</li> 
       <li>CSS UI frameworks (e.g bootstrap, foundation, pure, topcoat etc..)</li> 
      </ul> 
      <p>The specific solutions chosen to architect and structure an application is less important than making sure you understand the role and purpose of each part, and that you make the proper use of each when your application requires it. If what am saying is cryptic, simply take the bulleted list above and make sure you completely grok each list item and its role in application development.</p> 
      <p>The last thing I want to say about this step is that while most solutions will get the job done, ideally you want to use the simplest solution available given the context of the problem you are solving. Dont use a sledgehammer (e.g. AngularJS) when a regular hammer (e.g. vue.js) will do.</p> 
      <h2>Step 11. Select testing methodologies &amp; tools</h2> 
      <p>How you test and what you test is less important than the fact that you test something. Its likely the case that youll want to test each module or unit of code by writing unit tests. When all of the units of code unite to form a running application, youll want to do functional testing. Below I detail the tools required (tasking tool facilitate all this) to do cross-browser unit and functional testing.</p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> testing tools </th> 
         <th align="center"> example </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> test runner (for unit testing) </td> 
         <td align="center"> <a href="http://karma-runner.github.io/0.12/index.html">karma</a> </td> 
        </tr> 
        <tr> 
         <td> unit testing framework </td> 
         <td align="center"> <a href="http://mochajs.org/">mocha</a> </td> 
        </tr> 
        <tr> 
         <td> unit testing assertions </td> 
         <td align="center"> <a href="http://chaijs.com/">chai</a> </td> 
        </tr> 
        <tr> 
         <td> unit testing mocking </td> 
         <td align="center"> <a href="http://sinonjs.org/">sinon.js</a> </td> 
        </tr> 
        <tr> 
         <td> unit testing coverage </td> 
         <td align="center"> <a href="http://blanketjs.org/">blanketjs</a> </td> 
        </tr> 
        <tr> 
         <td> browser testing platform (for unit &amp; functional testing) </td> 
         <td align="center"> <a href="http://www.browserstack.com/">browserstack</a> </td> 
        </tr> 
        <tr> 
         <td> browser automation framework (for functional testing) </td> 
         <td align="center"> <a href="http://nightwatchjs.org/">nightwatch.js</a> </td> 
        </tr> 
       </tbody> 
      </table> 
      <h2>Step 12. Select code quality/complexity tools</h2> 
      <p><a href="http://jscomplexity.org/">Analysis into the quality and complexity of the JavaScript</a> modules written for front-end applications can be critically important for future-proofing code. It can help you keep modules small and simple and your development team honest, which can translate to highly maintainable code and less bugs. Use it, at the very least, to manually get a glimpse into the quality of the code being created. Or, better yet, fail a build if a developer tries to commit code that rises above the thresholds of complexity or below the thresholds of quality you are willing to accept in a module.</p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> quality/complexity </th> 
         <th align="center"> example </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> JavaScript Source Analysis </td> 
         <td align="center"> <a href="https://github.com/es-analysis/plato">Plato</a> </td> 
        </tr> 
       </tbody> 
      </table> 
      <p>If code analysis tools are a new concept for you, make sure you check out <a href="http://es-analysis.github.io/plato/examples/jquery/">the analysis of the jQuery library</a>. Platos visual analysis makes it fairly obvious as to the value of analyzing code and how you might work it into an application life cycle.</p> 
      <h2>Step 13. Define deployment strategy</h2> 
      <p>You need a plan to get your local code to staging and production (i.e. deploy local code to public servers). After all, not everyone can always see your locally running application, even if you use some <a href="https://meetfinch.com/">magic</a> to make it happen. A continuous integration server is an ideal solution for crafting deployments regardless of whether you intend to deploy to production on every code push.</p> 
      <p>Let me step back for a moment from CI concepts and talk about local development. Ideally, anything you do during CI, you should be able to do locally. That means, building and testing your application should be crafted first to run locally. In fact, I will often run a second server locally that serves staging code on my local machine (i.e. what gets outputted during CI process). Its this local testing and build process that becomes automated once you set up your CI integration. Ive loosely mapped out below what this might look like.</p> 
      <p><img src="http://codylindley.com/spotlight-front-end/images/deploymentstrategy_f94560eac722371b8c490e2d794967e2ad9c6a26.png" alt=""></p> 
      <table cellspacing="0" cellpadding="0"> 
       <thead> 
        <tr> 
         <th> deployment tools </th> 
         <th align="center"> example </th> 
        </tr> 
       </thead> 
       <tbody> 
        <tr> 
         <td> <a href="http://en.wikipedia.org/wiki/Continuous_integration">continuous integration</a> </td> 
         <td align="center"> use <a href="https://codeship.com/">codeship</a> to <a href="http://blog.codeship.com/node-js-deployment-modulus/">deploy to modulus</a> hosted staging and production </td> 
        </tr> 
       </tbody> 
      </table> 
      <h2>Step 14. Select package monitoring solution</h2> 
      <p>Package managers alleviate manually managing dependencies but dont offer automated insight into upgrade paths for each package. Package monitoring tools can alleviate manually having to monitor packages for updates by notifying you about available updates or a potential security vulnerability. It can even auto-magically update packages for you based on <a href="http://developer.telerik.com/featured/mystical-magical-semver-ranges-used-npm-bower/">semver</a> configurations. At the very least, a package monitoring solution can help you speed up the process of updating dependencies by simply keeping you informed.</p> 
      <p>A tool like <a href="https://gemnasium.com/">gemnasium</a> can monitor both your npm package.json file as well as your bower.json file. Below is an example gemnasium dashboard for the <a href="https://github.com/telerik/kendo-ui-core/blob/master/package.json">package.json file</a> used on the <a href="https://github.com/telerik/kendo-ui-core">kendo-ui-core GitHub project</a>.</p> 
      <p><img src="http://developer.telerik.com/wp-content/uploads/2014/10/gemnasium_dashboard.jpg" alt=""></p> 
      <h2>Step 15. Select a JavaScript error monitoring solution</h2> 
      <p>A JavaScript error monitoring tool needs to be selected to capture run-time errors occurring in staging and production code. Typically, this monitoring tool is not used on development code. Pick one, use it. Below, I am showing an example of the degree of detail provided for a JavaScript runtime with the <a href="https://www.getsentry.com">Sentry</a> solution.</p> 
      <p><img src="http://codylindley.com/spotlight-front-end/images/sentry-screenshot_cc43d4ecfc5563b75ce762d0e92ade69b8d6d5c3.png" alt=""></p> 
      <p>This step is probably the most commonly skipped stepped in building JavaScript applications. Dont overlook capturing run time errors!</p> 
      <h2>Step 16. Select a performance monitoring solution</h2> 
      <p>Lastly, the monitoring and measurement of the uptime and performance of your application should consistently be on your mind. Use something like <a href="https://www.pingdom.com/">Pingdom</a> to capture uptime and performance stats. I particularly like the alerting and reporting capabilities of these types of tools. Its like having a team of robots monitoring your uptime and performance every second of the day, then providing detailed reports as often as youd like.</p> 
      <h2>Conclusion</h2> 
      <p>In conclusion, I want to ask and answer the question, Why follow any of these steps when planning a front-end application?.</p> 
      <p>The entire goal of writing software should be to create something that can last. We plan out applications so that they are properly documented, tested, scalable, and monitored. This leads to software systems that are resistant to the effects of overwhelming code debt, spaghetti code, and consistently having to be burned down and built back up.</p> 
      <p>By providing these steps I am not suggesting that you should dogmatically follow each step or use each tool/solution/example I showcased in the step. The tools/solutions/examples (e.g. AngularJS) found in each step are given so that you can get the general context of the decision made in the step. If you take away anything from this article, it should be the category of decisions made in the step, not a specific tool/solution/example present in the step.</p> 
      <p>If you think Ive missed anything major (like maybe code reviews), let me know in the comments.</p> 
      <p>If youd like more content to chew on when planning a front-end JavaScript application, I recommend the following resources:</p> 
      <p><strong>API first:</strong></p> 
      <p><a href="http://www.api-first.com/">http://www.api-first.com/</a><br> <a href="http://benbrignell.com/blog/2012/11/api-first-design-approach/">API-first Design Approach</a><br> <a href="https://ajnyc.wordpress.com/2012/12/06/apis-first/">APIS FIRST</a><br> <a href="http://blog.mashape.com/three-ways-api-first-development-is-the-future-of-web/">Three Ways API-First Development is the Future of Web Development</a></p> 
      <p><strong>Building JS Apps:</strong></p> 
      <p><a href="http://www.html5rocks.com/webappfieldguide/toc/index/">Field Guide to Web Applications</a><br> <a href="http://read.humanjavascript.com/ch00-foreword.html">Human Javascript</a><br> <a href="http://pragmatic-backbone.com/overview-and-bullshit-dispelling">Overview and bullshit-dispelling</a><br> <a href="http://chimera.labs.oreilly.com/books/1234000000262">Programming JavaScript Applications</a><br> <a href="http://www.bevacqua.io/buildfirst">JavaScript Application Design  A Build First Approach</a></p> 
     </div> 
     <div class="Article-NextPrev"> 
      <div class="row"> 
       <div class="col-2"> 
        <a href="https://developer.telerik.com/featured/polyfilling-doesnt-difficult/" class="Article-Prev"> <img src="https://developer.telerik.com/wp-content/themes/tdnv2/assets/img/arrow-left.png"> <h6>Prev</h6> <span>Polyfilling Doesn't Have to be Difficult</span> </a> 
       </div> 
       <div class="col-2"> 
        <a href="https://developer.telerik.com/featured/powering-hybrid-mobile-apps-couchbase/" class="Article-Next"> <img src="https://developer.telerik.com/wp-content/themes/tdnv2/assets/img/arrow-right.png"> <h6>Next</h6> <span>Powering Hybrid Mobile Apps with Couchbase</span> </a> 
       </div> 
      </div> 
     </div> 
     <div class="Article-AuthorBox"> 
      <img src="https://developer.telerik.com/wp-content/uploads/userphoto/241.png" alt="Cody Lindley" width="136" height="150" class="avatar"> 
      <a href="https://developer.telerik.com/author/clindley/" class="author">Cody Lindley</a>
      <br> Cody Lindley is a 
      <a href="http://frontenddeveloperjob.com/what-is-a-front-end-developer/">front-end developer</a> working as a developer advocate for Telerik focused on the 
      <a href="http://www.telerik.com/kendo-ui">Kendo UI tools</a>.
      <!--more--> He lives in Boise, ID with his wife and three children. You can read more about Cody on 
      <a href="http://www.codylindley.com">his site</a> or follow him on Twitter at 
      <a href="https://twitter.com/codylindley">@codylindley</a>. 
     </div> 
     <h3 class="above-list">Comments</h3> 
     <div id="disqus_thread"> 
      <div id="dsq-content"> 
       <ul id="dsq-comments"> 
        <li class="comment even thread-even depth-1" id="dsq-comment-8571"> 
         <div id="dsq-comment-header-8571" class="dsq-comment-header"> 
          <cite id="dsq-cite-8571"> <span id="dsq-author-user-8571">trisys</span> </cite> 
         </div> 
         <div id="dsq-comment-body-8571" class="dsq-comment-body"> 
          <div id="dsq-comment-message-8571" class="dsq-comment-message">
           <p>You forgot number zero: come up with a great product/service idea, that you know will be worth developing because it will solve a real problem or more for a real customer who will be willing to pay for your product/service. Everything else is irrelevant if you get this wrong.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-8591"> 
           <div id="dsq-comment-header-8591" class="dsq-comment-header"> 
            <cite id="dsq-cite-8591"> <a id="dsq-author-user-8591" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-8591" class="dsq-comment-body"> 
            <div id="dsq-comment-message-8591" class="dsq-comment-message">
             <p>Agreed. Planning is pointless without a concept. I assumed a concept, otherwise why plan to build.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-3" id="dsq-comment-8601"> 
             <div id="dsq-comment-header-8601" class="dsq-comment-header"> 
              <cite id="dsq-cite-8601"> <span id="dsq-author-user-8601">trisys</span> </cite> 
             </div> 
             <div id="dsq-comment-body-8601" class="dsq-comment-body"> 
              <div id="dsq-comment-message-8601" class="dsq-comment-message">
               <p>Because we developers are tempted by the cool tools from vendors like Telerik, and often end up building apps without really thinking through how long it actually takes, even with careful planning as you have outlined, or for that matter how much time and money is involved in selling, marketing and maintaining such an app. Anyway, great article, thanks for posting. All I need now is a great idea</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment odd alt depth-4" id="dsq-comment-8611"> 
               <div id="dsq-comment-header-8611" class="dsq-comment-header"> 
                <cite id="dsq-cite-8611"> <a id="dsq-author-user-8611" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
               </div> 
               <div id="dsq-comment-body-8611" class="dsq-comment-body"> 
                <div id="dsq-comment-message-8611" class="dsq-comment-message">
                 <p>Thanks. I hope you find a winner.</p> 
                </div> 
               </div> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment even depth-2" id="dsq-comment-8621"> 
           <div id="dsq-comment-header-8621" class="dsq-comment-header"> 
            <cite id="dsq-cite-8621"> <span id="dsq-author-user-8621">mariomeyrelles</span> </cite> 
           </div> 
           <div id="dsq-comment-body-8621" class="dsq-comment-body"> 
            <div id="dsq-comment-message-8621" class="dsq-comment-message">
             <p>Good point. Assuming that your idea is worth doing, this document is a very good reading ?</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
          <li class="comment odd alt depth-2" id="dsq-comment-9011"> 
           <div id="dsq-comment-header-9011" class="dsq-comment-header"> 
            <cite id="dsq-cite-9011"> <a id="dsq-author-user-9011" href="http://www.impressivewebs.com/" target="_blank" rel="nofollow">Louis Lazaris</a> </cite> 
           </div> 
           <div id="dsq-comment-body-9011" class="dsq-comment-body"> 
            <div id="dsq-comment-message-9011" class="dsq-comment-message">
             <p>Why would this comment even be necessary or relevant? And why did anyone upvote it? This is not a post about startup ideas. Its an article about JS app development.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-3" id="dsq-comment-9041"> 
             <div id="dsq-comment-header-9041" class="dsq-comment-header"> 
              <cite id="dsq-cite-9041"> <span id="dsq-author-user-9041">trisys</span> </cite> 
             </div> 
             <div id="dsq-comment-body-9041" class="dsq-comment-body"> 
              <div id="dsq-comment-message-9041" class="dsq-comment-message">
               <p>Because the article is about PLANNING  so you say my comment is not relevant to planning? Many people who read these types of articles do get a rather one-sided, tech-only bias. My point was that the tools are not the only thing you need to be thinking about when planning a front-end javascript application.</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment odd alt depth-4" id="dsq-comment-9141"> 
               <div id="dsq-comment-header-9141" class="dsq-comment-header"> 
                <cite id="dsq-cite-9141"> <a id="dsq-author-user-9141" href="http://www.impressivewebs.com/" target="_blank" rel="nofollow">Louis Lazaris</a> </cite> 
               </div> 
               <div id="dsq-comment-body-9141" class="dsq-comment-body"> 
                <div id="dsq-comment-message-9141" class="dsq-comment-message">
                 <p>Hey, sorry if I sounded snippy! ? I didnt mean to, it just seemed ridiculous that yours was the top comment.</p> 
                 <p>I mean, its kind of like saying You need electricity in your office to write JavaScript. Well duh.</p> 
                 <p>As Cody mentioned, he assumed a concept. Like we we all do when we write tutorials and articles on code. Thats how it is.</p> 
                 <p>And besides, since when are developers required to come up with the ideas? A client gives you an idea, then you do what Cody recommends. This is about code planning, not product planning.</p> 
                </div> 
               </div> 
               <ul class="children"> 
                <li class="comment even depth-5" id="dsq-comment-9143"> 
                 <div id="dsq-comment-header-9143" class="dsq-comment-header"> 
                  <cite id="dsq-cite-9143"> <span id="dsq-author-user-9143">trisys</span> </cite> 
                 </div> 
                 <div id="dsq-comment-body-9143" class="dsq-comment-body"> 
                  <div id="dsq-comment-message-9143" class="dsq-comment-message">
                   <p>Thats OK  its a forum for the community  we are all entitled to our say, right?</p> 
                  </div> 
                 </div> </li>
                <!-- #comment-## --> 
                <li class="comment odd alt depth-5" id="dsq-comment-9211"> 
                 <div id="dsq-comment-header-9211" class="dsq-comment-header"> 
                  <cite id="dsq-cite-9211"> <a id="dsq-author-user-9211" href="http://jasonrundell.com/" target="_blank" rel="nofollow">Jason Rundell</a> </cite> 
                 </div> 
                 <div id="dsq-comment-body-9211" class="dsq-comment-body"> 
                  <div id="dsq-comment-message-9211" class="dsq-comment-message">
                   <p>Louis, I agree, it seems obvious, and management/product folks wont read this article, but for us technical folks who actually do the building, it is a BIG RED FLAG if the product requirements and goals are not even clear to the product team.</p> 
                  </div> 
                 </div> </li>
                <!-- #comment-## --> 
               </ul>
               <!-- .children --> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://www.alvinashcraft.com/2014/12/11/dew-drop-december-11-2014-1913/" rel="external nofollow" class="url">Dew Drop  December 11, 2014 (#1913) | Morning Dew</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-8631"> 
         <div id="dsq-comment-header-8631" class="dsq-comment-header"> 
          <cite id="dsq-cite-8631"> <a id="dsq-author-user-8631" href="http://christianalfoni.com/" target="_blank" rel="nofollow">Christian Alfoni Jørgensen</a> </cite> 
         </div> 
         <div id="dsq-comment-body-8631" class="dsq-comment-body"> 
          <div id="dsq-comment-message-8631" class="dsq-comment-message">
           <p>Great article! This made me think about a huge project I was working on where we discovered a lot of these needs a long the way. We even changed strategies a long the way. NOT a good idea. This is a great reminder of what it actually takes to produce a complex business application with a large team.</p> 
           <p>There is one thing that differs in my experience though and that is defining an API. Very often you have no idea what you are going to build, you only have abstract features. It is when you start designing and implementing you see what data you need and how that data should be structured. It is also a lot easier for the customer to give feedback on frontend implementations than APIs. Often the customers think they want something, but when it is implemented it is not what they wanted at all. And now you have put all this effort into building an API that does not fit what the customer actually wanted.</p> 
           <p>I have had great success with using Node JS as a middleend. Let the frontend team create the API they need as they implement the frontend. They can even implement simple behavior like paging, search etc. to get a feeling of how the frontend should work. When the API is set and backend implements it, Node JS can proxy requests to the actual backend API, while still allowing for adding new not yet implemented APIs to play around with. It makes the frontend team extremely productive.</p> 
           <p>Experiences and projects differs of course. I have often met really bad specs, which might be the reason we used this strategy instead. Anyways, just wanted to share that experience ?</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-8651"> 
           <div id="dsq-comment-header-8651" class="dsq-comment-header"> 
            <cite id="dsq-cite-8651"> <a id="dsq-author-user-8651" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-8651" class="dsq-comment-body"> 
            <div id="dsq-comment-message-8651" class="dsq-comment-message">
             <p>Thank you for the comment. And great point. Not every problem lends itself to a strict API first development process. But Id strongly suggest considering the value of forcing API first dev. The upside (code parity, speed etc..) , is worth the upfront pain and Id rather feel the hurt upfront than deal with lingering production code that has differing data source layers because of evolutions in the API. </p> 
             <p>Your example hints at the value of abstracting the touch point between writing front-end data layers and the API interface. If an API needs to be forged with code (i.e. you dont know yet the data you need), that should be prototype code IMO. Once the API is stable, because of prototyping, the prototype code is dispensed and the stable API is used to craft the app. This pattern will end in a longer lasting data layer in you application because you have removed the code that attempts to stay in sync with the evolution/changes of the API. Now, this can of course occur simultaneously (actually, this is the norm) as your write code meant for production. But in my experience that code under goes so much change because the API interface is in flux, the end result is messy code which could have been avoided if the API is documented, tested, and stable before you write production code. I actually think, a highly skilled API developer can write all the rules for an API without any domain or business logic details. This is mostly patterns and best practices that are documented and enforced. Which is more than half the battle IMO.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
          <li class="comment even depth-2" id="dsq-comment-9221"> 
           <div id="dsq-comment-header-9221" class="dsq-comment-header"> 
            <cite id="dsq-cite-9221"> <a id="dsq-author-user-9221" href="http://jasonrundell.com/" target="_blank" rel="nofollow">Jason Rundell</a> </cite> 
           </div> 
           <div id="dsq-comment-body-9221" class="dsq-comment-body"> 
            <div id="dsq-comment-message-9221" class="dsq-comment-message">
             <p>There is one thing that differs in my experience though and that is defining an API. Very often you have no idea what you are going to build, you only have abstract features.<br> Big red flag. You should probably not create a single line of code until features are no longer abstract and are concrete requirement documents, signed off by client, and frozen for development to begin.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-3" id="dsq-comment-9281"> 
             <div id="dsq-comment-header-9281" class="dsq-comment-header"> 
              <cite id="dsq-cite-9281"> <a id="dsq-author-user-9281" href="http://christianalfoni.com/" target="_blank" rel="nofollow">Christian Alfoni Jørgensen</a> </cite> 
             </div> 
             <div id="dsq-comment-body-9281" class="dsq-comment-body"> 
              <div id="dsq-comment-message-9281" class="dsq-comment-message">
               <p>I absolutely agree, but getting your customer to pay you to challenge their specification and not approve it until you as a developer is satisfied could make that customer go to someone else.</p> 
               <p>That is why I went out of the consultant business and to in-house development. How are you going to deliver something when you are not allowed to talk to end users and the customer thinks that ordering a huge web project is like paying someone to put together an IKEA furniture? ?</p> 
               <p>I think I am traumatized hehe</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-8641"> 
         <div id="dsq-comment-header-8641" class="dsq-comment-header"> 
          <cite id="dsq-cite-8641"> <span id="dsq-author-user-8641">Francesco Pipita</span> </cite> 
         </div> 
         <div id="dsq-comment-body-8641" class="dsq-comment-body"> 
          <div id="dsq-comment-message-8641" class="dsq-comment-message">
           <p>This article was simply illuminating ? Thank you so much for sharing it!</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-8661"> 
           <div id="dsq-comment-header-8661" class="dsq-comment-header"> 
            <cite id="dsq-cite-8661"> <a id="dsq-author-user-8661" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-8661" class="dsq-comment-body"> 
            <div id="dsq-comment-message-8661" class="dsq-comment-message">
             <p>Thanks. Your welcome.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-3" id="dsq-comment-9541"> 
             <div id="dsq-comment-header-9541" class="dsq-comment-header"> 
              <cite id="dsq-cite-9541"> <a id="dsq-author-user-9541" href="http://dandascalescu.com/" target="_blank" rel="nofollow">Dan Dascalescu</a> </cite> 
             </div> 
             <div id="dsq-comment-body-9541" class="dsq-comment-body"> 
              <div id="dsq-comment-message-9541" class="dsq-comment-message">
               <p>Some other typos: during CI process (during <i>the</i>), tasking tool facilitate all this</p> 
               <p>Useful tool category to add: uptime insurance. Here, <a href="https://github.com/Unitech/pm2" rel="nofollow">pm2 has been </a><a href="http://devo.ps/blog/goodbye-node-forever-hello-pm2/" rel="nofollow">replacing forever</a>.</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://blog.cwa.me.uk/2014/12/12/the-morning-brew-1757/" rel="external nofollow" class="url">The Morning Brew - Chris Alcock » The Morning Brew #1757</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://www.klauskorner.com/2014/12/12/in-the-news-2014-12-12/" rel="external nofollow" class="url">In the News: 2014-12-12 | Klaus' Korner</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-8771"> 
         <div id="dsq-comment-header-8771" class="dsq-comment-header"> 
          <cite id="dsq-cite-8771"> <span id="dsq-author-user-8771">limptwiglet</span> </cite> 
         </div> 
         <div id="dsq-comment-body-8771" class="dsq-comment-body"> 
          <div id="dsq-comment-message-8771" class="dsq-comment-message">
           <p>Your statement about testing I feel is quite bad and goes against what good testing really is about. The quality of your tests is far far more important than the fact that you have tests. Bad tests can mislead, waste time and give you a false sense of security.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-8781"> 
           <div id="dsq-comment-header-8781" class="dsq-comment-header"> 
            <cite id="dsq-cite-8781"> <a id="dsq-author-user-8781" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-8781" class="dsq-comment-body"> 
            <div id="dsq-comment-message-8781" class="dsq-comment-message">
             <p>I would agree that quality matters. If you have tests they should be quality. I was not speaking to quality in my statement, I was speaking to testing methodologies that are subjective. A lot of developers get hung up on style, instead of just picking a styling and focusing on quality. So, yes, quality trumps simply checking a box. But stalling on having any tests is not an option. Which is sort of my point. Test and produce high quality tests. However, not everyones opinion of what should be test or how it should be test are the same.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-even depth-1" id="dsq-comment-8791"> 
         <div id="dsq-comment-header-8791" class="dsq-comment-header"> 
          <cite id="dsq-cite-8791"> <span id="dsq-author-user-8791">Benjamin Solum</span> </cite> 
         </div> 
         <div id="dsq-comment-body-8791" class="dsq-comment-body"> 
          <div id="dsq-comment-message-8791" class="dsq-comment-message">
           <p>I felt like everything was right on target, except for your comments on RWD, though we agree that an application should be built to the needs of the users. Hopefully this doesnt come across as too dogmatic, but I think we need to go where the users are. Monitor traffic. Do A/B testing. How do people want to use this app? </p> 
           <p>Many of our users (students) want mobile device support, so its our job to figure out how to do that correctly. RWD shouldnt be an automatic assumption or requirement as it does add complexity, but we shouldnt ignore our our small (or LARGE) screen brethren if thats where our users live.</p> 
           <p>Really solid article, thanks for sharing man!</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-8861"> 
           <div id="dsq-comment-header-8861" class="dsq-comment-header"> 
            <cite id="dsq-cite-8861"> <a id="dsq-author-user-8861" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-8861" class="dsq-comment-body"> 
            <div id="dsq-comment-message-8861" class="dsq-comment-message">
             <p>Thanks. Yes. Many will disagree with me. To these people I request the example to follow. I want a poster child to point to that actually, actualizes the concept of a RWD application. After all, if a RWD app was the best thing for a user, why isnt the gmail application the same app (but using RWD) across all devices? Surely, Google, with its fast resources could make this happen. Yet, this does not seem to be the case. I have to question to some degree if the idea of RWD applications is actually the best thing for the user (context applications not websites). Today, based on what we see in the wild, whats best for the user seems to be building an interface optimize to the device. Can we blur the lines between website and app, and force RWD. Sure. Can this be the best thing for the user. Maybe (only for very simple user interactions). Im more interested in a standard way of solving a problem, which in most cases is a best practice. As of yet, Ive not seen example(s) that would lead me to believe that we should build applications which contain/manage application code for several different devices.</p> 
             <p>But Benjamin, I know that my opinion is contentious. Im glad not everyone will agree with me. This might help me better understand the degree to which I am wrong.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-3" id="dsq-comment-9551"> 
             <div id="dsq-comment-header-9551" class="dsq-comment-header"> 
              <cite id="dsq-cite-9551"> <a id="dsq-author-user-9551" href="http://dandascalescu.com/" target="_blank" rel="nofollow">Dan Dascalescu</a> </cite> 
             </div> 
             <div id="dsq-comment-body-9551" class="dsq-comment-body"> 
              <div id="dsq-comment-message-9551" class="dsq-comment-message">
               <p>Meteor makes it <a href="http://www.meteorpedia.com/read/Why_Meteor#mobile-support" rel="nofollow">trivial to build mobile apps out of the same code base</a>. Thus a call to Camera.getPicture() will work the same way in Chrome, on Android or on iOS.</p> 
               <p>You still have the responsiveness design problem, of course, which frameworks like Bootstrap or Foundation can solve to some extent.</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-8811"> 
         <div id="dsq-comment-header-8811" class="dsq-comment-header"> 
          <cite id="dsq-cite-8811"> <span id="dsq-author-user-8811">Dan</span> </cite> 
         </div> 
         <div id="dsq-comment-body-8811" class="dsq-comment-body"> 
          <div id="dsq-comment-message-8811" class="dsq-comment-message">
           <p>Great article. As someone recently tasked with developing a front-end architecture for a client, this article came just at the right time. Many thanks!</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-9001"> 
           <div id="dsq-comment-header-9001" class="dsq-comment-header"> 
            <cite id="dsq-cite-9001"> <a id="dsq-author-user-9001" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-9001" class="dsq-comment-body"> 
            <div id="dsq-comment-message-9001" class="dsq-comment-message">
             <p>Welcome. Thrilled people are finding this helpful.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-8881"> 
         <div id="dsq-comment-header-8881" class="dsq-comment-header"> 
          <cite id="dsq-cite-8881"> <span id="dsq-author-user-8881">Miguel Lattuada</span> </cite> 
         </div> 
         <div id="dsq-comment-body-8881" class="dsq-comment-body"> 
          <div id="dsq-comment-message-8881" class="dsq-comment-message">
           <p>I cant event think about how much resources I took from just one article. Thanks Cody, you made my weekend. Awesome.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-8981"> 
           <div id="dsq-comment-header-8981" class="dsq-comment-header"> 
            <cite id="dsq-cite-8981"> <a id="dsq-author-user-8981" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-8981" class="dsq-comment-body"> 
            <div id="dsq-comment-message-8981" class="dsq-comment-message">
             <p>Welcome. I do aim to help. ?</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-8893"> 
         <div id="dsq-comment-header-8893" class="dsq-comment-header"> 
          <cite id="dsq-cite-8893"> <span id="dsq-author-user-8893">Kiran Adimatyam</span> </cite> 
         </div> 
         <div id="dsq-comment-body-8893" class="dsq-comment-body"> 
          <div id="dsq-comment-message-8893" class="dsq-comment-message">
           <p>wonderful article. I just pushed our team to include the testing tools and Plato is being put to use. Thanks again.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-8991"> 
           <div id="dsq-comment-header-8991" class="dsq-comment-header"> 
            <cite id="dsq-cite-8991"> <a id="dsq-author-user-8991" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-8991" class="dsq-comment-body"> 
            <div id="dsq-comment-message-8991" class="dsq-comment-message">
             <p>Nice. I find that simple knowledge of the tool offering itself is often the only limitation to gaining value from its use.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-9061"> 
         <div id="dsq-comment-header-9061" class="dsq-comment-header"> 
          <cite id="dsq-cite-9061"> <span id="dsq-author-user-9061">Paul Guz</span> </cite> 
         </div> 
         <div id="dsq-comment-body-9061" class="dsq-comment-body"> 
          <div id="dsq-comment-message-9061" class="dsq-comment-message">
           <p>Good article, thanks. You say that you should never use the same API for development and production. Can you please elaborate on that?</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-9071"> 
           <div id="dsq-comment-header-9071" class="dsq-comment-header"> 
            <cite id="dsq-cite-9071"> <a id="dsq-author-user-9071" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-9071" class="dsq-comment-body"> 
            <div id="dsq-comment-message-9071" class="dsq-comment-message">
             <p>To clarify, its identical just not the exact same source. One is for development and one is for production, but as identical as possible in consideration of development changes. Make sense?</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-3" id="dsq-comment-9081"> 
             <div id="dsq-comment-header-9081" class="dsq-comment-header"> 
              <cite id="dsq-cite-9081"> <span id="dsq-author-user-9081">Paul Guz</span> </cite> 
             </div> 
             <div id="dsq-comment-body-9081" class="dsq-comment-body"> 
              <div id="dsq-comment-message-9081" class="dsq-comment-message">
               <p>Right, I think you mean dont work against your production data whilst developing? Yes, thats common sense.</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment odd alt depth-4" id="dsq-comment-9091"> 
               <div id="dsq-comment-header-9091" class="dsq-comment-header"> 
                <cite id="dsq-cite-9091"> <a id="dsq-author-user-9091" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
               </div> 
               <div id="dsq-comment-body-9091" class="dsq-comment-body"> 
                <div id="dsq-comment-message-9091" class="dsq-comment-message">
                 <p>Yes. Except, not everyones common sense is the same. ?</p> 
                </div> 
               </div> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9111"> 
         <div id="dsq-comment-header-9111" class="dsq-comment-header"> 
          <cite id="dsq-cite-9111"> <span id="dsq-author-user-9111">sudeep</span> </cite> 
         </div> 
         <div id="dsq-comment-body-9111" class="dsq-comment-body"> 
          <div id="dsq-comment-message-9111" class="dsq-comment-message">
           <p>Thanks for Good blog post it will help a lot for New JS dev cheers!!!</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-9531"> 
           <div id="dsq-comment-header-9531" class="dsq-comment-header"> 
            <cite id="dsq-cite-9531"> <a id="dsq-author-user-9531" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-9531" class="dsq-comment-body"> 
            <div id="dsq-comment-message-9531" class="dsq-comment-message">
             <p>Welcome. Im Glad.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-9341"> 
         <div id="dsq-comment-header-9341" class="dsq-comment-header"> 
          <cite id="dsq-cite-9341"> <span id="dsq-author-user-9341">Daniel Tseng</span> </cite> 
         </div> 
         <div id="dsq-comment-body-9341" class="dsq-comment-body"> 
          <div id="dsq-comment-message-9341" class="dsq-comment-message">
           <p>Nice article! Thanks for your sharing.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-9521"> 
           <div id="dsq-comment-header-9521" class="dsq-comment-header"> 
            <cite id="dsq-cite-9521"> <a id="dsq-author-user-9521" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-9521" class="dsq-comment-body"> 
            <div id="dsq-comment-message-9521" class="dsq-comment-message">
             <p>thanks.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9401"> 
         <div id="dsq-comment-header-9401" class="dsq-comment-header"> 
          <cite id="dsq-cite-9401"> <a id="dsq-author-user-9401" href="http://tracker1.info/" target="_blank" rel="nofollow">Tracker1</a> </cite> 
         </div> 
         <div id="dsq-comment-body-9401" class="dsq-comment-body"> 
          <div id="dsq-comment-message-9401" class="dsq-comment-message">
           <p>Just a couple comments </p> 
           <p>Ive been sticking to just npm instead of npm + bower bower needs npm, and most bower modules are in npm anyway. Its redundancy without much gain yeah, you have to copy from node_modules/dep/dist/foo.js instead of bowerdir/dep/dep.js  but its not much harder in the end and it lends itself to tooling like browserify. </p> 
           <p>Ive been doing more in React lately, and with some additional tooling RWD (even from the server) isnt so hard On the server, I use either a cookie, or basic user-agent sniffing to break down requests to the bootstrap sizes (xs, sm, md, no large detection default to md) Its not too bad to detect most phones (xs), then tablet OSes (sm) falling back to md for everyone else. Most of the responsive bits break into two camps xs/sm (using CSS) and and md/lg (using css) </p> 
           <p>With this detection in place, the rendering will use one of two different view paths for each control the larger or smaller set with tweaks via css. With React (flux) I can use the same rendering logic client and server-side. Its pretty cool.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-9511"> 
           <div id="dsq-comment-header-9511" class="dsq-comment-header"> 
            <cite id="dsq-cite-9511"> <a id="dsq-author-user-9511" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-9511" class="dsq-comment-body"> 
            <div id="dsq-comment-message-9511" class="dsq-comment-message">
             <p>I agree that depending upon your content RWD is simple. But what is assumed is that you want to morph the UI not replace it. Im advocating that for each device most people choose to replace the entire UI to match the best user experience/interaction. This complete change in the UI for multiple devices can become a rather complex system to deal with. This is why you really dont see this in the wild. For example, is there one application on your phone that you use all the time that is a RWD app (same system used on desktop)? If so, please share, as I am looking for use cases to study.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://robesimpson.me/2014/12/17/water-cooler-web-dev-talk-show-7/" rel="external nofollow" class="url">Water Cooler Web Dev Talk  Show #7 | Rob Simpson</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-9441"> 
         <div id="dsq-comment-header-9441" class="dsq-comment-header"> 
          <cite id="dsq-cite-9441"> <span id="dsq-author-user-9441">John Reading</span> </cite> 
         </div> 
         <div id="dsq-comment-body-9441" class="dsq-comment-body"> 
          <div id="dsq-comment-message-9441" class="dsq-comment-message">
           <p>Good read, but like others, I dont think Rwd should be discarded just because: Constructing a single code base that can meet the needs of users on multiple devices is simply too problematic on too many fronts. <br> While dedicated mobile app might make sense in for a myriad of reasons, a Web app that can accommodate a plethora of devices is a no brainer. Its not THAT hard</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-9501"> 
           <div id="dsq-comment-header-9501" class="dsq-comment-header"> 
            <cite id="dsq-cite-9501"> <a id="dsq-author-user-9501" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-9501" class="dsq-comment-body"> 
            <div id="dsq-comment-message-9501" class="dsq-comment-message">
             <p>Can you please provide me an example of a complex RWD web app? One code base, all devices. Ive been trying to find a really good use case that is not trivial display data.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://blog.founddrama.net/2014/12/more-than-just-picking-a-few-js-solutions/" rel="external nofollow" class="url">more than just picking a few JavaScript solutions | found drama</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9811"> 
         <div id="dsq-comment-header-9811" class="dsq-comment-header"> 
          <cite id="dsq-cite-9811"> <a id="dsq-author-user-9811" href="http://www.clibu.com" target="_blank" rel="nofollow">nevf</a> </cite> 
         </div> 
         <div id="dsq-comment-body-9811" class="dsq-comment-body"> 
          <div id="dsq-comment-message-9811" class="dsq-comment-message">
           <p>Cody, thanks for putting the time and effort into this. Lots of very useful and actionable content which I would have gladly had a few years back when I started my rather complex current web app, Clibu. unhosted in particular is a great find, which Im eager to dig into.</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-even depth-1" id="dsq-comment-9841"> 
         <div id="dsq-comment-header-9841" class="dsq-comment-header"> 
          <cite id="dsq-cite-9841"> <a id="dsq-author-user-9841" href="http://www.habdas.org/" target="_blank" rel="nofollow">Josh Habdas</a> </cite> 
         </div> 
         <div id="dsq-comment-body-9841" class="dsq-comment-body"> 
          <div id="dsq-comment-message-9841" class="dsq-comment-message">
           <p>Nice round-up, Cody. The steps provided are a good outline for individuals looking to scale up an enterprise web application. As far as package managers are concerned, <a href="http://jspm.io/" rel="nofollow">JSPM</a> feels to be a worthwhile mention. And those looking to start small can basically skip a lot of these steps, clone a <a href="http://brunch.io/skeletons.html" rel="nofollow">Brunch skeleton</a> and get right down to business. In my experience Ive found building something gets people excited and the rest of the things tend to fall in place as the apps come together.</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-10371"> 
         <div id="dsq-comment-header-10371" class="dsq-comment-header"> 
          <cite id="dsq-cite-10371"> <span id="dsq-author-user-10371">Andrea Rinaldi</span> </cite> 
         </div> 
         <div id="dsq-comment-body-10371" class="dsq-comment-body"> 
          <div id="dsq-comment-message-10371" class="dsq-comment-message">
           <p>I think you wrote an awesome article. Im starting to work on complex and challenging web applications and your post will surely help me. Thanks man!</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-even depth-1" id="dsq-comment-13051"> 
         <div id="dsq-comment-header-13051" class="dsq-comment-header"> 
          <cite id="dsq-cite-13051"> <span id="dsq-author-user-13051">hmd</span> </cite> 
         </div> 
         <div id="dsq-comment-body-13051" class="dsq-comment-body"> 
          <div id="dsq-comment-message-13051" class="dsq-comment-message">
           <p>Great Efforts put in.! Awesome..!! It discover lot of tools and services. A Professional Guide.</p> 
           <p>Really Appreciated..!!</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-14241"> 
         <div id="dsq-comment-header-14241" class="dsq-comment-header"> 
          <cite id="dsq-cite-14241"> <span id="dsq-author-user-14241">Brian Martin</span> </cite> 
         </div> 
         <div id="dsq-comment-body-14241" class="dsq-comment-body"> 
          <div id="dsq-comment-message-14241" class="dsq-comment-message">
           <p>Hey first off, love this article. I really wish I read this 2 years ago before I started on a very confusing road of trying to understand what JS or API, etc. even meant. Now Im way more grounded and ready to go. Had a few quick questions.</p> 
           <p>API first is a great concept dont most people just choose a trendy API and just stick with it? Is there a bootstrap of the APIs that everyone ends up using? I guess I just thought I would grab a popular API and just push my site through that.</p> 
           <p>Second question: what are your thoughts on Ionic as a framework for Angular? Im having trouble understanding how many UI libraries I need to dig through to get good, unique results.</p> 
           <p>Thanks Cody, youre doing great work, dont forget that. This type of knowledge is indispensable and Im pretty surprised this isnt front page Google territory!</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://dexpage.com/what-are-alternatives-to-extjs/" rel="external nofollow" class="url">What are alternatives to ExtJS? - DexPage</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://www.brianpchsu.com/great-article-on-how-to-plan-a-front-end-javascript-application/" rel="external nofollow" class="url">Great article on how to plan a front-end JavaScript application | Brian Hsu</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://askandans.cloverink.com/what-are-alternatives-to-extjs/" rel="external nofollow" class="url">What are alternatives to ExtJS? | ASK AND ANSWER</a>()</p> </li> 
        <!-- #comment-## --> 
       </ul> 
      </div> 
     </div> 
     <script type="text/javascript">
var disqus_url = 'https://developer.telerik.com/featured/planning-front-end-javascript-application/';
var disqus_identifier = '24601 http://developer.telerik.com/?p=24601';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'telerikdev';
var disqus_title = "Planning A Front-end JavaScript Application";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=24601';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script> 
    </div> 
    <div class="col-1"> 
     <div class="Content-sidebar"> 
      <div id="banner" style="text-align:center;margin-bottom: 20px;"> 
       <div class="widget">
        <div id="CMACWidget">
         <a href="http://www.telerik.com/campaigns/october-2017-release-webinar?utm_medium=cpm-owned&amp;utm_source=tdn&amp;utm_campaign=devcraft-webinar-r3oct17" data-href="http://www.telerik.com/campaigns/october-2017-release-webinar?utm_medium=cpm-owned&amp;utm_source=tdn&amp;utm_campaign=devcraft-webinar-r3oct17" banner_id="1364" class="acc_banner_linkad29ac31277203468caf059fe2aad393 "><img src="https://developer.telerik.com/wp-content/uploads/ac_uploads/974695739.jpg" alt="Telerik UI Tools R3 Release Webinar" title="Telerik UI Tools R3 Release Webinar"></a>
         <script type="text/javascript">
                            jQuery(document).ready(function(){cm_bind_click_bannerad29ac31277203468caf059fe2aad393();cm_init_sliderad29ac31277203468caf059fe2aad393();
                            });
                          </script>
         <script type="text/javascript">
            function cm_bind_click_bannerad29ac31277203468caf059fe2aad393(){
                    var currentEl = jQuery(".acc_banner_linkad29ac31277203468caf059fe2aad393");
                    jQuery(currentEl).on("click",function(e){
                            meBannerObject = this;
                            if (meBannerObject.getAttribute("target") == "_blank"){
                            var newWindowObject = window.open("", "_blank");
                            }
                            jQuery.ajax({url: "https://developer.telerik.com/wp-admin/admin-ajax.php?action=acc_trigger_click_event",
                                              type: "post",
                                              async: false,
                                              data: {campaign_id: 21, banner_id: jQuery(this).attr("banner_id")},
                                              complete:
                                                function(){
                                                    var href = meBannerObject.dataset.href;

                                                    if(!href){
                                                        return false;
                                                    }

                                                    if (meBannerObject.getAttribute("target") == "_blank"){
                                                        newWindowObject.location = href;
                                                    }else {
                                                        document.location = meBannerObject.href;
                                                    }
                                                }
                            });
                            e.preventDefault();
                            return false;
                    });
            }function cm_bind_impression_bannerad29ac31277203468caf059fe2aad393(){jQuery.ajax({url: "https://developer.telerik.com/wp-admin/admin-ajax.php?action=acc_trigger_impression_event",
                                            type: "post",
                                            data: {
                                                campaign_id: 21,
                                                banner_id: jQuery(".acc_banner_linkad29ac31277203468caf059fe2aad393").attr("banner_id")
                                            }
                                        });}
                function cm_init_sliderad29ac31277203468caf059fe2aad393(){}</script>
        </div>
       </div> 
      </div> 
      <h4>Telerik Developer Digest</h4> 
      <p class="newsletter-sidebar">Software development articles from the Telerik Developer Network and around the web.</p> 
      <div class="List"> 
       <span id="newsletterNotification"></span> 
       <script>
        jQuery(document).ready(function() {
            var newsletterNotification = jQuery("#newsletterNotification").kendoNotification({
                    autoHideAfter: 0
                }).data("kendoNotification");
            });
    </script> 
       <form method="post" action="https://digest.telerik.com/subscribe"> 
        <input type="hidden" name="redirectTo" value="https://developer.telerik.com/featured/planning-front-end-javascript-application/"> 
        <input type="email" name="email" placeholder="Email"> 
        <input type="submit" value="Sign Up"> 
       </form> 
       <br> 
       <p class="newsletter-sidebar"><a href="https://digest.telerik.com/latest">Click here</a> to sample the latest issue.</p> 
      </div> 
      <h4>Featured Opinions</h4> 
      <div class="List"> 
       <div> 
        <h5><a href="https://developer.telerik.com/category/content-types/opinion/">Opinion</a></h5> 
        <a href="https://developer.telerik.com/content-types/opinion/tech-event-needs-money/">So Your Tech Event Needs Money?</a> 
        <h6>August 15, 2017</h6> 
       </div> 
       <div> 
        <h5><a href="https://developer.telerik.com/category/content-types/podcast/">Podcast</a></h5> 
        <a href="https://developer.telerik.com/content-types/podcast/developer-digest-net-core-nativescript/">Developer Digest .NET Core and NativeScript</a> 
        <h6>July 26, 2017</h6> 
       </div> 
      </div>
      <h4 class="u-pt4">Telerik Announcements</h4> 
      <div class="List"> 
       <div> 
        <!--<img src="http://placehold.it/40x40" class="Thumb" />--> 
        <a href="http://www.telerik.com/blogs/progress-telerik-ui-for-uwp-joins-net-foundation">Progress Telerik UI for UWP Joins the .NET Foundation</a> 
       </div> 
       <div> 
        <!--<img src="http://placehold.it/40x40" class="Thumb" />--> 
        <a href="http://www.telerik.com/blogs/react-and-vue-support-coming-to-kendo-ui">React and Vue Support Coming to Kendo UI</a> 
       </div> 
      </div> 
      <h4>Follow Us</h4> 
      <div class="SocialIcons"> 
       <a href="https://www.facebook.com/Telerik" class="icon-facebook"></a> 
       <a href="https://twitter.com/telerik" class="icon-twitter"></a> 
       <a href="https://plus.google.com/+telerik" class="icon-google"></a> 
       <a href="https://github.com/telerik" class="icon-github"></a> 
       <a href="https://www.linkedin.com/company/telerik" class="icon-linkedin"></a> 
       <a href="http://developer.telerik.com/feed" class="icon-rss"></a> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="Footer"> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-1"> 
      <h4>Browse by Topic</h4> 
      <a href="https://developer.telerik.com/category/topics/net/">.NET</a> 
      <a href="https://developer.telerik.com/category/topics/cloud/">Cloud</a> 
      <a href="https://developer.telerik.com/category/topics/desktop/">Desktop</a> 
      <a href="https://developer.telerik.com/category/topics/iot/">IoT &amp; Bots</a> 
      <a href="https://developer.telerik.com/category/topics/machine-learning/">Machine Learning</a> 
      <a href="https://developer.telerik.com/category/topics/mobile-development/">Mobile</a> 
      <a href="https://developer.telerik.com/category/topics/progress-labs/">Progress Labs</a> 
      <a href="https://developer.telerik.com/category/topics/testing/">Testing</a> 
      <a href="https://developer.telerik.com/category/topics/web-development/">Web</a> 
     </div> 
     <div class="col-1"> 
      <h4>Browse by Content Type</h4> 
      <a href="https://developer.telerik.com/category/content-types/opinion/">Opinion</a> 
      <a href="https://developer.telerik.com/category/content-types/podcast/">Podcast</a> 
      <a href="https://developer.telerik.com/category/content-types/slackchats/">Slack Chats</a> 
      <a href="https://developer.telerik.com/category/content-types/tutorials/">Tutorials</a> 
      <a href="https://developer.telerik.com/category/content-types/video/">Video</a> 
     </div> 
     <div class="col-1 col--offset-1"> 
      <h4>Contact</h4> 
      <ul class="ListClean"> 
       <li><span>USA: </span>+1 888 365 2779</li> 
       <li><span>UK: </span>+44 13 4436 0444</li> 
       <li><span>India: </span>+91 124 4300987</li> 
       <li><span>Bulgaria: </span>+359 2 8099850</li> 
       <li><span>Australia: </span>+61 3 9805 8670</li> 
       <li><a href="mailto:sales@telerik.com">sales@telerik.com</a></li> 
      </ul> 
     </div> 
    </div> 
    <div class="Footer-Info"> 
     <a href="http://www.telerik.com/company/terms-of-use">Terms of Use</a>|
     <a href="http://www.telerik.com/company/feedback">Site Feedback</a>|
     <a href="http://www.telerik.com/company/privacy-policy">Privacy Policy</a> 
     <p>Copyright © , Progress Software Corporation and/or its subsidiaries or affiliates. All Rights Reserved.</p> 
     <p>Progress, Telerik, and certain product names used herein are trademarks or registered trademarks of Progress Software Corporation and/or one of its subsidiaries or affiliates in the U.S. and/or other countries. See <a href="https://www.progress.com/legal/trademarks">Trademarks</a> or appropriate markings.</p> 
    </div> 
   </div> 
  </div> 
  <script type="text/javascript">
var disqus_shortname = 'telerikdev';
/* * * DON'T EDIT BELOW THIS LINE * * */
(function () {
var s = document.createElement('script'); s.async = true;
s.type = 'text/javascript';
s.src = '//' + disqus_shortname + '.disqus.com/count.js';
(document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
}());
</script> 
  <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'telerikdev';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1 && nodes[i].parentNode.tagName == 'A') {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script');
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/jquery/ui/core.min.js?ver=1.11.4"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/jquery/ui/datepicker.min.js?ver=1.11.4"></script> 
  <script type="text/javascript">
jQuery(document).ready(function(jQuery){jQuery.datepicker.setDefaults({"closeText":"Close","currentText":"Today","monthNames":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthNamesShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"nextText":"Next","prevText":"Previous","dayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"dayNamesShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"dayNamesMin":["S","M","T","W","T","F","S"],"dateFormat":"MM d, yy","firstDay":1,"isRTL":false});});
</script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/page-links-to/js/new-tab.min.js?ver=2.9.8"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/uploads/minqueue-cache/minqueue-d6bfbe77-a0e32db9.js"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/prism-wp/libs/prism/plugins/line-numbers/prism-line-numbers.min.js?ver=1.0.0"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/wp-embed.min.js?ver=4.8.2"></script> 
  <script>
window.onload = function() {
    Gifffer();
}
</script>   
 </body>
</html>