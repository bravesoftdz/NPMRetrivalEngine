<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
 <head> 
  <!-- Generated by javadoc on Wed Jun 25 15:27:52 PDT 1997 --> 
  <title>
  Class java.text.NumberFormat
</title> 
 </head> 
 <body> 
  <a name="_top_"></a> 
  <pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.text.html">This Package</a>  <a href="java.text.MessageFormat.html#_top_">Previous</a>  <a href="java.text.ParsePosition.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre> 
  <hr> 
  <h1> Class java.text.NumberFormat </h1> 
  <pre>
<a href="java.lang.Object.html#_top_">java.lang.Object</a>
   |
   +----<a href="java.text.Format.html#_top_">java.text.Format</a>
           |
           +----java.text.NumberFormat
</pre> 
  <hr> 
  <dl> 
   <dt>
     public abstract class 
    <b>NumberFormat</b> 
   </dt>
   <dt>
     extends 
    <a href="java.text.Format.html#_top_">Format</a> 
   </dt>
   <dt>
     implements 
    <a href="java.lang.Cloneable.html#_top_">Cloneable</a> 
   </dt>
  </dl> 
  <code>NumberFormat</code> is the abstract base class for all number formats. This class provides the interface for formatting and parsing numbers. 
  <code>NumberFormat</code> also provides methods for determining which locales have number formats, and what their names are. 
  <p> <code>NumberFormat</code> helps you to format and parse numbers for any locale. Your code can be completely independent of the locale conventions for decimal points, thousands-separators, or even the particular decimal digits used, or whether the number format is even decimal. </p>
  <p> To format a number for the current Locale, use one of the factory class methods: </p>
  <blockquote> 
   <pre>
  myString = NumberFormat.getInstance().format(myNumber);
 </pre> 
  </blockquote> If you are formatting multiple numbers, it is more efficient to get the format and use it multiple times so that the system doesn't have to fetch the information about the local language and country conventions multiple times. 
  <blockquote> 
   <pre>
 NumberFormat nf = NumberFormat.getInstance();
 for (int i = 0; i &lt; a.length; ++i) {
     output.println(nf.format(myNumber[i]) + "; ");
 }
 </pre> 
  </blockquote> To format a number for a different Locale, specify it in the call to 
  <code>getInstance</code>. 
  <blockquote> 
   <pre>
 NumberFormat nf = NumberFormat.getInstance(Locale.FRENCH);
 </pre> 
  </blockquote> You can also use a 
  <code>NumberFormat</code> to parse numbers: 
  <blockquote> 
   <pre>
 myNumber = nf.parse(myString);
 </pre> 
  </blockquote> Use 
  <code>getInstance</code> or 
  <code>getNumberInstance</code> to get the normal number format. Use 
  <code>getCurrencyInstance</code> to get the currency number format. And use 
  <code>getPercentInstance</code> to get a format for displaying percentages. With this format, a fraction like 0.53 is displayed as 53%. 
  <p> You can also control the display of numbers with such methods as <code>setMinimumFractionDigits</code>. If you want even more control over the format or parsing, or want to give your users more control, you can try casting the <code>NumberFormat</code> you get from the factory methods to a <code>DecimalNumberFormat</code>. This will work for the vast majority of locales; just remember to put it in a <code>try</code> block in case you encounter an unusual one. </p>
  <p> You can also use forms of the <code>parse</code> and <code>format</code> methods with <code>ParsePosition</code> and <code>FieldPosition</code> to allow you to: </p>
  <ul> 
   <li> progressively parse through pieces of a string </li>
   <li> align the decimal point and other areas </li>
  </ul> For example, you can align numbers in two ways: 
  <ol> 
   <li> If you are using a monospaced font with spacing for alignment, you can pass the <code>FieldPosition</code> in your format call, with <code>field</code> = <code>INTEGER_FIELD</code>. On output, <code>getEndIndex</code> will be set to the offset between the last character of the integer and the decimal. Add (desiredSpaceCount - getEndIndex) spaces at the front of the string. </li>
   <li> If you are using proportional fonts, instead of padding with spaces, measure the width of the string in pixels from the start to <code>getEndIndex</code>. Then move the pen by (desiredPixelWidth - widthToAlignmentPoint) before drawing the text. It also works where there is no decimal, but possibly additional characters at the end, e.g. with parentheses in negative numbers: "(12)" for -12. </li>
  </ol> 
  <p> </p>
  <dl> 
   <dt> 
    <b>See Also:</b> 
   </dt>
   <dd> 
    <a href="java.text.DecimalFormat.html#_top_">DecimalFormat</a>, 
    <a href="java.text.ChoiceFormat.html#_top_">ChoiceFormat</a> 
   </dd>
  </dl> 
  <hr> 
  <a name="index"></a> 
  <h2> <img src="images/variable-index.gif" width="207" height="38" alt="Variable Index"> </h2> 
  <dl> 
   <dt> 
    <img src="images/blue-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#FRACTION_FIELD"><b>FRACTION_FIELD</b></a> 
   </dt>
   <dd>
     Field constant used to construct a FieldPosition object. 
   </dd>
   <dt> 
    <img src="images/blue-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#INTEGER_FIELD"><b>INTEGER_FIELD</b></a> 
   </dt>
   <dd>
     Field constant used to construct a FieldPosition object. 
   </dd>
  </dl> 
  <h2> <img src="images/constructor-index.gif" width="275" height="38" alt="Constructor Index"> </h2> 
  <dl> 
   <dt> 
    <img src="images/yellow-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#NumberFormat()"><b>NumberFormat</b></a>() 
   </dt>
   <dd> 
   </dd>
  </dl> 
  <h2> <img src="images/method-index.gif" width="207" height="38" alt="Method Index"> </h2> 
  <dl> 
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#clone()"><b>clone</b></a>() 
   </dt>
   <dd>
     Overrides Cloneable 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#equals(java.lang.Object)"><b>equals</b></a>(Object) 
   </dt>
   <dd>
     Overrides equals 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#format(double)"><b>format</b></a>(double) 
   </dt>
   <dd>
     Specialization of format. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#format(double, java.lang.StringBuffer, java.text.FieldPosition)"><b>format</b></a>(double, StringBuffer, FieldPosition) 
   </dt>
   <dd>
     Specialization of format. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#format(long)"><b>format</b></a>(long) 
   </dt>
   <dd>
     Specialization of format. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#format(long, java.lang.StringBuffer, java.text.FieldPosition)"><b>format</b></a>(long, StringBuffer, FieldPosition) 
   </dt>
   <dd>
     Specialization of format. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)"><b>format</b></a>(Object, StringBuffer, FieldPosition) 
   </dt>
   <dd>
     Formats an object to produce a string. 
   </dd>
   <dt> 
    <img src="images/green-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getAvailableLocales()"><b>getAvailableLocales</b></a>() 
   </dt>
   <dd>
     Get the set of Locales for which NumberFormats are installed 
   </dd>
   <dt> 
    <img src="images/green-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getCurrencyInstance()"><b>getCurrencyInstance</b></a>() 
   </dt>
   <dd>
     Returns a currency format for the current default locale. 
   </dd>
   <dt> 
    <img src="images/green-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getCurrencyInstance(java.util.Locale)"><b>getCurrencyInstance</b></a>(Locale) 
   </dt>
   <dd>
     Returns a currency format for the specified locale. 
   </dd>
   <dt> 
    <img src="images/green-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getInstance()"><b>getInstance</b></a>() 
   </dt>
   <dd>
     Returns the default number format for the current default locale. 
   </dd>
   <dt> 
    <img src="images/green-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getInstance(java.util.Locale)"><b>getInstance</b></a>(Locale) 
   </dt>
   <dd>
     Returns the default number format for the specified locale. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getMaximumFractionDigits()"><b>getMaximumFractionDigits</b></a>() 
   </dt>
   <dd>
     Returns the maximum number of digits allowed in the fraction portion of a number. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getMaximumIntegerDigits()"><b>getMaximumIntegerDigits</b></a>() 
   </dt>
   <dd>
     Returns the maximum number of digits allowed in the integer portion of a number. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getMinimumFractionDigits()"><b>getMinimumFractionDigits</b></a>() 
   </dt>
   <dd>
     Returns the minimum number of digits allowed in the fraction portion of a number. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getMinimumIntegerDigits()"><b>getMinimumIntegerDigits</b></a>() 
   </dt>
   <dd>
     Returns the minimum number of digits allowed in the integer portion of a number. 
   </dd>
   <dt> 
    <img src="images/green-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getNumberInstance()"><b>getNumberInstance</b></a>() 
   </dt>
   <dd>
     Returns a general-purpose number format for the current default locale. 
   </dd>
   <dt> 
    <img src="images/green-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getNumberInstance(java.util.Locale)"><b>getNumberInstance</b></a>(Locale) 
   </dt>
   <dd>
     Returns a general-purpose number format for the specified locale. 
   </dd>
   <dt> 
    <img src="images/green-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getPercentInstance()"><b>getPercentInstance</b></a>() 
   </dt>
   <dd>
     Returns a percentage format for the current default locale. 
   </dd>
   <dt> 
    <img src="images/green-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#getPercentInstance(java.util.Locale)"><b>getPercentInstance</b></a>(Locale) 
   </dt>
   <dd>
     Returns a percentage format for the specified locale. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#hashCode()"><b>hashCode</b></a>() 
   </dt>
   <dd>
     Overrides hashCode 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#isGroupingUsed()"><b>isGroupingUsed</b></a>() 
   </dt>
   <dd>
     Returns true if grouping is used in this format. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#isParseIntegerOnly()"><b>isParseIntegerOnly</b></a>() 
   </dt>
   <dd>
     Returns true if this format will parse numbers as integers only. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#parse(java.lang.String)"><b>parse</b></a>(String) 
   </dt>
   <dd>
     Convenience method. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#parse(java.lang.String, java.text.ParsePosition)"><b>parse</b></a>(String, ParsePosition) 
   </dt>
   <dd>
     Returns a Long if possible (e.g. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#parseObject(java.lang.String, java.text.ParsePosition)"><b>parseObject</b></a>(String, ParsePosition) 
   </dt>
   <dd>
     Parses a string to produce an object. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#setGroupingUsed(boolean)"><b>setGroupingUsed</b></a>(boolean) 
   </dt>
   <dd>
     Set whether or not grouping will be used in this format. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#setMaximumFractionDigits(int)"><b>setMaximumFractionDigits</b></a>(int) 
   </dt>
   <dd>
     Sets the maximum number of digits allowed in the fraction portion of a number. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#setMaximumIntegerDigits(int)"><b>setMaximumIntegerDigits</b></a>(int) 
   </dt>
   <dd>
     Sets the maximum number of digits allowed in the integer portion of a number. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#setMinimumFractionDigits(int)"><b>setMinimumFractionDigits</b></a>(int) 
   </dt>
   <dd>
     Sets the minimum number of digits allowed in the fraction portion of a number. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#setMinimumIntegerDigits(int)"><b>setMinimumIntegerDigits</b></a>(int) 
   </dt>
   <dd>
     Sets the minimum number of digits allowed in the integer portion of a number. 
   </dd>
   <dt> 
    <img src="images/red-ball-small.gif" width="6" height="6" alt=" o "> 
    <a href="#setParseIntegerOnly(boolean)"><b>setParseIntegerOnly</b></a>(boolean) 
   </dt>
   <dd>
     Sets whether or not numbers should be parsed as integers only. 
   </dd>
  </dl> 
  <a name="variables"></a> 
  <h2> <img src="images/variables.gif" width="153" height="38" alt="Variables"> </h2> 
  <a name="INTEGER_FIELD"><img src="images/blue-ball.gif" width="12" height="12" alt=" o "></a> 
  <b>INTEGER_FIELD</b> 
  <pre>
 public static final int INTEGER_FIELD
</pre> 
  <dl> 
   <dd>
     Field constant used to construct a FieldPosition object. Signifies that the position of the integer part of a formatted number should be returned.
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="java.text.FieldPosition.html#_top_">FieldPosition</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="FRACTION_FIELD"><img src="images/blue-ball.gif" width="12" height="12" alt=" o "></a> 
  <b>FRACTION_FIELD</b> 
  <pre>
 public static final int FRACTION_FIELD
</pre> 
  <dl> 
   <dd>
     Field constant used to construct a FieldPosition object. Signifies that the position of the fraction part of a formatted number should be returned.
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="java.text.FieldPosition.html#_top_">FieldPosition</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="constructors"></a> 
  <h2> <img src="images/constructors.gif" width="231" height="38" alt="Constructors"> </h2> 
  <a name="NumberFormat"></a> 
  <a name="NumberFormat()"><img src="images/yellow-ball.gif" width="12" height="12" alt=" o "></a> 
  <b>NumberFormat</b> 
  <pre>
 public NumberFormat()
</pre> 
  <a name="methods"></a> 
  <h2> <img src="images/methods.gif" width="151" height="38" alt="Methods"> </h2> 
  <a name="format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="format"><b>format</b></a> 
  <pre>
 public final <a href="java.lang.StringBuffer.html#_top_">StringBuffer</a> format(<a href="java.lang.Object.html#_top_">Object</a> number,
                                  <a href="java.lang.StringBuffer.html#_top_">StringBuffer</a> toAppendTo,
                                  <a href="java.text.FieldPosition.html#_top_">FieldPosition</a> pos)
</pre> 
  <dl> 
   <dd>
     Formats an object to produce a string. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>Overrides:</b> 
     </dt>
     <dd> 
      <a href="java.text.Format.html#format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)">format</a> in class 
      <a href="java.text.Format.html#_top_">Format</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="parseObject(java.lang.String, java.text.ParsePosition)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="parseObject"><b>parseObject</b></a> 
  <pre>
 public final <a href="java.lang.Object.html#_top_">Object</a> parseObject(<a href="java.lang.String.html#_top_">String</a> source,
                                 <a href="java.text.ParsePosition.html#_top_">ParsePosition</a> parsePosition)
</pre> 
  <dl> 
   <dd>
     Parses a string to produce an object. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>Overrides:</b> 
     </dt>
     <dd> 
      <a href="java.text.Format.html#parseObject(java.lang.String, java.text.ParsePosition)">parseObject</a> in class 
      <a href="java.text.Format.html#_top_">Format</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="format(double)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="format"><b>format</b></a> 
  <pre>
 public final <a href="java.lang.String.html#_top_">String</a> format(double number)
</pre> 
  <dl> 
   <dd>
     Specialization of format. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="java.text.Format.html#format">format</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="format(long)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="format"><b>format</b></a> 
  <pre>
 public final <a href="java.lang.String.html#_top_">String</a> format(long number)
</pre> 
  <dl> 
   <dd>
     Specialization of format. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="java.text.Format.html#format">format</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="format(double, java.lang.StringBuffer, java.text.FieldPosition)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="format"><b>format</b></a> 
  <pre>
 public abstract <a href="java.lang.StringBuffer.html#_top_">StringBuffer</a> format(double number,
                                     <a href="java.lang.StringBuffer.html#_top_">StringBuffer</a> toAppendTo,
                                     <a href="java.text.FieldPosition.html#_top_">FieldPosition</a> pos)
</pre> 
  <dl> 
   <dd>
     Specialization of format. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="java.text.Format.html#format">format</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="format(long, java.lang.StringBuffer, java.text.FieldPosition)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="format"><b>format</b></a> 
  <pre>
 public abstract <a href="java.lang.StringBuffer.html#_top_">StringBuffer</a> format(long number,
                                     <a href="java.lang.StringBuffer.html#_top_">StringBuffer</a> toAppendTo,
                                     <a href="java.text.FieldPosition.html#_top_">FieldPosition</a> pos)
</pre> 
  <dl> 
   <dd>
     Specialization of format. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="java.text.Format.html#format">format</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="parse(java.lang.String, java.text.ParsePosition)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="parse"><b>parse</b></a> 
  <pre>
 public abstract <a href="java.lang.Number.html#_top_">Number</a> parse(<a href="java.lang.String.html#_top_">String</a> text,
                              <a href="java.text.ParsePosition.html#_top_">ParsePosition</a> parsePosition)
</pre> 
  <dl> 
   <dd>
     Returns a Long if possible (e.g. within range [Long.MIN_VALUE, Long.MAX_VALUE], and with no decimals), otherwise a Double. If IntegerOnly is set, will stop at a decimal point (or equivalent; e.g. for rational numbers "1 2/3", will stop after the 1). Does not throw an exception; if no object can be parsed, index is unchanged! 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#isParseIntegerOnly">isParseIntegerOnly</a>, 
      <a href="java.text.Format.html#parseObject">parseObject</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="parse(java.lang.String)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="parse"><b>parse</b></a> 
  <pre>
 public <a href="java.lang.Number.html#_top_">Number</a> parse(<a href="java.lang.String.html#_top_">String</a> text) throws <a href="java.text.ParseException.html#_top_">ParseException</a>
</pre> 
  <dl> 
   <dd>
     Convenience method. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>Throws:</b> 
      <a href="java.text.ParseException.html#_top_">ParseException</a> 
     </dt>
     <dd>
       if the specified string is invalid. 
     </dd>
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#format">format</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="isParseIntegerOnly()"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="isParseIntegerOnly"><b>isParseIntegerOnly</b></a> 
  <pre>
 public boolean isParseIntegerOnly()
</pre> 
  <dl> 
   <dd>
     Returns true if this format will parse numbers as integers only. For example in the English locale, with ParseIntegerOnly true, the string "1234." would be parsed as the integer value 1234 and parsing would stop at the "." character. Of course, the exact format accepted by the parse operation is locale dependant and determined by sub-classes of NumberFormat. 
    <p> </p>
   </dd>
  </dl> 
  <a name="setParseIntegerOnly(boolean)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="setParseIntegerOnly"><b>setParseIntegerOnly</b></a> 
  <pre>
 public void setParseIntegerOnly(boolean value)
</pre> 
  <dl> 
   <dd>
     Sets whether or not numbers should be parsed as integers only. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#isParseIntegerOnly">isParseIntegerOnly</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="getInstance()"><img src="images/green-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getInstance"><b>getInstance</b></a> 
  <pre>
 public static final <a href="#_top_">NumberFormat</a> getInstance()
</pre> 
  <dl> 
   <dd>
     Returns the default number format for the current default locale. The default format is one of the styles provided by the other factory methods: getNumberInstance, getCurrencyInstance or getPercentInstance. Exactly which one is locale dependant. 
    <p> </p>
   </dd>
  </dl> 
  <a name="getInstance(java.util.Locale)"><img src="images/green-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getInstance"><b>getInstance</b></a> 
  <pre>
 public static <a href="#_top_">NumberFormat</a> getInstance(<a href="java.util.Locale.html#_top_">Locale</a> inLocale)
</pre> 
  <dl> 
   <dd>
     Returns the default number format for the specified locale. The default format is one of the styles provided by the other factory methods: getNumberInstance, getCurrencyInstance or getPercentInstance. Exactly which one is locale dependant. 
    <p> </p>
   </dd>
  </dl> 
  <a name="getNumberInstance()"><img src="images/green-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getNumberInstance"><b>getNumberInstance</b></a> 
  <pre>
 public static final <a href="#_top_">NumberFormat</a> getNumberInstance()
</pre> 
  <dl> 
   <dd>
     Returns a general-purpose number format for the current default locale. 
    <p> </p>
   </dd>
  </dl> 
  <a name="getNumberInstance(java.util.Locale)"><img src="images/green-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getNumberInstance"><b>getNumberInstance</b></a> 
  <pre>
 public static <a href="#_top_">NumberFormat</a> getNumberInstance(<a href="java.util.Locale.html#_top_">Locale</a> inLocale)
</pre> 
  <dl> 
   <dd>
     Returns a general-purpose number format for the specified locale. 
    <p> </p>
   </dd>
  </dl> 
  <a name="getCurrencyInstance()"><img src="images/green-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getCurrencyInstance"><b>getCurrencyInstance</b></a> 
  <pre>
 public static final <a href="#_top_">NumberFormat</a> getCurrencyInstance()
</pre> 
  <dl> 
   <dd>
     Returns a currency format for the current default locale. 
    <p> </p>
   </dd>
  </dl> 
  <a name="getCurrencyInstance(java.util.Locale)"><img src="images/green-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getCurrencyInstance"><b>getCurrencyInstance</b></a> 
  <pre>
 public static <a href="#_top_">NumberFormat</a> getCurrencyInstance(<a href="java.util.Locale.html#_top_">Locale</a> inLocale)
</pre> 
  <dl> 
   <dd>
     Returns a currency format for the specified locale. 
    <p> </p>
   </dd>
  </dl> 
  <a name="getPercentInstance()"><img src="images/green-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getPercentInstance"><b>getPercentInstance</b></a> 
  <pre>
 public static final <a href="#_top_">NumberFormat</a> getPercentInstance()
</pre> 
  <dl> 
   <dd>
     Returns a percentage format for the current default locale. 
    <p> </p>
   </dd>
  </dl> 
  <a name="getPercentInstance(java.util.Locale)"><img src="images/green-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getPercentInstance"><b>getPercentInstance</b></a> 
  <pre>
 public static <a href="#_top_">NumberFormat</a> getPercentInstance(<a href="java.util.Locale.html#_top_">Locale</a> inLocale)
</pre> 
  <dl> 
   <dd>
     Returns a percentage format for the specified locale. 
    <p> </p>
   </dd>
  </dl> 
  <a name="getAvailableLocales()"><img src="images/green-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getAvailableLocales"><b>getAvailableLocales</b></a> 
  <pre>
 public static <a href="java.util.Locale.html#_top_">Locale</a>[] getAvailableLocales()
</pre> 
  <dl> 
   <dd>
     Get the set of Locales for which NumberFormats are installed 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>Returns:</b> 
     </dt>
     <dd>
       available locales 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="hashCode()"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="hashCode"><b>hashCode</b></a> 
  <pre>
 public int hashCode()
</pre> 
  <dl> 
   <dd>
     Overrides hashCode 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>Overrides:</b> 
     </dt>
     <dd> 
      <a href="java.lang.Object.html#hashCode()">hashCode</a> in class 
      <a href="java.lang.Object.html#_top_">Object</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="equals(java.lang.Object)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="equals"><b>equals</b></a> 
  <pre>
 public boolean equals(<a href="java.lang.Object.html#_top_">Object</a> obj)
</pre> 
  <dl> 
   <dd>
     Overrides equals 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>Overrides:</b> 
     </dt>
     <dd> 
      <a href="java.lang.Object.html#equals(java.lang.Object)">equals</a> in class 
      <a href="java.lang.Object.html#_top_">Object</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="clone()"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="clone"><b>clone</b></a> 
  <pre>
 public <a href="java.lang.Object.html#_top_">Object</a> clone()
</pre> 
  <dl> 
   <dd>
     Overrides Cloneable 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>Overrides:</b> 
     </dt>
     <dd> 
      <a href="java.text.Format.html#clone()">clone</a> in class 
      <a href="java.text.Format.html#_top_">Format</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="isGroupingUsed()"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="isGroupingUsed"><b>isGroupingUsed</b></a> 
  <pre>
 public boolean isGroupingUsed()
</pre> 
  <dl> 
   <dd>
     Returns true if grouping is used in this format. For example, in the English locale, with grouping on, the number 1234567 might be formatted as "1,234,567". The grouping separator as well as the size of each group is locale dependant and is determined by sub-classes of NumberFormat. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#setGroupingUsed">setGroupingUsed</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="setGroupingUsed(boolean)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="setGroupingUsed"><b>setGroupingUsed</b></a> 
  <pre>
 public void setGroupingUsed(boolean newValue)
</pre> 
  <dl> 
   <dd>
     Set whether or not grouping will be used in this format. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#isGroupingUsed">isGroupingUsed</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="getMaximumIntegerDigits()"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getMaximumIntegerDigits"><b>getMaximumIntegerDigits</b></a> 
  <pre>
 public int getMaximumIntegerDigits()
</pre> 
  <dl> 
   <dd>
     Returns the maximum number of digits allowed in the integer portion of a number. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#setMaximumIntegerDigits">setMaximumIntegerDigits</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="setMaximumIntegerDigits(int)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="setMaximumIntegerDigits"><b>setMaximumIntegerDigits</b></a> 
  <pre>
 public void setMaximumIntegerDigits(int newValue)
</pre> 
  <dl> 
   <dd>
     Sets the maximum number of digits allowed in the integer portion of a number. maximumIntegerDigits must be &gt;= minimumIntegerDigits. If the new value for maximumIntegerDigits is less than the current value of minimumIntegerDigits, then minimumIntegerDigits will also be set to the new value. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#getMaximumIntegerDigits">getMaximumIntegerDigits</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="getMinimumIntegerDigits()"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getMinimumIntegerDigits"><b>getMinimumIntegerDigits</b></a> 
  <pre>
 public int getMinimumIntegerDigits()
</pre> 
  <dl> 
   <dd>
     Returns the minimum number of digits allowed in the integer portion of a number. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#setMinimumIntegerDigits">setMinimumIntegerDigits</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="setMinimumIntegerDigits(int)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="setMinimumIntegerDigits"><b>setMinimumIntegerDigits</b></a> 
  <pre>
 public void setMinimumIntegerDigits(int newValue)
</pre> 
  <dl> 
   <dd>
     Sets the minimum number of digits allowed in the integer portion of a number. minimumIntegerDigits must be &lt;= maximumIntegerDigits. If the new value for minimumIntegerDigits exceeds the current value of maximumIntegerDigits, then maximumIntegerDigits will also be set to the new value 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#getMinimumIntegerDigits">getMinimumIntegerDigits</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="getMaximumFractionDigits()"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getMaximumFractionDigits"><b>getMaximumFractionDigits</b></a> 
  <pre>
 public int getMaximumFractionDigits()
</pre> 
  <dl> 
   <dd>
     Returns the maximum number of digits allowed in the fraction portion of a number. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#setMaximumFractionDigits">setMaximumFractionDigits</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="setMaximumFractionDigits(int)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="setMaximumFractionDigits"><b>setMaximumFractionDigits</b></a> 
  <pre>
 public void setMaximumFractionDigits(int newValue)
</pre> 
  <dl> 
   <dd>
     Sets the maximum number of digits allowed in the fraction portion of a number. maximumFractionDigits must be &gt;= minimumFractionDigits. If the new value for maximumFractionDigits is less than the current value of minimumFractionDigits, then minimumFractionDigits will also be set to the new value. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#getMaximumFractionDigits">getMaximumFractionDigits</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="getMinimumFractionDigits()"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="getMinimumFractionDigits"><b>getMinimumFractionDigits</b></a> 
  <pre>
 public int getMinimumFractionDigits()
</pre> 
  <dl> 
   <dd>
     Returns the minimum number of digits allowed in the fraction portion of a number. 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#setMinimumFractionDigits">setMinimumFractionDigits</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <a name="setMinimumFractionDigits(int)"><img src="images/red-ball.gif" width="12" height="12" alt=" o "></a> 
  <a name="setMinimumFractionDigits"><b>setMinimumFractionDigits</b></a> 
  <pre>
 public void setMinimumFractionDigits(int newValue)
</pre> 
  <dl> 
   <dd>
     Sets the minimum number of digits allowed in the fraction portion of a number. minimumFractionDigits must be &lt;= maximumFractionDigits. If the new value for minimumFractionDigits exceeds the current value of maximumFractionDigits, then maximumIntegerDigits will also be set to the new value 
    <p> </p>
   </dd>
   <dd>
    <dl> 
     <dt> 
      <b>See Also:</b> 
     </dt>
     <dd> 
      <a href="#getMinimumFractionDigits">getMinimumFractionDigits</a> 
     </dd>
    </dl>
   </dd> 
  </dl> 
  <hr> 
  <pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.text.html">This Package</a>  <a href="java.text.MessageFormat.html#_top_">Previous</a>  <a href="java.text.ParsePosition.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre> 
  <hr> 
  <font size="-1"><a href="http://java.sun.com/cgi-bin/bugreport.cgi">Submit a bug or feature</a></font>   
 </body>
</html>