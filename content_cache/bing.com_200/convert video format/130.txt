<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <title>JavaTechniques   » DateFormat and SimpleDateFormat Examples</title> 
  <meta name="generator" content="WordPress 3.5.1"> 
  <!-- leave this for stats --> 
  <link rel="stylesheet" href="http://javatechniques.com/blog/wp-content/themes/lowstream-220/style.css" type="text/css" media="screen"> 
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://javatechniques.com/blog/feed/"> 
  <link rel="alternate" type="text/xml" title="RSS .92" href="http://javatechniques.com/blog/feed/rss/"> 
  <link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://javatechniques.com/blog/feed/atom/"> 
  <link rel="pingback" href="http://javatechniques.com/blog/xmlrpc.php"> 
  <link rel="archives" title="June 2007" href="http://javatechniques.com/blog/2007/06/"> 
  <link rel="archives" title="May 2007" href="http://javatechniques.com/blog/2007/05/"> 
  <link rel="archives" title="April 2007" href="http://javatechniques.com/blog/2007/04/"> 
  <link rel="archives" title="July 2006" href="http://javatechniques.com/blog/2006/07/"> 
  <link rel="archives" title="June 2006" href="http://javatechniques.com/blog/2006/06/"> 
  <link rel="archives" title="October 2005" href="http://javatechniques.com/blog/2005/10/"> 
  <link rel="archives" title="May 2004" href="http://javatechniques.com/blog/2004/05/"> 
  <link rel="archives" title="January 2004" href="http://javatechniques.com/blog/2004/01/"> 
  <link rel="archives" title="December 2003" href="http://javatechniques.com/blog/2003/12/"> 
  <link rel="archives" title="November 2003" href="http://javatechniques.com/blog/2003/11/"> 
  <link rel="archives" title="October 2003" href="http://javatechniques.com/blog/2003/10/"> 
  <link rel="alternate" type="application/rss+xml" title="JavaTechniques » DateFormat and SimpleDateFormat Examples Comments Feed" href="http://javatechniques.com/blog/dateformat-and-simpledateformat-examples/feed/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://javatechniques.com/blog/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://javatechniques.com/blog/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Faster Deep Copies of Java Objects" href="http://javatechniques.com/blog/faster-deep-copies-of-java-objects/"> 
  <link rel="next" title="Linux X11 Libraries for Headless Mode" href="http://javatechniques.com/blog/linux-x11-libraries-for-headless-mode/"> 
  <meta name="generator" content="WordPress 3.5.1"> 
  <link rel="canonical" href="http://javatechniques.com/blog/dateformat-and-simpledateformat-examples/"> 
  <style type="text/css">
	/* html selectors */
	
	html, body {
		background-color: #FFF;
	}
	
	blockquote {
		border-left: 1px solid #BBB;
		background-color: #EEE;
	}
	/* page margins */
	
	.blog {
		background-image: url(http://javatechniques.com/blog/wp-content/themes/lowstream-220/images/bg_left.gif);
		background-repeat: repeat-y;
	}
	
	/* header */
	
	.banner {
		border-left: 1px solid #777;
		border-right: 1px solid #777;
		border-bottom: 1px solid #BBB;
	}
	
	/* navigation */
	
	#navigation {
		background-color: #FFF;
	}
		
	#navigation ul li a {
		color: #003366;
		background-color: #FFF;
	}
	
	#navigation ul li a:hover, #navigation ul li a:active {
		background: #dcdcc2;
		color: #000000;		
	}
		
	/* announcement block */

	#announce {
		background-color: #FFF;
		color: #777;
		border: 1px solid #777;
	}

	#announce a:link, #announce a:visited {
		background-color: #FFF;
		color: #003366;
	}

	#announce a:hover, #announce a:active {
		background-color: #FFF;
		color: #003366;
	}

	/* posts */
	
	.main {
		float: right;
	}
	
	.main p {
		color: #333;
	}

	.main a:link, .main a:visited {
		color: #0000FF;
	}
	
	.main a:hover, .main a:active {
		color: #0000FF;
		background-color: #FFF;
	}

	.main h2 {
		color: #003366;
	}

	.main h2 a:link, .main h2 a:visited  {
		color: #003366;
	}

	.main h2 a:hover, .main h2 a:active {
		color: #003366;
	}

	.main h3 {
		color: #003366;
	}

	.main ul, .main ol {
		color: #333;
	}

	.meta {
		border-top: 1px solid #BBB;
	}

	.meta a:link, #meta a:visited {
		color: #0000FF;
	}

	.meta a:hover, #meta a:active {
		color: #0000FF;
	}

	.postnav {
		color: #0000FF;
	}

	.postnav li.left {
		color: #0000FF;
	}

	.postnav li.right {
		color: #0000FF;
	}

	.left a {
		color: #0000FF;
	}

	.right a {
		color: #0000FF;
	}

	.left a:hover, .right a:hover {
		color: #0000FF;
	}
	

	.left a:active, .right a:active {
		color: #0000FF;
	}

	/* comments &amp; trackbacks */

	#comment_area, #trackback_area {
		color: #777;
	}
	
	#comm_text {
		border-top: 1px solid #003366;
		margin-top: 8px;
	}

	#comment_area p, #traceback_area p {
		color: #777;
	}

	#comment_area p a, #comment_area p a:visited, #comment_area p a:active {
		color: #003366;
	}
	
	#comment_area p a:hover {
		color: #003366;
	}

	#commenter {
		color: #003366;
	}

	#comment_info {
		color: #003366;
	}
	
	#comment_author {
		color: #003366;
	}

	#comment_number {
		color: #003366;
	}

	#comment_number a, #comment_number a:visited, #comment_number a:active {
		color: #003366;
	}

	#comment_number a:hover {
		color: #003366;
	}

	.comments h2 {
		color: #003366;
	}
	
	#submit {
		color: #003366;
	}

	/* sidebar */
	
	.side {
		float: left;
	}

	.side h2 {
		color: #003366;
	}

	.side ul {
		border-top: 1px solid #777;
		color: #777;
	}

	.side ul a {
		border-bottom: 1px solid #777;
		color: #777;
		background-color: #FFF;
	}

	.side ul a:hover {
		color: #000000;
		background-color: #dcdcc2;
	}

	/* footer */

	.foot {
		color: #777;
		border-top: 1px solid #BBB;
		border-bottom: 1px solid #BBB;
		border-left: 1px solid #777;
		border-right: 1px solid #777;
		background-color: #FFF;
	}

	.foot p {
		color: #777;
	}

	.foot p a:link, .foot p a:visited {
		color: #003366;
	}

	.foot p a:hover, .foot p a:active {
		color: #003366;
	}

	/* calendar */

	.pad {
		background-color: #EEE;
		color: #777;
	}

	#wp-calendar caption {
		color: #003366;
	}

	#wp-calendar a:link, #wp-calendar a:visited {
		color: #003366;
	}

	#wp-calendar a:hover, #wp-calendar a:active {
		color: #003366;
	}

	#wp-calendar td {
		border: 1px solid #777;
		color: #777;
	}

	#wp-calendar td a:link, a:visited {
		color: #003366;
	}

	#wp-calendar td a:hover, a:active {
		color: #003366;
	}
	
	#wp-calendar th {
		color: #777	}
	
	/* search forms */
	
	.searchform {
		border: 1px solid #777;
		background-color: #FFF;
	}

	</style> 
  <script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-34438011-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script> 
 </head> 
 <body> 
  <div class="blog"> 
   <div class="banner"> 
    <a href="http://javatechniques.com/blog"> <img src="http://javatechniques.com/blog/wp-content/themes/lowstream-220/headers/jt_header.jpg" border="0" alt="Header"> </a> 
   </div> 
   <div class="main"> 
    <h2>DateFormat and SimpleDateFormat Examples</h2> 
    <p>Version 1.1 of Java introduced the <code>java.text</code> package, which included utility classes for parsing and formatting numbers and dates, along with utility classes for building other kinds of parsers.</p> 
    <p></p>
    <center>
     <br> 
     <script type="text/javascript"><!--
google_ad_client = "pub-6996704245138669";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text";
google_ad_channel = "";
google_color_border = "663300";
google_color_bg = "330000";
google_color_link = "FFFFFF";
google_color_text = "AECCEB";
google_color_url = "AECCEB";
//-->
</script>
     <br> 
     <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
     <br> 
    </center>
    <p></p> 
    <p><b>Default date formats</b><br> The <code>java.text.DateFormat</code> class, and its concrete subclass <code>java.text.SimpleDateFormat</code>, provide a convenient way to convert strings with date and/or time info to and from <code>java.util.Date</code> objects. Figure 1 shows an example of using default <code>DateFormat</code> objects to format a date in a variety of ways:     </p>
    <hr> 
    <pre>

import java.text.DateFormat;
import java.util.Date;

public class DateFormatExample1 {

    public static void main(String[] args) {
        // Make a new Date object. It will be initialized to the current time.
        Date now = new Date();

        // See what toString() returns
        System.out.println(" 1. " + now.toString());

        // Next, try the default DateFormat
        System.out.println(" 2. " + DateFormat.getInstance().format(now));

        // And the default time and date-time DateFormats
        System.out.println(" 3. " + DateFormat.getTimeInstance().format(now));
        System.out.println(" 4. " + 
            DateFormat.getDateTimeInstance().format(now));

        // Next, try the short, medium and long variants of the 
        // default time format 
        System.out.println(" 5. " + 
            DateFormat.getTimeInstance(DateFormat.SHORT).format(now));
        System.out.println(" 6. " + 
            DateFormat.getTimeInstance(DateFormat.MEDIUM).format(now));
        System.out.println(" 7. " + 
            DateFormat.getTimeInstance(DateFormat.LONG).format(now));

        // For the default date-time format, the length of both the
        // date and time elements can be specified. Here are some examples:
        System.out.println(" 8. " + DateFormat.getDateTimeInstance(
            DateFormat.SHORT, DateFormat.SHORT).format(now));
        System.out.println(" 9. " + DateFormat.getDateTimeInstance(
            DateFormat.MEDIUM, DateFormat.SHORT).format(now));
        System.out.println("10. " + DateFormat.getDateTimeInstance(
            DateFormat.LONG, DateFormat.LONG).format(now));
    }
}
</pre> 
    <p></p>
    <hr>
    <br> 
    <center>
     Figure 1. Using default 
     <code>DateFormat</code> objects to format a 
     <code>Date</code> object.
    </center>
    <p></p> 
    <p>When you run this class, you will see output that looks something like that shown in Figure 2.</p> 
    <p></p>
    <hr>
    <p></p> 
    <pre>

&gt; java DateFormatExample1
 1. Tue Nov 04 20:14:11 EST 2003
 2. 11/4/03 8:14 PM
 3. 8:14:11 PM
 4. Nov 4, 2003 8:14:11 PM
 5. 8:14 PM
 6. 8:14:11 PM
 7. 8:14:11 PM EST
 8. 11/4/03 8:14 PM
 9. Nov 4, 2003 8:14 PM
10. November 4, 2003 8:14:11 PM EST
</pre> 
    <p></p>
    <hr>
    <br> 
    <center>
     Figure 2. Output from example in Figure 1
    </center>
    <p></p> 
    <p>Default <code>DateFormat</code> objects retrieved from the static <code>getInstance()</code>, <code>getTimeInstance()</code>, and <code>getDateTimeInstance()</code> methods can also be used for parsing <code>String</code> objects to produce <code>Date</code> objects. Figure 3 shows a simple example of this.</p> 
    <p></p>
    <hr>
    <p></p> 
    <pre>

import java.text.DateFormat;
import java.text.ParseException;
import java.util.Date;

public class DateFormatExample2 {

    public static void main(String[] args) {
        // Make a String that has a date in it, with MEDIUM date format
        // and SHORT time format.
        String dateString = "Nov 4, 2003 8:14 PM";

        // Get the default MEDIUM/SHORT DateFormat
        DateFormat format = 
            DateFormat.getDateTimeInstance(
            DateFormat.MEDIUM, DateFormat.SHORT);

        // Parse the date
        try {
            Date date = format.parse(dateString);
            System.out.println("Original string: " + dateString);
            System.out.println("Parsed date    : " + 
                 date.toString());
        }
        catch(ParseException pe) {
            System.out.println("ERROR: could not parse date in string \"" +
                dateString + "\"");
        }
    }
}
</pre> 
    <p></p>
    <hr>
    <br> 
    <center>
     Figure 3. Using default 
     <code>DateFormat</code> objects to parse a 
     <code>String</code>
    </center>
    <p></p> 
    <p>The result is shown in Figure 4. Note that since the string version of the date did not contain timezone or seconds, the timezone is set to the default timezone (EST, in this case) and the seconds are set to zero.</p> 
    <p></p>
    <hr>
    <p></p> 
    <pre>

&gt; java DateFormatExample2
Original string: Nov 4, 2003 8:14 PM
Parsed date    : Tue Nov 04 20:14:00 EST 2003
</pre> 
    <p></p>
    <hr>
    <br> 
    <center>
     Figure 4. Parsing a date string
    </center>
    <p></p> 
    <p>The <code>parse</code> method throws an exception if a date matching the format cannot be parsed. In the code shown in Figure 3, the string matches the format exactly. To see what happens when a bad string is encountered, the class in Figure 5 reads and attempts to parse input until a blank line (or a Control-D) is entered.</p> 
    <p></p>
    <hr>
    <p></p> 
    <pre>

import java.text.DateFormat;
import java.text.ParseException;
import java.util.Date;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class DateFormatExample3 {

    public static void main(String[] args) {
        // Get the default MEDIUM/SHORT DateFormat
        DateFormat format = 
            DateFormat.getDateTimeInstance(DateFormat.MEDIUM, 
            DateFormat.SHORT);

        // Read and parse input, stopping on a blank input line
        BufferedReader reader = 
            new BufferedReader(new InputStreamReader(System.in));
        try {
            System.out.print("ENTER DATE STRING: ");
            String dateString = reader.readLine();

            while ((dateString != null) &amp;&amp; (dateString.length() &gt; 0)) {
                // Parse the date
                try {
                    Date date = format.parse(dateString);
                    System.out.println("Original string: " + dateString);
                    System.out.println("Parsed date    : " + 
                        date.toString());
                    System.out.println(); // Skip a line
                }
                catch(ParseException pe) {
                    System.out.println(
                        "ERROR: could not parse date in string \"" +
                        dateString + "\"");
                }

                // Read another string
                System.out.print("ENTER DATE STRING: ");
                dateString = reader.readLine();
            }
        }
        catch(IOException ioe) {
            System.out.println("I/O Exception: " + ioe);
        }
    }
}
</pre> 
    <p></p>
    <hr>
    <br> 
    <center>
     Figure 5. Example of parsing dates entered on the command line
    </center>
    <p></p> 
    <p>Figure 6 shows an example of running this class and entering several date strings. (Text entered is shown in italics.)</p> 
    <p></p>
    <hr>
    <p></p> 
    <pre>

&gt; java DateFormatExample3
ENTER DATE STRING: <i>Nov 4, 2003 8:14 PM</i>
Original string: Nov 4, 2003 8:14 PM
Parsed date    : Tue Nov 04 20:14:00 EST 2003

<font color="red">ENTER DATE STRING: <i>Nov 4, 2003 8:14</i>
ERROR: could not parse date in string "Nov 4, 2003 8:14 "</font>

ENTER DATE STRING: <i>Nov 4, 2003 8:14 AM</i>
Original string: Nov 4, 2003 8:14 AM
Parsed date    : Tue Nov 04 08:14:00 EST 2003

ENTER DATE STRING: <i>November 4, 2003 8:14 AM</i>
Original string: November 4, 2003 8:14 AM
Parsed date    : Tue Nov 04 08:14:00 EST 2003

ENTER DATE STRING: <i>Nov 4, 2003 20:14 PM</i>
Original string: Nov 4, 2003 20:14 PM
Parsed date    : Wed Nov 05 08:14:00 EST 2003

<font color="red">ENTER DATE STRING: <i>Nov 4, 2003 20:14</i>  
ERROR: could not parse date in string "Nov 4, 2003 20:14"</font>

ENTER DATE STRING: 
</pre> 
    <p></p>
    <hr>
    <br> 
    <center>
     Figure 6. Parsing a variety of date strings
    </center>
    <p></p> 
    <p>Note that the default parser is somewhat flexible. It recognizes a long version of the month name (November instead of Nov), but does not recognize the two dates shown in red, both of which are missing AM or PM. Furthermore, it produces possibly unexpected results when the time 20:14 PM is entered: The parsed date is 8:14 the next morning.</p> 
    <p><code>DateFormat</code> actually gives you a small amount of control over leniency in parsing. The default <code>DateFormat</code> instances are lenient by default, but invoking <code>format.setLenient(false);</code> in the example in Figure 5 would cause the 20:14 PM example (in Figure 6) to fail, though it will still accept November or Nov.</p> 
    <p><b>Using SimpleDateFormat for custom date formatting and parsing</b></p> 
    <p>The default <code>DateFormat</code> instances returned by the static methods in the <code>DateFormat</code> class may be sufficient for many purposes, but clearly do not cover all possible valid or useful formats for dates. For example, notice that in Figure 2, none of the <code>DateFormat</code>-generated strings (numbers 2  9) match the format of the output of the <code>Date</code> classs <code>toString()</code> method. This means that you cannot use the default <code>DateFormat</code> instances to parse the output of <code>toString()</code>, something that might be useful for things like parsing log data.</p> 
    <p>The <code>SimpleDateFormat</code> lets you build custom formats. Dates are constructed with a string that specifies a pattern for the dates to be formatted and/or parsed. From the <code>SimpleDateFormat</code> JavaDocs, the characters in Figure 7 can be used in date formats. Where appropriate, 4 or more of the character will be interpreted to mean that the long format of the element should be used, while fewer than 4 mean that a short format should be used.<br> </p>
    <hr>
    <br> 
    <table border="0" width="100%" valign="TOP">
     <tbody>
      <tr>
       <td><b>Symbol</b></td>
       <td><b>Meaning</b></td>
       <td><b>Type</b></td>
       <td><b>Example</b></td>
      </tr>
      <tr bgcolor="lightgrey">
       <td>G</td>
       <td>Era</td>
       <td>Text</td>
       <td>GG -&gt; AD</td>
      </tr>
      <tr>
       <td>y</td>
       <td>Year</td>
       <td>Number</td>
       <td>yy -&gt; 03?<br>yyyy -&gt; 2003?</td>
      </tr>
      <tr bgcolor="lightgrey">
       <td>M</td>
       <td>Month</td>
       <td>Text or Number</td>
       <td>M -&gt; 7?<br>M -&gt; 12?<br>MM -&gt; 07?<br>MMM -&gt; Jul<br>MMMM -&gt; December</td>
      </tr>
      <tr>
       <td>d</td>
       <td>Day in month</td>
       <td>Number</td>
       <td>d -&gt; 3?<br>dd -&gt; 03?</td>
      </tr>
      <tr bgcolor="lightgrey">
       <td>h</td>
       <td>Hour (1-12, AM/PM)</td>
       <td>Number</td>
       <td>h -&gt; 3?<br>hh -&gt; 03?</td>
      </tr>
      <tr>
       <td>H</td>
       <td>Hour (0-23)</td>
       <td>Number</td>
       <td>H -&gt; 15?<br>HH -&gt; 15?</td>
      </tr>
      <tr bgcolor="lightgrey">
       <td>k</td>
       <td>Hour (1-24)</td>
       <td>Number</td>
       <td>k -&gt; 3?<br>kk -&gt; 03?</td>
      </tr>
      <tr>
       <td>K</td>
       <td>Hour (0-11 AM/PM)</td>
       <td>Number</td>
       <td>K -&gt; 15?<br>KK -&gt; 15?</td>
      </tr>
      <tr bgcolor="lightgrey">
       <td>m</td>
       <td>Minute</td>
       <td>Number</td>
       <td>m -&gt; 7?<br>m -&gt; 15?<br>mm -&gt; 15?</td>
      </tr>
      <tr>
       <td>s</td>
       <td>Second</td>
       <td>Number</td>
       <td>s -&gt; 15?<br>ss -&gt; 15?</td>
      </tr>
      <tr bgcolor="lightgrey">
       <td>S</td>
       <td>Millisecond (0-999)</td>
       <td>Number</td>
       <td>SSS -&gt; 007?</td>
      </tr>
      <tr>
       <td>E</td>
       <td>Day in week</td>
       <td>Text</td>
       <td>EEE -&gt; Tue<br>EEEE -&gt; Tuesday</td>
      </tr>
      <tr bgcolor="lightgrey">
       <td>D</td>
       <td>Day in year (1-365 or 1-364)</td>
       <td>Number</td>
       <td>D -&gt; 65?<br>DDD -&gt; 065?</td>
      </tr>
      <tr>
       <td>F</td>
       <td>Day of week in month (1-5)</td>
       <td>Number</td>
       <td>F -&gt; 1?</td>
      </tr>
      <tr bgcolor="lightgrey">
       <td>w</td>
       <td>Week in year (1-53)</td>
       <td>Number</td>
       <td>w -&gt; 7?</td>
      </tr>
      <tr>
       <td>W</td>
       <td>Week in month (1-5)</td>
       <td>Number</td>
       <td>W -&gt; 3?</td>
      </tr>
      <tr bgcolor="lightgrey">
       <td>a</td>
       <td>AM/PM</td>
       <td>Text</td>
       <td>a -&gt; AM<br>aa -&gt; AM</td>
      </tr>
      <tr>
       <td>z</td>
       <td>Time zone</td>
       <td>Text</td>
       <td>z -&gt; EST<br>zzz -&gt; EST<br>zzzz -&gt; Eastern Standard Time</td>
      </tr>
      <tr bgcolor="lightgrey">
       <td></td>
       <td>Excape for text</td>
       <td>Delimiter</td>
       <td>hour h -&gt; hour 9?</td>
      </tr>
      <tr>
       <td></td>
       <td>Single quote</td>
       <td>Literal</td>
       <td>ssSSS -&gt; 45876?</td>
      </tr>
     </tbody>
    </table>
    <p></p> 
    <p></p>
    <hr>
    <br> 
    <center>
     Figure 7. Syntax elements for 
     <code>SimpleDateFormat</code>
    </center>
    <p></p> 
    <p>Note that you will generally never want to use single-digit minutes, seconds, or milliseconds, even though these are supported by <code>SimpleDateFormat</code> (m, s, S).</p> 
    <p>Using the syntax from Figure 7, we can now make a <code>SimpleDateFormat</code> that can read the output of <code>Date.toString()</code>. Figure 8 shows an example this:<br> </p>
    <hr>
    <p></p> 
    <pre>

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;

public class DateFormatExample4 {

    public static void main(String[] args) {
        // Make a new Date object. It will be initialized to the 
        // current time.
        Date now = new Date();

        // Print the result of toString()
        String dateString = now.toString();
        System.out.println(" 1. " + dateString);

        // Make a SimpleDateFormat for toString()'s output. This
        // has short (text) date, a space, short (text) month, a space,
        // 2-digit date, a space, hour (0-23), minute, second, a space,
        // short timezone, a final space, and a long year.
        SimpleDateFormat format = 
            new SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy");

        // See if we can parse the output of Date.toString()
        try {
            Date parsed = format.parse(dateString);
            System.out.println(" 2. " + parsed.toString());
        }
        catch(ParseException pe) {
            System.out.println("ERROR: Cannot parse \"" + dateString + "\"");
        }

        // Print the result of formatting the now Date to see if the result
        // is the same as the output of toString()
        System.out.println(" 3. " + format.format(now));
    }
}
</pre> 
    <p>The output shows three identical strings:</p> 
    <pre>

&gt; java DateFormatExample4
 1. Tue Nov 04 21:53:43 EST 2003
 2. Tue Nov 04 21:53:43 EST 2003
 3. Tue Nov 04 21:53:43 EST 2003
</pre> 
    <p></p>
    <hr>
    <br> 
    <center>
     Figure 8. A parser for 
     <code>Date.toString()</code> output
    </center>
    <p></p> 
    <xx?php comments_template(); ?xx> 
    </xx?php>
   </div> 
   <div class="side"> 
    <br> 
    <!--
	   --> 
    <h2>Categories</h2> 
    <ul> 
     <li class="cat-item cat-item-3"><a href="http://javatechniques.com/blog/category/basics/" title="View all posts filed under Basics">Basics</a> </li> 
     <li class="cat-item cat-item-8"><a href="http://javatechniques.com/blog/category/bug-fixes/" title="View all posts filed under Bug fixes">Bug fixes</a> </li> 
     <li class="cat-item cat-item-9"><a href="http://javatechniques.com/blog/category/general-development/" title="View all posts filed under General Development">General Development</a> </li> 
     <li class="cat-item cat-item-5"><a href="http://javatechniques.com/blog/category/gui/" title="View all posts filed under GUI">GUI</a> </li> 
     <li class="cat-item cat-item-6"><a href="http://javatechniques.com/blog/category/hosting/" title="View all posts filed under Hosting">Hosting</a> </li> 
     <li class="cat-item cat-item-4"><a href="http://javatechniques.com/blog/category/lucene/" title="View all posts filed under Lucene">Lucene</a> </li> 
     <li class="cat-item cat-item-7"><a href="http://javatechniques.com/blog/category/optimization/" title="View all posts filed under Optimization">Optimization</a> </li> 
     <li class="cat-item cat-item-1"><a href="http://javatechniques.com/blog/category/uncategorized/" title="View all posts filed under Uncategorized">Uncategorized</a> </li> 
    </ul> 
    <br> 
    <center> 
     <script type="text/javascript"><!--
google_ad_client = "pub-6996704245138669";
google_ad_width = 120;
google_ad_height = 600;
google_ad_format = "120x600_as";
google_ad_type = "text";
google_ad_channel ="";
google_color_border = "336699";
google_color_bg = "FFFFFF";
google_color_link = "0000FF";
google_color_text = "000000";
google_color_url = "008000";
//--></script> 
     <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> 
    </center> 
    <p></p> 
    <center> 
     <script type="text/javascript" src="http://www.hostmonster.com/src/js/isenhour/CODE16/120x90/1.gif"></script> 
    </center> 
    <p></p> 
    <center> 
     <script charset="utf-8" type="text/javascript" src="http://ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;MarketPlace=US&amp;ID=V20070822/US/javatechncom-20/8001/c90ca370-c0bf-4826-b729-55f8d375ab98"> </script> 
     <noscript>
      <a href="http://ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;MarketPlace=US&amp;ID=V20070822%2FUS%2Fjavatechncom-20%2F8001%2Fc90ca370-c0bf-4826-b729-55f8d375ab98&amp;Operation=NoScript">Amazon.com Widgets</a>
     </noscript> 
    </center> 
    <br> 
    <!--
	<h2>Navigation</h2>
		<ul>
			<li><a href="http://javatechniques.com/blog/">Home</a></li>
		</ul>
 --> 
    <h2>Pages</h2> 
    <ul> 
     <li class="page_item page-item-2"><a href="http://javatechniques.com/blog/about/">About this Site</a></li> 
     <li class="page_item page-item-14"><a href="http://javatechniques.com/blog/compressing-data-sent-over-a-socket/">Compressing Data Sent Over a Socket</a></li> 
     <li class="page_item page-item-11 current_page_item"><a href="http://javatechniques.com/blog/dateformat-and-simpledateformat-examples/">DateFormat and SimpleDateFormat Examples</a></li> 
     <li class="page_item page-item-13"><a href="http://javatechniques.com/blog/deploying-java-apps-on-a-virtual-dedicated-server/">Deploying Java Apps on a Virtual Dedicated Server</a></li> 
     <li class="page_item page-item-10"><a href="http://javatechniques.com/blog/faster-deep-copies-of-java-objects/">Faster Deep Copies of Java Objects</a></li> 
     <li class="page_item page-item-17"><a href="http://javatechniques.com/blog/faster-jtextpane-text-insertion-part-i/">Faster JTextPane Text Insertion (Part I)</a></li> 
     <li class="page_item page-item-18"><a href="http://javatechniques.com/blog/faster-jtextpane-text-insertion-part-ii/">Faster JTextPane Text Insertion (Part II)</a></li> 
     <li class="page_item page-item-15"><a href="http://javatechniques.com/blog/fixing-disappearing-text-selections-when-a-menu-is-opened/">Fixing Disappearing Text Selections when a Menu is Opened</a></li> 
     <li class="page_item page-item-19"><a href="http://javatechniques.com/blog/gridbaglayout-example-a-simple-form-layout/">GridBagLayout Example: A Simple Form Layout</a></li> 
     <li class="page_item page-item-16"><a href="http://javatechniques.com/blog/java-font-problems-under-panther-mac-osx-103/">Java Font Problems under Panther (Mac OSX 10.3)</a></li> 
     <li class="page_item page-item-39"><a href="http://javatechniques.com/blog/jdb-example-generating-a-thread-dump/">JDB Example: Generating a Thread Dump</a></li> 
     <li class="page_item page-item-41"><a href="http://javatechniques.com/blog/launching-java-webstart-from-the-command-line/">Launching Java WebStart from the Command Line</a></li> 
     <li class="page_item page-item-12"><a href="http://javatechniques.com/blog/linux-x11-libraries-for-headless-mode/">Linux X11 Libraries for Headless Mode</a></li> 
     <li class="page_item page-item-9"><a href="http://javatechniques.com/blog/low-memory-deep-copy-technique-for-java-objects/">Low-Memory Deep Copy Technique for Java Objects</a></li> 
     <li class="page_item page-item-4"><a href="http://javatechniques.com/blog/lucene-in-memory-text-search-example/">Lucene In-Memory Text Search Example</a></li> 
     <li class="page_item page-item-21"><a href="http://javatechniques.com/blog/profiling-webstart-apps-with-jprofiler-on-osx/">Profiling WebStart Apps with JProfiler on OSX</a></li> 
     <li class="page_item page-item-8"><a href="http://javatechniques.com/blog/setting-jtextpane-font-and-color/">Setting JTextPane Font and Color</a></li> 
     <li class="page_item page-item-6"><a href="http://javatechniques.com/blog/squid-corrupts-jar-files/">Squid Corrupts Jar Files?</a></li> 
     <li class="page_item page-item-5"><a href="http://javatechniques.com/blog/string-equality-and-interning/">String Equality and Interning</a></li> 
    </ul> 
    <!-- Trying to track down load spike issue (111117)
	<h2>Archives</h2>
		<ul>
				<li><a href='http://javatechniques.com/blog/2007/06/' title='June 2007'>June 2007</a></li>
	<li><a href='http://javatechniques.com/blog/2007/05/' title='May 2007'>May 2007</a></li>
	<li><a href='http://javatechniques.com/blog/2007/04/' title='April 2007'>April 2007</a></li>
	<li><a href='http://javatechniques.com/blog/2006/07/' title='July 2006'>July 2006</a></li>
	<li><a href='http://javatechniques.com/blog/2006/06/' title='June 2006'>June 2006</a></li>
	<li><a href='http://javatechniques.com/blog/2005/10/' title='October 2005'>October 2005</a></li>
	<li><a href='http://javatechniques.com/blog/2004/05/' title='May 2004'>May 2004</a></li>
	<li><a href='http://javatechniques.com/blog/2004/01/' title='January 2004'>January 2004</a></li>
	<li><a href='http://javatechniques.com/blog/2003/12/' title='December 2003'>December 2003</a></li>
	<li><a href='http://javatechniques.com/blog/2003/11/' title='November 2003'>November 2003</a></li>
	<li><a href='http://javatechniques.com/blog/2003/10/' title='October 2003'>October 2003</a></li>
		</ul>	
  --> 
    <h2>Meta</h2> 
    <ul> 
     <!-- Trying to track down load spike issue (111117)
			<li><a href="http://javatechniques.com/blog/feed/" title="Syndicate this site using RSS"><abbr title="Really Simple Syndication">RSS</abbr></a></li>
  --> 
     <li><a href="http://javatechniques.com/blog/wp-login.php">Log in</a></li> 
    </ul> 
    <br> 
   </div> 
   <div class="foot"> 
    <p> Copyright 2003-2016 - Philip Isenhour - All code samples may be freely used under the <a href="https://opensource.org/licenses/MIT">MIT Open-Source License</a> </p> 
   </div> 
  </div>  
 </body>
</html>