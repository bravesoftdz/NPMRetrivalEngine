<!doctype html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
 <!--<![endif]-->
 <head> 
  <meta charset="utf-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <title>Object Detection — OpenCV Java Tutorials 1.0 documentation</title> 
  <link rel="stylesheet" href="https://media.readthedocs.org/css/sphinx_rtd_theme.css" type="text/css"> 
  <link rel="index" title="Index" href="genindex.html"> 
  <link rel="search" title="Search" href="search.html"> 
  <link rel="top" title="OpenCV Java Tutorials 1.0 documentation" href="index.html"> 
  <link rel="next" title="Camera Calibration" href="09-camera-calibration.html"> 
  <link rel="prev" title="Image Segmentation" href="07-image-segmentation.html"> 
  <script src="_static/js/modernizr.min.js"></script> 
  <!-- RTD Extra Head --> 
  <!-- 
Always link to the latest version, as canonical.
http://docs.readthedocs.org/en/latest/canonical.html
--> 
  <link rel="canonical" href="http://opencv-java-tutorials.readthedocs.io/en/latest/08-object-detection.html"> 
  <link rel="stylesheet" href="https://media.readthedocs.org/css/readthedocs-doc-embed.css" type="text/css"> 
  <script type="text/javascript" src="_static/readthedocs-data.js"></script> 
  <!-- Add page-specific data, which must exist in the page js, not global --> 
  <script type="text/javascript">
READTHEDOCS_DATA['page'] = '08-object-detection' 		
READTHEDOCS_DATA['source_suffix'] = '.rst'
</script> 
  <script type="text/javascript" src="_static/readthedocs-dynamic-include.js"></script> 
  <!-- end RTD <extrahead> -->
 </head> 
 <body class="wy-body-for-nav" role="document"> 
  <div class="wy-grid-for-nav"> 
   <nav data-toggle="wy-nav-shift" class="wy-nav-side"> 
    <div class="wy-side-scroll"> 
     <div class="wy-side-nav-search"> 
      <a href="index.html" class="icon icon-home"> OpenCV Java Tutorials </a> 
      <div class="version">
        latest 
      </div> 
      <div role="search"> 
       <form id="rtd-search-form" class="wy-form" action="search.html" method="get"> 
        <input type="text" name="q" placeholder="Search docs"> 
        <input type="hidden" name="check_keywords" value="yes"> 
        <input type="hidden" name="area" value="default"> 
       </form> 
      </div> 
     </div> 
     <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation"> 
      <ul class="current"> 
       <li class="toctree-l1"><a class="reference internal" href="01-installing-opencv-for-java.html">Installing OpenCV for Java</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="02-first-java-application-with-opencv.html">Your First Java Application with OpenCV</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="03-first-javafx-application-with-opencv.html">Your First JavaFX Application with OpenCV</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="04-opencv-basics.html">OpenCV Basics</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="05-fourier-transform.html">Fourier Transform</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="06-face-detection-and-tracking.html">Face Detection and Tracking</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="07-image-segmentation.html">Image Segmentation</a></li> 
       <li class="toctree-l1 current"><a class="current reference internal" href="#">Object Detection</a>
        <ul> 
         <li class="toctree-l2"><a class="reference internal" href="#goal">Goal</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#morphological-image-processing">Morphological Image Processing</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#what-we-will-do-in-this-tutorial">What we will do in this tutorial</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#getting-started">Getting Started</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#image-processing">Image processing</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#morphological-operators">Morphological Operators</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#object-tracking">Object tracking</a></li> 
        </ul> </li> 
       <li class="toctree-l1"><a class="reference internal" href="09-camera-calibration.html">Camera Calibration</a></li> 
      </ul> 
     </div> 
    </div> 
   </nav> 
   <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap"> 
    <nav class="wy-nav-top" role="navigation" aria-label="top navigation"> 
     <i data-toggle="wy-nav-top" class="fa fa-bars"></i> 
     <a href="index.html">OpenCV Java Tutorials</a> 
    </nav> 
    <div class="wy-nav-content"> 
     <div class="rst-content"> 
      <div role="navigation" aria-label="breadcrumbs navigation"> 
       <ul class="wy-breadcrumbs"> 
        <li><a href="index.html">Docs</a> »</li> 
        <li>Object Detection</li> 
        <li class="wy-breadcrumbs-aside"> <a href="https://github.com/opencv-java/opencv-java-tutorials/blob/master/docs/source/08-object-detection.rst" class="fa fa-github"> Edit on GitHub</a> </li> 
       </ul> 
       <hr> 
      </div> 
      <div role="main" class="document" itemscope itemtype="http://schema.org/Article"> 
       <div itemprop="articleBody"> 
        <div class="section" id="object-detection"> 
         <h1>Object Detection<a class="headerlink" href="#object-detection" title="Permalink to this headline">¶</a></h1> 
         <div class="admonition note"> 
          <p class="first admonition-title">Note</p> 
          <p class="last">We assume that by now you have already read the previous tutorials. If not, please check previous tutorials at <a class="reference external" href="http://opencv-java-tutorials.readthedocs.org/en/latest/index.html">http://opencv-java-tutorials.readthedocs.org/en/latest/index.html</a>. You can also find the source code and resources at <a class="reference external" href="https://github.com/opencv-java/">https://github.com/opencv-java/</a></p> 
         </div> 
         <div class="section" id="goal"> 
          <h2>Goal<a class="headerlink" href="#goal" title="Permalink to this headline">¶</a></h2> 
          <p>In this tutorial we are going to identify and track one or more tennis balls. It performs the detection of the tennis balls upon a webcam video stream by using the color range of the balls, erosion and dilation, and the findContours method.</p> 
         </div> 
         <div class="section" id="morphological-image-processing"> 
          <h2>Morphological Image Processing<a class="headerlink" href="#morphological-image-processing" title="Permalink to this headline">¶</a></h2> 
          <p>Is a collection of non-linear operations related to the morphology of features in an image. The morphological operations rely only on the relative ordering of pixel values and not on their numerical values. Some of the fundamental morphological operations are dilation and erosion. Dilation causes objects to dilate or grow in size adding pixels to the boundaries of objects in an image and therefore the holes within different regions become smaller. The dilation allows, for example, to join parts of an object that appear separated. Erosion causes objects to shrink by stripping away layers of pixels from the boundaries of objects in an image and therefore the holes within different regions become larger. The erosion can be used to remove noise or small errors from the image due to the scanning process. The opening is a compound operation that consist in an erosion followed by a dilation using the same structuring element for both operations. This operation removes small objects from the foreground of an image and can be used to find things into which a specific structuring element can fit. The opening can open up a gap between objects connected by a thin bridge of pixels. Any regions that have survived the erosion are restored to their original size by the dilation.</p> 
         </div> 
         <div class="section" id="what-we-will-do-in-this-tutorial"> 
          <h2>What we will do in this tutorial<a class="headerlink" href="#what-we-will-do-in-this-tutorial" title="Permalink to this headline">¶</a></h2> 
          <p>In this guide, we will:</p> 
          <blockquote> 
           <div>
            <ul class="simple"> 
             <li>Insert 3 groups of sliders to control the quantity of HSV (Hue, Saturation and Value) of the image.</li> 
             <li>Capture and process the image from the web cam removing noise in order to facilitate the object recognition.</li> 
             <li>Finally using morphological operator such as erosion and dilation we can identify the objects using the contornous obtained after the image processing.</li> 
            </ul> 
           </div>
          </blockquote> 
         </div> 
         <div class="section" id="getting-started"> 
          <h2>Getting Started<a class="headerlink" href="#getting-started" title="Permalink to this headline">¶</a></h2> 
          <p>Let’s create a new JavaFX project. In Scene Builder we set the window elements so that we have a Border Pane with:</p> 
          <ul> 
           <li><p class="first">on RIGHT CENTER we can add a VBox. In this one we are going to need 6 sliders, the first couple will control hue, the next one saturation and finally brightness, with these sliders is possible to change the values of the HSV image.</p> 
            <blockquote> 
             <div>
              <div class="highlight-xml">
               <div class="highlight">
                <pre><span></span><span class="nt">&lt;Label</span> <span class="na">text=</span><span class="s">"Hue Start"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Slider</span> <span class="na">fx:id=</span><span class="s">"hueStart"</span> <span class="na">min=</span><span class="s">"0"</span> <span class="na">max=</span><span class="s">"180"</span> <span class="na">value=</span><span class="s">"20"</span> <span class="na">blockIncrement=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Label</span> <span class="na">text=</span><span class="s">"Hue Stop"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Slider</span> <span class="na">fx:id=</span><span class="s">"hueStop"</span> <span class="na">min=</span><span class="s">"0"</span> <span class="na">max=</span><span class="s">"180"</span> <span class="na">value=</span><span class="s">"50"</span> <span class="na">blockIncrement=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Label</span> <span class="na">text=</span><span class="s">"Saturation Start"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Slider</span> <span class="na">fx:id=</span><span class="s">"saturationStart"</span> <span class="na">min=</span><span class="s">"0"</span> <span class="na">max=</span><span class="s">"255"</span> <span class="na">value=</span><span class="s">"60"</span> <span class="na">blockIncrement=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Label</span> <span class="na">text=</span><span class="s">"Saturation Stop"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Slider</span> <span class="na">fx:id=</span><span class="s">"saturationStop"</span> <span class="na">min=</span><span class="s">"0"</span> <span class="na">max=</span><span class="s">"255"</span> <span class="na">value=</span><span class="s">"200"</span> <span class="na">blockIncrement=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Label</span> <span class="na">text=</span><span class="s">"Value Start"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Slider</span> <span class="na">fx:id=</span><span class="s">"valueStart"</span> <span class="na">min=</span><span class="s">"0"</span> <span class="na">max=</span><span class="s">"255"</span> <span class="na">value=</span><span class="s">"50"</span> <span class="na">blockIncrement=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Label</span> <span class="na">text=</span><span class="s">"Value Stop"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Slider</span> <span class="na">fx:id=</span><span class="s">"valueStop"</span> <span class="na">min=</span><span class="s">"0"</span> <span class="na">max=</span><span class="s">"255"</span> <span class="na">value=</span><span class="s">"255"</span> <span class="na">blockIncrement=</span><span class="s">"1"</span> <span class="nt">/&gt;</span>
</pre>
               </div> 
              </div> 
             </div>
            </blockquote> </li> 
           <li><p class="first">in the CENTER. we are going to put three ImageViews, the first one shows normal image from the web cam stream, the second one will show mask image and the last one will show morph image. The HBox is used to normal image and VBox to put the other ones.</p> 
            <blockquote> 
             <div>
              <div class="highlight-xml">
               <div class="highlight">
                <pre><span></span><span class="nt">&lt;HBox</span> <span class="na">alignment=</span><span class="s">"CENTER"</span> <span class="na">spacing=</span><span class="s">"5"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;padding&gt;</span>
                <span class="nt">&lt;Insets</span> <span class="na">right=</span><span class="s">"10"</span> <span class="na">left=</span><span class="s">"10"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/padding&gt;</span>
        <span class="nt">&lt;ImageView</span> <span class="na">fx:id=</span><span class="s">"originalFrame"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;VBox</span> <span class="na">alignment=</span><span class="s">"CENTER"</span> <span class="na">spacing=</span><span class="s">"5"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;ImageView</span> <span class="na">fx:id=</span><span class="s">"maskImage"</span> <span class="nt">/&gt;</span>
                <span class="nt">&lt;ImageView</span> <span class="na">fx:id=</span><span class="s">"morphImage"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/VBox&gt;</span>
<span class="nt">&lt;/HBox&gt;</span>
</pre>
               </div> 
              </div> 
             </div>
            </blockquote> </li> 
           <li><p class="first">on the BOTTOM we can add the usual button to start/stop the stream and the current values HSV selected with the sliders.</p> 
            <blockquote> 
             <div>
              <div class="highlight-xml">
               <div class="highlight">
                <pre><span></span><span class="nt">&lt;Button</span> <span class="na">fx:id=</span><span class="s">"cameraButton"</span> <span class="na">alignment=</span><span class="s">"center"</span> <span class="na">text=</span><span class="s">"Start camera"</span> <span class="na">onAction=</span><span class="s">"#startCamera"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Separator</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;Label</span> <span class="na">fx:id=</span><span class="s">"hsvCurrentValues"</span> <span class="nt">/&gt;</span>
</pre>
               </div> 
              </div> 
             </div>
            </blockquote> </li> 
          </ul> 
          <p>The gui will look something like this one:</p> 
          <img alt="_images/09-00.png" src="_images/09-00.png"> 
         </div> 
         <div class="section" id="image-processing"> 
          <h2>Image processing<a class="headerlink" href="#image-processing" title="Permalink to this headline">¶</a></h2> 
          <p>In order to use the morphological operators and obtain good results we need to process the image and remove the noise, change the image to HSV allows to get the contours easily.</p> 
          <ul> 
           <li>
            <dl class="first docutils"> 
             <dt>
              <code class="docutils literal"><span class="pre">Remove</span> <span class="pre">noise</span></code>
             </dt> 
             <dd>
              <p class="first">We can remove some noise of the image using the method blur of the Imgproc class and then apply a conversion to HSV in order to facilitate the process of object recognition.</p> 
              <div class="last highlight-java">
               <div class="highlight">
                <pre><span></span><span class="n">Mat</span> <span class="n">blurredImage</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Mat</span><span class="o">();</span>
<span class="n">Mat</span> <span class="n">hsvImage</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Mat</span><span class="o">();</span>
<span class="n">Mat</span> <span class="n">mask</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Mat</span><span class="o">();</span>
<span class="n">Mat</span> <span class="n">morphOutput</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Mat</span><span class="o">();</span>

<span class="c1">// remove some noise</span>
<span class="n">Imgproc</span><span class="o">.</span><span class="na">blur</span><span class="o">(</span><span class="n">frame</span><span class="o">,</span> <span class="n">blurredImage</span><span class="o">,</span> <span class="k">new</span> <span class="n">Size</span><span class="o">(</span><span class="mi">7</span><span class="o">,</span> <span class="mi">7</span><span class="o">));</span>

<span class="c1">// convert the frame to HSV</span>
<span class="n">Imgproc</span><span class="o">.</span><span class="na">cvtColor</span><span class="o">(</span><span class="n">blurredImage</span><span class="o">,</span> <span class="n">hsvImage</span><span class="o">,</span> <span class="n">Imgproc</span><span class="o">.</span><span class="na">COLOR_BGR2HSV</span><span class="o">);</span>
</pre>
               </div> 
              </div> 
             </dd> 
            </dl> </li> 
           <li>
            <dl class="first docutils"> 
             <dt>
              <code class="docutils literal"><span class="pre">Values</span> <span class="pre">of</span> <span class="pre">HSV</span> <span class="pre">image</span></code>
             </dt> 
             <dd>
              <p class="first">With the sliders we can modify the values of the HSV Image, the image will be updtated in real time, that allows to increase or decrease the capactity to recognize object into the image. .</p> 
              <div class="last highlight-java">
               <div class="highlight">
                <pre><span></span><span class="c1">// get thresholding values from the UI</span>
<span class="c1">// remember: H ranges 0-180, S and V range 0-255</span>
<span class="n">Scalar</span> <span class="n">minValues</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scalar</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">hueStart</span><span class="o">.</span><span class="na">getValue</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">saturationStart</span><span class="o">.</span><span class="na">getValue</span><span class="o">(),</span>
<span class="k">this</span><span class="o">.</span><span class="na">valueStart</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
<span class="n">Scalar</span> <span class="n">maxValues</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scalar</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">hueStop</span><span class="o">.</span><span class="na">getValue</span><span class="o">(),</span> <span class="k">this</span><span class="o">.</span><span class="na">saturationStop</span><span class="o">.</span><span class="na">getValue</span><span class="o">(),</span>
<span class="k">this</span><span class="o">.</span><span class="na">valueStop</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>

<span class="c1">// show the current selected HSV range</span>
<span class="n">String</span> <span class="n">valuesToPrint</span> <span class="o">=</span> <span class="s">"Hue range: "</span> <span class="o">+</span> <span class="n">minValues</span><span class="o">.</span><span class="na">val</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">+</span> <span class="s">"-"</span> <span class="o">+</span> <span class="n">maxValues</span><span class="o">.</span><span class="na">val</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
<span class="o">+</span> <span class="s">"\tSaturation range: "</span> <span class="o">+</span> <span class="n">minValues</span><span class="o">.</span><span class="na">val</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="s">"-"</span> <span class="o">+</span> <span class="n">maxValues</span><span class="o">.</span><span class="na">val</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">+</span> <span class="s">"\tValue range: "</span>
<span class="o">+</span> <span class="n">minValues</span><span class="o">.</span><span class="na">val</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">+</span> <span class="s">"-"</span> <span class="o">+</span> <span class="n">maxValues</span><span class="o">.</span><span class="na">val</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
<span class="k">this</span><span class="o">.</span><span class="na">onFXThread</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">hsvValuesProp</span><span class="o">,</span> <span class="n">valuesToPrint</span><span class="o">);</span>

<span class="c1">// threshold HSV image to select tennis balls</span>
<span class="n">Core</span><span class="o">.</span><span class="na">inRange</span><span class="o">(</span><span class="n">hsvImage</span><span class="o">,</span> <span class="n">minValues</span><span class="o">,</span> <span class="n">maxValues</span><span class="o">,</span> <span class="n">mask</span><span class="o">);</span>
<span class="c1">// show the partial output</span>
<span class="k">this</span><span class="o">.</span><span class="na">onFXThread</span><span class="o">(</span><span class="n">maskProp</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mat2Image</span><span class="o">(</span><span class="n">mask</span><span class="o">));</span>
</pre>
               </div> 
              </div> 
             </dd> 
            </dl> </li> 
          </ul> 
         </div> 
         <div class="section" id="morphological-operators"> 
          <h2>Morphological Operators<a class="headerlink" href="#morphological-operators" title="Permalink to this headline">¶</a></h2> 
          <p>First of all we need to define the two matrices of morphological operator dilation and erosion, then with the methods erode and dilate of the class Imgproc we process the image twice in each operation, the result is the matrix morphOutput that will be the partial output.</p> 
          <blockquote> 
           <div>
            <div class="highlight-java">
             <div class="highlight">
              <pre><span></span><span class="c1">// morphological operators</span>
<span class="c1">// dilate with large element, erode with small ones</span>
 <span class="n">Mat</span> <span class="n">dilateElement</span> <span class="o">=</span> <span class="n">Imgproc</span><span class="o">.</span><span class="na">getStructuringElement</span><span class="o">(</span><span class="n">Imgproc</span><span class="o">.</span><span class="na">MORPH_RECT</span><span class="o">,</span> <span class="k">new</span> <span class="n">Size</span><span class="o">(</span><span class="mi">24</span><span class="o">,</span> <span class="mi">24</span><span class="o">));</span>
 <span class="n">Mat</span> <span class="n">erodeElement</span> <span class="o">=</span> <span class="n">Imgproc</span><span class="o">.</span><span class="na">getStructuringElement</span><span class="o">(</span><span class="n">Imgproc</span><span class="o">.</span><span class="na">MORPH_RECT</span><span class="o">,</span> <span class="k">new</span> <span class="n">Size</span><span class="o">(</span><span class="mi">12</span><span class="o">,</span> <span class="mi">12</span><span class="o">));</span>

 <span class="n">Imgproc</span><span class="o">.</span><span class="na">erode</span><span class="o">(</span><span class="n">mask</span><span class="o">,</span> <span class="n">morphOutput</span><span class="o">,</span> <span class="n">erodeElement</span><span class="o">);</span>
 <span class="n">Imgproc</span><span class="o">.</span><span class="na">erode</span><span class="o">(</span><span class="n">mask</span><span class="o">,</span> <span class="n">morphOutput</span><span class="o">,</span> <span class="n">erodeElement</span><span class="o">);</span>

 <span class="n">Imgproc</span><span class="o">.</span><span class="na">dilate</span><span class="o">(</span><span class="n">mask</span><span class="o">,</span> <span class="n">morphOutput</span><span class="o">,</span> <span class="n">dilateElement</span><span class="o">);</span>
 <span class="n">Imgproc</span><span class="o">.</span><span class="na">dilate</span><span class="o">(</span><span class="n">mask</span><span class="o">,</span> <span class="n">morphOutput</span><span class="o">,</span> <span class="n">dilateElement</span><span class="o">);</span>

 <span class="c1">// show the partial output</span>
 <span class="k">this</span><span class="o">.</span><span class="na">onFXThread</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">morphProp</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">mat2Image</span><span class="o">(</span><span class="n">morphOutput</span><span class="o">));</span>
</pre>
             </div> 
            </div> 
           </div>
          </blockquote> 
         </div> 
         <div class="section" id="object-tracking"> 
          <h2>Object tracking<a class="headerlink" href="#object-tracking" title="Permalink to this headline">¶</a></h2> 
          <p>With the partial output obtained before we can use the method findContours of the class Imgpoc to get a matrix with the mapping of the objects recognized, then we draw the contours of these objects.</p> 
          <blockquote> 
           <div>
            <div class="highlight-java">
             <div class="highlight">
              <pre><span></span><span class="c1">// init</span>
<span class="n">List</span><span class="o">&lt;</span><span class="n">MatOfPoint</span><span class="o">&gt;</span> <span class="n">contours</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
<span class="n">Mat</span> <span class="n">hierarchy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Mat</span><span class="o">();</span>

<span class="c1">// find contours</span>
<span class="n">Imgproc</span><span class="o">.</span><span class="na">findContours</span><span class="o">(</span><span class="n">maskedImage</span><span class="o">,</span> <span class="n">contours</span><span class="o">,</span> <span class="n">hierarchy</span><span class="o">,</span> <span class="n">Imgproc</span><span class="o">.</span><span class="na">RETR_CCOMP</span><span class="o">,</span> <span class="n">Imgproc</span><span class="o">.</span><span class="na">CHAIN_APPROX_SIMPLE</span><span class="o">);</span>

<span class="c1">// if any contour exist...</span>
<span class="k">if</span> <span class="o">(</span><span class="n">hierarchy</span><span class="o">.</span><span class="na">size</span><span class="o">().</span><span class="na">height</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">hierarchy</span><span class="o">.</span><span class="na">size</span><span class="o">().</span><span class="na">width</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span>
<span class="o">{</span>
        <span class="c1">// for each contour, display it in blue</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">idx</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">idx</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">hierarchy</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">idx</span><span class="o">)[</span><span class="mi">0</span><span class="o">])</span>
        <span class="o">{</span>
                <span class="n">Imgproc</span><span class="o">.</span><span class="na">drawContours</span><span class="o">(</span><span class="n">frame</span><span class="o">,</span> <span class="n">contours</span><span class="o">,</span> <span class="n">idx</span><span class="o">,</span> <span class="k">new</span> <span class="n">Scalar</span><span class="o">(</span><span class="mi">250</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
        <span class="o">}</span>
<span class="o">}</span>
</pre>
             </div> 
            </div> 
           </div>
          </blockquote> 
          <p>Finally we can get this results:</p> 
          <img alt="_images/09-01.png" src="_images/09-01.png"> 
          <img alt="_images/09-02.png" src="_images/09-02.png"> 
          <p>The source code of the entire tutorial is available on <a class="reference external" href="https://github.com/opencv-java/object-detection">GitHub</a>.</p> 
         </div> 
        </div> 
       </div> 
       <div class="articleComments"> 
       </div> 
      </div> 
      <footer> 
       <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation"> 
        <a href="09-camera-calibration.html" class="btn btn-neutral float-right" title="Camera Calibration" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a> 
        <a href="07-image-segmentation.html" class="btn btn-neutral" title="Image Segmentation" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a> 
       </div> 
       <hr> 
       <div role="contentinfo"> 
        <p> © Copyright 2014-2016, Luigi De Russis, Alberto Sacco. <span class="commit"> Revision <code>8514001c</code>. </span> </p> 
       </div> Built with 
       <a href="http://sphinx-doc.org/">Sphinx</a> using a 
       <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by 
       <a href="https://readthedocs.org">Read the Docs</a>. 
      </footer> 
     </div> 
    </div> 
   </section> 
  </div> 
  <div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions"> 
   <span class="rst-current-version" data-toggle="rst-current-version"> <span class="fa fa-book"> Read the Docs</span> v: latest <span class="fa fa-caret-down"></span> </span> 
   <div class="rst-other-versions"> 
    <dl> 
     <dt>
      Versions
     </dt> 
     <dd>
      <a href="/en/latest/">latest</a>
     </dd> 
     <dd>
      <a href="/en/stable/">stable</a>
     </dd> 
    </dl> 
    <dl> 
     <dt>
      Downloads
     </dt> 
     <dd>
      <a href="//readthedocs.org/projects/opencv-java-tutorials/downloads/pdf/latest/">pdf</a>
     </dd> 
     <dd>
      <a href="//readthedocs.org/projects/opencv-java-tutorials/downloads/htmlzip/latest/">htmlzip</a>
     </dd> 
     <dd>
      <a href="//readthedocs.org/projects/opencv-java-tutorials/downloads/epub/latest/">epub</a>
     </dd> 
    </dl> 
    <dl> 
     <dt>
      On Read the Docs
     </dt> 
     <dd> 
      <a href="//readthedocs.org/projects/opencv-java-tutorials/?fromdocs=opencv-java-tutorials">Project Home</a> 
     </dd> 
     <dd> 
      <a href="//readthedocs.org/builds/opencv-java-tutorials/?fromdocs=opencv-java-tutorials">Builds</a> 
     </dd> 
    </dl> 
    <hr> Free document hosting provided by 
    <a href="http://www.readthedocs.org">Read the Docs</a>. 
   </div> 
  </div> 
  <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'./',
            VERSION:'1.0',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: '.txt'
        };
    </script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-2.0.3.min.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-migrate-1.2.1.min.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/underscore.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/doctools.js"></script> 
  <script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/readthedocs-doc-embed.js"></script> 
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>  
 </body>
</html>