<!doctype html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
 <head> 
  <meta charset="UTF-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=10"> 
  <title>ASP.NET Identity 2.0 Cookie &amp; Token Authentication - CLE Developer - Justin Hyland</title> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="pingback" href="http://blog.iteedee.com/xmlrpc.php"> 
  <!-- This site is optimized with the Yoast WordPress SEO plugin v2.0.1 - https://yoast.com/wordpress/plugins/seo/ --> 
  <link rel="canonical" href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/"> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="ASP.NET Identity 2.0 Cookie &amp; Token Authentication - CLE Developer - Justin Hyland"> 
  <meta property="og:description" content="This tutorial is centered around building an application that will support multiple platforms. The need to support a web application along with a complement of mobile apps is not uncommon. This tutorial will focus on setting up ASP.NET Identity 2.0 in a ASP.NET MVC application with WebAPI Support. Update: If you are interested in two …"> 
  <meta property="og:url" content="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/"> 
  <meta property="og:site_name" content="CLE Developer - Justin Hyland"> 
  <meta property="article:section" content=".NET"> 
  <meta property="article:published_time" content="2014-03-02T21:06:26+00:00"> 
  <meta property="article:modified_time" content="2014-04-13T21:34:55+00:00"> 
  <meta property="og:updated_time" content="2014-04-13T21:34:55+00:00"> 
  <meta property="og:image" content="http://blog.iteedee.com/wp-content/uploads/2014/03/ASP_NET_Identity_2_0_Cookie_Token.png"> 
  <!-- / Yoast WordPress SEO plugin. --> 
  <link rel="alternate" type="application/rss+xml" title="CLE Developer - Justin Hyland » Feed" href="http://blog.iteedee.com/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="CLE Developer - Justin Hyland » Comments Feed" href="http://blog.iteedee.com/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="CLE Developer - Justin Hyland » ASP.NET Identity 2.0 Cookie &amp; Token Authentication Comments Feed" href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/blog.iteedee.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.5.9"}};
			!function(a,b,c){function d(a){var c,d,e,f=b.createElement("canvas"),g=f.getContext&&f.getContext("2d"),h=String.fromCharCode;if(!g||!g.fillText)return!1;switch(g.textBaseline="top",g.font="600 32px Arial",a){case"flag":return g.fillText(h(55356,56806,55356,56826),0,0),f.toDataURL().length>3e3;case"diversity":return g.fillText(h(55356,57221),0,0),c=g.getImageData(16,16,1,1).data,d=c[0]+","+c[1]+","+c[2]+","+c[3],g.fillText(h(55356,57221,55356,57343),0,0),c=g.getImageData(16,16,1,1).data,e=c[0]+","+c[1]+","+c[2]+","+c[3],d!==e;case"simple":return g.fillText(h(55357,56835),0,0),0!==g.getImageData(16,16,1,1).data[0];case"unicode8":return g.fillText(h(55356,57135),0,0),0!==g.getImageData(16,16,1,1).data[0]}return!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i;for(i=Array("simple","flag","unicode8","diversity"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="siteorigin-panels-front-css" href="http://blog.iteedee.com/wp-content/plugins/siteorigin-panels/css/front.css?ver=2.4.6" type="text/css" media="all"> 
  <link rel="stylesheet" id="default-icon-styles-css" href="http://blog.iteedee.com/wp-content/plugins/svg-vector-icon-plugin/public/../admin/css/wordpress-svg-icon-plugin-style.min.css?ver=4.5.9" type="text/css" media="all"> 
  <link rel="stylesheet" id="vantage-style-css" href="http://blog.iteedee.com/wp-content/themes/vantage/style.css?ver=2.1.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="vantage-fontawesome-css" href="http://blog.iteedee.com/wp-content/themes/vantage/fontawesome/css/font-awesome.css?ver=3.2.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="siteorigin-mobilenav-css" href="http://blog.iteedee.com/wp-content/themes/vantage/premium/extras/mobilenav/css/mobilenav.css?ver=2.1.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="wp-markdown-prettify-css" href="http://blog.iteedee.com/wp-content/plugins/wp-markdown/css/prettify.css?ver=1.5.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="vantage-premium-css" href="http://blog.iteedee.com/wp-content/themes/vantage/premium/style.css?ver=2.1.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="jetpack_css-css" href="http://blog.iteedee.com/wp-content/plugins/jetpack/css/jetpack.css?ver=3.4.4" type="text/css" media="all"> 
  <!-- This site uses the Google Analytics by MonsterInsights plugin v5.4.9 - Universal disabled - https://www.monsterinsights.com/ --> 
  <script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-47549945-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script> 
  <!-- / Google Analytics by MonsterInsights --> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/plugins/pippity/js/pippity.js?ver=4.5.9"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/themes/vantage/js/jquery.flexslider.min.js?ver=2.1"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/themes/vantage/js/jquery.fitvids.min.js?ver=1.0"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/themes/vantage/js/jquery.theme-main.min.js?ver=2.1.7"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/themes/vantage/premium/extras/ajax-comments/ajax-comments.min.js?ver=1.0"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var mobileNav = {"search":{"url":"http:\/\/blog.iteedee.com","placeholder":"Search"},"text":{"navigate":"Menu","back":"Back","close":"Close"},"nextIconUrl":"http:\/\/blog.iteedee.com\/wp-content\/themes\/vantage\/premium\/extras\/mobilenav\/images\/next.png"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/themes/vantage/premium/extras/mobilenav/js/mobilenav.min.js?ver=2.1.7"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/plugins/wp-markdown/js/prettify.min.js?ver=1.5.1"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/plugins/wp-markdown/js/markdown.min.js?ver=1.5.1"></script> 
  <link rel="https://api.w.org/" href="http://blog.iteedee.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://blog.iteedee.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://blog.iteedee.com/wp-includes/wlwmanifest.xml"> 
  <meta name="generator" content="WordPress 4.5.9"> 
  <link rel="shortlink" href="http://wp.me/p43qBp-6O"> 
  <link rel="alternate" type="application/json+oembed" href="http://blog.iteedee.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fblog.iteedee.com%2F2014%2F03%2Fasp-net-identity-2-0-cookie-token-authentication%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://blog.iteedee.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fblog.iteedee.com%2F2014%2F03%2Fasp-net-identity-2-0-cookie-token-authentication%2F&amp;format=xml"> 
  <script type="text/javascript">
				pippity_globals = function(jQuery){
				window.$j = jQuery;
				window.PTY_URL = "http://blog.iteedee.com/wp-content/plugins/pippity";
				window.PTY_DOM = "blog.iteedee.com";
				window.PTY_AJAX = "http://blog.iteedee.com/wp-admin/admin-ajax.php";
				window.PTY_ADM = "http://blog.iteedee.com/wp-admin/admin.php?page=";
				window.PTY_PAGE = "";
				window.PTY_ISPOST = true;
				window.PTY_KEY = "OTIwMzc2MjVkOWI0Mzc0YjllOTU2ZTFhNjkwOWRlZmNhNGY0OTk2ZDlhZTE4ZDlkNTY4YWNkMjA5ZjZmYTdlYWM5YTM5MTQ0ZjRkMTllMWQ=";
				window.PTY_AFFLINK = "";
				window.PTY_AFFTEXT = "";
				window.PTY_NEWPOPUP = "false";
				
				}(jQuery)
			</script> 
  <!--[if lt IE 9]>
		<script src="http://blog.iteedee.com/wp-content/themes/vantage/js/html5.js" type="text/javascript"></script>
	<![endif]--> 
  <!--[if (gte IE 6)&(lte IE 8)]>
		<script type="text/javascript" src="http://blog.iteedee.com/wp-content/themes/vantage/js/selectivizr.js"></script>
	<![endif]--> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <style type="text/css">
		.so-mobilenav-mobile + * { display: none; }
		@media screen and (max-width: 480px) { .so-mobilenav-mobile + * { display: block; } .so-mobilenav-standard + * { display: none; } }
	</style> 
  <style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style> 
  <style type="text/css" media="screen">
		#footer-widgets .widget { width: 100%; }
		@media screen and (max-width: 640px) {
			#footer-widgets .widget { width: auto; float: none; }
		}
	</style> 
  <style type="text/css" id="vantage-footer-widgets">#footer-widgets aside { width : 100%; } </style> 
  <style type="text/css" id="customizer-css"></style>
 </head> 
 <body class="single single-post postid-422 single-format-standard siteorigin-panels responsive layout-full no-js has-menu-search mobilenav"> 
  <div id="page-wrapper"> 
   <header id="masthead" class="site-header" role="banner"> 
    <hgroup class="full-container"> 
     <a href="http://blog.iteedee.com/" title="CLE Developer – Justin Hyland" rel="home" class="logo"><img src="http://blog.iteedee.com/wp-content/uploads/2013/11/Iteedee_web_v5.png" width="300" height="142" alt="CLE Developer - Justin Hyland Logo"></a> 
     <div class="support-text">
       Midwest Inspired Enterprise Software Solutions 
     </div> 
    </hgroup>
    <!-- hgroup.full-container --> 
    <nav role="navigation" class="site-navigation main-navigation primary use-sticky-menu"> 
     <div class="full-container"> 
      <div id="search-icon"> 
       <div id="search-icon-icon">
        <div class="icon"></div>
       </div> 
       <form method="get" class="searchform" action="http://blog.iteedee.com/" role="search"> 
        <input type="text" class="field" name="s" value=""> 
       </form> 
      </div> 
      <div id="so-mobilenav-standard-1" data-id="1" class="so-mobilenav-standard"></div>
      <div class="menu-home-container">
       <ul id="menu-home" class="menu">
        <li id="menu-item-62" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-62"><a href="http://blog.iteedee.com/"><span class="icon"></span>Home</a></li> 
        <li id="menu-item-16" class="menu-item menu-item-type-post_type menu-item-object-page current_page_parent menu-item-16"><a href="http://blog.iteedee.com/blog/">Blog</a></li> 
        <li id="menu-item-482" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-482"><a href="http://blog.iteedee.com/projects/">Projects</a> 
         <ul class="sub-menu"> 
          <li id="menu-item-512" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-512"><a href="http://blog.iteedee.com/projects/beta-depot/">Beta Depot</a></li> 
          <li id="menu-item-637" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-637"><a href="http://www.knowvent.com" onclick="_gaq.push(['_trackEvent', 'outbound-widget', 'http://www.knowvent.com', 'Knowvent']);" target="_blank"><span class="icon"></span>Knowvent</a></li> 
         </ul> </li> 
        <li id="menu-item-61" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61"><a href="http://blog.iteedee.com/about/">About</a></li> 
       </ul>
      </div>
      <div id="so-mobilenav-mobile-1" data-id="1" class="so-mobilenav-mobile"></div>
      <div class="menu-mobilenav-container">
       <ul id="mobile-nav-item-wrap-1" class="menu">
        <li><a href="#" class="mobilenav-main-link" data-id="1"><span class="mobile-nav-icon"></span>Menu</a></li>
       </ul>
      </div> 
     </div> 
    </nav>
    <!-- .site-navigation .main-navigation --> 
   </header>
   <!-- #masthead .site-header --> 
   <div id="main" class="site-main"> 
    <div class="full-container"> 
     <div id="primary" class="content-area"> 
      <div id="content" class="site-content" role="main"> 
       <article id="post-422" class="post post-422 type-post status-publish format-standard has-post-thumbnail hentry category-net category-api category-mvc category-security category-uncategorized"> 
        <div class="entry-main"> 
         <header class="entry-header"> 
          <div class="entry-thumbnail">
           <img width="720" height="380" src="http://blog.iteedee.com/wp-content/uploads/2014/03/ASP_NET_Identity_2_0_Cookie_Token.png" class="attachment-post-thumbnail size-post-thumbnail wp-post-image" alt="ASP.NET Identity 2.9 Cookie &amp; Token" srcset="http://blog.iteedee.com/wp-content/uploads/2014/03/ASP_NET_Identity_2_0_Cookie_Token.png 720w, http://blog.iteedee.com/wp-content/uploads/2014/03/ASP_NET_Identity_2_0_Cookie_Token-300x158.png 300w" sizes="(max-width: 720px) 100vw, 720px">
          </div> 
          <h1 class="entry-title"><a href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/" title="Permalink to ASP.NET Identity 2.0 Cookie &amp; Token Authentication" rel="bookmark">ASP.NET Identity 2.0 Cookie &amp; Token Authentication</a></h1> 
          <div class="entry-meta">
            Posted on 
           <a href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/" title="9:06 pm" rel="bookmark"><time class="entry-date updated" datetime="2014-03-02T21:06:26+00:00">March 2, 2014</time></a> 
           <span class="byline"> by <span class="author vcard"><a class="url fn n" href="http://blog.iteedee.com/author/hylander0/" title="View all posts by Justin Hyland" rel="author">Justin Hyland</a></span></span> 
          </div>
          <!-- .entry-meta --> 
         </header>
         <!-- .entry-header --> 
         <div class="entry-content"> 
          <div style="text-align: center; " class="iteed-before-post-long" id="iteed-1398338869">
           <p><a href="http://www.knowvent.com"><img class="alignnone wp-image-676 " src="http://blog.iteedee.com/wp-content/uploads/2015/03/knowventBanner.jpg" alt="knowventBanner" width="673" height="83" srcset="http://blog.iteedee.com/wp-content/uploads/2015/03/knowventBanner.jpg 600w, http://blog.iteedee.com/wp-content/uploads/2015/03/knowventBanner-300x37.jpg 300w" sizes="(max-width: 673px) 100vw, 673px"></a></p> 
          </div>
          <p>This tutorial is centered around building an application that will support multiple platforms. The need to support a web application along with a complement of mobile apps is not uncommon. This tutorial will focus on setting up ASP.NET Identity 2.0 in a ASP.NET MVC application with WebAPI Support.</p> 
          <blockquote> 
           <p><strong>Update:</strong> If you are interested in two factor authentication then check out my new article on <a href="http://blog.iteedee.com/2014/04/asp-net-identity-2-0-two-factor-authentication/">ASP.NET Identity 2.0 Two Factor Authentication</a></p> 
          </blockquote> 
          <h2>Use Case</h2> 
          <p>The need for an authentication solution what will support both web and a native mobile application is a real need. One user store multiple authentication methods. We will need the web application to authentication using cookies and the mobile counterpart will need to use a token-based authentication.</p> 
          <h2>What We Are Using?</h2> 
          <ul> 
           <li><strong>Visual Studio 2013 – MVC/Individual Authentication project Template</strong></li> 
           <li><strong>ASP.NET Identity 2.0 (Pre-release)</strong></li> 
           <li><strong>ASP.NET MVC 5 &amp; WebAPI</strong></li> 
           <li><strong>OWIN Identity Middleware</strong></li> 
          </ul> 
          <h2>Install Prerequisites</h2> 
          <p>I am using a ASP.NET MVC template with <em>Individual Authenication</em> found in the Visual Studio 2013 project setup. At the time this article was written, ASP.NET Identity 2.0 was still in pre-release. To demo the ASP.NET Identity 2.0 I updated my Nuget Identity packages to the pre-release versions. I have listed below the details of the packages used (some are defaults of the Visual Studio project initialization).</p> 
          <pre><code>Id                             Version              Description/Release Notes                                                                                                                 
--                             -------              -------------------------                                                                                                                 
Antlr                          3.4.1.9004           ANother Tool for Language Recognition, is a language tool that provides a framework for constructing recognizers, interpreters, compile...
bootstrap                      3.0.0                Sleek, intuitive, and powerful front-end framework for faster and easier web development.                                                 
EntityFramework                6.1.0-beta1          Entity Framework is Microsoft's recommended data access technology for new applications.                                                  
jQuery                         1.10.2               jQuery is a new kind of JavaScript Library....                                                                                            
jQuery.Validation              1.11.1               This jQuery plugin makes simple clientside form validation trivial, while offering lots of option for customization. That makes a good ...
Microsoft.AspNet.Identity.Core 2.0.0-beta1          Core interfaces for ASP.NET Identity.                                                                                                     
Microsoft.AspNet.Identity.E... 2.0.0-beta1          ASP.NET Identity providers that use Entity Framework.                                                                                     
Microsoft.AspNet.Identity.Owin 2.0.0-beta1          Owin implementation for ASP.NET Identity.                                                                                                 
Microsoft.AspNet.Mvc           5.0.0                This package contains the runtime assemblies for ASP.NET MVC. ASP.NET MVC gives you a powerful, patterns-based way to build dynamic web...
Microsoft.AspNet.Razor         3.0.0                This package contains the runtime assemblies for ASP.NET Web Pages. ASP.NET Web Pages and the new Razor syntax provide a fast, terse, c...
Microsoft.AspNet.Web.Optimi... 1.1.1                ASP.NET Optimization introduces a way to bundle and optimize CSS and JavaScript files.                                                    
Microsoft.AspNet.WebApi        5.0.0                This package contains everything you need to host ASP.NET Web API on IIS. ASP.NET Web API is a framework that makes it easy to build HT...
Microsoft.AspNet.WebApi.Client 5.0.0                This package adds support for formatting and content negotiation to System.Net.Http. It includes support for JSON, XML, and form URL en...
Microsoft.AspNet.WebApi.Core   5.0.0                This package contains the core runtime assemblies for ASP.NET Web API. This package is used by hosts of the ASP.NET Web API runtime. To...
Microsoft.AspNet.WebApi.Web... 5.0.0                This package contains everything you need to host ASP.NET Web API on IIS. ASP.NET Web API is a framework that makes it easy to build HT...
Microsoft.AspNet.WebPages      3.0.0                This package contains core runtime assemblies shared between ASP.NET MVC and ASP.NET Web Pages.                                           
Microsoft.jQuery.Unobtrusiv... 3.0.0                jQuery plugin that unobtrusively sets up jQuery.Validation.                                                                               
Microsoft.Owin                 2.0.2                Provides a set of helper types and abstractions for simplifying the creation of OWIN components.                                          
Microsoft.Owin.Host.SystemWeb  2.0.0                OWIN server that enables OWIN-based applications to run on IIS using the ASP.NET request pipeline.                                        
Microsoft.Owin.Security        2.0.2                Common types which are shared by the various authentication middleware components.                                                        
Microsoft.Owin.Security.Coo... 2.0.2                Middleware that enables an application to use cookie based authentication, similar to ASP.NET's forms authentication.                     
Microsoft.Owin.Security.Fac... 2.0.0                Middleware that enables an application to support Facebook's OAuth 2.0 authentication workflow.                                           
Microsoft.Owin.Security.Google 2.0.0                Middleware that enables an application to support Google's OpenId authentication workflow.                                                
Microsoft.Owin.Security.Mic... 2.0.0                Middleware that enables an application to support the Microsoft Account authentication workflow.                                          
Microsoft.Owin.Security.OAuth  2.0.2                Middleware that enables an application to support any standard OAuth 2.0 authentication workflow.                                         
Microsoft.Owin.Security.Twi... 2.0.0                Middleware that enables an application to support Twitter's OAuth 2.0 authentication workflow.                                            
Microsoft.Web.Infrastructure   1.0.0.0              This package contains the Microsoft.Web.Infrastructure assembly that lets you dynamically register HTTP modules at run time.              
Modernizr                      2.6.2                Modernizr adds classes to the &lt;html&gt; element which allow you to target specific browser functionality in your stylesheet. You don't act...
Newtonsoft.Json                5.0.6                Json.NET is a popular high-performance JSON framework for .NET                                                                            
Owin                           1.0                  OWIN IAppBuilder startup interface                                                                                                        
Respond                        1.2.0                The goal of this script is to provide a fast and lightweight (3kb minified / 1kb gzipped) script to enable responsive web designs in br...
WebGrease                      1.5.2                Web Grease is a suite of tools for optimizing javascript, css files and images. 
</code></pre> 
          <hr> 
          <h2>Some New Patterns with ASP.NET Identity 2.0</h2> 
          <p>If you are not familiar with <a href="http://owin.org/" onclick="_gaq.push(['_trackEvent', 'outbound-article', 'http://owin.org/', 'OWIN']);" rel="external nofollow" title="" class="ext-link" data-wpel-target="_blank">OWIN</a> this is a effort by Microsoft to create more modular, decoupled software with quicker release cycles. MVC 5 and ASP.NET Identity uses many different OWIN <a href="http://www.asp.net/aspnet/overview/owin-and-katana/owin-middleware-in-the-iis-integrated-pipeline" onclick="_gaq.push(['_trackEvent', 'outbound-article', 'http://www.asp.net/aspnet/overview/owin-and-katana/owin-middleware-in-the-iis-integrated-pipeline', 'middle']);" rel="external nofollow" title="" class="ext-link" data-wpel-target="_blank">middle</a> components. If you would like to get more information about OWN you can <a href="http://www.asp.net/vnext/overview/owin-and-katana" onclick="_gaq.push(['_trackEvent', 'outbound-article', 'http://www.asp.net/vnext/overview/owin-and-katana', 'read more about it here']);" rel="external nofollow" title="" class="ext-link" data-wpel-target="_blank">read more about it here</a>.</p> 
          <p>The ASP.NET Identity includes support for creating a single instance of a the <code>UserManager</code> and the identity <code>DBContext</code> per application request. To support this pattern use the follow extension methods per the <code>IAppBuilder</code> object:</p> 
          <pre><code>app.CreatePerOwinContext&lt;AppUserIdentityDbContext&gt;(AppUserIdentityDbContext.Create);
app.CreatePerOwinContext&lt;AppUserManager&gt;(AppUserManager.Create);
</code></pre> 
          <p>Here is the AppManager Class:</p> 
          <pre><code>public class AppUserManager : UserManager&lt;AppUserIdentity&gt;
{
    public AppUserManager(IUserStore&lt;AppUserIdentity&gt; store)
        : base(store) { }

    public static AppUserManager Create(IdentityFactoryOptions&lt;AppUserManager&gt; options, IOwinContext context)
    {
        var manager = new AppUserManager(new UserStore&lt;AppUserIdentity&gt;(context.Get&lt;AppUserIdentityDbContext&gt;()));
        return manager;
    }

}
</code></pre> 
          <p>To get the <code>AppManager</code> object during a MVC Controller execution:</p> 
          <pre><code>private AppUserManager _userManager;
public AppUserManager UserManager
{
    get
    {
        return _userManager ?? HttpContext.GetOwinContext().GetUserManager&lt;AppUserManager&gt;();
    }
    private set
    {
        _userManager = value;
    }
} 
</code></pre> 
          <hr> 
          <h2>How to Setup ASP.NET Identity 2.0 to Support Cookie and Bearer Token Authentication</h2> 
          <p>Like I mention above, there is a real world need to have an application support both web-based and native mobile applications. This requires two authentication modes: Cookie Authentication for your web-based application and the token authentication for mobile/rich client scenarios.</p> 
          <blockquote> 
           <p>Since the Visual Studio 2013 project setup supports Cookie authentication out of the box. So, this article will focus primarily on how to dovetail WebAPI and Token Authentication to use the same User Store.</p> 
          </blockquote> 
          <h3>Setup WebAPIConfig</h3> 
          <p>The first task is setting up the <code>Startup</code> class:</p> 
          <pre><code>    public static OAuthBearerAuthenticationOptions OAuthBearerOptions { get; private set; }

    public void ConfigureAuth(IAppBuilder app)
    {
        app.CreatePerOwinContext&lt;AppUserIdentityDbContext&gt;(AppUserIdentityDbContext.Create);
        app.CreatePerOwinContext&lt;AppUserManager&gt;(AppUserManager.Create);

        OAuthBearerOptions = new OAuthBearerAuthenticationOptions();
        app.UseOAuthBearerAuthentication(OAuthBearerOptions);

        //...Cookie Auth Setup here...//
    }
</code></pre> 
          <p>Here we are setup the context singleton for the DBContext and UserManager (as mention above). The important part of this snippet for authentication is initializing the bearer options object and adding the <code>UseOAuthBearerAuthentication</code> middle ware authentication to the pipeline. This will enable the app to use Bearer Tokens for authentication.</p> 
          <hr> 
          <p>The next task required to support WebAPI auth is to suppress cookie authentication on API requests. This is done by added in the following code to the WebApiConfig <code>Register</code> method.</p> 
          <pre><code>public static void Register(HttpConfiguration config)
{
    //...Route Registration...///

    config.SuppressDefaultHostAuthentication();
    config.Filters.Add(new HostAuthenticationFilter("Bearer"));
}
</code></pre> 
          <p>The first method tells the pipeline authentication to fall through to the request handler. The second adds an authentication handler that will validate the authentication HTTP host headers. This configuration tells the handler to look at the <code>Authorization</code> Header value of <em>“Bearer abcedefghijklmnopqrstuvwxyz1234567890”</em> as the token. <em>More on this later.</em></p> 
          <p>Do <strong>Note</strong> the two methods used are extension methods found in a OWIN package. If these methods can’t be resolved you will probably need to install the following <a href="https://www.nuget.org/packages/Microsoft.AspNet.WebApi.Owin" onclick="_gaq.push(['_trackEvent', 'outbound-article', 'https://www.nuget.org/packages/Microsoft.AspNet.WebApi.Owin', 'package']);" rel="external nofollow" title="" class="ext-link" data-wpel-target="_blank">package</a>:</p> 
          <pre><code>`Install-Package Microsoft.AspNet.WebApi.Owin`  
</code></pre> 
          <hr> 
          <h3>Get Your Token</h3> 
          <p>The HostAuthenticationFilter will look for an authorization header for all <code>[Authorize]</code> annotated controllers/method. This requires an authentication process that returns a bearer token. The <strong>Microsoft.Owin.Security</strong> will come in to play here. The code below shows how to create a ticket based on the user’s claims Identity and generated a token based on the security ticket. It returns a token that will expire in 30 minutes.</p> 
          <pre><code>public String Authenticate(string user, string password)
{

    if (string.IsNullOrEmpty(user) || string.IsNullOrEmpty(password))
        return "failed";
    var userIdentity = UserManager.FindAsync(user, password).Result;
    if (userIdentity != null)
    {
        var identity = new ClaimsIdentity(Startup.OAuthBearerOptions.AuthenticationType);
        identity.AddClaim(new Claim(ClaimTypes.Name, user));
        identity.AddClaim(new Claim(ClaimTypes.NameIdentifier, userIdentity.Id));
        AuthenticationTicket ticket = new AuthenticationTicket(identity, new AuthenticationProperties());
        var currentUtc = new SystemClock().UtcNow;
        ticket.Properties.IssuedUtc = currentUtc;
        ticket.Properties.ExpiresUtc = currentUtc.Add(TimeSpan.FromMinutes(30));
        string AccessToken = Startup.OAuthBearerOptions.AccessTokenFormat.Protect(ticket);
        return AccessToken;
    }
    return "failed";
}
</code></pre> 
          <p>When successfully authenticated you will get a token like <code>hBJi26lVQwUJF6f7roDy-oVnV_VeX20m52xL2dzF1q5IQPkt3n30610UbpFl9JV75.......</code>. Passing this in with each request’s authorization header is all that is needed to authenticate the request. Be sure to include the ‘Bearer’ designation along with the token like <code>Bearer hBJi26lVQwUJF6f7roDy-oVnV_VeX20m52xL2dzF1q5IQPkt3n30610UbpFl9JV75.......</code></p> 
          <hr> 
          <p>You will now be able execute the following method that will return the userId and User name.</p> 
          <pre><code>[Authorize]
[HttpGet]
[ActionName("ValidateToken")]
public String ValidateToken()
{
    var user = this.User.Identity;
    if (user != null)
        return string.Format("{0} - {1}", user.GetUserId(), user.GetUserName());
    else
        return "Unable to resolve user id";

}
</code></pre> 
          <p>Feel free to download the <a href="https://github.com/hylander0/MasterKeyAuthentication" onclick="_gaq.push(['_trackEvent', 'outbound-article', 'https://github.com/hylander0/MasterKeyAuthentication', 'GitHub source code']);" rel="external nofollow" title="" class="ext-link" data-wpel-target="_blank">GitHub source code</a> (or <a href="https://github.com/hylander0/MasterKeyAuthentication/archive/master.zip" onclick="_gaq.push(['_trackEvent','download','https://github.com/hylander0/MasterKeyAuthentication/archive/master.zip']);" rel="external nofollow" title="" class="ext-link" data-wpel-target="_blank">Zip</a>) that goes along with this article.</p> 
          <h4>Let us know if this help you.</h4> 
          <span id="pty_trigger"></span> 
         </div>
         <!-- .entry-content --> 
         <div class="entry-categories">
           Posted in 
          <a href="http://blog.iteedee.com/category/net/" rel="category tag">.NET</a>, 
          <a href="http://blog.iteedee.com/category/api/" rel="category tag">API</a>, 
          <a href="http://blog.iteedee.com/category/net/mvc/" rel="category tag">MVC</a>, 
          <a href="http://blog.iteedee.com/category/security/" rel="category tag">Security</a>, 
          <a href="http://blog.iteedee.com/category/uncategorized/" rel="category tag">Uncategorized</a>. 
         </div> 
         <div id="fb-root"></div> 
         <script type="text/javascript">
			(function(d, s, id) {
		  var js, fjs = d.getElementsByTagName(s)[0];
		  if (d.getElementById(id)) return;
		  js = d.createElement(s); js.id = id;
		  js.src = "//connect.facebook.net/en_GB/all.js#xfbml=1";
		  fjs.parentNode.insertBefore(js, fjs);
		}(document, 'script', 'facebook-jssdk'));
		</script> 
         <script type="text/javascript">
			// Google Plus One
			(function () {
				var po = document.createElement( 'script' );
				po.type = 'text/javascript';
				po.async = true;
				po.src = 'https://apis.google.com/js/plusone.js';
				var s = document.getElementsByTagName( 'script' )[0];
				s.parentNode.insertBefore( po, s );
			})();
		</script> 
         <ul class="share-buttons"> 
          <li class="network facebook" style="width:90px"> 
           <div class="fb-like" data-href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/" data-width="90" data-layout="button_count" data-send="false" data-height="21" data-show-faces="false" data-action="like"></div> </li> 
          <li class="network twitter" style="width:90px"> <iframe allowtransparency="true" frameborder="0" scrolling="no" src="http://platform.twitter.com/widgets/tweet_button.html?url=http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/&amp;text=ASP.NET Identity 2.0 Cookie &amp; Token Authentication&amp;related" style="width:90px; height:20px;"></iframe> </li> 
          <li class="network plusone" style="width:90px"> 
           <div class="g-plusone" data-size="medium" data-width="160"></div> </li> 
         </ul> 
        </div> 
       </article>
       <!-- #post-422 --> 
       <nav role="navigation" id="nav-below" class="site-navigation post-navigation"> 
        <h1 class="assistive-text">Post navigation</h1> 
        <div class="single-nav-wrapper"> 
         <div class="nav-previous">
          <a href="http://blog.iteedee.com/2014/02/snapchat-went-wrong/" rel="prev"><span class="meta-nav">?</span> Where Snapchat’s Security Went Wrong</a>
         </div> 
         <div class="nav-next">
          <a href="http://blog.iteedee.com/2014/03/parse-apk-manifest-with-c-net/" rel="next">Parse APK Manifest with C# .NET <span class="meta-nav">?</span></a>
         </div> 
        </div> 
       </nav>
       <!-- #nav-below --> 
       <div id="single-comments-wrapper"> 
        <div id="disqus_thread"> 
         <div id="dsq-content"> 
          <ul id="dsq-comments"> 
           <li class="comment even thread-even depth-1" id="dsq-comment-86"> 
            <div id="dsq-comment-header-86" class="dsq-comment-header"> 
             <cite id="dsq-cite-86"> <span id="dsq-author-user-86">khurram</span> </cite> 
            </div> 
            <div id="dsq-comment-body-86" class="dsq-comment-body"> 
             <div id="dsq-comment-message-86" class="dsq-comment-message">
              <p>IdentityFactoryOptions is giveing me error</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment odd alt depth-2" id="dsq-comment-87"> 
              <div id="dsq-comment-header-87" class="dsq-comment-header"> 
               <cite id="dsq-cite-87"> <span id="dsq-author-user-87">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-87" class="dsq-comment-body"> 
               <div id="dsq-comment-message-87" class="dsq-comment-message">
                <p>I imagine you are getting an invalid reference to the IdentityFactoryOptions object. The is part of the Owin identity package. Make sure your project has the Microsoft.AspNet.Identity.Owin Nuget package installed (prerelease 2.0 beta-1). You should see a project reference to Microsoft.AspNet.Identity.Owin library.</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-90"> 
            <div id="dsq-comment-header-90" class="dsq-comment-header"> 
             <cite id="dsq-cite-90"> <span id="dsq-author-user-90">arecoba</span> </cite> 
            </div> 
            <div id="dsq-comment-body-90" class="dsq-comment-body"> 
             <div id="dsq-comment-message-90" class="dsq-comment-message">
              <p>Thank you, but I want to use this solution using MongoDB.AspNet.Identity. Can you help me ?<br> I have probleme to convert Entity Framework class.</p> 
              <p>Thanks in advance</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment odd alt depth-2" id="dsq-comment-91"> 
              <div id="dsq-comment-header-91" class="dsq-comment-header"> 
               <cite id="dsq-cite-91"> <span id="dsq-author-user-91">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-91" class="dsq-comment-body"> 
               <div id="dsq-comment-message-91" class="dsq-comment-message">
                <p>@arecoba:disqus<br> There is an article that details how to achieve this except they are targeting the Identity 1.0 version. <a href="http://devblog.wesmcclure.com/posts/building-a-mongodb-provider-for-the-new-asp.net-identity-framework-part-1" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'http://devblog.wesmcclure.com/posts/building-a-mongodb-provider-for-the-new-asp.net-identity-framework-part-1', 'http://devblog.wesmcclure.com/posts/building-a-mongodb-provider-for-the-new-asp.net-identity-framework-part-1']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">http://devblog.wesmcclure.com/posts/building-a-mongodb-provider-for-the-new-asp.net-identity-framework-part-1</a></p> 
                <p>The contributor of the nuget package that adds MongoDB support has indicated that they will be working to support the 2.0 version of Identity:<br> <a href="https://www.nuget.org/packages/MongoDB.AspNet.Identity/" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'https://www.nuget.org/packages/MongoDB.AspNet.Identity/', 'https://www.nuget.org/packages/MongoDB.AspNet.Identity/']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">https://www.nuget.org/packages/MongoDB.AspNet.Identity/</a></p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
             <li class="comment even depth-2" id="dsq-comment-111"> 
              <div id="dsq-comment-header-111" class="dsq-comment-header"> 
               <cite id="dsq-cite-111"> <span id="dsq-author-user-111">arecoba</span> </cite> 
              </div> 
              <div id="dsq-comment-body-111" class="dsq-comment-body"> 
               <div id="dsq-comment-message-111" class="dsq-comment-message">
                <p>Thanks a lot</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt thread-even depth-1" id="dsq-comment-93"> 
            <div id="dsq-comment-header-93" class="dsq-comment-header"> 
             <cite id="dsq-cite-93"> <span id="dsq-author-user-93">Valentino Rijhen</span> </cite> 
            </div> 
            <div id="dsq-comment-body-93" class="dsq-comment-body"> 
             <div id="dsq-comment-message-93" class="dsq-comment-message">
              <p>Nice project, but I cannot run it. Does it have to do with a missing MasterKey database? Do you already have an example? Where can I find this? Thanks in advance.</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-2" id="dsq-comment-94"> 
              <div id="dsq-comment-header-94" class="dsq-comment-header"> 
               <cite id="dsq-cite-94"> <span id="dsq-author-user-94">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-94" class="dsq-comment-body"> 
               <div id="dsq-comment-message-94" class="dsq-comment-message">
                <p>I guess if you had a specific error I could speak to your issue. The<br> Identity database will be automatically created on the localDB SQL<br> instance when application first runs.</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-96"> 
            <div id="dsq-comment-header-96" class="dsq-comment-header"> 
             <cite id="dsq-cite-96"> <span id="dsq-author-user-96">mikeysee</span> </cite> 
            </div> 
            <div id="dsq-comment-body-96" class="dsq-comment-body"> 
             <div id="dsq-comment-message-96" class="dsq-comment-message">
              <p>Hi Justin,</p> 
              <p>Good article. Im confused however. What happens if you are running a native mobile app with the Facebook SDK for example. FB will just return you an access token, how do you then use that to authenticate the user using WebAPI?</p> 
              <p>Cheers,<br> Mike</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-2" id="dsq-comment-97"> 
              <div id="dsq-comment-header-97" class="dsq-comment-header"> 
               <cite id="dsq-cite-97"> <span id="dsq-author-user-97">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-97" class="dsq-comment-body"> 
               <div id="dsq-comment-message-97" class="dsq-comment-message">
                <p>Mike,</p> 
                <p>Thanks for reading. This article maintains that you will use ASP.NET identity 2.0 User provider (its own user name and passwords). Facebook’s authentication tokens don’t really do much good with anything but Facebook and their services.</p> 
                <p>It is difficult to tell what your authentication workflow needs to be. If want to share FB authentication you will need to “Test” the access token on your server for each request made to the WebAPI. This falls outside of the ASP.NET Identity 2.0 discussion since you don’t need a identity provider or a token service (your using Facebooks)</p> 
                <p>You can find a good example in one of my projects where I validated WebAPI requests based on a token passed in: <a href="https://github.com/hylander0/WebApiSoup" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'https://github.com/hylander0/WebApiSoup', 'https://github.com/hylander0/WebApiSoup']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">https://github.com/hylander0/WebApiSoup</a></p> 
                <p>Basically, you will need to setup a custom Auth MessageHandler where you will get the access token and Facebook user id and test it (good examples here: <a href="http://stackoverflow.com/questions/5406859/facebook-access-token-server-side-validation-for-iphone-app" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'http://stackoverflow.com/questions/5406859/facebook-access-token-server-side-validation-for-iphone-app', 'http://stackoverflow.com/questions/5406859/facebook-access-token-server-side-validation-for-iphone-app']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">http://stackoverflow.com/questions/5406859/facebook-access-token-server-side-validation-for-iphone-app</a>). If Facebook says it is a valid token then they are good to go and let them use the WebAPI. If not then reject the request.</p> 
                <p>I hope that helps.</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
             <li class="comment odd alt depth-2" id="dsq-comment-98"> 
              <div id="dsq-comment-header-98" class="dsq-comment-header"> 
               <cite id="dsq-cite-98"> <span id="dsq-author-user-98">mikeysee</span> </cite> 
              </div> 
              <div id="dsq-comment-body-98" class="dsq-comment-body"> 
               <div id="dsq-comment-message-98" class="dsq-comment-message">
                <p>Thanks for your reply Justin. </p> 
                <p>I think the way I need to do it based on what this guys is talking about: <a href="https://thewayofcode.wordpress.com/2014/03/01/asp-net-webapi-identity-system-how-to-login-with-facebook-access-token/#comments" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'https://thewayofcode.wordpress.com/2014/03/01/asp-net-webapi-identity-system-how-to-login-with-facebook-access-token/#comments', 'https://thewayofcode.wordpress.com/2014/03/01/asp-net-webapi-identity-system-how-to-login-with-facebook-access-token/#comments']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">https://thewayofcode.wordpress.com/2014/03/01/asp-net-webapi-identity-system-how-to-login-with-facebook-access-token/#comments</a></p> 
                <p>Unfortunately I think his example is using an older version of WebAPI, I guess ill just have to try hacking around until I can get it to work.</p> 
                <p>Its strange that Microsoft dont include an example for this which seems like a very common use scenario.</p> 
                <p>Mike</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment even thread-even depth-1" id="dsq-comment-102"> 
            <div id="dsq-comment-header-102" class="dsq-comment-header"> 
             <cite id="dsq-cite-102"> <span id="dsq-author-user-102">Richard</span> </cite> 
            </div> 
            <div id="dsq-comment-body-102" class="dsq-comment-body"> 
             <div id="dsq-comment-message-102" class="dsq-comment-message">
              <p>Hi Justin,</p> 
              <p>I implemented Identity the way you described it. I just can’t find out how to request a token from my webinterface. I have a WPF application and the old way I used client.PostAsync. What should I use now?</p> 
              <p>Thx,<br> Richard</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-103"> 
            <div id="dsq-comment-header-103" class="dsq-comment-header"> 
             <cite id="dsq-cite-103"> <span id="dsq-author-user-103">Richard</span> </cite> 
            </div> 
            <div id="dsq-comment-body-103" class="dsq-comment-body"> 
             <div id="dsq-comment-message-103" class="dsq-comment-message">
              <p>Hi Justing,</p> 
              <p>I created my webapp with identity the way you describe it. In the past I worked with the provider and used client.PostAsync to login from my WPF app to my webapp. How does it work with the code you described above?</p> 
              <p>Thx,<br> Richard</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-2" id="dsq-comment-104"> 
              <div id="dsq-comment-header-104" class="dsq-comment-header"> 
               <cite id="dsq-cite-104"> <span id="dsq-author-user-104">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-104" class="dsq-comment-body"> 
               <div id="dsq-comment-message-104" class="dsq-comment-message">
                <p>Richard,</p> 
                <p>I did notice something with the sample project since you<br> brought this up. The Authenticate action<br> in the API controller was accepting a GET rather than a POST (since GET expose<br> you to Cross-site scripting attack). I<br> have changed this and pushed up the changes.</p> 
                <p>Regardless, I will go through the step to implement your solution. Using the Sample application that goes along<br> with this article your process will look something like this:</p> 
                <p>1) WPF app Collects the User name and password</p> 
                <p>2) The WPF app will executes a client.POSTAsync (HTTP POST) to url <a href="http://localhost/api/Account/Authenticate?user=Admin&amp;password=123456" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'http://localhost/api/Account/Authenticate?user=Admin&amp;password=123456', 'http://localhost/api/Account/Authenticate?user=Admin&amp;password=123456']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">http://localhost/api/Account/Authenticate?user=Admin&amp;password=123456</a></p> 
                <p>3) Grab the TOKEN. The response body will contain the token<br> used for further, authenticated requests in the WPF app</p> 
                <p>4) All subsequent requests should pass the token like “Bearer<br> {TOKEN}” via the HTTP authorization header. Here is<br> an example of adding a header to a client request: <a href="http://stackoverflow.com/questions/12022965/adding-http-headers-to-httpclient-asp-net-web-api" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'http://stackoverflow.com/questions/12022965/adding-http-headers-to-httpclient-asp-net-web-api', 'http://stackoverflow.com/questions/12022965/adding-http-headers-to-httpclient-asp-net-web-api']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">http://stackoverflow.com/questions/12022965/adding-http-headers-to-httpclient-asp-net-web-api</a></p> 
                <p>Let me know if that helps.</p> 
                <p>~~</p> 
                <p>Justin</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt thread-even depth-1" id="dsq-comment-110"> 
            <div id="dsq-comment-header-110" class="dsq-comment-header"> 
             <cite id="dsq-cite-110"> <span id="dsq-author-user-110">khasi asmarani</span> </cite> 
            </div> 
            <div id="dsq-comment-body-110" class="dsq-comment-body"> 
             <div id="dsq-comment-message-110" class="dsq-comment-message">
              <p>I not see a kind of authorization in your example.</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
           <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-127"> 
            <div id="dsq-comment-header-127" class="dsq-comment-header"> 
             <cite id="dsq-cite-127"> <span id="dsq-author-user-127">Ricky</span> </cite> 
            </div> 
            <div id="dsq-comment-body-127" class="dsq-comment-body"> 
             <div id="dsq-comment-message-127" class="dsq-comment-message">
              <p>Hi,<br> Great article. I downloaded the source code, The remember me (cookie authentication) works fine in localhost, however, when I deploy to a web server, it doesn’t seems to work. Can you point me to right direction? Thanks</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment odd alt depth-2" id="dsq-comment-128"> 
              <div id="dsq-comment-header-128" class="dsq-comment-header"> 
               <cite id="dsq-cite-128"> <span id="dsq-author-user-128">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-128" class="dsq-comment-body"> 
               <div id="dsq-comment-message-128" class="dsq-comment-message">
                <p>I would check to make sure your other server time matches your browsers machine time. Here is a stackoverfkow article detailing your same problem:<a href="http://stackoverflow.com/questions/1241151/asp-net-mvc-remember-me-works-only-on-localhost" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'http://stackoverflow.com/questions/1241151/asp-net-mvc-remember-me-works-only-on-localhost', 'http://stackoverflow.com/questions/1241151/asp-net-mvc-remember-me-works-only-on-localhost']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">http://stackoverflow.com/questions/1241151/asp-net-mvc-remember-me-works-only-on-localhost</a><br> Let me know if you are still having issues.</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment even thread-even depth-1" id="dsq-comment-130"> 
            <div id="dsq-comment-header-130" class="dsq-comment-header"> 
             <cite id="dsq-cite-130"> <span id="dsq-author-user-130">Alberto Ruiz</span> </cite> 
            </div> 
            <div id="dsq-comment-body-130" class="dsq-comment-body"> 
             <div id="dsq-comment-message-130" class="dsq-comment-message">
              <p>Would you be kind and post an example request made from fiddler, I have been trying to test the Authenticate method but always get a 404 not found. Great article!</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-139"> 
            <div id="dsq-comment-header-139" class="dsq-comment-header"> 
             <cite id="dsq-cite-139"> <span id="dsq-author-user-139">Raj</span> </cite> 
            </div> 
            <div id="dsq-comment-body-139" class="dsq-comment-body"> 
             <div id="dsq-comment-message-139" class="dsq-comment-message">
              <p>Hi</p> 
              <p>referring to this line</p> 
              <p>var user = this.User.Identity;</p> 
              <p>I have a business layer in my app where I want to move all this logic to about getting User details etc. Is this possible?</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-2" id="dsq-comment-141"> 
              <div id="dsq-comment-header-141" class="dsq-comment-header"> 
               <cite id="dsq-cite-141"> <span id="dsq-author-user-141">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-141" class="dsq-comment-body"> 
               <div id="dsq-comment-message-141" class="dsq-comment-message">
                <p>Sorry for the delay. As long as the business layer is running under the same app domain context as the asp.net application you can gain access to the user name and claims. ASP.NET identity uses the CurrentPrincipal.Identity object (<a href="http://msdn.microsoft.com/en-us/library/system.threading.thread.currentprincipal(v=vs.110)" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'http://msdn.microsoft.com/en-us/library/system.threading.thread.currentprincipal(v=vs.110)', 'http://msdn.microsoft.com/en-us/library/system.threading.thread.currentprincipal(v=vs.110)']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">http://msdn.microsoft.com/en-us/library/system.threading.thread.currentprincipal(v=vs.110)</a>.aspx). You will not have access to the identity manager object unless you pass the object to the business layer or implement Dependency injection.</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt thread-even depth-1" id="dsq-comment-143"> 
            <div id="dsq-comment-header-143" class="dsq-comment-header"> 
             <cite id="dsq-cite-143"> <span id="dsq-author-user-143">Justin Hyland</span> </cite> 
            </div> 
            <div id="dsq-comment-body-143" class="dsq-comment-body"> 
             <div id="dsq-comment-message-143" class="dsq-comment-message">
              <p>Lyle, Make sure you are passing the token back to the server when you are calling the validate or any other secured API call. The token must be supplied in the header name “Authorization” and the value of the header should be formatted like “Bearer abcedefghijklmnopqrstuvwxyz1234567890”.<br> Your token value must start with word “Bearer” and include your take afterwords. </p> 
              <p>Also, make sure you are executing the correct http method on each API request. The ValidateToken requires the request to be an HTTPGET</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
           <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-144"> 
            <div id="dsq-comment-header-144" class="dsq-comment-header"> 
             <cite id="dsq-cite-144"> <span id="dsq-author-user-144">Naunihal Sidhu</span> </cite> 
            </div> 
            <div id="dsq-comment-body-144" class="dsq-comment-body"> 
             <div id="dsq-comment-message-144" class="dsq-comment-message">
              <p>How do you Invalidate the Token at Server(kind of SignOut) ?<br> Also how do you extend the timeout on the Ticket ?</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment odd alt depth-2" id="dsq-comment-149"> 
              <div id="dsq-comment-header-149" class="dsq-comment-header"> 
               <cite id="dsq-cite-149"> <span id="dsq-author-user-149">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-149" class="dsq-comment-body"> 
               <div id="dsq-comment-message-149" class="dsq-comment-message">
                <p>Naunihal Sidhu Sorry for the delay getting back to you. </p> 
                <p>By default, the tokens have their expiration date build in when they are created. The only way to invalidate Tokens is to change the user’s security stamp via UserManager.UpdateSecurityStampAsync(userId); This will cause all cookie based sessions and/or issued tokens to no longer be valid. Basically, just makes it so the user has to sign in to everything again.</p> 
                <p>There is no way to “signout” a token individually you have to wait for them to expire (this is why some say bearer tokens are a bad idea). </p> 
                <p>I hope that helps.</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment even thread-even depth-1" id="dsq-comment-150"> 
            <div id="dsq-comment-header-150" class="dsq-comment-header"> 
             <cite id="dsq-cite-150"> <span id="dsq-author-user-150">Justin Hyland</span> </cite> 
            </div> 
            <div id="dsq-comment-body-150" class="dsq-comment-body"> 
             <div id="dsq-comment-message-150" class="dsq-comment-message">
              <p>Kiriz refering to the MasterKeyAuthentication Project. The very first thing you need to do is get a token. Call the method String Authenticate(string user, string password) by executing a GET against URL <a href="http://" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'http://', 'http://']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">http://</a>{YOUR_SERVER}/API/Account/Authenticate?user={USERNAME}&amp;password={PASSWORD}</p> 
              <p>This will return a string in the response body. That will be your token.</p> 
              <p>The ValidateToken is just a test method I created in the project as an example authorized call. To call ValidateToken execute a GET with the HTTP Header –&gt; Key: “authorization” Value: “Bearer {BEARER_TOKEN_RECEIVED}” against URL <a href="http://" onclick="_gaq.push(['_trackEvent', 'outbound-comment', 'http://', 'http://']);" rel="nofollow external" title="" class="ext-link" data-wpel-target="_blank">http://</a>{YOUR_SERVER}/API/Account/ValidateToken. ASP.NET will look at the authorization header value. If is it a valid token (and the call is constructed correctly) you will get your login user info returned in there response body.</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-163"> 
            <div id="dsq-comment-header-163" class="dsq-comment-header"> 
             <cite id="dsq-cite-163"> <span id="dsq-author-user-163">Daskul</span> </cite> 
            </div> 
            <div id="dsq-comment-body-163" class="dsq-comment-body"> 
             <div id="dsq-comment-message-163" class="dsq-comment-message">
              <p>is there a way to automatically retrieve and pass the token on each request if its not present? most of the examples I’ve seen, they are passing the token manually on each request. What I want is, if I have two projects. ASP MVC 5 WebAPI and ASP MVC 5 webclient. The user will login to the webclient, then everytime the webclient request to the webapi, it automatically pass the token to the webapi or else the webclient will redirect the user to the login page to request credentials to be used to retrieve the token.</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-2" id="dsq-comment-164"> 
              <div id="dsq-comment-header-164" class="dsq-comment-header"> 
               <cite id="dsq-cite-164"> <span id="dsq-author-user-164">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-164" class="dsq-comment-body"> 
               <div id="dsq-comment-message-164" class="dsq-comment-message">
                <p>@daskul:disqus I assume the webclient you describe is a browser client. That is a good question and a valid use case. You will need to register Cookie Auth for browser based auth. This is done in the StartUp class via IAppBuilder like: </p> 
                <p> app.UseCookieAuthentication(new CookieAuthenticationOptions<br> {<br> AuthenticationType = DefaultAuthenticationTypes.ApplicationCookie,<br> LoginPath = new PathString(“/Account/SignIn”)<br> });</p> 
                <p>Including both UseOAuthBearerAuthentication &amp; UseCookieAuthentication configurations will allow your WebApi methods to be authenticated against both methods. </p> 
                <p>Do that address your question?</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
             <li class="comment odd alt depth-2" id="dsq-comment-165"> 
              <div id="dsq-comment-header-165" class="dsq-comment-header"> 
               <cite id="dsq-cite-165"> <span id="dsq-author-user-165">Daskul</span> </cite> 
              </div> 
              <div id="dsq-comment-body-165" class="dsq-comment-body"> 
               <div id="dsq-comment-message-165" class="dsq-comment-message">
                <p>I will try this one and give you feedback with the results. Thank you!</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
             <li class="comment even depth-2" id="dsq-comment-171"> 
              <div id="dsq-comment-header-171" class="dsq-comment-header"> 
               <cite id="dsq-cite-171"> <span id="dsq-author-user-171">kalyan kankala</span> </cite> 
              </div> 
              <div id="dsq-comment-body-171" class="dsq-comment-body"> 
               <div id="dsq-comment-message-171" class="dsq-comment-message">
                <p>Daskul, where you able to achieve this? I’m working on similar scenario with web api as authentication service and I want to use web api to make sure the user is authenticated before making any calls to mvc (use authenticated token). But how mvc will know the token and have it pass around until user is logged in.</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
             <li class="comment odd alt depth-2" id="dsq-comment-173"> 
              <div id="dsq-comment-header-173" class="dsq-comment-header"> 
               <cite id="dsq-cite-173"> <span id="dsq-author-user-173">Daskul</span> </cite> 
              </div> 
              <div id="dsq-comment-body-173" class="dsq-comment-body"> 
               <div id="dsq-comment-message-173" class="dsq-comment-message">
                <p>I haven’t tried it yet. I am working on different project</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
             <li class="comment even depth-2" id="dsq-comment-174"> 
              <div id="dsq-comment-header-174" class="dsq-comment-header"> 
               <cite id="dsq-cite-174"> <span id="dsq-author-user-174">Justin Hyland</span> </cite> 
              </div> 
              <div id="dsq-comment-body-174" class="dsq-comment-body"> 
               <div id="dsq-comment-message-174" class="dsq-comment-message">
                <p>Approved</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt thread-even depth-1" id="dsq-comment-172"> 
            <div id="dsq-comment-header-172" class="dsq-comment-header"> 
             <cite id="dsq-cite-172"> <span id="dsq-author-user-172">kalyan kankala</span> </cite> 
            </div> 
            <div id="dsq-comment-body-172" class="dsq-comment-body"> 
             <div id="dsq-comment-message-172" class="dsq-comment-message">
              <p>can you post link to github plz? thanks!</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul> 
         </div> 
        </div> 
        <script type="text/javascript">
var disqus_url = 'http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/';
var disqus_identifier = '422 http://blog.iteedee.com/?p=422';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'cledeveloper';
var disqus_title = "ASP.NET Identity 2.0 Cookie &#038; Token Authentication";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=422';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script> 
       </div> 
      </div>
      <!-- #content .site-content --> 
     </div>
     <!-- #primary .content-area --> 
     <div id="secondary" class="widget-area" role="complementary"> 
      <aside id="text-2" class="widget widget_text">
       <h3 class="widget-title">Follow Justin Hyland</h3> 
       <div class="textwidget">
        <a href="http://www.linkedin.com/in/justinhyland1" onclick="_gaq.push(['_trackEvent', 'outbound-widget', 'http://www.linkedin.com/in/justinhyland1', '']);" rel="external nofollow" title="" class="ext-link" data-wpel-target="_blank"><img src="http://blog.iteedee.com/wp-content/uploads/2013/10/linkedin.png" alt="LinkedIn"></a> 
        <a href="https://twitter.com/CleDeveloper" onclick="_gaq.push(['_trackEvent', 'outbound-widget', 'https://twitter.com/CleDeveloper', '']);" rel="external nofollow" title="" class="ext-link" data-wpel-target="_blank"><img src="http://blog.iteedee.com/wp-content/uploads/2013/10/twitter.png" alt="Twitter"></a> 
        <a href="https://plus.google.com/114703423528636842276" onclick="_gaq.push(['_trackEvent', 'outbound-widget', 'https://plus.google.com/114703423528636842276', '']);" rel="publisher external nofollow" title="" class="ext-link" data-wpel-target="_blank"><img src="http://blog.iteedee.com/wp-content/uploads/2013/10/googleplus.png" alt="GooglePlus"></a> 
        <a target="_blank" href="http://blog.iteedee.com/feed/"><img src="http://blog.iteedee.com/wp-content/uploads/2013/10/rss.png" alt="RSS"></a> 
        <a href="https://github.com/hylander0" onclick="_gaq.push(['_trackEvent', 'outbound-widget', 'https://github.com/hylander0', '']);" rel="external nofollow" title="" class="ext-link" data-wpel-target="_blank"><img src="http://blog.iteedee.com/wp-content/uploads/2013/10/github-e1382471941957.png" alt="Github"></a>
       </div> 
      </aside> 
      <aside id="recent-posts-2" class="widget widget_recent_entries"> 
       <h3 class="widget-title">Recent Posts</h3> 
       <ul> 
        <li> <a href="http://blog.iteedee.com/2015/08/parse-csv-comma-or-pipe-delimited-file-with-linq/">Parse CSV Comma or Pipe Delimited File with Linq</a> </li> 
        <li> <a href="http://blog.iteedee.com/2015/06/log4net-notification-appender/">Log4Net Notification Appender</a> </li> 
        <li> <a href="http://blog.iteedee.com/2015/05/monitor-net-windows-service-in-3-easy-steps/">Monitor .Net Windows Service in 3 Easy Steps</a> </li> 
        <li> <a href="http://blog.iteedee.com/2015/05/publish-a-nuget-package-3-easy-steps/">Publish a Nuget Package – 3 Easy Steps</a> </li> 
        <li> <a href="http://blog.iteedee.com/2015/03/getting-started-with-stripe-net-example/">Getting Started with Stripe .NET example</a> </li> 
       </ul> 
      </aside> 
      <aside id="recent-comments-2" class="widget widget_recent_comments">
       <h3 class="widget-title">Recent Comments</h3>
       <ul id="recentcomments">
        <li class="recentcomments"><span class="comment-author-link">Justin Hyland</span> on <a href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/#comment-174">ASP.NET Identity 2.0 Cookie &amp; Token Authentication</a></li>
        <li class="recentcomments"><span class="comment-author-link">Daskul</span> on <a href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/#comment-173">ASP.NET Identity 2.0 Cookie &amp; Token Authentication</a></li>
        <li class="recentcomments"><span class="comment-author-link">kalyan kankala</span> on <a href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/#comment-172">ASP.NET Identity 2.0 Cookie &amp; Token Authentication</a></li>
        <li class="recentcomments"><span class="comment-author-link">kalyan kankala</span> on <a href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/#comment-171">ASP.NET Identity 2.0 Cookie &amp; Token Authentication</a></li>
        <li class="recentcomments"><span class="comment-author-link">Daskul</span> on <a href="http://blog.iteedee.com/2014/03/asp-net-identity-2-0-cookie-token-authentication/#comment-165">ASP.NET Identity 2.0 Cookie &amp; Token Authentication</a></li>
       </ul>
      </aside>
      <aside id="archives-2" class="widget widget_archive">
       <h3 class="widget-title">Archives</h3> 
       <ul> 
        <li><a href="http://blog.iteedee.com/2015/08/">August 2015</a></li> 
        <li><a href="http://blog.iteedee.com/2015/06/">June 2015</a></li> 
        <li><a href="http://blog.iteedee.com/2015/05/">May 2015</a></li> 
        <li><a href="http://blog.iteedee.com/2015/03/">March 2015</a></li> 
        <li><a href="http://blog.iteedee.com/2014/11/">November 2014</a></li> 
        <li><a href="http://blog.iteedee.com/2014/10/">October 2014</a></li> 
        <li><a href="http://blog.iteedee.com/2014/09/">September 2014</a></li> 
        <li><a href="http://blog.iteedee.com/2014/06/">June 2014</a></li> 
        <li><a href="http://blog.iteedee.com/2014/04/">April 2014</a></li> 
        <li><a href="http://blog.iteedee.com/2014/03/">March 2014</a></li> 
        <li><a href="http://blog.iteedee.com/2014/02/">February 2014</a></li> 
        <li><a href="http://blog.iteedee.com/2014/01/">January 2014</a></li> 
        <li><a href="http://blog.iteedee.com/2013/12/">December 2013</a></li> 
        <li><a href="http://blog.iteedee.com/2013/11/">November 2013</a></li> 
        <li><a href="http://blog.iteedee.com/2013/10/">October 2013</a></li> 
       </ul> 
      </aside>
      <aside id="categories-2" class="widget widget_categories">
       <h3 class="widget-title">Categories</h3> 
       <ul> 
        <li class="cat-item cat-item-10"><a href="http://blog.iteedee.com/category/net/">.NET</a> </li> 
        <li class="cat-item cat-item-8"><a href="http://blog.iteedee.com/category/android/">Android</a> </li> 
        <li class="cat-item cat-item-123"><a href="http://blog.iteedee.com/category/api/">API</a> </li> 
        <li class="cat-item cat-item-34"><a href="http://blog.iteedee.com/category/azure/">Azure</a> </li> 
        <li class="cat-item cat-item-32"><a href="http://blog.iteedee.com/category/business-process-management/">Business Process Management</a> </li> 
        <li class="cat-item cat-item-28"><a href="http://blog.iteedee.com/category/security/central-station-alarm/">Central Station Alarm</a> </li> 
        <li class="cat-item cat-item-62"><a href="http://blog.iteedee.com/category/continuous-integration/">Continuous Integration</a> </li> 
        <li class="cat-item cat-item-39"><a href="http://blog.iteedee.com/category/database/">Database</a> </li> 
        <li class="cat-item cat-item-47"><a href="http://blog.iteedee.com/category/entrepreneurship/">Entrepreneurship</a> </li> 
        <li class="cat-item cat-item-33"><a href="http://blog.iteedee.com/category/infrastructure/">Infrastructure</a> </li> 
        <li class="cat-item cat-item-3"><a href="http://blog.iteedee.com/category/ios/" title="objective-c development in the iOS platform">iOS</a> </li> 
        <li class="cat-item cat-item-20"><a href="http://blog.iteedee.com/category/iot/">IoT</a> </li> 
        <li class="cat-item cat-item-48"><a href="http://blog.iteedee.com/category/java/">Java</a> </li> 
        <li class="cat-item cat-item-21"><a href="http://blog.iteedee.com/category/json/">JSON</a> </li> 
        <li class="cat-item cat-item-127"><a href="http://blog.iteedee.com/category/knockout/">Knockout</a> </li> 
        <li class="cat-item cat-item-115"><a href="http://blog.iteedee.com/category/knowvent/">Knowvent</a> </li> 
        <li class="cat-item cat-item-76"><a href="http://blog.iteedee.com/category/mac/">Mac</a> </li> 
        <li class="cat-item cat-item-55"><a href="http://blog.iteedee.com/category/mobile/">Mobile</a> </li> 
        <li class="cat-item cat-item-18"><a href="http://blog.iteedee.com/category/net/mvc/">MVC</a> </li> 
        <li class="cat-item cat-item-38"><a href="http://blog.iteedee.com/category/programming/">Programming</a> </li> 
        <li class="cat-item cat-item-78"><a href="http://blog.iteedee.com/category/project-management/">Project Management</a> </li> 
        <li class="cat-item cat-item-16"><a href="http://blog.iteedee.com/category/restful/">RESTful</a> </li> 
        <li class="cat-item cat-item-27"><a href="http://blog.iteedee.com/category/security/">Security</a> </li> 
        <li class="cat-item cat-item-19"><a href="http://blog.iteedee.com/category/soa/">SOA</a> </li> 
        <li class="cat-item cat-item-40"><a href="http://blog.iteedee.com/category/sql/">SQL</a> </li> 
        <li class="cat-item cat-item-1"><a href="http://blog.iteedee.com/category/uncategorized/">Uncategorized</a> </li> 
        <li class="cat-item cat-item-17"><a href="http://blog.iteedee.com/category/net/webapi/">WebApi</a> </li> 
       </ul> 
      </aside>
      <aside id="text-4" class="widget widget_text">
       <h3 class="widget-title">Links</h3> 
       <div class="textwidget">
        <a target="_blank" href="http://www.iteedee.com"><img src="http://blog.iteedee.com/wp-content/uploads/2013/11/liteedee_thumbnail.png" alt="Iteedee"></a> 
        <br> 
        <a href="http://www.knowvent.com" onclick="_gaq.push(['_trackEvent', 'outbound-widget', 'http://www.knowvent.com', '']);" target="_blank"><img src="http://blog.iteedee.com/wp-content/uploads/2014/11/Knovent_Logo.png" height="50" alt="Cloud Logging Notification API"></a>
       </div> 
      </aside> 
     </div>
     <!-- #secondary .widget-area --> 
    </div>
    <!-- .full-container --> 
   </div>
   <!-- #main .site-main --> 
   <footer id="colophon" class="site-footer" role="contentinfo"> 
    <div id="footer-widgets" class="full-container"> 
     <aside id="text-3" class="widget widget_text"> 
      <div class="textwidget">
       © 2013
      </div> 
     </aside> 
    </div>
    <!-- #footer-widgets --> 
   </footer>
   <!-- #colophon .site-footer --> 
  </div>
  <!-- #page-wrapper --> 
  <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'cledeveloper';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script');
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script> 
  <div style="display:none"> 
  </div> 
  <a href="#" id="scroll-to-top"></a>
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/plugins/wp-external-links/js/wp-external-links.js?ver=1.60"></script> 
  <script type="text/javascript" src="http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201737"></script> 
  <script type="text/javascript" src="http://s.gravatar.com/js/gprofiles.js?ver=2017Sepaa"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=4.5.9"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-includes/js/comment-reply.min.js?ver=4.5.9"></script> 
  <script type="text/javascript" src="http://blog.iteedee.com/wp-includes/js/wp-embed.min.js?ver=4.5.9"></script> 
  <script type="text/javascript" src="http://stats.wp.com/e-201737.js" async defer></script> 
  <script type="text/javascript">
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.4.4',blog:'59922591',post:'422',tz:'-4'} ]);
	_stq.push([ 'clickTrackerInit', '59922591', '422' ]);
</script>  
 </body>
</html>