<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="de">
 <head> 
  <!-- Generated by javadoc --> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <title>JSch (JSch API)</title> 
  <link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style"> 
  <script type="text/javascript" src="../../../script.js"></script> 
 </head> 
 <body> 
  <script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="JSch (JSch API)";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":9,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":42,"i18":10,"i19":9,"i20":9,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"],32:["t6","Deprecated Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script> 
  <noscript> 
   <div>
    JavaScript is disabled on your browser.
   </div> 
  </noscript> 
  <!-- ========= START OF TOP NAVBAR ======= --> 
  <div class="topNav">
   <a name="navbar.top"> 
    <!--   --> </a> 
   <div class="skipNav">
    <a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a>
   </div> 
   <a name="navbar.top.firstrow"> 
    <!--   --> </a> 
   <ul class="navList" title="Navigation"> 
    <li><a href="../../../com/jcraft/jsch/package-summary.html">Package</a></li> 
    <li class="navBarCell1Rev">Class</li> 
    <li><a href="class-use/JSch.html">Use</a></li> 
    <li><a href="package-tree.html">Tree</a></li> 
    <li><a href="../../../deprecated-list.html">Deprecated</a></li> 
    <li><a href="../../../index-all.html">Index</a></li> 
    <li><a href="../../../help-doc.html">Help</a></li> 
   </ul> 
  </div> 
  <div class="subNav"> 
   <ul class="navList"> 
    <li><a href="../../../com/jcraft/jsch/IO.html" title="class in com.jcraft.jsch"><span class="typeNameLink">Prev&nbsp;Class</span></a></li> 
    <li><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch"><span class="typeNameLink">Next&nbsp;Class</span></a></li> 
   </ul> 
   <ul class="navList"> 
    <li><a href="../../../index.html?com/jcraft/jsch/JSch.html" target="_top">Frames</a></li> 
    <li><a href="JSch.html" target="_top">No&nbsp;Frames</a></li> 
   </ul> 
   <ul class="navList" id="allclasses_navbar_top"> 
    <li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li> 
   </ul> 
   <div> 
    <script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script> 
   </div> 
   <div> 
    <ul class="subNavList"> 
     <li>Summary:&nbsp;</li> 
     <li>Nested&nbsp;|&nbsp;</li> 
     <li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li> 
     <li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li> 
     <li><a href="#method.summary">Method</a></li> 
    </ul> 
    <ul class="subNavList"> 
     <li>Detail:&nbsp;</li> 
     <li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li> 
     <li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li> 
     <li><a href="#method.detail">Method</a></li> 
    </ul> 
   </div> 
   <a name="skip.navbar.top"> 
    <!--   --> </a>
  </div> 
  <!-- ========= END OF TOP NAVBAR ========= --> 
  <!-- ======== START OF CLASS DATA ======== --> 
  <div class="header"> 
   <div class="subTitle">
    com.jcraft.jsch
   </div> 
   <h2 title="Class JSch" class="title">Class JSch</h2> 
  </div> 
  <div class="contentContainer"> 
   <ul class="inheritance"> 
    <li><a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li> 
    <li> 
     <ul class="inheritance"> 
      <li>com.jcraft.jsch.JSch</li> 
     </ul> </li> 
   </ul> 
   <div class="description"> 
    <ul class="blockList"> 
     <li class="blockList"> 
      <hr> <br> <pre>public class <span class="typeNameLabel">JSch</span>
extends <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></pre> 
      <div class="block">
       This class serves as a central configuration point, and as a factory for 
       <a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch"><code>Session</code></a> objects configured with these settings. 
       <ul> 
        <li>Use <a href="../../../com/jcraft/jsch/JSch.html#getSession-java.lang.String-"><code>getSession</code></a> to start a new Session.</li> 
        <li>Use one of the <a href="../../../com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-"><code>addIdentity</code></a> methods for public-key authentication.</li> 
        <li>Use <a href="../../../com/jcraft/jsch/JSch.html#setKnownHosts-java.lang.String-"><code>setKnownHosts</code></a> to enable checking of host keys.</li> 
        <li>See <a href="../../../com/jcraft/jsch/JSch.html#setConfig-java.lang.String-java.lang.String-"><code>setConfig</code></a> for a list of configuration options.</li> 
       </ul>
      </div> </li> 
    </ul> 
   </div> 
   <div class="summary"> 
    <ul class="blockList"> 
     <li class="blockList"> 
      <!-- =========== FIELD SUMMARY =========== --> 
      <ul class="blockList"> 
       <li class="blockList"><a name="field.summary"> 
         <!--   --> </a> <h3>Field Summary</h3> 
        <table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation"> 
         <caption>
          <span>Fields</span>
          <span class="tabEnd">&nbsp;</span>
         </caption> 
         <tbody>
          <tr> 
           <th class="colFirst" scope="col">Modifier and Type</th> 
           <th class="colLast" scope="col">Field and Description</th> 
          </tr> 
          <tr class="altColor"> 
           <td class="colFirst"><code>static <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a></code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#VERSION">VERSION</a></span></code> 
            <div class="block">
             The version number.
            </div> </td> 
          </tr> 
         </tbody>
        </table> </li> 
      </ul> 
      <!-- ======== CONSTRUCTOR SUMMARY ======== --> 
      <ul class="blockList"> 
       <li class="blockList"><a name="constructor.summary"> 
         <!--   --> </a> <h3>Constructor Summary</h3> 
        <table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation"> 
         <caption>
          <span>Constructors</span>
          <span class="tabEnd">&nbsp;</span>
         </caption> 
         <tbody>
          <tr> 
           <th class="colOne" scope="col">Constructor and Description</th> 
          </tr> 
          <tr class="altColor"> 
           <td class="colOne"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#JSch--">JSch</a></span>()</code> 
            <div class="block">
             Creates a new JSch object.
            </div> </td> 
          </tr> 
         </tbody>
        </table> </li> 
      </ul> 
      <!-- ========== METHOD SUMMARY =========== --> 
      <ul class="blockList"> 
       <li class="blockList"><a name="method.summary"> 
         <!--   --> </a> <h3>Method Summary</h3> 
        <table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation"> 
         <caption>
          <span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span>
          <span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span>
          <span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span>
          <span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span>
          <span id="t6" class="tableTab"><span><a href="javascript:show(32);">Deprecated Methods</a></span><span class="tabEnd">&nbsp;</span></span>
         </caption> 
         <tbody>
          <tr> 
           <th class="colFirst" scope="col">Modifier and Type</th> 
           <th class="colLast" scope="col">Method and Description</th> 
          </tr> 
          <tr id="i0" class="altColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#addIdentity-com.jcraft.jsch.Identity-byte:A-">addIdentity</a></span>(<a href="../../../com/jcraft/jsch/Identity.html" title="interface in com.jcraft.jsch">Identity</a>&nbsp;identity, byte[]&nbsp;passphrase)</code> 
            <div class="block">
             Adds an identity to be used for public-key authentication.
            </div> </td> 
          </tr> 
          <tr id="i1" class="rowColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-">addIdentity</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prvkey)</code> 
            <div class="block">
             Adds an identity to be used for public-key authentication.
            </div> </td> 
          </tr> 
          <tr id="i2" class="altColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-byte:A-">addIdentity</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prvkey, byte[]&nbsp;passphrase)</code> 
            <div class="block">
             Adds an identity to be used for public-key authentication.
            </div> </td> 
          </tr> 
          <tr id="i3" class="rowColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-byte:A-byte:A-byte:A-">addIdentity</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;name, byte[]&nbsp;prvkey, byte[]&nbsp;pubkey, byte[]&nbsp;passphrase)</code> 
            <div class="block">
             Adds an identity to be used for public-key authentication.
            </div> </td> 
          </tr> 
          <tr id="i4" class="altColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-java.lang.String-">addIdentity</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prvkey, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;passphrase)</code> 
            <div class="block">
             Adds an identity to be used for public-key authentication.
            </div> </td> 
          </tr> 
          <tr id="i5" class="rowColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-java.lang.String-byte:A-">addIdentity</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prvkey, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;pubkey, byte[]&nbsp;passphrase)</code> 
            <div class="block">
             Adds an identity to be used for public-key authentication.
            </div> </td> 
          </tr> 
          <tr id="i6" class="altColor"> 
           <td class="colFirst"><code>protected void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#addSession-com.jcraft.jsch.Session-">addSession</a></span>(<a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a>&nbsp;session)</code> 
            <div class="block">
             Adds a session to our session pool.
            </div> </td> 
          </tr> 
          <tr id="i7" class="rowColor"> 
           <td class="colFirst"><code>static <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a></code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#getConfig-java.lang.String-">getConfig</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;key)</code> 
            <div class="block">
             Retrieves a default configuration option.
            </div> </td> 
          </tr> 
          <tr id="i8" class="altColor"> 
           <td class="colFirst"><code><a href="../../../com/jcraft/jsch/ConfigRepository.html" title="interface in com.jcraft.jsch">ConfigRepository</a></code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#getConfigRepository--">getConfigRepository</a></span>()</code>&nbsp;</td> 
          </tr> 
          <tr id="i9" class="rowColor"> 
           <td class="colFirst"><code><a href="../../../com/jcraft/jsch/HostKeyRepository.html" title="interface in com.jcraft.jsch">HostKeyRepository</a></code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#getHostKeyRepository--">getHostKeyRepository</a></span>()</code> 
            <div class="block">
             Returns the current host key repository.
            </div> </td> 
          </tr> 
          <tr id="i10" class="altColor"> 
           <td class="colFirst"><code><a href="http://download.oracle.com/javase/6/docs/api/java/util/Vector.html?is-external=true" title="class or interface in java.util">Vector</a></code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#getIdentityNames--">getIdentityNames</a></span>()</code> 
            <div class="block">
             Lists names of identities included in the identityRepository.
            </div> </td> 
          </tr> 
          <tr id="i11" class="rowColor"> 
           <td class="colFirst"><code><a href="../../../com/jcraft/jsch/IdentityRepository.html" title="interface in com.jcraft.jsch">IdentityRepository</a></code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#getIdentityRepository--">getIdentityRepository</a></span>()</code>&nbsp;</td> 
          </tr> 
          <tr id="i12" class="altColor"> 
           <td class="colFirst"><code><a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a></code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#getSession-java.lang.String-">getSession</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;host)</code> 
            <div class="block">
             Instantiates the 
             <code>Session</code> object with 
             <code>host</code>.
            </div> </td> 
          </tr> 
          <tr id="i13" class="rowColor"> 
           <td class="colFirst"><code><a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a></code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#getSession-java.lang.String-java.lang.String-">getSession</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;username, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;host)</code> 
            <div class="block">
             Instantiates the 
             <code>Session</code> object with 
             <code>username</code> and 
             <code>host</code>.
            </div> </td> 
          </tr> 
          <tr id="i14" class="altColor"> 
           <td class="colFirst"><code><a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a></code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#getSession-java.lang.String-java.lang.String-int-">getSession</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;username, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;host, int&nbsp;port)</code> 
            <div class="block">
             Instantiates the 
             <code>Session</code> object with given 
             <code>username</code>, 
             <code>host</code> and 
             <code>port</code>.
            </div> </td> 
          </tr> 
          <tr id="i15" class="rowColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#removeAllIdentity--">removeAllIdentity</a></span>()</code> 
            <div class="block">
             Removes all identities.
            </div> </td> 
          </tr> 
          <tr id="i16" class="altColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#removeIdentity-com.jcraft.jsch.Identity-">removeIdentity</a></span>(<a href="../../../com/jcraft/jsch/Identity.html" title="interface in com.jcraft.jsch">Identity</a>&nbsp;identity)</code> 
            <div class="block">
             Removes the identity from identityRepository.
            </div> </td> 
          </tr> 
          <tr id="i17" class="rowColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#removeIdentity-java.lang.String-">removeIdentity</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;name)</code> 
            <div class="block">
             <span class="deprecatedLabel">Deprecated.</span>&nbsp; 
             <div class="block">
              <span class="deprecationComment">use #removeIdentity(Identity identity)</span>
             </div> 
            </div> </td> 
          </tr> 
          <tr id="i18" class="altColor"> 
           <td class="colFirst"><code>protected boolean</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#removeSession-com.jcraft.jsch.Session-">removeSession</a></span>(<a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a>&nbsp;session)</code> 
            <div class="block">
             Removes a session from our session pool.
            </div> </td> 
          </tr> 
          <tr id="i19" class="rowColor"> 
           <td class="colFirst"><code>static void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#setConfig-java.util.Hashtable-">setConfig</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/util/Hashtable.html?is-external=true" title="class or interface in java.util">Hashtable</a>&nbsp;newconf)</code> 
            <div class="block">
             Sets multiple default configuration options at once.
            </div> </td> 
          </tr> 
          <tr id="i20" class="altColor"> 
           <td class="colFirst"><code>static void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#setConfig-java.lang.String-java.lang.String-">setConfig</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;key, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;value)</code> 
            <div class="block">
             Sets a default configuration option.
            </div> </td> 
          </tr> 
          <tr id="i21" class="rowColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#setConfigRepository-com.jcraft.jsch.ConfigRepository-">setConfigRepository</a></span>(<a href="../../../com/jcraft/jsch/ConfigRepository.html" title="interface in com.jcraft.jsch">ConfigRepository</a>&nbsp;configRepository)</code>&nbsp;</td> 
          </tr> 
          <tr id="i22" class="altColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#setHostKeyRepository-com.jcraft.jsch.HostKeyRepository-">setHostKeyRepository</a></span>(<a href="../../../com/jcraft/jsch/HostKeyRepository.html" title="interface in com.jcraft.jsch">HostKeyRepository</a>&nbsp;hkrepo)</code> 
            <div class="block">
             Sets the Host key repository.
            </div> </td> 
          </tr> 
          <tr id="i23" class="rowColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#setIdentityRepository-com.jcraft.jsch.IdentityRepository-">setIdentityRepository</a></span>(<a href="../../../com/jcraft/jsch/IdentityRepository.html" title="interface in com.jcraft.jsch">IdentityRepository</a>&nbsp;identityRepository)</code> 
            <div class="block">
             Sets the 
             <code>identityRepository</code>, which will be referred in the public key authentication.
            </div> </td> 
          </tr> 
          <tr id="i24" class="altColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#setKnownHosts-java.io.InputStream-">setKnownHosts</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</a>&nbsp;stream)</code> 
            <div class="block">
             Creates a Host key repository from an InputStream.
            </div> </td> 
          </tr> 
          <tr id="i25" class="rowColor"> 
           <td class="colFirst"><code>void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#setKnownHosts-java.lang.String-">setKnownHosts</a></span>(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;filename)</code> 
            <div class="block">
             Creates a host key repository from a file name.
            </div> </td> 
          </tr> 
          <tr id="i26" class="altColor"> 
           <td class="colFirst"><code>static void</code></td> 
           <td class="colLast"><code><span class="memberNameLink"><a href="../../../com/jcraft/jsch/JSch.html#setLogger-com.jcraft.jsch.Logger-">setLogger</a></span>(<a href="../../../com/jcraft/jsch/Logger.html" title="interface in com.jcraft.jsch">Logger</a>&nbsp;logger)</code> 
            <div class="block">
             sets the Logger to be used by this library.
            </div> </td> 
          </tr> 
         </tbody>
        </table> 
        <ul class="blockList"> 
         <li class="blockList"><a name="methods.inherited.from.class.java.lang.Object"> 
           <!--   --> </a> <h3>Methods inherited from class&nbsp;java.lang.<a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3> <code><a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone--" title="class or interface in java.lang">clone</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals-java.lang.Object-" title="class or interface in java.lang">equals</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize--" title="class or interface in java.lang">finalize</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass--" title="class or interface in java.lang">getClass</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode--" title="class or interface in java.lang">hashCode</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify--" title="class or interface in java.lang">notify</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll--" title="class or interface in java.lang">notifyAll</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString--" title="class or interface in java.lang">toString</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait--" title="class or interface in java.lang">wait</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait-long-" title="class or interface in java.lang">wait</a>, <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait-long-int-" title="class or interface in java.lang">wait</a></code></li> 
        </ul> </li> 
      </ul> </li> 
    </ul> 
   </div> 
   <div class="details"> 
    <ul class="blockList"> 
     <li class="blockList"> 
      <!-- ============ FIELD DETAIL =========== --> 
      <ul class="blockList"> 
       <li class="blockList"><a name="field.detail"> 
         <!--   --> </a> <h3>Field Detail</h3> <a name="VERSION"> 
         <!--   --> </a> 
        <ul class="blockListLast"> 
         <li class="blockList"> <h4>VERSION</h4> <pre>public static final&nbsp;<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a> VERSION</pre> 
          <div class="block">
           The version number.
          </div> 
          <dl> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../constant-values.html#com.jcraft.jsch.JSch.VERSION">Constant Field Values</a>
           </dd> 
          </dl> </li> 
        </ul> </li> 
      </ul> 
      <!-- ========= CONSTRUCTOR DETAIL ======== --> 
      <ul class="blockList"> 
       <li class="blockList"><a name="constructor.detail"> 
         <!--   --> </a> <h3>Constructor Detail</h3> <a name="JSch--"> 
         <!--   --> </a> 
        <ul class="blockListLast"> 
         <li class="blockList"> <h4>JSch</h4> <pre>public&nbsp;JSch()</pre> 
          <div class="block">
           Creates a new JSch object.
          </div> </li> 
        </ul> </li> 
      </ul> 
      <!-- ============ METHOD DETAIL ========== --> 
      <ul class="blockList"> 
       <li class="blockList"><a name="method.detail"> 
         <!--   --> </a> <h3>Method Detail</h3> <a name="setIdentityRepository-com.jcraft.jsch.IdentityRepository-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>setIdentityRepository</h4> <pre>public&nbsp;void&nbsp;setIdentityRepository(<a href="../../../com/jcraft/jsch/IdentityRepository.html" title="interface in com.jcraft.jsch">IdentityRepository</a>&nbsp;identityRepository)</pre> 
          <div class="block">
           Sets the 
           <code>identityRepository</code>, which will be referred in the public key authentication.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>identityRepository</code> - if 
            <code>null</code> is given, the default repository, which usually refers to ~/.ssh/, will be used.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/JSch.html#getIdentityRepository--"><code>getIdentityRepository()</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="getIdentityRepository--"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>getIdentityRepository</h4> <pre>public&nbsp;<a href="../../../com/jcraft/jsch/IdentityRepository.html" title="interface in com.jcraft.jsch">IdentityRepository</a>&nbsp;getIdentityRepository()</pre> </li> 
        </ul> <a name="getConfigRepository--"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>getConfigRepository</h4> <pre>public&nbsp;<a href="../../../com/jcraft/jsch/ConfigRepository.html" title="interface in com.jcraft.jsch">ConfigRepository</a>&nbsp;getConfigRepository()</pre> </li> 
        </ul> <a name="setConfigRepository-com.jcraft.jsch.ConfigRepository-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>setConfigRepository</h4> <pre>public&nbsp;void&nbsp;setConfigRepository(<a href="../../../com/jcraft/jsch/ConfigRepository.html" title="interface in com.jcraft.jsch">ConfigRepository</a>&nbsp;configRepository)</pre> </li> 
        </ul> <a name="getSession-java.lang.String-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>getSession</h4> <pre>public&nbsp;<a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a>&nbsp;getSession(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;host)
                   throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Instantiates the 
           <code>Session</code> object with 
           <code>host</code>. The user name and port number will be retrieved from ConfigRepository. If user name is not given, the system property "user.name" will be referred.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>host</code> - hostname
           </dd> 
           <dt>
            <span class="returnLabel">Returns:</span>
           </dt> 
           <dd>
            the instance of 
            <code>Session</code> class.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if 
            <code>username</code> or 
            <code>host</code> are invalid.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/JSch.html#getSession-java.lang.String-java.lang.String-int-"><code>getSession(String username, String host, int port)</code></a>, 
            <a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch"><code>Session</code></a>, 
            <a href="../../../com/jcraft/jsch/ConfigRepository.html" title="interface in com.jcraft.jsch"><code>ConfigRepository</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="getSession-java.lang.String-java.lang.String-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>getSession</h4> <pre>public&nbsp;<a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a>&nbsp;getSession(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;username,
                          <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;host)
                   throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Instantiates the 
           <code>Session</code> object with 
           <code>username</code> and 
           <code>host</code>. The TCP port 22 will be used in making the connection. Note that the TCP connection must not be established until Session#connect().
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>username</code> - user name
           </dd> 
           <dd>
            <code>host</code> - hostname
           </dd> 
           <dt>
            <span class="returnLabel">Returns:</span>
           </dt> 
           <dd>
            the instance of 
            <code>Session</code> class.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if 
            <code>username</code> or 
            <code>host</code> are invalid.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/JSch.html#getSession-java.lang.String-java.lang.String-int-"><code>getSession(String username, String host, int port)</code></a>, 
            <a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch"><code>Session</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="getSession-java.lang.String-java.lang.String-int-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>getSession</h4> <pre>public&nbsp;<a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a>&nbsp;getSession(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;username,
                          <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;host,
                          int&nbsp;port)
                   throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Instantiates the 
           <code>Session</code> object with given 
           <code>username</code>, 
           <code>host</code> and 
           <code>port</code>. Note that the TCP connection must not be established until Session#connect().
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>username</code> - user name
           </dd> 
           <dd>
            <code>host</code> - hostname
           </dd> 
           <dd>
            <code>port</code> - port number
           </dd> 
           <dt>
            <span class="returnLabel">Returns:</span>
           </dt> 
           <dd>
            the instance of 
            <code>Session</code> class.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if 
            <code>username</code> or 
            <code>host</code> are invalid.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/JSch.html#getSession-java.lang.String-java.lang.String-int-"><code>getSession(String username, String host, int port)</code></a>, 
            <a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch"><code>Session</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="addSession-com.jcraft.jsch.Session-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>addSession</h4> <pre>protected&nbsp;void&nbsp;addSession(<a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a>&nbsp;session)</pre> 
          <div class="block">
           Adds a session to our session pool. This is invoked by the sessions on 
           <a href="../../../com/jcraft/jsch/Session.html#connect--"><code>Session.connect()</code></a>, and should supposedly have package-access.
          </div> </li> 
        </ul> <a name="removeSession-com.jcraft.jsch.Session-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>removeSession</h4> <pre>protected&nbsp;boolean&nbsp;removeSession(<a href="../../../com/jcraft/jsch/Session.html" title="class in com.jcraft.jsch">Session</a>&nbsp;session)</pre> 
          <div class="block">
           Removes a session from our session pool. This is invoked by the sessions on 
           <a href="../../../com/jcraft/jsch/Session.html#disconnect--"><code>Session.disconnect()</code></a>, and should supposedly have package-access.
          </div> </li> 
        </ul> <a name="setHostKeyRepository-com.jcraft.jsch.HostKeyRepository-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>setHostKeyRepository</h4> <pre>public&nbsp;void&nbsp;setHostKeyRepository(<a href="../../../com/jcraft/jsch/HostKeyRepository.html" title="interface in com.jcraft.jsch">HostKeyRepository</a>&nbsp;hkrepo)</pre> 
          <div class="block">
           Sets the Host key repository. This will be used by sessions 
           <a href="../../../com/jcraft/jsch/Session.html#connect--">connected</a> in the future to validate the host keys offered by the remote hosts.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>hkrepo</code> - 
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/HostKeyRepository.html" title="interface in com.jcraft.jsch"><code>HostKeyRepository</code></a>, 
            <a href="../../../com/jcraft/jsch/KnownHosts.html" title="class in com.jcraft.jsch"><code>KnownHosts</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="setKnownHosts-java.lang.String-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>setKnownHosts</h4> <pre>public&nbsp;void&nbsp;setKnownHosts(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;filename)
                   throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Creates a host key repository from a file name. This method uses the same format as OpenSSH's 
           <code>known_hosts</code> file (I hope). 
           <p> This has no effect if <a href="../../../com/jcraft/jsch/JSch.html#setHostKeyRepository-com.jcraft.jsch.HostKeyRepository-"><code>setHostKeyRepository(com.jcraft.jsch.HostKeyRepository)</code></a> was already called with an object which is not of class <a href="../../../com/jcraft/jsch/KnownHosts.html" title="class in com.jcraft.jsch"><code>KnownHosts</code></a>.</p>
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>filename</code> - the name of the file to be loaded.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code>
           </dd> 
          </dl> </li> 
        </ul> <a name="setKnownHosts-java.io.InputStream-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>setKnownHosts</h4> <pre>public&nbsp;void&nbsp;setKnownHosts(<a href="http://download.oracle.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</a>&nbsp;stream)
                   throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Creates a Host key repository from an InputStream. This method uses the same format as OpenSSH's 
           <code>known_hosts</code> file (I hope). 
           <p> This has no effect if <a href="../../../com/jcraft/jsch/JSch.html#setHostKeyRepository-com.jcraft.jsch.HostKeyRepository-"><code>setHostKeyRepository(com.jcraft.jsch.HostKeyRepository)</code></a> was already called with an object which is not of class <a href="../../../com/jcraft/jsch/KnownHosts.html" title="class in com.jcraft.jsch"><code>KnownHosts</code></a>.</p>
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>stream</code> - an InputStream with the list of known hosts.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if an I/O error occurs.
           </dd> 
          </dl> </li> 
        </ul> <a name="getHostKeyRepository--"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>getHostKeyRepository</h4> <pre>public&nbsp;<a href="../../../com/jcraft/jsch/HostKeyRepository.html" title="interface in com.jcraft.jsch">HostKeyRepository</a>&nbsp;getHostKeyRepository()</pre> 
          <div class="block">
           Returns the current host key repository. If this was not yet set by one of the methods 
           <a href="../../../com/jcraft/jsch/JSch.html#setKnownHosts-java.io.InputStream-"><code>setKnownHosts(InputStream)</code></a>, 
           <a href="../../../com/jcraft/jsch/JSch.html#setKnownHosts-java.lang.String-"><code>setKnownHosts(String)</code></a> or 
           <a href="../../../com/jcraft/jsch/JSch.html#setHostKeyRepository-com.jcraft.jsch.HostKeyRepository-"><code>setHostKeyRepository(com.jcraft.jsch.HostKeyRepository)</code></a>, this creates a new (empty) repository of class 
           <a href="../../../com/jcraft/jsch/KnownHosts.html" title="class in com.jcraft.jsch"><code>KnownHosts</code></a>, sets this as the current repository and returns it.
          </div> 
          <dl> 
           <dt>
            <span class="returnLabel">Returns:</span>
           </dt> 
           <dd>
            current hostkey repository.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/HostKeyRepository.html" title="interface in com.jcraft.jsch"><code>HostKeyRepository</code></a>, 
            <a href="../../../com/jcraft/jsch/KnownHosts.html" title="class in com.jcraft.jsch"><code>KnownHosts</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="addIdentity-java.lang.String-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>addIdentity</h4> <pre>public&nbsp;void&nbsp;addIdentity(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prvkey)
                 throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Adds an identity to be used for public-key authentication.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>prvkey</code> - the file name of the private key file. This is also used as the identifying name of the key. The corresponding public key is assumed to be in a file with the same name with suffix 
            <code>.pub</code>.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if 
            <code>prvkey</code> is invalid.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-java.lang.String-"><code>addIdentity(String prvkey, String passphrase)</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="addIdentity-java.lang.String-java.lang.String-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>addIdentity</h4> <pre>public&nbsp;void&nbsp;addIdentity(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prvkey,
                        <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;passphrase)
                 throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Adds an identity to be used for public-key authentication. Before registering it into identityRepository, it will be deciphered with 
           <code>passphrase</code>.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>prvkey</code> - the file name of the private key file. This is also used as the identifying name of the key. The corresponding public key is assumed to be in a file with the same name with suffix 
            <code>.pub</code>.
           </dd> 
           <dd>
            <code>passphrase</code> - the passphrase necessary to access the key. The String will be encoded in UTF-8 to get the actual passphrase.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if 
            <code>passphrase</code> is not right.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-byte:A-"><code>addIdentity(String prvkey, byte[] passphrase)</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="addIdentity-java.lang.String-byte:A-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>addIdentity</h4> <pre>public&nbsp;void&nbsp;addIdentity(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prvkey,
                        byte[]&nbsp;passphrase)
                 throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Adds an identity to be used for public-key authentication. Before registering it into identityRepository, it will be deciphered with 
           <code>passphrase</code>.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>prvkey</code> - the file name of the private key file. This is also used as the identifying name of the key. The corresponding public key is assumed to be in a file with the same name with suffix 
            <code>.pub</code>.
           </dd> 
           <dd>
            <code>passphrase</code> - the passphrase necessary to access the key.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if 
            <code>passphrase</code> is not right.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-java.lang.String-byte:A-"><code>addIdentity(String prvkey, String pubkey, byte[] passphrase)</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="addIdentity-java.lang.String-java.lang.String-byte:A-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>addIdentity</h4> <pre>public&nbsp;void&nbsp;addIdentity(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;prvkey,
                        <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;pubkey,
                        byte[]&nbsp;passphrase)
                 throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Adds an identity to be used for public-key authentication. Before registering it into identityRepository, it will be deciphered with 
           <code>passphrase</code>.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>prvkey</code> - the file name of the private key file. This is also used as the identifying name of the key.
           </dd> 
           <dd>
            <code>pubkey</code> - the file name of the public key file.
           </dd> 
           <dd>
            <code>passphrase</code> - the passphrase necessary to access the private key.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if 
            <code>passphrase</code> is not right.
           </dd> 
          </dl> </li> 
        </ul> <a name="addIdentity-java.lang.String-byte:A-byte:A-byte:A-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>addIdentity</h4> <pre>public&nbsp;void&nbsp;addIdentity(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;name,
                        byte[]&nbsp;prvkey,
                        byte[]&nbsp;pubkey,
                        byte[]&nbsp;passphrase)
                 throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Adds an identity to be used for public-key authentication. Before registering it into identityRepository, it will be deciphered with 
           <code>passphrase</code>.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>name</code> - a name identifying the key pair.
           </dd> 
           <dd>
            <code>prvkey</code> - the private key data. This will be zeroed out after creating the Identity object.
           </dd> 
           <dd>
            <code>pubkey</code> - the public key data.
           </dd> 
           <dd>
            <code>passphrase</code> - the passphrase necessary to access the private key.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code>
           </dd> 
          </dl> </li> 
        </ul> <a name="addIdentity-com.jcraft.jsch.Identity-byte:A-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>addIdentity</h4> <pre>public&nbsp;void&nbsp;addIdentity(<a href="../../../com/jcraft/jsch/Identity.html" title="interface in com.jcraft.jsch">Identity</a>&nbsp;identity,
                        byte[]&nbsp;passphrase)
                 throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Adds an identity to be used for public-key authentication. Before registering it into identityRepository, it will be deciphered with 
           <code>passphrase</code>.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>identity</code> - the Identity object encapsulating the key pair and algorithm (or a hardware device containing them).
           </dd> 
           <dd>
            <code>passphrase</code> - the passphrase necessary to access the private key.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if 
            <code>passphrase</code> is not right.
           </dd> 
          </dl> </li> 
        </ul> <a name="removeIdentity-java.lang.String-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>removeIdentity</h4> <pre>public&nbsp;void&nbsp;removeIdentity(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;name)
                    throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           <span class="deprecatedLabel">Deprecated.</span>&nbsp;
           <span class="deprecationComment">use #removeIdentity(Identity identity)</span>
          </div> 
          <div class="block">
           Removes an identity by name. (The name is the result of the 
           <a href="../../../com/jcraft/jsch/Identity.html#getName--"><code>getName</code></a> method of the Identity object.) This identity will not be used for future connections anymore. (We also 
           <a href="../../../com/jcraft/jsch/Identity.html#clear--"><code>clear</code></a> the identity, causing it to forget its passphrase.)
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>name</code> - the name of the identity to remove.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code>
           </dd> 
          </dl> </li> 
        </ul> <a name="removeIdentity-com.jcraft.jsch.Identity-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>removeIdentity</h4> <pre>public&nbsp;void&nbsp;removeIdentity(<a href="../../../com/jcraft/jsch/Identity.html" title="interface in com.jcraft.jsch">Identity</a>&nbsp;identity)
                    throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Removes the identity from identityRepository.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>identity</code> - the indentity to be removed.
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if 
            <code>identity</code> is invalid.
           </dd> 
          </dl> </li> 
        </ul> <a name="getIdentityNames--"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>getIdentityNames</h4> <pre>public&nbsp;<a href="http://download.oracle.com/javase/6/docs/api/java/util/Vector.html?is-external=true" title="class or interface in java.util">Vector</a>&nbsp;getIdentityNames()
                        throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Lists names of identities included in the identityRepository.
          </div> 
          <dl> 
           <dt>
            <span class="returnLabel">Returns:</span>
           </dt> 
           <dd>
            names of identities (as a vector of strings).
           </dd> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if identityReposory has problems.
           </dd> 
          </dl> </li> 
        </ul> <a name="removeAllIdentity--"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>removeAllIdentity</h4> <pre>public&nbsp;void&nbsp;removeAllIdentity()
                       throws <a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></pre> 
          <div class="block">
           Removes all identities. Public key authentication will not work anymore until another identity is added.
          </div> 
          <dl> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch">JSchException</a></code> - if identityReposory has problems.
           </dd> 
          </dl> </li> 
        </ul> <a name="getConfig-java.lang.String-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>getConfig</h4> <pre>public static&nbsp;<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;getConfig(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;key)</pre> 
          <div class="block">
           Retrieves a default configuration option. This method is used to retrieve default values if a session does not have a specific option set.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>key</code> - key for the configuration.
           </dd> 
           <dt>
            <span class="returnLabel">Returns:</span>
           </dt> 
           <dd>
            config value
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/Session.html#getConfig-java.lang.String-"><code>Session.getConfig(java.lang.String)</code></a>, 
            <a href="../../../com/jcraft/jsch/JSch.html#setConfig-java.lang.String-java.lang.String-"><code>setConfig(String, String)</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="setConfig-java.util.Hashtable-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>setConfig</h4> <pre>public static&nbsp;void&nbsp;setConfig(<a href="http://download.oracle.com/javase/6/docs/api/java/util/Hashtable.html?is-external=true" title="class or interface in java.util">Hashtable</a>&nbsp;newconf)</pre> 
          <div class="block">
           Sets multiple default configuration options at once. The given hashtable should only contain Strings.
          </div> 
          <dl> 
           <dt>
            <span class="throwsLabel">Throws:</span>
           </dt> 
           <dd>
            <code><a href="http://download.oracle.com/javase/6/docs/api/java/lang/ClassCastException.html?is-external=true" title="class or interface in java.lang">ClassCastException</a></code> - if the Hashtable contains keys or values which are not Strings. In this case some string key-value pairs may already have been set.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/JSch.html#setConfig-java.lang.String-java.lang.String-"><code>setConfig(String, String)</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="setConfig-java.lang.String-java.lang.String-"> 
         <!--   --> </a> 
        <ul class="blockList"> 
         <li class="blockList"> <h4>setConfig</h4> <pre>public static&nbsp;void&nbsp;setConfig(<a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;key,
                             <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;value)</pre> 
          <div class="block">
           Sets a default configuration option. This option is used by all sessions, if for these sessions was not set a specific value for this key with 
           <a href="../../../com/jcraft/jsch/Session.html#setConfig-java.util.Properties-"><code>session.setConfig</code></a>. 
           <div style="margin: 1ex; padding: 0em 2em 0em 1em; border: dotted thin;
      max-width: 50em; background: #eeeeee;"> 
            <p>Here is the list of configuration options used by the program. They all have sensible default values (use the source if you want to know the defaults). </p> 
            <h3 id="config-alglist">Algorithm lists</h3> 
            <p> These options contain a (comma-separated, without spaces) list of algorithms, which will be offered to the server, and from which one will be selected by negotiation during key exchange. These should confirm to the format defined by RFC 4250, and be accompanied by an "implementation" option. </p> 
            <dl> 
             <dt>
              <code>kex</code>
             </dt>
             <dd>
              Key exchange algorithms
             </dd> 
             <dt>
              <code>server_host_key</code>
             </dt> 
             <dd>
              Algorithms supported for the server host key.
             </dd> 
             <dt>
              <code>cipher.s2c</code>
             </dt>
             <dd>
              encryption algorithms used for server-to-client transport. See 
              <a href="#config-others">CheckCiphers</a>.
             </dd> 
             <dt>
              <code>cipher.c2s</code>
             </dt>
             <dd>
              encryption algorithms used for client-to-server transport. See 
              <a href="#config-others">CheckCiphers</a>.
             </dd> 
             <dt>
              <code>mac.c2s</code>
             </dt>
             <dd>
              message authentication code algorithms for client-to-server transport.
             </dd> 
             <dt>
              <code>mac.s2c</code>
             </dt>
             <dd>
              message authentication code algorithms for server-to-client transport.
             </dd> 
             <dt>
              <code>compression.c2s</code>
             </dt>
             <dd>
              Compression algorithms for client-to-server transport. The default is "none", but this library also supports "zlib" and "zlib@openssh.com". (Other compression algorithms can't be put in, it seems.)
             </dd> 
             <dt>
              <code>compression.s2c</code>
             </dt>
             <dd>
              Compression algorithms for server-to-client transport. The default is "none", but this library also supports "zlib" and "zlib@openssh.com". (Other compression algorithms can't be put in, it seems.)
             </dd> 
             <dt>
              <code>lang.s2c</code>
             </dt>
             <dd>
              Language preferences for server-to-client human readable messages (should normally be empty)
             </dd> 
             <dt>
              <code>lang.c2s</code>
             </dt>
             <dd>
              Language preferences for client-to-server human readable messages (should normally be empty)
             </dd> 
            </dl> 
            <p> During key exchange, the first option in the client's list (i.e. the option value) which also appears on the server's list will be choosen for each algorithm. Thus the order matters here. </p> 
            <h3 id="config-impl">Implementation classes</h3> 
            <p>The following options contain the class name of classes implementing a specific algorithm. They should implement the interface or abstract class mentioned here. </p> 
            <p> The classes must be findable using the class loader which loaded the JSch library (e.g. by a simple <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Class.html?is-external=true#forName-java.lang.String-" title="class or interface in java.lang"><code>Class.forName(java.lang.String)</code></a> inside the library classes), and must have a no-argument constructor, which will be called to instantiate the objects needed. Then the actual interface methods will be used. </p> 
            <h4>Key exchange algorithms (<a href="../../../com/jcraft/jsch/KeyExchange.html" title="class in com.jcraft.jsch"><code>KeyExchange</code></a>)</h4> 
            <dl>
             <dt>
              <code>diffie-hellman-group-exchange-sha1</code>
             </dt> 
             <dd>
              Diffie-Hellman Key Exchange with a group chosen by the server (
              <a href="http://tools.ietf.org/html/rfc4419">RFC 4419</a>).
             </dd> 
             <dt>
              <code>diffie-hellman-group1-sha1</code>
             </dt> 
             <dd>
              Diffie-Hellman key exchange with a fixed group. (
              <a href="http://tools.ietf.org/html/rfc4253#section-7">RFC 4253, section 7</a>)
             </dd> 
            </dl> 
            <h4>Elliptic curve key exchange algorithms (<a href="../../../com/jcraft/jsch/ECDH.html" title="interface in com.jcraft.jsch"><code>ECDH</code></a>)</h4> 
            <dl>
             <dt>
              <code>ecdh-sha2-nistp</code>
             </dt> 
             <dd>
              Elliptic curve Diffie Hellmann key exchange. (
              <a href="https://tools.ietf.org/html/rfc5656#section-4">RFC 5656, section 4</a>)
             </dd> 
            </dl> 
            <h4>Symmetric Encryption algorithms (<a href="../../../com/jcraft/jsch/Cipher.html" title="interface in com.jcraft.jsch"><code>Cipher</code></a>)</h4> 
            <p>(The mentioned ones have implementations included in the library, of course you can add more, adding them to <code>cipher.s2c</code> and/or <code>cipher.c2s</code>. The RFC mentioned is the RFC which defined the keywords, here with links: <a href="http://tools.ietf.org/html/rfc4253#section-6.3">RFC 4253, SSH Transport Layer Protocol, Section 6.3 Encryption</a>, <a href="http://tools.ietf.org/html/rfc4344">RFC 4344, SSH Transport Layer Encryption Modes</a> (which defines the CTR mode for most of the ciphers of RFC 4253), and <a href="http://tools.ietf.org/html/rfc4345">RFC 4345, Improved Arcfour Modes for SSH</a>.) </p> 
            <dl> 
             <dt>
              <code>3des-cbc</code>
             </dt>
             <dd>
              three-key 3DES in CBC mode (RFC 4253)
             </dd> 
             <dt>
              <code>3des-ctr</code>
             </dt> 
             <dt>
              <code>blowfish-cbc</code>
             </dt>
             <dd>
              Blowfish in CBC mode (RFC 4253)
             </dd> 
             <dt>
              <code>aes256-cbc</code>
             </dt>
             <dd>
              AES in CBC mode, with a 256-bit key (RFC 4253)
             </dd> 
             <dt>
              <code>aes192-cbc</code>
             </dt>
             <dd>
              AES with a 192-bit key (RFC 4253)
             </dd> 
             <dt>
              <code>aes128-cbc</code>
             </dt>
             <dd>
              AES with a 128-bit key (RFC 4253)
             </dd> 
             <dt>
              <code>aes128-ctr</code>
             </dt>
             <dd>
              AES (Rijndael) in SDCTR mode, with 128-bit key (RFC 4344)
             </dd> 
             <dt>
              <code>aes192-ctr</code>
             </dt>
             <dd>
              AES with 192-bit key (RFC 4344)
             </dd> 
             <dt>
              <code>aes256-ctr</code>
             </dt>
             <dd>
              AES with 256-bit key (RFC 4344)
             </dd> 
             <dt>
              <code>arcfour</code>
             </dt>
             <dd>
              the ARCFOUR stream cipher with a 128-bit key (RFC 4253)
             </dd> 
             <dt>
              <code>arcfour128</code>
             </dt>
             <dd>
              a variant of the ARCFOUR cipher (still with 128-bit key), which discards the first 1536 bytes of keystream before encryption will begin. (RFC 4345)
             </dd> 
             <dt>
              <code>arcfour256</code>
             </dt>
             <dd>
              Like arcfour128, but with a 256-bit key. (RFC 4345). 
             </dd>
             <dt>
              <code>none</code>
             </dt>
             <dd>
              The null cipher (i.e. no encryption) (RFC 4345, RFC 2410)
             </dd> 
            </dl> 
            <h4>Message Authentication Code algorithms (<a href="../../../com/jcraft/jsch/MAC.html" title="interface in com.jcraft.jsch"><code>MAC</code></a>)</h4> 
            <p>These keywords are defined in <a href="http://tools.ietf.org/html/rfc4253#section-6.4">RFC 4253, section 6.4 Data Integrity</a>. The basic HMAC algorithm is defined in <a href="http://tools.ietf.org/html/rfc2104">RFC 2104</a>.</p> 
            <dl> 
             <dt>
              <code>hmac-sha1</code>
             </dt>
             <dd>
              HMAC-SHA1 (digest length = key length = 20)
             </dd> 
             <dt>
              <code>hmac-sha1-96</code>
             </dt>
             <dd>
              first 96 bits of HMAC-SHA1 (digest length = 12, key length = 20)
             </dd> 
             <dt>
              <code>hmac-md5</code>
             </dt>
             <dd>
              HMAC-MD5 (digest length = key length = 16)
             </dd> 
             <dt>
              <code>hmac-md5-96</code>
             </dt>
             <dd>
              first 96 bits of HMAC-MD5 (digest length = 12, key length = 16)
             </dd> 
            </dl> 
            <h4>Compression methods (<a href="../../../com/jcraft/jsch/Compression.html" title="interface in com.jcraft.jsch"><code>Compression</code></a>)</h4> 
            <p>(It is now hardcoded that only these two (and <code>none</code>) are actually accepted, even if providing more ones with <code>compression.s2c</code> or <code>compression.c2s</code>. I think the reason is the special handling necessary for <code>zlib@openssh.com</code>.) </p> 
            <dl> 
             <dt>
              <code>zlib</code>
             </dt>
             <dd>
              zlib compression as defined by RFC 1950+1951
             </dd> 
             <dt>
              <code>zlib@openssh.com</code>
             </dt> 
             <dd>
              A variant of the zlib compression where the compression only starts after the client user is authenticated. This is described in the Internet-Draft 
              <a href="http://tools.ietf.org/html/draft-miller-secsh-compression-delayed-00">draft-miller-secsh-compression-delayed-00</a>.
             </dd> 
            </dl> 
            <h4 id="config-auth">User Authentication methods (<a href="../../../com/jcraft/jsch/UserAuth.html" title="class in com.jcraft.jsch"><code>UserAuth</code></a>)</h4> 
            <p>Here the user sends a list of methods, and we have a list of methods in the option <code>PreferredAuthentications</code> (in preference order). We take the first of our methods which is supported by the server, get the <code>userauth.</code><var>method</var> variable to load the implementing class, and try to authenticate. This will repeat until we are authenticated or no more methods left. </p> 
            <p>The following ones are built in:</p> 
            <dl> 
             <dt>
              <code>userauth.none</code>
             </dt> 
             <dd>
              mainly for getting the list of methods the server supports.
             </dd> 
             <dt>
              <code>userauth.password</code>
             </dt> 
             <dd>
              usual password authentication.
             </dd> 
             <dt>
              <code>userauth.keyboard-interactive</code>
             </dt> 
             <dd>
              Using the generic message exchange authentication mechanism, as defined in 
              <a href="http://tools.ietf.org/html/rfc4256">RFC 4256</a>.
             </dd> 
             <dt>
              <code>userauth.publickey</code>
             </dt> 
             <dd>
              public key authentication, using an 
              <a href="../../../com/jcraft/jsch/Identity.html" title="interface in com.jcraft.jsch"><code>Identity</code></a>.
             </dd> 
             <dt>
              <code>userauth.gssapi-with-mic</code>
             </dt> 
             <dd>
              Using the GSS-API (see below) as defined in 
              <a href="http://tools.ietf.org/html/rfc4462#section-3">RFC 4462, section 3</a>. 
             </dd> 
            </dl> 
            <p>For the GSS-API mechanism we need an implementation of <a href="../../../com/jcraft/jsch/GSSContext.html" title="interface in com.jcraft.jsch"><code>GSSContext</code></a> to refer to, which will be chosen by the configuration option <code>gssapi-with-mic.</code><var>method</var>, the method being chosen from a list given by the server. For now, we (hardcoded) only support the <code>krb5</code> method, resulting in: </p> 
            <dl>
             <dt>
              <code>gssapi-with-mic.krb5</code>
             </dt>
             <dd>
              Kerberos 5 authentication. 
             </dd>
            </dl> 
            <h4>Miscellaneous algorithms</h4> 
            <p>The following options do not correspond to algorithm names as defined in the SSH protocols, but are used to implement the underlying cryptographic functions.</p> 
            <dl> 
             <dt>
              <code>dh</code>
             </dt>
             <dd>
              <a href="../../../com/jcraft/jsch/DH.html" title="interface in com.jcraft.jsch"><code>DH</code></a> - Diffie-Hellman mathematics.
             </dd> 
             <dt>
              <code>random</code>
             </dt>
             <dd>
              <a href="../../../com/jcraft/jsch/Random.html" title="interface in com.jcraft.jsch"><code>Random</code></a> - random number generation.
             </dd> 
             <dt>
              <code>signature.dss</code>
             </dt>
             <dd>
              <a href="../../../com/jcraft/jsch/SignatureDSA.html" title="interface in com.jcraft.jsch"><code>SignatureDSA</code></a>
             </dd> 
             <dt>
              <code>signature.rsa</code>
             </dt>
             <dd>
              <a href="../../../com/jcraft/jsch/SignatureRSA.html" title="interface in com.jcraft.jsch"><code>SignatureRSA</code></a>
             </dd> 
             <dt>
              <code>signature.ecdsa</code>
             </dt>
             <dd>
              <a href="../../../com/jcraft/jsch/SignatureECDSA.html" title="interface in com.jcraft.jsch"><code>SignatureECDSA</code></a>
             </dd> 
             <dt>
              <code>keypairgen.dsa</code>
             </dt>
             <dd>
              <a href="../../../com/jcraft/jsch/KeyPairGenDSA.html" title="interface in com.jcraft.jsch"><code>KeyPairGenDSA</code></a>
             </dd> 
             <dt>
              <code>keypairgen.rsa</code>
             </dt>
             <dd>
              <a href="../../../com/jcraft/jsch/KeyPairGenRSA.html" title="interface in com.jcraft.jsch"><code>KeyPairGenRSA</code></a>
             </dd> 
             <dt>
              <code>pbkdf</code>
             </dt>
             <dd>
              <a href="../../../com/jcraft/jsch/PBKDF.html" title="interface in com.jcraft.jsch"><code>PBKDF</code></a> - password based key generation, using PKDF 2 with HMAC-SHA1
             </dd> 
            </dl> 
            <p>And the cryptographic hash algorithms (<a href="../../../com/jcraft/jsch/HASH.html" title="interface in com.jcraft.jsch"><code>HASH</code></a>):</p> 
            <dl> 
             <dt>
              <code>sha-1</code>
             </dt>
             <dd>
              The Secure Hash Algorithm, version 1.
             </dd> 
             <dt>
              <code>md5</code>
             </dt>
             <dd>
              The Message Digest 5 algorithm.
             </dd> 
            </dl> 
            <h3 id="config-others">Other options</h3> 
            <p> Here are options not fitting in any of the other categories. </p> 
            <dl> 
             <dt>
              <code>compression_level</code>
             </dt>
             <dd>
              The compression level for client-to-server transport. This will only be used if the negotiated compression method is one of 
              <code>zlib</code> and 
              <code>zlib@openssh.com</code> (other methods are not supported anyway).
             </dd> 
             <dt>
              <code>PreferredAuthentications</code>
             </dt>
             <dd>
              A preference order of our 
              <a href="config-auth">preferred authentication methods</a>. Each of them should have a corresponding userauth.
              <var>method configuration option defining the implementation class.</var>
             </dd> 
             <dt>
              <code>StrictHostKeyChecking</code>
             </dt>
             <dd>
              Indicates what to do if the server's host key changed or the server is unknown. One of 
              <code>yes</code> (refuse connection), 
              <code>ask</code> (ask the user whether to add/change the key) and 
              <code>no</code> (always insert the new key).
             </dd> 
             <dt>
              <code>HashKnownHosts</code>
             </dt>
             <dd>
              If this is "yes" and we are using the default known-hosts file implementation, new added server keys will be hashed.
             </dd> 
             <dt>
              <code>CheckCiphers</code>
             </dt>
             <dd>
              A list of Ciphers which should be first checked for availability. All ciphers in this list which are not working will be removed from the 
              <code>ciphers.c2s</code> and 
              <code>ciphers.s2c</code> before sending these lists to the server in a KEX_INIT message.
             </dd> 
            </dl> 
           </div>
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>key</code> - the option name.
           </dd> 
           <dd>
            <code>value</code> - the option value.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/Session.html#setConfig-java.util.Properties-"><code>Session.setConfig(java.util.Properties)</code></a>, 
            <a href="../../../com/jcraft/jsch/JSch.html#getConfig-java.lang.String-"><code>getConfig(java.lang.String)</code></a>
           </dd> 
          </dl> </li> 
        </ul> <a name="setLogger-com.jcraft.jsch.Logger-"> 
         <!--   --> </a> 
        <ul class="blockListLast"> 
         <li class="blockList"> <h4>setLogger</h4> <pre>public static&nbsp;void&nbsp;setLogger(<a href="../../../com/jcraft/jsch/Logger.html" title="interface in com.jcraft.jsch">Logger</a>&nbsp;logger)</pre> 
          <div class="block">
           sets the Logger to be used by this library.
          </div> 
          <dl> 
           <dt>
            <span class="paramLabel">Parameters:</span>
           </dt> 
           <dd>
            <code>logger</code> - the new logger. If 
            <code>null</code>, we use a buildt-in Logger which logs nothing.
           </dd> 
           <dt>
            <span class="seeLabel">See Also:</span>
           </dt> 
           <dd>
            <a href="../../../com/jcraft/jsch/Logger.html" title="interface in com.jcraft.jsch"><code>Logger</code></a>
           </dd> 
          </dl> </li> 
        </ul> </li> 
      </ul> </li> 
    </ul> 
   </div> 
  </div> 
  <!-- ========= END OF CLASS DATA ========= --> 
  <!-- ======= START OF BOTTOM NAVBAR ====== --> 
  <div class="bottomNav">
   <a name="navbar.bottom"> 
    <!--   --> </a> 
   <div class="skipNav">
    <a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a>
   </div> 
   <a name="navbar.bottom.firstrow"> 
    <!--   --> </a> 
   <ul class="navList" title="Navigation"> 
    <li><a href="../../../com/jcraft/jsch/package-summary.html">Package</a></li> 
    <li class="navBarCell1Rev">Class</li> 
    <li><a href="class-use/JSch.html">Use</a></li> 
    <li><a href="package-tree.html">Tree</a></li> 
    <li><a href="../../../deprecated-list.html">Deprecated</a></li> 
    <li><a href="../../../index-all.html">Index</a></li> 
    <li><a href="../../../help-doc.html">Help</a></li> 
   </ul> 
  </div> 
  <div class="subNav"> 
   <ul class="navList"> 
    <li><a href="../../../com/jcraft/jsch/IO.html" title="class in com.jcraft.jsch"><span class="typeNameLink">Prev&nbsp;Class</span></a></li> 
    <li><a href="../../../com/jcraft/jsch/JSchException.html" title="class in com.jcraft.jsch"><span class="typeNameLink">Next&nbsp;Class</span></a></li> 
   </ul> 
   <ul class="navList"> 
    <li><a href="../../../index.html?com/jcraft/jsch/JSch.html" target="_top">Frames</a></li> 
    <li><a href="JSch.html" target="_top">No&nbsp;Frames</a></li> 
   </ul> 
   <ul class="navList" id="allclasses_navbar_bottom"> 
    <li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li> 
   </ul> 
   <div> 
    <script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script> 
   </div> 
   <div> 
    <ul class="subNavList"> 
     <li>Summary:&nbsp;</li> 
     <li>Nested&nbsp;|&nbsp;</li> 
     <li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li> 
     <li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li> 
     <li><a href="#method.summary">Method</a></li> 
    </ul> 
    <ul class="subNavList"> 
     <li>Detail:&nbsp;</li> 
     <li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li> 
     <li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li> 
     <li><a href="#method.detail">Method</a></li> 
    </ul> 
   </div> 
   <a name="skip.navbar.bottom"> 
    <!--   --> </a>
  </div> 
  <!-- ======== END OF BOTTOM NAVBAR ======= --> 
  <p class="legalCopy"><small>This is an inofficial Javadoc created by Pa?lo Ebermann. Have a look at the <a href="http://www.jcraft.com/jsch/">official homepage</a>. </small></p>   
 </body>
</html>