<!doctype html>
<!--[if IE 7]>
<html class="ie ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html class="ie ie8" lang="en-US">
<![endif]-->
<!--[if !(IE 7) & !(IE 8)]><!-->
<html lang="en-US">
 <!--<![endif]-->
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width"> 
  <title>How to Convert Decimal Numbers to Words with Python | The Mouse Vs. The Python</title> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="pingback" href="http://www.blog.pythonlibrary.org/xmlrpc.php"> 
  <!--[if lt IE 9]>
	<script src="http://www.blog.pythonlibrary.org/wp-content/themes/twentythirteen/js/html5.js"></script>
	<![endif]--> 
  <link rel="dns-prefetch" href="//www.blog.pythonlibrary.org"> 
  <link rel="dns-prefetch" href="//fonts.googleapis.com"> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link href="https://fonts.gstatic.com" crossorigin rel="preconnect"> 
  <link rel="alternate" type="application/rss+xml" title="The Mouse Vs. The Python » Feed" href="http://www.blog.pythonlibrary.org/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="The Mouse Vs. The Python » Comments Feed" href="http://www.blog.pythonlibrary.org/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="The Mouse Vs. The Python » How to Convert Decimal Numbers to Words with Python Comments Feed" href="http://www.blog.pythonlibrary.org/2012/06/02/how-to-convert-decimal-numbers-to-words-with-python/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.blog.pythonlibrary.org\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.8.2"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b!==c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="wpt-twitter-feed-css" href="http://www.blog.pythonlibrary.org/wp-content/plugins/wp-to-twitter/css/twitter-feed.css?ver=4.8.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="twentythirteen-fonts-css" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro%3A300%2C400%2C700%2C300italic%2C400italic%2C700italic%7CBitter%3A400%2C700&amp;subset=latin%2Clatin-ext" type="text/css" media="all"> 
  <link rel="stylesheet" id="genericons-css" href="http://www.blog.pythonlibrary.org/wp-content/themes/twentythirteen/genericons/genericons.css?ver=3.03" type="text/css" media="all"> 
  <link rel="stylesheet" id="twentythirteen-style-css" href="http://www.blog.pythonlibrary.org/wp-content/themes/twentythirteen/style.css?ver=2013-07-18" type="text/css" media="all"> 
  <!--[if lt IE 9]>
<link rel='stylesheet' id='twentythirteen-ie-css'  href='http://www.blog.pythonlibrary.org/wp-content/themes/twentythirteen/css/ie.css?ver=2013-07-18' type='text/css' media='all' />
<![endif]--> 
  <link rel="stylesheet" id="A2A_SHARE_SAVE-css" href="http://www.blog.pythonlibrary.org/wp-content/plugins/add-to-any/addtoany.min.css?ver=1.14" type="text/css" media="all"> 
  <style id="A2A_SHARE_SAVE-inline-css" type="text/css">
@media screen and (max-width:980px){
.a2a_floating_style.a2a_vertical_style{display:none;}
}
</style> 
  <script type="text/javascript" src="http://www.blog.pythonlibrary.org/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="http://www.blog.pythonlibrary.org/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript" src="http://www.blog.pythonlibrary.org/wp-content/plugins/add-to-any/addtoany.min.js?ver=1.0"></script> 
  <script type="text/javascript" src="http://www.blog.pythonlibrary.org/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.5.4"></script> 
  <link rel="https://api.w.org/" href="http://www.blog.pythonlibrary.org/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.blog.pythonlibrary.org/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.blog.pythonlibrary.org/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Weekly Python Links Roundup (6/1/2012)" href="http://www.blog.pythonlibrary.org/2012/06/01/weekly-python-links-roundup-612012/"> 
  <link rel="next" title="wxPython and SQLAlchemy: Loading Random SQLite Databases for Viewing" href="http://www.blog.pythonlibrary.org/2012/06/04/wxpython-and-sqlalchemy-loading-random-sqlite-databases-for-viewing/"> 
  <meta name="generator" content="WordPress 4.8.2"> 
  <link rel="canonical" href="http://www.blog.pythonlibrary.org/2012/06/02/how-to-convert-decimal-numbers-to-words-with-python/"> 
  <link rel="shortlink" href="http://www.blog.pythonlibrary.org/?p=2398"> 
  <link rel="alternate" type="application/json+oembed" href="http://www.blog.pythonlibrary.org/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2012%2F06%2F02%2Fhow-to-convert-decimal-numbers-to-words-with-python%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://www.blog.pythonlibrary.org/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2012%2F06%2F02%2Fhow-to-convert-decimal-numbers-to-words-with-python%2F&amp;format=xml"> 
  <script type="text/javascript">
var a2a_config=a2a_config||{};a2a_config.callbacks=a2a_config.callbacks||[];a2a_config.templates=a2a_config.templates||{};
</script> 
  <script type="text/javascript" src="https://static.addtoany.com/menu/page.js" async></script> 
  <style type="text/css">
#content pre {
  border: 1px dashed #2f6fab;
  padding: 0.5em; background-color: #fafafa;
  overflow:auto;
}
#content pre ol { 
  margin: 0; padding: 0;
  margin-left: 2em; 
}
 
#content pre ol li {
  margin: 0; padding: 0;
  height: 1em;
}
 
/* used for testing...
#content pre ol li div {
  background-color: blue;
  line-height: 1em;
  border: 0; padding: 0;
}*/
</style>
  <!-- Favicon Rotator --> 
  <link rel="shortcut icon" href="http://www.blog.pythonlibrary.org/wp-content/uploads/2015/03/favicon.ico"> 
  <!-- End Favicon Rotator --> 
  <style type="text/css" media="screen">
      div.printfriendly a, div.printfriendly a:link, div.printfriendly a:hover, div.printfriendly a:visited {
        text-decoration: none;
        border: none;
      }
    </style> 
  <style type="text/css" media="screen">
          div.printfriendly {
            margin: 0px 0px 0px 0px;
            position: relative;
            z-index: 1000;
          }
          div.printfriendly a, div.printfriendly a:link, div.printfriendly a:visited {
            font-size: 14px;
            color: #55750C;
            vertical-align: bottom;
          }
          .printfriendly a {
            box-shadow:none;
          }
          .printfriendly a:hover {
            cursor: pointer;
          }
          .printfriendly a img  {
            border: none;
            padding:0;
            margin-right: 6px;
            box-shadow: none;
            -webkit-box-shadow: none;
            -moz-box-shadow: none;
          }
          .printfriendly a span{
            vertical-align: bottom;
          }
          .pf-alignleft {
            float: left;
          }
          .pf-alignright {
            float: right;
          }
          div.pf-aligncenter {
            display: block;
            margin-left: auto;
            margin-right: auto;
            text-align: center;
          }
        </style> 
  <style type="text/css" media="print">
          .printfriendly {
            display: none;
          }
        </style> 
  <style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style> 
  <style type="text/css" id="twentythirteen-header-css">
			.site-header {
			background: url(http://www.blog.pythonlibrary.org/wp-content/uploads/2016/03/cropped-mvp.png) no-repeat scroll top;
			background-size: 1600px auto;
		}
		@media (max-width: 767px) {
			.site-header {
				background-size: 768px auto;
			}
		}
		@media (max-width: 359px) {
			.site-header {
				background-size: 360px auto;
			}
		}
			.site-title,
		.site-description {
			position: absolute;
			clip: rect(1px 1px 1px 1px); /* IE7 */
			clip: rect(1px, 1px, 1px, 1px);
		}
		</style> 
  <!-- Google Analytics Tracking by Google Analyticator 6.5.4: http://www.videousermanuals.com/google-analyticator/ --> 
  <script type="text/javascript">
    var analyticsFileTypes = [''];
    var analyticsSnippet = 'enabled';
    var analyticsEventTracking = 'enabled';
</script> 
  <script type="text/javascript">
	var _gaq = _gaq || [];
  
	_gaq.push(['_setAccount', 'UA-10932412-1']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script> 
 </head> 
 <body class="post-template-default single single-post postid-2398 single-format-standard sidebar"> 
  <div id="page" class="hfeed site"> 
   <header id="masthead" class="site-header" role="banner"> 
    <a class="home-link" href="http://www.blog.pythonlibrary.org/" title="The Mouse Vs. The Python" rel="home"> <h1 class="site-title">The Mouse Vs. The Python</h1> <h2 class="site-description">Python Programming from the Frontlines</h2> </a> 
    <div id="navbar" class="navbar"> 
     <nav id="site-navigation" class="navigation main-navigation" role="navigation"> 
      <button class="menu-toggle">Menu</button> 
      <a class="screen-reader-text skip-link" href="#content" title="Skip to content">Skip to content</a> 
      <div id="primary-menu" class="nav-menu">
       <ul> 
        <li class="page_item page-item-2"><a href="http://www.blog.pythonlibrary.org/about/">About</a></li> 
        <li class="page_item page-item-4012"><a href="http://www.blog.pythonlibrary.org/buy-the-book/">Buy the Book</a></li> 
        <li class="page_item page-item-376"><a href="http://www.blog.pythonlibrary.org/contact/">Contact the Author</a></li> 
        <li class="page_item page-item-1380"><a href="http://www.blog.pythonlibrary.org/follow/">Follow the Blog</a></li> 
        <li class="page_item page-item-1972"><a href="http://www.blog.pythonlibrary.org/license/">License</a></li> 
        <li class="page_item page-item-2122"><a href="http://www.blog.pythonlibrary.org/my-projects/">My Projects</a></li> 
        <li class="page_item page-item-5269"><a href="http://www.blog.pythonlibrary.org/screencasts/">Screencasts</a></li> 
       </ul>
      </div> 
      <form role="search" method="get" class="search-form" action="http://www.blog.pythonlibrary.org/"> 
       <label> <span class="screen-reader-text">Search for:</span> <input type="search" class="search-field" placeholder="Search " value="" name="s"> </label> 
       <input type="submit" class="search-submit" value="Search"> 
      </form> 
     </nav>
     <!-- #site-navigation --> 
    </div>
    <!-- #navbar --> 
   </header>
   <!-- #masthead --> 
   <div id="main" class="site-main"> 
    <div id="primary" class="content-area"> 
     <div id="content" class="site-content" role="main"> 
      <article id="post-2398" class="post-2398 post type-post status-publish format-standard hentry category-cross-platform category-python tag-python"> 
       <header class="entry-header"> 
        <h1 class="entry-title">How to Convert Decimal Numbers to Words with Python</h1> 
        <div class="entry-meta"> 
         <span class="date"><a href="http://www.blog.pythonlibrary.org/2012/06/02/how-to-convert-decimal-numbers-to-words-with-python/" title="Permalink to How to Convert Decimal Numbers to Words with Python" rel="bookmark"><time class="entry-date" datetime="2012-06-02T06:42:08+00:00">June 2, 2012</time></a></span>
         <span class="categories-links"><a href="http://www.blog.pythonlibrary.org/category/cross-platform/" rel="category tag">Cross-Platform</a>, <a href="http://www.blog.pythonlibrary.org/category/python/" rel="category tag">Python</a></span>
         <span class="tags-links"><a href="http://www.blog.pythonlibrary.org/tag/python/" rel="tag">Python</a></span>
         <span class="author vcard"><a class="url fn n" href="http://www.blog.pythonlibrary.org/author/mld/" title="View all posts by Mike" rel="author">Mike</a></span> 
        </div>
        <!-- .entry-meta --> 
       </header>
       <!-- .entry-header --> 
       <div class="entry-content"> 
        <div class="pf-content">
         <p>It may have been a better idea to have called this this article How to Convert Floats to Words, but since Im talking about currency, I thought using Decimal was more accurate. Anyway, a couple years ago, I <a href="http://www.blog.pythonlibrary.org/2010/10/21/python-converting-numbers-to-words/" target="_blank">wrote</a> about how to convert numbers to Python. The main reason Im revisiting this topic is because I ended up needing to do it again and I found my own example rather lacking. It doesnt show how to actually use it to convert something like 10.12 into ten dollars and twelve cents. So Im going to show you how to do it in this article and then well also look at some of the alternatives that my readers gave me.<span id="more-2398"></span></p> 
         <h3>Back to the Drawing Board</h3> 
         <p> </p>
         <p>To start out, well take the original code and add some tests on the end to make sure it works the way we want. Then Ill show you a slightly different way to go about it. Finally, we will look at two other projects that attempt to do this sort of thing as well.</p> 
         <pre class="python"><span style="color: #483d8b;">''</span><span style="color: #483d8b;">'Convert number to English words
$./num2eng.py 1411893848129211
one quadrillion, four hundred and eleven trillion, eight hundred and ninety
three billion, eight hundred and forty eight million, one hundred and twenty
nine thousand, two hundred and eleven
$
&nbsp;
Algorithm from http://mini.net/tcl/591
'</span><span style="color: #483d8b;">''</span>
&nbsp;
<span style="color: #808080; font-style: italic;"># modified to exclude the "and" between hundreds and tens - mld</span>
&nbsp;
__author__ = <span style="color: #483d8b;">'Miki Tebeka &lt;tebeka@cs.bgu.ac.il&gt;'</span>
__version__ = <span style="color: #483d8b;">'$Revision: 7281 $'</span>
&nbsp;
<span style="color: #808080; font-style: italic;"># $Source$</span>
&nbsp;
<span style="color: #ff7700;font-weight:bold;">import</span> <span style="color: #dc143c;">math</span>
&nbsp;
<span style="color: #808080; font-style: italic;"># Tokens from 1000 and up</span>
_PRONOUNCE = <span style="color: black;">[</span>
    <span style="color: #483d8b;">'vigintillion'</span>,
    <span style="color: #483d8b;">'novemdecillion'</span>,
    <span style="color: #483d8b;">'octodecillion'</span>,
    <span style="color: #483d8b;">'septendecillion'</span>,
    <span style="color: #483d8b;">'sexdecillion'</span>,
    <span style="color: #483d8b;">'quindecillion'</span>,
    <span style="color: #483d8b;">'quattuordecillion'</span>,
    <span style="color: #483d8b;">'tredecillion'</span>,
    <span style="color: #483d8b;">'duodecillion'</span>,
    <span style="color: #483d8b;">'undecillion'</span>,
    <span style="color: #483d8b;">'decillion'</span>,
    <span style="color: #483d8b;">'nonillion'</span>,
    <span style="color: #483d8b;">'octillion'</span>,
    <span style="color: #483d8b;">'septillion'</span>,
    <span style="color: #483d8b;">'sextillion'</span>,
    <span style="color: #483d8b;">'quintillion'</span>,
    <span style="color: #483d8b;">'quadrillion'</span>,
    <span style="color: #483d8b;">'trillion'</span>,
    <span style="color: #483d8b;">'billion'</span>,
    <span style="color: #483d8b;">'million'</span>,
    <span style="color: #483d8b;">'thousand'</span>,
    <span style="color: #483d8b;">''</span>
<span style="color: black;">]</span>
&nbsp;
<span style="color: #808080; font-style: italic;"># Tokens up to 90</span>
_SMALL = <span style="color: black;">{</span>
    <span style="color: #483d8b;">'0'</span> : <span style="color: #483d8b;">''</span>,
    <span style="color: #483d8b;">'1'</span> : <span style="color: #483d8b;">'one'</span>,
    <span style="color: #483d8b;">'2'</span> : <span style="color: #483d8b;">'two'</span>,
    <span style="color: #483d8b;">'3'</span> : <span style="color: #483d8b;">'three'</span>,
    <span style="color: #483d8b;">'4'</span> : <span style="color: #483d8b;">'four'</span>,
    <span style="color: #483d8b;">'5'</span> : <span style="color: #483d8b;">'five'</span>,
    <span style="color: #483d8b;">'6'</span> : <span style="color: #483d8b;">'six'</span>,
    <span style="color: #483d8b;">'7'</span> : <span style="color: #483d8b;">'seven'</span>,
    <span style="color: #483d8b;">'8'</span> : <span style="color: #483d8b;">'eight'</span>,
    <span style="color: #483d8b;">'9'</span> : <span style="color: #483d8b;">'nine'</span>,
    <span style="color: #483d8b;">'10'</span> : <span style="color: #483d8b;">'ten'</span>,
    <span style="color: #483d8b;">'11'</span> : <span style="color: #483d8b;">'eleven'</span>,
    <span style="color: #483d8b;">'12'</span> : <span style="color: #483d8b;">'twelve'</span>,
    <span style="color: #483d8b;">'13'</span> : <span style="color: #483d8b;">'thirteen'</span>,
    <span style="color: #483d8b;">'14'</span> : <span style="color: #483d8b;">'fourteen'</span>,
    <span style="color: #483d8b;">'15'</span> : <span style="color: #483d8b;">'fifteen'</span>,
    <span style="color: #483d8b;">'16'</span> : <span style="color: #483d8b;">'sixteen'</span>,
    <span style="color: #483d8b;">'17'</span> : <span style="color: #483d8b;">'seventeen'</span>,
    <span style="color: #483d8b;">'18'</span> : <span style="color: #483d8b;">'eighteen'</span>,
    <span style="color: #483d8b;">'19'</span> : <span style="color: #483d8b;">'nineteen'</span>,
    <span style="color: #483d8b;">'20'</span> : <span style="color: #483d8b;">'twenty'</span>,
    <span style="color: #483d8b;">'30'</span> : <span style="color: #483d8b;">'thirty'</span>,
    <span style="color: #483d8b;">'40'</span> : <span style="color: #483d8b;">'forty'</span>,
    <span style="color: #483d8b;">'50'</span> : <span style="color: #483d8b;">'fifty'</span>,
    <span style="color: #483d8b;">'60'</span> : <span style="color: #483d8b;">'sixty'</span>,
    <span style="color: #483d8b;">'70'</span> : <span style="color: #483d8b;">'seventy'</span>,
    <span style="color: #483d8b;">'80'</span> : <span style="color: #483d8b;">'eighty'</span>,
    <span style="color: #483d8b;">'90'</span> : <span style="color: #483d8b;">'ninety'</span>
<span style="color: black;">}</span>
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> get_num<span style="color: black;">(</span>num<span style="color: black;">)</span>:
    <span style="color: #483d8b;">''</span><span style="color: #483d8b;">'Get token &lt;= 90, return '</span><span style="color: #483d8b;">' if not matched'</span><span style="color: #483d8b;">''</span>
    <span style="color: #ff7700;font-weight:bold;">return</span> _SMALL.<span style="color: black;">get</span><span style="color: black;">(</span>num, <span style="color: #483d8b;">''</span><span style="color: black;">)</span>
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> triplets<span style="color: black;">(</span>l<span style="color: black;">)</span>:
    <span style="color: #483d8b;">''</span><span style="color: #483d8b;">'Split list to triplets. Pad last one with '</span><span style="color: #483d8b;">' if needed'</span><span style="color: #483d8b;">''</span>
    res = <span style="color: black;">[</span><span style="color: black;">]</span>
    <span style="color: #ff7700;font-weight:bold;">for</span> i <span style="color: #ff7700;font-weight:bold;">in</span> <span style="color: #008000;">range</span><span style="color: black;">(</span><span style="color: #008000;">int</span><span style="color: black;">(</span><span style="color: #dc143c;">math</span>.<span style="color: black;">ceil</span><span style="color: black;">(</span><span style="color: #008000;">len</span><span style="color: black;">(</span>l<span style="color: black;">)</span> / <span style="color: #ff4500;">3.0</span><span style="color: black;">)</span><span style="color: black;">)</span><span style="color: black;">)</span>:
        sect = l<span style="color: black;">[</span>i <span style="color: #66cc66;">*</span> <span style="color: #ff4500;">3</span> : <span style="color: black;">(</span>i + <span style="color: #ff4500;">1</span><span style="color: black;">)</span> <span style="color: #66cc66;">*</span> <span style="color: #ff4500;">3</span><span style="color: black;">]</span>
        <span style="color: #ff7700;font-weight:bold;">if</span> <span style="color: #008000;">len</span><span style="color: black;">(</span>sect<span style="color: black;">)</span> <span style="color: #66cc66;">&lt;</span> <span style="color: #ff4500;">3</span>: <span style="color: #808080; font-style: italic;"># Pad last section</span>
            sect += <span style="color: black;">[</span><span style="color: #483d8b;">''</span><span style="color: black;">]</span> <span style="color: #66cc66;">*</span> <span style="color: black;">(</span><span style="color: #ff4500;">3</span> - <span style="color: #008000;">len</span><span style="color: black;">(</span>sect<span style="color: black;">)</span><span style="color: black;">)</span>
        res.<span style="color: black;">append</span><span style="color: black;">(</span>sect<span style="color: black;">)</span>
    <span style="color: #ff7700;font-weight:bold;">return</span> res
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> norm_num<span style="color: black;">(</span>num<span style="color: black;">)</span>:
    <span style="color: #483d8b;">""</span><span style="color: #483d8b;">"Normelize number (remove 0's prefix). Return number and string"</span><span style="color: #483d8b;">""</span>
    n = <span style="color: #008000;">int</span><span style="color: black;">(</span>num<span style="color: black;">)</span>
    <span style="color: #ff7700;font-weight:bold;">return</span> n, <span style="color: #008000;">str</span><span style="color: black;">(</span>n<span style="color: black;">)</span>
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> small2eng<span style="color: black;">(</span>num<span style="color: black;">)</span>:
    <span style="color: #483d8b;">''</span><span style="color: #483d8b;">'English representation of a number &lt;= 999'</span><span style="color: #483d8b;">''</span>
    n, num = norm_num<span style="color: black;">(</span>num<span style="color: black;">)</span>
    hundred = <span style="color: #483d8b;">''</span>
    ten = <span style="color: #483d8b;">''</span>
    <span style="color: #ff7700;font-weight:bold;">if</span> <span style="color: #008000;">len</span><span style="color: black;">(</span>num<span style="color: black;">)</span> == <span style="color: #ff4500;">3</span>: <span style="color: #808080; font-style: italic;"># Got hundreds</span>
        hundred = get_num<span style="color: black;">(</span>num<span style="color: black;">[</span><span style="color: #ff4500;">0</span><span style="color: black;">]</span><span style="color: black;">)</span> + <span style="color: #483d8b;">' hundred'</span>
        num = num<span style="color: black;">[</span><span style="color: #ff4500;">1</span>:<span style="color: black;">]</span>
        n, num = norm_num<span style="color: black;">(</span>num<span style="color: black;">)</span>
    <span style="color: #ff7700;font-weight:bold;">if</span> <span style="color: black;">(</span>n <span style="color: #66cc66;">&gt;</span> <span style="color: #ff4500;">20</span><span style="color: black;">)</span> <span style="color: #ff7700;font-weight:bold;">and</span> <span style="color: black;">(</span>n <span style="color: #66cc66;">!</span>= <span style="color: black;">(</span>n / <span style="color: #ff4500;">10</span> <span style="color: #66cc66;">*</span> <span style="color: #ff4500;">10</span><span style="color: black;">)</span><span style="color: black;">)</span>: <span style="color: #808080; font-style: italic;"># Got ones</span>
        tens = get_num<span style="color: black;">(</span>num<span style="color: black;">[</span><span style="color: #ff4500;">0</span><span style="color: black;">]</span> + <span style="color: #483d8b;">'0'</span><span style="color: black;">)</span>
        ones = get_num<span style="color: black;">(</span>num<span style="color: black;">[</span><span style="color: #ff4500;">1</span><span style="color: black;">]</span><span style="color: black;">)</span>
        ten = tens + <span style="color: #483d8b;">' '</span> + ones
    <span style="color: #ff7700;font-weight:bold;">else</span>:
        ten = get_num<span style="color: black;">(</span>num<span style="color: black;">)</span>
    <span style="color: #ff7700;font-weight:bold;">if</span> hundred <span style="color: #ff7700;font-weight:bold;">and</span> ten:
        <span style="color: #ff7700;font-weight:bold;">return</span> hundred + <span style="color: #483d8b;">' '</span> + ten
        <span style="color: #808080; font-style: italic;">#return hundred + ' and ' + ten</span>
    <span style="color: #ff7700;font-weight:bold;">else</span>: <span style="color: #808080; font-style: italic;"># One of the below is empty</span>
        <span style="color: #ff7700;font-weight:bold;">return</span> hundred + ten
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> num2eng<span style="color: black;">(</span>num<span style="color: black;">)</span>:
    <span style="color: #483d8b;">''</span><span style="color: #483d8b;">'English representation of a number'</span><span style="color: #483d8b;">''</span>
    num = <span style="color: #008000;">str</span><span style="color: black;">(</span><span style="color: #008000;">long</span><span style="color: black;">(</span>num<span style="color: black;">)</span><span style="color: black;">)</span> <span style="color: #808080; font-style: italic;"># Convert to string, throw if bad number</span>
    <span style="color: #ff7700;font-weight:bold;">if</span> <span style="color: black;">(</span><span style="color: #008000;">len</span><span style="color: black;">(</span>num<span style="color: black;">)</span> / <span style="color: #ff4500;">3</span> <span style="color: #66cc66;">&gt;</span>= <span style="color: #008000;">len</span><span style="color: black;">(</span>_PRONOUNCE<span style="color: black;">)</span><span style="color: black;">)</span>: <span style="color: #808080; font-style: italic;"># Sanity check</span>
        <span style="color: #ff7700;font-weight:bold;">raise</span> <span style="color: #008000;">ValueError</span><span style="color: black;">(</span><span style="color: #483d8b;">'Number too big'</span><span style="color: black;">)</span>
&nbsp;
    <span style="color: #ff7700;font-weight:bold;">if</span> num == <span style="color: #483d8b;">'0'</span>: <span style="color: #808080; font-style: italic;"># Zero is a special case</span>
        <span style="color: #ff7700;font-weight:bold;">return</span> <span style="color: #483d8b;">'zero '</span>
&nbsp;
    <span style="color: #808080; font-style: italic;"># Create reversed list</span>
    x = <span style="color: #008000;">list</span><span style="color: black;">(</span>num<span style="color: black;">)</span>
    x.<span style="color: black;">reverse</span><span style="color: black;">(</span><span style="color: black;">)</span>
    pron = <span style="color: black;">[</span><span style="color: black;">]</span> <span style="color: #808080; font-style: italic;"># Result accumolator</span>
    ct = <span style="color: #008000;">len</span><span style="color: black;">(</span>_PRONOUNCE<span style="color: black;">)</span> - <span style="color: #ff4500;">1</span> <span style="color: #808080; font-style: italic;"># Current index</span>
    <span style="color: #ff7700;font-weight:bold;">for</span> a, b, c <span style="color: #ff7700;font-weight:bold;">in</span> triplets<span style="color: black;">(</span>x<span style="color: black;">)</span>: <span style="color: #808080; font-style: italic;"># Work on triplets</span>
        p = small2eng<span style="color: black;">(</span>c + b + a<span style="color: black;">)</span>
        <span style="color: #ff7700;font-weight:bold;">if</span> p:
            pron.<span style="color: black;">append</span><span style="color: black;">(</span>p + <span style="color: #483d8b;">' '</span> + _PRONOUNCE<span style="color: black;">[</span>ct<span style="color: black;">]</span><span style="color: black;">)</span>
        ct -= <span style="color: #ff4500;">1</span>
    <span style="color: #808080; font-style: italic;"># Create result</span>
    pron.<span style="color: black;">reverse</span><span style="color: black;">(</span><span style="color: black;">)</span>
    <span style="color: #ff7700;font-weight:bold;">return</span> <span style="color: #483d8b;">', '</span>.<span style="color: black;">join</span><span style="color: black;">(</span>pron<span style="color: black;">)</span>
&nbsp;
<span style="color: #ff7700;font-weight:bold;">if</span> __name__ == <span style="color: #483d8b;">'__main__'</span>:
&nbsp;
    numbers = <span style="color: black;">[</span><span style="color: #ff4500;">1.37</span>, <span style="color: #ff4500;">0.07</span>, <span style="color: #ff4500;">123456.00</span>, <span style="color: #ff4500;">987654.33</span><span style="color: black;">]</span>
    <span style="color: #ff7700;font-weight:bold;">for</span> number <span style="color: #ff7700;font-weight:bold;">in</span> numbers:
        dollars, cents = <span style="color: black;">[</span><span style="color: #008000;">int</span><span style="color: black;">(</span>num<span style="color: black;">)</span> <span style="color: #ff7700;font-weight:bold;">for</span> num <span style="color: #ff7700;font-weight:bold;">in</span> <span style="color: #008000;">str</span><span style="color: black;">(</span>number<span style="color: black;">)</span>.<span style="color: black;">split</span><span style="color: black;">(</span><span style="color: #483d8b;">"."</span><span style="color: black;">)</span><span style="color: black;">]</span>
&nbsp;
        dollars = num2eng<span style="color: black;">(</span>dollars<span style="color: black;">)</span>
        <span style="color: #ff7700;font-weight:bold;">if</span> dollars.<span style="color: black;">strip</span><span style="color: black;">(</span><span style="color: black;">)</span> == <span style="color: #483d8b;">"one"</span>:
            dollars = dollars + <span style="color: #483d8b;">"dollar and "</span>
        <span style="color: #ff7700;font-weight:bold;">else</span>:
            dollars = dollars + <span style="color: #483d8b;">"dollars and "</span>
&nbsp;
        cents = num2eng<span style="color: black;">(</span>cents<span style="color: black;">)</span> + <span style="color: #483d8b;">"cents"</span>
        <span style="color: #ff7700;font-weight:bold;">print</span> dollars + cents</pre> 
         <p>Were only going to focus on the last section that tests the program. Here we have a list of various values that we run through the program and make sure it spits out what we want. Note that we have an amount thats less than a dollar. This is an edge case that Ive seen used because my employer wants to test our code with real amounts, but doesnt want huge amounts of money being transferred. Heres a slightly different way to output the data:</p> 
         <pre class="python">temp_amount = <span style="color: #ff4500;">10.34</span>
<span style="color: #ff7700;font-weight:bold;">if</span> <span style="color: #483d8b;">'.'</span> <span style="color: #ff7700;font-weight:bold;">in</span> temp_amount:
    amount = temp_amount.<span style="color: black;">split</span><span style="color: black;">(</span><span style="color: #483d8b;">'.'</span><span style="color: black;">)</span>
    dollars = amount<span style="color: black;">[</span><span style="color: #ff4500;">0</span><span style="color: black;">]</span>
    cents = amount<span style="color: black;">[</span><span style="color: #ff4500;">1</span><span style="color: black;">]</span>
<span style="color: #ff7700;font-weight:bold;">else</span>:
    dollars = temp_amount
    cents = <span style="color: #483d8b;">'00'</span>
&nbsp;
amt = num2eng.<span style="color: black;">num2eng</span><span style="color: black;">(</span>dollars<span style="color: black;">)</span>
total = amt + <span style="color: #483d8b;">'and %s/100 Dollars'</span> <span style="color: #66cc66;">%</span> cents
<span style="color: #ff7700;font-weight:bold;">print</span> total</pre> 
         <p>In this case, we dont write out the cents portion as words but just put the number over one hundred. Yeah, I know its subtle, but this article is also a brain dump for me so the next time I have to do this Ill have all the information at my fingertips.</p> 
         <h3>Trying out PyNum2Word</h3> 
         <p> </p>
         <p>After I posted my original article, someone came along and told me about the <a href="http://pypi.python.org/pypi/PyNum2Word" target="_blank">PyNum2Word project</a> and how I should have used that. The PyNum2Word project didnt exist back then, but I decided to give it a try this time around. Sadly this project has no documentation that I could find. Not even a README file! On the other hand, it claims it can do currency for the USA, Germany, Great Britain, the EU and France. I thought Germany, Britain and France were in the EU though, so Im not sure what the point is in doing francs and such when they all use Euros now. </p> 
         <p>Anyway, in our case well use the following file, <strong>num2word_EN.py</strong>, from their package for our tests. There is actually a test at the bottom of the file that is similar to the one I built. I actually based my test on theirs. Lets try editing the file and add a number less than one to their second list, such as <strong>0.45</strong>, to see if that works. Here is the result of the second lists output (Im skipping the first lists output for brevity):</p> 
         <p><code><br> 0.45 is zero point four five cents<br> 0.45 is zero point four five<br> 1 is one cent<br> 1 is one<br> 120 is one dollar and twenty cents<br> 120 is one hundred and twenty<br> 1000 is ten dollars<br> 1000 is one thousand<br> 1120 is eleven dollars and twenty cents<br> 1120 is eleven hundred and twenty<br> 1800 is eighteen dollars<br> 1800 is eighteen hundred<br> 1976 is nineteen dollars and seventy-six cents<br> 1976 is nineteen hundred and seventy-six<br> 2000 is twenty dollars<br> 2000 is two thousand<br> 2010 is twenty dollars and ten cents<br> 2010 is two thousand and ten<br> 2099 is twenty dollars and ninety-nine cents<br> 2099 is two thousand and ninety-nine<br> 2171 is twenty-one dollars and seventy-one cents<br> 2171 is twenty-one hundred and seventy-one<br> </code></p> 
         <p>It works, but not in the way I expected. In the USA, when we talk about currency, we would call <strong>0.45</strong> forty-five cents not zero point four five cents. When I was researching this, I did learn that people in some other countries do use the latter terminology. What I find interesting is that this module takes anything above 100 and divides it into dollars and cents. For example, note that 120 is translated into one dollar and twenty cents instead of one hundred and twenty dollars. Also note that it says twenty cents, NOT point two zero cents. I dont know how to explain that contradiction. It DOES work if you pass it just an integer thats less than 100. So if you had the user put in a float, you would want to break it up much like I did earlier:</p> 
         <pre class="python"><span style="color: #ff7700;font-weight:bold;">if</span> <span style="color: #483d8b;">'.'</span> <span style="color: #ff7700;font-weight:bold;">in</span> temp_amount:
    amount = temp_amount.<span style="color: black;">split</span><span style="color: black;">(</span><span style="color: #483d8b;">'.'</span><span style="color: black;">)</span>
    dollars = amount<span style="color: black;">[</span><span style="color: #ff4500;">0</span><span style="color: black;">]</span>
    cents = amount<span style="color: black;">[</span><span style="color: #ff4500;">1</span><span style="color: black;">]</span>
<span style="color: #ff7700;font-weight:bold;">else</span>:
    dollars = temp_amount
    cents = <span style="color: #483d8b;">'00'</span></pre> 
         <p>Then pass each part through the script to get the pieces and then put them together.</p> 
         <h3>Using numbers.py</h3> 
         <p> </p>
         <p>Another of my readers by the name of <a href="http://eswald.wordpress.com" target="_blank">Eric Wald</a> contacted me about his <a href="http://www.brainshell.org/numbers.py" target="_blank">numbers.py script</a>. Lets see how that holds up!</p> 
         <p>Looking at the code, youll quickly find that it cannot handle floats, so well have to break up our floats and pass it the dollars and cents separately. I tried this with several different numbers and it seems to convert them correctly. The script even puts commas in at the thousands mark. It doesnt add the and word anywhere, but I dont care about that right now.</p> 
         <h3>Conclusion</h3> 
         <p> </p>
         <p>All three of these methods require a wrapper of some sort to add the dollars and cents (or number/100) words to them and to break up the float into two pieces. I think Erics code is very straightforward and the best documented. The PyNum2Word projects code is also very succinct and works quite well, but theres no documentation. The solution I found a long time ago also works, but I find that code very ugly and not very easy to read. I dont really have a recommendation, but I think I like Erics the best. If you need the flexibility of doing multiple currencies, then the PyNum2Word project is worth a look.</p> 
         <div class="printfriendly pf-alignleft">
          <a href="#" rel="nofollow" onclick="window.print(); return false;" class="noslimstat" title="Printer Friendly, PDF &amp; Email"><img style="border:none;-webkit-box-shadow:none; box-shadow:none;" src="https://cdn.printfriendly.com/buttons/printfriendly-button.png" alt="Print Friendly, PDF &amp; Email"></a>
         </div>
        </div>
        <div class="addtoany_share_save_container addtoany_content_bottom">
         <div class="a2a_kit a2a_kit_size_32 addtoany_list" data-a2a-url="http://www.blog.pythonlibrary.org/2012/06/02/how-to-convert-decimal-numbers-to-words-with-python/" data-a2a-title="How to Convert Decimal Numbers to Words with Python">
          <a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2012%2F06%2F02%2Fhow-to-convert-decimal-numbers-to-words-with-python%2F&amp;linkname=How%20to%20Convert%20Decimal%20Numbers%20to%20Words%20with%20Python" title="Facebook" rel="nofollow noopener" target="_blank"></a>
          <a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2012%2F06%2F02%2Fhow-to-convert-decimal-numbers-to-words-with-python%2F&amp;linkname=How%20to%20Convert%20Decimal%20Numbers%20to%20Words%20with%20Python" title="Twitter" rel="nofollow noopener" target="_blank"></a>
          <a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2012%2F06%2F02%2Fhow-to-convert-decimal-numbers-to-words-with-python%2F&amp;linkname=How%20to%20Convert%20Decimal%20Numbers%20to%20Words%20with%20Python" title="Google+" rel="nofollow noopener" target="_blank"></a>
          <a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share"></a>
         </div>
        </div> 
       </div>
       <!-- .entry-content --> 
       <footer class="entry-meta"> 
       </footer>
       <!-- .entry-meta --> 
      </article>
      <!-- #post --> 
      <nav class="navigation post-navigation" role="navigation"> 
       <h1 class="screen-reader-text">Post navigation</h1> 
       <div class="nav-links"> 
        <a href="http://www.blog.pythonlibrary.org/2012/06/01/weekly-python-links-roundup-612012/" rel="prev"><span class="meta-nav">?</span> Weekly Python Links Roundup (6/1/2012)</a> 
        <a href="http://www.blog.pythonlibrary.org/2012/06/04/wxpython-and-sqlalchemy-loading-random-sqlite-databases-for-viewing/" rel="next">wxPython and SQLAlchemy: Loading Random SQLite Databases for Viewing <span class="meta-nav">?</span></a> 
       </div>
       <!-- .nav-links --> 
      </nav>
      <!-- .navigation --> 
      <div id="disqus_thread"> 
       <div id="dsq-content"> 
        <ul id="dsq-comments"> 
         <li class="comment even thread-even depth-1" id="dsq-comment-24095"> 
          <div id="dsq-comment-header-24095" class="dsq-comment-header"> 
           <cite id="dsq-cite-24095"> <span id="dsq-author-user-24095">driscollis</span> </cite> 
          </div> 
          <div id="dsq-comment-body-24095" class="dsq-comment-body"> 
           <div id="dsq-comment-message-24095" class="dsq-comment-message">
            <p>&nbsp;No kidding. I cant imagine doing Yen and Russia or the stuff in South America. </p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-24096"> 
          <div id="dsq-comment-header-24096" class="dsq-comment-header"> 
           <cite id="dsq-cite-24096"> <span id="dsq-author-user-24096">Vladimir Berkutov</span> </cite> 
          </div> 
          <div id="dsq-comment-body-24096" class="dsq-comment-body"> 
           <div id="dsq-comment-message-24096" class="dsq-comment-message">
            <p>Hey, we live in a global world. Could you imagine creating a project for worldwide usage? Like paypal, for example?</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1" id="dsq-comment-24098"> 
          <div id="dsq-comment-header-24098" class="dsq-comment-header"> 
           <cite id="dsq-cite-24098"> <span id="dsq-author-user-24098">jmafc</span> </cite> 
          </div> 
          <div id="dsq-comment-body-24098" class="dsq-comment-body"> 
           <div id="dsq-comment-message-24098" class="dsq-comment-message">
            <p>The reason France and Germany are different from Britain (and the U.S.) is that the former use decimal commas (12,34 vs. 12.34). There also appear to be differences in presentation of thousand markers (using spaces instead of markers). See Wikipedia <a href="https://en.wikipedia.org/wiki/Decimal_mark" rel="nofollow">Decimal mark</a> for more.</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-24099"> 
          <div id="dsq-comment-header-24099" class="dsq-comment-header"> 
           <cite id="dsq-cite-24099"> <span id="dsq-author-user-24099">driscollis</span> </cite> 
          </div> 
          <div id="dsq-comment-body-24099" class="dsq-comment-body"> 
           <div id="dsq-comment-message-24099" class="dsq-comment-message">
            <p>&nbsp;No kidding. I would normally use Decimal. </p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1" id="dsq-comment-24101"> 
          <div id="dsq-comment-header-24101" class="dsq-comment-header"> 
           <cite id="dsq-cite-24101"> <span id="dsq-author-user-24101">jmafc</span> </cite> 
          </div> 
          <div id="dsq-comment-body-24101" class="dsq-comment-body"> 
           <div id="dsq-comment-message-24101" class="dsq-comment-message">
            <p>&nbsp;The stuff in South America?&nbsp; Whats weird about that?&nbsp; They use the same language and conventions as in Spain and Portugal. If you want weird try Arabic, first because they use different number signs (even though we call ours Arabic numerals) and IIRC letters/words (aside from being written right-to-left) are joined differently depending on context.</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-24104"> 
          <div id="dsq-comment-header-24104" class="dsq-comment-header"> 
           <cite id="dsq-cite-24104"> <span id="dsq-author-user-24104">jmafc</span> </cite> 
          </div> 
          <div id="dsq-comment-body-24104" class="dsq-comment-body"> 
           <div id="dsq-comment-message-24104" class="dsq-comment-message">
            <p>Still, there are only 12 (sovereign) countries in South America, nine speak Spanish, and four of them (like Mexico) name their currency the Peso (with three of those using centavos as the decimals). Compare that to Asia or Africa, with 48 and 56 countries respectively, and some currencies that have 3 decimals (or worse), and a profusion of different languages.</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
        </ul> 
       </div> 
      </div> 
      <script type="text/javascript">
var disqus_url = 'http://www.blog.pythonlibrary.org/2012/06/02/how-to-convert-decimal-numbers-to-words-with-python/';
var disqus_identifier = '2398 http://www.blog.pythonlibrary.org/?p=2398';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'mousevsthepython';
var disqus_title = "How to Convert Decimal Numbers to Words with Python";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=2398';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script> 
     </div>
     <!-- #content --> 
    </div>
    <!-- #primary --> 
    <div id="tertiary" class="sidebar-container" role="complementary"> 
     <div class="sidebar-inner"> 
      <div class="widget-area"> 
       <aside id="text-11" class="widget widget_text">
        <h3 class="widget-title">Python 201</h3> 
        <div class="textwidget">
         <a href="https://gum.co/py201"><img src="http://www.blog.pythonlibrary.org/wp-content/uploads/2016/04/Python201_cover20160330_sm-237x300.jpg" alt="python201_sm" width="180" height="228" class="aligncenter size-medium wp-image-3844"></a> 
         <center>
          <h3>Get an eBook copy on <a href="https://gum.co/py201">Gumroad</a> or <a href="https://leanpub.com/python201">Leanpub</a></h3> 
          <script type="text/javascript" src="https://gumroad.com/js/gumroad.js"></script>
         </center> 
         <center>
          <h3>Get the<a href="http://www.lulu.com/content/paperback-book/python-201-intermediate-python/19144035"> Paperback</a></h3>
         </center>
        </div> 
       </aside>
       <aside id="text-9" class="widget widget_text">
        <h3 class="widget-title">Python 101</h3> 
        <div class="textwidget">
         <a href="https://gum.co/bppWr"><img src="http://www.blog.pythonlibrary.org/wp-content/uploads/2014/02/mousecovertitlejpg_sm2-237x300.jpg" alt="mousecovertitlejpg_sm2" width="180" height="228" class="aligncenter size-medium wp-image-3844"></a> 
         <center>
          <h3>Order the eBook on <a href="https://gum.co/bppWr">Gumroad</a> or <a href="https://leanpub.com/python_101">Leanpub</a></h3> 
          <script type="text/javascript" src="https://gumroad.com/js/gumroad.js"></script>
         </center> 
         <center>
          <h3>Also available in<a href="http://www.lulu.com/shop/michael-driscoll/python-101/paperback/product-21657364.html" target="_blank"> Paperback!</a></h3>
         </center> 
         <h3> <a href="http://python101.pythonlibrary.org/" target="blank">Read it online</a> for free!</h3>
        </div> 
       </aside>
       <aside id="text-10" class="widget widget_text">
        <h3 class="widget-title">Python 101 + Screencast</h3> 
        <div class="textwidget">
         <a href="https://gum.co/kaKNo"><img src="http://www.blog.pythonlibrary.org/wp-content/uploads/2015/03/mousecovertitlejpg_sm_title-300x144.jpg" width="150" height="72" class="aligncenter size-medium wp-image-3844"></a> 
         <center>
          <h3><a href="https://gum.co/kaKNo" target="_blank">Get Python 101 + the Screencast</a></h3>
         </center>
        </div> 
       </aside> 
      </div>
      <!-- .widget-area --> 
     </div>
     <!-- .sidebar-inner --> 
    </div>
    <!-- #tertiary --> 
   </div>
   <!-- #main --> 
   <footer id="colophon" class="site-footer" role="contentinfo"> 
    <div id="secondary" class="sidebar-container" role="complementary"> 
     <div class="widget-area"> 
      <aside id="text-4" class="widget widget_text">
       <h3 class="widget-title">Buy Python 101</h3> 
       <div class="textwidget">
        <a href="https://gum.co/bppWr"><img src="http://www.blog.pythonlibrary.org/wp-content/uploads/2014/02/mousecovertitlejpg_sm2-237x300.jpg" alt="mousecovertitlejpg_sm2" width="180" height="228" class="aligncenter size-medium wp-image-3844"></a> 
        <h3>Order the eBook on <a href="https://gum.co/bppWr">Gumroad</a> or <a href="https://leanpub.com/python_101">Leanpub</a></h3> 
        <script type="text/javascript" src="https://gumroad.com/js/gumroad.js"></script> 
        <h3><a href="http://www.lulu.com/shop/michael-driscoll/python-101/paperback/product-21657364.html" target="_blank">or buy the Paperback!</a></h3> 
        <h3> Read it <a href="http://python101.pythonlibrary.org/" target="blank">online</a> for free!</h3>
       </div> 
      </aside>
      <aside id="text-7" class="widget widget_text">
       <h3 class="widget-title">Screencasts</h3> 
       <div class="textwidget">
        <a href="https://gum.co/bppWr"><img src="http://www.blog.pythonlibrary.org/wp-content/uploads/2015/03/mousecovertitlejpg_sm_title-300x144.jpg" width="150" height="72" class="aligncenter size-medium wp-image-3844"></a> 
        <h3><a href="https://gum.co/kaKNo" target="_blank">Get the Screencast</a></h3>
       </div> 
      </aside>
      <aside id="search-3" class="widget widget_search">
       <form role="search" method="get" class="search-form" action="http://www.blog.pythonlibrary.org/"> 
        <label> <span class="screen-reader-text">Search for:</span> <input type="search" class="search-field" placeholder="Search " value="" name="s"> </label> 
        <input type="submit" class="search-submit" value="Search"> 
       </form>
      </aside> 
      <aside id="recent-posts-3" class="widget widget_recent_entries"> 
       <h3 class="widget-title">Recent Posts</h3> 
       <ul> 
        <li> <a href="http://www.blog.pythonlibrary.org/2017/10/03/how-to-crop-a-photo-with-python/">How to Crop a Photo with Python</a> </li> 
        <li> <a href="http://www.blog.pythonlibrary.org/2017/10/02/pydev-of-the-week-tom-augspurger/">PyDev of the Week: Tom Augspurger</a> </li> 
        <li> <a href="http://www.blog.pythonlibrary.org/2017/09/29/anaconda-and-microsoft-partner-for-machine-learning/">Anaconda and Microsoft Partner for Machine Learning</a> </li> 
        <li> <a href="http://www.blog.pythonlibrary.org/2017/09/28/wxpython-all-about-accelerators/">wxPython: All About Accelerators</a> </li> 
        <li> <a href="http://www.blog.pythonlibrary.org/2017/09/25/pydev-of-the-week-mariatta-wijaya/">PyDev of the Week: Mariatta Wijaya</a> </li> 
       </ul> 
      </aside> 
      <aside id="linkcat-2" class="widget widget_links">
       <h3 class="widget-title">Links</h3> 
       <ul class="xoxo blogroll"> 
        <li><a href="http://twitter.com/#!/mousevspython" title="Twitter account">@MouseVsPython</a></li> 
        <li><a href="http://www.zazzle.com/mousevspython" title="Purchase some MouseVsPython Gear" target="_blank">Buy the Shirt!</a></li> 
        <li><a href="http://www.python.org" title="A Great Programming Language!">Python</a></li> 
        <li><a href="http://www.wxpython.org" title="My Favorite GUI Wrapper for Python">wxPython</a></li> 
       </ul> 
      </aside> 
      <aside id="archives-3" class="widget widget_archive">
       <h3 class="widget-title">Archives</h3> 
       <label class="screen-reader-text" for="archives-dropdown-3">Archives</label> 
       <select id="archives-dropdown-3" name="archive-dropdown" onchange="document.location.href=this.options[this.selectedIndex].value;"> <option value="">Select Month</option> <option value="http://www.blog.pythonlibrary.org/2017/10/"> October 2017 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2017/09/"> September 2017 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2017/08/"> August 2017 &nbsp;(7)</option> <option value="http://www.blog.pythonlibrary.org/2017/07/"> July 2017 &nbsp;(3)</option> <option value="http://www.blog.pythonlibrary.org/2017/06/"> June 2017 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2017/05/"> May 2017 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2017/04/"> April 2017 &nbsp;(7)</option> <option value="http://www.blog.pythonlibrary.org/2017/03/"> March 2017 &nbsp;(12)</option> <option value="http://www.blog.pythonlibrary.org/2017/02/"> February 2017 &nbsp;(11)</option> <option value="http://www.blog.pythonlibrary.org/2017/01/"> January 2017 &nbsp;(11)</option> <option value="http://www.blog.pythonlibrary.org/2016/12/"> December 2016 &nbsp;(6)</option> <option value="http://www.blog.pythonlibrary.org/2016/11/"> November 2016 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2016/10/"> October 2016 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2016/09/"> September 2016 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2016/08/"> August 2016 &nbsp;(11)</option> <option value="http://www.blog.pythonlibrary.org/2016/07/"> July 2016 &nbsp;(13)</option> <option value="http://www.blog.pythonlibrary.org/2016/06/"> June 2016 &nbsp;(12)</option> <option value="http://www.blog.pythonlibrary.org/2016/05/"> May 2016 &nbsp;(12)</option> <option value="http://www.blog.pythonlibrary.org/2016/04/"> April 2016 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2016/03/"> March 2016 &nbsp;(14)</option> <option value="http://www.blog.pythonlibrary.org/2016/02/"> February 2016 &nbsp;(15)</option> <option value="http://www.blog.pythonlibrary.org/2016/01/"> January 2016 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2015/12/"> December 2015 &nbsp;(6)</option> <option value="http://www.blog.pythonlibrary.org/2015/11/"> November 2015 &nbsp;(6)</option> <option value="http://www.blog.pythonlibrary.org/2015/10/"> October 2015 &nbsp;(9)</option> <option value="http://www.blog.pythonlibrary.org/2015/09/"> September 2015 &nbsp;(5)</option> <option value="http://www.blog.pythonlibrary.org/2015/08/"> August 2015 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2015/07/"> July 2015 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2015/06/"> June 2015 &nbsp;(9)</option> <option value="http://www.blog.pythonlibrary.org/2015/05/"> May 2015 &nbsp;(6)</option> <option value="http://www.blog.pythonlibrary.org/2015/04/"> April 2015 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2015/03/"> March 2015 &nbsp;(9)</option> <option value="http://www.blog.pythonlibrary.org/2015/02/"> February 2015 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2015/01/"> January 2015 &nbsp;(7)</option> <option value="http://www.blog.pythonlibrary.org/2014/12/"> December 2014 &nbsp;(9)</option> <option value="http://www.blog.pythonlibrary.org/2014/11/"> November 2014 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2014/10/"> October 2014 &nbsp;(9)</option> <option value="http://www.blog.pythonlibrary.org/2014/09/"> September 2014 &nbsp;(4)</option> <option value="http://www.blog.pythonlibrary.org/2014/08/"> August 2014 &nbsp;(4)</option> <option value="http://www.blog.pythonlibrary.org/2014/07/"> July 2014 &nbsp;(5)</option> <option value="http://www.blog.pythonlibrary.org/2014/06/"> June 2014 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2014/05/"> May 2014 &nbsp;(4)</option> <option value="http://www.blog.pythonlibrary.org/2014/04/"> April 2014 &nbsp;(4)</option> <option value="http://www.blog.pythonlibrary.org/2014/03/"> March 2014 &nbsp;(20)</option> <option value="http://www.blog.pythonlibrary.org/2014/02/"> February 2014 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2014/01/"> January 2014 &nbsp;(16)</option> <option value="http://www.blog.pythonlibrary.org/2013/12/"> December 2013 &nbsp;(7)</option> <option value="http://www.blog.pythonlibrary.org/2013/11/"> November 2013 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2013/10/"> October 2013 &nbsp;(7)</option> <option value="http://www.blog.pythonlibrary.org/2013/09/"> September 2013 &nbsp;(3)</option> <option value="http://www.blog.pythonlibrary.org/2013/08/"> August 2013 &nbsp;(5)</option> <option value="http://www.blog.pythonlibrary.org/2013/07/"> July 2013 &nbsp;(14)</option> <option value="http://www.blog.pythonlibrary.org/2013/06/"> June 2013 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2013/04/"> April 2013 &nbsp;(9)</option> <option value="http://www.blog.pythonlibrary.org/2013/03/"> March 2013 &nbsp;(3)</option> <option value="http://www.blog.pythonlibrary.org/2013/02/"> February 2013 &nbsp;(4)</option> <option value="http://www.blog.pythonlibrary.org/2013/01/"> January 2013 &nbsp;(3)</option> <option value="http://www.blog.pythonlibrary.org/2012/10/"> October 2012 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2012/09/"> September 2012 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2012/08/"> August 2012 &nbsp;(11)</option> <option value="http://www.blog.pythonlibrary.org/2012/07/"> July 2012 &nbsp;(24)</option> <option value="http://www.blog.pythonlibrary.org/2012/06/"> June 2012 &nbsp;(16)</option> <option value="http://www.blog.pythonlibrary.org/2012/05/"> May 2012 &nbsp;(14)</option> <option value="http://www.blog.pythonlibrary.org/2012/04/"> April 2012 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2012/03/"> March 2012 &nbsp;(5)</option> <option value="http://www.blog.pythonlibrary.org/2012/02/"> February 2012 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2012/01/"> January 2012 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2011/12/"> December 2011 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2011/11/"> November 2011 &nbsp;(8)</option> <option value="http://www.blog.pythonlibrary.org/2011/10/"> October 2011 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2011/09/"> September 2011 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2011/08/"> August 2011 &nbsp;(3)</option> <option value="http://www.blog.pythonlibrary.org/2011/07/"> July 2011 &nbsp;(4)</option> <option value="http://www.blog.pythonlibrary.org/2011/06/"> June 2011 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2011/04/"> April 2011 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2011/03/"> March 2011 &nbsp;(13)</option> <option value="http://www.blog.pythonlibrary.org/2011/02/"> February 2011 &nbsp;(7)</option> <option value="http://www.blog.pythonlibrary.org/2011/01/"> January 2011 &nbsp;(14)</option> <option value="http://www.blog.pythonlibrary.org/2010/12/"> December 2010 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2010/11/"> November 2010 &nbsp;(4)</option> <option value="http://www.blog.pythonlibrary.org/2010/10/"> October 2010 &nbsp;(11)</option> <option value="http://www.blog.pythonlibrary.org/2010/09/"> September 2010 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2010/08/"> August 2010 &nbsp;(7)</option> <option value="http://www.blog.pythonlibrary.org/2010/07/"> July 2010 &nbsp;(7)</option> <option value="http://www.blog.pythonlibrary.org/2010/06/"> June 2010 &nbsp;(7)</option> <option value="http://www.blog.pythonlibrary.org/2010/05/"> May 2010 &nbsp;(9)</option> <option value="http://www.blog.pythonlibrary.org/2010/04/"> April 2010 &nbsp;(6)</option> <option value="http://www.blog.pythonlibrary.org/2010/03/"> March 2010 &nbsp;(10)</option> <option value="http://www.blog.pythonlibrary.org/2010/02/"> February 2010 &nbsp;(23)</option> <option value="http://www.blog.pythonlibrary.org/2010/01/"> January 2010 &nbsp;(6)</option> <option value="http://www.blog.pythonlibrary.org/2009/12/"> December 2009 &nbsp;(4)</option> <option value="http://www.blog.pythonlibrary.org/2009/11/"> November 2009 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2009/10/"> October 2009 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2009/09/"> September 2009 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2009/08/"> August 2009 &nbsp;(3)</option> <option value="http://www.blog.pythonlibrary.org/2009/07/"> July 2009 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2009/06/"> June 2009 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2009/05/"> May 2009 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2009/04/"> April 2009 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2009/03/"> March 2009 &nbsp;(14)</option> <option value="http://www.blog.pythonlibrary.org/2009/02/"> February 2009 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2009/01/"> January 2009 &nbsp;(3)</option> <option value="http://www.blog.pythonlibrary.org/2008/09/"> September 2008 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2008/08/"> August 2008 &nbsp;(3)</option> <option value="http://www.blog.pythonlibrary.org/2008/07/"> July 2008 &nbsp;(1)</option> <option value="http://www.blog.pythonlibrary.org/2008/06/"> June 2008 &nbsp;(2)</option> <option value="http://www.blog.pythonlibrary.org/2008/05/"> May 2008 &nbsp;(9)</option> <option value="http://www.blog.pythonlibrary.org/2008/04/"> April 2008 &nbsp;(4)</option> <option value="http://www.blog.pythonlibrary.org/2008/03/"> March 2008 &nbsp;(7)</option> </select> 
      </aside>
      <aside id="recent-comments-3" class="widget widget_recent_comments">
       <h3 class="widget-title">Recent Comments</h3>
       <ul id="recentcomments">
        <li class="recentcomments"><span class="comment-author-link"><a href="http://codango.com/wxpython-all-about-accelerators-the-mouse-vs-the-python/" rel="external nofollow" class="url">wxPython: All About Accelerators | The Mouse Vs. The Python - Codango.Com, Codango &amp; Codango Labs</a></span> on <a href="http://www.blog.pythonlibrary.org/2017/09/28/wxpython-all-about-accelerators/#comment-217606">wxPython: All About Accelerators</a></li>
        <li class="recentcomments"><span class="comment-author-link"><a href="http://codango.com/anaconda-and-microsoft-partner-for-machine-learning/" rel="external nofollow" class="url">Anaconda and Microsoft Partner for Machine Learning - Codango.Com, Codango &amp; Codango Labs</a></span> on <a href="http://www.blog.pythonlibrary.org/2017/09/29/anaconda-and-microsoft-partner-for-machine-learning/#comment-217605">Anaconda and Microsoft Partner for Machine Learning</a></li>
        <li class="recentcomments"><span class="comment-author-link">Dewayne Gunter</span> on <a href="http://www.blog.pythonlibrary.org/2016/07/26/python-3-an-intro-to-asyncio/#comment-217603">Python 3  An Intro to asyncio</a></li>
        <li class="recentcomments"><span class="comment-author-link">Russel</span> on <a href="http://www.blog.pythonlibrary.org/2017/09/18/pydev-of-the-week-daniel-roseman/#comment-217600">PyDev of the Week: Daniel Roseman</a></li>
        <li class="recentcomments"><span class="comment-author-link"><a href="http://www.blog.pythonlibrary.org/" rel="external nofollow" class="url">Mike Driscoll</a></span> on <a href="http://www.blog.pythonlibrary.org/2017/09/18/pydev-of-the-week-daniel-roseman/#comment-217599">PyDev of the Week: Daniel Roseman</a></li>
       </ul>
      </aside>
      <aside id="tag_cloud-3" class="widget widget_tag_cloud">
       <h3 class="widget-title">Tags</h3>
       <div class="tagcloud">
        <a href="http://www.blog.pythonlibrary.org/tag/binaries/" class="tag-cloud-link tag-link-65 tag-link-position-1" style="font-size: 9.17209302326pt;" aria-label="binaries (5 items)">binaries</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/book-preview/" class="tag-cloud-link tag-link-45 tag-link-position-2" style="font-size: 8pt;" aria-label="Book Preview (3 items)">Book Preview</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/book-review/" class="tag-cloud-link tag-link-19 tag-link-position-3" style="font-size: 14.2511627907pt;" aria-label="Book Review (35 items)">Book Review</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/books/" class="tag-cloud-link tag-link-188 tag-link-position-4" style="font-size: 15.0976744186pt;" aria-label="Books (48 items)">Books</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/concurrency/" class="tag-cloud-link tag-link-32 tag-link-position-5" style="font-size: 9.62790697674pt;" aria-label="concurrency (6 items)">concurrency</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/configobj/" class="tag-cloud-link tag-link-26 tag-link-position-6" style="font-size: 8pt;" aria-label="ConfigObj (3 items)">ConfigObj</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/cross-platform/" class="tag-cloud-link tag-link-180 tag-link-position-7" style="font-size: 8.6511627907pt;" aria-label="Cross-Platform (4 items)">Cross-Platform</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/distribution/" class="tag-cloud-link tag-link-14 tag-link-position-8" style="font-size: 9.17209302326pt;" aria-label="Distribution (5 items)">Distribution</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/django/" class="tag-cloud-link tag-link-18 tag-link-position-9" style="font-size: 9.95348837209pt;" aria-label="Django (7 items)">Django</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/education/" class="tag-cloud-link tag-link-189 tag-link-position-10" style="font-size: 8.6511627907pt;" aria-label="Education (4 items)">Education</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/gui/" class="tag-cloud-link tag-link-48 tag-link-position-11" style="font-size: 9.17209302326pt;" aria-label="GUI (5 items)">GUI</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/ironpython/" class="tag-cloud-link tag-link-17 tag-link-position-12" style="font-size: 8pt;" aria-label="IronPython (3 items)">IronPython</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/kivy/" class="tag-cloud-link tag-link-163 tag-link-position-13" style="font-size: 9.62790697674pt;" aria-label="kivy (6 items)">kivy</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/packaging/" class="tag-cloud-link tag-link-183 tag-link-position-14" style="font-size: 9.95348837209pt;" aria-label="Packaging (7 items)">Packaging</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/pycon/" class="tag-cloud-link tag-link-176 tag-link-position-15" style="font-size: 13.7953488372pt;" aria-label="PyCon (30 items)">PyCon</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/pycon-2010/" class="tag-cloud-link tag-link-31 tag-link-position-16" style="font-size: 11.5813953488pt;" aria-label="PyCon 2010 (13 items)">PyCon 2010</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/pycon-2011/" class="tag-cloud-link tag-link-85 tag-link-position-17" style="font-size: 12.9488372093pt;" aria-label="PyCon 2011 (22 items)">PyCon 2011</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/pycon-2012/" class="tag-cloud-link tag-link-153 tag-link-position-18" style="font-size: 8pt;" aria-label="PyCon 2012 (3 items)">PyCon 2012</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/pyowa/" class="tag-cloud-link tag-link-185 tag-link-position-19" style="font-size: 10.8651162791pt;" aria-label="Pyowa (10 items)">Pyowa</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/pypdf/" class="tag-cloud-link tag-link-125 tag-link-position-20" style="font-size: 8pt;" aria-label="PyPDF (3 items)">PyPDF</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/pyqt/" class="tag-cloud-link tag-link-143 tag-link-position-21" style="font-size: 9.17209302326pt;" aria-label="PyQT (5 items)">PyQT</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/pyside/" class="tag-cloud-link tag-link-162 tag-link-position-22" style="font-size: 8pt;" aria-label="PySide (3 items)">PySide</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/python/" class="tag-cloud-link tag-link-177 tag-link-position-23" style="font-size: 22pt;" aria-label="Python (561 items)">Python</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/python-3/" class="tag-cloud-link tag-link-141 tag-link-position-24" style="font-size: 11.9069767442pt;" aria-label="Python 3 (15 items)">Python 3</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/python-101/" class="tag-cloud-link tag-link-76 tag-link-position-25" style="font-size: 14.7720930233pt;" aria-label="Python 101 (43 items)">Python 101</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/python-201/" class="tag-cloud-link tag-link-191 tag-link-position-26" style="font-size: 8.6511627907pt;" aria-label="Python 201 (4 items)">Python 201</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/python-advocacy/" class="tag-cloud-link tag-link-152 tag-link-position-27" style="font-size: 9.95348837209pt;" aria-label="Python Advocacy (7 items)">Python Advocacy</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/python-pdf-series/" class="tag-cloud-link tag-link-38 tag-link-position-28" style="font-size: 11.1255813953pt;" aria-label="Python PDF Series (11 items)">Python PDF Series</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/python-web-frameworks/" class="tag-cloud-link tag-link-126 tag-link-position-29" style="font-size: 9.62790697674pt;" aria-label="Python Web Frameworks (6 items)">Python Web Frameworks</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/pywin32/" class="tag-cloud-link tag-link-181 tag-link-position-30" style="font-size: 11.3209302326pt;" aria-label="PyWin32 (12 items)">PyWin32</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/reportlab/" class="tag-cloud-link tag-link-36 tag-link-position-31" style="font-size: 11.5813953488pt;" aria-label="Reportlab (13 items)">Reportlab</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/sizer/" class="tag-cloud-link tag-link-29 tag-link-position-32" style="font-size: 8.6511627907pt;" aria-label="sizer (4 items)">sizer</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/sql/" class="tag-cloud-link tag-link-115 tag-link-position-33" style="font-size: 9.62790697674pt;" aria-label="SQL (6 items)">SQL</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/sqlalchemy/" class="tag-cloud-link tag-link-186 tag-link-position-34" style="font-size: 11.1255813953pt;" aria-label="SqlAlchemy (11 items)">SqlAlchemy</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/sqlite/" class="tag-cloud-link tag-link-80 tag-link-position-35" style="font-size: 8.6511627907pt;" aria-label="sqlite (4 items)">sqlite</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/system-admin/" class="tag-cloud-link tag-link-30 tag-link-position-36" style="font-size: 11.776744186pt;" aria-label="System Admin (14 items)">System Admin</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/testing/" class="tag-cloud-link tag-link-187 tag-link-position-37" style="font-size: 10.6046511628pt;" aria-label="Testing (9 items)">Testing</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/threading/" class="tag-cloud-link tag-link-34 tag-link-position-38" style="font-size: 8.6511627907pt;" aria-label="threading (4 items)">threading</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/threads/" class="tag-cloud-link tag-link-47 tag-link-position-39" style="font-size: 8pt;" aria-label="Threads (3 items)">Threads</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/tkinter/" class="tag-cloud-link tag-link-160 tag-link-position-40" style="font-size: 8pt;" aria-label="Tkinter (3 items)">Tkinter</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/turbogears/" class="tag-cloud-link tag-link-184 tag-link-position-41" style="font-size: 9.17209302326pt;" aria-label="TurboGears (5 items)">TurboGears</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/windows/" class="tag-cloud-link tag-link-178 tag-link-position-42" style="font-size: 12.688372093pt;" aria-label="Windows (20 items)">Windows</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/wxpython/" class="tag-cloud-link tag-link-182 tag-link-position-43" style="font-size: 17.8325581395pt;" aria-label="wxPython (129 items)">wxPython</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/xml/" class="tag-cloud-link tag-link-111 tag-link-position-44" style="font-size: 8pt;" aria-label="XML (3 items)">XML</a> 
        <a href="http://www.blog.pythonlibrary.org/tag/xml-parsing-series/" class="tag-cloud-link tag-link-110 tag-link-position-45" style="font-size: 9.62790697674pt;" aria-label="XML Parsing Series (6 items)">XML Parsing Series</a>
       </div> 
      </aside>
      <aside id="meta-3" class="widget widget_meta">
       <h3 class="widget-title">Members</h3> 
       <ul> 
        <li><a href="http://www.blog.pythonlibrary.org/wp-login.php">Log in</a></li> 
        <li><a href="http://www.blog.pythonlibrary.org/feed/">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li> 
        <li><a href="http://www.blog.pythonlibrary.org/comments/feed/">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li> 
        <li><a href="https://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li> 
       </ul> 
      </aside> 
     </div>
     <!-- .widget-area --> 
    </div>
    <!-- #secondary --> 
    <div class="site-info"> 
     <a href="https://wordpress.org/">Proudly powered by WordPress</a> 
    </div>
    <!-- .site-info --> 
   </footer>
   <!-- #colophon --> 
  </div>
  <!-- #page --> 
  <div class="a2a_kit a2a_kit_size_32 a2a_floating_style a2a_vertical_style" style="right:0px;top:100px;background-color:transparent;">
   <a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2012%2F06%2F02%2Fhow-to-convert-decimal-numbers-to-words-with-python%2F&amp;linkname=How%20to%20Convert%20Decimal%20Numbers%20to%20Words%20with%20Python%20%20The%20Mouse%20Vs.%20The%20Python" title="Facebook" rel="nofollow noopener" target="_blank"></a>
   <a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2012%2F06%2F02%2Fhow-to-convert-decimal-numbers-to-words-with-python%2F&amp;linkname=How%20to%20Convert%20Decimal%20Numbers%20to%20Words%20with%20Python%20%20The%20Mouse%20Vs.%20The%20Python" title="Twitter" rel="nofollow noopener" target="_blank"></a>
   <a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2012%2F06%2F02%2Fhow-to-convert-decimal-numbers-to-words-with-python%2F&amp;linkname=How%20to%20Convert%20Decimal%20Numbers%20to%20Words%20with%20Python%20%20The%20Mouse%20Vs.%20The%20Python" title="Google+" rel="nofollow noopener" target="_blank"></a>
   <a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share"></a>
  </div> 
  <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'mousevsthepython';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1 && nodes[i].parentNode.tagName == 'A') {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script');
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script> 
  <script type="text/javascript">

          var pfHeaderImgUrl = '';
          var pfHeaderTagline = '';
          var pfdisableClickToDel = '0';
          var pfImagesSize = 'full-size';
          var pfImageDisplayStyle = 'right';
          var pfDisableEmail = '0';
          var pfDisablePDF = '0';
          var pfDisablePrint = '0';
          var pfCustomCSS = '';
          var pfPlatform = 'Wordpress';
      (function() {
            var e = document.createElement('script'); e.type="text/javascript";
            e.src = 'https://cdn.printfriendly.com/printfriendly.js';
            document.getElementsByTagName('head')[0].appendChild(e);
        })();
      </script> 
  <script type="text/javascript" src="http://www.blog.pythonlibrary.org/wp-includes/js/imagesloaded.min.js?ver=3.2.0"></script> 
  <script type="text/javascript" src="http://www.blog.pythonlibrary.org/wp-includes/js/masonry.min.js?ver=3.3.2"></script> 
  <script type="text/javascript" src="http://www.blog.pythonlibrary.org/wp-includes/js/jquery/jquery.masonry.min.js?ver=3.1.2b"></script> 
  <script type="text/javascript" src="http://www.blog.pythonlibrary.org/wp-content/themes/twentythirteen/js/functions.js?ver=20160717"></script> 
  <script type="text/javascript" src="http://www.blog.pythonlibrary.org/wp-includes/js/wp-embed.min.js?ver=4.8.2"></script>   
  <!-- Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

 Served from: blog.pythonlibrary.org @ 2017-10-03 11:54:39 by W3 Total Cache -->
 </body>
</html>