<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
 <head> 
  <title>Java Twilio: Send SMS using Basic Authentication</title> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
  <link href="/css/detail.css" rel="stylesheet" type="text/css"> 
  <link href="/css/download.css" rel="stylesheet" type="text/css"> 
  <link href="/css/table.css" rel="stylesheet" type="text/css"> 
 </head> 
 <body bgcolor="#FFFFFF"> 
  <table width="100%" cellspacing="0" cellpadding="0" background="images/bg.GIF"> 
   <tbody>
    <tr> 
     <td><a href="default.asp"><img src="images/banner.GIF" width="477" height="66" border="0" alt="Chilkat Examples"></a></td> 
    </tr> 
   </tbody>
  </table> 
  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> <a href="http://www.chilkatsoft.com">Chilkat</a> ? <a href="http://www.example-code.com/">HOME</a> ? <a href="/android/default.asp">Android™</a> ? <a href="/asp/default.asp">Classic ASP</a> ? <a href="/C/default.asp">C</a> ? <a href="/cpp/default.asp">C++</a> ? <a href="/csharp/default.asp">C#</a> ? <a href="/mono/default.asp">Mono C#</a> ? <a href="/dotnet-core/default.asp">.NET Core C#</a> ? <a href="/csharp_winrt/default.asp">C# UWP/WinRT</a> ? <a href="/dataflex/default.asp">DataFlex</a> ? <a href="/delphiAx/default.asp">Delphi ActiveX</a> ? <a href="/delphiDll/default.asp">Delphi DLL</a> ? <a href="/foxpro/default.asp">Visual FoxPro</a> ? <a href="/java/default.asp">Java</a> ? <a href="/lianja/default.asp">Lianja</a> ? <a href="/mfc/default.asp">MFC</a> ? <a href="/objc/default.asp">Objective-C</a> ? <a href="/perl/default.asp">Perl</a> ? <a href="/phpAx/default.asp">PHP ActiveX</a> ? <a href="/phpExt/default.asp">PHP Extension</a> ? <a href="/powerbuilder/default.asp">PowerBuilder</a> ? <a href="/powershell/default.asp">PowerShell</a> ? <a href="/purebasic/default.asp">PureBasic</a> ? <a href="/python/default.asp">Python</a> ? <a href="/ruby/default.asp">Ruby</a> ? <a href="/sql/default.asp">SQL Server</a> ? <a href="/swift/default.asp">Swift</a> ? <a href="/tcl/default.asp">Tcl</a> ? <a href="/unicodeC/default.asp">Unicode C</a> ? <a href="/unicodeCpp/default.asp">Unicode C++</a> ? <a href="/vb6/default.asp">Visual Basic 6.0</a> ? <a href="/vbnet/default.asp">VB.NET</a> ? <a href="/vbnet_winrt/default.asp">VB.NET UWP/WinRT</a> ? <a href="/vbscript/default.asp">VBScript</a> ? <a href="/xojo/default.asp">Xojo Plugin</a> ? <a href="/nodejs/default.asp">Node.js</a> ? <a href="/excel/default.asp">Excel</a> </font> </p> 
  <table width="100%" cellspacing="0" cellpadding="3"> 
   <tbody>
    <tr> 
     <td width="160" valign="top"> 
      <table width="320" border="1" cellspacing="0" cellpadding="5" bgcolor="#FFFFFF" bordercolor="#FF9707" align="left"> 
       <tbody>
        <tr valign="top" bgcolor="#FF9707"> 
         <td colspan="2"> 
          <div align="center">
           <font face="Verdana" size="2" color="#FFFFFF"><b>Java Examples</b></font>
          </div> </td> 
        </tr> 
        <tr valign="top"> 
         <td> <p><font face="Verdana" color="#333333" size="2"><b> <a href="upload label=.asp"></a><br> <a href="asn.asp">ASN.1</a><br> <a href="s3.asp">Amazon S3</a><br> <a href="amazonS3.asp">Amazon S3 (new)</a><br> <a href="ses.asp">Amazon SES</a><br> <a href="sns.asp">Amazon SNS</a><br> <a href="sqs.asp">Amazon SQS</a><br> <a href="async.asp">Async</a><br> <a href="azureStorage.asp">Azure Cloud Storage</a><br> <a href="azureServiceBus.asp">Azure Service Bus</a><br> <a href="bounce.asp">Bounced Email</a><br> <a href="csr.asp">CSR</a><br> <a href="csv.asp">CSV</a><br> <a href="cert.asp">Certificates</a><br> <a href="compression.asp">Compression</a><br> <a href="dkim.asp">DKIM / DomainKey</a><br> <a href="dsa.asp">DSA</a><br> <a href="dh.asp">Diffie-Hellman</a><br> <a href="sig.asp">Digital Signatures</a><br> <a href="dropbox.asp">Dropbox</a><br> <a href="ecc.asp">ECC</a><br> <a href="emailObj.asp">Email Object</a><br> <a href="encryption.asp">Encryption</a><br> <a href="ftp.asp">FTP</a><br> <a href="facebook.asp">Facebook</a><br> <a href="fireBase.asp">Firebase</a><br> <a href="geoop.asp">GeoOp</a><br> <a href="googleapi.asp">Google APIs</a><br> <a href="googleCalendar.asp">Google Calendar</a><br> <a href="gCloudStorage.asp">Google Cloud Storage</a><br> <a href="googleDrive.asp">Google Drive</a><br> <a href="gzip.asp">Gzip</a><br> <a href="convert.asp">HTML-to-XML/Text</a><br> <a href="http.asp">HTTP</a><br> <a href="httpMisc.asp">HTTP Misc</a><br> <a href="imap.asp">IMAP</a><br> <a href="json.asp">JSON</a><br> <a href="jwe.asp">JSON Web Encryption (JWE)</a><br> <a href="jws.asp">JSON Web Signatures (JWS)</a><br> </b></font></p></td>
         <td><p><font face="Verdana" color="#333333" size="2"><b><a href="jwt.asp">JSON Web Token (JWT)</a><br> <a href="jks.asp">Java KeyStore (JKS)</a><br> <a href="mht.asp">MHT / HTML Email</a><br> <a href="mime.asp">MIME</a><br> <a href="microsoftGraph.asp">Microsoft Graph</a><br> <a href="ntlm.asp">NTLM</a><br> <a href="oauth1.asp">OAuth1</a><br> <a href="oauth2.asp">OAuth2</a><br> <a href="onedrive.asp">OneDrive</a><br> <a href="openssl.asp">OpenSSL</a><br> <a href="outlook.asp">Outlook</a><br> <a href="pem.asp">PEM</a><br> <a href="pfx.asp">PFX/P12</a><br> <a href="pop3.asp">POP3</a><br> <a href="prng.asp">PRNG</a><br> <a href="paypal.asp">PayPal</a><br> <a href="peoplevox.asp">Peoplevox</a><br> <a href="quickbooks.asp">QuickBooks</a><br> <a href="rest.asp">REST</a><br> <a href="rsa.asp">RSA Encryption</a><br> <a href="scp.asp">SCP</a><br> <a href="sftp.asp">SFTP</a><br> <a href="smtp.asp">SMTP</a><br> <a href="ssh.asp">SSH</a><br> <a href="sshkey.asp">SSH Key</a><br> <a href="sshTunnel.asp">SSH Tunnel</a><br> <a href="sharepoint.asp">SharePoint</a><br> <a href="socket.asp">Socket/SSL/TLS</a><br> <a href="spider.asp">Spider</a><br> <a href="stream.asp">Stream</a><br> <a href="stripe.asp">Stripe</a><br> <a href="tar.asp">Tar Archive</a><br> <a href="twitter.asp">Twitter</a><br> <a href="voicebase.asp">VoiceBase</a><br> <a href="walmart.asp">Walmart</a><br> <a href="xml.asp">XML</a><br> <a href="xmldsig.asp">XML Digital Signatures</a><br> <a href="xmp.asp">XMP</a><br> <a href="xero.asp">Xero</a><br> <a href="zip.asp">Zip</a><br> <a href="curl.asp">curl</a><br> <a href="ebay.asp">eBay</a><br> </b></font></p> <p></p> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> </td> 
        </tr> 
       </tbody>
      </table> </td> 
     <td valign="top"> <h1><b>(Java) Twilio: Send SMS using Basic Authentication</b></h1> <p>Demonstrates how to use Twilio to send an SMS message using Basic authentication.</p> 
      <blockquote>
       <table class="reference" width="500">
        <tbody>
         <tr>
          <td valign="top" colspan="3"> <h2 id="subhdr">Chilkat Java Downloads</h2> <p class="button"><a href="http://www.chilkatsoft.com/java.asp">Java Libs for Windows, Linux, MAC OS X, Solaris,<br>FreeBSD, ARM Embedded Linux, and PowerLinux</a></p> <p class="button"><a href="http://www.chilkatsoft.com/chilkatAndroid.asp">Java Libs for Android</a></p> </td>
         </tr> 
        </tbody>
       </table> 
      </blockquote> <pre id="exCode"><span id="keyw">import</span> com.chilkatsoft.*;

<span id="keyw">public class</span> ChilkatExample {

  <span id="keyw">static</span> {
    <span id="keyw">try</span> {
        System.loadLibrary(<span id="lit">"chilkat"</span>);
    } <span id="keyw">catch</span> (UnsatisfiedLinkError e) {
      System.err.println(<span id="lit">"Native code library failed to load.\n"</span> + e);
      System.exit(1);
    }
  }

  <span id="keyw">public static void</span> main(String argv[])
  {
    <span id="cmt">//  Demonstrates how to use Basic Authentication in a REST API call for Twilio.</span>
    <span id="cmt">//  Sends an SMS text message..</span>

    <span id="cmt">//  This example requires the Chilkat API to have been previously unlocked.</span>
    <span id="cmt">//  See <a href="global_unlock.asp">Global Unlock Sample</a> for sample code.</span>

    <span id="dtyp"><a target="_top" href="http://www.chilkatsoft.com/refdoc/javaCkRestRef.html">CkRest</a></span> rest = <span id="keyw">new</span> <a target="_top" href="http://www.chilkatsoft.com/refdoc/javaCkRestRef.html">CkRest</a>();

    <span id="cmt">//  Use Basic Authentication.</span>
    <span id="cmt">//  Your Twilio Account SID is the username.</span>
    <span id="cmt">//  Your Twilio Auth Token is the password.</span>
    <span id="keyw">boolean</span> success = rest.<span id="dtyp">SetAuthBasic</span>(<span id="lit">"TWILIO_ACCOUNT_SID"</span>,<span id="lit">"TWILIO_AUTH_TOKEN"</span>);

    <span id="cmt">//  Make the initial connection (without sending a request yet) to Twilio.</span>
    <span id="keyw">boolean</span> bTls = <span id="lit">true</span>;
    <span id="keyw">int</span> port = <span id="lit">443</span>;
    <span id="keyw">boolean</span> bAutoReconnect = <span id="lit">true</span>;
    success = rest.<span id="dtyp">Connect</span>(<span id="lit">"api.twilio.com"</span>,port,bTls,bAutoReconnect);
    <span id="keyw">if</span> (success != <span id="lit">true</span>) {
        System.out.println(rest.<span id="dtyp">lastErrorText</span>());
        <span id="keyw">return</span>;
    }

    <span id="cmt">//  Provide the information for the SMS text message:</span>
    success = rest.<span id="dtyp">AddQueryParam</span>(<span id="lit">"To"</span>,<span id="lit">"+16518675309"</span>);
    success = rest.<span id="dtyp">AddQueryParam</span>(<span id="lit">"From"</span>,<span id="lit">"+15005550006"</span>);
    success = rest.<span id="dtyp">AddQueryParam</span>(<span id="lit">"Body"</span>,<span id="lit">"Hey Jenny! Good luck on the bar exam!"</span>);
    success = rest.<span id="dtyp">AddQueryParam</span>(<span id="lit">"MediaUrl"</span>,<span id="lit">"http://farm2.static.flickr.com/1075/1404618563_3ed9a44a3a.jpg"</span>);

    <span id="cmt">//  Send the SMS text message.</span>
    <span id="cmt">//  Your Twilio Account SID is part of the URI path:</span>
    <span id="keyw">String</span> responseJson = rest.<span id="dtyp">fullRequestFormUrlEncoded</span>(<span id="lit">"POST"</span>,<span id="lit">"/2010-04-01/Accounts/TWILIO_ACCOUNT_SID/Messages.json"</span>);
    <span id="keyw">if</span> (rest.<span id="dtyp">get_LastMethodSuccess</span>() != <span id="lit">true</span>) {
        System.out.println(rest.<span id="dtyp">lastErrorText</span>());
        <span id="keyw">return</span>;
    }

    <span id="cmt">//  When successful, the response status code will equal 201.</span>
    <span id="keyw">if</span> (rest.<span id="dtyp">get_ResponseStatusCode</span>() != <span id="lit">201</span>) {
        <span id="cmt">//  Examine the request/response to see what happened.</span>
        System.out.println(<span id="lit">"response status code = "</span> + rest.<span id="dtyp">get_ResponseStatusCode</span>());
        System.out.println(<span id="lit">"response status text = "</span> + rest.<span id="dtyp">responseStatusText</span>());
        System.out.println(<span id="lit">"response header: "</span> + rest.<span id="dtyp">responseHeader</span>());
        System.out.println(<span id="lit">"response body (if any): "</span> + responseJson);
        System.out.println(<span id="lit">"---"</span>);
        System.out.println(<span id="lit">"LastRequestStartLine: "</span> + rest.<span id="dtyp">lastRequestStartLine</span>());
        System.out.println(<span id="lit">"LastRequestHeader: "</span> + rest.<span id="dtyp">lastRequestHeader</span>());
        <span id="keyw">return</span>;
    }

    <span id="cmt">//  The response is JSON.  We'll show how to get a few bits of information from it.</span>
    <span id="cmt">//  A full sample JSON response is shown below..</span>

    <span id="dtyp"><a target="_top" href="http://www.chilkatsoft.com/refdoc/javaCkJsonObjectRef.html">CkJsonObject</a></span> json = <span id="keyw">new</span> <a target="_top" href="http://www.chilkatsoft.com/refdoc/javaCkJsonObjectRef.html">CkJsonObject</a>();
    json.<span id="dtyp">put_EmitCompact</span>(<span id="lit">false</span>);
    success = json.<span id="dtyp">Load</span>(responseJson);

    <span id="cmt">//  First show the entire JSON.</span>
    System.out.println(json.<span id="dtyp">emit</span>());

    <span id="cmt">//  Now get some individual pieces of information:</span>
    System.out.println(<span id="lit">"sid: "</span> + json.<span id="dtyp">stringOf</span>(<span id="lit">"sid"</span>));
    System.out.println(<span id="lit">"body: "</span> + json.<span id="dtyp">stringOf</span>(<span id="lit">"body"</span>));
    System.out.println(<span id="lit">"media: "</span> + json.<span id="dtyp">stringOf</span>(<span id="lit">"subresource_uris.media"</span>));

    System.out.println(<span id="lit">"Success."</span>);

    <span id="cmt">//  Sample JSON response:</span>
    <span id="cmt"></span>
/*
{
  "sid": "MM97ecfd43e9f24e99b0c2c6ee016949e3",
  "date_created": null,
  "date_updated": null,
  "date_sent": null,
  "account_sid": "112e1111e0151133d11112101111d1111",
  "to": "+16518675309",
  "from": "+15005550006",
  "messaging_service_sid": null,
  "body": "Sent from your Twilio trial account - Hey Jenny! Good luck on the bar exam!",
  "status": "queued",
  "num_segments": "1",
  "num_media": "0",
  "direction": "outbound-api",
  "api_version": "2010-04-01",
  "price": null,
  "price_unit": "USD",
  "error_code": null,
  "error_message": null,
  "uri": "/2010-04-01/Accounts/AC2e9b6bc0f51133df24926f07341d3824/Messages/MM97ecfd43e9f24e99b0c2c6ee016949e3.json",
  "subresource_uris": {
    "media": "/2010-04-01/Accounts/AC2e9b6bc0f51133df24926f07341d3824/Messages/MM97ecfd43e9f24e99b0c2c6ee016949e3/Media.json"
  }
}
*/

  }
}

</pre> </td> 
    </tr> 
   </tbody>
  </table> 
  <table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#FF9707"> 
   <tbody>
    <tr> 
     <td>&nbsp; </td> 
    </tr> 
   </tbody>
  </table> 
  <p align="center"><font face="Verdana" size="1" color="#999999">© 2000-2016 Chilkat Software, Inc. All Rights Reserved.</font></p>   
 </body>
</html>