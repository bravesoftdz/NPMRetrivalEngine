<!doctype html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns# fb: https://www.facebook.com/2008/fbml" lang="en-US" class="no-js">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <!-- BEGIN Metadata added by the Add-Meta-Tags WordPress plugin --> 
  <meta name="description" content="There'll be times when you'll want to allow the users to send SMS messages directly from your app to other numbers (destination). The Android SDK does support to capability of sending SMS/MMS messages in two ways (from your app): Invoke an SMS client app via Implicit Intents."> 
  <meta name="keywords" content="mobile development, android, mobile, sms"> 
  <meta property="og:site_name" content="Code Theory"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Android Send and Receive SMS (Text and Data/Binary) Messages with SmsManager and Intents"> 
  <meta property="og:url" content="http://codetheory.in/android-sms/"> 
  <meta property="og:description" content="There'll be times when you'll want to allow the users to send SMS messages directly from your app to other numbers (destination). The Android SDK does support to capability of sending SMS/MMS messages in two ways (from your app): Invoke an SMS client app via Implicit Intents."> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:updated_time" content="2015-02-06T17:18:29+00:00"> 
  <meta property="article:published_time" content="2015-02-06T15:51:20+00:00"> 
  <meta property="article:modified_time" content="2015-02-06T17:18:29+00:00"> 
  <meta property="article:author" content="http://codetheory.in/author/admin/"> 
  <meta property="article:publisher" content="http://codetheory.in/"> 
  <meta property="article:section" content="Mobile Development"> 
  <meta property="article:tag" content="mobile development"> 
  <meta property="article:tag" content="android"> 
  <meta property="article:tag" content="mobile"> 
  <meta property="article:tag" content="sms"> 
  <!-- END Metadata added by the Add-Meta-Tags WordPress plugin --> 
  <script>(function(html){html.className = html.className.replace(/\bno-js\b/,'js')})(document.documentElement);</script> 
  <title>Android Send and Receive SMS (Text and Data/Binary) Messages with SmsManager and Intents – Code Theory</title> 
  <link rel="alternate" type="application/rss+xml" title="Code Theory » Feed" href="http://codetheory.in/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Code Theory » Comments Feed" href="http://codetheory.in/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Code Theory » Android Send and Receive SMS (Text and Data/Binary) Messages with SmsManager and Intents Comments Feed" href="http://codetheory.in/android-sms/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/codetheory.in\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.5.3"}};
			!function(a,b,c){function d(a){var c,d,e,f=b.createElement("canvas"),g=f.getContext&&f.getContext("2d"),h=String.fromCharCode;if(!g||!g.fillText)return!1;switch(g.textBaseline="top",g.font="600 32px Arial",a){case"flag":return g.fillText(h(55356,56806,55356,56826),0,0),f.toDataURL().length>3e3;case"diversity":return g.fillText(h(55356,57221),0,0),c=g.getImageData(16,16,1,1).data,d=c[0]+","+c[1]+","+c[2]+","+c[3],g.fillText(h(55356,57221,55356,57343),0,0),c=g.getImageData(16,16,1,1).data,e=c[0]+","+c[1]+","+c[2]+","+c[3],d!==e;case"simple":return g.fillText(h(55357,56835),0,0),0!==g.getImageData(16,16,1,1).data[0];case"unicode8":return g.fillText(h(55356,57135),0,0),0!==g.getImageData(16,16,1,1).data[0]}return!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i;for(i=Array("simple","flag","unicode8","diversity"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="contact-form-7-css" href="http://codetheory.in/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=4.4.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="topbar-css" href="http://codetheory.in/wp-content/plugins/topbar-pro/css/topbar_style.css?ver=4.5.3" type="text/css" media="all"> 
  <link rel="stylesheet" id="wp-polls-css" href="http://codetheory.in/wp-content/plugins/wp-polls/polls-css.css?ver=2.73.3" type="text/css" media="all"> 
  <style id="wp-polls-inline-css" type="text/css">
.wp-polls .pollbar {
	margin: 1px;
	font-size: 6px;
	line-height: 8px;
	height: 8px;
	background-image: url('http://codetheory.in/wp-content/plugins/wp-polls/images/default/pollbg.gif');
	border: 1px solid #c8c8c8;
}

</style> 
  <link rel="stylesheet" id="twentysixteen-fonts-css" href="https://fonts.googleapis.com/css?family=Merriweather%3A400%2C700%2C900%2C400italic%2C700italic%2C900italic%7CMontserrat%3A400%2C700%7CInconsolata%3A400&amp;subset=latin%2Clatin-ext" type="text/css" media="all"> 
  <link rel="stylesheet" id="genericons-css" href="http://codetheory.in/wp-content/themes/twentysixteen/genericons/genericons.css?ver=3.4.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="twentysixteen-style-css" href="http://codetheory.in/wp-content/themes/twentysixteen/style.css?ver=4.5.3" type="text/css" media="all"> 
  <!--[if lt IE 10]>
<link rel='stylesheet' id='twentysixteen-ie-css'  href='http://codetheory.in/wp-content/themes/twentysixteen/css/ie.css?ver=20150930' type='text/css' media='all' />
<![endif]--> 
  <!--[if lt IE 9]>
<link rel='stylesheet' id='twentysixteen-ie8-css'  href='http://codetheory.in/wp-content/themes/twentysixteen/css/ie8.css?ver=20151230' type='text/css' media='all' />
<![endif]--> 
  <!--[if lt IE 8]>
<link rel='stylesheet' id='twentysixteen-ie7-css'  href='http://codetheory.in/wp-content/themes/twentysixteen/css/ie7.css?ver=20150930' type='text/css' media='all' />
<![endif]--> 
  <link rel="stylesheet" id="A2A_SHARE_SAVE-css" href="http://codetheory.in/wp-content/plugins/add-to-any/addtoany.min.css?ver=1.13" type="text/css" media="all"> 
  <script type="text/javascript" src="http://codetheory.in/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/add-to-any/addtoany.min.js?ver=1.0"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/topbar-pro/js/jquery.cookie.js?ver=4.5.3"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var tpbr_settings = {"initial_state":"open","user_who":"notloggedin","fixed":"fixed","guests_or_users":"all","yn_close":"close","fontsize":"15","delay":"0","border":"noborder","message":"Learn web design, web development, mobile app development & more","status":"inactive","yn_button":"button","color":"#A38F85","button_text":"Start learning for Free","button_url":"http:\/\/treehouse.7eer.net\/c\/245523\/228915\/3944","is_admin_bar":"no","close_url":"http:\/\/codetheory.in\/wp-content\/plugins\/topbar-pro\/images\/close.png"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/topbar-pro/js/tpbr_front.min.js?ver=4.5.3"></script> 
  <!--[if lt IE 9]>
<script type='text/javascript' src='http://codetheory.in/wp-content/themes/twentysixteen/js/html5.js?ver=3.7.3'></script>
<![endif]--> 
  <link rel="https://api.w.org/" href="http://codetheory.in/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://codetheory.in/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://codetheory.in/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Creating Android Sliding Sidebar (Hamburger) Menu with Navigation Drawer Icon" href="http://codetheory.in/android-navigation-drawer/"> 
  <link rel="next" title="Google Place API Autocomplete Service in Android Application" href="http://codetheory.in/google-place-api-autocomplete-service-in-android-application/"> 
  <meta name="generator" content="WordPress 4.5.3"> 
  <link rel="canonical" href="http://codetheory.in/android-sms/"> 
  <link rel="shortlink" href="http://codetheory.in/?p=2086"> 
  <link rel="alternate" type="application/json+oembed" href="http://codetheory.in/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fcodetheory.in%2Fandroid-sms%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://codetheory.in/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fcodetheory.in%2Fandroid-sms%2F&amp;format=xml"> 
  <script type="text/javascript">
var a2a_config=a2a_config||{};a2a_config.callbacks=a2a_config.callbacks||[];a2a_config.templates=a2a_config.templates||{};
</script> 
  <script type="text/javascript" src="http://static.addtoany.com/menu/page.js" async></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/si_captcha.js?ver=1501684814"></script> 
  <!-- begin SI CAPTCHA Anti-Spam - login/register form style --> 
  <style type="text/css">
.si_captcha_small { width:175px; height:45px; padding-top:10px; padding-bottom:10px; }
.si_captcha_large { width:250px; height:60px; padding-top:10px; padding-bottom:10px; }
img#si_image_com { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_reg { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_log { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_side_login { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_checkout { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_jetpack { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_bbpress_topic { border-style:none; margin:0; padding-right:5px; float:left; }
.si_captcha_refresh { border-style:none; margin:0; vertical-align:bottom; }
div#si_captcha_input { display:block; padding-top:15px; padding-bottom:5px; }
label#si_captcha_code_label { margin:0; }
input#si_captcha_code_input { width:65px; }
p#si_captcha_code { clear: left; padding-top:10px; }
.si-captcha-jetpack-error { color:#DC3232; }
</style> 
  <!-- end SI CAPTCHA Anti-Spam - login/register form style --> 
  <style type="text/css" id="syntaxhighlighteranchor"></style> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-35555370-1', 'auto');
  ga('send', 'pageview');

</script> 
  <script async type="text/javascript" src="http://thisiswaldo.com/ad_delivery?site_id=202"></script> 
 </head> 
 <body class="single single-post postid-2086 single-format-standard group-blog"> 
  <div id="waldo-tag-207"></div> 
  <div id="waldo-tag-209"></div> 
  <!--BEGIN FIRSTIMPRESSION TAG --> 
  <script data-cfasync="false" type="text/javascript">
	window.apd_options = { 'websiteId': 6145, 'runFromFrame': false };
	(function() {
		var w = window.apd_options.runFromFrame ? window.top : window;
		if(window.apd_options.runFromFrame && w!=window.parent) w=window.parent;
		if (w.location.hash.indexOf('apdAdmin') != -1){if(typeof(Storage) !== 'undefined') {w.localStorage.apdAdmin = 1;}}
		var adminMode = ((typeof(Storage) == 'undefined') || (w.localStorage.apdAdmin == 1));
		w.apd_options=window.apd_options;
		var apd = w.document.createElement('script'); apd.type = 'text/javascript'; apd.async = true;
		apd.src = '//' + (adminMode ? 'cdn' : 'ecdn') + '.firstimpression.io/' + (adminMode ? 'fi.js?id=' + window.apd_options.websiteId : 'fi_client.js') ;
		var s = w.document.getElementsByTagName('head')[0]; s.appendChild(apd);
	})();</script> 
  <!-- END FIRSTIMPRESSION TAG --> 
  <script>
function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}

  if (localStorage.getItem('UserID')) {
    dataLayer = [{
      'uid': localStorage.getItem('UserID')
    }];
  }
  else {
    localStorage.setItem('UserID', guid());
    dataLayer = [{
      'uid': localStorage.getItem('UserID')
    }];
  }
</script> 
  <!-- Google Tag Manager --> 
  <noscript>
   <iframe src="//www.googletagmanager.com/ns.html?id=GTM-K43PBP" height="0" width="0" style="display:none;visibility:hidden"></iframe>
  </noscript> 
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-K43PBP');</script> 
  <!-- End Google Tag Manager --> 
  <div id="page" class="site"> 
   <div class="site-inner"> 
    <a class="skip-link screen-reader-text" href="#content">Skip to content</a> 
    <header id="masthead" class="site-header" role="banner"> 
     <center> 
      <div id="waldo-tag-206" style="margin-bottom: -10px;"></div> 
     </center> 
     <div class="site-header-main"> 
      <div class="site-branding"> 
       <p class="site-title"><a href="http://codetheory.in/" rel="home">Code Theory</a></p> 
       <p class="site-description">Web and Mobile Development articles</p> 
      </div>
      <!-- .site-branding --> 
      <button id="menu-toggle" class="menu-toggle">Menu</button> 
      <div id="site-header-menu" class="site-header-menu"> 
       <nav id="site-navigation" class="main-navigation" role="navigation" aria-label="Primary Menu"> 
        <div class="menu-main-navigation-container">
         <ul id="menu-main-navigation" class="primary-menu">
          <li id="menu-item-2321" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-2321"><a href="http://codetheory.in/">Home</a></li> 
          <li id="menu-item-2322" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2322"><a href="http://codetheory.in/about/">About</a></li> 
          <li id="menu-item-2323" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2323"><a href="http://codetheory.in/contact/">Contact</a></li> 
         </ul>
        </div> 
       </nav>
       <!-- .main-navigation --> 
      </div>
      <!-- .site-header-menu --> 
     </div>
     <!-- .site-header-main --> 
    </header>
    <!-- .site-header --> 
    <div id="content" class="site-content"> 
     <center> 
      <div id="waldo-tag-208" style="margin-top: -40px;"></div> 
     </center> 
     <div id="primary" class="content-area"> 
      <main id="main" class="site-main" role="main"> 
       <article id="post-2086" class="post-2086 post type-post status-publish format-standard hentry category-mobile-development tag-android tag-mobile tag-sms"> 
        <header class="entry-header"> 
         <h1 class="entry-title">Android Send and Receive SMS (Text and Data/Binary) Messages with SmsManager and Intents</h1> 
        </header>
        <!-- .entry-header --> 
        <div class="entry-content"> 
         <p>There’ll be times when you’ll want to allow the users to send SMS messages directly from your app to other numbers (destination). The Android SDK does support to capability of sending SMS/MMS messages in two ways (from your app):</p> 
         <p><span id="more-2086"></span></p> 
         <ul> 
          <li> Invoke an SMS client app via Implicit Intents. </li> 
          <li> Send the SMS directly yourself by using the <a href="http://developer.android.com/reference/android/telephony/SmsManager.html"><code>SmsManager</code></a> telephony class API. </li> 
         </ul> 
         <p>We’ll delve into both the approaches.</p>
         <div class="code-block code-block-1" style="margin: 8px 0;"> 
          <div class="insert" style="font-size: 24px;border-left: 5px solid #000; font-family: 'Open Sans', sans-serif; color: #333; padding-left: 15px"> 
           <p>What's the one thing every developer wants? More screens! Enhance your coding experience with an <a href="http://codetheory.in/recommends/hp-external-monitor/" rel="nofollow" target="_blank">external monitor</a> to increase screen real estate.</p> 
          </div>
         </div> 
         <div class="insert-post-ads" style="clear:both;float:left;width:100%;margin:0 0 20px 0;">
          <center> 
           <div id="waldo-tag-205"></div> 
          </center>
         </div> 
         <h2>Using Implicit Intents</h2> 
         <p>Using Android <a href="http://codetheory.in/android-intents/">implicit intents</a> we can display a list of SMS client apps that the user already has on his phone that he can use. Obviously if they have only one app (which is generally the default Messaging app unless other apps registered themselves for these intents using <a href="http://codetheory.in/android-intent-filters/">intent filter</a>) then that’ll open up directly without presenting the user with a dialog filled with a list of choices that can be made. We can either use the <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_SENDTO"><code>ACTION_SENDTO</code></a> action or <a href="http://developer.android.com/reference/android/content/Intent.html#ACTION_VIEW"><code>ACTION_VIEW</code></a>.</p> 
         <p>Let’s see an example where <code>ACTION_VIEW</code> is used:</p> 
         <pre class="brush: java; title: ; notranslate" title="">String phoneNumber = "9999999999";
String smsBody = "This is an SMS!";

Intent smsIntent = new Intent(Intent.ACTION_VIEW);
// Invokes only SMS/MMS clients
smsIntent.setType("vnd.android-dir/mms-sms");
// Specify the Phone Number
smsIntent.putExtra("address", phoneNumber);
// Specify the Message
smsIntent.putExtra("sms_body", smsBody);

// Shoot!
startActivity(smsIntent);
</pre> 
         <p>With that piece of code, if you now test your app on your device, your Messaging app should be invoked with the number (or name if the number exists in your contacts) and message pre-populated. Amazing, isn’t it! Now we’ll see an example where <code>ACTION_SENDTO</code> is used:</p> 
         <pre class="brush: java; title: ; notranslate" title="">String phoneNumber = "9999999999";
String smsBody = "This is an SMS!";

// Add the phone number in the data
Uri uri = Uri.parse("smsto:" + phoneNumber);
// Create intent with the action and data
Intent smsIntent = new Intent(Intent.ACTION_SENDTO, uri);
// smsIntent.setData(uri); // We just set the data in the constructor above
// Set the message
smsIntent.putExtra("sms_body", smsBody);

startActivity(smsIntent);
</pre> 
         <h2>Using the SmsManager API</h2> 
         <p>With the <a href="http://developer.android.com/reference/android/telephony/SmsManager.html"><code>android.telephone.SmsManager</code></a> class, we can send an SMS automatically in two lines of API code.</p> 
         <pre class="brush: java; title: ; notranslate" title="">String phoneNumber = "9999999999";
String smsBody = "Message from the API";

// Get the default instance of SmsManager
SmsManager smsManager = SmsManager.getDefault();
// Send a text based SMS
smsManager.sendTextMessage(phoneNumber, null, smsBody, null, null);
</pre> 
         <p>This method requires the <a href="http://developer.android.com/reference/android/Manifest.permission.html#SEND_SMS"><code>SEND_SMS</code></a> permission which you should request in the manifest file.</p> 
         <pre class="brush: xml; title: ; notranslate" title="">&lt;uses-permission android:name="android.permission.SEND_SMS" /&gt;
</pre> 
         <p>The first argument passed to <a href="http://developer.android.com/reference/android/telephony/SmsManager.html#sendTextMessage(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)"><code>sendTextMessage()</code></a> is the destination address to which the message has to be sent and the second argument is the <a href="http://en.wikipedia.org/wiki/Short_message_service_center">SMSC</a> address (it’s also like a phone number generally) to which if you pass null, the default service center of the device’s carrier will be used. Third argument is the text message to be sent in the SMS. The fourth and fifth arguments if not null must be <a href="http://codetheory.in/android-pending-intents/">pending intents</a> performing broadcasts when the message is successfully sent (or failed) and delivered to the recipient.</p> 
         <p>Let’s see an example where we set broadcast receivers for when the message is sent successfully and is also delivered (or not).</p> 
         <pre class="brush: java; title: ; notranslate" title="">String phoneNumber = "9999999999";
String smsBody = "This is an SMS!";

String SMS_SENT = "SMS_SENT";
String SMS_DELIVERED = "SMS_DELIVERED";

PendingIntent sentPendingIntent = PendingIntent.getBroadcast(this, 0, new Intent(SMS_SENT), 0);
PendingIntent deliveredPendingIntent = PendingIntent.getBroadcast(this, 0, new Intent(SMS_DELIVERED), 0);

// For when the SMS has been sent
registerReceiver(new BroadcastReceiver() {
    @Override
    public void onReceive(Context context, Intent intent) {
        switch (getResultCode()) {
            case Activity.RESULT_OK:
                Toast.makeText(context, "SMS sent successfully", Toast.LENGTH_SHORT).show();
                break;
            case SmsManager.RESULT_ERROR_GENERIC_FAILURE:
                Toast.makeText(context, "Generic failure cause", Toast.LENGTH_SHORT).show();
                break;
            case SmsManager.RESULT_ERROR_NO_SERVICE:
                Toast.makeText(context, "Service is currently unavailable", Toast.LENGTH_SHORT).show();
                break;
            case SmsManager.RESULT_ERROR_NULL_PDU:
                Toast.makeText(context, "No pdu provided", Toast.LENGTH_SHORT).show();
                break;
            case SmsManager.RESULT_ERROR_RADIO_OFF:
                Toast.makeText(context, "Radio was explicitly turned off", Toast.LENGTH_SHORT).show();
                break;
        }
    }
}, new IntentFilter(SMS_SENT));

// For when the SMS has been delivered
registerReceiver(new BroadcastReceiver() {
    @Override
    public void onReceive(Context context, Intent intent) {
        switch (getResultCode()) {
            case Activity.RESULT_OK:
                Toast.makeText(getBaseContext(), "SMS delivered", Toast.LENGTH_SHORT).show();
                break;
            case Activity.RESULT_CANCELED:
                Toast.makeText(getBaseContext(), "SMS not delivered", Toast.LENGTH_SHORT).show();
                break;
        }
    }
}, new IntentFilter(SMS_DELIVERED));

// Get the default instance of SmsManager
SmsManager smsManager = SmsManager.getDefault();
// Send a text based SMS
smsManager.sendTextMessage(phoneNumber, null, smsBody, sentPendingIntent, deliveredPendingIntent);
</pre> 
         <p>The code is pretty simple actually if you know the concept of <a href="http://codetheory.in/android-pending-intents/">pending intents</a> and <a href="http://codetheory.in/android-broadcast-receivers/">broadcast receivers</a>.</p> 
         <h3>Divide and Send Multipart Text Messages</h3> 
         <p>Generally an SMS is restricted to 160 (7 bit) characters or 140 (8 bit) characters. So if your message is longer than that, then you’ll have to divide it into multiple parts using <a href="http://developer.android.com/reference/android/telephony/SmsManager.html#divideMessage(java.lang.String)"><code>divideMessage()</code></a> and then send with the <a href="http://developer.android.com/reference/android/telephony/SmsManager.html#sendMultipartTextMessage(java.lang.String, java.lang.String, java.util.ArrayList<java.lang.String>, java.util.ArrayList<android.app.PendingIntent>, java.util.ArrayList<android.app.PendingIntent>)"><code>sendMultipartTextMessage()</code></a> method. It’s fairly simple, let’s see an example.</p> 
         <pre class="brush: java; title: ; notranslate" title="">// Get the default instance of SmsManager
SmsManager smsManager = SmsManager.getDefault();

String phoneNumber = "9999999999";
String smsBody = "Some piece of really long text, longer than 140*n characters!";

String SMS_SENT = "SMS_SENT";
String SMS_DELIVERED = "SMS_DELIVERED";

PendingIntent sentPendingIntent = PendingIntent.getBroadcast(this, 0, new Intent(SMS_SENT), 0);
PendingIntent deliveredPendingIntent = PendingIntent.getBroadcast(this, 0, new Intent(SMS_DELIVERED), 0);

ArrayList&lt;String&gt; smsBodyParts = smsManager.divideMessage(smsBody);
ArrayList&lt;PendingIntent&gt; sentPendingIntents = new ArrayList&lt;PendingIntent&gt;();
ArrayList&lt;PendingIntent&gt; deliveredPendingIntents = new ArrayList&lt;PendingIntent&gt;();

for (int i = 0; i &lt; smsBodyParts.size(); i++) {
    sentPendingIntents.add(sentPendingIntent);
    deliveredPendingIntents.add(deliveredPendingIntent);
}

// For when the SMS has been sent
registerReceiver(new BroadcastReceiver() {
    @Override
    public void onReceive(Context context, Intent intent) {
        switch (getResultCode()) {
            case Activity.RESULT_OK:
                Toast.makeText(context, "SMS sent successfully", Toast.LENGTH_SHORT).show();
                break;
            case SmsManager.RESULT_ERROR_GENERIC_FAILURE:
                Toast.makeText(context, "Generic failure cause", Toast.LENGTH_SHORT).show();
                break;
            case SmsManager.RESULT_ERROR_NO_SERVICE:
                Toast.makeText(context, "Service is currently unavailable", Toast.LENGTH_SHORT).show();
                break;
            case SmsManager.RESULT_ERROR_NULL_PDU:
                Toast.makeText(context, "No pdu provided", Toast.LENGTH_SHORT).show();
                break;
            case SmsManager.RESULT_ERROR_RADIO_OFF:
                Toast.makeText(context, "Radio was explicitly turned off", Toast.LENGTH_SHORT).show();
                break;
        }
    }
}, new IntentFilter(SMS_SENT));

// For when the SMS has been delivered
registerReceiver(new BroadcastReceiver() {
    @Override
    public void onReceive(Context context, Intent intent) {
        switch (getResultCode()) {
            case Activity.RESULT_OK:
                Toast.makeText(getBaseContext(), "SMS delivered", Toast.LENGTH_SHORT).show();
                break;
            case Activity.RESULT_CANCELED:
                Toast.makeText(getBaseContext(), "SMS not delivered", Toast.LENGTH_SHORT).show();
                break;
        }
    }
}, new IntentFilter(SMS_DELIVERED));

// Send a text based SMS
smsManager.sendMultipartTextMessage(phoneNumber, null, smsBodyParts, sentPendingIntents, deliveredPendingIntents);
</pre> 
         <h3>Send Binary (Data) SMS</h3> 
         <p>We can send binary messages (as opposed to text based messages that we covered earlier) to specific application ports using <code>sendDataMessage()</code>. According to this Stack Exchange <a href="http://android.stackexchange.com/questions/9108/what-is-a-data-sms">thread</a> data sms is one which is sent over 2G/3G as well as GSM. I’ve tested it with mobile data turned off and it works fine charging me the same amount, so not very sure on whether it uses 2G/3G or not, but generally the term data is used in telephony when it’s related to network (tcp/ip). Anyway, SMS’s are generally sent to a specific port on the device (which is probably port 0 [zero]). But using <code>sendDataMessage()</code> we can send SMS’s to some other random port on which our app can listen for incoming SMSs and do something with that. In this case the default messaging app will not store the SMSs in their inbox for both the sender as well as the receiver.</p> 
         <p>For binary messages, Java uses UTF-8 encoding hence the length is 140 characters out of which the <a href="http://en.wikipedia.org/wiki/User_Data_Header">User Data Header (UDH)</a> data size is 7 bytes, hence 133 characters can be sent. More details on SMPP, PDUs and UDH <a href="http://developers.esendex.com/Concepts-and-Patterns/Sending-SMS-to-a-Specific-Port">here</a>.</p> 
         <p>We’ll see how to send data messages now.</p> 
         <pre class="brush: java; title: ; notranslate" title="">// Get the default instance of SmsManager
SmsManager smsManager = SmsManager.getDefault();

String phoneNumber = "9999999999";
byte[] smsBody = "Let me know if you get this SMS".getBytes();
short port = 6734;

// Send a text based SMS
smsManager.sendDataMessage(phoneNumber, null, port, smsBody, null, null);
</pre> 
         <p>This piece of code will send a data message to the port <code>2345</code> on the recipient’s device.</p> 
         <h3>Receive SMS Text Messages</h3> 
         <p>Now that we know how to send SMS messages, it’s time to see how to receive them using <a href="http://codetheory.in/android-broadcast-receivers/">broadcast receivers</a> as soon as the recipient device receives it.</p> 
         <p>Firstly, you’ll need the <a href="http://developer.android.com/reference/android/Manifest.permission.html#RECEIVE_SMS"><code>RECEIVE_SMS</code></a> permission, so put this in your manifest:</p> 
         <pre class="brush: java; title: ; notranslate" title="">&lt;uses-permission android:name="android.permission.RECEIVE_SMS" /&gt;
</pre> 
         <p>Next we’ll create a broadcast receiver class called <code>SmsManager.java</code> to listen for any incoming SMS. So create the file and put this code into it:</p> 
         <pre class="brush: java; title: ; notranslate" title="">public class SmsReceiver extends BroadcastReceiver {
    private String TAG = SmsReceiver.class.getSimpleName();

    public SmsReceiver() {
    }

    @Override
    public void onReceive(Context context, Intent intent) {
        // Get the data (SMS data) bound to intent
        Bundle bundle = intent.getExtras();

        SmsMessage[] msgs = null;

        String str = "";

        if (bundle != null) {
            // Retrieve the SMS Messages received
            Object[] pdus = (Object[]) bundle.get("pdus");
            msgs = new SmsMessage[pdus.length];

            // For every SMS message received
            for (int i=0; i &lt; msgs.length; i++) {
                // Convert Object array
                msgs[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
                // Sender's phone number
                str += "SMS from " + msgs[i].getOriginatingAddress() + " : ";
                // Fetch the text message
                str += msgs[i].getMessageBody().toString();
                // Newline ?
                str += "\n";
            }

            // Display the entire SMS Message
            Log.d(TAG, str);
        }
    }
}
</pre> 
         <p>It’ll loop through all the PDUs (one for each message in a multipart text message) and form a big string with the sender phone number and the messages. Finally it logs the entire string formed. This reception technique will work for both single and multipart messages. You’ll also need create an entry for the receiver in the manifest file with an <a href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#SMS_RECEIVED_ACTION"><code>SMS_RECEIVED_ACTION</code></a> intent filter.</p> 
         <pre class="brush: xml; title: ; notranslate" title="">&lt;receiver
    android:name=".SmsReceiver"
    android:enabled="true"
    android:exported="true"&gt;
    &lt;intent-filter android:priority="999"&gt;
        &lt;action android:name="android.provider.Telephony.SMS_RECEIVED" /&gt;
    &lt;/intent-filter&gt;
&lt;/receiver&gt;
</pre> 
         <p>You can learn more about <a href="http://codetheory.in/android-intent-filters/">intent filter</a> <code>android:priority</code> <a href="http://developer.android.com/guide/topics/manifest/intent-filter-element.html#priority">here</a>.</p> 
         <p>The code will dump something like this:</p> 
         <pre class="brush: plain; title: ; notranslate" title="">D/SmsReceiver(21819): SMS from +919999999999 : This is an SMS!
</pre> 
         <h3>Binary SMS Receiver</h3> 
         <p>When a binary SMS is received, the code has to be a little different as the data received is not in plain text but binary. Here’s the code handling the reception:</p> 
         <pre class="brush: java; title: ; notranslate" title="">public class SmsReceiver extends BroadcastReceiver {
    private String TAG = SmsReceiver.class.getSimpleName();

    public SmsReceiver() {
    }

    @Override
    public void onReceive(Context context, Intent intent) {
        // Get the data (SMS data) bound to intent
        Bundle bundle = intent.getExtras();

        SmsMessage[] msgs = null;

        String str = "";

        if (bundle != null){
            // Retrieve the Binary SMS data
            Object[] pdus = (Object[]) bundle.get("pdus");
            msgs = new SmsMessage[pdus.length];

            // For every SMS message received (although multipart is not supported with binary)
            for (int i=0; i&lt;msgs.length; i++) {
                byte[] data = null;

                msgs[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);

                str += "Binary SMS from " + msgs[i].getOriginatingAddress() + " :";

                str += "\nBINARY MESSAGE: ";

                // Return the User Data section minus the
                // User Data Header (UDH) (if there is any UDH at all)
                data = msgs[i].getUserData();

                // Generally you can do away with this for loop
                // You'll just need the next for loop
                for (int index=0; index &lt; data.length; index++) {
                    str += Byte.toString(data[index]);
                }

                str += "\nTEXT MESSAGE (FROM BINARY): ";

                for (int index=0; index &lt; data.length; index++) {
                    str += Character.toString((char) data[index]);
                }

                str += "\n";
            }

            // Dump the entire message
            // Toast.makeText(context, str, Toast.LENGTH_LONG).show();
            Log.d(TAG, str);
        }
    }
}
</pre> 
         <p>It’ll dump something like this:</p> 
         <pre class="brush: plain; title: ; notranslate" title="">D/SmsReceiver(25507): Binary SMS from +919999999999 :
D/SmsReceiver(25507): BINARY MESSAGE: 7610111632109101321071101111193210510232121111117321031011163211610410511532837783
D/SmsReceiver(25507): TEXT MESSAGE (FROM BINARY): Let me know if you get this SMS
</pre> 
         <p>The entry in the manifest file will also be a little different with the most important portion beind, specifying the port and a different action (from the previous one).</p> 
         <pre class="brush: xml; title: ; notranslate" title="">&lt;receiver
    android:name=".SmsReceiver"
    android:enabled="true"
    android:exported="true"
    &gt;
    &lt;intent-filter android:priority="10" &gt;
        &lt;action android:name="android.intent.action.DATA_SMS_RECEIVED" /&gt;
        &lt;data
            android:scheme="sms"
            android:host="*"
            android:port="6734" /&gt;
    &lt;/intent-filter&gt;
&lt;/receiver&gt;
</pre> 
         <p>You should read this <a href="http://stackoverflow.com/questions/10472906/about-android-sms-port">SO thread</a> that has some useful information regarding the manifest entry.</p> 
         <h3>Dynamic BroadcastReceiver Registration</h3> 
         <p>We registered our broadcast receiver in the manifest file (statically). Alternatively, we can also dynamically register it in the code itself. You should completely understand the difference between statically and dynamically registered broadcast receivers. I’ve explained everything in my <a href="http://codetheory.in/android-broadcast-receivers/">article</a>. Let’s see how to register the previous binary sms receiver example dynamically in code:</p> 
         <pre class="brush: java; title: ; notranslate" title="">// Register a broadcast receiver
IntentFilter intentFilter = new IntentFilter("android.intent.action.DATA_SMS_RECEIVED");
intentFilter.setPriority(10);
intentFilter.addDataScheme("sms");
intentFilter.addDataAuthority("*", "6734");
registerReceiver(smsReceiver, intentFilter);
</pre> 
         <p>The object <code>smsReceiver</code> is that of the <code>SmsReceiver</code> broadcast receiver implementation (class). Instead of having a separate class you can also have <code>smsReceiver</code> as an instance member variable to which you assign an anonymous class implementation of <code>BroadcastReceiver</code>.</p> 
         <pre class="brush: java; title: ; notranslate" title="">BroadcastReceiver smsReceiver = new BroadcastReceiver() {
    @Override
    public void onReceive(Context context, Intent intent) {
        // code to read the incoming SMS
    }
}
</pre> 
         <h2>Changes in SMS Reception Since Android 4.4 KitKat (API Level 19)</h2> 
         <p>A lot has changed in <a href="http://developer.android.com/about/versions/kitkat.html#44-sms-provider">Android 4.4</a> (API level 19). Firstly, with just <code> SMS_RECEIVED_ACTION</code> intent filter, apps can only “observe” (or “monitor”) incoming messages, i.e., read them for purposes like phone verification. But this will not give you write access to the SMS provider (<a href="http://codetheory.in/android-sharing-application-data-with-content-provider-and-content-resolver/">content provider</a>) defined by the <code>android.provider.Telephony</code> class and subclasses. This also means now you cannot delete messages.</p> 
         <p>To get write access to the provider, you’ll need your app to be selected as the default messaging app by the user. Then incoming SMS’s will be delivered to your app with the <a href="https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html#SMS_DELIVER_ACTION"><code>SMS_DELIVER_ACTION</code></a> intent and also you’ll need to request the <a href="http://developer.android.com/reference/android/Manifest.permission.html#BROADCAST_SMS"><code>BROADCAST_SMS</code></a> permission.</p> 
         <p>You can find more information on the process to build a full blown messaging app that works on Kitkat and above <a href="http://android-developers.blogspot.in/2013/10/getting-your-sms-apps-ready-for-kitkat.html">here</a>.</p> 
         <p>Pre-Android 4.4, the <code>SMS_RECEIVED_ACTION</code> intents were <a href="http://codetheory.in/android-broadcast-receivers/">ordered broadcasts</a> that could be aborted by one of the receivers. This would cause a lot of issues in some cases where a third party app with highest priority would abort the broadcast preventing it from getting received by another third party app’s receivers. Since Kitkat, this is not possible anymore (good news!), i.e., any attempt to abort the broadcast will be ignored and all the apps who had registered to receive incoming messages will get a chance.</p> 
         <h2>Wrapping Up</h2> 
         <p>So we’ve learnt all the different ways in which one can send and receive messages from an Android application programatically. Although receiving is not something that would work consistently across all heavily used versions (as of now), because of the conceptual (and implementation) changes since Android 4.4. If you’re building an application that will require write access to the SMS Content Provider as it might let the user perform all sorts of tasks related to messaging, then you should definitely read <a href="http://android-developers.blogspot.in/2013/10/getting-your-sms-apps-ready-for-kitkat.html">this article</a> to make your SMS app Kitkat (and above) ready. Do note that the <a href="http://developer.android.com/reference/android/telephony/SmsManager.html"><code>SmsManager</code></a> API can also be used to send MMS (Multimedia Messagin Service) messages.</p> 
         <div id="contentad229956"></div> 
         <script type="text/javascript">
    (function(d) {
        var params =
        {
            id: "5eb77d0b-4111-4649-adc7-3d1c636286f5",
            d:  "Y29kZXRoZW9yeS5pbg==",
            wid: "229956",
            cb: (new Date()).getTime()
        };

        var qs=[];
        for(var key in params) qs.push(key+'='+encodeURIComponent(params[key]));
        var s = d.createElement('script');s.type='text/javascript';s.async=true;
        var p = 'https:' == document.location.protocol ? 'https' : 'http';
        s.src = p + "://api.content-ad.net/Scripts/widget2.aspx?" + qs.join('&');
        d.getElementById("contentad229956").appendChild(s);
    })(document);
</script> 
         <div class="crp_related ">
          <h3>Related Posts:</h3>
          <ul>
           <li><a href="http://codetheory.in/android-intent-filters/"><span class="crp_title">Understanding Android Intent Filters (Receiving Implicit…</span></a></li>
           <li><a href="http://codetheory.in/android-interprocess-communication-ipc-messenger-remote-bound-services/"><span class="crp_title">Android Interprocess Communication (IPC) with Messenger…</span></a></li>
           <li><a href="http://codetheory.in/android-push-notifications-google-cloud-messaging/"><span class="crp_title">Android Push Notifications with Google Cloud Messaging</span></a></li>
           <li><a href="http://codetheory.in/android-pending-intents/"><span class="crp_title">Understanding Android Pending Intents</span></a></li>
           <li><a href="http://codetheory.in/android-push-notifications-with-pubnub-data-streams-via-gcm/"><span class="crp_title">Android Push Notifications with PubNub Data Streams (via…</span></a></li>
          </ul>
          <div class="crp_clear"></div>
         </div>
         <div class="addtoany_share_save_container addtoany_content_bottom">
          <div class="a2a_kit a2a_kit_size_32 addtoany_list" data-a2a-url="http://codetheory.in/android-sms/" data-a2a-title="Android Send and Receive SMS (Text and Data/Binary) Messages with SmsManager and Intents">
           <a class="a2a_button_facebook" href="http://www.addtoany.com/add_to/facebook?linkurl=http%3A%2F%2Fcodetheory.in%2Fandroid-sms%2F&amp;linkname=Android%20Send%20and%20Receive%20SMS%20%28Text%20and%20Data%2FBinary%29%20Messages%20with%20SmsManager%20and%20Intents" title="Facebook" rel="nofollow" target="_blank"></a>
           <a class="a2a_button_twitter" href="http://www.addtoany.com/add_to/twitter?linkurl=http%3A%2F%2Fcodetheory.in%2Fandroid-sms%2F&amp;linkname=Android%20Send%20and%20Receive%20SMS%20%28Text%20and%20Data%2FBinary%29%20Messages%20with%20SmsManager%20and%20Intents" title="Twitter" rel="nofollow" target="_blank"></a>
           <a class="a2a_button_google_plus" href="http://www.addtoany.com/add_to/google_plus?linkurl=http%3A%2F%2Fcodetheory.in%2Fandroid-sms%2F&amp;linkname=Android%20Send%20and%20Receive%20SMS%20%28Text%20and%20Data%2FBinary%29%20Messages%20with%20SmsManager%20and%20Intents" title="Google+" rel="nofollow" target="_blank"></a>
           <a class="a2a_dd a2a_counter addtoany_share_save" href="https://www.addtoany.com/share"></a>
          </div>
         </div> 
         <div class="author-info"> 
          <div class="author-avatar"> 
           <img alt="" src="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
          </div>
          <!-- .author-avatar --> 
          <div class="author-description"> 
           <h2 class="author-title"><span class="author-heading">Author:</span> Rishabh</h2> 
           <p class="author-bio"> Rishabh is a full stack web and mobile developer from India. <a href="https://twitter.com/_rishabhp">Follow me</a> on Twitter. <a class="author-link" href="http://codetheory.in/author/admin/" rel="author"> View all posts by Rishabh </a> </p>
           <!-- .author-bio --> 
          </div>
          <!-- .author-description --> 
         </div>
         <!-- .author-info --> 
        </div>
        <!-- .entry-content --> 
        <footer class="entry-footer"> 
         <span class="byline"><span class="author vcard"><img alt="" src="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=49&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=98&amp;d=identicon&amp;r=g 2x" class="avatar avatar-49 photo" height="49" width="49"><span class="screen-reader-text">Author </span> <a class="url fn n" href="http://codetheory.in/author/admin/">Rishabh</a></span></span>
         <span class="posted-on"><span class="screen-reader-text">Posted on </span><a href="http://codetheory.in/android-sms/" rel="bookmark"><time class="entry-date published" datetime="2015-02-06T15:51:20+00:00">February 6, 2015</time><time class="updated" datetime="2015-02-06T17:18:29+00:00">February 6, 2015</time></a></span>
         <span class="cat-links"><span class="screen-reader-text">Categories </span><a href="http://codetheory.in/category/mobile-development/" rel="category tag">Mobile Development</a></span>
         <span class="tags-links"><span class="screen-reader-text">Tags </span><a href="http://codetheory.in/tag/android/" rel="tag">android</a>, <a href="http://codetheory.in/tag/mobile/" rel="tag">mobile</a>, <a href="http://codetheory.in/tag/sms/" rel="tag">sms</a></span> 
        </footer>
        <!-- .entry-footer --> 
       </article>
       <!-- #post-## --> 
       <div id="comments" class="comments-area"> 
        <h2 class="comments-title"> 18 thoughts on “Android Send and Receive SMS (Text and Data/Binary) Messages with SmsManager and Intents” </h2> 
        <ol class="comment-list"> 
         <li id="comment-1883590" class="comment even thread-even depth-1"> 
          <article id="div-comment-1883590" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://0.gravatar.com/avatar/3bcf667e9bdcfca59ef051029238e6f2?s=42&amp;d=identicon&amp;r=g" srcset="http://0.gravatar.com/avatar/3bcf667e9bdcfca59ef051029238e6f2?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn"><a href="http://none" rel="external nofollow" class="url">manjotsingh</a></b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1883590"> <time datetime="2015-03-19T13:02:44+00:00"> March 19, 2015 at 1:02 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Hi rishabh ,</p> 
            <p>I am developing an application in which i am able to fetch the contacts list from android phone in the autocomplete textview and then on save button that 5 different phone numbers are saved in the database…now what i am doing is using sqlite database and able to fetch the phone numbers from it. but now i want when anyone click on send sms button the message should be sent to these 5 phone numbers at once using smsmanager class. However i am not able to do it.Can you help me on it..Thanks.</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1883590#respond" onclick="return addComment.moveForm( &quot;div-comment-1883590&quot;, &quot;1883590&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to manjotsingh">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1885434" class="comment odd alt thread-odd thread-alt depth-1 parent"> 
          <article id="div-comment-1885434" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://0.gravatar.com/avatar/086a6d343b872cf920feff57a35b65ac?s=42&amp;d=identicon&amp;r=g" srcset="http://0.gravatar.com/avatar/086a6d343b872cf920feff57a35b65ac?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">jay</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1885434"> <time datetime="2015-04-09T15:12:52+00:00"> April 9, 2015 at 3:12 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>can you tell me how to store the data in sms db in lollipop</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1885434#respond" onclick="return addComment.moveForm( &quot;div-comment-1885434&quot;, &quot;1885434&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to jay">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> 
          <ol class="children"> 
           <li id="comment-1886134" class="comment byuser comment-author-admin bypostauthor even depth-2"> 
            <article id="div-comment-1886134" class="comment-body"> 
             <footer class="comment-meta"> 
              <div class="comment-author vcard"> 
               <img alt="" src="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
               <b class="fn"><a href="http://codetheory.in" rel="external nofollow" class="url">Rishabh</a></b> 
               <span class="says">says:</span> 
              </div>
              <!-- .comment-author --> 
              <div class="comment-metadata"> 
               <a href="http://codetheory.in/android-sms/#comment-1886134"> <time datetime="2015-04-19T16:02:23+00:00"> April 19, 2015 at 4:02 PM </time> </a> 
              </div>
              <!-- .comment-metadata --> 
             </footer>
             <!-- .comment-meta --> 
             <div class="comment-content"> 
              <p>More info on that here – <a href="http://android-developers.blogspot.in/2013/10/getting-your-sms-apps-ready-for-kitkat.html" rel="nofollow">http://android-developers.blogspot.in/2013/10/getting-your-sms-apps-ready-for-kitkat.html</a></p> 
             </div>
             <!-- .comment-content --> 
             <div class="reply">
              <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1886134#respond" onclick="return addComment.moveForm( &quot;div-comment-1886134&quot;, &quot;1886134&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Rishabh">Reply</a>
             </div> 
            </article>
            <!-- .comment-body --> </li>
           <!-- #comment-## --> 
          </ol>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li id="comment-1887640" class="comment odd alt thread-even depth-1 parent"> 
          <article id="div-comment-1887640" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://2.gravatar.com/avatar/8b2b4207406ad1f357a7e317c98670cf?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/8b2b4207406ad1f357a7e317c98670cf?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Ken</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1887640"> <time datetime="2015-05-10T19:03:04+00:00"> May 10, 2015 at 7:03 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Hi, thanks for the useful guide! Do you know of any way to easily send “multipart” data messages (that exceed the 133 byte limit) rather than writing custom code to put multiple messages together at the receiver? Cheers</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1887640#respond" onclick="return addComment.moveForm( &quot;div-comment-1887640&quot;, &quot;1887640&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Ken">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> 
          <ol class="children"> 
           <li id="comment-1887738" class="comment byuser comment-author-admin bypostauthor even depth-2 parent"> 
            <article id="div-comment-1887738" class="comment-body"> 
             <footer class="comment-meta"> 
              <div class="comment-author vcard"> 
               <img alt="" src="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
               <b class="fn"><a href="http://codetheory.in" rel="external nofollow" class="url">Rishabh</a></b> 
               <span class="says">says:</span> 
              </div>
              <!-- .comment-author --> 
              <div class="comment-metadata"> 
               <a href="http://codetheory.in/android-sms/#comment-1887738"> <time datetime="2015-05-11T17:04:11+00:00"> May 11, 2015 at 5:04 PM </time> </a> 
              </div>
              <!-- .comment-metadata --> 
             </footer>
             <!-- .comment-meta --> 
             <div class="comment-content"> 
              <p>The section “Divide and Send Multipart Text Messages” explains just that!</p> 
             </div>
             <!-- .comment-content --> 
             <div class="reply">
              <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1887738#respond" onclick="return addComment.moveForm( &quot;div-comment-1887738&quot;, &quot;1887738&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Rishabh">Reply</a>
             </div> 
            </article>
            <!-- .comment-body --> 
            <ol class="children"> 
             <li id="comment-1889145" class="comment odd alt depth-3"> 
              <article id="div-comment-1889145" class="comment-body"> 
               <footer class="comment-meta"> 
                <div class="comment-author vcard"> 
                 <img alt="" src="http://1.gravatar.com/avatar/d466ea5e0b5029f4aaf4aa4450f1b4a4?s=42&amp;d=identicon&amp;r=g" srcset="http://1.gravatar.com/avatar/d466ea5e0b5029f4aaf4aa4450f1b4a4?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
                 <b class="fn">Simon</b> 
                 <span class="says">says:</span> 
                </div>
                <!-- .comment-author --> 
                <div class="comment-metadata"> 
                 <a href="http://codetheory.in/android-sms/#comment-1889145"> <time datetime="2015-05-29T21:49:00+00:00"> May 29, 2015 at 9:49 PM </time> </a> 
                </div>
                <!-- .comment-metadata --> 
               </footer>
               <!-- .comment-meta --> 
               <div class="comment-content"> 
                <p>not really. that section is about text messages, not data messages. There is no explicit method for sending multipart data messages. You are probably expected to add some sort of splitting protocol on top of the messaging system.</p> 
               </div>
               <!-- .comment-content --> 
               <div class="reply">
                <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1889145#respond" onclick="return addComment.moveForm( &quot;div-comment-1889145&quot;, &quot;1889145&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Simon">Reply</a>
               </div> 
              </article>
              <!-- .comment-body --> </li>
             <!-- #comment-## --> 
             <li id="comment-1889448" class="comment byuser comment-author-admin bypostauthor even depth-3"> 
              <article id="div-comment-1889448" class="comment-body"> 
               <footer class="comment-meta"> 
                <div class="comment-author vcard"> 
                 <img alt="" src="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
                 <b class="fn"><a href="http://codetheory.in" rel="external nofollow" class="url">Rishabh</a></b> 
                 <span class="says">says:</span> 
                </div>
                <!-- .comment-author --> 
                <div class="comment-metadata"> 
                 <a href="http://codetheory.in/android-sms/#comment-1889448"> <time datetime="2015-06-03T12:01:57+00:00"> June 3, 2015 at 12:01 PM </time> </a> 
                </div>
                <!-- .comment-metadata --> 
               </footer>
               <!-- .comment-meta --> 
               <div class="comment-content"> 
                <p>aah, failed to noticed he mentioned multipart data messages and not multipart text messages. You’re right!</p> 
               </div>
               <!-- .comment-content --> 
               <div class="reply">
                <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1889448#respond" onclick="return addComment.moveForm( &quot;div-comment-1889448&quot;, &quot;1889448&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Rishabh">Reply</a>
               </div> 
              </article>
              <!-- .comment-body --> </li>
             <!-- #comment-## --> 
            </ol>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ol>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li id="comment-1889100" class="comment odd alt thread-odd thread-alt depth-1"> 
          <article id="div-comment-1889100" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://2.gravatar.com/avatar/b3064a1dfc674dd51a2a27fedfae382d?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/b3064a1dfc674dd51a2a27fedfae382d?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Rameez</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1889100"> <time datetime="2015-05-28T15:52:28+00:00"> May 28, 2015 at 3:52 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Hi, Rishab<br> Iam developing an android app where i should send sms like ( REG mobile no 1111) to a particular number for registration . and i should ge ta reply from that number that registration is successfull. so please help me in developing this logic.<br> please send me the code that how i could send an sms through this format.<br> Thanking you</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1889100#respond" onclick="return addComment.moveForm( &quot;div-comment-1889100&quot;, &quot;1889100&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Rameez">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1891483" class="comment even thread-even depth-1"> 
          <article id="div-comment-1891483" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://1.gravatar.com/avatar/1a327c16135771cdd9fe346cc6d74dbd?s=42&amp;d=identicon&amp;r=g" srcset="http://1.gravatar.com/avatar/1a327c16135771cdd9fe346cc6d74dbd?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">DEV</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1891483"> <time datetime="2015-06-27T13:52:13+00:00"> June 27, 2015 at 1:52 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Dear rishabh i have a datawind kitkat 4.2.2 7 inch dual sim 2g tablet wich not supports goofle play service…plz tell how to root it</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1891483#respond" onclick="return addComment.moveForm( &quot;div-comment-1891483&quot;, &quot;1891483&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to DEV">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1891528" class="comment odd alt thread-odd thread-alt depth-1"> 
          <article id="div-comment-1891528" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://1.gravatar.com/avatar/d11259d2d00af7dff6a3fadcc46e407b?s=42&amp;d=identicon&amp;r=g" srcset="http://1.gravatar.com/avatar/d11259d2d00af7dff6a3fadcc46e407b?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn"><a href="http://prashantvc.in" rel="external nofollow" class="url">Prashant</a></b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1891528"> <time datetime="2015-06-28T20:32:12+00:00"> June 28, 2015 at 8:32 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Wonderful article, very thorough! I keep coming back to your blog for Android need ?</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1891528#respond" onclick="return addComment.moveForm( &quot;div-comment-1891528&quot;, &quot;1891528&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Prashant">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1896810" class="comment even thread-even depth-1"> 
          <article id="div-comment-1896810" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://0.gravatar.com/avatar/9408ec607d2f761ffb120f7bfd635c93?s=42&amp;d=identicon&amp;r=g" srcset="http://0.gravatar.com/avatar/9408ec607d2f761ffb120f7bfd635c93?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Aelaf</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1896810"> <time datetime="2015-10-15T12:04:10+00:00"> October 15, 2015 at 12:04 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>my question is, in android emulator send sms message within for loop works fine, but in real phone it is not, the trick was to wait for the broadcast receiver then continue with the for loop, any idea on how to implement the idea?</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1896810#respond" onclick="return addComment.moveForm( &quot;div-comment-1896810&quot;, &quot;1896810&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Aelaf">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1897278" class="comment odd alt thread-odd thread-alt depth-1"> 
          <article id="div-comment-1897278" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://1.gravatar.com/avatar/428dd664c4a5e3d4bb32b28e7fb4d440?s=42&amp;d=identicon&amp;r=g" srcset="http://1.gravatar.com/avatar/428dd664c4a5e3d4bb32b28e7fb4d440?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Mikey</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1897278"> <time datetime="2015-10-22T14:14:02+00:00"> October 22, 2015 at 2:14 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Object[] pdus = (Object[]) bundle.get(“pdus”);<br> returns as String thus giving me ClassCastException on a Samsung S2 Plus running 4.1.2</p> 
            <p>any thoughts?</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1897278#respond" onclick="return addComment.moveForm( &quot;div-comment-1897278&quot;, &quot;1897278&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Mikey">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1899421" class="comment even thread-even depth-1"> 
          <article id="div-comment-1899421" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://1.gravatar.com/avatar/75230286be5142f5084a917c901699f6?s=42&amp;d=identicon&amp;r=g" srcset="http://1.gravatar.com/avatar/75230286be5142f5084a917c901699f6?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn"><a href="http://codetheory.in/android-sms/" rel="external nofollow" class="url">Hassan jan</a></b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1899421"> <time datetime="2015-11-12T09:21:04+00:00"> November 12, 2015 at 9:21 AM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Hi Rishab.<br> I am develop an app. i.e Expanses manager…<br> tools use android studio….<br> i want to update,insert and delete a record. i want to send the updated message to the group friends and add that data to friend application on the SQlite database automatically.But app ma be the same both the sender and receiver how could i do it….</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1899421#respond" onclick="return addComment.moveForm( &quot;div-comment-1899421&quot;, &quot;1899421&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Hassan jan">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1901440" class="comment odd alt thread-odd thread-alt depth-1"> 
          <article id="div-comment-1901440" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://1.gravatar.com/avatar/4ece63901c489812f38677954fad9cf9?s=42&amp;d=identicon&amp;r=g" srcset="http://1.gravatar.com/avatar/4ece63901c489812f38677954fad9cf9?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Parth Vora</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1901440"> <time datetime="2015-12-04T11:51:28+00:00"> December 4, 2015 at 11:51 AM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Hi Rishabh, I am trying to develop a simple sms sending demo app to only send the sms so i know there is one permission code and two lines of code to send the sms but its not working in android studio. I need help on this. Thanks!</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1901440#respond" onclick="return addComment.moveForm( &quot;div-comment-1901440&quot;, &quot;1901440&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Parth Vora">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1902818" class="comment even thread-even depth-1"> 
          <article id="div-comment-1902818" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://1.gravatar.com/avatar/a19b5b0d4ed0bfd5050116a9ed0b70a5?s=42&amp;d=identicon&amp;r=g" srcset="http://1.gravatar.com/avatar/a19b5b0d4ed0bfd5050116a9ed0b70a5?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">nadeem</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1902818"> <time datetime="2015-12-19T16:35:19+00:00"> December 19, 2015 at 4:35 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Thanx for nice tutorial<br> i implemented this code but i always get the same response “service is unavailable”<br> can you help me to understand why i getting this..?</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1902818#respond" onclick="return addComment.moveForm( &quot;div-comment-1902818&quot;, &quot;1902818&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to nadeem">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1903959" class="comment odd alt thread-odd thread-alt depth-1"> 
          <article id="div-comment-1903959" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://1.gravatar.com/avatar/7b2bb74545614e81264bab38d18b3de3?s=42&amp;d=identicon&amp;r=g" srcset="http://1.gravatar.com/avatar/7b2bb74545614e81264bab38d18b3de3?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Faisal</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1903959"> <time datetime="2016-01-08T12:15:42+00:00"> January 8, 2016 at 12:15 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Rishab, Thanks for delightful code explanation.</p> 
            <p>I understand the with PI we can get SMS delivery notification. But, Is there anyway we can fetch details of delivery notification? My app sends multiple SMS together, Can we get any details like which SMS delivered and which aren’t.</p> 
            <p>Any input would be appreciated. Thanks.</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1903959#respond" onclick="return addComment.moveForm( &quot;div-comment-1903959&quot;, &quot;1903959&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Faisal">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1909829" class="comment even thread-even depth-1"> 
          <article id="div-comment-1909829" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://2.gravatar.com/avatar/25e6092405e58869e3d944a6287f7096?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/25e6092405e58869e3d944a6287f7096?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">sagar nayak</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1909829"> <time datetime="2016-04-08T09:53:30+00:00"> April 8, 2016 at 9:53 AM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>The code you have provided is only for case of single sim card. if it is dual sim then the android will send the sms from 1st sim or default sim . if i want to send sms from 2nd sim card then what will i do ?</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1909829#respond" onclick="return addComment.moveForm( &quot;div-comment-1909829&quot;, &quot;1909829&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to sagar nayak">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1910556" class="comment odd alt thread-odd thread-alt depth-1"> 
          <article id="div-comment-1910556" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://2.gravatar.com/avatar/8f85b9f44b2121891d4356c069ec7924?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/8f85b9f44b2121891d4356c069ec7924?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Md. Sium Rana</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/android-sms/#comment-1910556"> <time datetime="2016-04-27T18:25:53+00:00"> April 27, 2016 at 6:25 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Please give an example of “MultiPartSMS” sending…</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/android-sms/?replytocom=1910556#respond" onclick="return addComment.moveForm( &quot;div-comment-1910556&quot;, &quot;1910556&quot;, &quot;respond&quot;, &quot;2086&quot; )" aria-label="Reply to Md. Sium Rana">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
        </ol>
        <!-- .comment-list --> 
        <div id="respond" class="comment-respond"> 
         <h2 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/android-sms/#respond" style="display:none;">Cancel reply</a></small></h2> 
         <form action="http://codetheory.in/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate> 
          <p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p>
          <p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required></textarea></p>
          <p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required="true" required></p> 
          <p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required="true" required></p> 
          <p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200"></p> 
          <div class="si_captcha_small">
           <img id="si_image_com" src="http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/securimage_show.php?si_sm_captcha=1&amp;si_form_id=com&amp;prefix=Drf9bQRtV5F3JrLL" width="132" height="45" alt="CAPTCHA" title="CAPTCHA"> 
           <input id="si_code_com" name="si_code_com" type="hidden" value="Drf9bQRtV5F3JrLL"> 
           <div id="si_refresh_com"> 
            <a href="#" rel="nofollow" title="Refresh" onclick="si_captcha_refresh('si_image_com','com','/wp-content/plugins/si-captcha-for-wordpress/captcha','http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/securimage_show.php?si_sm_captcha=1&amp;si_form_id=com&amp;prefix='); return false;"> <img class="si_captcha_refresh" src="http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/images/refresh.png" width="22" height="20" alt="Refresh" onclick="this.blur();"></a> 
           </div> 
          </div> 
          <p id="si_captcha_code"> <input id="si_captcha_code" name="si_captcha_code" type="text"> <label for="si_captcha_code">CAPTCHA Code</label><span class="required"> *</span> </p> 
          <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="2086" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"> </p>
          <p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="819524fed2"></p>
          <p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="80"></p> 
         </form> 
        </div>
        <!-- #respond --> 
       </div>
       <!-- .comments-area --> 
       <nav class="navigation post-navigation" role="navigation"> 
        <h2 class="screen-reader-text">Post navigation</h2> 
        <div class="nav-links">
         <div class="nav-previous">
          <a href="http://codetheory.in/android-navigation-drawer/" rel="prev"><span class="meta-nav" aria-hidden="true">Previous</span> <span class="screen-reader-text">Previous post:</span> <span class="post-title">Creating Android Sliding Sidebar (Hamburger) Menu with Navigation Drawer Icon</span></a>
         </div>
         <div class="nav-next">
          <a href="http://codetheory.in/google-place-api-autocomplete-service-in-android-application/" rel="next"><span class="meta-nav" aria-hidden="true">Next</span> <span class="screen-reader-text">Next post:</span> <span class="post-title">Google Place API Autocomplete Service in Android Application</span></a>
         </div>
        </div> 
       </nav> 
      </main>
      <!-- .site-main --> 
     </div>
     <!-- .content-area --> 
     <aside id="secondary" class="sidebar widget-area" role="complementary"> 
      <section id="text-6" class="widget widget_text"> 
       <div class="textwidget">
        <div id="waldo-tag-203"></div>
       </div> 
      </section>
      <section id="text-7" class="widget widget_text"> 
       <div class="textwidget">
        <div style="padding: 6px 0px;"> 
         <!--Carambola Script --> 
         <img height="0" width="0" alt="" src="//pixel.watch/35bq" style="display:block;"> 
         <script data-cfasync="false" class="carambola_InContent" type="text/javascript" cbola_wid="0">  
(function (i,d,s,o,m,r,c,l,w,q,y,h,g) {  
var e=d.getElementById(r);if(e===null){  
var t = d.createElement(o); t.src = g; t.id = r; t.setAttribute(m, s);t.async = 1;var n=d.getElementsByTagName(o)[0];n.parentNode.insertBefore(t, n); 
var dt=new Date().getTime();  
try{i[l][w+y](h,i[l][q+y](h)+'&'+dt);}catch(er){i[h]=dt;}  
} else if(typeof i!=='undefined'){i++}  
else{i=1;}  
})(window, document, 'InContent', 'script', 'mediaType', 'carambola_proxy','Cbola_IC','localStorage','set','get','Item','cbolaDt','//route.carambo.la/inimage/getlayer?pid=thgh69&did=112348&wid=0')  
</script> 
        </div>
       </div> 
      </section> 
      <section id="recent-posts-2" class="widget widget_recent_entries"> 
       <h2 class="widget-title">Recent Posts</h2> 
       <ul> 
        <li> <a href="http://codetheory.in/my-experience-with-newor-media/">My Experience With Newor Media</a> </li> 
        <li> <a href="http://codetheory.in/top-10-code-snippets-with-css-animations/">Top 10 Code Snippets With CSS Animations</a> </li> 
        <li> <a href="http://codetheory.in/how-to-create-social-media-share-buttons/">How to Create Social Media Share Buttons</a> </li> 
       </ul> 
      </section> 
      <section id="text-2" class="widget widget_text"> 
       <div class="textwidget"> 
        <script data-cfasync="false" type="text/javascript">(function(s,o,l,v,e,d){if(s[o]==null&&s[l+e]){s[o]="loading";s[l+e](d,l=function(){s[o]="complete";s[v+e](d,l,!1)},!1)}})(document,"readyState","add","remove","EventListener","DOMContentLoaded");(function(){var s=document.createElement("script");s.type="text/javascript";s.async=true;s.src="//cdn.engine.4dsply.com/Scripts/infinity.js.aspx?guid=98da5c7c-f607-4b42-b873-40bb140ef27d";s.id="infinity";s.setAttribute("data-guid","98da5c7c-f607-4b42-b873-40bb140ef27d");s.setAttribute("data-version","async");var e=document.getElementsByTagName('script')[0];e.parentNode.insertBefore(s,e)})();</script>
       </div> 
      </section>
      <section id="search-2" class="widget widget_search"> 
       <form role="search" method="get" class="search-form" action="http://codetheory.in/"> 
        <label> <span class="screen-reader-text">Search for:</span> <input type="search" class="search-field" placeholder="Search …" value="" name="s" title="Search for:"> </label> 
        <button type="submit" class="search-submit"><span class="screen-reader-text">Search</span></button> 
       </form> 
      </section>
      <section id="nav_menu-2" class="widget widget_nav_menu">
       <h2 class="widget-title">Subscribe</h2>
       <div class="menu-subscribe-container">
        <ul id="menu-subscribe" class="menu">
         <li id="menu-item-161" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-161"><a href="http://twitter.com/_rishabhp">Follow on Twitter</a></li> 
         <li id="menu-item-162" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-162"><a href="http://feeds.feedburner.com/codetheory">RSS Feeds</a></li> 
         <li id="menu-item-683" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-683"><a href="http://feedburner.google.com/fb/a/mailverify?uri=CodeTheory&amp;loc=en_US">Subscribe by Email</a></li> 
        </ul>
       </div>
      </section>
      <section id="text-5" class="widget widget_text"> 
       <div class="textwidget">
        <div id="waldo-tag-204"></div>
       </div> 
      </section> 
      <section class="widget"> 
       <h2 class="widget-title">Poll</h2> 
       <style>.wp-polls .Buttons { background-color: #000; }</style> 
       <div id="polls-2" class="wp-polls"> 
        <form id="polls_form_2" class="wp-polls-form" action="/index.php" method="post"> 
         <p style="display: none;"><input type="hidden" id="poll_2_nonce" name="wp-polls-nonce" value="8ae8161869"></p> 
         <p style="display: none;"><input type="hidden" name="poll_id" value="2"></p> 
         <p style="display: none;"><input type="hidden" id="poll_multiple_ans_2" name="poll_multiple_ans_2" value="1"></p> 
         <p style="text-align: center;"><strong>Which JavaScript framework do you prefer/use ?</strong></p>
         <div id="polls-2-ans" class="wp-polls-ans">
          <ul class="wp-polls-ul"> 
           <li><input type="checkbox" id="poll-answer-6" name="poll_2" value="6"> <label for="poll-answer-6">Angular</label></li> 
           <li><input type="checkbox" id="poll-answer-7" name="poll_2" value="7"> <label for="poll-answer-7">Ember</label></li> 
           <li><input type="checkbox" id="poll-answer-8" name="poll_2" value="8"> <label for="poll-answer-8">Backbone</label></li> 
           <li><input type="checkbox" id="poll-answer-9" name="poll_2" value="9"> <label for="poll-answer-9">Knockout</label></li> 
           <li><input type="checkbox" id="poll-answer-10" name="poll_2" value="10"> <label for="poll-answer-10">React</label></li> 
           <li><input type="checkbox" id="poll-answer-11" name="poll_2" value="11"> <label for="poll-answer-11">Vue</label></li> 
           <li><input type="checkbox" id="poll-answer-12" name="poll_2" value="12"> <label for="poll-answer-12">Polymer</label></li> 
           <li><input type="checkbox" id="poll-answer-13" name="poll_2" value="13"> <label for="poll-answer-13">Meteor</label></li> 
           <li><input type="checkbox" id="poll-answer-14" name="poll_2" value="14"> <label for="poll-answer-14">Aurelia</label></li> 
          </ul>
          <p style="text-align: center;"><input type="button" name="vote" value="   Vote   " class="Buttons" onclick="poll_vote(2);"></p>
          <p style="text-align: center;"><a href="#ViewPollResults" onclick="poll_result(2); return false;" title="View Results Of This Poll">View Results</a></p>
         </div> 
        </form> 
       </div> 
       <div id="polls-2-loading" class="wp-polls-loading">
        <img src="http://codetheory.in/wp-content/plugins/wp-polls/images/loading.gif" width="16" height="16" alt="Loading ..." title="Loading ..." class="wp-polls-image">&nbsp;Loading ...
       </div> 
      </section> 
      <section class="widget"> 
       <h2 class="widget-title">Advertisement</h2> 
       <a href="http://treehouse.7eer.net/c/245523/228915/3944"><img src="http://i.imgur.com/7oO1ze7.gif" alt=""></a> 
      </section> 
     </aside>
     <!-- .sidebar .widget-area --> 
    </div>
    <!-- .site-content --> 
    <footer id="colophon" class="site-footer" role="contentinfo"> 
     <nav class="main-navigation" role="navigation" aria-label="Footer Primary Menu"> 
      <div class="menu-main-navigation-container">
       <ul id="menu-main-navigation-1" class="primary-menu">
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-2321"><a href="http://codetheory.in/">Home</a></li> 
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2322"><a href="http://codetheory.in/about/">About</a></li> 
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2323"><a href="http://codetheory.in/contact/">Contact</a></li> 
       </ul>
      </div> 
     </nav>
     <!-- .main-navigation --> 
     <div class="site-info"> 
      <span class="site-title"><a href="http://codetheory.in/" rel="home">Code Theory</a></span> 
      <span class="site-title"><a href="https://www.linode.com/?r=d63edd6169dc10a3b37773da43f1d2337285b1d5">Hosted on Linode</a></span> 
      <span class="site-title"><a href="http://codetheory.in/privacy-policy">Privacy</a></span> 
      <a href="https://wordpress.org/">Proudly powered by WordPress</a> 
     </div>
     <!-- .site-info --> 
    </footer>
    <!-- .site-footer --> 
   </div>
   <!-- .site-inner --> 
  </div>
  <!-- .site --> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/akismet/_inc/form.js?ver=3.3"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushXml.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPlain.js?ver=3.0.9b"></script> 
  <script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/contact-form-7/includes/js/jquery.form.min.js?ver=3.51.0-2014.06.20"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var _wpcf7 = {"loaderUrl":"http:\/\/codetheory.in\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","recaptchaEmpty":"Please verify that you are not a robot.","sending":"Sending ...","cached":"1"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/contact-form-7/includes/js/scripts.js?ver=4.4.2"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var pollsL10n = {"ajax_url":"http:\/\/codetheory.in\/wp-admin\/admin-ajax.php","text_wait":"Your last request is still being processed. Please wait a while ...","text_valid":"Please choose a valid poll answer.","text_multiple":"Maximum number of choices allowed: ","show_loading":"1","show_fading":"1"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/wp-polls/polls-js.js?ver=2.73.3"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/themes/twentysixteen/js/skip-link-focus-fix.js?ver=20151112"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-includes/js/comment-reply.min.js?ver=4.5.3"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var screenReaderText = {"expand":"expand child menu","collapse":"collapse child menu"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/themes/twentysixteen/js/functions.js?ver=20151204"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-includes/js/wp-embed.min.js?ver=4.5.3"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/si_captcha.js?ver=1.0"></script> 
  <script async src="http://cssdeck.com/assets/js/embed.js"></script> 
  <script async src="//assets.codepen.io/assets/embed/ei.js"></script> 
  <!--<script>
function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}
</script>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-35555370-1', 'auto');

  //if (localStorage.getItem('UserID')) {
  //  ga('set', 'userId', localStorage.getItem('UserID')); // Set the user ID using signed-in user_id.
  //}
  //else {
  //  localStorage.setItem('UserID', guid());
  //  ga('set', 'userId', localStorage.getItem('UserID')); // Set the user ID using signed-in user_id.
  //}

  ga('send', 'pageview');

</script>--> 
  <script>
(function(b,o,u,n,c,e){b.__ba = (b.__ba || {});b.__ba.siteId = 1;b.__ba.pageLoadStart = Date.now();c=o.createElement(u);e=o.getElementsByTagName(u)[0];c.async=1;c.src=n + b.__ba.siteId + "/ba.js?t="+Math.floor(Date.now() / (3600 * 1000));e.parentNode.insertBefore(c,e);})(window,document,"script","//static.blipmetrics.com/");
</script>   
  <!-- Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

Page Caching using disk: enhanced
Database Caching 40/65 queries in 0.018 seconds using disk

 Served from: codetheory.in @ 2017-08-02 20:10:14 by W3 Total Cache -->
 </body>
</html>