<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!--[if lt IE 7]> <html class="lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="lt-ie9" lang="en"> <![endif]-->
<!--[if gt IE 8]><!-->
<html lang="en">
 <!--<![endif]-->
 <head> 
  <title>jQuery++</title> 
  <link rel="stylesheet" type="text/css" href="stylesheets/styles.css"> 
  <link rel="stylesheet" type="text/css" href="stylesheets/tango.css"> 
  <link href="/favicon.ico" rel="shortcut icon" type="image/x-icon"> 
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-2302003-13', 'auto');
  ga('send', 'pageview');
</script> 
 </head> 
 <body> 
  <div id="bg"> 
  </div> 
  <div class="cf" id="wrapper"> 
   <div id="menu-wrapper"> 
    <div id="header"> 
     <div id="logo-and-download"> 
      <img alt="jQuery++" id="logo" src="images/logo.png"> 
      <a class="primary" href="https://github.com/bitovi/jquerypp/archive/2.0.0.tar.gz">Download 2.0.0</a> 
     </div> 
    </div> 
    <div class="cf" id="buttons"> 
     <a href="https://forum.javascriptmvc.com/#Forum/jquerymx">Forums</a> 
     <a href="http://bitovi.com/blog/tag/jquerypp/">Blog</a> 
     <a href="https://twitter.com/jquerypp">Twitter</a> 
    </div> 
    <div id="inner-menu-wrap"> 
     <ul id="menu"></ul> 
    </div> 
    <a href="http://bitovi.com" id="developed-by"> <img alt="Bitovi" src="images/bitovi.png"> </a> 
   </div> 
   <div id="content-wrapper"> 
    <div id="content"> 
     <a href="http://github.com/bitovi/jquerypp" class="github-fork"><img src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png" alt="Fork me on GitHub"></a> 
     <h1 id="hi-im-jquery">Hi, I’m jQuery++.</h1> 
     <p>I am a MIT licensed collection of extremely useful DOM helpers and special events for jQuery 1.8 and later. I’m not a UI project like <a href="http://jqueryui.com/">jQuery UI</a> or <a href="http://jquerytools.org/">jQuery Tools</a>. Instead, I’m all about providing low-level utilities for things that jQuery doesn’t support. If <a href="http://underscorejs.org/">Underscore</a> is jQuery’s functional-programming tie, I am jQuery’s bald-spot covering toupee.</p> 
     <p>Select the plugins you want and click “Download” for a customized, unminified JavaScript file:</p> 
     <form id="builder" action="http://bitbuilder.herokuapp.com/jquerypp.custom.js"> 
      <h4><a href="#dom_helpers">DOM HELPERS</a> - faster and easier DOM manipulation with:</h4> 
      <label> <input type="checkbox" value="jquerypp/dom/animate/animate" name="plugins"> <a href="#animate">jQuery.animate</a> - animate using CSS animations </label> 
      <label> <input type="checkbox" value="jquerypp/dom/compare/compare" name="plugins"> <a href="#compare">jQuery.compare</a> - compare element document position </label> 
      <label> <input type="checkbox" value="jquerypp/dom/cookie/cookie" name="plugins"> <a href="#cookie">jQuery.cookie</a> - read and write cookies </label> 
      <label> <input type="checkbox" value="jquerypp/dom/form_params/form_params" name="plugins"> <a href="#formparams">jQuery.formParams</a> - serializes a form into an object </label> 
      <label> <input type="checkbox" value="jquerypp/dom/range/range" name="plugins"> <a href="#range">jQuery.range</a> - create and manipulate text ranges </label> 
      <label> <input type="checkbox" value="jquerypp/dom/selection/selection" name="plugins"> <a href="#selection">jQuery.selection</a> - get and set the current text selection </label> 
      <label> <input type="checkbox" value="jquerypp/dom/within/within" name="plugins"> <a href="#within">jQuery.within</a> - get elements within an area or at a point </label> 
      <h4><a href="#events">EVENTS</a> - listen to special events with:</h4> 
      <label> <input type="checkbox" value="jquerypp/event/removed/removed" name="plugins"> <a href="#removed">jQuery.event.destroyed</a> - an element is removed from the DOM </label> 
      <label> <input type="checkbox" value="jquerypp/event/drag/drag" name="plugins"> <a href="#drag">jQuery.event.drag</a> - delegatable drag events </label> 
      <label> <input type="checkbox" value="jquerypp/event/drop/drop" name="plugins"> <a href="#drop">jQuery.event.drop</a> - delegatable drop events </label> 
      <label> <input type="checkbox" value="jquerypp/event/hover/hover" name="plugins"> <a href="#hover">jQuery.event.hover</a> - delegatable hover events </label> 
      <label> <input type="checkbox" value="jquerypp/event/key/key" name="plugins"> <a href="#key">jQuery.event.key</a> - returns a string representation of the key pressed </label> 
      <label> <input type="checkbox" value="jquerypp/event/pause/pause" name="plugins"> <a href="#pause">jQuery.event.pause</a> - pause and resume event propagation </label> 
      <label> <input type="checkbox" value="jquerypp/event/resize/resize" name="plugins"> <a href="#resize">jQuery.event.resize</a> - listen to a resize event on every object </label> 
      <label> <input type="checkbox" value="jquerypp/event/swipe/swipe" name="plugins"> <a href="#swipe">jQuery.event.swipe</a> - delegatable swipe events </label> 
      <button class="button disabled" disabled type="submit">Download</button> 
     </form> 
     <p>Learn more about <a href="#why_jquery__">how I</a> can be useful to you. If you think I should have other utilities, let me know on the <a href="https://forum.javascriptmvc.com/#Forum/jquery">forum</a>. If you like me, check out my sister library <a href="http://canjs.us">CanJS</a>. Finally, my apologies about talking about myself in the third person from this point forward.</p> 
     <h2 id="get-jquery">Get jQuery++</h2> 
     <p>There are several ways to get and setup jQuery++:</p> 
     <ul> 
      <li>using the download builder</li> 
      <li>using individual files</li> 
      <li>using Steal</li> 
      <li>using AMD</li> 
     </ul> 
     <h3 id="using-the-download-builder">Using the download builder</h3> 
     <p>Simply select the files you want and click “Download”. This will create and download a <code class="highlighter-rouge">jquerypp.custom.js</code> with all the files you selected and their dependencies. Load this script after jQuery 1.8 like:</p> 
     <figure class="highlight">
      <pre><code class="language-html" data-lang="html"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"lib/jquery.1.8.2.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"lib/jquerypp.custom.js"</span><span class="nt">&gt;&lt;/script&gt;</span></code></pre>
     </figure> 
     <!--

### Using Steal

The files needed for using jQuery++ with [StealJS](http://javascriptmvc.com/docs.html#!stealjs) are
located in the `steal/` folder of
the [full download](http://jquerypp.com/downloads/jquerypp-2.0.0.zip).
Take the `jquery/` folder and put it in your steal root to load a plugin like this:


<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">steal</span><span class="p">(</span><span class="s1">'jquery/dom/dimensions'</span><span class="p">,</span> <span class="s1">'jquery/event/resize'</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">(</span><span class="s1">'#element'</span><span class="p">).</span><span class="nx">outerWidth</span><span class="p">(</span><span class="mi">500</span><span class="p">).</span><span class="nx">resize</span><span class="p">();</span>
<span class="p">});</span></code></pre></figure>


Make sure to use `steal.map`  to map any dependency of `jquery` to your jQuery library, if necessary. For example, when
using jQuery++ with [CanJS](http://canjs.us) and Steal:


<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">steal</span><span class="p">.</span><span class="nx">map</span><span class="p">({</span>
  <span class="s2">"jquery/jquery.js"</span> <span class="p">:</span> <span class="s2">"can/util/jquery/jquery.1.8.2.js"</span>
<span class="p">});</span></code></pre></figure>


--> 
     <h3 id="using-amd">Using AMD</h3> 
     <p>The files to load the jQuery++ plugins with an <a href="https://github.com/amdjs/amdjs-api/wiki/AMD">AMD</a> module loader like <a href="http://requirejs.org/">RequireJS</a>, are located in the <code class="highlighter-rouge">amd/</code> folder of the <a href="http://jquerypp.com/downloads/jquerypp-2.0.0.zip">full download</a>. Place the <code class="highlighter-rouge">jquerypp/</code> folder in your module directory and load a plugin like this:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">define</span><span class="p">([</span><span class="s1">'jquery'</span><span class="p">,</span> <span class="s1">'jquerypp/dimensions'</span><span class="p">,</span> <span class="s1">'jquerypp/event/resize'</span><span class="p">],</span>
  <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">$</span><span class="p">(</span><span class="s1">'#element'</span><span class="p">).</span><span class="nx">outerWidth</span><span class="p">(</span><span class="mi">500</span><span class="p">).</span><span class="nx">resize</span><span class="p">();</span>
<span class="p">});</span></code></pre>
     </figure> 
     <p>You might have to map the <code class="highlighter-rouge">jquery</code> module name to the name of your jQuery AMD module. In RequireJS like this:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">require</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span>
  <span class="na">paths</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">"jquery"</span> <span class="p">:</span> <span class="s2">"http://code.jquery.com/jquery-1.8.2"</span>
  <span class="p">}</span>
<span class="p">});</span></code></pre>
     </figure> 
     <blockquote> 
      <p>Note: Starting at version 1.7 jQuery will define itself as an AMD module if a loader is available. There is no need to create a wrapper anymore.</p> 
     </blockquote> 
     <h2 id="dom-helpers">DOM HELPERS</h2> 
     <h2 id="animate-elanimateproperties-speed-callback---jquery">animate <code class="highlighter-rouge">$(el).animate(properties, [speed], [callback]) -&gt; jQuery</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/animate.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.animate">jQuery.animate</a> overwrites <code class="highlighter-rouge">$.fn.animate</code> to use CSS 3 animations if possible. It takes the same arguments as the original <a href="http://api.jquery.com/animate">$.fn.animate</a> and will fall back to jQuery’s JavaScript animation if a CSS animation is not possible.</p> 
     <p>A fade-in effect can be implemented like this:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'#element'</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span>
  <span class="na">opacity</span> <span class="p">:</span> <span class="mi">0</span>
<span class="p">}).</span><span class="nx">animate</span><span class="p">({</span>
  <span class="na">opacity</span> <span class="p">:</span> <span class="mi">1</span>
<span class="p">},</span> <span class="mi">1000</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Animation done'</span><span class="p">);</span>
<span class="p">});</span></code></pre>
     </figure> 
     <p>Since CSS transitions are implemented natively in the browser and can make use of hardware acceleration, animations will perform a lot better, especially in Webkit based mobile browsers (iPhone, iPad, Android).</p> 
     <h2 id="compare-elacompareelb---number">compare <code class="highlighter-rouge">$(elA).compare(elB) -&gt; Number</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/compare.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.compare">jQuery.compare</a> adds <code class="highlighter-rouge">$.fn.compare</code> to compare the position of two nodes. It returns a number that represents a bitmask showing how they are positioned relative to each other. The following list shows the <code class="highlighter-rouge">bitmask</code>, the <strong>number</strong> and what it means for a <code class="highlighter-rouge">$.fn.compare</code> call like <code class="highlighter-rouge">$('#foo').compare($('#bar'))</code>:</p> 
     <ul> 
      <li><code class="highlighter-rouge">000000</code> -&gt; <strong>0</strong>: Elements are identical</li> 
      <li><code class="highlighter-rouge">000001</code> -&gt; <strong>1</strong>: The nodes are in different documents (or one is outside of a document)</li> 
      <li><code class="highlighter-rouge">000010</code> -&gt; <strong>2</strong>: #bar precedes #foo</li> 
      <li><code class="highlighter-rouge">000100</code> -&gt; <strong>4</strong>: #foo precedes #bar</li> 
      <li><code class="highlighter-rouge">001000</code> -&gt; <strong>8</strong>: #bar contains #foo</li> 
      <li><code class="highlighter-rouge">010000</code> -&gt; <strong>16</strong>: #foo contains #bar</li> 
     </ul> 
     <p>You can tell if <code class="highlighter-rouge">#foo</code> precedes <code class="highlighter-rouge">#bar</code> like:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="k">if</span><span class="p">(</span> <span class="nx">$</span><span class="p">(</span><span class="s1">'#foo'</span><span class="p">).</span><span class="nx">compare</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">'#bar'</span><span class="p">))</span> <span class="o">&amp;</span> <span class="mi">4</span> <span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"#foo preceds #bar"</span><span class="p">);</span>
<span class="p">}</span></code></pre>
     </figure> 
     <p>This is useful to rapidly compare element positions which is common when widgets can reorder themselves (drag-drop) or with nested widgets (trees). In the following example, select two elements to see how they compare to each other and what bitmask the result represents:</p> 
     <iframe style="width: 100%; height: 520px" src="http://jsfiddle.net/n5b5q/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="cookie-cookiename-value-options---objectstring">cookie <code class="highlighter-rouge">$.cookie(name, [value], [options]) -&gt; Object|String</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/cookie.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.cookie">jQuery.cookie</a> packages Klaus Hartl’s <a href="https://github.com/carhartl/jquery-cookie">jQuery cookie</a> plugin for manipulating cookies. Use it like:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Set a session cookie</span>
<span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">'the_cookie'</span><span class="p">,</span> <span class="s1">'the_value'</span><span class="p">);</span>
<span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">'the_cookie'</span><span class="p">);</span> <span class="c1">// -&gt; 'the_value'</span>
<span class="c1">// Set a cookie that expires in 7 days</span>
<span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">'the_cookie'</span><span class="p">,</span> <span class="s1">'the_value'</span><span class="p">,</span> <span class="p">{</span> <span class="na">expires</span><span class="p">:</span> <span class="mi">7</span> <span class="p">});</span>
<span class="c1">// delete the cookie</span>
<span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">'the_cookie'</span><span class="p">,</span> <span class="kc">null</span><span class="p">);</span></code></pre>
     </figure> 
     <p>The following <em>options</em> are available:</p> 
     <ul> 
      <li><code class="highlighter-rouge">expires</code> - the expiration time in days or an expiry date</li> 
      <li><code class="highlighter-rouge">domain</code> - the domain name</li> 
      <li><code class="highlighter-rouge">path</code> - the value of the path for the cookie</li> 
      <li><code class="highlighter-rouge">secure</code> - if the cookie requires HTTPS</li> 
     </ul> 
     <p>The example uses <code class="highlighter-rouge">jQuery.cookie</code> and <a href="#formParams">formParams</a> to persist a form to a cookie. You can save the form or load it from the value stored in the cookie. At the bottom it shows the current cookie value after running it through <code class="highlighter-rouge">decodeURIComponent</code>:</p> 
     <iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/wMN7G/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="formparams-formformparamsconvert---objectjquery">formParams <code class="highlighter-rouge">$(form).formParams([convert]) -&gt; Object|jQuery</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/form_params.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.formParams">jQuery.formParams</a> adds <code class="highlighter-rouge">$.fn.formParams</code> which serializes a form into a JavaScript object. It creates nested objects by using bracket notation in the form element name. If <em>convert</em> is <code class="highlighter-rouge">true</code>, values that look like numbers or booleans will be converted and empty strings won’t be added to the object. For a form like this:</p> 
     <figure class="highlight">
      <pre><code class="language-html" data-lang="html"><span class="nt">&lt;form&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"first"</span> <span class="na">value=</span><span class="s">"John"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"last"</span> <span class="na">value=</span><span class="s">"Doe"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"phone[mobile]"</span> <span class="na">value=</span><span class="s">"1234567890"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">name=</span><span class="s">"phone[home]"</span> <span class="na">value=</span><span class="s">"0987654321"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/form&gt;</span></code></pre>
     </figure> 
     <p><code class="highlighter-rouge">$.fn.formParams</code> returns:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'form'</span><span class="p">).</span><span class="nx">formParams</span><span class="p">()</span>
<span class="c1">// -&gt; {</span>
<span class="c1">// first : "John", last : "Doe",</span>
<span class="c1">// phone : { mobile : "1234567890", home : "0987654321" }</span>
<span class="c1">// }</span></code></pre>
     </figure> 
     <p>It is also possible to set form values by passing an object:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'form'</span><span class="p">).</span><span class="nx">formParams</span><span class="p">({</span>
  <span class="na">first</span> <span class="p">:</span> <span class="s1">'Mike'</span><span class="p">,</span>
  <span class="na">last</span> <span class="p">:</span> <span class="s1">'Smith'</span>
<span class="p">});</span></code></pre>
     </figure> 
     <p>Update the form in the following example to see a JSON representation of the object returned by <code class="highlighter-rouge">$.fn.formParams</code>:</p> 
     <iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/xJLvn/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="range-rangeel---range-elrange---range">range <code class="highlighter-rouge">$.Range([el]) -&gt; range</code> <code class="highlighter-rouge">$(el).range() -&gt; range</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/range.html">Annotated source</a></p> 
     <p>Use <a href="http://donejs.com/docs.html#!jQuery.Range">jQuery.Range</a> to create, move and compare text ranges. Use <code class="highlighter-rouge">$.Range.current()</code> to get the currently selected text range. <code class="highlighter-rouge">$(el).range()</code> returns a text range on an element.</p> 
     <p>For example, for an element like <code class="highlighter-rouge">&lt;div id="text"&gt;This is some text&lt;/div&gt;</code>, <code class="highlighter-rouge">$.Range</code> can be used like this:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Get a text range for #text</span>
<span class="kd">var</span> <span class="nx">range</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">'#text'</span><span class="p">).</span><span class="nx">range</span><span class="p">();</span>
<span class="c1">// Move the start 5 characters to the right</span>
<span class="nx">range</span><span class="p">.</span><span class="nx">start</span><span class="p">(</span><span class="s1">'+5'</span><span class="p">);</span>
<span class="c1">// Move the end 5 characters to the left</span>
<span class="nx">range</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">'-5'</span><span class="p">);</span>
<span class="c1">// Return the range text</span>
<span class="nx">range</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span> <span class="c1">// is some</span>
<span class="c1">// Select the current range</span>
<span class="nx">range</span><span class="p">.</span><span class="nx">select</span><span class="p">();</span></code></pre>
     </figure> 
     <p>A <code class="highlighter-rouge">$.Range</code> instance offers the following methods:</p> 
     <ul> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.clone" class="code">range.clone() -&gt; range</a> - clones the range and returns a new $.Range object </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.collapse" class="code">range.collapse([toStart]) -&gt; range</a> collapses a range </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.compare" class="code">range.compare(type, other) -&gt; Number</a> - compares one range to another range </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.end" class="code">range.end([val]) -&gt; range|Object</a> - sets or returns the end of the range </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.move" class="code">range.move(type, referenceRange) -&gt; range</a> - move the endpoints of a range relative to another range </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.overlaps" class="code">range.overlaps(other) -&gt; Boolean</a> - returns if any portion of these two ranges overlap </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.parent" class="code">range.parent() -&gt; HtmlElement|Element|Node</a> - returns the most common ancestor element of the endpoints in the range </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.rect" class="code">range.rect(from) -&gt; TextRectangle</a> - returns the bounding rectangle of this range </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.rects" class="code">range.rects(from) -&gt; Array</a> - returns the client rects </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.start" class="code">range.start([val]) -&gt; range|Object</a> - sets or returns the beginning of the range </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Range.prototype.start" class="code">range.toString() -&gt; String</a> - returns the text of the range </li> 
     </ul> 
     <p>The following example uses <code class="highlighter-rouge">jQuery.range</code> to</p> 
     <ul> 
      <li>Show the start end end offset of the selection</li> 
      <li>Show the selected plain text</li> 
      <li>Add a green border on the left to the start element</li> 
      <li>Add a red border on the right to the end element</li> 
      <li>Put a dotted outline around the parent element</li> 
     </ul> 
     <iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/vKSzN/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="selection-elselectionstart-end---objectjquery">selection <code class="highlighter-rouge">$(el).selection([start], [end]) -&gt; Object|jQuery</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/selection.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.selection">jQuery.selection</a> adds <code class="highlighter-rouge">$.fn.selection</code> to set or retrieve the currently selected text range. It works on all elements:</p> 
     <figure class="highlight">
      <pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"text"</span><span class="nt">&gt;</span>This is some text<span class="nt">&lt;/div&gt;</span></code></pre>
     </figure> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="c1">// Make a selection in #text from position eight to 12</span>
<span class="nx">$</span><span class="p">(</span><span class="s1">'#text'</span><span class="p">).</span><span class="nx">selection</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">12</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">selection</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">'#text'</span><span class="p">).</span><span class="nx">selection</span><span class="p">();</span>
<span class="c1">// -&gt; { start : 8, end : 12 }</span>
<span class="nx">$</span><span class="p">(</span><span class="s1">'#text'</span><span class="p">).</span><span class="nx">text</span><span class="p">().</span><span class="nx">substring</span><span class="p">(</span><span class="nx">selection</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span> <span class="nx">selection</span><span class="p">.</span><span class="nx">end</span><span class="p">)</span> <span class="c1">// -&gt; some</span></code></pre>
     </figure> 
     <p>The following example shows how <code class="highlighter-rouge">$.fn.selection</code> can be used. Initially the selection is set from position eight to 12. You can change the selection in the highlighted area and the status text will be updated:</p> 
     <iframe style="width: 100%; height: 200px" src="http://jsfiddle.net/uze4F/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="within-elwithinleft-top-useoffsetcache---jquery">within <code class="highlighter-rouge">$(el).within(left, top, [useOffsetCache]) -&gt; jQuery</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/within.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.within">jQuery.within</a> adds <code class="highlighter-rouge">$.fn.within</code> and <code class="highlighter-rouge">$.fn.withinBox</code> that return all elements having a given position or area in common. The following example returns all <code class="highlighter-rouge">div</code> elements having the point 200px left and 200px from the top in common:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'div'</span><span class="p">).</span><span class="nx">within</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">)</span></code></pre>
     </figure> 
     <p>Use <code class="highlighter-rouge">$(el).withinBox(left, top, width, height)</code> to get all elements within a certain area:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'*'</span><span class="p">).</span><span class="nx">withinBox</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span></code></pre>
     </figure> 
     <p>Move the mouse in the following example and it will show the ids for <code class="highlighter-rouge">div</code> elements within the current mouse position:</p> 
     <iframe style="width: 100%; height: 330px" src="http://jsfiddle.net/akSQD/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <blockquote> 
      <p><a href="http://donejs.com/docs.html#!jQuery.event.drag">jQuery.event.drag</a> uses <em>jQuery.within</em> to determine dropable elements at the current position.</p> 
     </blockquote> 
     <h2 id="events">EVENTS</h2> 
     <h2 id="removed-removed">removed <code class="highlighter-rouge">removed</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/removed.html">Annotated source</a></p> 
     <p>The <code class="highlighter-rouge">destroyed</code> event is triggered by <a href="http://donejs.com/docs.html#!jQuery.event.removed">jQuery.event.destroyed</a> when the element is removed from the DOM using one of the jQuery <a href="http://api.jquery.com/category/manipulation/">manipulation methods</a>.</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'form'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'destroyed'</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="c1">// Clean up when a form element has been removed</span>
<span class="p">});</span></code></pre>
     </figure> 
     <p><em>Note: The destroyed event does not bubble.</em></p> 
     <h2 id="drag-dragdown-draginit-dragmove-dragend-dragover-dragout">drag <code class="highlighter-rouge">dragdown</code> <code class="highlighter-rouge">draginit</code> <code class="highlighter-rouge">dragmove</code> <code class="highlighter-rouge">dragend</code> <code class="highlighter-rouge">dragover</code> <code class="highlighter-rouge">dragout</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/drag.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.event.drag">jQuery.event.drag</a> adds <em>delegatable</em> drag events to jQuery:</p> 
     <ul> 
      <li><code class="highlighter-rouge">dragdown</code> - the mouse cursor is pressed down</li> 
      <li><code class="highlighter-rouge">draginit</code> - the drag motion is started</li> 
      <li><code class="highlighter-rouge">dragmove</code> - the drag is moved</li> 
      <li><code class="highlighter-rouge">dragend</code> - the drag has ended</li> 
      <li><code class="highlighter-rouge">dragover</code> - the drag is over a drop point</li> 
      <li><code class="highlighter-rouge">dragout</code> - the drag moved out of a drop point</li> 
     </ul> 
     <p>An element will become draggable by attaching an event listener for one of these events on it. A simple slider can be implemented like this:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'#dragger'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'draginit'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">,</span> <span class="nx">drag</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">drag</span><span class="p">.</span><span class="nx">limit</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">());</span>
  <span class="nx">drag</span><span class="p">.</span><span class="nx">horizontal</span><span class="p">();</span>
<span class="p">});</span></code></pre>
     </figure> 
     <p>Which looks like this in action:</p> 
     <iframe style="width: 100%; height: 200px" src="http://jsfiddle.net/T5K3j/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <p>The <code class="highlighter-rouge">drag</code> object (passed to the event handler as the second parameter) can be used to modify the drag behavior:</p> 
     <ul> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.cancel" class="code">drag.cancel() -&gt; undefined</a> - stops the drag motion from happening </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.ghost" class="code">drag.ghost() -&gt; jQuery</a> - copys the draggable and drags the cloned element </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.horizontal" class="code">drag.horizontal() -&gt; drag</a> - limits the scroll to horizontal movement </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.only" class="code">drag.only([only]) -&gt; Boolean</a> - only have drags, no drops </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.representative" class="code">drag.representative(element, offsetX, offsetY)</a> - move another element in place of this element </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.revert" class="code">drag.revert(val) -&gt; drag</a> - animate the drag back to its position </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.step" class="code">drag.step(pixels) -&gt; drag</a> - makes the drag move in steps of amount pixels </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.vertical" class="code">drag.vertical() -&gt; drag</a> - limit the drag to vertical movement </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.limit" class="code">drag.limit(container, center) -&gt; drag</a> - limit the drag within an element </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drag.prototype.scrolls" class="code">drag.scrolls(elements, options) -&gt; undefined</a> - scroll scrollable areas when dragging near their boundaries </li> 
     </ul> 
     <h2 id="drop-dropinit-dropover-dropout-dropmove-dropon-dropend">drop <code class="highlighter-rouge">dropinit</code> <code class="highlighter-rouge">dropover</code> <code class="highlighter-rouge">dropout</code> <code class="highlighter-rouge">dropmove</code> <code class="highlighter-rouge">dropon</code> <code class="highlighter-rouge">dropend</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/drop.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.event.drop">jQuery.event.drop</a> complements <code class="highlighter-rouge">jQuery.event.drag</code> with <em>delegatable</em> drop events:</p> 
     <ul> 
      <li><code class="highlighter-rouge">dropinit</code> - the drag motion is started, drop positions are calculated</li> 
      <li><code class="highlighter-rouge">dropover</code> - a drag moves over a drop element, called once as the drop is dragged over the element</li> 
      <li><code class="highlighter-rouge">dropout</code> - a drag moves out of the drop element</li> 
      <li><code class="highlighter-rouge">dropmove</code> - a drag is moved over a drop element, called repeatedly as the element is moved</li> 
      <li><code class="highlighter-rouge">dropon</code> - a drag is released over a drop element</li> 
      <li><code class="highlighter-rouge">dropend</code> - the drag motion has completed</li> 
     </ul> 
     <p>The following example adds the <code class="highlighter-rouge">highlight</code> class when a drag is moved over the element and removes it when it leaves:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'.drop'</span><span class="p">).</span><span class="nx">on</span><span class="p">({</span>
  <span class="s2">"dropover"</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">,</span> <span class="nx">drop</span><span class="p">,</span> <span class="nx">drag</span><span class="p">){</span>
    <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">'highlight'</span><span class="p">);</span>
  <span class="p">},</span>
  <span class="s2">"dropout"</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">,</span> <span class="nx">drop</span><span class="p">,</span> <span class="nx">drag</span><span class="p">){</span>
    <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">'highlight'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">});</span></code></pre>
     </figure> 
     <p>The <code class="highlighter-rouge">drop</code> object offers the following methods:</p> 
     <ul> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drop.prototype.cancel" class="code">drop.cancel() -&gt; undefined</a> - prevents this drop from being dropped on </li> 
      <li><a href="http://donejs.com/docs.html#!jQuery.Drop.prototype.cache" class="code">drop.cache() -&gt; undefined</a> - call on <code>dropinit</code> to cache the position of draggable elements </li> 
     </ul> 
     <p>When adding drop-able elements after <code class="highlighter-rouge">dropinit</code>, for example when expanding a folder view after hovering over it with a draggable for a while, <a href="http://donejs.com/docs.html#!jQuery.Drop.static.compile" class="code">$.Drop.compile()</a> needs to be called explicitly to update the list of dropable elements (this happens automatically on <code class="highlighter-rouge">dropinit</code>).</p> 
     <p>The following example shows two draggable elements and a drop area. When a drag starts it will create a copy of the element using <code class="highlighter-rouge">drag.ghost()</code>. The drop area will be highlighted when the drag moves over it and update the text when it is dropped:</p> 
     <iframe style="width: 100%; height: 250px" src="http://jsfiddle.net/3NkZM/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="hover-hoverinit-hoverenter-hovermove-hoverleave">hover <code class="highlighter-rouge">hoverinit</code> <code class="highlighter-rouge">hoverenter</code> <code class="highlighter-rouge">hovermove</code> <code class="highlighter-rouge">hoverleave</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/hover.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.event.hover">jQuery.event.hover</a> provides the following hover events:</p> 
     <ul> 
      <li><code class="highlighter-rouge">hoverinit</code> - called on mouseenter</li> 
      <li><code class="highlighter-rouge">hoverenter</code> - an element is being hovered</li> 
      <li><code class="highlighter-rouge">hovermove</code> - the mouse moves on an element that has been hovered</li> 
      <li><code class="highlighter-rouge">hoverleave</code> - the mouse leaves the hovered element</li> 
     </ul> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'li.menu'</span><span class="p">).</span><span class="nx">on</span><span class="p">({</span>
  <span class="na">hoverenter</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(){</span>
    <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">"hovering"</span><span class="p">);</span>
  <span class="p">},</span>
  <span class="na">hoverleave</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(){</span>
    <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">"hovering"</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">});</span></code></pre>
     </figure> 
     <p>An element is hovered when the mouse moves less than a certain distance in a specific time over the element. These values can be modified either globally by setting <code class="highlighter-rouge">$.Hover.delay</code> and <code class="highlighter-rouge">$.Hover.distance</code> or individually during <code class="highlighter-rouge">hoverinit</code>:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s2">".option"</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">"hoverinit"</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">,</span> <span class="nx">hover</span><span class="p">){</span>
  <span class="c1">//set the distance to 10px</span>
  <span class="nx">hover</span><span class="p">.</span><span class="nx">distance</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
  <span class="c1">//set the delay to 200ms</span>
  <span class="nx">hover</span><span class="p">.</span><span class="nx">delay</span><span class="p">(</span><span class="mi">200</span><span class="p">);</span>
<span class="p">})</span></code></pre>
     </figure> 
     <p>You can also set <code class="highlighter-rouge">hover.leave(time)</code> to set a time that the hover should stay active for after the mouse left. The following example shows <code class="highlighter-rouge">jQuery.event.hover</code> with different settings for distance, delay and leave:</p> 
     <iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/uGUju/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="key-eventkeyname">key <code class="highlighter-rouge">event.keyName()</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/key.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.event.key">jQuery.event.key</a> adds a <code class="highlighter-rouge">.keyName()</code> method to the event object that returns a string representation of the current key:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s2">"input"</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'keypress'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">){</span>
  <span class="c1">// Don't allow backspace keys</span>
  <span class="k">if</span><span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">keyName</span><span class="p">()</span> <span class="o">==</span> <span class="s1">'\b'</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">ev</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
  <span class="p">}</span>
  <span class="k">if</span><span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">keyName</span><span class="p">()</span> <span class="o">==</span> <span class="s1">'f1'</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">alert</span><span class="p">(</span><span class="s1">'I could be a tooltip for help'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">});</span></code></pre>
     </figure> 
     <p>The following key names are mapped by default:</p> 
     <ul> 
      <li><code class="highlighter-rouge">\b</code> - backspace</li> 
      <li><code class="highlighter-rouge">\t</code> - tab</li> 
      <li><code class="highlighter-rouge">\r</code> - enter key</li> 
      <li><code class="highlighter-rouge">shift</code>, <code class="highlighter-rouge">ctrl</code>, <code class="highlighter-rouge">alt</code></li> 
      <li><code class="highlighter-rouge">pause-break</code>, <code class="highlighter-rouge">caps</code>, <code class="highlighter-rouge">escape</code>, <code class="highlighter-rouge">num-lock</code>, <code class="highlighter-rouge">scroll-loc</code>, <code class="highlighter-rouge">print</code></li> 
      <li><code class="highlighter-rouge">page-up</code>, <code class="highlighter-rouge">page-down</code>, <code class="highlighter-rouge">end</code>, <code class="highlighter-rouge">home</code>, <code class="highlighter-rouge">left</code>, <code class="highlighter-rouge">up</code>, <code class="highlighter-rouge">right</code>, <code class="highlighter-rouge">down</code>, <code class="highlighter-rouge">insert</code>, <code class="highlighter-rouge">delete</code></li> 
      <li><code class="highlighter-rouge">' '</code> - space</li> 
      <li><code class="highlighter-rouge">0-9</code> - number key pressed</li> 
      <li><code class="highlighter-rouge">a-z</code> - alpha key pressed</li> 
      <li><code class="highlighter-rouge">num0-9</code> - number pad key pressed</li> 
      <li><code class="highlighter-rouge">f1-12</code> - function keys pressed</li> 
      <li>Symbols: <code class="highlighter-rouge">/</code>, <code class="highlighter-rouge">;</code>, <code class="highlighter-rouge">:</code>, <code class="highlighter-rouge">=</code>, <code class="highlighter-rouge">,</code>, <code class="highlighter-rouge">-</code>, <code class="highlighter-rouge">.</code>, <code class="highlighter-rouge">/</code>, <code class="highlighter-rouge">[</code>, <code class="highlighter-rouge">\</code>, <code class="highlighter-rouge">]</code>, <code class="highlighter-rouge">'</code>, <code class="highlighter-rouge">"</code></li> 
     </ul> 
     <p>The following example shows the keyname for <code class="highlighter-rouge">keydown</code>, <code class="highlighter-rouge">keyup</code> and <code class="highlighter-rouge">keypress</code> events on the input field:</p> 
     <iframe style="width: 100%; height: 230px" src="http://jsfiddle.net/9eE7D/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="pause">pause</h2> 
     <p><a href="http://donejs.com/docs.html#!jQuery.event.pause">jQuery.event.pause</a> adds a default event handler, <code class="highlighter-rouge">event.pause()</code> and <code class="highlighter-rouge">event.resume()</code> for pausing and resuming event propagation and <code class="highlighter-rouge">$.fn.triggerAsync</code> for triggering an event asynchronously and executing a callback when propagation is finished.</p> 
     <p>This is very useful for creating event oriented jQuery widgets that provide default behavior for certain events. A widget user can intercept any of these events, pause it and perform other actions before resuming the default action or prevent it entirely.</p> 
     <h3 id="example">Example</h3> 
     <p>The following example implements a <code class="highlighter-rouge">tabs</code> widget using <a href="http://canjs.us">CanJS</a>. Each tab panel contains a form to input data. When the form data changes and you go to another tab it will ask you to save these changes before moving on. This will pause the tabs <code class="highlighter-rouge">hide</code> event until you either confirmed or declined to save the form. On <em>cancel</em> the event will be prevented and the widget will stay in the current tab:</p> 
     <iframe style="width: 100%; height: 350px" src="http://jsfiddle.net/4Bg3Z/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h3 id="triggerasync-eltriggerasyncevent-success-prevented">triggerAsync <code class="highlighter-rouge">$(el).triggerAsync(event, [success], [prevented])</code></h3> 
     <p><a href="http://jquerypp.com/release/latest/docs/default.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.fn.triggerAsync">jQuery.fn.triggerAsync</a> triggers an event and calls a <em>success</em> handler when it has finished propagating through the DOM and no handler called <code class="highlighter-rouge">event.preventDefault()</code> or returned <code class="highlighter-rouge">false</code>. The <em>prevented</em> callback will be used otherwise:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'panel'</span><span class="p">).</span><span class="nx">triggerAsync</span><span class="p">(</span><span class="s1">'show'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
    <span class="nx">$</span><span class="p">(</span><span class="s1">'#panel'</span><span class="p">).</span><span class="nx">show</span><span class="p">();</span>
  <span class="p">},</span><span class="kd">function</span><span class="p">(){</span>
    <span class="nx">$</span><span class="p">(</span><span class="s1">'#other'</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">'error'</span><span class="p">);</span>
<span class="p">});</span></code></pre>
     </figure> 
     <h3 id="default-events-eventnamedefault">default events <code class="highlighter-rouge">eventname.default</code></h3> 
     <p><a href="http://jquerypp.com/release/latest/docs/default.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.event.default">jQuery.event.default</a> adds default event handlers. A default event runs when all other event handlers have been triggered and none has called <code class="highlighter-rouge">event.preventDefault()</code> or returned <code class="highlighter-rouge">false</code>. Default events are prefixed with the <code class="highlighter-rouge">default</code> namespace. The following example adds a default <code class="highlighter-rouge">toggle</code> event:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'#text'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'toggle.default'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">toggle</span><span class="p">();</span>
<span class="p">});</span>

<span class="nx">$</span><span class="p">(</span><span class="s1">'#text'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'toggle'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">,</span> <span class="nx">animation</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="nx">animation</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">toggle</span><span class="p">(</span><span class="nx">animation</span><span class="p">);</span>
        <span class="nx">ev</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">});</span></code></pre>
     </figure> 
     <h3 id="pause-and-resume-eventpause-eventresume">pause and resume <code class="highlighter-rouge">event.pause()</code> <code class="highlighter-rouge">event.resume()</code></h3> 
     <p><a href="http://jquerypp.com/release/latest/docs/pause.html">Annotated source</a></p> 
     <p>Pausing an event works similar to <a href="http://api.jquery.com/event.stopImmediatePropagation/">.stopImmediatePropagation()</a> by calling <code class="highlighter-rouge">event.pause()</code>. Calling <code class="highlighter-rouge">event.resume()</code> will continue propagation. This is great when doing asynchronous processing in an event handler:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'#todos'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'show'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">){</span>
  <span class="nx">ev</span><span class="p">.</span><span class="nx">pause</span><span class="p">();</span>

  <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">load</span><span class="p">(</span><span class="s1">'todos.html'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
    <span class="nx">ev</span><span class="p">.</span><span class="nx">resume</span><span class="p">();</span>
  <span class="p">});</span>
<span class="p">});</span></code></pre>
     </figure> 
     <h2 id="resize-resize">resize <code class="highlighter-rouge">resize</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/resize.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.event.resize">jQuery.event.resize</a> allows you to listen to <code class="highlighter-rouge">resize</code> events on arbitrary elements. Unlike other events that bubble from the target element to the document the <code class="highlighter-rouge">resize</code> event will propagate from the outside-in. This means that outside elements will always resize first. Trigger the <code class="highlighter-rouge">resize</code> event whenever the dimensions of an element change and inside elements should adjust as well.</p> 
     <p>The following example will always resize to it’s full parent width and height</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'#foo'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'resize'</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">parent</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">();</span>
  <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">width</span><span class="p">(</span><span class="nx">parent</span><span class="p">.</span><span class="nx">width</span><span class="p">()).</span><span class="nx">height</span><span class="p">(</span><span class="nx">parent</span><span class="p">.</span><span class="nx">height</span><span class="p">());</span>
<span class="p">})</span>

<span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">).</span><span class="nx">resize</span><span class="p">();</span></code></pre>
     </figure> 
     <p>The <code class="highlighter-rouge">resize</code> event makes creating application like layouts a lot easier. The following example creates a common layout with top, left, right and center elements within a container. Use the blue square to resize the outside container. The <code class="highlighter-rouge">resize</code> event will take care of adjusting the dimensions of the inside elements:</p> 
     <iframe style="width: 100%; height: 350px" src="http://jsfiddle.net/3dRGM/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="swipe-swipeleft-swiperight-swipeup-swipedown-swipe">swipe <code class="highlighter-rouge">swipeleft</code> <code class="highlighter-rouge">swiperight</code> <code class="highlighter-rouge">swipeup</code> <code class="highlighter-rouge">swipedown</code> <code class="highlighter-rouge">swipe</code></h2> 
     <p><a href="http://jquerypp.com/release/latest/docs/swipe.html">Annotated source</a></p> 
     <p><a href="http://donejs.com/docs.html#!jQuery.event.swipe">jQuery.event.swipe</a> adds support for swipe motions providing the <em>delegatable</em> <code class="highlighter-rouge">swipeleft</code>, <code class="highlighter-rouge">swiperight</code>, <code class="highlighter-rouge">swipedown</code>, <code class="highlighter-rouge">swipeup</code> and <code class="highlighter-rouge">swipe</code> events:</p> 
     <figure class="highlight">
      <pre><code class="language-javascript" data-lang="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">'#swiper'</span><span class="p">).</span><span class="nx">on</span><span class="p">({</span>
  <span class="s1">'swipe'</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Swiping'</span><span class="p">);</span>
  <span class="p">},</span>
  <span class="s1">'swipeleft'</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Swiping left'</span><span class="p">);</span>
  <span class="p">},</span>
  <span class="s1">'swiperight'</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Swiping right'</span><span class="p">);</span>
  <span class="p">},</span>
  <span class="s1">'swipeup'</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Swiping up'</span><span class="p">);</span>
  <span class="p">},</span>
  <span class="s1">'swipedown'</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ev</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Swiping down'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">});</span></code></pre>
     </figure> 
     <p>Set <code class="highlighter-rouge">jQuery.event.swipe.delay</code> to the maximum time the swipe motion is allowed to take (default is 500ms).</p> 
     <p>Swipe (using the mouse) in the green area in the following example to see the direction of the swipe:</p> 
     <iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/abaZN/embedded/result,html,js,css" allowfullscreen frameborder="0">JSFiddle</iframe> 
     <h2 id="get-help">Get Help</h2> 
     <p>This site highlights the most important features of jQuery++. You can find the full API documentation on the <a href="http://donejs.com/docs.html#!jquerypp">DoneJS documentation</a> page.</p> 
     <p>There are also several places you can go to ask questions or get help debugging problems.</p> 
     <h3 id="twitter">Twitter</h3> 
     <p>Follow <a href="http://twitter.com/#!/jquerypp">@jquerypp</a> for updates, announcements and quick answers to your questions.</p> 
     <h3 id="forums">Forums</h3> 
     <p>Visit the <a href="http://forum.javascriptmvc.com/#Forum/jquerypp">Forums</a> for questions requiring more than 140 characters. DoneJS has a thriving community that’s always eager to help out.</p> 
     <h3 id="irc">IRC</h3> 
     <p>The DoneJS IRC channel (<code class="highlighter-rouge">#donejs</code> on <strong>irc.freenode.net</strong>) is an awesome place to hang out with fellow DoneJS users and get your questions answered quickly.</p> 
     <p>__Help Us Help You __</p> 
     <p>Help the community help you by using the <a href="http://jsfiddle.net/donejs/ZLvA5/">jQuery++ jsFiddle template</a>. Just fork it and include the URL when you are asking for help.</p> 
     <h3 id="get-help-from-bitovi">Get Help from Bitovi</h3> 
     <p>Bitovi <em>(developers of jQuery++)</em> offers <a href="http://bitovi.com/training/">training</a> and <a href="http://bitovi.com/consulting/">consulting</a> for your team. They can also provide private one-on-one support staffed by their JavaScript/Ajax experts. <a href="/cdn-cgi/l/email-protection#284b47465c494b5c684a415c475e41064b4745">Contact Bitovi</a> if you’re interested.</p> 
     <h2 id="why-jquery">Why jQuery++</h2> 
     <h3 id="easy-to-use">Easy to use</h3> 
     <p>jQuery++ does things the jQuery way, which makes it really easy to learn if you are already familiar with jQuery. Get functionality that was always tricky to implement from one coherent library:</p> 
     <ul> 
      <li>Serialize forms into objects with <a href="#formparams">formParams</a></li> 
      <li><a href="#drag">Drag</a> &amp; <a href="#drop">drop</a> events - no need for jQuery UI</li> 
      <li><a href="#resize">Resize</a> elements the right way</li> 
      <li>Listen to <a href="#swipe">swipe events</a> for mobile apps</li> 
      <li><a href="#pause">Pause and resume</a> events for event oriented JavaScript applications</li> 
     </ul> 
     <h3 id="flexible">Flexible</h3> 
     <p>You don’t have to use all of jQuery++. Just chose the plugins you want using the <a href="#get_jquery__-download_builder">download builder</a>, load them with <a href="#get_jquery__-using_steal">StealJS</a> or as <a href="#get_jquery__-using_amd">AMD modules</a>. Each plugin only includes the dependencies it actually needs, so your JavaScript application will stay as small as possible.</p> 
     <p>Delegatable events also make it easy to integrate with libraries like <a href="http://canjs.us">CanJS</a> and <a href="http://documentcloud.github.com/backbone/">Backbone</a>. No custom APIs to take care of, just the jQuery way of handling events.</p> 
     <h3 id="fast">Fast</h3> 
     <p>Some jQuery++ plugins can help to significantly speed up your applications. Use</p> 
     <ul> 
      <li><a href="#compare">compare</a> to quickly compare element positions</li> 
      <li><a href="#destroyed">destroyed</a> to avoid memory leaks and keep your references up to date when elements get removed from the DOM</li> 
     </ul> 
     <h3 id="supported">Supported</h3> 
     <p>jQuery++ is developed by <a href="http://bitovi.com">Bitovi</a>. We’re active on the forums, but should the need arise, can also be hired for paid support, training, and development.</p> 
     <h2 id="developing-jquery">Developing jQuery++</h2> 
     <p>To develop jQuery++, add features, etc, you first must install DoneJS. DoneJS is the parent project of jQuery++ and the 4.0 version of JavaSciptMVC. It has DocumentJS and Steal as submodules that are used to generate the documentation and build the jQuery++ downloads.</p> 
     <h3 id="installing">Installing</h3> 
     <ol> 
      <li> <p>Clone DoneJS with:</p> 
       <div class="highlighter-rouge">
        <pre class="highlight"><code>git clone git://github.com/bitovi/donejs
</code></pre> 
       </div> </li> 
      <li> <p>Install all submodules by running</p> 
       <div class="highlighter-rouge">
        <pre class="highlight"><code>cd donejs
git submodule update --init --recursive
</code></pre> 
       </div> <p>Depending on your version of git, you might need to cd into each submodule and run <code class="highlighter-rouge">git checkout</code>.</p> </li> 
      <li> <p>Fork <a href="https://github.com/bitovi/jquerypp">jquerypp</a> on Github</p> </li> 
      <li> <p>Add your own fork as a remote in the <code class="highlighter-rouge">jquery</code> submodule:</p> 
       <div class="highlighter-rouge">
        <pre class="highlight"><code>cd jquery
git checkout master
git remote add fork <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="74131d0034131d001c01165a171b19">[email&nbsp;protected]</a>:&lt;username&gt;/jquerypp.git
</code></pre> 
       </div> </li> 
     </ol> 
     <h3 id="developing">Developing</h3> 
     <p>After <a href="#developing_jquery__-installing">installing</a> jQuery++ and DoneJS, you’ll find the jQuery++ files in the <code class="highlighter-rouge">jquery</code> folder. Within <code class="highlighter-rouge">jquery</code>, the plugins are located in the <code class="highlighter-rouge">dom</code> and <code class="highlighter-rouge">event</code> folders. The <code class="highlighter-rouge">controller</code>, <code class="highlighter-rouge">model</code>, <code class="highlighter-rouge">class</code> and <code class="highlighter-rouge">view</code> folder are currently kept for backwards compatibility with JavaScriptMVC 3.2/3.3 and shouldn’t be modified. For each plugin (for example <code class="highlighter-rouge">jquery/dom/compare</code>) you will find:</p> 
     <ul> 
      <li><code class="highlighter-rouge">compare.html</code> - A demo page</li> 
      <li><code class="highlighter-rouge">compare.js</code> - The actual commented and uncompressed source code</li> 
      <li><code class="highlighter-rouge">compare.md</code> - The overview page (used in the generated documentation)</li> 
      <li><code class="highlighter-rouge">compare_test.js</code> - The plugin tests</li> 
      <li><code class="highlighter-rouge">qunit.html/funcunit.html</code> - The unit and/or functional tests</li> 
     </ul> 
     <p>To develop jQuery++:</p> 
     <ol> 
      <li>Edit the <em>plugin’s</em> file.</li> 
      <li>Add tests to the <em>plugin_test.js</em> test file.</li> 
      <li>Open the plugin test page <code class="highlighter-rouge">qunit.html</code> or <code class="highlighter-rouge">funcunit.html</code> and make sure everything passes</li> 
      <li>Open the big test page in <code class="highlighter-rouge">jquery/qunit.html</code> and make sure all tests pass</li> 
      <li>Commit your changes and push to your fork (<code class="highlighter-rouge">git push fork &lt;branch&gt;</code>)</li> 
      <li>Submit a pull request!</li> 
     </ol> 
     <h3 id="documentation">Documentation</h3> 
     <p>To edit jquerypp.com, installing jQuery++ and DoneJS is not necessary. Simply <em>fork</em> and edit the github pages’s <a href="https://github.com/bitovi/jquerypp/blob/gh-pages/index.md">index.md page</a> online. Don’t forget to submit a pull request.</p> 
     <p>To edit the documentation at <a href="http://doneJS.com/docs.html">DoneJS.com</a>:</p> 
     <ol> 
      <li><a href="#developing_jquery__-installing">install</a> jQuery++ and DoneJS.</li> 
      <li>Edit the markdown and js files in the <code class="highlighter-rouge">jquery</code> folder.</li> 
      <li> <p>In the <code class="highlighter-rouge">donejs</code> root folder generate the docs with:</p> 
       <div class="highlighter-rouge">
        <pre class="highlight"><code>./js site/scripts/doc.js
</code></pre> 
       </div> <p>View them at <code class="highlighter-rouge">site/docs.html</code></p> </li> 
      <li>Submit a pull request.</li> 
     </ol> 
     <h3 id="making-a-build">Making a build</h3> 
     <p>To make a jQuery++ build, run:</p> 
     <div class="highlighter-rouge">
      <pre class="highlight"><code>js jquery/build/make.js
</code></pre> 
     </div> 
     <p>It puts the downloads in <code class="highlighter-rouge">jquery/dist</code>. To build a specific version check out the <a href="https://github.com/bitovi/jquerypp/tags">git tag</a> you want to build and run the above command.</p> 
     <h3 id="list-of-heroes">List of heroes</h3> 
     <p>The following lists everyone who’s contributed something to CanJS. If we’ve forgotten you, please add yourself.</p> 
     <p>First, thanks to everyone who’s contributed to <a href="https://github.com/bitovi/javascriptmvc/contributors">JavaScriptMVC</a> and <a href="https://github.com/jupiterjs/jquerymx/contributors">jQueryMX</a>, and the people at <a href="http://bitovi.com/people/">Bitovi</a>. This page is for contributors after jQuery++’s launch:</p> 
     <p><a href="https://github.com/callumacrae">callumacrae</a> - <a href="https://github.com/bitovi/jquerypp/pull/11">Width property for jQuery.selection</a> and documentation fixes. <a href="https://github.com/fabianonunes">fabianonunes</a> - Fixed several errors in the build process. <a href="https://github.com/jbrumwell">jbrumwell</a> - Added several useful features for drag/drop events and <a href="https://github.com/jeffrose">jeffrose</a> - <a href="https://github.com/bitovi/jquerypp/pull/68">1</a> <a href="https://github.com/iamnoah">iamnoah</a> - <a href="https://github.com/bitovi/jquerypp/pull/65">1</a></p> 
     <h3 id="change-log">Change Log</h3> 
     <p><strong>1.0.1</strong> (February 6th 2013)</p> 
     <ul> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/pull/65">Force hover leave on new mouseenter</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/64">Removing the element being hovered prevents all future hoverenter</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/63">hover.leave != 0 prevents hover of next element with same selecto</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/pull/71">Changing jQuery references to local $</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/67">Breaks in jQuery.noConflict(true) Scenario</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/pull/66">Can’t download drag.limit, drag.step, and drag.scroll from downloader on website</a></li> 
      <li>feature: <a href="https://github.com/bitovi/jquerypp/commit/692ed50a7b43fb2c6bfb9d89c5e0505ddcbd6595">jQuery 1.9.x support</a></li> 
      <li>feature: Added to the new <a href="http://plugins.jquery.com/jquerypp">jQuery plugin repository</a></li> 
     </ul> 
     <p><strong>1.0.0</strong> (November 20th 2012)</p> 
     <ul> 
      <li>feature: jQuery 1.8.0+ compatibility</li> 
      <li>feature: <a href="https://github.com/bitovi/jquerypp/pull/43">dragcleanup event</a></li> 
      <li>feature: <a href="https://github.com/bitovi/jquerypp/issues/25">Reverse and move event</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/pull/40">pass through scrollTop in animate</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/pull/45">Fastfix: Original can be undefined</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/35">Animate Scroll not working</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/28">.stop() does not stop callbacks from being executed</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/33">jQuery.event.swipe.max isn’t actually being used</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/39">Range triggers error on IE8</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/pull/51">[FormParams] convertValue function: Null value to undefined (Internet Explorer Fix)</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/57">HoverInit delay 0 does not trigger hoverenter if immediately moused out</a></li> 
     </ul> 
     <p><strong>1.0 Beta 2</strong></p> 
     <ul> 
      <li>feature: <a href="https://github.com/bitovi/jquerypp/issues/16">Key mapping tool for jQuery.event.key for international characters</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/24">jQuery.formParams converts disabled fields</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/22">jQuery.animate supports all parameters</a></li> 
      <li>change: <a href="https://github.com/bitovi/jquerypp/issues/23">jQuery.event.drag supports touch events</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/19">jQuery.animate .stop() doesn’t work</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/17">Bug with duplicate sub keys</a></li> 
      <li>change: <a href="https://github.com/bitovi/jquerypp/pull/11">Added width property to jQuery.selection</a></li> 
      <li>fix: <a href="https://github.com/bitovi/jquerypp/issues/5">Security error in jQuery.animate</a></li> 
      <li><em>jquerypp.com</em> 
       <ul> 
        <li>jsFiddle examples for <a href="#cookie">cookie</a>, <a href="#compare">compare</a>, <a href="#range">range</a>, <a href="#styles">styles</a> and <a href="#key">key</a></li> 
        <li>Links to annotated sources (<a href="http://jquerypp.com/release/latest/docs/animate.html">e.g. jQuery.animate</a>)</li> 
        <li>Changelog and list of heroes section</li> 
       </ul> </li> 
     </ul> 
     <p><strong>1.0 Beta</strong> (June 1st 2012)</p> 
     <ul> 
      <li>Released!</li> 
     </ul> 
    </div> 
   </div> 
  </div> 
  <script style="display: none !important;">!function(e,t,r,n,c,a,l){function i(t,r){return r=e.createElement('div'),r.innerHTML='<a href="'+t.replace(/"/g,'&quot;')+'"></a>',r.childNodes[0].getAttribute('href')}function o(e,t,r,n){for(r='',n='0x'+e.substr(t,2)|0,t+=2;t<e.length;t+=2)r+=String.fromCharCode('0x'+e.substr(t,2)^n);return i(r)}try{for(c=e.getElementsByTagName('a'),l='/cdn-cgi/l/email-protection#',n=0;n<c.length;n++)try{(t=(a=c[n]).href.indexOf(l))>-1&&(a.href='mailto:'+o(a.href,t+l.length))}catch(e){}for(c=e.querySelectorAll('.__cf_email__'),n=0;n<c.length;n++)try{(a=c[n]).parentNode.replaceChild(e.createTextNode(o(a.getAttribute('data-cfemail'),0)),a)}catch(e){}}catch(e){}}(document);</script>
  <script src="javascripts/jquery-1.7.1.js" type="text/javascript"></script> 
  <script src="javascripts/can.jquery-1.0.2.js" type="text/javascript"></script> 
  <script src="javascripts/can.construct.proxy.js" type="text/javascript"></script> 
  <script src="javascripts/jquerypp.js" type="text/javascript"></script> 
  <script src="javascripts/application.js" type="text/javascript"></script>   
 </body>
</html>