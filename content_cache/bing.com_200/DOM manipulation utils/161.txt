<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
 <head> 
  <title>The Java Packages</title> 
 </head> 
 <body> 
  <table width="100%"> 
   <tbody>
    <tr> 
     <td align="left"> <a href="usepkgs.html"><img src="../../images/PreviousArrow.gif" width="26" height="26" align="bottom" border="0" alt="Previous | "></a><a href="../intl/index.html"><img src="../../images/NextArrow.gif" width="26" height="26" align="bottom" border="0" alt="Next | "></a><a href="../../index.html"><img src="../../images/WayUpArrow.gif" width="26" height="26" align="bottom" border="0" alt="Trail Map | "></a><a href="../index.html"><img src="../../images/javaHeader.gif" width="26" height="26" align="bottom" border="0" alt="Writing Java Programs | "></a> </td> 
     <td align="right"> <a href="index.html"><strong><em>Objects, Classes, and Interfaces</em></strong></a> </td> 
    </tr> 
   </tbody>
  </table> 
  <p> </p>
  <hr size="4"> 
  <h2> The Java Packages <a name="ONE_ONE_NOTE"><font size="-1"><em>(</em></font></a><font size="-1"><em><a href="_1_1notes.html#javapkgs.html"><img src="../../images/jdk1_1.gif" height="20" width="20" alt="1.1" border="0" align="middle"></a><a href="_1_1notes.html#javapkgs.html">notes</a>)</em></font> </h2> 
  <p> </p>
  <blockquote>
    Eight packages comprise the standard Java development environment. 
   <a name="java.lang"> </a>
   <h4><a name="java.lang">The Java Language Package <font size="-1"><em>(</em></font></a><font size="-1"><em><a href="_1_1notes.html#"><img src="../../images/jdk1_1.gif" height="20" width="20" alt="1.1" border="0" align="middle"></a><a href="_1_1notes.html#">notes</a>)</em></font></h4>  
   <blockquote>
     The Java language package, also known as 
    <code>java.lang</code>, contains classes that are core to the Java language. The classes in this package are grouped as follows: 
    <dl> 
     <dt> 
      <strong><code>Object</code></strong> 
     </dt>
     <dd>
       The granddaddy of all classes--the class from which all others inherit. This class was covered previously in this lesson in 
      <a href="objectclass.html">The <code>Object</code> Class</a>. 
     </dd>
     <dt> 
      <strong>Data Type Wrappers</strong> 
     </dt>
     <dd>
       A collection of classes used to wrap variables of a primitive data type: 
      <code>Boolean</code>, 
      <code>Character</code>, 
      <code>Double</code>, 
      <code>Float</code>, 
      <code>Integer</code> and 
      <code>Long</code>. 
     </dd>
     <dt> 
      <strong>Strings</strong> 
     </dt>
     <dd>
       Two classes that implement character data. 
      <a href="../strings/index.html">The String and StringBuffer Classes</a>
      <a href="../strings/index.html"><img src="../../images/javaIcon.gif" width="20" height="20" border="0" alt="(in the Writing Java Programs trail)"></a> is a thorough lesson on the use of both types of strings. 
     </dd>
     <dt> 
      <strong><code>System</code> and <code>Runtime</code></strong> 
     </dt>
     <dd>
       These two classes provide let your programs use system resources. 
      <code>System</code> provides a system-independent programming interface to system resources and 
      <code>Runtime</code> gives you direct system-specific access to the runtime environment. 
      <a href="../system/index.html">Using System Resources</a>
      <a href="../system/index.html"><img src="../../images/javaIcon.gif" width="20" height="20" border="0" alt="(in the Writing Java Programs trail)"></a> describes both the 
      <code>System</code> and 
      <code>Runtime</code> classes and their methods. 
     </dd>
     <dt> 
      <strong>Threads</strong> 
     </dt>
     <dd>
       The 
      <code>Thread</code>, 
      <code>ThreadDeath</code> and 
      <code>ThreadGroup</code> classes implement the multi-threading capabilities so important to the Java language. The java.lang package also defines the 
      <code>Runnable</code> interface. 
      <code>Runnable</code> makes it convenient for Java class to be active without subclassing the 
      <code>Thread</code> class. Through an example-oriented approach 
      <a href="../threads/index.html">Threads of Control</a>
      <a href="../threads/index.html"><img src="../../images/javaIcon.gif" width="20" height="20" border="0" alt="(in the Writing Java Programs trail)"></a> will teach you about Java threads. 
     </dd>
     <dt> 
      <strong>Classes</strong> 
     </dt>
     <dd>
       The 
      <code>Class</code> class provides a runtime description of a class and the 
      <code>ClassLoader</code> class allows you to load classes into your program during runtime. 
     </dd>
     <dt> 
      <strong><code>Math</code></strong> 
     </dt>
     <dd>
       The 
      <code>Math</code> class provides a library of math routines and values such as pi. 
     </dd>
     <dt> 
      <strong><code>Exception</code>, <code>Error</code>, and <code>Throwable</code></strong> 
     </dt>
     <dd>
       When an error occurs in a Java program, the program throws an object which indicates what the problem was and the state of the interpreter when the error occurred. Only objects that derive from the 
      <code>Throwable</code> class can be thrown. There are two main subclasses of 
      <code>Throwable</code>: 
      <code>Exception</code> and 
      <code>Error</code>. Exceptions are a form of 
      <code>Throwable</code> that "normal" programs may try to catch. Errors are used for more catastophic errors--normal programs should not catch errors. The 
      <code>java.lang</code> package contains the 
      <code>Throwable</code>, 
      <code>Exception</code>, and 
      <code>Error</code> classes, and numerous subclasses of 
      <code>Exception</code> and 
      <code>Error</code> that represent specific problems. 
      <a href="../exceptions/index.html">Handling Error Using Exceptions</a>
      <a href="../exceptions/index.html"><img src="../../images/javaIcon.gif" width="20" height="20" border="0" alt="(in the Writing Java Programs trail)"></a> shows you how to use exceptions in your Java programs to handle errors. 
     </dd>
     <dt> 
      <strong><code>Process</code></strong> 
     </dt>
     <dd> 
      <code>Process</code> objects represent the system process that is created when you use 
      <code>Runtime</code> to execute system commands. The 
      <code>java.lang</code> packages defines and implements the generic 
      <code>Process</code> class. 
     </dd>
    </dl> The compiler automatically imports this package for you. No other packages are automatically imported. 
    <a name="java.io"> </a>
    <h4><a name="java.io">The Java I/O Package <font size="-1"><em>(</em></font></a><font size="-1"><em><a href="_1_1notes.html#"><img src="../../images/jdk1_1.gif" height="20" width="20" alt="1.1" border="0" align="middle"></a><a href="_1_1notes.html#">notes</a>)</em></font></h4>  
    <blockquote>
      The Java I/O Package (
     <code>java.io</code>) provides a set of input and output streams used to read and write data to files or other input and output sources. The classes and interfaces defined in 
     <code>java.io</code> are covered fully in 
     <a href="../io/index.html">Input and Output Streams</a>
     <a href="../io/index.html"><img src="../../images/javaIcon.gif" width="20" height="20" border="0" alt="(in the Writing Java Programs trail)"></a>. 
    </blockquote> 
    <a name="java.util"> </a>
    <h4><a name="java.util">The Java Utility Package <font size="-1"><em>(</em></font></a><font size="-1"><em><a href="_1_1notes.html#"><img src="../../images/jdk1_1.gif" height="20" width="20" alt="1.1" border="0" align="middle"></a><a href="_1_1notes.html#">notes</a>)</em></font></h4>  
    <blockquote>
      This Java package, 
     <code>java.util</code>, contains a collection of utility classes. Among them are several generic data structures (
     <code>Dictionary</code>, 
     <code>Stack</code>, 
     <code>Vector</code>, 
     <code>Hashtable</code>) a useful object for tokenizing a string and another for manipulating calendar dates. The 
     <code>java.util</code> package also contains the 
     <code>Observer</code> interface and 
     <code>Observable</code> class, which allow objects to notify one another when they change. The 
     <code>java.util</code> classes aren't covered separately in this tutorial although some examples use these classes. 
    </blockquote> 
    <a name="java.net"> </a>
    <h4><a name="java.net">The Java Networking Package <font size="-1"><em>(</em></font></a><font size="-1"><em><a href="_1_1notes.html#"><img src="../../images/jdk1_1.gif" height="20" width="20" alt="1.1" border="0" align="middle"></a><a href="_1_1notes.html#">notes</a>)</em></font></h4>  
    <blockquote>
      The 
     <code>java.net</code> package contains classes and interface definitions that implement various networking capabilities. The classes in this package include a class that implement a URL, a connection to a URL, a socket connection, and a datagram packet. You can use these classes to implement client-server applications and other networking communication applications. 
     <a href="../../networking/index.html">Custom Networking and Security</a>
     <a href="../../networking/index.html"><img src="../../images/networkingIcon.gif" width="20" height="20" border="0" alt="(in the Networking trail)"></a> has several examples using these classes, including a client-server example and an example that uses datagrams. 
    </blockquote> 
    <a name="java.applet"> </a>
    <h4><a name="java.applet">The Applet Package <font size="-1"><em>(</em></font></a><font size="-1"><em><a href="_1_1notes.html#"><img src="../../images/jdk1_1.gif" height="20" width="20" alt="1.1" border="0" align="middle"></a><a href="_1_1notes.html#">notes</a>)</em></font></h4>  
    <blockquote>
      This package contains the 
     <code>Applet</code> class -- the class that you must subclass if you're writing an applet. Included in this package is the 
     <code>AudioClip</code> interface which provides a very high level abstraction of audio. 
     <a href="../../applet/index.html">Writing Applets</a>
     <a href="../../applet/index.html"><img src="../../images/appletIcon.gif" width="20" height="20" border="0" alt="(in the Writing Applets trail)"></a> explains the ins and outs of developing your own applets. 
    </blockquote> 
    <a name="java.awt"> </a>
    <h4><a name="java.awt">The Abstract Window Toolkit Packages <font size="-1"><em>(</em></font></a><font size="-1"><em><a href="_1_1notes.html#"><img src="../../images/jdk1_1.gif" height="20" width="20" alt="1.1" border="0" align="middle"></a><a href="_1_1notes.html#">notes</a>)</em></font></h4>  
    <blockquote>
      Three packages comprise the Abstract Window Toolkit: 
     <code>java.awt</code>, 
     <code>java.awt.image</code>, and 
     <code>java.awt.peer</code>. 
     <dl> 
      <dt> 
       <b>AWT Package</b> 
      </dt>
      <dd>
        The 
       <code>java.awt</code> package provides graphical user interface (GUI) elements that are used to get input from and display information to the user. These elements include windows, buttons, scrollbars, and text items. 
      </dd>
      <dt> 
       <b>AWT Image Package</b> 
      </dt>
      <dd>
        The 
       <code>java.awt.image</code> package contains classes and interfaces for managing image data, such as setting the color model, cropping, color filtering, setting pixel values, and grabbing snapshots of the screen. 
      </dd>
      <dt> 
       <b>AWT Peer Package</b> 
      </dt>
      <dd>
        The 
       <code>java.awt.peer</code> package contains classes and interfaces that connect platform-independent AWT components to their platform-dependent implementation (such as Motif widgets or Microsoft Windows controls). 
      </dd>
     </dl> 
     <a href="../../ui/index.html">Creating a User Interface</a>
     <a href="../../ui/index.html"><img src="../../images/uiIcon.gif" width="20" height="20" border="0" alt="(in the Creating a User Interface trail)"></a> covers all three of the AWT packages. 
    </blockquote> 
   </blockquote> 
   <p> </p>
   <hr size="4"> 
   <p> </p>
   <table width="100%"> 
    <tbody>
     <tr> 
      <td align="left"> <a href="usepkgs.html"><img src="../../images/PreviousArrow.gif" width="26" height="26" align="top" border="0" alt="Previous | "></a><a href="../intl/index.html"><img src="../../images/NextArrow.gif" width="26" height="26" align="top" border="0" alt="Next | "></a><a href="../../index.html"><img src="../../images/WayUpArrow.gif" width="26" height="26" align="top" border="0" alt="Trail Map | "></a><a href="../index.html"><img src="../../images/javaHeader.gif" width="26" height="26" align="top" border="0" alt="Writing Java Programs | "></a> </td> 
      <td align="right"> <a href="index.html"><strong><em>Objects, Classes, and Interfaces</em></strong></a> </td> 
     </tr> 
    </tbody>
   </table>   
  </blockquote>
 </body>
</html>