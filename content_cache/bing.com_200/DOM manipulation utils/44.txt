<!doctype html>
<html lang="en">
 <head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <link type="text/css" media="all" href="https://1npo9l3lml0zvr6w62acc3t1-wpengine.netdna-ssl.com/wp-content/cache/autoptimize/css/autoptimize_5bcd837d28cc2dd2fca9b5981805d61f.css" rel="stylesheet">
  <title>Get Started with vue-test-utils and Jest - via @codeship | via @codeship</title>
  <link href="https://fonts.googleapis.com/css?family=Lato:400,900" rel="stylesheet" type="text/css">
  <link rel="shortcut icon" href="https://1npo9l3lml0zvr6w62acc3t1-wpengine.netdna-ssl.com/wp-content/themes/codeship/favicon.ico">
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0 feed" href="http://blog.codeship.com/feed/"> 
  <script src="https://use.fontawesome.com/f6a223e1a7.js"></script> 
  <meta name="viewport" content="width=device-width">
  <meta name="description" content="Vue's testing solution, vue-test-utils, is an excellent tool that's fast and reliable when it comes to continuously running JavaScript unit tests.">
  <meta name="robots" content="noodp">
  <link rel="canonical" href="https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/">
  <link rel="publisher" href="https://plus.google.com/u/0/104419910257777182146/">
  <meta property="og:locale" content="en_US">
  <meta property="og:type" content="article">
  <meta property="og:title" content="Get Started with vue-test-utils and Jest - via @codeship">
  <meta property="og:description" content="Vue's testing solution, vue-test-utils, is an excellent tool that's fast and reliable when it comes to continuously running JavaScript unit tests.">
  <meta property="og:url" content="https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/">
  <meta property="og:site_name" content="via @codeship">
  <meta property="article:publisher" content="http://www.facebook.com/codeship">
  <meta property="article:section" content="Development">
  <meta property="article:published_time" content="2017-10-05T11:15:49-04:00">
  <meta property="article:modified_time" content="2017-10-04T11:43:16-04:00">
  <meta property="og:updated_time" content="2017-10-04T11:43:16-04:00">
  <meta property="og:image" content="https://blog.codeship.com/wp-content/uploads/2017/07/Codeship_Get-Started-with-vue-test-utils-and-Jest.jpg">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:description" content="Vue's testing solution, vue-test-utils, is an excellent tool that's fast and reliable when it comes to continuously running JavaScript unit tests.">
  <meta name="twitter:title" content="Get Started with vue-test-utils and Jest - via @codeship">
  <meta name="twitter:site" content="@codeship">
  <meta name="twitter:image" content="https://blog.codeship.com/wp-content/uploads/2017/07/Codeship_Get-Started-with-vue-test-utils-and-Jest.jpg">
  <meta name="twitter:creator" content="@codebryo">
  <link rel="dns-prefetch" href="//s7.addthis.com">
  <link rel="dns-prefetch" href="//s.w.org">
  <link rel="alternate" type="application/rss+xml" title="via @codeship » Get Started with vue-test-utils and Jest Comments Feed" href="https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/feed/"> 
  <script type="text/javascript" src="https://1npo9l3lml0zvr6w62acc3t1-wpengine.netdna-ssl.com/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <link rel="https://api.w.org/" href="https://blog.codeship.com/wp-json/">
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://blog.codeship.com/xmlrpc.php?rsd">
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://blog.codeship.com/wp-includes/wlwmanifest.xml">
  <link rel="shortlink" href="https://blog.codeship.com/?p=5353">
  <link rel="alternate" type="application/json+oembed" href="https://blog.codeship.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblog.codeship.com%2Fget-started-with-vue-test-utils-and-jest%2F">
  <link rel="alternate" type="text/xml+oembed" href="https://blog.codeship.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblog.codeship.com%2Fget-started-with-vue-test-utils-and-jest%2F&amp;format=xml">
 </head>
 <body> 
  <button class="flexMenuToggleButton -right js-mobileMenu" data-rig-flexmenu-element="toggle"> <span class="icon fa fa-bars"></span> </button>
  <div class="flexMenu -right" data-rig-ui-menu="horizontal" data-rig-flexmenu-element="menu">
   <nav class="flexMenu_nav -topRow">
    <div class="flexMenu_block -left">
     <div class="flexMenu_block_item -phone"> 
      <a href="https://pages.codeship.com/contact-sales"> <span class="icon fa fa-phone"></span>&nbsp;855.790.8079 </a>
     </div>
    </div>
    <ul class="flexMenu_block -right">
     <li class="flexMenu_block_item -showMobile ta-center"> <a href="https://codeship.com/"><img alt="Codeship Logo" src="https://1npo9l3lml0zvr6w62acc3t1-wpengine.netdna-ssl.com/wp-content/themes/codeship/img/logo.png"></a></li>
     <li class="flexMenu_block_item"> <a href="https://resources.codeship.com/ebooks">EBooks</a></li>
     <li class="flexMenu_block_item"> <a href="https://blog.codeship.com">Blog</a></li>
     <li class="flexMenu_block_item"> <a href="https://pages.codeship.com/press">Press</a></li>
     <li class="flexMenu_block_item"> <a href="https://documentation.codeship.com/">Documentations</a></li>
     <li class="flexMenu_block_item"> <a href="https://pages.codeship.com/contact-sales?utm_source=codeship-documentation&amp;utm_medium=hp-navbar&amp;utm_campaign=hp-navbar-contactsales">Contact Sales</a></li>
     <li class="flexMenu_block_item -hideMobile"> <a href="https://app.codeship.com/sessions/new">Login</a></li>
    </ul>
   </nav>
   <nav class="flexMenu_nav">
    <div class="flexMenu_block -left -logo"> 
     <a href="https://codeship.com/"><img alt="Codeship Logo" src="https://1npo9l3lml0zvr6w62acc3t1-wpengine.netdna-ssl.com/wp-content/themes/codeship/img/logo.png"></a>
    </div>
    <ul class="flexMenu_block -right">
     <li class="flexMenu_block_item"> <a href="https://blog.codeship.com/write-for-codeship">Write For Codeship</a></li>
     <li class="flexMenu_block_item"> <a href="https://resources.codeship.com/">Free Resources</a></li>
     <li class="flexMenu_block_item"> <a href="https://pages.codeship.com/docker?utm_source=codeship&amp;utm_medium=navbar&amp;utm_campaign=docker-addon">Docker Platform</a></li>
     <li class="flexMenu_block_item"> <a href="https://codeship.com/features">Features</a></li>
     <li class="flexMenu_block_item"> <a href="https://codeship.com/pricing">Pricing</a></li>
     <li class="flexMenu_block_item -showMobile"> <a href="https://app.codeship.com/sessions/new">Login</a></li>
     <li class="flexMenu_block_item"> <a href="https://app.codeship.com/registrations/new" class="signUpButton">Free Signup</a></li>
    </ul>
   </nav>
  </div>
  <main>
   <div class="titleImg" data-bg-src="https://1npo9l3lml0zvr6w62acc3t1-wpengine.netdna-ssl.com/wp-content/uploads/2017/07/Heading_Get-Started-with-vue-test-utils-and-Jest.jpg"></div>
   <div class="pageContent">
    <aside class="widgetArea" id="sidebar-1">
     <section class="widget widget--author"> 
      <img src="https://secure.gravatar.com/avatar/c1e86fe744fa6f47f75908a31013a2e5?s=400&amp;d=mm&amp;r=g" alt="Roman Kuba" class="img img--author do-overlap"> 
      <a href="https://blog.codeship.com/author/roman-kuba/"><h4>Roman Kuba</h4> </a>
      <a href="http://twitter.com/codebryo" target="_blank" class="author__twitter" title="Follow Roman Kuba on Twitter"><span class="icon icon-twitter"></span> @codebryo</a>
      <p>Roman Kuba is the main front-end scientist at Codeship. Besides working with various technologies, he loves to talk about tech while teaching or at meetups. In his free time, Roman loves to spend time with his family (Dad since April 2016) and walk their dog Murphy.</p>
     </section>
     <section id="text-9" class="widget widget_text">
      <h4 class="widget-title">Follow us</h4>
      <div class="textwidget">
       <div class="addthis_inline_follow_toolbox"></div>
      </div>
     </section>
     <section id="text-5" class="widget widget_text">
      <h4 class="widget-title">Join over 80,000 subscribers to our newsletter</h4>
      <div class="textwidget">
       <p><b>Companies like Netflix, Spotify, Apple and O'Reilly are reading our articles.</b></p>
       <hr>
       <!--[if lte IE 8]> <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2-legacy.js"></script> <![endif]--> 
       <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script> 
       <script>hbspt.forms.create({ 
    css: '',
    portalId: '1169977',
    formId: 'c7b17117-cd8f-41c7-b3b2-74330384a66b'
  });</script> 
      </div>
     </section>
     <section id="recent-posts-2" class="widget widget_recent_entries">
      <h4 class="widget-title">Latest posts</h4>
      <ul>
       <li> <a href="https://blog.codeship.com/integrating-codecov-with-codeship/">Integrating Codecov with Codeship</a></li>
       <li> <a href="https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/">Get Started with vue-test-utils and Jest</a></li>
       <li> <a href="https://blog.codeship.com/creating-a-custom-build-status-page-using-codeship-api-v2/">Creating a Custom Build Status Page Using Codeship API v2</a></li>
       <li> <a href="https://blog.codeship.com/advantages-of-functional-programming/">Advantages of Functional Programming</a></li>
       <li> <a href="https://blog.codeship.com/integrating-codacy-with-codeship/">Integrating Codacy with Codeship</a></li>
      </ul>
     </section>
     <section id="text-8" class="widget widget_text">
      <div class="textwidget">
       <form role="search" action="https://blog.codeship.com/" id="searchform" method="get"> 
        <label for="s" class="label label--search" data-watch="input"> <input type="search" name="s" id="s" value="" autocomplete="off"> <span class="label__title">Search this blog</span> </label> 
        <input type="submit" id="searchsubmit" value="Search" class="is-hidden">
       </form>
      </div>
     </section>
     <section id="text-7" class="widget widget_text">
      <h4 class="widget-title">Give Codeship a try</h4>
      <div class="textwidget">
       <span class="hs-cta-wrapper" id="hs-cta-wrapper-8c8faa2c-e697-47c9-b1e7-7e8cb6aa2521"><span class="hs-cta-node hs-cta-8c8faa2c-e697-47c9-b1e7-7e8cb6aa2521" id="hs-cta-8c8faa2c-e697-47c9-b1e7-7e8cb6aa2521">
         <!--[if lte IE 8]><div id="hs-cta-ie-element"></div><![endif]--><a href="https://cta-redirect.hubspot.com/cta/redirect/1169977/8c8faa2c-e697-47c9-b1e7-7e8cb6aa2521"><img class="hs-cta-img" id="hs-cta-img-8c8faa2c-e697-47c9-b1e7-7e8cb6aa2521" style="border-width:0px;" src="https://no-cache.hubspot.com/cta/default/1169977/8c8faa2c-e697-47c9-b1e7-7e8cb6aa2521.png" alt="Sign up for free"></a></span><script charset="utf-8" src="https://js.hscta.net/cta/current.js"></script><script type="text/javascript">hbspt.cta.load(1169977, '8c8faa2c-e697-47c9-b1e7-7e8cb6aa2521', {});</script></span>
       <h4>Want to learn more?</h4>
       <span class="hs-cta-wrapper" id="hs-cta-wrapper-2d98f505-5a37-4f41-8d0a-2f048155df5a"><span class="hs-cta-node hs-cta-2d98f505-5a37-4f41-8d0a-2f048155df5a" id="hs-cta-2d98f505-5a37-4f41-8d0a-2f048155df5a">
         <!--[if lte IE 8]><div id="hs-cta-ie-element"></div><![endif]--><a href="https://cta-redirect.hubspot.com/cta/redirect/1169977/2d98f505-5a37-4f41-8d0a-2f048155df5a" target="_blank"><img class="hs-cta-img" id="hs-cta-img-2d98f505-5a37-4f41-8d0a-2f048155df5a" style="border-width:0px;" src="https://no-cache.hubspot.com/cta/default/1169977/2d98f505-5a37-4f41-8d0a-2f048155df5a.png" alt="Jobs at Codeship - Join our team!"></a></span><script charset="utf-8" src="https://js.hscta.net/cta/current.js"></script><script type="text/javascript">hbspt.cta.load(1169977, '2d98f505-5a37-4f41-8d0a-2f048155df5a', {});</script></span>
      </div>
     </section>
    </aside>
    <div class="contentWrapper">
     <article class="article" id="post-5353">
      <div class="grid grid--cling">
       <div class="colxs100 article__headline"> 
        <a href="https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/" rel="bookmark" title="Permanent Link to Get Started with vue-test-utils and Jest"><h1 class="like-h2">Get Started with vue-test-utils and Jest</h1> <span class="article__date">Last updated: 2017-10-04</span> </a>
       </div>
       <div class="article__overview">
        <div class="colxs100 colmd75 collg75">
         <p class="article__by">by <a href="https://blog.codeship.com/author/roman-kuba/" title="Posts by Roman Kuba" rel="author">Roman Kuba</a> | <span class="article__commentCount"><a href="https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/#respond"><span class="dsq-postid" data-dsqidentifier="5353 https://blog.codeship.com/?p=5353">No Comments</span></a></span></p>
        </div>
        <div class="colxs100 colmd20 collg20 article__categories"> 
         <a class="category category-development" href="https://blog.codeship.com/category/development/" title="Development">Development</a>
        </div>
       </div> 
       <summery class="article__summery colxs100">
        <p> <span class="rt-reading-time" style="display: block;"><span class="rt-label">Reading Time: </span><span class="rt-time">9</span><span class="rt-label"> minutes</span></span></p>
        <p>In late September, <a href="https://github.com/vuejs/vue-test-utils">Vue.js released the beta of <code>vue-test-utils</code></a>. Lets take this opportunity to dive a little deeper and take a look at the official Vue testing solution named <code>vue-test-utils</code>.</p>
        <p>Well be using Jest for testing. For us at Codeship, it turned out to be an excellent tool thats fast and reliable when it comes to continuously running JavaScript unit tests.</p>
        <div class="tm-tweet-clear"></div>
        <div class="tm-click-to-tweet">
         <div class="tm-ctt-text">
          <a href="https://twitter.com/share?text=%22Let%27s+take+a+deep+dive+into+the+official+Vue+testing+solution%2C+vue-test-utils.%22+via+%40codebryo&amp;url=https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/" target="_blank">Lets take a deep dive into the official Vue testing solution, vue-test-utils. via @codebryo</a>
         </div>
         <p><a href="https://twitter.com/share?text=%22Let%27s+take+a+deep+dive+into+the+official+Vue+testing+solution%2C+vue-test-utils.%22+via+%40codebryo&amp;url=https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/" target="_blank" class="tm-ctt-btn">Click To Tweet</a></p>
         <div class="tm-ctt-tip"></div>
        </div>
        <h2>Set Up Jest and Run Your First Spec</h2>
        <p>Why choose Jest in the first place? There are several reasons that I found to be major selling points for this test runner.</p>
        <h3>It comes with batteries included</h3>
        <p>You almost need nothing else to get running with your specs. Jest comes with an assertion library, mocking functionality, and code-coverage reporter baked in. Of course, those tools use popular solutions like Jasmin and Istanbul under the hood.</p>
        <p>These are baked in nicely, so there is no extra effort required to get the best of those tools. Mocking functionality is also a feature that works well and will be even extended in the near future by the Jest team.</p>
        <h3>No browser necessary</h3>
        <p>As Jest runs on NodeJS, there is no real browser required for running your JavaScript specs. For specs that actually wouldnt require a browser environment at all, Jest allows running those directly on the node CLI for maximum power.</p>
        <p>For specs that do need a browser environment, Jest provides jsDOM as a possible environment. The latter is configured as default environment. Thats handy when we want to test Vue components.</p>
        <h3>Mocking is easy</h3>
        <p>As mentioned above, Jest comes with mocking functionality in place. Youd mock something using the <code>jest.fn()</code> method.</p>
        <pre><code class="js">let mocked = jest.fn()</code></pre>
        <p>And the API that the mocked library comes with is quite handy. From mocking return values to checking all params the function may receive, Jest has you covered. Also when it comes to tinkering with timeout functions (<code>setTimeout</code>, <code>setInterval</code>) youll have some helpful tools at hand. Some examples follow later in this post.</p>
        <h3>Snapshot testing</h3>
        <p>Snapshots are great. They allow for testing strings against each other. That string can be a rendered piece of HTML, a complex JSON object, or whatever you come up with. A snapshot compares the output against a saved and verified version of that output and shows a git-diff-like output if something is wrong. But I guess you are now as excited to get started with some specs as I am.</p>
        <p>So lets get to it. Getting started with Jest is quite straight-forward. The following code examples are assuming <a href="https://yarnpkg.com">yarn</a> is installed, and a package.json is ready for you. (Should you still need a package.json, run <code>yarn init -y</code> to create one quickly.)</p>
        <pre><code class="bash">$ yarn add jest</code></pre>
        <p>This command will install Jest for your project. Although we could use it right away by running the command <code>yarn jest</code>, I prefer to have a task called <code>test</code> for that. So add those lines to your <code>package.json</code>.</p>
        <pre><code class="json">// package.json

{
    ...
  "scripts": {
    "test": "jest"
  }
}</code></pre>
        <p>This will allow for calling Jest through the <code>yarn test</code> command.</p>
        <p>Before actually writing our specs, the system should be set up to support a modern JavaScript workflow. Well do that through <code>babel</code>, so heres what needs to be done:</p>
        <pre><code class="bash">$ yarn add babel babel-jest babel-preset-env</code></pre>
        <p>If youve not heard of babel-preset-env, it basically allows compiling the JavaScript based on the browsers you plan to support. Get more info here: <a href="https://github.com/babel/babel-preset-env">babel-preset-env</a></p>
        <p>Be sure to update your <code>.babelrc</code> file accordingly.</p>
        <pre><code class="json">{
  "presets": [
    ["env", {
      "targets": {
        "browsers": ["last 2 versions", "safari &gt;= 7"]
      }
    }]
  ]
}</code></pre>
        <p>Now youre all set to write some beautiful specs. So lets get to it.</p>
        <p>You can create your specs anywhere in your project. Jest will find everything thats called <code>*.spec.js</code> or <code>*.test.js</code> automatically.</p>
        <pre><code class="js">// coolifier.js 

export default function (str) {
    return `cool${str.trim()}`
}</code></pre>
        <pre><code class="js">// coolifier.spec.js

import coolifier from 'coolifier'

describe('coolifier', () =&gt; {
    test('makes my cat cooler', () =&gt; {
      expect(coolifier('cat')).toBe('coolcat')
    })
})</code></pre>
        <p>If you run Jest now, you should get some nice output telling you the spec passed. Yay. The first spec in Jest done. Now to the really cool stuff.</p>
        <p><span class="hs-cta-wrapper" id="hs-cta-wrapper-964db6a6-69da-4366-afea-b129019aff07"><span class="hs-cta-node hs-cta-964db6a6-69da-4366-afea-b129019aff07" id="hs-cta-964db6a6-69da-4366-afea-b129019aff07">!Sign up for a free Codeship Account</span> <script type="text/javascript">hbspt.cta.load(1169977, '964db6a6-69da-4366-afea-b129019aff07', {});</script></span></p>
        <h2>Testing a Vue Component</h2>
        <p>At Codeship, we have had Vue in production for quite some time already. Testing was not perfect in the beginning. We verified a lot of functionality through rspecs. Are certain elements in place? Will a click trigger following action? And so on.</p>
        <p>Basically, we moved unit testing into the context of acceptance testing whats not ideal. But the technical setup we had before wasnt reliable enough when working with async code, promises, and so on, unless we were throwing multiple libraries into the mix. That made the code ugly, hard to maintain, and still not more trustworthy.</p>
        <p>With Jest, that became easier, faster, and more reliable. So why not move some acceptance testing into the context of unit testing and benefit from the tools we have now?</p>
        <pre><code class="js">// Component.js

export default {
  name: 'my-status',

  props: {
    status: {
      type: String,
      default: 'loading'
    }
  },

  template: `
    &lt;div :class="localStatus" @click="notify"&gt;
      {{ statusMessage }}
    &lt;/div&gt;
  `,

  data() {
    return {
      localStatus: this.status
    }
  },

  methods: {
    setStatus(newStatus) {
      this.localStatus = newStatus
    },

    notify() {
      alert(`Your current status: ${this.localStatus}`)
    }
  },

  computed: {
    statusMessage() {
      if(this.localStatus == 'loading')
        return 'Loading status'
      else
        return `Current status: ${this.localStatus.toUpperCase()}`
    }
  },

  mounted() {
    setTimeout( () =&gt; {
      this.setStatus('good')
    }, 1000)
  }
}</code></pre>
        <p>Here we have a status component that mainly displays whatever status it receives. It would maybe interact with a server to update the status in real life, but for now, we will just use a <code>setTimeout</code> function we added to the <code>mounted</code> hook. Also, this component has a lot of interesting things we could test. Lets start easy and look at how to check for the passed-in property.</p>
        <h3>Using the vue-test-utils</h3>
        <p>First, we need to make use of the <code>vue-test-utils</code>, so add them to your project:</p>
        <pre><code class="bash">$ yarn add vue-test-utils@1.0.0-beta</code></pre>
        <p>Second, create a spec file:</p>
        <pre><code class="js">// component.spec.js

import { mount } from 'vue-test-utils'
import Component from './component'

test('our component comes with a default value for status', () =&gt; {
    let wrapper = mount(Component)
    expect(wrapper.vm.status).toBe('loading')
})</code></pre>
        <p>Cool! If that spec now runs, it should pass just fine, and the first test is written. But lets look a little closer at what actually goes on here.</p>
        <ol>
         <li><code>import { mount } from 'vue-test-utils'</code>  For us, this is the entry point to the vue-test-utils. <code>mount</code> allows us to wrap that component and get access to the Vue instance and several helper methods around it. <code>vue-test-utils</code> comes with more methods, but that will be the only one we need for now.</li>
         <li><code>let wrapper = mount(Component)</code>  Thats where we actually wrap our component. The mount method has more tricks up its sleeve, as youll see soon.</li>
         <li><code>expect(wrapper.vm.status).toBe('loading')</code>  The important piece of information here is definitely <code>vm</code>. That key gives you access to the actual mounted Vue instance. By default, Vue binds all props, computed properties, and data values as getters to the root object. So if you want to access any of those, thats the way to go.</li>
        </ol>
        <p>Okay, but now we want to make better use of the <code>mount</code> functionality. Vue provides a <code>propsData</code> key for passing in values for unit testing. Luckily those are supported as well in the <code>vue-test-utils</code>.</p>
        <pre><code class="js"> test('the default status can be overwritten', () =&gt; {
    let wrapper = mount(Component, {
      propsData: {
        status: 'custom status'
      }
    })
    expect(wrapper.vm.status).toBe('custom status')
    expect(wrapper.vm.localStatus).toBe('custom status')
  })</code></pre>
        <h3>Snapshot testing</h3>
        <p>The next interesting element could be rendered output of our component. As mentioned earlier, there is a thing in Jest called snapshot testing.</p>
        <pre><code class="js">test('rendered output should match snapshot', () =&gt; {
    let wrapper = mount(Component)
  expect(wrapper.html()).toMatchSnapshot()
})</code></pre>
        <p>Running the spec the first time, Jest will print out to the console:</p>
        <pre><code class="bash">Snapshot Summary
  1 snapshot written in 1 test suite.</code></pre>
        <p>Before there was nothing to compare against, but now there is a snapshot. By default, those will be stored inside a <code>__snapshot__</code> folder. That new snapshot should now be verified once to look as expected:</p>
        <pre><code class="bash">// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendered output should match snapshot`] = `
"&lt;div class=\\"loading\\"&gt;
      Loading status
    &lt;/div&gt;"
`;</code></pre>
        <p>If all looks fine, that spec is now providing a lot of value for us; we can be sure that the rendered output wont diverge from what our snapshot looks like. Be sure to check those snapshots into your code repository, so that every time the spec is run, we know its running against that snapshot.</p>
        <h3>Traversing the DOM</h3>
        <p>With <code>vue-test-utils</code>, its also quite easy to traverse the DOM. That will be quite handy for testing events.</p>
        <pre><code class="js">test('finding DOM nodes', () =&gt; {
  let wrapper = mount(Component)
  expect(wrapper.find('div').exists()).toBeTruthy()
  expect(wrapper.is('div')).toBeTruthy()
    expect(wrapper.contains('div')).toBeFalsy()
  expect(wrapper.findAll('div').length).toBe(1)
})</code></pre>
        <p>As you see above, there are multiple ways to get information about your DOM through the wrapper. Know that <code>.find</code> and <code>.findAll</code> include the root node while <code>.contains</code> is not.</p>
        <p>With the newly found knowledge, we can try to find the root node and fire a click event on it. Thinking ahead though, we face a problem: We need to verify that the click worked. There is no value on the instance we could check afterward.</p>
        <h3>Mocking and spying</h3>
        <p>Also mentioned above, Jest comes with nice mocking functionality in place. Our component fires an <code>alert</code>, so lets spy on that one.</p>
        <pre><code class="js">test('fire a click on a node', () =&gt; {
    global.alert = jest.fn()
    let wrapper = mount(Component)

    wrapper.find('div').trigger('click')
    
    expect(alert).toHaveBeenCalled()
  expect(alert).toHaveBeenCalledWith('Your current status: loading')
})</code></pre>
        <p>That was a breeze, right? But in some cases, it could be quite hard to spy on whatever comes in that method, and ideally, we want to mock that function in the first place because there is an extra spec that handles only that function. Thats a little trickier, but not much. Here it goes:</p>
        <pre><code class="js">test.only('mock a function', () =&gt; {
  let mockedNotify = jest.fn()
  Component.methods.notify = mockedNotify
    
  let wrapper = mount(Component)
  wrapper.find('div').trigger('click')
  expect(mockedNotify).toHaveBeenCalled()
})</code></pre>
        <p>The tricky part here is that we need to set up our mocks on the raw component object, as we cant manipulate the Vue instance methods when created. To not lose track of the mocked function, it gets stored in an extra variable upfront. If its expected that a function returns a value and its more complex to mock everything inside, why not mock a return value? Thats quite easy to do as well with Jest.</p>
        <p><code>mockedNotify.mockImplementation(() =&gt; Notified)</code></p>
        <p>That would return the String <code>Notified</code> whenever we call that method. Sweet!</p>
        <h3>Instance updates and timeout functions</h3>
        <p>There is one last thing we need to tackle before wrapping this up. In our component, a mounted function updates our <code>localStatus</code> asynchronously. Of course, the computed property of <code>statusMessage</code> will reevaluate and eventually the rendered output. So lets see how we can tackle all those things at once.</p>
        <p>Luckily, its quite easy to mock timeout functions in Jest; it requires nothing more than adding <code>jest.useFakeTimers()</code> at the top of the spec. Afterward, Jest gives you access to running timers, and they can be finished individually. For the ease of usage, we finish all running timers.</p>
        <pre><code class="js">jest.useFakeTimers()

test('status should be updated with good', () =&gt; {
  let wrapper = mount(Component)
    jest.runAllTimers()

    expect(wrapper.vm.localStatus).toBe('good')
    wrapper.update()
  expect(wrapper.html()).toMatchSnapshot()
})</code></pre>
        <p>Here weve seen another important method of the wrapper instance: the <code>update()</code> method. As Vues internal HTML updates depend on an internal Tick to minimize serenaders, this event runs asynchronously. The wrapper instance allows for calling an explicit update though. We match it against a new snapshot and enjoy our greatly tested component.</p>
        <p>The snapshot should look something like this:</p>
        <pre><code class="bash">exports[`status should be updated with good 1`] = `
"&lt;div class=\\"good\\"&gt;
      Current status: GOOD
  </code></pre>
        <h2>Ready for More?</h2>
        <p>There is a lot more ground to cover with the <code>vue-test-utils</code>, such as shallow rendering or mocking nested components. Additionally, Jest allows for some advanced configurations and setup scripts. If youre interested in more discussion of Vue and Jest, I had the pleasure of speaking about testing Vue components with Jest at the first official <a href="https://conf.vuejs.org/">Vue Conference</a> in June 2017. The video of my talk is available here:</p>
        <p><iframe width="560" height="315" src="https://www.youtube.com/embed/pqp0PsPBO_0" frameborder="0" allowfullscreen></iframe></p>
        <blockquote>
         <p>Were incredibly proud to be part of the Vue community by sponsoring the Vue Conference and want to say thank-you to all the other sponsors, like GitLab and NativeScript and especially our friends from Monterail. Without them, the event wouldnt have happened.</p>
        </blockquote>
        <p>Please share your feedback in the comments below, and let me know what youd prefer for future posts.</p>
        <p></p>
        <div class="tm-tweet-clear"></div>
        <div class="tm-click-to-tweet">
         <div class="tm-ctt-text">
          <a href="https://twitter.com/share?text=%22Get+Started+with+vue-test-utils+and+Jest%22+via+%40codebryo&amp;url=https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/" target="_blank">Get Started with vue-test-utils and Jest via @codebryo</a>
         </div>
         <p><a href="https://twitter.com/share?text=%22Get+Started+with+vue-test-utils+and+Jest%22+via+%40codebryo&amp;url=https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/" target="_blank" class="tm-ctt-btn">Click To Tweet</a></p>
         <div class="tm-ctt-tip"></div>
        </div>
        <p></p> 
       </summery>
      </div>
     </article>
     <div class="newsletterSubscribe only-till-sm">
      <div class="row">
       <div class="colxs45">
        <h3>Subscribe via Email</h3>
        <p><strong>Over 60,000 people from companies like Netflix, Apple, Spotify and O'Reilly are reading our articles.</strong><br> Subscribe to receive a weekly newsletter with articles around Continuous Integration, Docker, and software development best practices.</p> 
        <br> 
        <br>
        <p> We promise that we won't spam you. You can unsubscribe any time.</p>
       </div>
       <div class="colxs45 colxs--offset5"> 
        <!--[if lte IE 8]> <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2-legacy.js"></script> <![endif]--> 
        <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script> 
        <script>hbspt.forms.create({
              portalId: '1169977',
              formId: 'c7b17117-cd8f-41c7-b3b2-74330384a66b'
            });</script> 
       </div>
      </div>
     </div>
     <div class="joinDiscussion ta-center colxs70 colxs--offset15 only-till-sm">
      <h3>Join the Discussion</h3>
      <p>Leave us some comments on what you think about this topic or if you like to add something.</p>
     </div>
     <div id="comments">
      <div id="disqus_thread"></div> 
      <script type="text/javascript">var disqus_url = 'https://blog.codeship.com/get-started-with-vue-test-utils-and-jest/';
var disqus_identifier = '5353 https://blog.codeship.com/?p=5353';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'railsonfireblog';
var disqus_title = "Get Started with vue-test-utils and Jest";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=5353';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();</script> 
     </div>
    </div>
   </div>
  </main>
  <footer class="Footer">
   <div class="Footer_sitemap">
    <div class="contentWrapper">
     <div class="grid grid--cling">
      <ul class="colxs100 colsm50 colmd33 collg33">
       <li class="Footer_sitemap_title">Platform</li>
       <li><a target="_blank" href="https://pages.codeship.com/docker">Docker Continuous Integration</a></li>
       <li><a href="https://codeship.com/features">Features</a></li>
       <li><a href="https://codeship.com/features/parallelci">ParallelCI</a></li>
      </ul>
      <ul class="colxs100 colsm50 colmd33 collg33">
       <li class="Footer_sitemap_title">Company</li>
       <li><a href="https://codeship.com/team">Team</a></li>
       <li><a href="https://codeship.com/customers">Customers</a></li>
       <li><a href="https://codeship.com/jobs">Careers</a></li>
       <li><a href="https://pages.codeship.com/press">Press</a></li>
      </ul>
      <ul class="colxs100 colsm50 colmd33 collg33">
       <li class="Footer_sitemap_title">Getting Started</li>
       <li><a href="https://codeship.com/pricing">Pricing</a></li>
       <li><a target="_blank" href="https://pages.codeship.com/contact-sales">Contact sales</a></li>
       <li><a target="_blank" href="https://pages.codeship.com/request-a-trial">Docker CI Platform Codeship Pro</a></li>
       <li><a target="_blank" href="https://codeship.com/swag">Get Codeship Swag</a></li>
      </ul>
      <ul class="colxs100 colsm50 colmd33 collg33">
       <li class="Footer_sitemap_title">Help</li>
       <li><a href="https://documentation.codeship.com">Documentation</a></li>
       <li><a href="https://community.codeship.com/">Community</a></li>
       <li><a href="http://helpdesk.codeship.com/" target="_blank">Contact Support</a></li>
      </ul>
      <ul class="colxs100 colsm50 colmd33 collg33">
       <li class="Footer_sitemap_title">Case Studies</li>
       <li><a href="https://codeship.com/customers/product-hunt">Product Hunt</a></li>
       <li><a href="https://codeship.com/customers/bannerman">Bannerman</a></li>
       <li><a href="https://codeship.com/customers/lendingcrowd">Lending Crowd</a></li>
      </ul>
      <ul class="colxs100 colsm50 colmd33 collg33">
       <li class="Footer_sitemap_title">Legal</li>
       <li><a href="https://codeship.com/tos">Terms of Service</a></li>
       <li><a href="https://codeship.com/privacy">Privacy</a></li>
       <li><a href="https://codeship.com/security">Security</a></li>
       <li><a href="https://codeship.com/imprint">Imprint</a></li>
      </ul>
     </div>
    </div>
   </div>
   <ul class="Footer_links">
    <li> <a target="_blank" href="http://pages.codeship.com/contact-sales"> <span class="icon fa fa-phone"></span> 855.790.8079 </a></li>
    <li> <a target="_blank" href="https://twitter.com/codeship"> <span class="icon fa fa-twitter"></span>Twitter </a></li>
    <li> <a target="_blank" href="https://plus.google.com/104419910257777182146/posts"> <span class="icon fa fa-google-plus"></span>Google + </a></li>
    <li> <a target="_blank" href="https://www.linkedin.com/company/codeship"> <span class="icon fa fa-linkedin"></span>LinkedIn </a></li>
    <li> <a target="_blank" href="https://www.facebook.com/codeship/"> <span class="icon fa fa-facebook"></span>Facebook </a></li>
    <li> <a target="_blank" href="https://www.youtube.com/channel/UCxc5i0d5pIJJeF39NFdCGRQ"> <span class="icon fa fa-youtube"></span>YouTube </a></li>
   </ul>
  </footer>
  <div class="scriptIncludes"> 
   <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script> 
   <script src="//cdnjs.cloudflare.com/ajax/libs/velocity/0.11.9/jquery.velocity.min.js"></script> 
   <script type="text/javascript">// Quick Fix for Hubspot Widget in Firefox
	 $('#text-7 > .textwidget').css('max-width','335px')</script> 
   <script type="text/javascript">var addthis_product = 'wpp-1.2.4';</script>
   <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5400755e34d16d50"></script>
   <script type="text/javascript">addthis.bar.initialize({'default':{
	"backgroundColor": "#E37A35",
	"textColor": "#000000",
	"buttonColor": "#164366",
	"buttonTextColor": "#FFFFFF",
	"hideAfter": 20,
	"match": {}
},rules:[
	{
		"name": "All visitors",
		"message": "Sign up for our free webinar: Web Applications and Docker, on January 12th, 2016",
		"action": {
			"type": "button",
			"text": "Learn more",
			"verb": "link",
			"url": "http://pages.codeship.com/webinars/docker-and-web-apps-introduction?utm_source=blog"
		}
	}
]});</script> 
   <!--[if gte IE 8]><style type="text/css">.addthis_bar_placeholder {
		height: 0 !important;
	}</style><![endif]--> 
   <script type="text/javascript">// 
        var disqus_shortname = 'railsonfireblog';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1 && nodes[i].parentNode.tagName == 'A') {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script');
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        //</script> 
   <script type="text/javascript">(function() {
    window._pa = window._pa || {};
    // _pa.orderId = "myUser@email.com"; // OPTIONAL: include your user's email address or order ID
    // _pa.revenue = "19.99"; // OPTIONAL: include dynamic purchase value for the conversion
    // _pa.onLoadEvent = "sign_up"; // OPTIONAL: name of segment/conversion to be fired on script load
    var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.async = true;
    pa.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + "//tag.perfectaudience.com/serve/519a5b8368bd1d60b5000096.js";
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);
  })();</script> 
   <script type="text/javascript">function showhide_toggle(a,b,d,f){var e=jQuery("#"+a+"-link-"+b),c=jQuery("a",e),g=jQuery("#"+a+"-content-"+b);a=jQuery("#"+a+"-toggle-"+b);e.toggleClass("sh-show sh-hide");g.toggleClass("sh-show sh-hide").toggle();"true"===c.attr("aria-expanded")?c.attr("aria-expanded","false"):c.attr("aria-expanded","true");a.text()===d?a.text(f):a.text(d)};</script> 
   <script type="text/javascript">var _hsq = _hsq || [];
_hsq.push(["setContentType", "blog-post"]);
(function(d,s,i,r) {
  if (d.getElementById(i)){return;}
  var n = d.createElement(s),e = document.getElementsByTagName(s)[0];
  n.id=i;n.src = '//js.hs-analytics.net/analytics/'+(Math.ceil(new Date()/r)*r)+'/1169977.js';
  e.parentNode.insertBefore(n, e);
})(document, "script", "hs-analytics", 300000);</script> 
   <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-21192046-2', 'auto');
  ga('send', 'pageview');</script> 
   <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-21192046-4', 'auto');
  ga('send', 'pageview');</script> 
   <script type="text/javascript" src="https://www.google.com/jsapi"></script> 
   <script type="text/javascript">/*  */
    var google_conversion_id = 1009317086;
    var google_conversion_language = "en";
    var google_conversion_format = "3";
    var google_conversion_color = "ffffff";
    var google_conversion_label = "QcOYCMqUiwMQ3umj4QM";
    var google_conversion_value = 0;
    /*  */</script> 
   <script type="text/javascript" src="https://www.googleadservices.com/pagead/conversion.js">;</script> 
   <script type="text/javascript">setTimeout(function(){var a=document.createElement("script");
var b=document.getElementsByTagName("script")[0];
a.src=document.location.protocol+"//dnn506yrbagrg.cloudfront.net/pages/scripts/0014/8994.js?"+Math.floor(new Date().getTime()/3600000);
a.async=true;a.type="text/javascript";b.parentNode.insertBefore(a,b)}, 1);</script> 
   <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5400755e34d16d50"></script> 
   <script type="text/javascript" src="https://blog.codeship.com/wp-admin/admin-ajax.php?action=addthis_global_options_settings&amp;ver=4.8.2"></script> 
   <script type="text/javascript" src="https://s7.addthis.com/js/300/addthis_widget.js?ver=4.8.2#pubid=ra-5400755e34d16d50"></script> 
   <script type="text/javascript">(function($, window) {
        var init_fn_flag = false;
        var init_fn = (function() {
            if (init_fn_flag)
                return;
            init_fn_flag = true;
             hljs.configure({"tabReplace":"    "});
            $('pre code').each(function(i, block) {
                hljs.highlightBlock(block);
            });
            $('pre:not(:has(code))').each(function(i, block){
                var class_desc = $(block).attr("class") || "";
                var reg_mat = class_desc.match(/brush\s*:\s*([\w\d]+)/i);
                if(!reg_mat || reg_mat.length < 2)
                    return;
                var code_content = $(block).removeClass("brush:").removeClass("ruler:").removeClass("first-line:").removeClass("highlight:")
                    .removeClass("brush:" + reg_mat[1] + ";").removeClass(reg_mat[1] + ";").removeClass("true;").removeClass("false;").html();
                $(block).empty().append($("<code class='hljs'></code>").html(code_content)).addClass(reg_mat[1]);
                hljs.highlightBlock(block);
            });
        $('pre.prettyprint:not(.prettyprinted), code.prettyprint:not(.prettyprinted), xmp.prettyprint:not(.prettyprinted)').each(function(i, block){
            var jblock = $(block).removeClass("prettyprint");
            if (jblock.prop("tagName").toLowerCase() == "code" && jblock.parent().prop("tagName").toLowerCase() == "pre") {
                hljs.highlightBlock(jblock.parent().get(0));
                return;
            }

            var class_desc = $(block).attr("class") || "";
            var reg_mat = class_desc.match(/lang[^-]*-([\w\d]+)/i);
            var code_content = $("<code class='hljs'></code>");
            if (reg_mat && reg_mat.length >= 2) {
                code_content.addClass(reg_mat[1]);
            }
            if (jblock.prop("tagName") === "PRE") {
              jblock.wrapInner(code_content);
              hljs.highlightBlock(jblock.children().get(0));
            } else {
              var code_content = jblock.html();
              jblock.replaceWith($("<pre></pre>").append(code_content.html(code_content)));
              hljs.highlightBlock(jblock.get(0));
            }
        });
        $('pre:not(:has(code))').each(function(i, block){
            var class_desc = $(block).attr("class") || "";
            var reg_mat = class_desc.match(/lang\s*:\s*([\w\d]+)/i);
            var code_content = $("<code class='hljs'></code>").html($(block).removeAttr('class').html());
            if (reg_mat && reg_mat.length >= 2) {
                code_content.addClass(reg_mat[1]);
            }
            $(block).empty().append(code_content);
            hljs.highlightBlock(block);
        });
        });
        $(document).ready(init_fn);
        $(window).on("load", init_fn);
    })(jQuery, window);</script> 
  </div> 
  <script type="text/javascript" defer src="https://1npo9l3lml0zvr6w62acc3t1-wpengine.netdna-ssl.com/wp-content/cache/autoptimize/js/autoptimize_eceb3bd8e9ead341ef35c632edebd9da.js"></script>
 </body>
</html>