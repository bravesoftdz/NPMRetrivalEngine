<html>
 <head>
  <meta HTTP-EQUIV="expires" CONTENT="0">   
  <style type="text/css">
table {font-size: 100%;}
</style> 
 </head> 
 <body text="#000000" link="#00ff00" vlink="#f00000" bgcolor="#ffffff"> 
  <h3> 
   <hr> Importing methods in the Java library 
   <hr> </h3> 
  <ul> 
   <p> </p>
   <li> <font color="darkmagenta"><b> Previously discussed </b></font> <p> </p>
    <ul> 
     <li> <font color="blue"><b>Method</b></font> = a <font color="red"><b>collection of statements</b></font> that performs a <font color="blue"><b>complex (useful) task</b></font> <p> A <font color="blue"><b>method</b></font> is <font color="red"><b>identified </b></font> by a <b>method name</b> </p><p> </p>
      <hr> <p> </p></li>
     <li> <font color="blue"><b>Class</b></font> = a <font color="red"><b>container for methods</b></font> <p> <b>Methods</b> that serves a <font color="blue"><b>similar purpose</b></font> are stored in <font color="red"><b>the same class</b></font> </p><p> A <font color="blue"><b>class</b></font> is <font color="red"><b>identified </b></font> by a <b>class name</b> </p><p> </p>
      <hr> <p> </p></li>
     <li> <b>Schematically:</b> <p> </p>
      <ul> 
       <table border="5"> 
        <tbody>
         <tr> 
          <td> <img SRC="FIGS/java-lib01.gif"> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p></li>
    </ul> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> <font color="red"><b>For the lecturer:</b></font> </p><p> </p>
    <ul> 
     <table bgcolor="yellow" border="5"> 
      <tbody>
       <tr> 
        <td> 
         <ul> 
          <li> Motivate the need for organization using a <font color="blue"><b>hierarchy</b></font> <p> </p></li>
          <li> Example 1: USA, states, countries, districts </li>
          <li> Example 2: Store, departments (toy, tools), sections (board games, electronic games)... </li>
          <li> The Java library also uses a <font color="red"><b>hierarchical structure</b></font> based on <font color="blue"><b>functionality</b></font> </li>
         </ul> </td> 
       </tr> 
      </tbody>
     </table> 
    </ul> <p> </p><p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p></li>
   <li> <font color="darkmagenta"><b> Organization of the Java library </b></font> <p> </p>
    <ul> 
     <li> To find "things" more easily, humans usually <font color="blue"><b>organize</b></font> (= group) the "things" in a <font color="red"><b>hierarchical manner</b></font> <p> <b>Examples:</b> </p><p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> When you look for <font color="blue"><b>cheese</b></font> in a <b>Super market</b>, you first find the <font color="red"><b>dairy section</b></font> and then look for the <font color="blue"><b>cheese section</b></font> <p> </p></li>
            <li> The <b>USA</b> is divided into <font color="blue"><b>states</b></font>, which in turn are divided into <font color="red"><b>counties</b></font> and there are different <font color="darkmagenta"><b>districts</b></font> inside a county. </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p>
      <hr> <p> </p></li>
     <li> The organization of the <font color="blue"><b>Java library</b></font>: <p> </p>
      <ul> 
       <table border="5"> 
        <tbody>
         <tr> 
          <td> <img SRC="FIGS/java-lib04.gif"> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p></li>
     <li> The <b>Standard Java library</b> consists of a <font color="blue"><b> number of <i>packages</i></b></font> <p> <font color="blue"><b>Each package</b></font> consists of a <font color="red"><b>number of classes</b></font> (that provide similar functionality) </p><p> </p>
      <ul> 
       <table bgcolor="#CCFFCC" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> The <b>classes</b> are organized into <font color="red"><b>packages</b></font> according to the <font color="darkmagenta"><b>functionality</b></font> of the methods in a class. <p> </p></li>
            <li> In other words: <p> </p>
             <ul> 
              <table bgcolor="lightyellow" border="5"> 
               <tbody>
                <tr> 
                 <td> 
                  <ul> 
                   <li> A <font color="blue"><b>package</b></font> contains <b>classes</b> with methods that solve a <font color="red"><b>related problem</b></font>. </li>
                  </ul> </td> 
                </tr> 
               </tbody>
              </table> 
             </ul> <p> </p></li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p><p> </p>
      <hr> <p> </p></li>
     <li> The <font color="blue"><b>standard Java library</b></font> is named <font color="red"><b><tt>java</tt></b></font> <p> </p></li>
     <li> A <font color="red"><b>package named <tt>xxx</tt></b></font> inside the <font color="blue"><b>standard Java library</b></font> is named <font color="red"><b><tt>java.xxx</tt></b></font> <p> <b>Some commonly used packages:</b> </p><p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> <font color="red"><b>java.lang</b></font>: Provides classes that are fundamental to the design of the Java programming language. <br> Official website: <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/lang/package-summary.html"> click here</a> <p> </p></li>
            <li> <font color="red"><b>java.util</b></font>: Contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array). <br> Official website: <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/util/package-summary.html"> click here</a> </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p>
      <hr> <p> </p></li>
     <li> <b>Schematical representation of Java's Standard library:</b> <p> </p>
      <ul> 
       <table border="5"> 
        <tbody>
         <tr> 
          <td> <img SRC="FIGS/java-lib02.gif"> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p>
      <hr> <p> </p></li>
     <li> A <font color="red"><b>class named <tt>yyy</tt></b></font> inside the <font color="blue"><b>package <tt>java.xxx</tt></b></font> is named <font color="red"><b><tt>java.xxx.yyy</tt></b></font> <p> <b>Example:</b> </p><p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> The <font color="red"><b>class <tt>Math</tt></b></font> inside the <b>package</b> <font color="blue"><b><tt>java.lang</tt></b></font> is known as <font color="red"><b><tt>java.lang.Math</tt></b></font> </li>
            <li> The <font color="red"><b>class <tt>Double</tt></b></font> inside the <b>package</b> <font color="blue"><b><tt>java.lang</tt></b></font> is known as <font color="red"><b><tt>java.lang.Double</tt></b></font> <p> </p></li>
            <li> The <font color="red"><b>class <tt>Stack</tt></b></font> inside the <b>package</b> <font color="blue"><b><tt>java.util</tt></b></font> is known as <font color="red"><b><tt>java.util.Stack</tt></b></font> </li>
            <li> The <font color="red"><b>class <tt>Scanner</tt></b></font> inside the <b>package</b> <font color="blue"><b><tt>java.util</tt></b></font> is known as <font color="red"><b><tt>java.util.Scanner</tt></b></font> </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> <b>Note:</b> </p><p> </p>
      <ul> 
       <table bgcolor="lightcyan" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> It is a <b>Java convention</b> that the <font color="blue"><b>name</b></font> of a <b>Java class</b> begins with a <font color="red"><b>upper case letter</b></font> <p> </p></li>
            <li> It is <b><i>also</i></b> a <b>Java convention</b> that the <font color="blue"><b>name</b></font> of a <b>method</b> begins with a <font color="red"><b>lower case letter</b></font> </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p></li>
    </ul> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p></li>
   <li> <font color="darkmagenta"><b> The <tt>class path name</tt> of a class inside the Java library </b></font> <p> </p>
    <ul> 
     <li> <font color="blue"><b>Each class</b></font> inside the <b>Java library</b> has a unique <font color="red"><b>class path name</b></font> in the form: <p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> <font color="blue"> <b> <pre>
     java.PackageName.ClassName            
</pre> </b> </font> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> (The <font color="blue"><b>package name</b></font> can be <font color="red"><b>composite (e.g. name1.name2)</b></font>, but the most commonly used packages has a <font color="darkmagenta"><b>non-composite name</b></font>) </p><p> </p>
      <hr> <p> </p></li>
     <li> The following figure show the <font color="blue"><b><tt>class path names</tt></b></font> of some classes: <p> </p>
      <ul> 
       <table border="5"> 
        <tbody>
         <tr> 
          <td> <img SRC="FIGS/java-lib05.gif"> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p></li>
    </ul> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p></li>
   <li> <font color="darkmagenta"><b> Using classes in the Java library </b></font> <p> </p>
    <ul> 
     <li> In order to use (the <b>programs</b> stored inside) the <font color="blue"><b>classes</b></font> in the <b>Java library</b>, we must <font color="red"><b>identify the class within the Java library</b></font> <p> </p></li>
     <li> One way to <font color="red"><b>identify</b></font> a <font color="blue"><b>class</b></font> in the <b>Java library</b> is: <p> </p>
      <ul> 
       <table bgcolor="#FFEEEE" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> use the <font color="red"><b><i>class path</i></b></font> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p>
      <hr> <p> </p></li>
     <li> <b>Example:</b> we can <font color="red"><b>refer</b></font> to the <font color="blue"><b><tt>sin()</tt></b></font> method stored in the <font color="darkmagenta"><b>Math</b></font> class (inside the package <font color="blue"><b><tt>lang</tt></b></font> as: <p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> <font color="blue"> <b> <pre>
     java.lang.Math.sin( ... )           
</pre> </b> </font> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p>
      <hr> <p> </p></li>
     <li> <b>Example</b>: Java program using the <font color="red"><b>class path</b></font> to identify a class <p> </p>
      <ul> 
       <table bgcolor="lightcyan" border="5"> 
        <tbody>
         <tr> 
          <td> <font color="blue"> <b> <pre>
   public class ClassPath1
   {
      public static void main(String[] args)                 
      {
   	 double x = 1.234;
   	 double r;
    
   	 r = <font color="red">java.lang.Math.sin</font>( x );
    
   	 System.out.print("Sin of " + x);
   	 System.out.println(" = " + r );
      }
   }
</pre> </b> </font> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p><p> </p>
      <hr> <p> </p></li>
     <li> <font color="#00a000"><b> Example Program: </b></font> (Demo above code) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <sub><sub><sub> <img SRC="../../../Common/Example.jpg"> </sub></sub></sub> <p> </p>
      <ul> 
       <li> Prog file: <a href="Progs/ClassPath1.java"> click here </a> </li>
      </ul> <p> <b>How to run the program:</b> </p><p> </p>
      <ul> 
       <table bgcolor="#CCFFCC" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> <font color="blue"><b>Right click</b></font> on link and <font color="red"><b>save</b></font> in a scratch directory <p> </p></li>
            <li> To compile: &nbsp; <font color="red"><b><tt>javac ClassPath1.java</tt></b></font> </li>
            <li> To run: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="red"><b><tt>java ClassPath1</tt></b></font> </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p></li>
    </ul> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p></li>
   <li> <font color="darkmagenta"><b> Making programs (methods) in Java's standard library more accessible: <i>importing</i> a class </b></font> <p> </p>
    <ul> 
     <li> <b>Rule of usage:</b> <p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> If you want to make a <font color="red"><b>class</b></font> inside the <b>Java library</b> <font color="magenta"><b>accessible <i>without</i> using the class path</b></font>, a <b>Java program</b> <font color="blue"><b>must <i>first</i></b></font> <font color="red"><b><i>import</i></b></font> the <font color="blue"><b> class</b></font> (with an <font color="red"><b><tt>import</tt> clause</b></font>) </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> The <font color="blue"><b>import clauses</b></font> must occur <font color="red"><b>before any class definitions</b></font> </p>
      <hr> <p> </p></li>
     <li> <b>Syntax</b> to <font color="blue"><b>import a class</b></font> from the <b>Java library</b>: <p> </p>
      <ul> 
       <table bgcolor="lightcyan" border="5"> 
        <tbody>
         <tr> 
          <td> <font color="blue"> <b> <pre>
    <font color="red">import</font> classPathName ;          
</pre> </b> </font> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> <b>Examples:</b> </p><p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> <font color="blue"> <b> <pre>
   <font color="red">import</font> java.lang.Math;


   // After the import clauses, you can use the class      
   // by its name, without the entire classPath

   // This program can now use <font color="red">all things</font> defined inside
   // the class <font color="red">java.lang.Math</font> <font color="magenta">without the classPathName</font>

   public <font color="darkred">class MyProgram</font>
   {
      public static void main(String[] args)
      {
         double a;

         a = Math.sqrt(2.0);    // Save computed value in variable

   	 System.out.println(a); // You can print the saved value later   
      }
   }
</pre> </b> </font> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p></li>
    </ul> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p></li>
   <li> <font color="darkmagenta"><b> Importing <i>all classes</i> in a package </b></font> <p> </p>
    <ul> 
     <li> Some <b>complex Java program</b> may use <font color="blue"><b>many different methods</b></font> contained in <font color="red"><b>many different classes</b></font> in the <font color="darkred"><b>same package</b></font> <p> It would be a <font color="blue"><b>pain</b></font> to write a <font color="red"><b>long list of import clauses</b></font> </p><p> <b>Example:</b> </p><p> </p>
      <ul> 
       <table bgcolor="lightcyan" border="5"> 
        <tbody>
         <tr> 
          <td> <font color="blue"> <b> <pre>
   import java.lang.<font color="red">Math</font>;
   import java.lang.<font color="red">Double</font>;
   import java.lang.<font color="red">Integer</font>;              
   ...

   import java.util.<font color="red">Scanner</font>;
   import java.util.<font color="red">Stack</font>;
   ...
</pre> </b> </font> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p>
      <hr> <p> </p></li>
     <li> There is a <font color="red"><b>short hand</b></font> to <b>import</b> <font color="blue"><b><i>all</i> classes</b></font> contained inside a <font color="red"><b>package</b></font>: <p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> <font color="blue"> <b> <pre>
    import  <font color="red">java.lang.*</font> ;  // import <font color="red">all classes</font> in   java.lang   package
    import  <font color="red">java.util.*</font> ;  // import <font color="red">all classes</font> in   java.util   package     
</pre> </b> </font> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p></li>
    </ul> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p></li>
   <li> <font color="darkmagenta"><b> The frequently used class: <tt>java.lang</tt> </b></font> <p> </p>
    <ul> 
     <li> According to the <b>Rule of usage:</b> <p> </p>
      <ul> 
       <table bgcolor="#CCFFCC" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> If you want to make a <font color="red"><b>class</b></font> inside the <b>Java library</b> <font color="magenta"><b>accessible <i>without</i> using the class path</b></font>, a <b>Java program</b> <font color="blue"><b>must <i>first</i></b></font> <font color="red"><b><i>import</i></b></font> the <font color="blue"><b> class</b></font> (with an <font color="red"><b><tt>import</tt> clause</b></font>) </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> we must: </p><p> </p>
      <ul> 
       <table bgcolor="#FFEEEE" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> <font color="blue"><b>import</b></font> <font color="red"><b><tt>java.lang.Math</tt></b></font> if we want to use methods like <font color="blue"><b><tt>Math.sqrt()</tt></b></font>, <font color="blue"><b><tt>Math.sin()</tt></b></font>, and so on (without the <font color="darkmagenta"><b>class path</b></font>). </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p>
      <hr> <p> In other words, we <b>should</b> have written: </p><p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> <font color="blue"> <b> <pre><font color="red">
   import java.lang.Math; // We MUST import this class to use Math.sqrt      
                          // without the class path</font>
    
   public class Abc
   {
   	 double a, b, c, x1, x2;   // Define 5 variable
    
   	 a =  1.0;
   	 b =  0.0;
   	 c = -4.0;
    
   	 x1 = ( -b - <font color="red">Math.sqrt</font>( b*b - 4*a*c ) ) / (2*a);
   	 x2 = ( -b + <font color="red">Math.sqrt</font>( b*b - 4*a*c ) ) / (2*a);           
    
   	 System.out.print("a = ");
   	 System.out.println(a);
   	 System.out.print("b = ");
   	 System.out.println(b);
   	 System.out.print("c = ");
   	 System.out.println(c);
   	 System.out.print("x1 = ");
   	 System.out.println(x1);
   	 System.out.print("x2 = ");
   	 System.out.println(x2);
   }
</pre> </b> </font> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p>
      <hr> <p> </p></li>
     <li> <font color="red"><b>But</b></font>.... <b>because</b>: <p> </p>
      <ul> 
       <table bgcolor="lightcyan" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> The package <font color="blue"><b>java.lang</b></font> contains <b> classes</b> that are <font color="red"><b>fundamental</b></font> to the <font color="blue"><b>design of the Java programming language</b></font>. </li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> <b><i>all </i>classes </b> in the <font color="red"><b><tt>java.lang</tt></b></font> package are <span style="BACKGROUND-COLOR: yellow"> <font color="blue"><b><i>automatically</i> included</b></font> </span> in <b>every Java program</b> (the <b>Java compiler</b> is programmed to do this) </p><p> That is <font color="blue"><b>why</b></font> we <font color="red"><b>did <i>not</i> need</b></font> to <font color="blue"><b>import <tt>java.lang.Math</tt></b></font> in our program. </p></li>
    </ul> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p>
    <hr> 
    <hr> <p> </p></li>
   <li> <font color="darkmagenta"><b> Summary: <i>importing</i> methods in the Java library </b></font> <p> </p>
    <ul> 
     <li> <b>Rule of usage:</b> <p> </p>
      <ul> 
       <table bgcolor="lightyellow" border="5"> 
        <tbody>
         <tr> 
          <td> 
           <ul> 
            <li> You can use a <font color="blue"><b>class</b></font> inside the <b>Java library</b> by <b><i>identifying</i></b> the class by its <font color="red"><b>(very long and awkward) class path</b></font> <p> </p></li>
            <li> If a <b>Java program</b> wants to use a <font color="red"><b>class</b></font> in the <b>Java library</b> without having to specify the <font color="darkred"><b>(very long and awkward) class path</b></font> the <b>Java program</b> <font color="blue"><b>must <i>first</i></b></font> <font color="red"><b><i>import</i></b></font> the <font color="blue"><b>class</b></font> <p> </p><p> </p>
             <hr> <p> </p></li>
            <li> <font color="blue"><b><i>All</i> classes </b></font> in the <font color="red"><b><tt>java.lang</tt></b></font> package have <b>already been imported</b> into a <font color="blue"><b>Java program</b></font> <p> (You can use the <b>classes</b> (and the methods inside these classes) in <font color="darkred"><b><tt>java.lang</tt></b></font> <font color="red"><b><i>without</i></b></font> the <font color="blue"><b>import clause</b></font>) </p></li>
           </ul> </td> 
         </tr> 
        </tbody>
       </table> 
      </ul> <p> </p></li>
    </ul> <p> </p></li>
  </ul> 
  <p> </p>
  <hr> 
  <hr> 
  <hr> 
  <hr> 
 </body>
</html>