<!doctype html>
<html lang="en">
 <head> 
  <meta name="keywords" content="RESTful Services HTTP basic Authentication - Java Tutorial Blog"> 
  <meta name="verify-v1" content="1OVd8tvioq4O1NR0pxuDN93LbCUNz3uxPbkbevsrObw="> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <meta name="robots" content="index,follow">
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://javapapers.com/feed/"> 
  <link rel="alternate" type="text/xml" title="RSS .92" href="http://javapapers.com/feed/rss/"> 
  <link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://javapapers.com/feed/atom/"> 
  <link rel="pingback" href="http://javapapers.com/xmlrpc.php"> 
  <link rel="shortcut icon" href="http://javapapers.com/favicon.ico" type="image/x-icon"> 
  <!-- This site is optimized with the Yoast SEO plugin v5.1 - https://yoast.com/wordpress/plugins/seo/ --> 
  <title>RESTful Services HTTP basic Authentication - Java Tutorial Blog</title> 
  <meta name="description" content="In this RESTful services tutorial, we will see about how to do HTTP basic authentication. There are many ways to implement authentication in RESTful web se"> 
  <link rel="canonical" href="http://javapapers.com/web-service/restful-services-http-basic-authentication/"> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="RESTful Services HTTP basic Authentication - Java Tutorial Blog"> 
  <meta property="og:description" content="In this RESTful services tutorial, we will see about how to do HTTP basic authentication. There are many ways to implement authentication in RESTful web se"> 
  <meta property="og:url" content="http://javapapers.com/web-service/restful-services-http-basic-authentication/"> 
  <meta property="og:site_name" content="Java Tutorial Blog"> 
  <meta property="article:tag" content="Web Service"> 
  <meta property="article:section" content="Web Service"> 
  <meta property="article:published_time" content="2015-02-11T21:48:37+05:30"> 
  <meta property="og:image" content="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-Authentication-Information.jpg"> 
  <meta property="og:image" content="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-http-basic-Authentication.jpg"> 
  <meta property="og:image" content="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-Authentication.jpg"> 
  <!-- / Yoast SEO plugin. --> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="stylesheet" id="papers-style-css" href="http://javapapers.com/wp-content/themes/papers/papers_040720171.css" type="text/css" media="all"> 
  <link rel="https://api.w.org/" href="http://javapapers.com/wp-json/"> 
  <link rel="shortlink" href="http://javapapers.com/?p=3343"> 
  <link rel="alternate" type="application/json+oembed" href="http://javapapers.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fjavapapers.com%2Fweb-service%2Frestful-services-http-basic-authentication%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://javapapers.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fjavapapers.com%2Fweb-service%2Frestful-services-http-basic-authentication%2F&amp;format=xml"> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-4275351-1', 'auto');
  ga('send', 'pageview');

</script> 
 </head> 
 <body onload="prettyPrint()"> 
  <div id="site_header"> 
   <div class="content"> 
    <a id="java-blog" href="http://javapapers.com" title="Java Blog"><img width="163" height="34" src="http://javapapers.com/wp-content/themes/papers/images/java-papers.png" alt="Java Blog"></a> 
    <div class="header-link-container"> 
     <a id="header-contact-navigation" href="/hire/">Hire Me</a> 
    </div> 
   </div> 
  </div>
  <div class="content"> 
   <div id="tutorial-body"> 
    <h1>RESTful Services HTTP basic Authentication</h1> 
    <div class="share"> 
     <ul> 
      <li><a href="https://www.facebook.com/sharer/sharer.php?u="><img src="http://javapapers.com/wp-content/themes/papers/images/facebook-social.png" title="Share on Facebook"></a></li> 
      <li><a href="https://twitter.com/intent/tweet?original_referer=http://javapapers.com&amp;source=tweetbutton&amp;text=RESTful Services HTTP basic Authentication;url=&amp;via=javapapers"><img src="http://javapapers.com/wp-content/themes/papers/images/twitter-social.png" title="Share on Twitter"></a></li> 
      <li><a href="https://www.linkedin.com/shareArticle?mini=true&amp;url=&amp;media=RESTful Services HTTP basic Authentication"><img src="http://javapapers.com/wp-content/themes/papers/images/linkedin-social.png" title="Share on Linkedin"></a></li> 
      <li><a href="mailto:?Subject=Sharing%20you%20about%20RESTful Services HTTP basic Authentication&amp;Body=This %20is%20interesting %20to%20learn.%20Just%20check%20out%20"><img src="http://javapapers.com/wp-content/themes/papers/images/email-social.png" title="Share on Email"></a></li> 
     </ul> 
    </div> 
    <p>In this RESTful services tutorial, we will see about how to do HTTP basic authentication. There are many ways to implement authentication in RESTful web services. HTTP basic authentication is the first step in learning security.</p> 
    <p>In this tutorial, I have not used any Jersey specific interceptors and we will see about them in future tutorials. I will be using a standard servlet filter to intercept the request, do the authentication and continue with response.</p> 
    <p>Follow the earlier written tutorial, <a href="http://javapapers.com/java/restful-web-services-with-java-jax-rs-using-jersey/" title="RESTful Web Services with Java JAX-RS using Jersey">RESTful Web Services with Java JAX-RS using Jersey</a> to setup a basic hello world RESTful service.</p> 
    <h2>Step1: Intercept the request</h2> 
    <pre class="prettyprint lang-xml">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0"&gt;
  &lt;display-name&gt;RESTful Service Authentication&lt;/display-name&gt;
  &lt;welcome-file-list&gt;
    &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;
  &lt;/welcome-file-list&gt;
  &lt;servlet&gt;
    &lt;servlet-name&gt;RESTful Jersey Hello World Service&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;
    &lt;init-param&gt;
      &lt;param-name&gt;jersey.config.server.provider.packages&lt;/param-name&gt;
      &lt;param-value&gt;com.javapapers.webservices.rest.jersey&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
  &lt;/servlet&gt;
  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;RESTful Jersey Hello World Service&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/rest/*&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;
  &lt;filter&gt;
    &lt;filter-name&gt;AuthenticationFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;com.javapapers.webservices.rest.jersey.RestAuthenticationFilter&lt;/filter-class&gt;
  &lt;/filter&gt;
  &lt;filter-mapping&gt;
    &lt;filter-name&gt;AuthenticationFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/rest/*&lt;/url-pattern&gt;
  &lt;/filter-mapping&gt;
&lt;/web-app&gt;
</pre> 
    <p>We have added a servlet filter class <code>RestAuthenticationFilter</code> for all urls of the form <code>/rest/*</code>.</p> 
    <h2>Step 2: RestAuthenticationFilter class</h2> 
    <pre class="prettyprint lang-java">
package com.javapapers.webservices.rest.jersey;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class RestAuthenticationFilter implements javax.servlet.Filter {
	public static final String AUTHENTICATION_HEADER = "Authorization";

	@Override
	public void doFilter(ServletRequest request, ServletResponse response,
			FilterChain filter) throws IOException, ServletException {
		if (request instanceof HttpServletRequest) {
			HttpServletRequest httpServletRequest = (HttpServletRequest) request;
			String authCredentials = httpServletRequest
					.getHeader(AUTHENTICATION_HEADER);

			// better injected
			AuthenticationService authenticationService = new AuthenticationService();

			boolean authenticationStatus = authenticationService
					.authenticate(authCredentials);

			if (authenticationStatus) {
				filter.doFilter(request, response);
			} else {
				if (response instanceof HttpServletResponse) {
					HttpServletResponse httpServletResponse = (HttpServletResponse) response;
					httpServletResponse
							.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
				}
			}
		}
	}

	@Override
	public void destroy() {
	}

	@Override
	public void init(FilterConfig arg0) throws ServletException {
	}
}

</pre> 
    <p>Before the RESTful resource is invoked, we get control in the above class. We get the HTTP <code>Header</code> value for <code>Authorization</code>. That’s the Basic authentication credential and we will pass it on to <code>AuthenticationService</code> for validation.</p> 
    <h2>Step 3: AuthenticationService</h2> 
    <pre class="prettyprint lang-java">
package com.javapapers.webservices.rest.jersey;

import java.io.IOException;
import java.util.Base64;
import java.util.StringTokenizer;

public class AuthenticationService {
	public boolean authenticate(String authCredentials) {

		if (null == authCredentials)
			return false;
		// header value format will be "Basic encodedstring" for Basic
		// authentication. Example "Basic YWRtaW46YWRtaW4="
		final String encodedUserPassword = authCredentials.replaceFirst("Basic"
				+ " ", "");
		String usernameAndPassword = null;
		try {
			byte[] decodedBytes = Base64.getDecoder().decode(
					encodedUserPassword);
			usernameAndPassword = new String(decodedBytes, "UTF-8");
		} catch (IOException e) {
			e.printStackTrace();
		}
		final StringTokenizer tokenizer = new StringTokenizer(
				usernameAndPassword, ":");
		final String username = tokenizer.nextToken();
		final String password = tokenizer.nextToken();

		// we have fixed the userid and password as admin
		// call some UserService/LDAP here
		boolean authenticationStatus = "admin".equals(username)
				&amp;&amp; "admin".equals(password);
		return authenticationStatus;
	}
}

</pre> 
    <p>Here in we have standard Java code. We extract the username and password from the auth string. Then verify it against the existing credentials and return boolean accordingly.</p> 
    <h2>Step 4: RESTful resource</h2> 
    <pre class="prettyprint lang-java">
package com.javapapers.webservices.rest.jersey;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

@Path("/helloworld")
public class HelloWorld {

	@GET
	@Produces(MediaType.TEXT_PLAIN)
	public String sayPlainTextHello() {
		return "Hello World RESTful Jersey!";
	}

	@GET
	@Produces(MediaType.TEXT_XML)
	public String sayXMLHello() {
		return "&lt;?xml version=\"1.0\"?&gt;" + "&lt;hello&gt; Hello World RESTful Jersey"
				+ "&lt;/hello&gt;";
	}

	@GET
	@Produces(MediaType.TEXT_HTML)
	public String sayHtmlHello() {
		return "&lt;html&gt; " + "&lt;title&gt;" + "Hello World RESTful Jersey"
				+ "&lt;/title&gt;" + "&lt;body&gt;&lt;h1&gt;" + "Hello World RESTful Jersey"
				+ "&lt;/body&gt;&lt;/h1&gt;" + "&lt;/html&gt; ";
	}

}
</pre> 
    <p>Above is a Jersey implementation of Java JAX-RS RESTful service. This should be invoked on successful authentication. If the authentication is failed we will get 401 status error given in the Servlet authentication filter.</p> 
    <h2>Testing RESTful Service with a REST client</h2> 
    <p>I used “Advanced Rest Client”, a Chrome extension to test the RESTful services. Its nice and does the job well. Add it in your Chrome browser and send the request as below. Sending the basic auth credentials in this REST client is not so trivial. They should think about adding an explicit button. How we should do it is, go to the “Headers” tab and type “Authorization” in the key field and then go to the value field. On focus of value, we get a small pop-up button “Construct” and on clicking that we get the form to enter username and password.</p> 
    <p><img src="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-Authentication-Information.jpg" alt="RESTful-Services-Authentication-Information" width="663" height="353" class="alignnone size-full wp-image-3345" srcset="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-Authentication-Information.jpg 663w, http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-Authentication-Information-300x160.jpg 300w" sizes="(max-width: 663px) 100vw, 663px"></p> 
    <p>On pop-up, enter the authentication credentials.</p> 
    <p><img src="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-http-basic-Authentication.jpg" alt="RESTful-Services-http-basic-Authentication" width="610" height="445" class="alignnone size-full wp-image-3353" srcset="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-http-basic-Authentication.jpg 610w, http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-http-basic-Authentication-300x219.jpg 300w" sizes="(max-width: 610px) 100vw, 610px"></p> 
    <p>After adding credentials, ensure that the method selected is GET for this example tutorial and then send the request. On success, the REST resource should respond with hello world message.</p> 
    <p><img src="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-Authentication.jpg" alt="RESTful-Services-Authentication" width="610" height="607" class="alignnone size-full wp-image-3347" srcset="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-Authentication.jpg 610w, http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-Authentication-150x150.jpg 150w, http://javapapers.com/wp-content/uploads/2015/02/RESTful-Services-Authentication-300x300.jpg 300w" sizes="(max-width: 610px) 100vw, 610px"></p> 
    <h2>Download the RESTful Services Example Authentication Project</h2> 
    <p class="download"><a href="http://javapapers.com/wp-content/uploads/2015/02/RESTful-Service-Authentication.zip">Download</a></p> 
    <p>Project zip does not include the dependent jar files. I have included all the JAR file from the Jax-RS Jersey download bundle in the lib folder. Please download all those jar files and add to the project lib. Following are those JAR files.</p> 
    <pre class="prettyprint">
aopalliance-repackaged-2.4.0-b06.jar
asm-debug-all-5.0.2.jar
hk2-api-2.4.0-b06.jar
hk2-locator-2.4.0-b06.jar
hk2-utils-2.4.0-b06.jar
javassist-3.18.1-GA.jar
javax.annotation-api-1.2.jar
javax.inject-2.4.0-b06.jar
javax.servlet-api-3.0.1.jar
javax.ws.rs-api-2.0.1.jar
jaxb-api-2.2.7.jar
jersey-client.jar
jersey-common.jar
jersey-container-servlet-core.jar
jersey-container-servlet.jar
jersey-guava-2.15.jar
jersey-server.jar
org.osgi.core-4.2.0.jar
osgi-resource-locator-1.0.1.jar
persistence-api-1.0.jar
validation-api-1.1.0.Final.jar
</pre> 
    <p>This Web Service tutorial was added on 11/02/2015.</p> 
    <div class="share"> 
     <ul> 
      <li><a href="https://www.facebook.com/sharer/sharer.php?u="><img src="http://javapapers.com/wp-content/themes/papers/images/facebook-social.png" title="Share on Facebook"></a></li> 
      <li><a href="https://twitter.com/intent/tweet?original_referer=http://javapapers.com&amp;source=tweetbutton&amp;text=RESTful Services HTTP basic Authentication;url=&amp;via=javapapers"><img src="http://javapapers.com/wp-content/themes/papers/images/twitter-social.png" title="Share on Twitter"></a></li> 
      <li><a href="https://www.linkedin.com/shareArticle?mini=true&amp;url=&amp;media=RESTful Services HTTP basic Authentication"><img src="http://javapapers.com/wp-content/themes/papers/images/linkedin-social.png" title="Share on Linkedin"></a></li> 
      <li><a href="mailto:?Subject=Sharing%20you%20about%20RESTful Services HTTP basic Authentication&amp;Body=This %20is%20interesting %20to%20learn.%20Just%20check%20out%20"><img src="http://javapapers.com/wp-content/themes/papers/images/email-social.png" title="Share on Email"></a></li> 
     </ul> 
    </div> 
    <div id="tutorial-navigation"> 
     <div id="previous-tutorial">
      <div class="navigation-label">
       Previous:
      </div>
      <a href="http://javapapers.com/web-service/restful-services-crud-with-java-jax-rs-jersey/" rel="prev">RESTful Services CRUD with Java JAX-RS Jersey</a>
     </div> 
     <div id="next-tutorial">
      <div class="navigation-label">
       Next:
      </div>
      <a href="http://javapapers.com/web-service/intercept-jax-rs-request-with-jersey-containerrequestfilter/" rel="next">Intercept JAX-RS Request with Jersey ContainerRequestFilter</a>
     </div> 
    </div> 
    <div id="comments" class="comments-area"> 
     <h2 class="comments-title">Comments on "RESTful Services HTTP basic Authentication" Tutorial:</h2> 
     <ol class="commentlist"> 
      <li class="comment even thread-even depth-1" id="comment-157475"> 
       <div id="div-comment-157475" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Harry</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-157475"> 12/02/2015 at 11:48 am</a> 
        </div> 
        <p>Hi Joe, i really like your RESTful Services series tutorial, in this tutorial, i am using the zipped project and import it in Eclipse(Luna),however,when i tried to send request in Advanced Rest Client,i got the following error in the console</p> 
        <p>Servlet.service() for servlet [RESTful Jersey Hello World Service] in context with path [/RESTful_Service_Authentication] threw exception [Filter execution threw an exception] with root cause<br> java.lang.ClassNotFoundException: java.util.Base64<br> at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1305)<br> at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1157)<br> Basically, it is saying that java.lang.ClassNotFoundException: java.util.Base64, but there is not compiling error in Eclipse, i have no idea why this is happening. Can you help me please ? i am runing JDK 8 and have tested both on Tomcat 7 and Tomcat 8,producing the same error.</p> 
        <p>Thanks</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment odd alt thread-odd thread-alt depth-1" id="comment-157476"> 
       <div id="div-comment-157476" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Deepak</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-157476"> 12/02/2015 at 12:36 pm</a> 
        </div> 
        <p>Nice…</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment even thread-even depth-1" id="comment-157477"> 
       <div id="div-comment-157477" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Satya Prasad</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-157477"> 12/02/2015 at 2:45 pm</a> 
        </div> 
        <p>Can you tell me why Jersey’s ServletContainer is more preferred to spring’s DispatcherServlet?</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment byuser comment-author-admin bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-157478"> 
       <div id="div-comment-157478" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn"><a href="http://javapapers.com" rel="external nofollow" class="url">Joe</a></cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-157478"> 12/02/2015 at 4:06 pm</a> 
        </div> 
        <p>@Harry,</p> 
        <p>“Edit Server Runtime Environment” and ensure that the JRE is pointing to JDK8.</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment even thread-even depth-1" id="comment-157482"> 
       <div id="div-comment-157482" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Krishna kumari</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-157482"> 12/02/2015 at 10:50 pm</a> 
        </div> 
        <p>Very helpful. Good explanation.</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-157523"> 
       <div id="div-comment-157523" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn"><a href="http://javapapers.com/web-service/intercept-jax-rs-request-with-jersey-containerrequestfilter/" rel="external nofollow" class="url">Intercept JAX-RS Request with Jersey ContainerRequestFilter - Java Tutorial</a></cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-157523"> 25/02/2015 at 7:00 pm</a> 
        </div> 
        <p>[…] In this RESTful services tutorial series, we will see about how to intercept a request in JAX-RS restful web service. JAX-RS specification is the Java API for RESTful web services and Jersey is its reference implementation. In the previous tutorial we saw about doing authentication in REST with plain servlet filters. […]</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment even thread-even depth-1" id="comment-157743"> 
       <div id="div-comment-157743" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Peter</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-157743"> 29/04/2015 at 8:26 pm</a> 
        </div> 
        <p>Joe,</p> 
        <p>Thanks for these tutorials. This was the simplest version of adding basic authentication to a REST service that I could find.</p> 
        <p>Great job!</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment odd alt thread-odd thread-alt depth-1" id="comment-157805"> 
       <div id="div-comment-157805" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Chuck</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-157805"> 18/05/2015 at 7:39 pm</a> 
        </div> 
        <p>Hi Joe,</p> 
        <p>I am deploying this in a Weblogic 10 container (forced to use Jersey 1.2 due to JDK 5). At any rate, when I send the basic auth header, it appears that Weblogic wants a valid weblogic user (and will not allow me to intercept the request in my filter) and fails. Any idea how i can bypass this?</p> 
        <p>Thanks!</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment even thread-even depth-1" id="comment-157932"> 
       <div id="div-comment-157932" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Gerhard</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-157932"> 24/06/2015 at 6:13 pm</a> 
        </div> 
        <p>Hi Joe,</p> 
        <p>Thanks so much for this tutorial – it actually works !!!</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment odd alt thread-odd thread-alt depth-1" id="comment-158689"> 
       <div id="div-comment-158689" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Yatender</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-158689"> 25/08/2015 at 4:09 pm</a> 
        </div> 
        <p>Very helpful and working fine :) </p> 
        <p>Thanks a lot :)</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment even thread-even depth-1" id="comment-158739"> 
       <div id="div-comment-158739" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Sanket</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-158739"> 28/08/2015 at 5:30 pm</a> 
        </div> 
        <p>Hi, thank you for this post.<br> I have one doubt<br> After calling AuthenticationService, when it returns “true”<br> You have called doFilter method.</p> 
        <p>if (authenticationStatus) {<br> filter.doFilter(request, response);}</p> 
        <p>What does this filter.doFilter() method does excatly??</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment odd alt thread-odd thread-alt depth-1" id="comment-159572"> 
       <div id="div-comment-159572" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Anhad</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-159572"> 16/11/2015 at 1:49 pm</a> 
        </div> 
        <p>This is perfect!!<br> Clear and to the point.<br> Thanks a lot.<br> Cheers,<br> Anhad</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment even thread-even depth-1" id="comment-159583"> 
       <div id="div-comment-159583" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">BG</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-159583"> 22/11/2015 at 7:37 am</a> 
        </div> 
        <p>Thanks a lot, very great article with complete information.</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment odd alt thread-odd thread-alt depth-1" id="comment-159587"> 
       <div id="div-comment-159587" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Nitesh</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-159587"> 24/11/2015 at 2:43 pm</a> 
        </div> 
        <p>Thank you for the tutorial. I am able to run it actually.</p> 
       </div> </li>
      <!-- #comment-## --> 
      <li class="comment even thread-even depth-1" id="comment-159612"> 
       <div id="div-comment-159612" class="comment-body"> 
        <div class="comment-author vcard"> 
         <cite class="fn">Marcio Barroso</cite> 
         <span class="says">says:</span> 
        </div> 
        <div class="comment-meta commentmetadata">
         <a href="http://javapapers.com/web-service/restful-services-http-basic-authentication/#comment-159612"> 01/12/2015 at 2:25 am</a> 
        </div> 
        <p>Thanks a lot man ! Life saver. Great job !</p> 
       </div> </li>
      <!-- #comment-## --> 
     </ol> 
     <p class="no-comments">Comments are closed for this "RESTful Services HTTP basic Authentication" tutorial.</p> 
    </div> 
   </div> 
   <div id="sidebar"> 
    <div id="aboutcntnt"> 
     <div id="photo"> 
      <img src="http://javapapers.com/wp-content/themes/papers/images/joe.png" alt="Joe" width="100" height="100" title="Joe"> 
     </div> 
     <div id="aboutdesc"> 
      <p>Hi, I am <a href="http://javapapers.com/about-me/" title="About Joe and Java Papers">Joe</a>, Java Papers is my Android &amp; Java blog. I am passionately publishing it for past nine years.</p> 
      <p>I accept paid work on Android. Let's start working on your dream App. Contact Me!</p> 
     </div>
     <div id="contactMe"> 
      <a href="mailto:joe@javapapers.com" title="Contact Me">joe@javapapers.com</a>
     </div>
    </div> 
    <div class="hiadcomponent">
     <div class="heading">
      Free Email Updates (11000 Subscribers)
     </div>
     <div> 
      <form action="http://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open('http://feedburner.google.com/fb/a/mailverify?uri=javapapers/java-interview-questions', 'popupwindow', 'scrollbars=yes,width=550,height=520');return true"> 
       <p> <input placeholder="Enter your email here" type="text" class="feedb-email" name="email"><input type="hidden" value="javapapers/java-interview-questions" name="uri"><input type="hidden" name="loc" value="en_US"><input type="submit" value="Subscribe" class="subscribe"> </p> 
      </form> 
     </div> 
    </div> 
    <div id="recommended"> 
     <div class="heading">
      Recommended
     </div> 
     <ul> 
      <li><a href="http://javapapers.com/android/android-location-fused-provider/">Android Location Fused Provider</a> 
       <div class="recommended-taxonomy">
        under 
        <a href="http://javapapers.com/category/android/location/">Location</a>
       </div> </li> 
      <li><a href="http://javapapers.com/core-java/why-multiple-inheritance-is-not-supported-in-java/">Why Multiple Inheritance is Not Supported in Java</a> 
       <div class="recommended-taxonomy">
        under 
        <a href="http://javapapers.com/category/java/java-and-oops/">Java and OOPS</a>
       </div></li> 
      <li><a href="http://javapapers.com/android/android-alarm-clock-tutorial/">Android Alarm Clock Tutorial</a> 
       <div class="recommended-taxonomy">
        under 
        <a href="http://javapapers.com/category/android/simple-android-apps/">Simple Android Apps</a>
       </div> </li> 
      <li><a href="http://javapapers.com/java/types-of-java-garbage-collectors/">Types of Java Garbage Collectors</a> 
       <div class="recommended-taxonomy">
        under 
        <a href="http://javapapers.com/category/java/java-garbage-collection/">Java Garbage Collection</a>
       </div></li> 
      <li><a href="http://javapapers.com/android/draw-path-on-google-maps-android-api/">Draw Path on Google Maps Android API</a> 
       <div class="recommended-taxonomy">
        under 
        <a href="http://javapapers.com/category/android/google-maps/">Google Maps</a>
       </div> </li> 
     </ul> 
    </div> 
    <div class="heading">
     Menu
    </div> 
    <div id="tutorial-menu"> 
     <ul class="main-menu">
      <li class="cat-item cat-item-117"><a href="http://javapapers.com/category/java/">Java</a></li>
      <li class="cat-item cat-item-118"><a href="http://javapapers.com/category/android/">Android</a></li>
      <li class="cat-item cat-item-104"><a href="http://javapapers.com/category/design-patterns/">Design Patterns</a></li>
      <li class="cat-item cat-item-119"><a href="http://javapapers.com/category/spring/">Spring</a></li>
      <li class="cat-item cat-item-105"><a href="http://javapapers.com/category/servlet/">Servlet</a></li>
      <li class="cat-item cat-item-123"><a href="http://javapapers.com/category/hibernate/">Hibernate</a></li>
      <li class="cat-item cat-item-60"><a href="http://javapapers.com/category/web-services/">Web Services</a>
       <ul class="sub-menu">
        <li class="cat-item cat-item-61"><a href="http://javapapers.com/category/web-services/web-services-basics/">Web Services Basics</a>
         <ul class="post-list">
          <li><a class="post-menu" href="http://javapapers.com/web-service/intercept-jax-rs-request-with-jersey-containerrequestfilter/">Intercept JAX-RS Request with Jersey ContainerRequestFilter</a></li>
          <li><a class="post-menu" href="http://javapapers.com/web-service/web-service-introduction-tutorial/">Web Service Introduction Tutorial</a></li>
          <li><a class="post-menu" href="http://javapapers.com/web-service/java-web-service-using-eclipse/">Java Web Service using Eclipse</a></li>
          <li><a class="post-menu" href="http://javapapers.com/web-service/axis2-web-service-using-eclipse/">Axis2 Web Service using Eclipse</a></li>
          <li><a class="post-menu" href="http://javapapers.com/web-service/soap-web-service-introduction/">Soap Web Service - Introduction</a></li>
          <li><a class="post-menu" href="http://javapapers.com/web-service/rest-vs-soap/">REST vs SOAP</a></li>
          <li class="current-post">RESTful Services HTTP basic Authentication</li>
          <li><a class="post-menu" href="http://javapapers.com/java/restful-web-services-with-java-jax-rs-using-jersey/">RESTful Web Services with Java JAX-RS using Jersey</a></li>
          <li><a class="post-menu" href="http://javapapers.com/web-service/restful-services-crud-with-java-jax-rs-jersey/">RESTful Services CRUD with Java JAX-RS Jersey</a></li>
          <li><a class="post-menu" href="http://javapapers.com/java/java-restful-web-services-with-json-and-jersey/">Java RESTful Web Services With JSON and Jersey</a></li>
         </ul></li>
       </ul></li>
     </ul>
    </div> 
   </div>
  </div> 
  <div id="footer-contact-note"> 
   <div class="footer-contact-banner-title">
    Let's get to work.
   </div> 
   <div id="footer-photo"> 
    <img src="http://javapapers.com/wp-content/themes/papers/images/author.png" alt="Joe" width="100" height="100" title="Joe"> 
   </div> 
   <div id="footer-intro">
    I have been programming non-stop for close to two decades. I love to develop mobile APPs and provide Android APP development and enhancement services.
   </div> 
   <div id="footer-button-container"> 
    <a id="footer-contact-navigation" href="/hire/">Hire Me</a> 
   </div> 
  </div> 
  <div id="footer"> 
   <ul id="footer-menu"> 
    <li class="cat-item cat-item-19"><a href="http://javapapers.com/category/android/" title="Android Tutorial">Android</a></li> 
    <li class="cat-item cat-item-33"><a href="http://javapapers.com/category/java/" title="Java Tutorial">Java</a></li> 
    <li class="cat-item cat-item-14"><a href="http://javapapers.com/category/design-patterns/" title="Design Patterns Tutorial">Design Patterns</a></li> 
   </ul> 
   <div class="follow"> 
    <a href="https://plus.google.com/+JosephKulandai?rel=author" rel="nofollow" title="Java Tutorial Blog Google Plus Page" target="_blank"><img width="16" height="16" src="http://javapapers.com/wp-content/themes/papers/images/googleplus.png" alt="Java Tutorial Blog Google Plus Page"></a>
    <a class="facebook" href="https://www.facebook.com/javapapers" rel="nofollow" title="Java Tutorial Blog Facebook Page" target="_blank"><img width="16" height="16" src="http://javapapers.com/wp-content/themes/papers/images/facebook.png" alt="Java Tutorial Blog Facebook Page"></a>
    <a class="twitter" href="https://twitter.com/javapapers" rel="nofollow" title="Java Tutorial Blog Twitter Page" target="_blank"><img width="16" height="16" src="http://javapapers.com/wp-content/themes/papers/images/twitter.png" alt="Java Tutorial Blog Twitter Page"></a>
    <a class="feed" href="/feed/" title="Java Tutorial Blog Feed"><img width="16" height="16" src="http://javapapers.com/wp-content/themes/papers/images/feed.png" alt="Java Tutorial Blog Feed"></a> 
   </div> 
   <div id="footer-bottom"> 
    <p> © 2008 - 2017 <a href="/" title="Java Blog">javapapers.com</a> | The design and content are copyrighted to Joe and may not be reproduced in any form. </p> 
   </div> 
  </div> 
  <script type="text/javascript" src="http://javapapers.com/wp-includes/js/wp-embed.min.js?ver=4.8.2"></script> 
  <script src="http://javapapers.com/wp-content/themes/papers/prettify.js"></script>  
 </body>
</html>