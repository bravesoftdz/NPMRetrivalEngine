<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
 <head> 
  <meta http-equiv="content-type" content="text/html;charset=UTF-8"> 
  <title>CodeNav</title> 
  <script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,t,n){function r(n){if(!t[n]){var o=t[n]={exports:{}};e[n][0].call(o.exports,function(t){var o=e[n][1][t];return r(o||t)},o,o.exports)}return t[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(e,t,n){function r(){}function o(e,t,n){return function(){return i(e,[(new Date).getTime()].concat(u(arguments)),t?null:this,n),t?void 0:this}}var i=e("handle"),a=e(2),u=e(3),c=e("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var s=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",p=l+"ixn-";a(s,function(e,t){f[t]=o(l+t,!0,"api")}),f.addPageAction=o(l+"addPageAction",!0),f.setCurrentRouteName=o(l+"routeName",!0),t.exports=newrelic,f.interaction=function(){return(new r).get()};var d=r.prototype={createTracer:function(e,t){var n={},r=this,o="function"==typeof t;return i(p+"tracer",[Date.now(),e,n],r),function(){if(c.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return t.apply(this,arguments)}finally{c.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,t){d[t]=o(p+t)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,(new Date).getTime()])}},{}],2:[function(e,t,n){function r(e,t){var n=[],r="",i=0;for(r in e)o.call(e,r)&&(n[i]=t(r,e[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],3:[function(e,t,n){function r(e,t,n){t||(t=0),"undefined"==typeof n&&(n=e?e.length:0);for(var r=-1,o=n-t||0,i=Array(o<0?0:o);++r<o;)i[r]=e[t+r];return i}t.exports=r},{}],ee:[function(e,t,n){function r(){}function o(e){function t(e){return e&&e instanceof r?e:e?c(e,u,i):i()}function n(n,r,o){if(!p.aborted){e&&e(n,r,o);for(var i=t(o),a=v(n),u=a.length,c=0;c<u;c++)a[c].apply(i,r);var f=s[w[n]];return f&&f.push([y,n,r,i]),i}}function d(e,t){b[e]=v(e).concat(t)}function v(e){return b[e]||[]}function g(e){return l[e]=l[e]||o(n)}function m(e,t){f(e,function(e,n){t=t||"feature",w[n]=t,t in s||(s[t]=[])})}var b={},w={},y={on:d,emit:n,get:g,listeners:v,context:t,buffer:m,abort:a,aborted:!1};return y}function i(){return new r}function a(){(s.api||s.feature)&&(p.aborted=!0,s=p.backlog={})}var u="nr@context",c=e("gos"),f=e(2),s={},l={},p=t.exports=o();p.backlog=s},{}],gos:[function(e,t,n){function r(e,t,n){if(o.call(e,t))return e[t];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[t]=r,r}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],handle:[function(e,t,n){function r(e,t,n,r){o.buffer([e],r),o.emit(e,t,n)}var o=e("ee").get("handle");t.exports=r,r.ee=o},{}],id:[function(e,t,n){function r(e){var t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");t.exports=r},{}],loader:[function(e,t,n){function r(){if(!h++){var e=y.info=NREUM.info,t=l.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&t))return f.abort();c(b,function(t,n){e[t]||(e[t]=n)}),u("mark",["onload",a()],null,"api");var n=l.createElement("script");n.src="https://"+e.agent,t.parentNode.insertBefore(n,t)}}function o(){"complete"===l.readyState&&i()}function i(){u("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var u=e("handle"),c=e(2),f=e("ee"),s=window,l=s.document,p="addEventListener",d="attachEvent",v=s.XMLHttpRequest,g=v&&v.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:v,REQ:s.Request,EV:s.Event,PR:s.Promise,MO:s.MutationObserver},e(1);var m=""+location,b={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1016.min.js"},w=v&&g&&g[p]&&!/CriOS/.test(navigator.userAgent),y=t.exports={offset:a(),origin:m,features:{},xhrWrappable:w};l[p]?(l[p]("DOMContentLoaded",i,!1),s[p]("load",r,!1)):(l[d]("onreadystatechange",o),s[d]("onload",r)),u("mark",["firstbyte",a()],null,"api");var h=0},{}]},{},["loader"]);</script>
  <link rel="stylesheet" href="/all-min.css" type="text/css"> 
  <link rel="prefetch" href="/images/treeview-default-line.gif"> 
  <link rel="prefetch" href="/images/treeview-default.gif"> 
  <link rel="prefetch" href="/images/navigator.png"> 
  <link rel="prefetch" href="/images/code_page_icons.png"> 
  <link rel="prefetch" href="/images/loader1.gif"> 
  <link rel="prefetch" href="/images/ajax-loader.gif"> 
  <link rel="prefetch" href="/images/ajax-loader2.gif"> 
  <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"> 
  <script src="/all-min.js" type="text/javascript"></script> 
  <!--
    <script src="/js/jquery-2.1.3.min.js" type="text/javascript"></script>
    <script src="/js/jquery-ui.min.js" type="text/javascript"></script>

    <script src="/jquery/jquery.cookie.js" type="text/javascript"></script>
    <script src="/jquery/jquery.treeview/jquery.treeview.js" type="text/javascript"></script>
    <script src="/jquery/jquery.treeview/jquery.treeview.edit.js" type="text/javascript"></script>
    <script src="/jquery/jquery.treeview/jquery.treeview.async.js" type="text/javascript"></script>
    <script src="/js/jquery.scrollTo.js" type="text/javascript"></script>
    <script src="/js/jquery.jgrowl.js" type="text/javascript"></script>
    <script src="/jquery/vtip.js" type="text/javascript"></script>
    <script src="/js/jquery.ui-contextmenu.js" type="text/javascript"></script>
    
    <script src="/js/codenav.js" type="text/javascript"></script>
    
    <link rel="stylesheet" href="/style/jquery-ui.structure.css" type="text/css" />
    <link rel="stylesheet" href="/style/jquery-ui.theme.css" type="text/css" />

    <link rel="stylesheet" href="/jquery/jquery.treeview/jquery.treeview.css" type="text/css" />
    <link rel="stylesheet" href="/style/jquery.jgrowl.css" type="text/css" />
    <link rel="stylesheet" href="/jquery/vtip.css" type="text/css" />

    <link rel="stylesheet" href="/style/codenav.css" type="text/css" />
    --> 
  <script type="text/javascript">
var theme = $.cookie("theme-option");
if(theme) {
    if(theme != 'smoothness') {
        $(document).find('head').append('<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/themes/' + theme + '/jquery-ui.css" />');
    }
}
</script> 
  <script type="text/javascript">


function nextUsagesPage() {
    var page = $("#usages-dialog").data('page') + 1;
    $("#usages-dialog").data('page', page);
    findUsages($("#usages-dialog").data('project'), $("#usages-dialog").data('path'), $("#usages-dialog").data('offset'), page);
}

function addNextUsagesPage() {
    if(!$("#usages-dialog").data('done')) {
        var page = $("#usages-dialog").data('page') + 1;
        $("#usages-dialog").data('page', page);
        findUsages($("#usages-dialog").data('project'), $("#usages-dialog").data('path'), $("#usages-dialog").data('offset'), page, true);
    }
}

function prevUsagesPage() {
    var page = $("#usages-dialog").data('page') - 1;
    if (page < 0) {
        page = 0
    }
    $("#usages-dialog").data('page', page);
    findUsages($("#usages-dialog").data('project'), $("#usages-dialog").data('path'), $("#usages-dialog").data('offset'), page);
}
    
function loadSnippet(project, path, offset) {
    $.ajax({
        type: 'GET',
        url: "/SnippetProvider",
        data: {project : project, path : path, offset : offset},
        success: function(doc) {
            var snippet = doc;
            var code = $('<div class="code">' + snippet + '</div>');
            code.data("path", path);
            code.data("project", project);
            $("#usages").append('<br>').append(code);
        },
        contentType: "text/plain",
        async: true,
        timeout: 60000
    });
}

function findUsages(project, path, offset, page, append) {
    if (!append) {
        $("#usages").scrollTop(0);
        $("#usages-dialog").data('done', false);
    }

//    $("#usages-dialog").dialog('open');
    $("#usages-dialog").parent().attr("class", $("#usages-dialog").parent().attr("class") + " ui-widget-content-dialog");
    $('#usages-dialog').dialog('option', 'title', 'Find Usages - Loading...');
    //$("#usages-dialog").resizable();
    
    $("#usages-dialog").data('project', project);
    $("#usages-dialog").data('path', path);
    $("#usages-dialog").data('offset', offset);
    $("#usages-dialog").data('page', page);

    if (!append) {
        $("#usages").html("&nbsp;<img src='/images/loader2.gif'></img>");
    } else {
        $("#usages-wait").html("<img src='/images/loader2.gif'></img>");        
    }
    var usages;
    $.ajax({
        type: 'GET',
        url: "/UsagesProvider",
        data: {project : project, path : path, offset : offset, page : page},
        success: function(doc) {
            usages = doc
            $('#usages-dialog').dialog('option', 'title', 'Find Usages - Page ' + (page + 1) + ' out of ' + (usages.pages >= 100 ? 'more than 100' : usages.pages));
            
            if (usages.usages.length != 0) {
                if(usages.usages.length == 10) {
                    $('#loaded-usages').html("(" + ((page + 1)*10) + " out of ~" + (usages.pages >= 100 ? '1000+' : usages.pages*10) + ")");
                } else {
                    $('#loaded-usages').html("(" + ((page)*10 + usages.usages.length) + " out of " + (usages.pages >= 100 ? '1000+' : (usages.pages - 1)*10 + usages.usages.length) + ")");
                    $("#usages-dialog").data('done', true);
                }
            } else {
                $("#usages-dialog").data('done', true);
            }
            if (!append) {
                $("#usages").html("");
            }  else {
                $("#usages-wait").html("");
            }
            for(var i = 0; i < usages.usages.length; i++)
            {                  
                var usage = usages.usages[i];
                loadSnippet(usage.project, usage.path, usage.offset);
            }
        },
        dataType: "json",
        async: true,
        timeout: 60000
    });    

    if ( $("#usages-panel").height() < 196) {
        $("#usages-panel").height(196);
        $(".usages-panel-shadow").height(196);
        $("#usages-panel").css("top", $(window).height() - 196);
        $("#usages").height($("#usages-panel").height() - 40);
    }

}
 
function addCodeTab(tabs, id, label) {
    var tabTemplate = "<li><a href='#{href}'>#{label}<span class='loading'></span></a><span class='ui-icon ui-icon-close'>Close</span></li>"
    var li = $( tabTemplate.replace( /#\{href\}/g, "#" + id ).replace( /#\{label\}/g, label ) ),
    tabContentHtml = "<div class='code'></div>";
    tabs.find( ".ui-tabs-nav" ).append( li );
    tabs.append( "<div id='" + id + "'>" + tabContentHtml + "</div>" );
    tabs.tabs( "refresh" );
    tabs.children('.ui-widget-header').addClass('ui-widget-content').removeClass('ui-widget-header').css('border', 'none').css('padding', '5px');


    tabs.delegate( "span.ui-icon-close", "click", function() {
        var panelId = $( this ).closest( "li" ).remove().attr( "aria-controls" );
        $( "#" + panelId ).remove();
        tabs.tabs( "refresh" );
        tabs.children('.ui-widget-header').addClass('ui-widget-content').removeClass('ui-widget-header').css('border', 'none').css('padding', '5px');

        $("#menu").css("top", $("#files").height());
        if(tabs.find('>ul >li').size() == 0) {
            $("#menu").hide();
        }        
    });
}

$(function(){

    $("[href='#hyperlink']").on("mousedown",
        function(e) {
            $("div#vtip").remove();
        }
    );            


    $(document).contextmenu({
        delegate: "[href='#hyperlink']",
        preventContextMenuForPopup: true,
        preventSelect: true,
        taphold: true,
        menu: [
            {title: "Go to Declaration <kbd>Click</kbd>", cmd: "hyperlink", uiIcon: "ui-icon-declaration"},
            {title: "Find Usages", cmd: "usages", uiIcon: "ui-icon-usages"}
        ],
        // Handle menu selection to implement a fake-clipboard
        select: function(event, ui) {
            var e = $(ui.target).parents('.code').parent();
            var id = "#" + e.attr('id');
            var tab = getTab(id);
            if(tab != null) {
                var project = tab.data("project");
                var path = tab.data("path");
                var offset = parseInt($(ui.target).attr('offset'));

                if (ui.cmd == 'hyperlink') {
                    hyperlink(project, path, offset);
                }
                if (ui.cmd == 'usages') {
                    findUsages(project, path, offset, 0);
                    
                    $.cookie("find-usages-tip-shown", true);
                    $('div.jGrowl').find('.jGrowl-close').trigger('jGrowl.close');
                }
            }
            // Optionally return false, to prevent closing the menu now
        },
        // Implement the beforeOpen callback to dynamically change the entries
        beforeOpen: function(event, ui) {
            // Optionally return false, to prevent opening the menu now
        }
    });



    // $.contextMenu({
    //     selector: "[href='#hyperlink']", 
    //     callback: function(key, options) {
    //         if (key == 'hyperlink') {
    //             var e = $(this).parent(".code").parent();
    //             var id = "#" + e.attr('id');
    //             var tab = getTab(id);
    //             if(tab != null) {
    //                 var project = tab.data("project");
    //                 var path = tab.data("path");
    //                 var line = parseInt($(this).attr('offset'));
    //                 hyperlink(project, path, line);
    //             }
    //         }
    //         if (key == 'usages') {
    //             var e = $(this).parent(".code").parent();
    //             var id = "#" + e.attr('id');
    //             var tab = getTab(id);
                                
    //             if(tab != null) {
    //                 var project = tab.data("project");
    //                 var path = tab.data("path");
    //                 var offset = parseInt($(this).attr('offset'));

    //                 findUsages(project, path, offset, 0);
                    
    //                 $.cookie("find-usages-tip-shown", true);
    //                 $('div.jGrowl').find('.jGrowl-close').trigger('jGrowl.close');
    //             }                
    //         }
    //     },
    //     items: {
    //         "hyperlink": {name: "Go to Declaration", icon: "declaration"},
    //         "sep1": "---------",
    //         "usages": {name: "Find Usages", icon: "usages"}
    //     }
    // });    
});

        var tab_counter = 2;
        var tab_content = "";
        var tab_line = null;
        var lastSelected;
        var lastSelectedTab;
        
        var $tabs;
        
        var myHistory = [];
        var historyIndex = 0;
        
        function getIndex(id) {
            return $( "li", $tabs ).index(getTab("#tabs2-" + tab_counter).parent());
        }        
        function openFile(project, path, name, line, fromHistory) {
            tab_line = line;
            
            var index = null;
            var id = null;        
            $('#tabs2 ul li a').each(function(){
                if($(this).data("path") == path) {
                    id = this.hash;
                    index = $( "li", $tabs ).index($(this).parent());
                }
            });
            var newPage = index == null;
            if(index == null) {
                id = "#tabs2-" + tab_counter;

                //$tabs.tabs( "add", id, name);   
                addCodeTab($tabs, "tabs2-" + tab_counter, name); 
                // $tabs.find("ul").append(
                //     "<a href='" + id + "'>" + name + "<span class='loading'></span></a><span class='ui-icon ui-icon-close'>Close</span>"
                // );
                // $tabs.append(
                //     "<div id='" + id + "'><div class='code'></div></div>"
                // );
                // $tabs.tabs("refresh");
                $("#menu").show();


                index = getIndex(id);
                var tab = getTab(id);
                tab.data("line", line);
                tab.data("path", path);
                tab.data("project", project);
                tab_counter++;    
                
                var t = getTab(id);
                t.find(".loading").html("&nbsp;<img src='/images/ajax-loader2.gif' width='16' height='11'></img>");

                var code;
                $.ajax({
                    type: 'GET',
                    url: "/FileProvider",
                    data: {project : project, root : path},
                    success: function(doc) {
                        code = doc;
                    },
                    contentType: "text/plain",
                    async: false,
                    timeout: 60000
                });
                $tabs.find(id).find(".code").html(code + '<div class="usages-panel-shadow"></div>');
                $(".usages-panel-shadow").height($("#usages-panel").height());

                t.find(".loading").html("");
            }
            //$tabs.tabs("select", index);  
            $tabs.tabs( "option","active", index );

            
            if(line != null) {
                $tabs.find(id).find("#link").attr('href', "/code.html?project=" + project + "&path=" + path + "&line=" + line);
            } else {
                $tabs.find(id).find("#link").attr('href', "/code.html?project=" + project + "&path=" + path);
            }
            $("#menu").css("top", $("#files").height());
            $("#files-shadow").height($("#files").height() + 36);

            if(tab_line != null) {
                if(lastSelected != null) {
                    lastSelected.removeClass("selected");
                }
                lastSelected = $tabs.find(id).find("#line" + tab_line);
                lastSelected.addClass("selected");
                $.scrollTo(lastSelected, 100, {axis:"y", offset: {left: 0, top: - $("#files-shadow").height() - 20 }});
            }

            if(fromHistory == null || !fromHistory) {
                while(myHistory.length - 1 > historyIndex) {
                    myHistory.pop();
                }
                myHistory.push({
                    project : project, 
                    path : path, 
                    name : name, 
                    line : line
                });
                historyIndex = myHistory.length - 1;
            }
            
            if(newPage) {
                if( window.location.host != 'test.codenav.org') {
                    _gaq.push(['_trackPageview', "/code.html?project=" + project + (path != null ? "&path=" + path : "") + (line != null ? "&line=" + line : "" )]);
                }
            }
        }


        $(document).ready(function(){
            if (!theme) {
                theme = $("#theme").val();
                if(theme != 'smoothness') {
                    $(document).find('head').append('<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/themes/' + theme + '/jquery-ui.css" />');
                }
            }
            $( "#theme" ).selectmenu({
                change: function( event, data ) {
                    $(document).find('head').append('<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.3/themes/' + data.item.value + '/jquery-ui.css" />');
                    $.cookie("theme-option", data.item.value)
                }
            });


//            var showHyperlinkTooltip = $.cookie("hyperlink-tip-shown") == null ? true : $.cookie("hyperlink-tip-shown") != "true";
//            if (showHyperlinkTooltip) {
//                $.jGrowl("Click on identifier in code to see it's <b>declaration</b>!", {
//                    sticky: true,
//                    header: 'Tip',
//                    close: function(e,m) {
//                        $.cookie("hyperlink-tip-shown", true);
//                    }});            
//            }
//
//            var showHyperlinkTooltip = $.cookie("find-usages-tip-shown") == null ? true : $.cookie("find-usages-tip-shown") != "true";
//            if (showHyperlinkTooltip) {
//                $.jGrowl("Right click on identifier in code to find <b>usages</b>!", {
//                    sticky: true,
//                    header: 'Tip',
//                    close: function(e,m) {
//                        $.cookie("find-usages-tip-shown", true);
//                    }});            
//            }

            var project;
            var path;
            var line;
            
            project = $.getUrlVar('project');
            path = $.getUrlVar('path');
            line = $.getUrlVar('line');
            getTab("#tabs2-1").data("project", project);
            getTab("#tabs2-1").data("path", path);
            getTab("#tabs2-1").data("line", line);
            
               
            $("#tabs").tabs({                
                create: function(event, ui) {
                    $(this).children('.ui-widget-header').addClass('ui-widget-content').removeClass('ui-widget-header').css('border', 'none').css('padding', '5px');
                }
            });
            $("#tabs").width(400);
            $("#tabs").height($(window).height() + 20);
            $("#tabs-shadow").width(400);
            $("#tabs").resizable({minHeight: $(window).height(), alsoResize: "#tabs-shadow"})
            $("#files").css("left", 400 + 20);
            $("#files").width($(window).width() - $("#tabs-shadow").width());


            $("#usages-panel").resizable({handles: 'n', alsoResize: ".usages-panel-shadow"});
            $("#usages-panel").width($(window).width() - $("#tabs-shadow").width() - 40);
            $("#usages-panel").css("left", $("#tabs-shadow").width() + 6);
            $("#usages-panel").css("top", $(window).height() - 100);
            $("#usages-panel").height(100);
            $(".usages-panel-shadow").height(100);
            $("#usages").height($("#usages-panel").height() - 40);                

            $("#usages-panel").resize(function() {
                $("#usages").height($("#usages-panel").height() - 40);
            });

            // $('#usages').height($("#usages-panel").height() - 40);

            // $("#usages-panel").resize(function() {
            //     $('#usages').height($("#usages-panel").height() - 40);
            // });

            $("#tabs").resize(function() {
                $("#files").css("left", $("#tabs-shadow").width() + 20);
                $("#files").width($(window).width() - $("#tabs-shadow").width() - 20);
                $("#menu").width($(window).width() - $("#tabs-shadow").width() - 40);
                $("#menu").css("left", $("#tabs-shadow").width() + 20);
                $("#menu").css("top", $("#files").height());
                $("#projects").height($(window).height() - 60);
                $("#navigator").height($(window).height() - 60);

                // if ($("#tabs-shadow").width() - $("#usages-panel-wrapper").css("left") > 0 ) {
                //     $("#usages-panel").css("top", $(window).height() - $("#usages-panel").height());
                //     $("#usages-panel").width($(window).width() - $("#tabs-shadow").width() - 40);
                // }
            });
            $(window).resize(function() {
                $("#files").css("left", $("#tabs-shadow").width() + 20);
                $("#files").width($(window).width() - $("#tabs-shadow").width() - 20);
                $("#menu").width($(window).width() - $("#tabs-shadow").width() - 40);
                $("#menu").css("left", $("#tabs-shadow").width() + 20);
                $("#menu").css("top", $("#files").height());
                $("#projects").height($(window).height() - 60);
                $("#navigator").height($(window).height() - 60);

                $("#usages-panel").width($(window).width() - $("#tabs-shadow").width() - 40);
                $("#usages-panel").css("left", $("#tabs-shadow").width() + 6);
            });
            lastSelectedTab = "#tabs2-1";
            $tabs = $("#tabs2").tabs({
                // tabTemplate: "<li><a href='#{href}'>#{label}<span class='loading'></span></a><span class='ui-icon ui-icon-close'>Close</span></li>",
                // add: function( event, ui ) {
                //     $( ui.panel ).html("<div class='code'></div>");
                //     $("#menu").show();
                    
                // },
                // remove: function(event, ui) { 
                //     $("#menu").css("top", $("#files").height());
                //     if($( this ).tabs("length") == 0) {
                //         $("#menu").hide();
                //     }
                // },
                create: function(event, ui) {
                    $(this).children('.ui-widget-header').addClass('ui-widget-content').removeClass('ui-widget-header').css('border', 'none').css('padding', '5px');

                    if(lastSelectedTab != null && $(lastSelectedTab) != null) {
                        $(lastSelectedTab).data("scrolltop", $(window).scrollTop());
                        $(lastSelectedTab).data("scrollleft", $(window).scrollLeft());
                    }
                    lastSelectedTab = ui.panel;
                    if(lastSelectedTab != null) {
                        if($(lastSelectedTab).data("scrolltop") != null) {
                            $(window).scrollTop($(lastSelectedTab).data("scrolltop"));
                        } else {
                            $(window).scrollTop(0);
                        }
                        if($(lastSelectedTab).data("scrollleft") != null) {
                            $(window).scrollLeft($(lastSelectedTab).data("scrollleft"));
                        } else {
                            $(window).scrollLeft(0);
                        }
                    }
                    
                    var tab = getTab(lastSelectedTab.selector);
                    var project = tab.data("project");
                    var path = tab.data("path");
                    var line = tab.data("line");
                    if(project != null) {
                        $("#create-link-dialog-link").val("http://codenav.org/code.html?project=" + project + (path != null ? "&path=" + path : "")  + (line != null ? "&line=" + line : "" ));
                    } else {
                        $("#create-link-dialog-link").val("");
                    }
                    
                    if(tab.data("navigator") == null) {
                        var project = tab.data("project");
                        var path = tab.data("path");                    
                        if(project != null && path != null) {                        
                            $("#navigator").html("<center><br><br><img src='/images/loader1.gif'></img></center>");
                            $("#navigator").treeview({
                                collapsed: false,
                                cache: tab,
                                url: "/NavigatorProvider?project=" + project + "&root=" + path
                            });
                        }
                    } else {
                        $("#navigator").html(tab.data("navigator"));
                        $("#navigator").treeview({
                            collapsed: false
                        });
                    }

                    $(this).delegate( "span.ui-icon-close", "click", function() {
                        var panelId = $( this ).closest( "li" ).remove().attr( "aria-controls" );
                        $( "#" + panelId ).remove();
                        $tabs.tabs( "refresh" );

                        $("#menu").css("top", $("#files").height());
                        if($tabs.find('>ul >li').size() == 0) {
                            $("#menu").hide();
                        }        
                    });

                },
                beforeActivate: function(event, ui) {
                    $(ui.oldPanel).data("scrolltop", $(window).scrollTop());
                    $(ui.oldPanel).data("scrollleft", $(window).scrollLeft());
                },
                activate: function(event, ui) { 
                    $(this).children('.ui-widget-header').addClass('ui-widget-content').removeClass('ui-widget-header').css('border', 'none').css('padding', '5px');

                    if($(ui.newPanel).data("scrolltop") != null) {
                        $(window).scrollTop($(ui.newPanel).data("scrolltop"));
                    } else {
                        $(window).scrollTop(0);
                    }
                    if($(ui.newPanel).data("scrollleft") != null) {
                        $(window).scrollLeft($(ui.newPanel).data("scrollleft"));
                    } else {
                        $(window).scrollLeft(0);
                    }
                    
                    var tab = getTab(ui.newPanel.selector);
                    var project = tab.data("project");
                    var path = tab.data("path");
                    var line = tab.data("line");
                    if(project != null) {
                        $("#create-link-dialog-link").val("http://codenav.org/code.html?project=" + project + (path != null ? "&path=" + path : "")  + (line != null ? "&line=" + line : "" ));
                    } else {
                        $("#create-link-dialog-link").val("");
                    }
                    
                    if(tab.data("navigator") == null) {
                        var project = tab.data("project");
                        var path = tab.data("path");                    
                        if(project != null && path != null) {                        
                            $("#navigator").html("<center><br><br><img src='/images/loader1.gif'></img></center>");
                            $("#navigator").treeview({
                                collapsed: false,
                                cache: tab,
                                url: "/NavigatorProvider?project=" + project + "&root=" + path
                            });
                        }
                    } else {
                        $("#navigator").html(tab.data("navigator"));
                        $("#navigator").treeview({
                            collapsed: false
                        });
                    }
                }
            });
            $("#tabs2").height(800);
            $("#tabs2 span.ui-icon-close").on("click", function() {
                var index = $( "li", $tabs ).index( $( this ).parent() );
                $tabs.tabs( "remove", index );
            });
            
            $("#menu").css("left", 400 + 20);
            $("#menu").css("top", $("#files").height());
            $("#menu").width($(window).width() - $("#tabs-shadow").width() - 40);
            
            $("#files-shadow").height($("#files").height() + 36);
            
//            if(location.hash != null && location.hash != "" && location.hash != "#") {
//                var path = location.hash.split(":", 3)[0].substring(1);
//                var line = location.hash.split(":", 3)[1];
//                var pathSplit = path.split("/");
//                var name = pathSplit[pathSplit.length - 1];
//                openFile(path, name, line);
//            }
            
            var project = $.getUrlVar('project');
            var pview = $("#projects").html("<div><div align=\"top\" class='images java-project'></div>&nbsp;<span id=\"projectname\"></span></div><ul id=\"project\" class=\"filetree\"></ul>");
            pview.find("#projectname").text(project.substring(1, project.length).replace(/\//g, "."));
            pview.find("#project").treeview({
                url: "/TreeProvider?project=" + project
            });
            pview.height($(window).height() - 60);
            $("#navigator").height($(window).height() - 60);
            $("#projectname2").text(project.substring(1, project.length).replace(/\//g, "."));
   

            var text = $.getUrlVar('text');
            var line = $.getUrlVar('line');
            if(text != null && line != null) {
                var top = $("#line" + line).offset().top + 10;
                var left = $("#line" + line).offset().left;
                $('body').append( '<p id="vtip2"><img id="vtipArrow" />' + unescape(text).replace(/\n/g, "<br>") + '</p>' );
                $('p#vtip2 #vtipArrow').attr("src", 'images/vtip_arrow.png');
                $('p#vtip2').css("top", top).css("left", left);
                $('p#vtip2').draggable();                
            }
            
            initHyperlink();
            initLink();

            if(project != null && path != null) {
                //$("#tabs").tabs( "select" , 1 );
                $("#tabs").tabs( "option","active", 1 );
            }

            $(document).keydown(function(event) {
                if (event.ctrlKey && event.which == 37) {
                    if(historyIndex > 0) {
                        historyIndex--;
                        var target = myHistory[historyIndex];
                        openFile(target.project, target.path, target.name, target.line, true)
                    }
                    event.preventDefault();
                } 
                if (event.ctrlKey && event.which == 39) {
                    if(historyIndex < myHistory.length - 1) {
                        historyIndex++;
                        var target = myHistory[historyIndex];
                        openFile(target.project, target.path, target.name, target.line, true)
                    }
                    event.preventDefault();
                } 
            })
            
            $("#create-link-dialog").dialog({
                title: "Get Link",
                autoOpen: false,
                height: 200,
                width: 500,
                buttons: {
                    Cancel: function() {
                        $(this).dialog('close');
                    }
                },
                close: function() {
                }
            });          
        
            $("#getlink").click(function(event) {
                event.preventDefault();
                $("#create-link-dialog").dialog('open');
//                $("#create-link-dialog").parent().css("top", 200);
//                $("#create-link-dialog").parent().css("left", $(window).width()/2 - $("#create-link-dialog").width()/2);
                $("#create-link-dialog").parent().attr("class", $("#create-link-dialog").parent().attr("class") + " ui-widget-content-dialog")
                return false;
            }); 
            
            var enableTooltips = $.cookie("tooltips-option") == null ? true : $.cookie("tooltips-option") != "false";
            $.cookie("tooltips-option", enableTooltips)
            if(enableTooltips) {
                $("#tooltips-option").attr('checked', "checked");
                vtip();
            }
            
            $("#tooltips-option").button().click(
                function( event ) {
                    //event.preventDefault();
                    if($(this).is(':checked')) {
                        vtip();
                        $.cookie("tooltips-option", true);
                    } else {
                        vtipoff();
                        $.cookie("tooltips-option", false);
                    }
                }
            );

            var el = $(".ui-button-text"); 
            el.css("padding", ".2em .2em");
            
            $("#usages-dialog").dialog({
                title: "Find Usages",
                autoOpen: false,
                height: 820,
                width: 600,
                zIndex: 1000,
                resizable: false,
                buttons: {
                    '<<': function() {
                        prevUsagesPage();
                    },
                    '>>': function() {
                        nextUsagesPage();
                    },                    
                    Cancel: function() {
                        $(this).dialog('close');
                    }
                },
                close: function() {
                },
//                resizeStop: function(event,ui) {
//                    var offset = $(event.target).parent().offset()
//                    $(event.target).parent().css('position', 'fixed');
////                    $(event.target).offset({ top: (Math.floor(ui.position.top) - $(window).scrollTop()), left: (Math.floor(ui.position.left) - $(window).scrollLeft())})
//                    return true;
//                },
                create: function(event) { $(event.target).parent().css('position', 'fixed'); }
//                
            });  

            // $("#load-usages").button().click(function( event ) {
            //     addNextUsagesPage();
            //     event.preventDefault();
            // });
            
            $("#usages-dialog").data('done', true);
            $('#usages').bind('scroll', function() {
                if($(this).scrollTop() + $(this).innerHeight() >= this.scrollHeight && !$("#usages-dialog").data('done') ) {
                    addNextUsagesPage();
                }
            })


            $("#help").hide();

            time = Date.now() - window.performance.timing.requestStart;
            if(time > 5000) {
                NREUM.inlineHit(project + path, 0, 0, 0, 0, time);
            }
        });
        function getHelpTabIndex() {
            var index;
            $('#tabs2 ul li a').each(function(){
                if(this.hash == "#tabs2-help") {
                    id = this.hash;
                    index = $( "li", $("#tabs2") ).index($(this).parent());
                }
            })
            return index;
        }
        
        function showHelp() {
            var index = getHelpTabIndex();
            if(index == null) {
                var id = "#tabs2-help";
                $("#tabs2").tabs( "add", id, "Help");                
                $("#tabs2").find(id).find(".code").html($("#help").html());
                index = getHelpTabIndex();
                $("#menu").css("top", $("#files").height());
                $("#files-shadow").height($("#files").height() + 36);

            }
            //$("#tabs2").tabs( "select" , index );
            $("#tabs2").tabs( "option","active", index );

        }        
    </script> 
  <script type="text/javascript">
        if( window.location.host != 'test.codenav.org') {
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-26088763-1']);
            _gaq.push(['_setDomainName', 'codenav.org']);
            _gaq.push(['_setAllowLinker', true]);
            _gaq.push(['_trackPageview']);
            (function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
            })();
        }
    </script> 
  <!--script type="text/javascript">
    (function (d, w, c) {
        (w[c] = w[c] || []).push(function() {
            try {
                w.yaCounter14513863 = new Ya.Metrika({id:14513863, enableAll: true});
            } catch(e) {}
        });

        var n = d.getElementsByTagName("script")[0],
            s = d.createElement("script"),
            f = function () { n.parentNode.insertBefore(s, n); };
        s.type = "text/javascript";
        s.async = true;
        s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js";

        if (w.opera == "[object Opera]") {
            d.addEventListener("DOMContentLoaded", f);
        } else { f(); }
    })(document, window, "yandex_metrika_callbacks");
    </script--> 
 </head> 
 <body class="ui-widget-content" style="margin: 0; border: none;"> 
  <div id="usages-panel" class="ui-widget-content"> 
   <h3 style="margin: 0px;">Usages: <span id="loaded-usages" style="display: inline-block; margin: 3px;"></span> <span id="usages-wait"></span></h3> 
   <div id="usages" class="ui-widget-content" style="overflow-y:scroll; overflow-x:hidden; border: none;"> 
    <div class="ui-state-highlight ui-corner-all" style="margin-right: 20px; margin-top: 5px; padding: 5px;"> 
     <p><span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span> Right click on identifier in code to find <strong>usages</strong>!</p> 
    </div> 
   </div> 
  </div> 
  <div id="tabs" style="position: fixed; top: -4px; z-index: 99; border-right: 1px dotted lightgrey;" width="100"> 
   <ul> 
    <li><a class="ui-tabs-anchor">
      <div class="images home" onclick="window.location = '/';"></div></a></li> 
    <li><a href="#tabs-1">Projects</a></li> 
    <li><a href="#tabs-2">Navigator</a></li> 
    <!--li><a><div class='images help2' onclick="showHelp();"></div></a></li--> 
   </ul> 
   <div id="tabs-1"> 
    <div id="projects" style="overflow: auto;"> 
    </div> 
   </div> 
   <div id="tabs-2"> 
    <div id="navigator" class="filetree" style="overflow: auto;"> 
    </div> 
   </div> 
  </div> 
  <table border="0"> 
   <tbody>
    <tr> 
     <td> 
      <div id="tabs-shadow">
        &nbsp; 
      </div> </td> 
     <td> 
      <div id="tabs2"> 
       <ul id="files"> 
        <li><a href="#tabs2-1"> Welcome </a><span class="ui-icon ui-icon-close">Close</span></li> 
       </ul> 
       <div id="menu" class="ui-widget-content" style="position: fixed; top: 0; left: 0; ; border: none;"> 
        <a href="#getlink" title="Get link">
         <div id="getlink" class="images link" alt="Get link"></div></a> &nbsp;&nbsp;&nbsp; 
        <input type="checkbox" id="tooltips-option">
        <label id="tooltips-option-label" for="tooltips-option">
         <div class="images balloon2" alt="Enable/disable tooltips"></div></label> 
        <select name="theme" id="theme"> <optgroup label="Themes"> <option value="cupertino">Cupertino</option> <option value="dark-hive">Dark Hive</option> <option value="flick">Flick</option> <option value="hot-sneaks">Hot Sneaks</option> <option value="pepper-grinder">Pepper Grinder</option> <option value="redmond">Redmond</option> <option value="smoothness" selected>Smoothness</option> <option value="swanky-purse">Swanky Purse</option> </optgroup> </select> 
       </div> 
       <div id="files-shadow"> 
       </div> 
       <div id="tabs2-1"> 
        <p>This is page for exploring of selected project.</p> 
        <p>Current project is "<span id="projectname2"></span>".<br> If you'd like to explore another project push <a href="/"><img src="/images/home.png" onclick="window.location = '/';"></a> and select it in projects tree (I hope it's there :).</p> 
        <p>Project is a set of files. So to start select one in "Projects" tab: </p> 
        <p> <img src="/images/projects_tab.png"> </p> 
        <p> Now you could navigate to declarations just clicking on identifiers in code: </p> 
        <p> <img src="/images/hyperlink.png"> </p> 
        <p> Use Ctrl &lt;- and Ctrl -&gt; to go "Back" and "Forward" on navigation history. </p> 
        <p> Also you could find "class view" for opened file in "Navigator" tab: </p> 
        <p> <img src="/images/navigator2.png"> </p> 
        <div class="usages-panel-shadow"> 
        </div> 
       </div> 
      </div> </td> 
    </tr> 
   </tbody>
  </table> 
  <div id="create-link-dialog"> 
   <textarea id="create-link-dialog-link" cols="60" rows="6"></textarea> 
  </div> 
  <div id="usages-dialog"> 
   <div id="usages"> 
   </div> 
  </div> 
  <!--div id="help">
    <p>This is page for exploring of selected project.</p>

    <p>Current project is "<span id="projectname2"></span>".<br>
        If you'd like to explore another project push <a href="/"><img src="/images/home.png" onclick="window.location = '/';"></a> 
    and select another project in projects tree.</p>

    <p>Project is a set of files. So to start select one in "Projects" tab:
    </p>
    <p>
        <img src="/images/projects_tab.png">
    </p>
    <p>
        Now you could navigate to declarations just clicking on identifiers in code:
    </p>
    <p>
        <img src="/images/hyperlink.png">
    </p>
    <p>
        Use Ctrl &lt;- and Ctrl -&gt; to go "Back" and "Forward" on navigation history.
    </p>
    <p>
        Also you could find "class view" for opened file in "Navigator" tab:
    </p>
    <p>
        <img src="/images/navigator.png">
    </p>
    </div--> 
  <!--noscript><div><img src="//mc.yandex.ru/watch/14513863" style="position:absolute; left:-9999px;" alt="" /></div></noscript--> 
  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"applicationID":"6406488","applicationTime":1,"beacon":"bam.nr-data.net","queueTime":0,"licenseKey":"873a1447fd","transactionName":"ZFcGZkcAXkUCUkVfVl0dLmFlTlNZB1QfXEpD","agent":"","errorBeacon":"bam.nr-data.net"}</script>  
 </body>
</html>