<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <title>Step 2.1: Create a Deployment Package - AWS Lambda</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link rel="home" href="#top"> 
  <link rel="up" href="with-s3-example-create-test-manually.html" title="Step 2: Create a Lambda Function and
				Invoke It Manually (Using Sample Event Data)"> 
  <link rel="prev" href="with-s3-example-create-test-manually.html" title="Step 2: Create a Lambda Function and
				Invoke It Manually (Using Sample Event Data)"> 
  <link rel="next" href="with-s3-example-create-iam-role.html" title="Step 2.2: Create the Execution Role (IAM
					Role)"> 
  <meta name="description" content="From the Filter View list, choose the language you want to use for your Lambda function. The appropriate section appears with code and specific instructions for creating a deployment package."> 
  <meta name="deployment_region" content="IAD"> 
  <meta name="product" content="AWS Lambda"> 
  <meta name="guide" content="Developer Guide"> 
  <meta name="guide-locale" content="en_us"> 
  <link rel="icon" type="image/ico" href="/images/favicon.ico"> 
  <link rel="shortcut icon" type="image/ico" href="/images/favicon.ico"> 
  <link rel="canonical" href="http://docs.aws.amazon.com/lambda/latest/dg/with-s3-example-deployment-pkg.html"> 
  <link rel="stylesheet" type="text/css" href="/css/jquery-ui.min.css"> 
  <link rel="stylesheet" type="text/css" href="/font/css/font-awesome.min.css"> 
  <link rel="stylesheet" type="text/css" href="/css/google-font.css"> 
  <link rel="stylesheet" type="text/css" href="/css/highlight-default.css"> 
  <link rel="stylesheet" type="text/css" href="/css/jquery-ui.theme.css"> 
  <link rel="stylesheet" type="text/css" href="/css/colorbox.css"> 
  <link rel="stylesheet" type="text/css" href="/css/awsdocs.css?v=20170615">
  <script type="text/javascript" src="/js/highlight.pack.js"></script>
  <script type="text/javascript" src="/js/jquery.min.js"></script>
  <script type="text/javascript" src="/js/jquery-ui.min.js"></script>
  <script type="text/javascript" src="/js/handlebars.js"></script>
  <script type="text/javascript" src="/js/jquery.colorbox.js"></script>
  <script type="text/javascript" src="/js/awsdocs.min.js?v=20170615"></script>
 </head> 
 <body id="top"> 
  <div xmlns:db="http://docbook.org/ns/docbook" id="aws-nav" class="aws-nav-header"> 
   <div class="aws-nav-header-left"> 
    <div id="aws-nav-flyout-trigger" class="aws-nav-flyout-trigger">
     <i class="fa fa-bars fa-2x"></i>Menu 
    </div> 
    <div class="aws-nav-logo">
     <a href="https://aws.amazon.com"><span>Amazon Web Services</span></a>
    </div> 
   </div> 
   <div id="aws-nav-header-right" class="aws-nav-header-right"> 
    <div class="aws-nav-cta-button-outer">
     <a id="aws-nav-cta-button" class="aws-nav-button" href="https://console.aws.amazon.com/console/home">Sign In to the Console</a>
    </div> 
    <div class="aws-nav-popover-trigger" data-dropdown="aws-nav-dropdown-lang">
     <select id="languageSelection" onchange="SelectLanguage()"> <option value="/de_de/lambda/latest/dg/with-s3-example-deployment-pkg.html">Deutsch</option> <option value="/en_us/lambda/latest/dg/with-s3-example-deployment-pkg.html" selected>English</option> <option value="/es_es/lambda/latest/dg/with-s3-example-deployment-pkg.html">Español</option> <option value="/fr_fr/lambda/latest/dg/with-s3-example-deployment-pkg.html">Français</option> <option value="/ja_jp/lambda/latest/dg/with-s3-example-deployment-pkg.html">???</option> <option value="/ko_kr/lambda/latest/dg/with-s3-example-deployment-pkg.html">???</option> <option value="/pt_br/lambda/latest/dg/with-s3-example-deployment-pkg.html">Português</option> <option value="/zh_cn/lambda/latest/dg/with-s3-example-deployment-pkg.html">?? (??)</option></select>
    </div>
    <a class="btn btn-pdf-link" id="pdf-link-top" href="lambda-dg.pdf#with-s3-example-deployment-pkg" target="_blank" style="background-image: url(&quot;/images/Adobe_PDF_icon.png&quot;)" title="Open PDF"></a>
    <div id="aws-nav-quicklinks-separator" class="aws-nav-quicklinks-separator"> 
     <div class="aws-nav-left"></div> 
     <div class="aws-nav-right"></div> 
    </div> 
   </div> 
   <div xmlns:l="http://docbook.sourceforge.net/xmlns/l10n/1.0" id="topnav-flyout-menu-container"> 
    <ul id="topnav-flyout-menu">
     <script id="flyout-item-template" type="text/x-handlebars-template">           
                    {{#flyoutList}}
                    
                    <li>{{listItem}}
                        {{#if subList}}
                        <ul>
                            {{#subList}}
                            <li class="awsdocs-flyout-link-wrapper"><a href="{{target}}">{{text}}</a></li>
                            {{/subList}}
                        </ul>
                        {{/if}}
                    </li>
                    
                    {{/flyoutList}}
                </script>
    </ul> 
    <div id="topnav-flyout-menu-spacer"></div> 
   </div> 
  </div> 
  <div id="content-container"> 
   <div id="left-column"> 
    <div id="left-col-header"> 
     <div id="left-col-top-content"> 
      <div id="service-name">
       AWS Lambda 
      </div> 
      <div id="search">
       <i id="search-icon" class="fa fa-search fa-2x"></i>
      </div> 
      <div id="guide-info">
       Developer Guide 
       <div id="content-button">
        <i id="toggle-contents" class="fa fa-bars"></i>
       </div> 
      </div> 
     </div> 
     <form id="finegrainedSearch" method="get" onsubmit="return searchFormSubmit(this);" action="/search/doc-search.html"> 
      <div id="search-form">
       <select id="search-select" name="searchPath"> <option value="all">Entire Site</option> <option value="AWSMarketplace">AMIs from AWS Marketplace</option> <option value="amis">AMIs from All Sources</option> <option value="articles">Articles &amp; Tutorials</option> <option value="products_and_info">AWS Product Information</option> <option value="case_studies">Case Studies</option> <option value="customerapps">Customer Apps</option> <option value="documentation">Documentation</option> <option value="documentation-product">Documentation - This Product</option> <option value="documentation-guide" selected>Documentation - This Guide</option> <option value="datasets">Public Data Sets</option> <option value="releasenotes">Release Notes</option> <option value="solution_providers">Partners</option> <option value="code">Sample Code &amp; Libraries</option></select>
       <br>
       <input id="search-query" name="searchQuery" type="text" placeholder="Search">
       <input id="search-button" src="/images/search-button.png" alt="Go" type="image">
      </div>
      <input type="hidden" name="this_doc_product" id="this_doc_product" value="AWS Lambda">
      <input type="hidden" name="this_doc_guide" id="this_doc_guide" value="Developer Guide">
      <input type="hidden" name="doc_locale" value="en_us">
     </form> 
    </div> 
    <div id="toc"> 
     <ul class="awstoc"> 
      <li class="awstoc leaf"><a class="awstoc" href="welcome.html">What Is AWS Lambda?</a></li> 
      <li class="awstoc closed"><a class="awstoc" href="lambda-introduction-function.html">Lambda Functions</a>
       <ul class="awstoc"> 
        <li class="awstoc closed"><a class="awstoc" href="lambda-app.html">Building Lambda Functions</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="programming-model-v2.html">Programming Model</a>
           <ul class="awstoc"> 
            <li class="awstoc closed"><a class="awstoc" href="programming-model.html">Programming Model (Node.js)</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="nodejs-prog-model-handler.html">Handler (Node.js)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="nodejs-prog-model-context.html">The Context Object (Node.js)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="nodejs-prog-model-logging.html">Logging (Node.js)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="nodejs-prog-mode-exceptions.html">Function Errors (Node.js)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="nodejs-prog-model-using-old-runtime.html">Using Earlier Node.js Runtime (v0.10.42)</a></li> 
             </ul> </li> 
            <li class="awstoc closed"><a class="awstoc" href="java-programming-model.html">Programming Model (Java)</a>
             <ul class="awstoc"> 
              <li class="awstoc closed"><a class="awstoc" href="java-programming-model-handler-types.html">Handler (Java)</a>
               <ul class="awstoc"> 
                <li class="awstoc closed"><a class="awstoc" href="java-programming-model-req-resp.html">Handler Input/Output Types (Java)</a>
                 <ul class="awstoc"> 
                  <li class="awstoc leaf"><a class="awstoc" href="java-handler-io-type-pojo.html">Example: Using POJOs for Handler Input/Output (Java)</a></li> 
                  <li class="awstoc leaf"><a class="awstoc" href="java-handler-io-type-stream.html">Example: Using Stream for Handler Input/Output (Java)</a></li> 
                 </ul> </li> 
                <li class="awstoc leaf"><a class="awstoc" href="java-handler-using-predefined-interfaces.html">Leveraging Predefined Interfaces for Creating Handler (Java)</a></li> 
               </ul> </li> 
              <li class="awstoc leaf"><a class="awstoc" href="java-context-object.html">The Context Object (Java)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="java-logging.html">Logging (Java)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="java-exceptions.html">Function Errors (Java)</a></li> 
             </ul> </li> 
            <li class="awstoc closed"><a class="awstoc" href="python-programming-model.html">Programming Model (Python)</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="python-programming-model-handler-types.html">Handler (Python)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="python-context-object.html">The Context Object (Python)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="python-logging.html">Logging (Python)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="python-exceptions.html">Function Errors (Python)</a></li> 
             </ul> </li> 
            <li class="awstoc closed"><a class="awstoc" href="dotnet-programming-model.html">Programming Model (C#)</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="dotnet-programming-model-handler-types.html">Handler (C#)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="dotnet-context-object.html">The Context Object (C#)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="dotnet-logging.html">Logging (C#)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="dotnet-exceptions.html">Function Errors (C#)</a></li> 
             </ul> </li> 
           </ul> </li> 
          <li class="awstoc closed"><a class="awstoc" href="deployment-package-v2.html">Creating a Deployment Package</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="nodejs-create-deployment-pkg.html">Creating a Deployment Package (Node.js)</a></li> 
            <li class="awstoc closed"><a class="awstoc" href="lambda-dotnet-how-to-create-deployment-package.html">Creating a Deployment Package (C#)</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="lambda-dotnet-coreclr-deployment-package.html">.NET Core CLI</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="lambda-dotnet-create-deployment-package-toolkit.html">AWS Toolkit for Visual Studio</a></li> 
             </ul> </li> 
            <li class="awstoc closed"><a class="awstoc" href="lambda-java-how-to-create-deployment-package.html">Creating a Deployment Package (Java)</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="java-create-jar-pkg-maven-no-ide.html">Creating a .jar Deployment Package Using Maven without any IDE (Java)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="java-create-jar-pkg-maven-and-eclipse.html">Creating a .jar Deployment Package Using Maven and Eclipse IDE (Java)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="create-deployment-pkg-zip-java.html">Creating a .zip Deployment Package (Java)</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="java-author-using-eclipse-sdk-plugin.html">Authoring Lambda Functions Using Eclipse IDE and AWS SDK Plugin (Java)</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="lambda-python-how-to-create-deployment-package.html">Creating a Deployment Package (Python)</a></li> 
           </ul> </li> 
          <li class="awstoc closed"><a class="awstoc" href="versioning-aliases.html">Versioning and Aliases</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="versioning-intro.html">Versioning</a></li> 
            <li class="awstoc closed"><a class="awstoc" href="aliases-intro.html">Aliases</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="versioning-aliases-walkthrough1.html">Tutorial: Using AWS Lambda Aliases</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="versioning-aliases-permissions.html">Versioning, Aliases, and Resource Policies</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="how-to-manage-versioning.html">Managing Versioning</a></li> 
           </ul> </li> 
          <li class="awstoc closed"><a class="awstoc" href="env_variables.html">Environment Variables</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="tutorial-env_cli.html">Create a Lambda Function Using Environment Variables</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="tutorial-env_console.html">Create a Lambda Function Using Environment Variables To Store Sensitive Information</a></li> 
           </ul> </li> 
          <li class="awstoc leaf"><a class="awstoc" href="tagging.html">Tagging Lambda Functions</a></li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="vpc.html">VPC Support</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="vpc-tutorials.html">Tutorials: Accessing Resources in an Amazon VPC</a>
           <ul class="awstoc"> 
            <li class="awstoc closed"><a class="awstoc" href="vpc-ec.html">Tutorial: Accessing Amazon ElastiCache in an Amazon VPC</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="vpc-ec-create-ec-cluster.html">Step 1: Create an ElastiCache Cluster</a></li> 
              <li class="awstoc closed"><a class="awstoc" href="vpc-ec-create-lambda-function.html">Step 2: Create a Lambda Function </a>
               <ul class="awstoc"> 
                <li class="awstoc leaf"><a class="awstoc" href="vpc-ec-deployment-pkg.html">Step 2.1: Create a Deployment Package</a></li> 
                <li class="awstoc leaf"><a class="awstoc" href="vpc-ec-create-iam-role.html">Step 2.2: Create the Execution Role</a></li> 
                <li class="awstoc leaf"><a class="awstoc" href="vpc-ec-upload-deployment-pkg.html">Step 2.3: Create the Lambda Function (Upload the Deployment Package)</a></li> 
               </ul> </li> 
              <li class="awstoc leaf"><a class="awstoc" href="vpc-ec-invoke-lambda-function.html">Step 3: Test the Lambda Function (Invoke Manually)</a></li> 
             </ul> </li> 
            <li class="awstoc closed"><a class="awstoc" href="vpc-rds.html">Tutorial: Accessing Amazon RDS in an Amazon VPC</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="vpc-rds-create-rds-mysql.html">Step 1: Create an Amazon RDS Instance</a></li> 
              <li class="awstoc closed"><a class="awstoc" href="vpc-rds-create-lambda-function.html">Step 2: Create a Lambda Function </a>
               <ul class="awstoc"> 
                <li class="awstoc leaf"><a class="awstoc" href="vpc-rds-deployment-pkg.html">Step 2.1: Create a Deployment Package</a></li> 
                <li class="awstoc leaf"><a class="awstoc" href="vpc-rds-create-iam-role.html">Step 2.2: Create the Execution Role</a></li> 
                <li class="awstoc leaf"><a class="awstoc" href="vpc-rds-upload-deployment-pkg.html">Step 2.3: Create the Lambda Function</a></li> 
               </ul> </li> 
              <li class="awstoc leaf"><a class="awstoc" href="vpc-rds-invoke-lambda-function.html">Step 3: Test the Lambda Function (Invoke Manually)</a></li> 
             </ul> </li> 
           </ul> </li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="monitoring-functions.html">Troubleshooting and Monitoring</a>
         <ul class="awstoc"> 
          <li class="awstoc leaf"><a class="awstoc" href="monitoring-functions-access-metrics.html">Accessing CloudWatch Metrics</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="monitoring-functions-logs.html">Accessing CloudWatch Logs</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="monitoring-functions-metrics.html">Metrics</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="dlq.html">Dead Letter Queues</a></li> 
         </ul> </li> 
       </ul> </li> 
      <li class="awstoc closed"><a class="awstoc" href="building-lambda-apps.html">Building Applications with AWS Lambda</a>
       <ul class="awstoc"> 
        <li class="awstoc leaf"><a class="awstoc" href="intro-invocation-modes.html">Event Source Mapping</a></li> 
        <li class="awstoc closed"><a class="awstoc" href="invoking-lambda-function.html">Supported Event Sources</a>
         <ul class="awstoc"> 
          <li class="awstoc leaf"><a class="awstoc" href="eventsources.html">Sample Event Data</a></li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="deploying-lambda-apps.html">Deploying Lambda-based Applications</a>
         <ul class="awstoc"> 
          <li class="awstoc leaf"><a class="awstoc" href="serverless-deploy-wt.html">Create Your Own Serverless Application</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="automating-deployment.html">Automating Deployment of Lambda-based Applications</a></li> 
         </ul> </li> 
        <li class="awstoc leaf"><a class="awstoc" href="test-sam-local.html">Test Your Serverless Applications Locally Using SAM Local (Public Beta)</a></li> 
        <li class="awstoc leaf"><a class="awstoc" href="lambda-x-ray.html">Troubleshooting Lambda-Based Applications</a></li> 
       </ul> </li> 
      <li class="awstoc closed"><a class="awstoc" href="lambda-introduction.html">How It Works</a>
       <ul class="awstoc"> 
        <li class="awstoc leaf"><a class="awstoc" href="concurrent-executions.html">Concurrent Executions</a></li> 
        <li class="awstoc leaf"><a class="awstoc" href="retries-on-errors.html">Retries on Errors</a></li> 
        <li class="awstoc leaf"><a class="awstoc" href="intro-permission-model.html">Permissions Model</a></li> 
        <li class="awstoc leaf"><a class="awstoc" href="current-supported-versions.html">Execution Environment</a></li> 
       </ul> </li> 
      <li class="awstoc closed"><a class="awstoc" href="getting-started.html">Getting Started</a>
       <ul class="awstoc"> 
        <li class="awstoc closed"><a class="awstoc" href="setup.html">Step 1: Set Up an AWS Account and the AWS CLI</a>
         <ul class="awstoc"> 
          <li class="awstoc leaf"><a class="awstoc" href="setting-up.html">Step 1.1: Set Up an Account</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="setup-awscli.html">Step 1.2: Set Up the AWS CLI</a></li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="getting-started-create-function.html">Step 2: Create a HelloWorld Lambda Function and Explore the Console</a>
         <ul class="awstoc"> 
          <li class="awstoc leaf"><a class="awstoc" href="get-started-create-function.html">Step 2.1: Create a Hello World Lambda Function</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="get-started-invoke-manually.html">Step 2.2: Invoke the Lambda Function</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="get-started-step4-optional.html">Step 2.3: (Optional) Create a Lambda Function Authored in Java</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="get-started-step5-optional.html">Step 2.4: (Optional) Create a Lambda Function Authored in C#</a></li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="with-on-demand-https-example-configure-event-source_1.html">Step 3: Create a Simple Microservice using Lambda and API Gateway</a>
         <ul class="awstoc"> 
          <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-https-example-configure-event-source_2.html">Step 3.1: Create an API Using Amazon API Gateway</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-https-example-configure-event-source-test-end-to-end_1.html">Step 3.2: Test Sending an HTTPS Request</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="get-started-step3-optional.html">Step 3.3: (Optional) Try Other Blueprints</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="get-started-what-next.html">What's Next?</a></li> 
         </ul> </li> 
       </ul> </li> 
      <li class="awstoc opened"><a class="awstoc" href="use-cases.html">Use Cases</a>
       <ul class="awstoc"> 
        <li class="awstoc opened"><a class="awstoc" href="with-s3.html">Amazon S3</a>
         <ul class="awstoc"> 
          <li class="awstoc opened"><a class="awstoc" href="with-s3-example.html">Tutorial</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="with-s3-example-prepare.html">Step 1: Prepare</a></li> 
            <li class="awstoc opened"><a class="awstoc" href="with-s3-example-create-test-manually.html">Step 2: Create a Lambda Function and Invoke It Manually</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc selected" href="with-s3-example-deployment-pkg.html">Step 2.1: Create a Deployment Package</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-s3-example-create-iam-role.html">Step 2.2: Create the Execution Role</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-s3-example-upload-deployment-pkg.html">Step 2.3: Create the Lambda Function and Test It Manually</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-s3-example-configure-event-source.html">Step 3: Add an Event Source</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-s3-example-use-app-spec.html">Step 4: Deploy With AWS SAM and AWS CloudFormation</a></li> 
           </ul> </li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="with-kinesis.html">Kinesis</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="with-kinesis-example.html">Tutorial</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="with-kinesis-example-prepare.html">Step 1: Prepare</a></li> 
            <li class="awstoc closed"><a class="awstoc" href="with-kinesis-example-create-test-manually.html">Step 2: Create a Lambda Function and Invoke It Manually</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="with-kinesis-example-deployment-pkg.html">Step 2.1: Create a Deployment Package</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-kinesis-example-create-iam-role.html">Step 2.2: Create the Execution Role</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-kinesis-example-upload-deployment-pkg.html">Step 2.3: Create the Lambda Function and Test It Manually</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-kinesis-example-configure-event-source.html">Step 3: Add an Event Source</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-kinesis-example-use-app-spec.html">Step 4: Deploy With AWS SAM and AWS CloudFormation</a></li> 
           </ul> </li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="with-ddb.html">Amazon DynamoDB</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="with-ddb-example.html">Tutorial</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="with-ddb-prepare.html">Step 1: Prepare</a></li> 
            <li class="awstoc closed"><a class="awstoc" href="with-ddb-create-test-function.html">Step 2: Create a Lambda Function and Invoke It Manually</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="with-dynamodb-create-package.html">Step 2.1: Create a Lambda Function Deployment Package</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-dynamodb-create-execution-role.html">Step 2.2: Create the Execution Role</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-dynamodb-create-function.html">Step 2.3: Create the Lambda Function and Test It Manually</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-ddb-configure-ddb.html">Step 3: Add an Event Source</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-ddb-example-use-app-spec.html">Step 4: Deploy With AWS SAM and AWS CloudFormation</a></li> 
           </ul> </li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="with-cloudtrail.html">AWS CloudTrail</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="with-cloudtrail-example.html">Tutorial</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="with-cloudtrail-example-prepare.html">Step 1: Prepare</a></li> 
            <li class="awstoc closed"><a class="awstoc" href="with-cloudtrail-example-create-test-manually.html">Step 2: Create a Lambda Function and Invoke It Manually</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="with-cloudtrail-example-deployment-pkg.html">Step 2.1: Create a Deployment Package </a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-cloudtrail-example-create-iam-role.html">Step 2.2: Create the Execution Role</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-cloudtrail-example-upload-deployment-pkg.html">Step 2.3: Create the Lambda Function and Test It Manually</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-cloudtrail-example-configure-event-source.html">Step 3: Add Event Source</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-ct-example-use-app-spec.html">Step 4: Deploy With AWS SAM and AWS CloudFormation</a></li> 
           </ul> </li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="with-sns.html">Amazon SNS</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="with-sns-example.html">Tutorial</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="with-sns-example-prepare.html">Step 1: Prepare</a></li> 
            <li class="awstoc closed"><a class="awstoc" href="with-sns-example-create-test-function.html">Step 2: Create a Lambda Function </a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="with-sns-create-package.html">Step 2.1: Create a Lambda Function Deployment Package</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-sns-example-create-iam-role.html">Step 2.2: Create the Execution Role</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-sns-create-x-account-permissions.html">Step 3: Set Up Cross-Account Permissions</a></li> 
           </ul> </li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="with-on-demand-https.html">Amazon API Gateway</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="with-on-demand-https-example.html">Using AWS Lambda with Amazon API Gateway (On-Demand Over HTTPS)</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-https-example-prepare.html">Step 1: Prepare</a></li> 
            <li class="awstoc closed"><a class="awstoc" href="with-on-demand-https-example-create-test-manually.html">Step 2: Create a Lambda Function and Test It Manually</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-https-example-deployment-pkg.html">Step 2.1: Create a Deployment Package</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-https-example-create-iam-role.html">Step 2.2: Create the Execution Role</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-https-example-upload-deployment-pkg_1.html">Step 2.3: Create the Lambda Function and Test It Manually</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-https-example-configure-event-source.html">Step 3: Create an API Using Amazon API Gateway and Test It</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-api-example-use-app-spec.html">Step 4: Deploy With AWS SAM and AWS CloudFormation</a></li> 
           </ul> </li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="with-on-demand-custom-android.html">Mobile Backend (Android)</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="with-on-demand-custom-android-example.html">Tutorial</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-custom-android-example-prepare.html">Step 1: Prepare</a></li> 
            <li class="awstoc closed"><a class="awstoc" href="with-on-demand-custom-android-example-create-test-manually.html">Step 2: Create the Lambda Function and Invoke It Manually</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-custom-android-example-deployment-pkg.html">Step 2.1: Create a Deployment Package</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-custom-android-example-create-iam-role.html">Step 2.2: Create the Execution Role</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-custom-android-example-upload-deployment-pkg.html">Step 2.3: Create the Lambda Function and Invoke It Manually</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-on-demand-custom-android-create-cognito-pool.html">Step 3: Create an Amazon Cognito Identity Pool </a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-ondemand-android-mobile-create-app.html">Step 4: Create a Mobile Application for Android</a></li> 
           </ul> </li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="with-scheduled-events.html">Scheduled Events</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="with-scheduledevents-example.html">Tutorial</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="tutorial-scheduled-events-create-function.html">Step 1: Create a Lambda Function</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="tutorial-scheduled-events-test-function.html">Step 2: Test the Lambda Function (Using a Sample Test Event)</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="tutorial-scheduled-events-subscribe-sns.html">Step 3: Create an Amazon SNS Topic and Subscribe to It</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="tutorial-scheduled-events-create-alarm.html">Step 4: Configure a CloudWatch Alarm</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="tutorial-scheduled-events-test-function-again.html">Step 5: Test the Lambda Function Again</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-sched-event-example-use-app-spec.html">Step 6: Deploy With AWS SAM and AWS CloudFormation</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="tutorial-scheduled-events-schedule-expressions.html">Schedule Expressions Using Rate or Cron</a></li> 
           </ul> </li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="with-userapp.html">Custom User Applications</a>
         <ul class="awstoc"> 
          <li class="awstoc closed"><a class="awstoc" href="with-userapp-walkthrough-custom-events.html">Tutorial</a>
           <ul class="awstoc"> 
            <li class="awstoc leaf"><a class="awstoc" href="with-userapp-walkthrough-custom-events-deploy.html">Step 1: Prepare</a></li> 
            <li class="awstoc closed"><a class="awstoc" href="with-userapp-walkthrough-custom-events-create-test-function.html">Step 2: Create a Lambda Function and Invoke It Manually</a>
             <ul class="awstoc"> 
              <li class="awstoc leaf"><a class="awstoc" href="with-userapp-walkthrough-custom-events-create-nodejs-function.html">Step 2.1: Create a Deployment Package</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-userapp-walkthrough-custom-events-create-iam-role.html">Step 2.2: Create the Execution Role</a></li> 
              <li class="awstoc leaf"><a class="awstoc" href="with-userapp-walkthrough-custom-events-upload.html">Step 2.3: Create a Lambda Function</a></li> 
             </ul> </li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-userapp-walkthrough-custom-events-invoke.html">Step 3: Invoke the Lambda Function (AWS CLI)</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-userapp-walkthrough-custom-events-try-more-api.html">Step 4: Try More CLI Commands (AWS CLI)</a></li> 
            <li class="awstoc leaf"><a class="awstoc" href="with-userapp-walkthrough-custom-events-delete-function.html">Step 5: Delete the Lambda Function and IAM Role (AWS CLI)</a></li> 
           </ul> </li> 
         </ul> </li> 
       </ul> </li> 
      <li class="awstoc leaf"><a class="awstoc" href="lambda-edge.html">AWS Lambda@Edge</a></li> 
      <li class="awstoc leaf"><a class="awstoc" href="logging-using-cloudtrail.html">API Logging with AWS CloudTrail</a></li> 
      <li class="awstoc leaf"><a class="awstoc" href="best-practices.html">Best Practices</a></li> 
      <li class="awstoc leaf"><a class="awstoc" href="limits.html">Limits</a></li> 
      <li class="awstoc closed"><a class="awstoc" href="lambda-auth-and-access-control.html">Authentication and Access Control</a>
       <ul class="awstoc"> 
        <li class="awstoc leaf"><a class="awstoc" href="access-control-overview.html">Overview of Managing Access</a></li> 
        <li class="awstoc closed"><a class="awstoc" href="access-control-identity-based.html">Using Identity-Based Policies (IAM Policies)</a>
         <ul class="awstoc"> 
          <li class="awstoc leaf"><a class="awstoc" href="console-specific-permissions.html">Console Permissions</a></li> 
         </ul> </li> 
        <li class="awstoc leaf"><a class="awstoc" href="access-control-resource-based.html">Using Resource-Based Policies (Lambda Function Policies)</a></li> 
        <li class="awstoc leaf"><a class="awstoc" href="lambda-api-permissions-ref.html">Lambda API Permissions Reference</a></li> 
        <li class="awstoc leaf"><a class="awstoc" href="policy-templates.html">Policy Templates</a></li> 
       </ul> </li> 
      <li class="awstoc closed"><a class="awstoc" href="API_Reference.html">API Reference</a>
       <ul class="awstoc"> 
        <li class="awstoc opened"><a class="awstoc" href="API_Operations.html">Actions</a>
         <ul class="awstoc"> 
          <li class="awstoc leaf"><a class="awstoc" href="API_AddPermission.html">AddPermission</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_CreateAlias.html">CreateAlias</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_CreateEventSourceMapping.html">CreateEventSourceMapping</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_CreateFunction.html">CreateFunction</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_DeleteAlias.html">DeleteAlias</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_DeleteEventSourceMapping.html">DeleteEventSourceMapping</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_DeleteFunction.html">DeleteFunction</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_GetAccountSettings.html">GetAccountSettings</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_GetAlias.html">GetAlias</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_GetEventSourceMapping.html">GetEventSourceMapping</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_GetFunction.html">GetFunction</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_GetFunctionConfiguration.html">GetFunctionConfiguration</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_GetPolicy.html">GetPolicy</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_Invoke.html">Invoke</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_InvokeAsync.html">InvokeAsync</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_ListAliases.html">ListAliases</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_ListEventSourceMappings.html">ListEventSourceMappings</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_ListFunctions.html">ListFunctions</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_ListTags.html">ListTags</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_ListVersionsByFunction.html">ListVersionsByFunction</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_PublishVersion.html">PublishVersion</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_RemovePermission.html">RemovePermission</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_TagResource.html">TagResource</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_UntagResource.html">UntagResource</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_UpdateAlias.html">UpdateAlias</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_UpdateEventSourceMapping.html">UpdateEventSourceMapping</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_UpdateFunctionCode.html">UpdateFunctionCode</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_UpdateFunctionConfiguration.html">UpdateFunctionConfiguration</a></li> 
         </ul> </li> 
        <li class="awstoc closed"><a class="awstoc" href="API_Types.html">Data Types</a>
         <ul class="awstoc"> 
          <li class="awstoc leaf"><a class="awstoc" href="API_AccountLimit.html">AccountLimit</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_AccountUsage.html">AccountUsage</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_AliasConfiguration.html">AliasConfiguration</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_DeadLetterConfig.html">DeadLetterConfig</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_Environment.html">Environment</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_EnvironmentError.html">EnvironmentError</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_EnvironmentResponse.html">EnvironmentResponse</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_EventSourceMappingConfiguration.html">EventSourceMappingConfiguration</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_FunctionCode.html">FunctionCode</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_FunctionCodeLocation.html">FunctionCodeLocation</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_FunctionConfiguration.html">FunctionConfiguration</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_TracingConfig.html">TracingConfig</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_TracingConfigResponse.html">TracingConfigResponse</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_VpcConfig.html">VpcConfig</a></li> 
          <li class="awstoc leaf"><a class="awstoc" href="API_VpcConfigResponse.html">VpcConfigResponse</a></li> 
         </ul> </li> 
       </ul> </li> 
      <li class="awstoc leaf"><a class="awstoc" href="history.html">Document History</a></li> 
      <li class="awstoc leaf"><a class="awstoc" href="glossary.html">AWS Glossary</a></li> 
      <li id="toc-additional-links"><a class="btn btn-pdf-link" id="pdf-link-alt" href="lambda-dg.pdf" target="_blank" style="background-image: url(&quot;/images/Adobe_PDF_icon.png&quot;)" title="Open PDF"></a></li> 
     </ul> 
    </div> 
   </div> 
   <div id="main-column"> 
    <div id="main"> 
     <div id="main-content"> 
      <div id="main-col-body"> 
       <table summary="Breadcrumbs"> 
        <tbody>
         <tr> 
          <td> 
           <div class="breadcrumb">
            <a href="http://aws.amazon.com/documentation">AWS Documentation</a> » 
            <a href="http://aws.amazon.com/documentation/lambda">AWS Lambda</a> » 
            <a href="index.html">Developer Guide</a> » 
            <a href="use-cases.html">Examples of How to Use AWS Lambda</a> » 
            <a href="with-s3.html">Using AWS Lambda with Amazon S3</a> » 
            <a href="with-s3-example.html">Tutorial: Using AWS Lambda with Amazon S3</a> » 
            <a href="with-s3-example-create-test-manually.html">Step 2: Create a Lambda Function and Invoke It Manually (Using Sample Event Data)</a> » 
            <span class="breadcrumb">Step 2.1: Create a Deployment Package</span>
           </div> </td> 
         </tr> 
        </tbody>
       </table> 
       <div></div> 
       <div id="language-filter" class="page-header" style="display:none"> 
        <form>
          Filter View: 
         <select name="filter-select" id="filter-select"> <option selected="1">All</option> <option value="Node.js" selected>Node.js</option> <option value="Java" selected>Java</option> <option value="Python" selected>Python</option></select>
        </form> 
       </div> 
       <h1 class="topictitle" id="with-s3-example-deployment-pkg">Step 2.1: Create a Deployment Package</h1> 
       <p>From the <b>Filter View</b> list, choose the language you want to use for your Lambda function. The appropriate section appears with code and specific instructions for creating a deployment package. </p> 
       <div id="Node.js" name="Node.js" class="section langfilter"> 
        <h2 id="with-s3-example-deployment-pkg-nodejs">Node.js</h2> 
        <p>The deployment package is a .zip file containing your Lambda function code and dependencies. </p> 
        <ol> 
         <li> <p>Create a folder (<code>examplefolder</code>), and then create a subfolder (<code>node_modules</code>). </p> </li> 
         <li> <p>Install the Node.js platform. For more information, see the <a href="https://nodejs.org/" target="_blank">Node.js</a> website. </p> </li> 
         <li> <p>Install dependencies. The code examples use the following libraries: </p> 
          <div class="itemizedlist"> 
           <ul class="itemizedlist" type="disc"> 
            <li class="listitem"> <p>AWS SDK for JavaScript in Node.js</p> </li> 
            <li class="listitem"> <p>gm, GraphicsMagick for node.js</p> </li> 
            <li class="listitem"> <p>Async utility module</p> </li> 
           </ul> 
          </div> <p>The AWS Lambda runtime already has the AWS SDK for JavaScript in Node.js, so you only need to install the other libraries. Open a command prompt, navigate to the <code class="code">examplefolder</code>, and install the libraries using the <code class="code">npm</code> command, which is part of Node.js. </p> <pre class="programlisting">
           <div class="btn-copy-code-container">
            <div class="btn btn-copy-code">
             Copy
            </div>
           </div><code class="nohighlight ">npm install async gm</code></pre></li> 
         <li> <p>Open a text editor, and then copy the following code.</p> <pre class="programlisting">
           <div class="btn-copy-code-container">
            <div class="btn btn-copy-code">
             Copy
            </div>
           </div><code class="nohighlight ">// dependencies
var async = require('async');
var AWS = require('aws-sdk');
var gm = require('gm')
            .subClass({ imageMagick: true }); // Enable ImageMagick integration.
var util = require('util');

// constants
var MAX_WIDTH  = 100;
var MAX_HEIGHT = 100;

// get reference to S3 client 
var s3 = new AWS.S3();
 
exports.handler = function(event, context, callback) {
    // Read options from the event.
    console.log("Reading options from event:\n", util.inspect(event, {depth: 5}));
    var srcBucket = event.Records[0].s3.bucket.name;
    // Object key may have spaces or unicode non-ASCII characters.
    var srcKey    =
    decodeURIComponent(event.Records[0].s3.object.key.replace(/\+/g, " "));  
    var dstBucket = srcBucket + "resized";
    var dstKey    = "resized-" + srcKey;

    // Sanity check: validate that source and destination are different buckets.
    if (srcBucket == dstBucket) {
        callback("Source and destination buckets are the same.");
        return;
    }

    // Infer the image type.
    var typeMatch = srcKey.match(/\.([^.]*)$/);
    if (!typeMatch) {
        callback("Could not determine the image type.");
        return;
    }
    var imageType = typeMatch[1];
    if (imageType != "jpg" &amp;&amp; imageType != "png") {
        callback('Unsupported image type: ${imageType}');
        return;
    }

    // Download the image from S3, transform, and upload to a different S3 bucket.
    async.waterfall([
        function download(next) {
            // Download the image from S3 into a buffer.
            s3.getObject({
                    Bucket: srcBucket,
                    Key: srcKey
                },
                next);
            },
        function transform(response, next) {
            gm(response.Body).size(function(err, size) {
                // Infer the scaling factor to avoid stretching the image unnaturally.
                var scalingFactor = Math.min(
                    MAX_WIDTH / size.width,
                    MAX_HEIGHT / size.height
                );
                var width  = scalingFactor * size.width;
                var height = scalingFactor * size.height;

                // Transform the image buffer in memory.
                this.resize(width, height)
                    .toBuffer(imageType, function(err, buffer) {
                        if (err) {
                            next(err);
                        } else {
                            next(null, response.ContentType, buffer);
                        }
                    });
            });
        },
        function upload(contentType, data, next) {
            // Stream the transformed image to a different S3 bucket.
            s3.putObject({
                    Bucket: dstBucket,
                    Key: dstKey,
                    Body: data,
                    ContentType: contentType
                },
                next);
            }
        ], function (err) {
            if (err) {
                console.error(
                    'Unable to resize ' + srcBucket + '/' + srcKey +
                    ' and upload to ' + dstBucket + '/' + dstKey +
                    ' due to an error: ' + err
                );
            } else {
                console.log(
                    'Successfully resized ' + srcBucket + '/' + srcKey +
                    ' and uploaded to ' + dstBucket + '/' + dstKey
                );
            }

            callback(null, "message");
        }
    );
};
</code></pre> 
          <div class="aws-note"> 
           <p class="aws-note">Note</p> 
           <p>The code sample is compliant with the Node.js runtimes v6.10 or v4.3. For more information, see <a href="programming-model.html">Programming Model (Node.js)</a></p> 
          </div> </li> 
         <li> <p>Review the preceding code and note the following:</p> 
          <div class="itemizedlist"> 
           <ul class="itemizedlist" type="disc"> 
            <li class="listitem"> <p>The function knows the source bucket name and the key name of the object from the event data it receives as parameters. If the object is a .jpg, the code creates a thumbnail and saves it to the target bucket. </p> </li> 
            <li class="listitem"> <p>The code assumes that the destination bucket exists and its name is a concatenation of the source bucket name followed by the string <code class="code">resized</code>. For example, if the source bucket identified in the event data is <code class="code">examplebucket</code>, the code assumes you have an <code class="code">examplebucketresized</code> destination bucket. </p> </li> 
            <li class="listitem"> <p>For the thumbnail it creates, the code derives its key name as the concatenation of the string <code class="code">resized-</code> followed by the source object key name. For example, if the source object key is <code class="code">sample.jpg</code>, the code creates a thumbnail object that has the key <code class="code">resized-sample.jpg</code>. </p> </li> 
           </ul> 
          </div> </li> 
         <li> <p>Save the file as <code>CreateThumbnail.js</code> in <code>examplefolder</code>. After you complete this step, you will have the following folder structure: </p> <pre class="programlisting">
           <div class="btn-copy-code-container">
            <div class="btn btn-copy-code">
             Copy
            </div>
           </div><code class="nohighlight ">
CreateThumbnail.js
/node_modules/gm
/node_modules/async</code></pre> </li> 
         <li> <p>Zip the CreateThumbnail.js file and the node_modules folder as <code class="code">CreateThumbnail.zip</code>. </p> <p>This is your Lambda function deployment package. </p> </li> 
        </ol> 
        <h3 id="with-s3-example-deployment-pkg-node-next-step">Next Step</h3> 
        <p> <a href="with-s3-example-create-iam-role.html">Step 2.2: Create the Execution Role (IAM Role)</a> </p> 
       </div> 
       <div id="Java" name="Java" class="section langfilter"> 
        <h2 id="with-s3-example-deployment-pkg-java">Java</h2> 
        <p>The following is example Java code that reads incoming Amazon S3 events and creates a thumbnail. Note that it implements the <code class="code">RequestHandler</code> interface provided in the <code class="code">aws-lambda-java-core</code> library. Therefore, at the time you create a Lambda function you specify the class as the handler (that is, <code class="code">example.S3EventProcessorCreateThumbnail</code>). For more information about using interfaces to provide a handler, see <a href="java-handler-using-predefined-interfaces.html">Leveraging Predefined Interfaces for Creating Handler (Java)</a>. </p> 
        <p>The <code class="code">S3Event</code> type that the handler uses as the input type is one of the predefined classes in the <code class="code">aws-lambda-java-events</code> &nbsp;library that provides methods for you to easily read information from the incoming Amazon S3 event. The handler returns a string as output. </p> 
        <pre class="programlisting">
         <div class="btn-copy-code-container">
          <div class="btn btn-copy-code">
           Copy
          </div>
         </div><code class="nohighlight ">package example;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URLDecoder;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.imageio.ImageIO;

import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.S3Event;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.event.S3EventNotification.S3EventNotificationRecord;
import com.amazonaws.services.s3.model.GetObjectRequest;
import com.amazonaws.services.s3.model.ObjectMetadata;
import com.amazonaws.services.s3.model.S3Object;

public class S3EventProcessorCreateThumbnail implements
        RequestHandler&lt;S3Event, String&gt; {
    private static final float MAX_WIDTH = 100;
    private static final float MAX_HEIGHT = 100;
    private final String JPG_TYPE = (String) "jpg";
    private final String JPG_MIME = (String) "image/jpeg";
    private final String PNG_TYPE = (String) "png";
    private final String PNG_MIME = (String) "image/png";

    public String handleRequest(S3Event s3event, Context context) {
        try {
            S3EventNotificationRecord record = s3event.getRecords().get(0);

            String srcBucket = record.getS3().getBucket().getName();
            // Object key may have spaces or unicode non-ASCII characters.
            String srcKey = record.getS3().getObject().getKey()
                    .replace('+', ' ');
            srcKey = URLDecoder.decode(srcKey, "UTF-8");

            String dstBucket = srcBucket + "resized";
            String dstKey = "resized-" + srcKey;

            // Sanity check: validate that source and destination are different
            // buckets.
            if (srcBucket.equals(dstBucket)) {
                System.out
                        .println("Destination bucket must not match source bucket.");
                return "";
            }

            // Infer the image type.
            Matcher matcher = Pattern.compile(".*\\.([^\\.]*)").matcher(srcKey);
            if (!matcher.matches()) {
                System.out.println("Unable to infer image type for key "
                        + srcKey);
                return "";
            }
            String imageType = matcher.group(1);
            if (!(JPG_TYPE.equals(imageType)) &amp;&amp; !(PNG_TYPE.equals(imageType))) {
                System.out.println("Skipping non-image " + srcKey);
                return "";
            }

            // Download the image from S3 into a stream
            AmazonS3 s3Client = new AmazonS3Client();
            S3Object s3Object = s3Client.getObject(new GetObjectRequest(
                    srcBucket, srcKey));
            InputStream objectData = s3Object.getObjectContent();

            // Read the source image
            BufferedImage srcImage = ImageIO.read(objectData);
            int srcHeight = srcImage.getHeight();
            int srcWidth = srcImage.getWidth();
            // Infer the scaling factor to avoid stretching the image
            // unnaturally
            float scalingFactor = Math.min(MAX_WIDTH / srcWidth, MAX_HEIGHT
                    / srcHeight);
            int width = (int) (scalingFactor * srcWidth);
            int height = (int) (scalingFactor * srcHeight);

            BufferedImage resizedImage = new BufferedImage(width, height,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g = resizedImage.createGraphics();
            // Fill with white before applying semi-transparent (alpha) images
            g.setPaint(Color.white);
            g.fillRect(0, 0, width, height);
            // Simple bilinear resize
            // If you want higher quality algorithms, check this link:
            // https://today.java.net/pub/a/today/2007/04/03/perils-of-image-getscaledinstance.html
            g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                    RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            g.drawImage(srcImage, 0, 0, width, height, null);
            g.dispose();

            // Re-encode image to target format
            ByteArrayOutputStream os = new ByteArrayOutputStream();
            ImageIO.write(resizedImage, imageType, os);
            InputStream is = new ByteArrayInputStream(os.toByteArray());
            // Set Content-Length and Content-Type
            ObjectMetadata meta = new ObjectMetadata();
            meta.setContentLength(os.size());
            if (JPG_TYPE.equals(imageType)) {
                meta.setContentType(JPG_MIME);
            }
            if (PNG_TYPE.equals(imageType)) {
                meta.setContentType(PNG_MIME);
            }

            // Uploading to S3 destination bucket
            System.out.println("Writing to: " + dstBucket + "/" + dstKey);
            s3Client.putObject(dstBucket, dstKey, is, meta);
            System.out.println("Successfully resized " + srcBucket + "/"
                    + srcKey + " and uploaded to " + dstBucket + "/" + dstKey);
            return "Ok";
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}
</code></pre> 
        <p>Amazon S3 invokes your Lambda function using the <code class="code">Event</code> invocation type, where AWS Lambda executes the code asynchronously. What you return does not matter. However, in this case we are implementing an interface that requires us to specify a return type, so in this example the handler uses <code class="code">String</code> as the return type. </p> 
        <p>Using the preceding code (in a file named <code>S3EventProcessorCreateThumbnail.java</code>), create a deployment package. Make sure that you add the following dependencies: </p> 
        <div class="itemizedlist"> 
         <ul class="itemizedlist" type="disc"> 
          <li class="listitem"> <p><code class="code">aws-lambda-java-core </code></p> </li> 
          <li class="listitem"> <p><code class="code">aws-lambda-java-events</code> </p> </li> 
         </ul> 
        </div> 
        <p>These can be found at <a href="https://github.com/aws/aws-lambda-java-libs" target="_blank">aws-lambda-java-libs</a>. </p> 
        <p>For more information, see <a href="java-programming-model.html">Programming Model for Authoring Lambda Functions in Java</a>. </p> 
        <p>Your deployment package can be a .zip file or a standalone .jar. You can use any build and packaging tool you are familiar with to create a deployment package. For examples of how to use the Maven build tool to create a standalone .jar, see <a href="java-create-jar-pkg-maven-no-ide.html">Creating a .jar Deployment Package Using Maven without any IDE (Java)</a> and <a href="java-create-jar-pkg-maven-and-eclipse.html">Creating a .jar Deployment Package Using Maven and Eclipse IDE (Java)</a>. For an example of how to use the Gradle build tool to create a .zip file, see <a href="create-deployment-pkg-zip-java.html">Creating a .zip Deployment Package (Java)</a>. </p> 
        <p>After you verify that your deployment package is created, go to the next step to create an IAM role (execution role). You specify this role at the time you create your Lambda function. </p> 
        <h3 id="with-s3-example-deployment-pkg-java-next-step">Next Step</h3> 
        <p> <a href="with-s3-example-create-iam-role.html">Step 2.2: Create the Execution Role (IAM Role)</a> </p> 
       </div> 
       <div id="Python" name="Python" class="section langfilter"> 
        <h2 id="with-s3-example-deployment-pkg-python">Python</h2> 
        <p>In this section, you create an example Python function and install dependencies. The code sample is compliant with Python runtime versions 3.6 or 2.7. The steps assume the 3.6 runtime but you can use either one. </p> 
        <ol> 
         <li> <p>Open a text editor, and copy the following code. The code uploads the resized image to a different bucket with the same image name, as shown following: </p> <p><code>source-bucket/image.png</code> -&gt; <code>source-bucketresized/image.png</code> </p> 
          <div class="aws-note"> 
           <p class="aws-note">Note</p> 
           <p>The <code class="code">from __future__</code> statement enables you to write code that is compatible with Python 2 or 3. If you are using runtime version 3.6, it is not necessary to include it. </p> 
          </div> <pre class="programlisting">
           <div class="btn-copy-code-container">
            <div class="btn btn-copy-code">
             Copy
            </div>
           </div><code class="nohighlight ">from __future__ import print_function
import boto3
import os
import sys
import uuid
from PIL import Image
import PIL.Image
     
s3_client = boto3.client('s3')
     
def resize_image(image_path, resized_path):
    with Image.open(image_path) as image:
        image.thumbnail(tuple(x / 2 for x in image.size))
        image.save(resized_path)
     
def handler(event, context):
    for record in event['Records']:
        bucket = record['s3']['bucket']['name']
        key = record['s3']['object']['key'] 
        download_path = '/tmp/{}{}'.format(uuid.uuid4(), key)
        upload_path = '/tmp/resized-{}'.format(key)
        
        s3_client.download_file(bucket, key, download_path)
        resize_image(download_path, upload_path)
        s3_client.upload_file(upload_path, '{}resized'.format(bucket), key)
</code></pre> </li> 
         <li> <p>Save the file as <code>CreateThumbnail.py</code>. </p> </li> 
         <li> <p>If your source code is on a local host, copy it over.</p> <p><code class="code">scp -i key.pem /path/to/my_code.py ec2-user@public-ip-address:~/CreateThumbnail.py</code></p> </li> 
         <li> <p>Connect to a 64-bit Amazon Linux instance via SSH.</p> <p><code class="code">ssh -i key.pem ec2-user@public-ip-address </code></p> </li> 
         <li> <p>Install Python 3.6 and virtualenv using the following steps:</p> 
          <div class="orderedlist"> 
           <ol> 
            <li> <p><code class="code">sudo yum install -y gcc zlib zlib-devel openssl openssl-devel</code></p> </li> 
            <li> <p><code class="code">wget <a href="https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz" target="_blank">https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz</a></code></p> </li> 
            <li> <p><code class="code">tar -xzvf Python-3.6.1.tgz</code></p> </li> 
            <li> <p><code class="code">cd Python-3.6.1 &amp;&amp; ./configure &amp;&amp; make</code></p> </li> 
            <li> <p><code class="code">sudo make install</code></p> </li> 
            <li> <p><code class="code">sudo /usr/local/bin/pip3 install virtualenv</code></p> </li> 
           </ol> 
          </div> </li> 
         <li> <p>Choose the virtual environment that was installed via pip3</p> <p><code class="code">/usr/local/bin/virtualenv ~/shrink_venv</code></p> <p><code class="code">source ~/shrink_venv/bin/activate </code></p> </li> 
         <li> <p>Install libraries in the virtual environment</p> <p><code class="code">pip install Pillow </code></p> <p><code class="code">pip install boto3 </code></p> 
          <div class="aws-note"> 
           <p class="aws-note">Note</p> 
           <p>AWS Lambda includes the AWS SDK for Python (Boto 3), so you don't need to include it in your deployment package, but you can optionally include it for local testing. </p> 
          </div> </li> 
         <li> <p>Add the contents of <code>lib</code> and <code>lib64</code> site-packages to your .zip file. Note that the following steps assume you used Python runtime version 3.6. If you used version 2.7 you will need to update accordingly. </p> <p><code class="code">cd $VIRTUAL_ENV/lib/python3.6/site-packages</code></p> <p><code class="code">zip -r9 ~/CreateThumbnail.zip * </code></p> </li> 
         <li> <p>Add your python code to the .zip file</p> <p>cd ~</p> <p><code class="code">zip -g CreateThumbnail.zip CreateThumbnail.py </code></p> </li> 
        </ol> 
        <h3 id="with-s3-example-deployment-pkg-python-next-step">Next Step</h3> 
        <p> <a href="with-s3-example-create-iam-role.html">Step 2.2: Create the Execution Role (IAM Role)</a> </p> 
       </div> 
      </div> 
      <div id="main-col-footer"> 
       <div id="doc-conventions">
        <a target="_top" href="/general/latest/gr/docconventions.html">Document Conventions</a>
       </div> 
       <div id="next">
        <a class="awstoc" accesskey="p" href="with-s3-example-create-test-manually.html">« Previous </a>
        <a class="awstoc" accesskey="n" href="with-s3-example-create-iam-role.html">Next »</a>
       </div> 
       <div id="copyright-main-footer">
        © 2017, Amazon Web Services, Inc. or its affiliates. All rights reserved.
       </div> 
      </div> 
     </div> 
    </div> 
    <div id="right-expanded"> 
     <div id="right-content-wrapper"> 
      <div id="pagetoc"> 
       <p>On this page:</p> 
       <ul class="pagetoc"> 
        <li class="pagetoc" name="Node.js"><a class="pagetoc" href="#with-s3-example-deployment-pkg-nodejs">Node.js</a></li> 
        <li class="pagetoc" name="Java"><a class="pagetoc" href="#with-s3-example-deployment-pkg-java">Java</a></li> 
        <li class="pagetoc" name="Python"><a class="pagetoc" href="#with-s3-example-deployment-pkg-python">Python</a></li> 
       </ul> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div id="footer"> 
   <div id="footer_short_fb" class="hide" title="Feedback">
    <a target="_blank" href="https://docs.aws.amazon.com/forms/aws-doc-feedback?hidden_service_name=Lambda&amp;hidden_guide_name=Developer Guide&amp;hidden_api_version=&amp;hidden_file_name=with-s3-example-deployment-pkg"><i class="fa fa-envelope-o"></i></a>
   </div> 
   <div id="footer_toggle" class="mediaobject">
    <img id="footer_toggle_img" src="/images/expanderarrow.png">
    <img id="footer_toggle_img_collapse" class="hide" src="/images/expanderarrowright.png">
   </div> 
   <div id="footer-left">
    <a target="_top" href="http://aws.amazon.com/terms">Terms of Use</a> | © 2017, Amazon Web Services, Inc. or its affiliates. All rights reserved. 
   </div> 
   <div id="footer-right"> 
    <div id="feedback"> 
     <div id="forums">
      <a id="forum_link" target="_blank" href="http://forums.aws.amazon.com/forum.jspa?forumID=186">Have a question? Try the Forums.</a>
     </div> 
     <div id="feedback-message">
      Did this page help you?
     </div> 
     <div id="feedback-yesno-buttons">
      <a class="awstoc btn btn-default" target="_blank" href="feedbackyes.html?topic_url=http://docs.aws.amazon.com/lambda/latest/dg/with-s3-example-deployment-pkg.html">Yes</a>
      <a class="awstoc btn btn-default" target="_blank" href="feedbackno.html?topic_url=http://docs.aws.amazon.com/lambda/latest/dg/with-s3-example-deployment-pkg.html">No</a>
     </div> 
     <div id="feedback-feedback-button">
      <a class="awstoc btn btn-default" target="_blank" href="https://docs.aws.amazon.com/forms/aws-doc-feedback?hidden_service_name=Lambda&amp;topic_url=http://docs.aws.amazon.com/lambda/latest/dg/with-s3-example-deployment-pkg.html&amp;hidden_guide_name=Developer Guide&amp;hidden_api_version=&amp;hidden_file_name=with-s3-example-deployment-pkg">Feedback</a>
     </div> 
    </div> 
   </div> 
  </div> 
  <noscript> 
   <div> 
    <div> 
     <div> 
      <div id="error_messages">
       <img src="https://d1ge0kk1l5kms0.cloudfront.net/images/G/01/webservices/console/warning.png" style="float: left;" alt="Warning">
       <div id="js_error_message">
        <strong>Javascript is disabled or is unavailable in your browser.</strong>
        <br> To use the AWS Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions. 
       </div> 
      </div> 
     </div> 
    </div> 
   </div> 
  </noscript> 
  <!-- SiteCatalyst code version: H.25.2.
            Copyright 1996-2012 Adobe, Inc. All Rights Reserved
            More info available at http://www.omniture.com -->
  <script language="JavaScript" type="text/javascript" src="https://a0.awsstatic.com/s_code/js/1.0/awshome_s_code.js"></script>
  <script language="JavaScript" type="text/javascript">
         <!--

            // Documentation Service Name
            s.prop66='AWS Lambda';
            s.eVar66='D=c66';
  
            // Documentation Guide Name                                                                 
            s.prop65='Developer Guide';
            s.eVar65='D=c65';

            var s_code=s.t();if(s_code)document.write(s_code)//--></script>
  <script language="JavaScript" type="text/javascript">
         <!--
                if(navigator.appVersion.indexOf('MSIE')>=0)document.write(unescape('%3C')+'\!-'+'-')
                //--></script>
  <noscript>
   <img src="http://amazonwebservices.d2.sc.omtrdc.net/b/ss/awsamazondev/1/H.25.2--NS/0" height="1" width="1" border="0" alt="">
  </noscript> 
  <!--/DO NOT REMOVE/--> 
  <!-- End SiteCatalyst code version: H.25.2. -->  
 </body>
</html>