<!doctype html>
<html>
 <head> 
  <title>JotForm API</title> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <link rel="canonical" href="https://api.jotform.com/docs/"> 
  <meta name="description" content="JotForm API makes it possible to connect to your form data with anything you choose."> 
  <meta name="keywords" content="form data, api, data api, form api"> 
  <meta property="og:title" content="Embed a Form Builder into Your Website Builder"> 
  <meta property="og:description" content="JotForm API makes it possible to connect to your form data with anything you choose."> 
  <meta property="og:image" content="//www.jotform.com/resources/assets/icon/jotform-icon-dark-400x400.png"> 
  <meta property="og:type" content="website"> 
  <meta property="og:url" content="https://api.jotform.com/docs/"> 
  <link rel="Shortcut Icon" href="//cdn.jotfor.ms/favicon.ico?v=3.0.0"> 
  <link href="//fonts.googleapis.com/css?family=Rambla" rel="stylesheet" type="text/css"> 
  <link rel="stylesheet" type="text/css" href="./css/normalize.css"> 
  <link rel="stylesheet" type="text/css" href="./css/bootstrap.min.css"> 
  <link rel="stylesheet" type="text/css" href="./css/bootstrap-responsive.min.css"> 
  <link rel="stylesheet" type="text/css" href="./css/datepicker.css?3.1.{REV}"> 
  <link rel="stylesheet" type="text/css" href="./css/tool.css?3.1.{REV}"> 
  <!--<link rel="stylesheet" type="text/css" href="./css/header.css?3.1.{REV}">--> 
  <script type="text/javascript" src="./js/request-models.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/jquery-1.9.1.min.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/underscore-min.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/backbone-min.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/StageModel.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/MethodSectionView.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/bootstrap-tab.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/bootstrap-scrollspy.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/bootstrap-datepicker.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/jquery.cookie.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/template-loader.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/highlight.min.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="./js/html-sanitizer.js?3.1.{REV}"></script> 
  <script type="text/javascript" src="//js.jotform.com/JotForm.js?3.1.{REV}"></script> 
  <!--<script type="text/javascript" src="./js/jslibs.min.js?3.1.{REV}"></script>--> 
  <script type="text/javascript">
            window.stageModel = new StageModel();
            $.cookie("api-language") ? stageModel.set("language", $.cookie("api-language")) : stageModel.set("language", "curl")
        </script> 
  <link rel="stylesheet" href="https://yandex.st/highlightjs/7.3/styles/default.min.css"> 
  <!-- <link rel="stylesheet" href="http://softwaremaniacs.org/media/soft/highlight/styles/googlecode.css"> --> 
  <!-- <link rel="stylesheet" href="http://softwaremaniacs.org/media/soft/highlight/styles/school_book.css"> --> 
  <!-- <link rel="stylesheet" href="http://softwaremaniacs.org/media/soft/highlight/styles/solarized_light.css"> --> 
  <link rel="stylesheet" href="https://raw.githubusercontent.com/isagalaev/highlight.js/master/src/styles/github.css"> 
  <!-- <link rel="stylesheet" href="http://softwaremaniacs.org/media/soft/highlight/styles/tomorrow.css"> --> 
  <script type="text/template" id="method-section-template">
        <div class="row-fluid">

                <h2><span style="color: #bababa;"><%=type%>&nbsp;</span><span style="font-size: 28px;"><%=url%></span></h2>
                <h4><%=definition%></h4>
                <p><%=explanation%></p> 

                

                <div class="curl code-sample" data-lang="curl" style="display:none">
                </div>                
                <div class="php code-sample" data-lang="php" style="display:none">
                </div>
                <div class="java code-sample" data-lang="java" style="display:none">
                </div>
                <div class="python code-sample" data-lang="python" style="display:none">
                </div> 
                <div class="nodejs code-sample" data-lang="nodejs" style="display:none">
                </div>
                <div class="go code-sample" data-lang="go" style="display:none">
                </div>
                <div class="javascript code-sample" data-lang="javascript" style="display:none">
                </div>   
                <div class="csharp code-sample" data-lang="csharp" style="display:none">
                </div>                
                <div class="ruby code-sample" data-lang="ruby" style="display:none">
                </div>     
                 <div class="scala code-sample" data-lang="scala" style="display:none">
                </div>             
                <a class="toggle-response"><i class="icon-plus"></i>Sample Response</a>

                <div class="response-sample" style="overflow:hidden;display:none;">
                </div>

                <% if(parameters.length===0) {%>
                    <div>No parameter needed</div>
                <% } else { %>
                    <div class="table-contz">
                        <table>
                            <thead>
                                <tr>
                                    <td>Parameter</td>
                                    <td>Description</td>
                                    <td>Test Console</td>
                                </tr>
                            </thead>
                            <tbody>
                                <% for(var i=0; i<parameters.length; i++) { %>
                                    <% var optional = parameters[i].required ? "" : "optional"%>
                                    <tr class="<%=optional%>">
                                        <td>
                                            <b><%=parameters[i].name%></b>
                                            <br/>
                                            <font color=gray size=1><%=parameters[i].type%></font>
                                        </td>
                                        <td>
                                            <%=parameters[i].description%>
                                            <% if(parameters[i].example) {%>
                                            <br/>Example: <%=parameters[i].example%>
                                            <% } %>
                                        </td>
                                        <td>
                                        <% if(parameters[i].inputType==='text') {%>
                                            <% if(parameters[i].required) {%>
                                                <% if(typeof parameters[i].value === "string") { %>
                                                    <input class="required" value="<%=parameters[i].value%>" style="height:14px;margin-bottom:0;width:120px;" name="<%=parameters[i].name%>" type="<%=parameters[i].inputType%>" placeholder="required" data-inputType="<%=parameters[i].parameterType%>" data-replace="<%=parameters[i].replace%>"/>
                                                <% } else { %>
                                                    <input class="required" style="height:14px;margin-bottom:0;width:120px;" name="<%=parameters[i].name%>" type="<%=parameters[i].inputType%>" placeholder="required" data-inputType="<%=parameters[i].parameterType%>" data-replace="<%=parameters[i].replace%>"/>
                                                <% } %>
                                            <% } else { %>
                                                <input style="height:14px;margin-bottom:0;width:120px;" name="<%=parameters[i].name%>" type="<%=parameters[i].inputType%>" placeholder="optional" data-inputType="<%=parameters[i].parameterType%>" data-replace="<%=parameters[i].replace%>"/>
                                            <% } %>
                                            </td>
                                        
                                        <% } else if(parameters[i].inputType==='textarea'){ %>
                                            <% var placeHolder = parameters[i].required ? "required" : "optional"%>
                                            <textarea style="margin-bottom:0;" name="<%=parameters[i].name%>" type="<%=parameters[i].inputType%>" placeholder="<%=placeHolder%>" data-inputType="<%=parameters[i].parameterType%>" data-replace="<%=parameters[i].replace%>"/>
                                        <% } else if(parameters[i].inputType==='select'){ %>
                                            <select name="<%=parameters[i].name%>" data-inputType="<%=parameters[i].parameterType%>" data-replace="<%=parameters[i].replace%>">
                                                <% for(var j=0; j<parameters[i].values.length; j++) { %>
                                                    <option val="<%=parameters[i].values[j]%>"><%=parameters[i].values[j]%></option>
                                                <% } %>
                                            </select>
                                        <% } else if(parameters[i].inputType==='date'){ %>
                                            <input name="<%=parameters[i].name%>" type="text" class="datefield" data-date-format="mm/dd/yyyy" style="height:14px;margin-bottom:0;width:120px;" data-inputType="<%=parameters[i].parameterType%>">
                                        <% } %>
                                    </tr>
                                <% } %>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td> <a class="button try-buttonz call-method" id="call_<%=id%>">Try it out</a> </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    
                    <div class="clearer"></div>
                    <div class="response" style="display: none;">
                        <span class="close-response">
                            <div class="close-window" title="Close Window"> </div>
                        </span>
                        <h5>Response Body</h5>
                        <div class="response-block response-body"></div>
                        <h5>Response Code</h5>
                        <div class="response-block response-code"></div>
                        <h5>Response Headers</h5>
                        <div class="response-block response-headers"></div>                                                           
                        <h5>Request URL </h5>
                        <div class="response-block response-url"></div>
                    </div>                     
                <% }%> 


            <br style="clear:both" />
        </div>
    </script>
  <script type="text/javascript" src="js/dev_auth.js?rev=4545545"></script>
  <script type="text/javascript">
        // var l = window.stageModel.get("language");
        // templateLoader.loadRemoteTemplate("curls", l+"-code-samples.tmpl", function(t){
        //     // console.log("curl tmplate laoded", t, $(t).filter("#user-curl").html());
        // });
    </script>
  <script type="text/template" id="user-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/user?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="user-forms-curl">
    <pre><code class="bash">
    curl -H "APIKEY: {apiKey}" "https://api.jotform.com/user/forms"
    </code></pre>
</script>
  <script type="text/template" id="user-folders-curl">
    <pre><code class="bash">
    curl -H "APIKEY: {apiKey}" "https://api.jotform.com/user/folders"
    </code></pre>
</script>
  <script type="text/template" id="user-invoices-curl">
    <pre><code class="bash">
    curl -H "APIKEY: {apiKey}" "https://api.jotform.com/user/invoices"
    </code></pre>
</script>
  <script type="text/template" id="user-history-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/user/history?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="user-settings-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/user/settings?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="post-user-settings-curl">
    <pre><code class="bash">
    curl -X POST -d "email=new@email.com" -d "website=www.newwebsite.com" "https://api.jotform.com/user/settings?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="user-settings-key-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/user/settings/{settingsKey}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="user-subusers-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/user/subusers?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="user-usage-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/user/usage?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="user-reports-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/user/reports?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="user-register-curl">
    <pre><code class="bash">
    curl -X POST -d "username=Username" -d "password=Password" -d "email=Email" "https://api.jotform.com/user/register"
    </code></pre>
</script>
  <script type="text/template" id="user-login-curl">
    <pre><code class="bash">
    curl -X POST -d "username=Username" -d "password=Password" -d "appName=Application Name" -d "access=Access Type" "https://api.jotform.com/user/login"
    </code></pre>
</script>
  <script type="text/template" id="user-logout-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/v1/user/logout"
    </code></pre>
</script>
  <script type="text/template" id="form-id-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="form-id-files-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}/files?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="form-id-questions-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}/questions?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}/properties?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-key-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}/properties/{propertyKey}?apiKey={apiKey}"

    </code></pre>
</script>
  <script type="text/template" id="form-id-question-id-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}/question/{questionID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="form-id-submissions-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}/submissions?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="report-id-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/report/{reportID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="delete-report-id-curl">
    <pre><code class="bash">
    curl -X DELETE "https://api.jotform.com/report/{reportID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="submission-id-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/submission/{submissionID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="folder-id-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/folder/{folderID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="delete-submission-id-curl">
    <pre><code class="bash">
    curl -X DELETE "https://api.jotform.com/submission/{submissionID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="post-submission-id-curl">
    <pre><code class="bash">
    curl -X POST -d "submission[1_first]=Johny" -d "submission[new]=1" -d "submission[flag]=0" "https://api.jotform.com/submission/{submissionID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-clone-curl">
    <pre><code class="bash">
    curl -X POST "https://api.jotform.com/form/{formID}/clone?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="report-id-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/report/{reportID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="form-id-webhooks-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}/webhooks?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-webhooks-curl">
    <pre><code class="bash">
    curl -X POST -d "webhookURL=http://my.domain.tld/connect-to-DB.ext" "https://api.jotform.com/form/{formID}/webhooks?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-webhooks-curl">
    <pre><code class="bash">
    curl -X DELETE "https://api.jotform.com/form/{formID}/webhooks/{webhookID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-submissions-curl">
    <pre><code class="bash">
    curl -X POST -d "submission[1]=answer of Question 1" -d "submission[2_first]=First Name" -d "submission[2_last]=Last Name" "https://api.jotform.com/form/{formID}/submissions?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-submissions-curl">
    <pre><code class="bash">
    curl -X PUT -d '[{"1":{"text":"answer of Question 1"},"2":{"text":"answer of Question 2"}},{"1":{"text":"answer of Question 1"},"2":{"text":"answer of Question 2"}}]' "https://api.jotform.com/form/{formID}/submissions?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="form-id-submissions-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}/submissions?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="user-submissions-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/user/submissions?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-question-id-curl">
    <pre><code class="bash">
    curl -X DELETE "https://api.jotform.com/form/{formID}/question/{questionID}?apiKey={apiKey}"

    </code></pre>
</script>
  <script type="text/template" id="post-form-id-questions-curl">
    <pre><code class="bash">
    curl -X POST -d "question[type]=control_head" -d "question[text]=Header" -d "question[order]=1" -d "question[name]=clickTo" "https://api.jotform.com/form/{formID}/questions?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-questions-curl">
    <pre><code class="bash">
    curl -X PUT -d '{"questions":{"1":{"type":"control_head","text":"Text 1","order":"1","name":"Header1"},"2":{"type":"control_head","text":"Text 2","order":"2","name":"Header2"}}}' "https://api.jotform.com/form/{formID}/questions?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-question-id-curl">
    <pre><code class="bash">
    curl -X POST -d "question[text]=New Text" -d "question[order]=3" -d "question[name]=New Name of Question" "https://api.jotform.com/form/{formID}/question/{questionID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-properties-curl">
    <pre><code class="bash">
    curl -X POST -d "properties[thankurl]=http://www.newthankyoupage.com" -d "properties[activeRedirect]=thankurl" -d "properties[formWidth]=650" -d "properties[labelWidth]=150" -d "properties[styles]=nova" "https://api.jotform.com/form/{formID}/properties?apiKey={apiKey}"

    </code></pre>
</script>
  <script type="text/template" id="put-form-id-properties-curl">
    <pre><code class="bash">
    curl -X PUT -d '{"properties":{"activeRedirect":"default","formWidth":"650","labelWidth":"150","styles":"nova"}}' "https://api.jotform.com/form/{formID}/properties?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="post-user-forms-curl">
    <pre><code class="bash">
    curl -X POST -d "questions[0][type]=control_head" -d "questions[0][text]=Form Title" -d "questions[0][order]=1" -d "questions[0][name]=Header" -d "questions[1][type]=control_textbox" -d "questions[1][text]=Text Box Title" -d "questions[1][order]=2" -d "questions[1][name]=TextBox" -d "questions[1][validation]=None" -d "questions[1][required]=No" -d "questions[1][readonly]=No" -d "questions[1][size]=20" -d "questions[1][labelAlign]=Auto" -d "questions[1][hint]= " -d "properties[title]=New Form" -d "properties[height]=600" -d "emails[0][type]=notification" -d "emails[0][name]=notification" -d "emails[0][from]=default" -d "emails[0][to]=noreply@jotform.com" -d "emails[0][subject]=New Submission" -d "emails[0][html]=false" "https://api.jotform.com/user/forms?apiKey={apiKey}"
    
    </code></pre>
</script>
  <script type="text/template" id="post-forms-curl">
    <pre><code class="bash">
    curl -X POST -d "questions[0][type]=control_head" -d "questions[0][text]=Form Title" -d "questions[0][order]=1" -d "questions[0][name]=Header" -d "questions[1][type]=control_textbox" -d "questions[1][text]=Text Box Title" -d "questions[1][order]=2" -d "questions[1][name]=TextBox" -d "questions[1][validation]=None" -d "questions[1][required]=No" -d "questions[1][readonly]=No" -d "questions[1][size]=20" -d "questions[1][labelAlign]=Auto" -d "questions[1][hint]= " -d "properties[title]=New Form" -d "properties[height]=600" -d "emails[0][type]=notification" -d "emails[0][name]=notification" -d "emails[0][from]=default" -d "emails[0][to]=noreply@jotform.com" -d "emails[0][subject]=New Submission" -d "emails[0][html]=false" "https://api.jotform.com/form?apiKey={apiKey}"
    
    </code></pre>
</script>
  <script type="text/template" id="put-user-forms-curl">
    <pre><code class="bash">
    curl -X PUT -d '{"questions":[{"type":"control_head","text":"Form Title","order":"1","name":"Header"},{"type":"control_textbox","text":"Text Box Title","order":"2","name":"TextBox","validation":"None","required":"No","readonly":"No","size":"20","labelAlign":"Auto","hint":""}],"properties":{"title":"New Form","height":"600"},"emails":[{"type":"notification","name":"notification", "from":"default","to":"noreply@jotform.com","subject":"New Submission","html":"false"}]}' "https://api.jotform.com/user/forms?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="put-forms-curl">
    <pre><code class="bash">
    curl -X PUT -d '{"questions":[{"type":"control_head","text":"Form Title","order":"1","name":"Header"},{"type":"control_textbox","text":"Text Box Title","order":"2","name":"TextBox","validation":"None","required":"No","readonly":"No","size":"20","labelAlign":"Auto","hint":""}],"properties":{"title":"New Form","height":"600"},"emails":[{"type":"notification","name":"notification", "from":"default","to":"noreply@jotform.com","subject":"New Submission","html":"false"}]}' "https://api.jotform.com/form?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-curl">
    <pre><code class="bash">
    curl -X DELETE "https://api.jotform.com/form/{formID}?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="form-id-reports-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/form/{formID}/reports?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="system-plan-planName-curl">
    <pre><code class="bash">
    curl -X GET "https://api.jotform.com/system/plan/FREE"
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-reports-curl">
    <pre><code class="bash">
    curl -X POST -d "title=Report Title" -d "list_type=grid" -d "fields=ip,dt,1" "https://api.jotform.com/form/{formID}/reports?apiKey={apiKey}"
    </code></pre>
</script>
  <script type="text/template" id="user-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getUser()
.then(function(r){
    /**
     successful response including user information
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="user-usage-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getUsage()
.then(function(r){
    /**
     successful response including user usage data
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="user-forms-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getForms()
.then(function(r){
    /**
     successful response including user forms array
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="user-submissions-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getSubmissions()
.then(function(r){
    /**
     successful response including user submissions data
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="user-subusers-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getSubusers()
.then(function(r){
    /**
     successful response including user subusers data
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="user-folders-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getFolders()
.then(function(r){
    /**
     successful response including user folders array
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="user-reports-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getReports()
.then(function(r){
    /**
     successful response including user reports data
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="user-settings-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getSettings()
.then(function(r){
    /**
     successful response including user settings data
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="user-history-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getHistory()
.then(function(r){
    /**
     successful response including user history records
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getForm(formID)
.then(function(r){
    /**
     successful response including form data with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-questions-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getFormQuestions(formID)
.then(function(r){
    /**
     successful response including questions of form with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-question-id-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getFormQuestion(formID, qid)
.then(function(r){
    /**
     successful response including question with given id of form with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-submissions-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getFormSubmissions(formID)
.then(function(r){
    /**
     successful response including submissions of form with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="post-form-id-submissions-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.createFormSubmission(formID, submissions)
.then(function(r){
    /**
     successful response including submissions of form with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-submissions-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.createFormSubmission(formID, submissions)
.then(function(r){
    /**
     successful response including submissions of form with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-files-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getFormFiles(formID)
.then(function(r){
    /**
     successful response including files of form with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-webhooks-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getFormWebhooks(formID)
.then(function(r){
    /**
     successful response including user subusers data
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="post-form-id-webhooks-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.createFormWebhook(formID, webhookURL)
.then(function(r){
    /**
     successful response including user subusers data
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="submission-id-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getSubmission(sid)
.then(function(r){
    /**
     successful response including submission data with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="report-id-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getReport(reportID)
.then(function(r){
    /**
     successful response including report data with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="folder-id-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getFolder(folderID)
.then(function(r){
    /**
     successful response including report data with given id
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>
  <script type="text/template" id="user-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$userInfo = $jotformAPI->getUser();
    </code></pre>
</script>
  <script type="text/template" id="user-usage-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$usage = $jotformAPI->getUsage();
    </code></pre>
</script>
  <script type="text/template" id="user-forms-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$forms = $jotformAPI->getForms();
    </code></pre>
</script>
  <script type="text/template" id="user-submissions-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$submissions = $jotformAPI->getSubmissions();
    </code></pre>
</script>
  <script type="text/template" id="user-subusers-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$subusers = $jotformAPI->getSubusers();
    </code></pre>
</script>
  <script type="text/template" id="user-folders-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$folders = $jotformAPI->getFolders();
    </code></pre>
</script>
  <script type="text/template" id="user-reports-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$reports = $jotformAPI->getReports();
    </code></pre>
</script>
  <script type="text/template" id="user-register-php">
    <pre><code class="php">
$jotformAPI = new JotForm();

$userDetails = {"username": "Username", "password": "Password", "email": "User email"}

$response = $jotformAPI.registerUser($userDetails)
    </code></pre>
</script>
  <script type="text/template" id="user-login-php">
    <pre><code class="php">
    $jotformAPI = new JotForm();

    $creadentials = array(
        "username" => "Username",
        "password" => "Password",
        "appName" => "Application Name",
        "access" => "Access Type",
    );

    $response = $jotformAPI->loginUser($creadentials);
    </code></pre>
</script>
  <script type="text/template" id="user-logout-php">
    <pre><code class="php">
    $jotformAPI = new JotForm();

    $response = $jotformAPI->logoutUser();
    </code></pre>
</script>
  <script type="text/template" id="user-settings-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$settings = $jotformAPI->getSettings();
    </code></pre>
</script>
  <script type="text/template" id="post-user-settings-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$settings = array(
    'email' => 'new@email.com',
    'website' => 'www.newwebsite.com',
);
$response = $jotformAPI->updateSettings($settings);
    </code></pre>
</script>
  <script type="text/template" id="user-history-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$history = $jotformAPI->getHistory();
    </code></pre>
</script>
  <script type="text/template" id="form-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$form = $jotformAPI->getForm("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-questions-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$questions = $jotformAPI->getFormQuestions("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$properties = $jotformAPI->getFormProperties("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-key-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$property = $jotformAPI->getFormProperty("FORM ID", "PROPERTY KEY");
    </code></pre>
</script>
  <script type="text/template" id="form-id-reports-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$reports = $jotformAPI->getFormReports("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-question-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$question = $jotformAPI->getFormQuestion("FORM ID", "QUESTION ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-submissions-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$submissions = $jotformAPI->getFormSubmissions("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-submissions-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$submission = array(
    "1" => "answer of Question 1",
    "2_first" => "First Name",
    "2_last" => "Last Name"
);

$result = $jotformAPI->createFormSubmission("FORM ID", $submission);
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-submissions-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$submission = array(
    // First submission
    array(
        "1" => array(
        "text" => "answer of Question 1",
        ),
        "2" => array(
            "text" => "answer of Question 2",
        )
    ),
    //Second submission
    array(
        "1" => array(
        "text" => "answer of Question 1",
        ),
        "2" => array(
            "text" => "answer of Question 2",
        )
    )
);

$data = json_encode($submission);

/*$data needs to be json
[
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   },
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   }
]
*/

$response = jotformAPI->createFormSubmissions("FORM ID", $data);

    </code></pre>
</script>
  <script type="text/template" id="form-id-files-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$files = $jotformAPI->getFormFiles("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-webhooks-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$webhooks = $jotformAPI->getFormWebhooks("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-webhooks-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$result = $jotformAPI->createFormWebhook("FORM ID", "http://www.example.com/notify.php");
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-webhooks-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$result = $jotformAPI->deleteFormWebhook("FORM ID", "WEBHOOK ID");
    </code></pre>
</script>
  <script type="text/template" id="submission-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$submission = $jotformAPI->getSubmission("SUBMISSION ID");
    </code></pre>
</script>
  <script type="text/template" id="report-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$report = $jotformAPI->getReport("REPORT ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-report-id-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$response = $jotformAPI->deleteReport("REPORT ID");
    </code></pre>
</script>
  <script type="text/template" id="folder-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$folder = $jotformAPI->getFolder("FOLDER ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-submission-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$result = $jotformAPI->deleteSubmission("SUBMISSION ID");
    </code></pre>
</script>
  <script type="text/template" id="post-submission-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$result = $jotformAPI->editSubmission("SUBMISSION ID", array("1_first" => "FIRST NAME", "new" => "0", "flag" => "0"));
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-clone-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$result = $jotformAPI->cloneForm("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-question-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$result = $jotformAPI->deleteFormQuestion("FORM ID", "QUESTION ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-questions-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$question = array(
    'type' => 'control_head',
    'text' => 'Header',
    'order' => '1', 
    'name' => 'clickTo', 
);

$response = $jotformAPI->createFormQuestion("FORM ID", $question);
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-questions-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$questions = array(
    'questions' => array(
        array(
            'type' => 'control_head',
            'text'=> 'Text 1',
            'order' => '1',
            'name' => 'Header1',
        ),
        array(
            'type' => 'control_head',
            'text' => 'Text 2',
            'order' => '2',
            'name' => 'Header2',
        )
    ),
);

$data = json_encode($questions);

/* $data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Text 1",
         "order":"1",
         "name":"Header1"
      },
      {
         "type":"control_head",
         "text":"Text 2",
         "order":"2",
         "name":"Header2"
      }
   ]
}
*/

$response = $jotformAPI->createFormQuestions("FORM ID", $data);
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-question-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$questionProperties = array(
    'text' => 'New Text',
    'order' => '3',
    'name' => 'New Name of Question',
);

$response = $jotformAPI->editFormQuestion("FORM ID", "QUESTION ID", $questionProperties);
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-properties-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$formProperties = array(
    'thankurl' => 'http://www.newthankyoupage.com',
    'activeRedirect' => 'thankurl',
    'formWidth' => '650',
    'labelWidth' => '150',
    'styles' => 'nova',
);

$response = $jotformAPI->setFormProperties("FORM ID", $formProperties);
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-properties-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$formProperties = array(
    'properties' => array(
        'activeRedirect' => 'default',
        'formWidth' => '650',
        'labelWidth' => '150',
        'styles' => 'nova',
    ),
);

$data = json_encode($formProperties);

/* $data needs to be json
{
   "properties":{
      "activeRedirect":"default",
      "formWidth":"650",
      "labelWidth":"150",
      "styles":"nova"
   }
}
*/

$response = $jotformAPI->setMultipleFormProperties("FORM ID", $data);
    </code></pre>
</script>
  <script type="text/template" id="post-user-forms-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$form = array(
    'questions' => array(
        array(
            'type' => 'control_head',
            'text' => 'Form Title',
            'order' => '1',
            'name' => 'Header',
        ),
        array(
            'type' => 'control_textbox',
            'text' => 'Text Box Title',
            'order' => '2',
            'name' => 'TextBox',
            'validation' => 'None',
            'required' => 'No',
            'readonly' => 'No',
            'size' => '20',
            'labelAlign' => 'Auto',
            'hint' => '',
        ),
    ),
    'properties' => array(
        'title' => 'New Form',
        'height' => '600',
    ),
    'emails' => array(
        array(
            'type' => 'notification',
            'name' => 'notification',
            'from' => 'default',
            'to' => 'noreply@jotform.com',
            'subject' => 'New Submission',
            'html' => 'false'
        ),
    ),
);

$response = $jotformAPI->createForm($form);
    </code></pre>
</script>
  <script type="text/template" id="post-forms-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$form = array(
    'questions' => array(
        array(
            'type' => 'control_head',
            'text' => 'Form Title',
            'order' => '1',
            'name' => 'Header',
        ),
        array(
            'type' => 'control_textbox',
            'text' => 'Text Box Title',
            'order' => '2',
            'name' => 'TextBox',
            'validation' => 'None',
            'required' => 'No',
            'readonly' => 'No',
            'size' => '20',
            'labelAlign' => 'Auto',
            'hint' => '',
        ),
    ),
    'properties' => array(
        'title' => 'New Form',
        'height' => '600',
    ),
    'emails' => array(
        array(
            'type' => 'notification',
            'name' => 'notification',
            'from' => 'default',
            'to' => 'noreply@jotform.com',
            'subject' => 'New Submission',
            'html' => 'false'
        ),
    ),
);

$response = $jotformAPI->createForm($form);
    </code></pre>
</script>
  <script type="text/template" id="put-user-forms-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$form = array(
    'questions' => array(
        array(
            'type' => 'control_head',
            'text' => 'Form Title',
            'order' => '1',
            'name' => 'Header',
        ),
        array(
            'type' => 'control_textbox',
            'text' => 'Text Box Title',
            'order' => '2',
            'name' => 'TextBox',
            'validation' => 'None',
            'required' => 'No',
            'readonly' => 'No',
            'size' => '20',
            'labelAlign' => 'Auto',
            'hint' => '',
        ),
    ),
    'properties' => array(
        'title' => 'New Form',
        'height' => '600',
    ),
    'emails' => array(
        array(
            'type' => 'notification',
            'name' => 'notification',
            'from' => 'default',
            'to' => 'noreply@jotform.com',
            'subject' => 'New Submission',
            'html' => 'false'
        ),
    ),
);

$data = json_encode($form);

/* $data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"your mail address",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
*/

$response = $jotformAPI->createForms($data);
    </code></pre>
</script>
  <script type="text/template" id="put-forms-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$form = array(
    'questions' => array(
        array(
            'type' => 'control_head',
            'text' => 'Form Title',
            'order' => '1',
            'name' => 'Header',
        ),
        array(
            'type' => 'control_textbox',
            'text' => 'Text Box Title',
            'order' => '2',
            'name' => 'TextBox',
            'validation' => 'None',
            'required' => 'No',
            'readonly' => 'No',
            'size' => '20',
            'labelAlign' => 'Auto',
            'hint' => '',
        ),
    ),
    'properties' => array(
        'title' => 'New Form',
        'height' => '600',
    ),
    'emails' => array(
        array(
            'type' => 'notification',
            'name' => 'notification',
            'from' => 'default',
            'to' => 'noreply@jotform.com',
            'subject' => 'New Submission',
            'html' => 'false'
        ),
    ),
);

$data = json_encode($form);

/* $data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"your mail address",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
*/

$response = $jotformAPI->createForms($data);
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-php">
	<pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$response = $jotformAPI->deleteForm("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="system-plan-planName-php">
  <pre><code class="php">
$jotformAPI = new JotForm();

$response = $jotformAPI->getPlan("PLAN NAME");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-reports-php">
  <pre><code class="php">
$jotformAPI = new JotForm("YOUR API KEY");

$report = array(
    "title" => "REPORT TITLE",
    "list_type" => "REPORT TYPE",
    "fields" => "ip, dt, 1"
);

$response = $jotformAPI->createReport("FORM ID", $report);
    </code></pre>
</script>
  <script type="text/template" id="user-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

userInfo := client.GetUser()
    </code></pre>
</script>
  <script type="text/template" id="user-usage-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

usage := client.GetUsage()
    </code></pre>
</script>
  <script type="text/template" id="user-forms-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

forms := client.GetForms()
    </code></pre>
</script>
  <script type="text/template" id="user-submissions-go">
	<pre><code class="python">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

submissions := client.GetSubmissions()
    </code></pre>
</script>
  <script type="text/template" id="user-subusers-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

subusers := client.GetSubusers()
    </code></pre>
</script>
  <script type="text/template" id="user-folders-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

folders := client.GetFolders()
    </code></pre>
</script>
  <script type="text/template" id="user-reports-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

reports := client.GetReports()
    </code></pre>
</script>
  <script type="text/template" id="user-register-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("", "OUTPUT TYPE", "DEBUG MODE")

userDetails := make(map[string]string)

userDetails["username"] = "UserName"
userDetails["password"] = "Password"
userDetails["email"] = "User email"

response := client.RegisterUser(userDetails)
    </code></pre>
</script>
  <script type="text/template" id="user-login-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("", "OUTPUT TYPE", "DEBUG MODE")

credentials := make(map[string]string)

credentials["username"] = "Username"
credentials["password"] = "Password"
credentials["appName"] = "Application Name"
credentials["access"] = "Access Type"

response := client.LoginUser(credentials)
    </code></pre>
</script>
  <script type="text/template" id="user-logout-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("", "OUTPUT TYPE", "DEBUG MODE")

response := client.LogoutUser()
    </code></pre>
</script>
  <script type="text/template" id="user-settings-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

settings := client.GetSettings()
    </code></pre>
</script>
  <script type="text/template" id="post-user-settings-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

settings := make(map[string]string)

settings["email"] = "new@email.com"
settings["website"] = "www.newwebsite.com"

response := jotformAPI.UpdateSettings(settings)
    </code></pre>
</script>
  <script type="text/template" id="user-history-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

settings := client.GetHistory()
    </code></pre>
</script>
  <script type="text/template" id="form-id-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

form := client.GetForm("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-questions-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

questions := client.GetFormQuestions("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-questions-id-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

question := client.GetFormQuestion("FORM ID", "QUESTION ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

properties := client.GetFormProperties("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-key-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

property := client.GetFormProperty("FORM ID", "PROPERTY KEY")
    </code></pre>
</script>
  <script type="text/template" id="form-id-question-id-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

property := client.GetFormQuestion("FORM ID", "QUESTION ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-submissions-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

submissions := client.GetFormSubmissions("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-submissions-go">
    <pre><code class="javascript">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

newSubmission := map[string]string {
    "1": "answer of Question 1"
    "2_first": "First Name",
    "2_last": "Last Name",
}

result := client.CreateFormSubmissions("FORM ID", newSubmission)
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-submissions-go">
    <pre><code class="javascript">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

// First submission
answer1_1 := make(map[string]string)
answer1_1["text"] = "answer of Question 1"

answer1_2 := make(map[string]string)
answer1_2["text"] = "answer of Question 2"

submission1 := make(map[string]interface{})
submission1["1"] = answer1_1
submission1["2"] = answer1_2

// Second submission
answer2_1 := make(map[string]string)
answer2_1["text"] = "answer of Question 1"

answer2_2 := make(map[string]string)
answer2_2["text"] = "answer of Question 2"

submission2 := make(map[string]interface{})
submission2["1"] = answer2_1
submission2["2"] = answer2_2

var submissions [2]map[string]interface{}
submissions[0] = submission1
submissions[1] = submission2

data, err := json.Marshal(submissions)

/*data needs to be json
[
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   },
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   }
]
*/

if err == nil {
    response := client.CreateFormSubmissions("FORM ID", data)
}
    </code></pre>
</script>
  <script type="text/template" id="form-id-files-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

files := client.GetFormFiles("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-webhooks-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

webhooks := client.GetFormWebhooks("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-webhooks-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

result := client.CreateFormWebhook("FORM ID", "http://www.example.com/notify.php")
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-webhooks-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

result := client.DeleteFormWebhook("FORM ID", "WEBHOOK ID")
    </code></pre>
</script>
  <script type="text/template" id="submission-id-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

submission := client.GetSubmission("SUBMISSION ID")
    </code></pre>
</script>
  <script type="text/template" id="report-id-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

report := client.GetReport("REPORT ID")
    </code></pre>
</script>
  <script type="text/template" id="delete-report-id-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

response := client.DeleteReport("REPORT ID")
    </code></pre>
</script>
  <script type="text/template" id="folder-id-go">
	<pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

report := client.GetFolder("FOLDER ID")
    </code></pre>
</script>
  <script type="text/template" id="delete-submission-id-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

result := client.DeleteSubmission("SUBMISSION ID")
    </code></pre>
</script>
  <script type="text/template" id="post-submission-id-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

newSubmission := map[string]string {
        "1_first": "FIRST NAME",
        "new": "0",
        "flag": "0",
}

result := client.EditSubmission("SUBMISSION ID", newSubmission)
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-clone-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

result := client.CloneForm("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-question-id-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

result := client.DeleteFormQuestion("FORM ID", "QUESTION ID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-questions-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

question := map[string]string {
    "type": "control_head",
    "text": "Header",
    "order": "1",
    "name": "clickTo",
}

response := client.CreateFormQuestion("FORM ID", question)
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-questions-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

question1 := map[string]string{
    "type": "control_head",
    "text": "Text 1",
    "qid": "1",
    "order": "1",
    "name": "clickTo",
}

question2 := map[string]string{
    "type": "control_head",
    "text": "Text 2",
    "qid": "1",
    "order": "1",
    "name": "clickTo",
}

questions := make(map[string]map[string]string)
questions["1"] = question1
questions["2"] = question2

qObj := make(map[string]interface{})
qObj["questions"] = questions

data, err := json.Marshal(qObj)

/* data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Text 1",
         "order":"1",
         "name":"Header1"
      },
      {
         "type":"control_head",
         "text":"Text 2",
         "order":"2",
         "name":"Header2"
      }
   ]
}
*/

if err == nil {
    response := client.CreateFormQuestions("FORM ID", data)
}
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-question-id-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

questionProperties := map[string]string {
    "text": "New Text",
    "order": "3",
    "name": "New Name of Question",
}

response := client.EditFormQuestion("FORM ID", "QUESTION ID", questionProperties)
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-properties-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

formProperties := map[string]string {
    "thankurl": "http://www.newthankyoupage.com",
    "activeRedirect": "thankurl",
    "formWidth": "650",
    "labelWidth": "150",
    "styles": "nova",
}

response := client.SetFormProperties("FORM ID", formProperties)
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-properties-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

formProperties := map[string]string {
    "activeRedirect": "default",
    "formWidth": "650",
    "labelWidth": "150",
    "styles": "nova",
}

properties := make(map[string]interface{})
properties["properties"] = formProperties

data, err := json.Marshal(properties)

/* data needs to be json
{
   "properties":{
      "activeRedirect":"default",
      "formWidth":"650",
      "labelWidth":"150",
      "styles":"nova"
   }
}
*/

if err == nil {
    response := client.SetMultipleFormProperties("FORM ID", data)
}
    </code></pre>
</script>
  <script type="text/template" id="post-user-forms-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

question1 := map[string]string {
    "type": "control_head",
    "text": "Form Title",
    "order": "1",
    "name": "Header",
    "headerType": "Large",
}

question2 := map[string]string {
    "type": "control_textbox",
    "text": "Text Box Title",
    "order": "2",
    "name": "TextBox",
    "validation": "None",
    "required": "No",
    "readonly": "No",
    "size": "20",
    "labelAlign": "Auto",
    "hint": "",
}

questions := make(map[string]interface{})
questions["1"] = question1
questions["2"] = question2

properties := map[string]string {
    "title": "New Form",
    "height": "600",
}

email1 := map[string]string {
    "type": "notification",
    "name": "notification",
    "from": "default",
    "to": "noreply@jotform.com",
    "subject": "New Submission",
    "html": "false"
}

emails := make(map[string]interface{})
emails["1"] = email1

form := make(map[string]interface{})
form["questions"] = questions
form["properties"] = properties
form["emails"] = emails

response := client.CreateForm(form)
    </code></pre>
</script>
  <script type="text/template" id="post-forms-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

question1 := map[string]string {
    "type": "control_head",
    "text": "Form Title",
    "order": "1",
    "name": "Header",
    "headerType": "Large",
}

question2 := map[string]string {
    "type": "control_textbox",
    "text": "Text Box Title",
    "order": "2",
    "name": "TextBox",
    "validation": "None",
    "required": "No",
    "readonly": "No",
    "size": "20",
    "labelAlign": "Auto",
    "hint": "",
}

questions := make(map[string]interface{})
questions["1"] = question1
questions["2"] = question2

properties := map[string]string {
    "title": "New Form",
    "height": "600",
}

email1 := map[string]string {
    "type": "notification",
    "name": "notification",
    "from": "default",
    "to": "noreply@jotform.com",
    "subject": "New Submission",
    "html": "false"
}

emails := make(map[string]interface{})
emails["1"] = email1

form := make(map[string]interface{})
form["questions"] = questions
form["properties"] = properties
form["emails"] = emails

response := client.CreateForm(form)
    </code></pre>
</script>
  <script type="text/template" id="put-user-forms-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

question1 := map[string]string {
    "type": "control_head",
    "text": "Form Title",
    "order": "1",
    "name": "Header",
    "headerType": "Large",
}

question2 := map[string]string {
    "type": "control_textbox",
    "text": "Text Box Title",
    "order": "2",
    "name": "TextBox",
    "validation": "None",
    "required": "No",
    "readonly": "No",
    "size": "20",
    "labelAlign": "Auto",
    "hint": "",
}

questions := make(map[string]interface{})
questions["1"] = question1
questions["2"] = question2

properties := map[string]string {
    "title": "New Form",
    "height": "600",
}

email1 := map[string]string {
    "type": "notification",
    "name": "notification",
    "from": "default",
    "to": "noreply@jotform.com",
    "subject": "New Submission",
    "html": "false"
}

emails := make(map[string]interface{})
emails["1"] = email1

form := make(map[string]interface{})
form["questions"] = questions
form["properties"] = properties
form["emails"] = emails

data, err := json.Marshal(form)

/* data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"noreply@jotform.com",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
*/

if err == nil {
    response := client.CreateForms(data)
}
    </code></pre>
</script>
  <script type="text/template" id="put-forms-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

question1 := map[string]string {
    "type": "control_head",
    "text": "Form Title",
    "order": "1",
    "name": "Header",
    "headerType": "Large",
}

question2 := map[string]string {
    "type": "control_textbox",
    "text": "Text Box Title",
    "order": "2",
    "name": "TextBox",
    "validation": "None",
    "required": "No",
    "readonly": "No",
    "size": "20",
    "labelAlign": "Auto",
    "hint": "",
}

questions := make(map[string]interface{})
questions["1"] = question1
questions["2"] = question2

properties := map[string]string {
    "title": "New Form",
    "height": "600",
}

email1 := map[string]string {
    "type": "notification",
    "name": "notification",
    "from": "default",
    "to": "noreply@jotform.com",
    "subject": "New Submission",
    "html": "false"
}

emails := make(map[string]interface{})
emails["1"] = email1

form := make(map[string]interface{})
form["questions"] = questions
form["properties"] = properties
form["emails"] = emails

data, err := json.Marshal(form)

/* data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"noreply@jotform.com",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
*/

if err == nil {
    response := client.CreateForms(data)
}
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

response := client.DeleteForm("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-reports-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")

response := client.GetFormReports("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="system-plan-planName-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("", "OUTPUT TYPE", "DEBUG MODE")

response := client.GetPlan("PLAN NAME")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-reports-go">
    <pre><code class="go">
client := jotform.NewJotFormAPIClient("YOUR API KEY", "OUTPUT TYPE", "DEBUG MODE")
report := make(map[string]string)

report["title"] = "REPORT TITLE"
report["list_type"] = "REPORT TYPE"
report["fields"] = "ip, dt, 1"

response := jotformAPI.CreateReport("FORM ID", report)
    </code></pre>
</script>
  <script type="text/template" id="user-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

userInfo = jotformAPI.get_user()
    </code></pre>
</script>
  <script type="text/template" id="user-usage-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

usage = jotformAPI.get_usage()
    </code></pre>
</script>
  <script type="text/template" id="user-forms-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

forms = jotformAPI.get_forms()
    </code></pre>
</script>
  <script type="text/template" id="user-submissions-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

submissions = jotformAPI.get_submissions()
    </code></pre>
</script>
  <script type="text/template" id="user-subusers-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

subusers = jotformAPI.get_subusers()
    </code></pre>
</script>
  <script type="text/template" id="user-folders-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

folders = jotformAPI.get_folders()
    </code></pre>
</script>
  <script type="text/template" id="user-reports-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

reports = jotformAPI.get_reports()
    </code></pre>
</script>
  <script type="text/template" id="user-register-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient()

userDetails = {'username': 'UserName', 'password': 'Password', 'email': 'User email'}

response = jotformAPI.register_user(userDetails)
    </code></pre>
</script>
  <script type="text/template" id="user-login-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient()

credentials = {'username': 'Username', 'password': 'Password', 'appName': 'Application Name', 'access': 'Access Type'}

response = jotformAPI.login_user(credentials)
    </code></pre>
</script>
  <script type="text/template" id="user-logout-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient()

response = jotformAPI.logout_user()
    </code></pre>
</script>
  <script type="text/template" id="user-settings-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

settings = jotformAPI.get_settings()
    </code></pre>
</script>
  <script type="text/template" id="post-user-settings-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

settings = {'email': 'new@email.com', 'website': 'www.newwebsite.com'}
response = jotformAPI.update_settings(settings)
    </code></pre>
</script>
  <script type="text/template" id="user-history-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

history = jotformAPI.get_history()
    </code></pre>
</script>
  <script type="text/template" id="form-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

form = jotformAPI.get_form("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-questions-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

questions = jotformAPI.get_form_questions("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-question-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

question = jotformAPI.get_form_question("FORM ID", "QUESTION ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

properties = jotformAPI.get_form_properties("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-key-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

property = jotformAPI.get_form_property("FORM ID", "PROPERTY KEY")
    </code></pre>
</script>
  <script type="text/template" id="form-id-reports-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

reports = jotformAPI.get_form_reports("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-submissions-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

submissions = jotformAPI.get_form_submissions("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-submissions-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

submission = {'1': 'answer of Question 1', '2_first': 'First Name', '2_last': 'Last Name'}

response = jotformAPI.create_form_submission("FORM ID", submission)
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-submissions-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

// First submission
answer1_1 = {'text': 'answer of Question 1'}
answer1_2 = {'text': 'answer of Question 2'}

submission1 = {'1': answer1_1, '2': answer1_2}

// Second submission
answer2_1 = {'text': 'answer of Question 1'}
answer2_2 = {'text': 'answer of Question 2'}

submission2 = {'1': answer2_1, '2': answer2_2}

submissions = []
submissions.append(submission1)
submissions.append(submission2)

data = json.dumps(submission)

'''data needs to be json
[
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   },
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   }
]
'''

submissions = jotformAPI.create_form_submissions("FORM ID", data)

    </code></pre>
</script>
  <script type="text/template" id="form-id-files-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

files = jotformAPI.get_form_files("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-webhooks-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

webhooks = jotformAPI.get_form_webhooks("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-webhooks-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

result = jotformAPI.create_form_webhook("FORM ID", "http://www.example.com/notify.php")
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-webhooks-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

result = jotformAPI.delete("FORM ID", "WEBHOOK ID")
    </code></pre>
</script>
  <script type="text/template" id="submission-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

submission = jotformAPI.get_submission("SUBMISSION ID")
    </code></pre>
</script>
  <script type="text/template" id="report-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

report = jotformAPI.get_report("REPORT ID")
    </code></pre>
</script>
  <script type="text/template" id="delete-report-id-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

response = jotformAPI.delete_report("REPORT ID")
    </code></pre>
</script>
  <script type="text/template" id="folder-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

report = jotformAPI.get_folder("FOLDER ID")
    </code></pre>
</script>
  <script type="text/template" id="delete-submission-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

result = jotformAPI.delete_submission("SUBMISSION ID")
    </code></pre>
</script>
  <script type="text/template" id="post-submission-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

result = jotformAPI.edit_submission("SUBMISSION ID", {"1_first": "FIRST NAME", "new": "0", "flag": "0"})

    </code></pre>
</script>
  <script type="text/template" id="post-form-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

result = jotformAPI.clone_form("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-question-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

result = jotformAPI.delete_form_question("FORM ID", "QUESTION ID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-questions-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

question = {'type': 'control_head', 'text': 'Header', 'order': '1', 'name': 'clickTo'}

response = jotformAPI.create_form_question('32134810077952', question)
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-questions-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

questions = {
  'questions': {
        '1': {
            'type':'control_head',
            'text':'Text 1',
            'order':'1',
            'name':'clickTo'
        },
        '2': {
            'type':'control_head', 
            'text':'Text 2', 
            'order':'2', 
            'name':'clickTo'
        }
    }
}

data = json.dumps(questions)

'''data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Text 1",
         "order":"1",
         "name":"Header1"
      },
      {
         "type":"control_head",
         "text":"Text 2",
         "order":"2",
         "name":"Header2"
      }
   ]
}
'''

response = jotformAPI.create_form_questions('FORM ID', data)
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-question-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

question_properties = {'text':'New Text', 'order':'3', 'name': 'New Name of Question'}

response = jotformAPI.edit_form_question('FORM ID', 'QUESTION ID', question_properties)
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-properties-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

form_properties = {'thankurl': 'http://www.newthankyoupage.com', 'activeRedirect': 'thankurl', 'formWidth': '650', 'labelWidth': '150', 'styles': 'nova'}

response = jotformAPI.set_form_properties('FORM ID', form_properties)
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-properties-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

form_properties = {
    'properties': {
        'activeRedirect': 'default',
        'formWidth': '650',
        'labelWidth': '150',
        'styles': 'nova'
      }
  }

data = json.dumps(form_properties)

''' data needs to be json
{
   "properties":{
      "activeRedirect":"default",
      "formWidth":"650",
      "labelWidth":"150",
      "styles":"nova"
   }
}
'''

response = jotformAPI.set_multiple_form_properties('FORM ID', data)
    </code></pre>
</script>
  <script type="text/template" id="post-user-forms-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

form = {
    'questions': {
        '1': {
            'type': 'control_head',
            'text': 'Form Title',
            'order': '1',
            'name': 'Header',
            'headerType': 'Large',
        },
        '2': {
            'type': 'control_textbox',
            'text': 'Text Box Title',
            'order': '2',
            'name': 'TextBox',
            'validation': 'None',
            'required': 'No',
            'readonly': 'No',
            'size': '20',
            'labelAlign': 'Auto',
            'hint': '',
        },
    },
    'properties': {
        'title': 'New Form',
        'height': '600',
    },
    'emails': {
        '0': {
            'type': 'notification',
            'name': 'notification',
            'from': 'default',
            'to': 'noreply@jotform.com',
            'subject': 'New Submission',
            'html': 'false',
            },
    },
}

response = jotformAPI.create_form(form)
    </code></pre>
</script>
  <script type="text/template" id="post-forms-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

form = {
    'questions': {
        '1': {
            'type': 'control_head',
            'text': 'Form Title',
            'order': '1',
            'name': 'Header',
            'headerType': 'Large',
        },
        '2': {
            'type': 'control_textbox',
            'text': 'Text Box Title',
            'order': '2',
            'name': 'TextBox',
            'validation': 'None',
            'required': 'No',
            'readonly': 'No',
            'size': '20',
            'labelAlign': 'Auto',
            'hint': '',
        },
    },
    'properties': {
        'title': 'New Form',
        'height': '600',
    },
    'emails': {
        '0': {
            'type': 'notification',
            'name': 'notification',
            'from': 'default',
            'to': 'noreply@jotform.com',
            'subject': 'New Submission',
            'html': 'false',
            },
    },
}

response = jotformAPI.create_form(form)
    </code></pre>
</script>
  <script type="text/template" id="put-user-forms-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

form = {
    'questions': {
        '1': {
            'type': 'control_head',
            'text': 'Form Title',
            'order': '1',
            'name': 'Header',
            'headerType': 'Large',
        },
        '2': {
            'type': 'control_textbox',
            'text': 'Text Box Title',
            'order': '2',
            'name': 'TextBox',
            'validation': 'None',
            'required': 'No',
            'readonly': 'No',
            'size': '20',
            'labelAlign': 'Auto',
            'hint': '',
        },
    },
    'properties': {
        'title': 'New Form',
        'height': '600',
    },
    'emails': {
        '0': {
            'type': 'notification',
            'name': 'notification',
            'from': 'default',
            'to': 'noreply@jotform.com',
            'subject': 'New Submission',
            'html': 'false',
            },
    },
}

data = json.dumps(form)

'''data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"noreply@jotform.com",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
'''

response = jotformAPI.create_forms(data)
    </code></pre>
</script>
  <script type="text/template" id="put-forms-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

form = {
    'questions': {
        '1': {
            'type': 'control_head',
            'text': 'Form Title',
            'order': '1',
            'name': 'Header',
            'headerType': 'Large',
        },
        '2': {
            'type': 'control_textbox',
            'text': 'Text Box Title',
            'order': '2',
            'name': 'TextBox',
            'validation': 'None',
            'required': 'No',
            'readonly': 'No',
            'size': '20',
            'labelAlign': 'Auto',
            'hint': '',
        },
    },
    'properties': {
        'title': 'New Form',
        'height': '600',
    },
    'emails': {
        '0': {
            'type': 'notification',
            'name': 'notification',
            'from': 'default',
            'to': 'noreply@jotform.com',
            'subject': 'New Submission',
            'html': 'false',
            },
    },
}

data = json.dumps(form)

'''data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"noreply@jotform.com",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
'''

response = jotformAPI.create_forms(data)
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-python">
	<pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

response = jotformAPI.delete_form("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="system-plan-planName-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient()

response = jotformAPI.get_plan("PLAN NAME")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-reports-python">
    <pre><code class="python">
jotformAPI = JotformAPIClient("YOUR API KEY")

report = {'title': 'REPORT TITLE', 'list_type': 'REPORT TYPE', 'fields': 'ip, dt, 1'}

response = client.create_report("FORM ID", report)
    </code></pre>
</script>
  <script type="text/template" id="user-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject userInfo = client.getUser();
    </code></pre>
</script>
  <script type="text/template" id="user-usage-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject usage = client.getUsage();
    </code></pre>
</script>
  <script type="text/template" id="user-forms-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject forms = client.getForms();
    </code></pre>
</script>
  <script type="text/template" id="user-submissions-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject submissions = client.getSubmissions();
    </code></pre>
</script>
  <script type="text/template" id="user-subusers-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject subusers = client.getSubUsers();
    </code></pre>
</script>
  <script type="text/template" id="user-folders-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject folders = client.getFolders();
    </code></pre>
</script>
  <script type="text/template" id="user-reports-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject reports = client.getReports();
    </code></pre>
</script>
  <script type="text/template" id="user-register-java">
  <pre><code class="java">
JotformAPIClient client = new JotformAPIClient();

HashMap&lt;String, String&gt; userDetails = new HashMap&lt;String, String&gt;();
userDetails.put("username", "UserName");
userDetails.put("password", "Password");
userDetails.put("email", "User email");

JSONObject response = client.registerUser(userDetails);
    </code></pre>
</script>
  <script type="text/template" id="user-login-java">
  <pre><code class="java">
JotformAPIClient client = new JotformAPIClient();

HashMap&lt;String, String&gt; credentials = new HashMap&lt;String, String&gt;();
credentials.put("username", "Username");
credentials.put("password", "Password");
credentials.put("appName", "Application Name");
credentials.put("access", "Access Type");

JSONObject response = client.loginUser(credentials);
    </code></pre>
</script>
  <script type="text/template" id="user-logout-java">
  <pre><code class="java">
JotformAPIClient client = new JotformAPIClient();

JSONObject response = client.logoutUser();
    </code></pre>
</script>
  <script type="text/template" id="user-settings-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject settings = client.getSettings();
    </code></pre>
</script>
  <script type="text/template" id="post-user-settings-java">
  <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; settings = new HashMap&lt;String, String&gt;();
settings.put("email", "new@email.com");
settings.put("website", "www.newwebsite.com");

JSONObject response = client.updateSettings(settings);
    </code></pre>
</script>
  <script type="text/template" id="user-history-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject history = client.getHistory();
    </code></pre>
</script>
  <script type="text/template" id="form-id-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject form = client.getForm("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-questions-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject questions = client.getFormQuestions("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-question-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject questions = client.getFormQuestion("FORM ID", "QUESTION ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");
 
JSONObject properties = client.getFormProperties("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-key-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");
 
JSONObject property = client.getFormProperty("FORM ID", "PROPERTY KEY");
    </code></pre>
</script>
  <script type="text/template" id="form-id-submissions-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject submissions = client.getFormSubmissions("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-submissions-java">
    <pre><code class="javascript">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; submission = new HashMap&lt;String, String&gt;();
submission.put("1", "answer of Question 1");
submission.put("2_first","First Name");
submission.put("2_last", "Last Name");

JSONObject submissions = client.createFormSubmission("FORM ID", submission);
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-submissions-java">
    <pre><code class="javascript">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

// First submission
HashMap<String, String> answer1_1 = new HashMap<String, String>();
answer1_1.put("text", "answer of Question 1");

HashMap<String, String> answer1_2 = new HashMap<String, String>();
answer1_2.put("text", "answer of Question 2");

Map submission1 = new HashMap<String, String>();
submission1.put("1", answer1_1);
submission1.put("2", answer1_2);

// Second submission
HashMap<String, String> answer2_1 = new HashMap<String, String>();
answer2_1.put("text", "answer of Question 1");

HashMap<String, String> answer2_2 = new HashMap<String, String>();
answer2_2.put("text", "answer of Question 2");

Map submission2 = new HashMap<String, String>();
submission2.put("1", answer2_1);
submission2.put("2", answer2_2);

Map<String, Object> submissions=new HashMap<String, Object>();
submissions.put("1", submission1);
submissions.put("2", submission2);

JSONObject data = new JSONObject(submissions);

/*data needs to be json
[
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   },
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   }
]
*/

JSONObject response = client.createFormSubmissions("FORM ID", data);
    </code></pre>
</script>
  <script type="text/template" id="form-id-files-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject files = client.getFormFiles("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-webhooks-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject webhooks = client.getFormWebhooks("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-webhooks-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject result = client.createFormWebhook("FORM ID", "http://www.example.com/notify.php");
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-webhooks-java">
  <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject result = client.deleteFormWebhook("FORM ID", "WEBHOOK ID");
    </code></pre>
</script>
  <script type="text/template" id="submission-id-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject submission = client.getSubmission("SUBMISSION ID");
    </code></pre>
</script>
  <script type="text/template" id="report-id-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject report = client.getReport("REPORT ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-report-id-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject response = client.deleteReport("REPORT ID");
    </code></pre>
</script>
  <script type="text/template" id="folder-id-java">
	<pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject folder = client.getFolder("FOLDER ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-submission-id-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject result = client.deleteSubmission("SUBMISSION ID");
    </code></pre>
</script>
  <script type="text/template" id="post-submission-id-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; newSubmission = new HashMap&lt;String, String&gt;();
newSubmission.put("1_first","FIRST NAME");
newSubmission.put("new", "0");
newSubmission.put("flag", "0")

JSONObject result = client.editSubmission("SUBMISSION ID", newSubmission);
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-clone-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject result = client.cloneForm("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-question-id-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject result = client.deleteFormQuestion("FORM ID", "QUESTION ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-questions-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; question = new HashMap&lt;String, String&gt;();
question.put("type", "control_head");
question.put("text", "Header");
question.put("order", "1");
question.put("name", "clickTo");

JSONObject response = client.createFormQuestion("FORM ID", question);
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-questions-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; question1 = new HashMap&lt;String, String&gt;();
question1.put("type", "control_head");
question1.put("text", "Text 1");
question1.put("order", "1");
question1.put("name", "Header1");

HashMap&lt;String, String&gt; question2 = new HashMap&lt;String, String&gt;();
question2.put("type", "control_head");
question2.put("text", "Text 2");
question2.put("order", "2");
question2.put("name", "Header2");

Map questions = new HashMap();

questions.put(1,question1);
questions.put(2, question2);

Map questionObject = new HashMap();
questionObject.put("questions", questions);

JSONObject data = new JSONObject(questionObject);

/* data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Text 1",
         "order":"1",
         "name":"Header1"
      },
      {
         "type":"control_head",
         "text":"Text 2",
         "order":"2",
         "name":"Header2"
      }
   ]
}
*/

JSONObject response = client.createFormQuestions("FORM ID", data);
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-question-id-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; questionProperties = new HashMap&lt;String, String&gt;();
questionProperties.put("text", "New Text");
questionProperties.put("order", "3");
questionProperties.put("name", "New Name of Question");

JSONObject response = client.editFormQuestion("FORM ID", "QUESTION ID", questionProperties);
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-properties-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; formProperties = new HashMap&lt;String, String&gt;();
formProperties.put("thankurl", "http://www.newthankyoupage.com");
formProperties.put("activeRedirect", "thankurl");
formProperties.put("formWidth", "650");
formProperties.put("labelWidth", "150");
formProperties.put("styles", "nova");

JSONObject response = client.setFormProperties("FORM ID", formProperties);
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-properties-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; formProperties = new HashMap&lt;String, String&gt;();
formProperties.put("activeRedirect", "default");
formProperties.put("formWidth", "650");
formProperties.put("labelWidth", "100");
formProperties.put("styles", "nova");

Map properties = new HashMap();
properties.put("properties", formProperties);

JSONObject data = new JSONObject(properties);

/* data needs to be json
{
   "properties":{
      "activeRedirect":"default",
      "formWidth":"650",
      "labelWidth":"150",
      "styles":"nova"
   }
}
*/

JSONObject response = client.setMultipleFormProperties("FORM ID", data);
    </code></pre>
</script>
  <script type="text/template" id="post-user-forms-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; question1 = new HashMap&lt;String, String&gt;();
question1.put("type", "control_head");
question1.put("text", "Form Title");
question1.put("order", "1");
question1.put("name", "Header");
question1.put("headerType", "Large");

HashMap&lt;String, String&gt; question2 = new HashMap&lt;String, String&gt;();
question2.put("type", "control_textbox");
question2.put("text", "Text Box Title");
question2.put("order", "2");
question2.put("name", "TextBox");
question2.put("validation", "None");
question2.put("requied", "No");
question2.put("readonly", "No");
question2.put("size", "20");
question2.put("labelAlign", "Auto");
question2.put("hint", "");

Map questions = new HashMap();
questions.put(1, question1);
questions.put(2, question2);

HashMap&lt;String, String&gt; formProperties = new HashMap&lt;String, String&gt;();
formProperties.put("title", "New Form");
formProperties.put("height", "600");

HashMap<String, String> email1 = new HashMap<String, String>();
email1.put("type", "notification");
email1.put("name", "notification");
email1.put("from", "default");
email1.put("to", "YOUR EMAIL ADDRESS");
email1.put("subject", "New Submission");
email1.put("html", "false");
    
Map emails = new HashMap<String, String>();
emails.put(1,  email1);

Map form = new HashMap();
form.put("questions", questions);
form.put("properties", formProperties);
form.put("emails", emails);

JSONObject response = client.createForm(form);
    </code></pre>
</script>
  <script type="text/template" id="post-forms-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; question1 = new HashMap&lt;String, String&gt;();
question1.put("type", "control_head");
question1.put("text", "Form Title");
question1.put("order", "1");
question1.put("name", "Header");
question1.put("headerType", "Large");

HashMap&lt;String, String&gt; question2 = new HashMap&lt;String, String&gt;();
question2.put("type", "control_textbox");
question2.put("text", "Text Box Title");
question2.put("order", "2");
question2.put("name", "TextBox");
question2.put("validation", "None");
question2.put("requied", "No");
question2.put("readonly", "No");
question2.put("size", "20");
question2.put("labelAlign", "Auto");
question2.put("hint", "");

Map questions = new HashMap();
questions.put(1, question1);
questions.put(2, question2);

HashMap&lt;String, String&gt; formProperties = new HashMap&lt;String, String&gt;();
formProperties.put("title", "New Form");
formProperties.put("height", "600");

HashMap<String, String> email1 = new HashMap<String, String>();
email1.put("type", "notification");
email1.put("name", "notification");
email1.put("from", "default");
email1.put("to", "YOUR EMAIL ADDRESS");
email1.put("subject", "New Submission");
email1.put("html", "false");
    
Map emails = new HashMap<String, String>();
emails.put(1,  email1);

Map form = new HashMap();
form.put("questions", questions);
form.put("properties", formProperties);
form.put("emails", emails);

JSONObject response = client.createForm(form);
    </code></pre>
</script>
  <script type="text/template" id="put-user-forms-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; question1 = new HashMap&lt;String, String&gt;();
question1.put("type", "control_head");
question1.put("text", "Form Title");
question1.put("order", "1");
question1.put("name", "Header");
question1.put("headerType", "Large");

HashMap&lt;String, String&gt; question2 = new HashMap&lt;String, String&gt;();
question2.put("type", "control_textbox");
question2.put("text", "Text Box Title");
question2.put("order", "2");
question2.put("name", "TextBox");
question2.put("validation", "None");
question2.put("requied", "No");
question2.put("readonly", "No");
question2.put("size", "20");
question2.put("labelAlign", "Auto");
question2.put("hint", "");

Map questions = new HashMap();
questions.put(1, question1);
questions.put(2, question2);

HashMap&lt;String, String&gt; formProperties = new HashMap&lt;String, String&gt;();
formProperties.put("title", "New Form");
formProperties.put("height", "600");

HashMap<String, String> email1 = new HashMap<String, String>();
email1.put("type", "notification");
email1.put("name", "notification");
email1.put("from", "default");
email1.put("to", "YOUR EMAIL ADDRESS");
email1.put("subject", "New Submission");
email1.put("html", "false");
    
Map emails = new HashMap<String, String>();
emails.put(1,  email1);

Map form = new HashMap();
form.put("questions", questions);
form.put("properties", formProperties);
form.put("emails", emails);

JSONObject data = new JSONObject(form);

/* data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"noreply@jotform.com",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
*/

JSONObject response = client.createForms(data);
    </code></pre>
</script>
  <script type="text/template" id="put-forms-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap&lt;String, String&gt; question1 = new HashMap&lt;String, String&gt;();
question1.put("type", "control_head");
question1.put("text", "Form Title");
question1.put("order", "1");
question1.put("name", "Header");
question1.put("headerType", "Large");

HashMap&lt;String, String&gt; question2 = new HashMap&lt;String, String&gt;();
question2.put("type", "control_textbox");
question2.put("text", "Text Box Title");
question2.put("order", "2");
question2.put("name", "TextBox");
question2.put("validation", "None");
question2.put("requied", "No");
question2.put("readonly", "No");
question2.put("size", "20");
question2.put("labelAlign", "Auto");
question2.put("hint", "");

Map questions = new HashMap();
questions.put(1, question1);
questions.put(2, question2);

HashMap&lt;String, String&gt; formProperties = new HashMap&lt;String, String&gt;();
formProperties.put("title", "New Form");
formProperties.put("height", "600");

HashMap<String, String> email1 = new HashMap<String, String>();
email1.put("type", "notification");
email1.put("name", "notification");
email1.put("from", "default");
email1.put("to", "YOUR EMAIL ADDRESS");
email1.put("subject", "New Submission");
email1.put("html", "false");
    
Map emails = new HashMap<String, String>();
emails.put(1,  email1);

Map form = new HashMap();
form.put("questions", questions);
form.put("properties", formProperties);
form.put("emails", emails);

JSONObject data = new JSONObject(form);

/* data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"noreply@jotform.com",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
*/

JSONObject response = client.createForms(data);
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject response = client.deleteForm("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-reports-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

JSONObject response = client.getFormReports("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="system-plan-planName-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient();

JSONObject response = client.getPlan("PLAN NAME");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-reports-java">
    <pre><code class="java">
JotformAPIClient client = new JotformAPIClient("YOUR API KEY");

HashMap<String, String> report = new HashMap<String, String>();
report.put("title", "REPORT TITLE");
report.put("list_type", "REPORT TYPE");
report.put("fields", "ip, dt, 1");

JSONObject response = client.createReport("FORM ID", report);
    </code></pre>
</script>
  <script type="text/template" id="user-javascript">
        <pre><code class="javascript">
JF.getUser(function(response){
    /**
     successful response including user information
     .
     */
    document.write(response.username);
});
        </code></pre>
    </script>
  <script type="text/template" id="user-usage-javascript">
        <pre><code class="javascript">
JF.getUsage(function(response){
    /**
     successful response including user usage data
     .
     */
    document.write(response.submissions);
});
        </code></pre>
    </script>
  <script type="text/template" id="user-submissions-javascript">
        <pre><code class="javascript">
JF.getSubmissions(function(response){
    /**
     successful response including user submissions data
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].form_id);
    }    
});
        </code></pre>
    </script>
  <script type="text/template" id="user-subusers-javascript">
        <pre><code class="javascript">
JF.getSubUsers(function(response){
    /**
     successful response including user subusers data
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].username);
    }     
})
        </code></pre>
    </script>
  <script type="text/template" id="user-folders-javascript">
        <pre><code class="javascript">
JF.getFolders(function(response){
    /**
     successful response including user folders array
     .
     */
    document.write(response.name);    
});
        </code></pre>
    </script>
  <script type="text/template" id="user-reports-javascript">
        <pre><code class="javascript">
JF.getReports(function(response){
    /**
     successful response including user reports data
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].title);
    }    
});
        </code></pre>
    </script>
  <script type="text/template" id="user-register-javascript">
        <pre><code class="javascript">
var user = {
    username: 'Username',
    password: 'Password',
    email: 'email@example.com'
};

JF.register(user, function(response){
    /**
     successful response including the created user
     .
     */
    document.write(response.username);
});
        </code></pre>
    </script>
  <script type="text/template" id="user-login-javascript">
        <pre><code class="javascript">
var user = {
    username: 'Username',
    password: 'Password',
    appName: 'Application Name',
    access: 'Access type'
};

JF.userLogin(user, function(response){
    /**
     successful response including the logged in user
     .
     */
    document.write(response.username);
});
        </code></pre>
    </script>
  <script type="text/template" id="user-logout-javascript">
        <pre><code class="javascript">
JF.logout();
        </code></pre>
    </script>
  <script type="text/template" id="user-settings-javascript">
        <pre><code class="javascript">
JF.getSettings(function(response){
    /**
     successful response including user settings data
     .
     */
    document.write(response.time_zone);
});
        </code></pre>
    </script>
  <script type="text/template" id="post-user-settings-javascript">
        <pre><code class="javascript">
/**
 * Create settings object array
 */
var settings = {
    time_zone: "UTC+08:00",
    website: "http://www.example.com"
};

JF.updateSettings(settings, function(response){
    /**
     successful response including user updated settings data
     */
    document.write(response.website);
});
        </code></pre>
    </script>
  <script type="text/template" id="user-history-javascript">
        <pre><code class="javascript">
JF.getHistory(function(response){
    /**
     successful response including user history records
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].type);
    }      
});
        </code></pre>
    </script>
  <script type="text/template" id="user-forms-javascript">
        <pre><code class="javascript">
JF.getForms(function(response){
    /**
     successful response including user forms array
     *
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].title);
    }
});
        </code></pre>
    </script>
  <script type="text/template" id="post-user-forms-javascript">
        <pre><code class="javascript">
JF.createForm(formObject,function(response){
    /**
     successful response including created form object
     *
     */
     document.write(response.title);
});
        </code></pre>
    </script>
  <script type="text/template" id="post-forms-javascript">
        <pre><code class="javascript">
JF.createForm(formObject,function(response){
    /**
     successful response including created form object
     *
     */
     document.write(response.title);
});
        </code></pre>
    </script>
  <script type="text/template" id="put-user-forms-javascript">
        <pre><code class="javascript">
JF.createForms(formJSON,function(response){
    /**
     successful response including created form object
     *
     */
     document.write(response.title);
});
        </code></pre>
    </script>
  <script type="text/template" id="put-forms-javascript">
        <pre><code class="javascript">
JF.createForms(formJSON,function(response){
    /**
     successful response including created form object
     *
     */
     document.write(response.title);
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-javascript">
        <pre><code class="javascript">
JF.getForm(formID, function(response){
    /**
     successful response including form data with given id
     .
     */
     document.write(response.title);  
});
        </code></pre>
    </script>
  <script type="text/template" id="delete-form-id-javascript">
        <pre><code class="javascript">
JF.deleteForm(formID, function(response){
    /**
     successful response including deleted form's data
     .
     */
     document.write(response.status); 
});
        </code></pre>
    </script>
  <script type="text/template" id="post-form-id-clone-javascript">
        <pre><code class="javascript">
JF.cloneForm(formID, function(response){
    /**
     successful response including data of the cloned form
     .
     */
     document.write(response.title); 
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-questions-javascript">
        <pre><code class="javascript">
JF.getFormQuestions(formID, function(response){
    /**
     successful response including questions of form with given id
     .
     */
    for(var i in response){
        document.write(response[i].qid);
    }      
});
        </code></pre>
    </script>
  <script type="text/template" id="post-form-id-questions-javascript">
        <pre><code class="javascript">
questionObject = { "type": "control_head", "text" : "Header", "order" : "1"};

JF.createFormQuestion(formID, questionObject, function(response){
    /**
     successful response including question with given id of form with given id
     .
     */
    document.write(response.qid);
});
        </code></pre>
    </script>
  <script type="text/template" id="put-form-id-questions-javascript">
        <pre><code class="javascript">

questionsArray = new Array({
    "type": "control_textbox", 
    "name": "textbox", 
    "text": "Label 1", 
    "order":"3"
},{
    "type": "control_textarea",
    "name": "textarea",
    "text": "Label 2",
    "order":"4"
});

jsonData = JSON.stringify({ "questions" : questionsArray});

JF.createFormQuestions(formID, jsonData, function(response){
    /**
     successful response including new questions
     */
     for(var i in response){
        document.write(response[i].qid);
    }
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-question-id-javascript">
        <pre><code class="javascript">
JF.getFormQuestion(formID, questionID, function(response){
    /**
     successful response including question with given id of form with given id
     .
     */
    document.write(response.qid);
});
        </code></pre>
    </script>
  <script type="text/template" id="post-form-id-question-id-javascript">
        <pre><code class="javascript">
question = { "text" : "New Text", "order" : "4", "name" : "New name"};

JF.editFormQuestion(formID, questionID, question, function(response){
    /**
     successful response including question with given id of form with given id
     .
     */
    document.write(response.qid);
});
        </code></pre>
    </script>
  <script type="text/template" id="delete-form-id-question-id-javascript">
        <pre><code class="javascript">
JF.deleteFormQuestion(formID, questionID, function(response){
    /**
     successful response including response message
     .
     */
    document.write(response);
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-properties-javascript">
        <pre><code class="javascript">
JF.getFormProperties(formID, function(response){
    /**
     successful response including form properties
     .
     */
    document.write(response.alignment);
});
        </code></pre>
    </script>
  <script type="text/template" id="post-form-id-properties-javascript">
        <pre><code class="javascript">
properties = new Object();
properties['alignment'] = 'Left';
properties['formWidth'] = '500';

JF.setFormProperties(formID, properties, function(response){
    /**
     successful response including new form properties
     */
    document.write(response.alignment);
});
        </code></pre>
    </script>
  <script type="text/template" id="put-form-id-properties-javascript">
        <pre><code class="javascript">
propertiesArray = new Array({
    "activeRedirect": "default", 
    "alignment": "Left", 
    "formWidth": "600", 
    "styles":"nova"
});

jsonData = JSON.stringify({ "properties" : propertiesArray});

JF.setMultipleFormProperties(formID, jsonData, function(response){
    /**
     successful response including form properties
     */
    document.write(response.alignment);
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-properties-key-javascript">
        <pre><code class="javascript">
var key = 'labelWidth';
JF.getFormProperty(formID, key, function(response){
    /**
     successful response including given form property
     .
     */
    document.write(response[key]);
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-reports-javascript">
        <pre><code class="javascript">
JF.getFormReports(formID, function(response){
    /**
     successful response including form reports.
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].id);
    } 
});
        </code></pre>
    </script>
  <script type="text/template" id="post-form-id-reports-javascript">
        <pre><code class="javascript">
var report = {
    title: 'Report Title',
    list_type: 'excel', //grid, excel, table, csv, rss
    fields: 'ip,dt', //ip - IP Address, submission date, question ID's
};

JF.createReport(formID, report, function(response){
    /**
     successful response including the created report object
     */
    document.write(response.title);
});
        </code></pre>
    </script>
  <script type="text/template" id="form-id-files-javascript">
        <pre><code class="javascript">
JF.getFormFiles(formID, function(response){
    /**
     successful response including files of form with given id
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].name);
    } 
})
        </code></pre>
    </script>
  <script type="text/template" id="form-id-webhooks-javascript">
        <pre><code class="javascript">
JF.getFormWebhooks(formID, function(response){
    /**
     successful response including user subusers data
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i]);
    }
})
        </code></pre>
    </script>
  <script type="text/template" id="post-form-id-webhooks-javascript">
        <pre><code class="javascript">
JF.createFormWebhook(formID, webhookUrl, function(response){
    /**
     successful response including form's webhook Urls
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i]);
    }
})
        </code></pre>
    </script>
  <script type="text/template" id="delete-form-id-webhooks-javascript">
        <pre><code class="javascript">
webhookID = '0'; //The very first one

JF.deleteFormWebhook(formID, webhookID, function(response){
    /**
     successful response including form's webhook Urls
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i]);
    }
})
        </code></pre>
    </script>
  <script type="text/template" id="form-id-submissions-javascript">
        <pre><code class="javascript">
JF.getFormSubmissions(formID, function(response){
    /**
     successful response including submissions of form with given id
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].answers);
    } 
});
        </code></pre>
    </script>
  <script type="text/template" id="post-form-id-submissions-javascript">
        <pre><code class="javascript">
submission = new Object();
submission['1'] = 'Answer 1';
submission['2'] = 'Answer 2';

JF.createFormSubmission(formID, submission, function(response){
    /**
     successful response including new submission
     .
     */
    document.write(response.URL);
});
        </code></pre>
    </script>
  <script type="text/template" id="put-form-id-submissions-javascript">
        <pre><code class="javascript">
submissionsArray = new Array({
    "1": {"text": "Answer 11"}, 
    "2": {"text": "Answer 12"}
},{
    "1": {"text": "Answer 21"}, 
    "2": {"text": "Answer 22"}
});

jsonData = JSON.stringify(submissionsArray);

JF.createFormSubmissions(formID, jsonData, function(response){
    /**
     successful response including new submissions
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].URL);
    }
});
        </code></pre>
    </script>
  <script type="text/template" id="submission-id-javascript">
        <pre><code class="javascript">
JF.getSubmission(sid, function(response){
    /**
     successful response including submission data with given id
     .
     */
     document.write(response.id);
})
        </code></pre>
    </script>
  <script type="text/template" id="post-submission-id-javascript">
        <pre><code class="javascript">
submission = new Object();
submission['1'] = 'New answer';
submission['new'] = '1'; //Mark as new
submission['flag'] = '1'; //Mark as flagged

JF.editSubmission(sid, submission, function(response){
    /**
     successful response including changed submission data
     .
     */
     document.write(response.submissionID);
})
        </code></pre>
    </script>
  <script type="text/template" id="delete-submission-id-javascript">
        <pre><code class="javascript">
JF.deleteSubmission(sid, function(response){
    /**
     successful response including a text message
     .
     */
     document.write(response);
})
        </code></pre>
    </script>
  <script type="text/template" id="report-id-javascript">
        <pre><code class="javascript">
JF.getReport(reportID, function(response){
    /**
     successful response including report data with given id
     .
     */
    for(var i=0; i&ltresponse.length; i++){
        document.write(response[i].title);
    }
});
        </code></pre>
    </script>
  <script type="text/template" id="folder-id-javascript">
        <pre><code class="javascript">
JF.getFolder(folderID, function(response){
    /**
     successful response including report data with given id
     */
    document.write(response.name);
});
        </code></pre>
    </script>
  <script type="text/template" id="user-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var userInfo = jotformAPIClient.getUser();
    </code></pre>
</script>
  <script type="text/template" id="user-usage-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var usage = jotformAPIClient.getUsage();
    </code></pre>
</script>
  <script type="text/template" id="user-forms-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var forms = jotformAPIClient.getForms();
    </code></pre>
</script>
  <script type="text/template" id="user-submissions-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var submissions = jotformAPIClient.getSubmissions();
    </code></pre>
</script>
  <script type="text/template" id="user-subusers-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var subusers = jotformAPIClient.getSubusers();
    </code></pre>
</script>
  <script type="text/template" id="user-folders-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var folders = jotformAPIClient.getFolders();
    </code></pre>
</script>
  <script type="text/template" id="user-reports-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var reports = jotformAPIClient.getReports();
    </code></pre>
</script>
  <script type="text/template" id="user-register-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient();

Dictionary&lt;string, string&gt; userDetails = new Dictionary&lt;string, string&gt;();
userDetails.Add("username", "UserName");
userDetails.Add("password", "Password");
userDetails.Add("email", "User email");

var response = jotformAPIClient.registerUser(userDetails);
    </code></pre>
</script>
  <script type="text/template" id="user-login-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient();

Dictionary&lt;string, string&gt; credentials = new Dictionary&lt;string, string&gt;();
credentials.Add("username", "Username");
credentials.Add("password", "Password");
credentials.Add("appName", "Application Name");
credentials.Add("access", "Access Type");

var response = jotformAPIClient.loginUser(credentials);
    </code></pre>
</script>
  <script type="text/template" id="user-logout-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient();

var response = jotformAPIClient.logoutUser();
    </code></pre>
</script>
  <script type="text/template" id="user-settings-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var settings = jotformAPIClient.getSettings();
    </code></pre>
</script>
  <script type="text/template" id="post-user-settings-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; settings = new Dictionary&lt;string, string&gt;();
settings.Add("email", "new@email.com");
settings.Add("website", "www.newwebsite.com");

var response = jotformAPIClient.updateSettings(settings);
    </code></pre>
</script>
  <script type="text/template" id="user-history-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var history = jotformAPIClient.getHistory();
    </code></pre>
</script>
  <script type="text/template" id="form-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var form = jotformAPIClient.getForm("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-questions-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var questions = jotformAPIClient.getFormQuestions("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-question-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var question = jotformAPIClient.getFormQuestion("FORM ID", "QUESTION ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var properties = jotformAPIClient.getFormProperties("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-key-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var property = jotformAPIClient.getFormProperty("FORM ID", "PROPERTY KEY");
    </code></pre>
</script>
  <script type="text/template" id="form-id-submissions-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var submissions = jotformAPIClient.getFormSubmissons("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-submissions-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; submission = new Dictionary&lt;string, string&gt;();
submission.Add("1", "answer of Question 1");
submission.Add("2_first", "First Name");
submission.Add("2_last", "Last Name");

var result = jotformAPIClient.createFormSubmission("FORM ID", submission);
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-submissions-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

// First submission
Dictionary&lt;string, string&gt; answer1_1 = new Dictionary&lt;string, string&gt;();
answer1_1.Add("text", "answer of Question 1");

Dictionary&lt;string, string&gt; answer1_2 = new Dictionary&lt;string, string&gt;();
answer1_2.Add("text", "answer of Question 2");

Dictionary&lt;string, string&gt;[] submission1 = new Dictionary&lt;string, string&gt;[2];
submission1[0] = answer1_1;
submission1[1] = answer1_2;

// Second submission
Dictionary&lt;string, string&gt; answer2_1 = new Dictionary&lt;string, string&gt;();
answer2_1.Add("text", "answer of Question 1");

Dictionary&lt;string, string&gt; answer2_2 = new Dictionary&lt;string, string&gt;();
answer2_2.Add("text", "answer of Question 2");

Dictionary&lt;string, string&gt;[] submission2 = new Dictionary&lt;string, string&gt;[2];
submission2[0] = answer2_1;
submission2[1] = answer2_2;

Dictionary&lt;string, string&gt;[][] submissions = new Dictionary&lt;string, string&gt;[][] {submission1, submission2};

string data = JsonConvert.SerializeObject(submissions);

var response = client.createFormSubmissions("FORM ID", data);
    </code></pre>
</script>
  <script type="text/template" id="form-id-files-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var files = jotformAPIClient.getFormFiles();
    </code></pre>
</script>
  <script type="text/template" id="form-id-webhooks-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var webhooks = jotformAPIClient.getFormWebhooks("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-webhooks-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var result = jotformAPIClient.createFormWebhook("FORM ID", "http://www.example.com/notify.php");

    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-webhooks-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var response = jotformAPIClient.deleteFormWebhook("FORM ID", "WEBHOOK ID");
    </code></pre>
</script>
  <script type="text/template" id="submission-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var submission = jotformAPIClient.getSubmission("SUBMISSION ID");
    </code></pre>
</script>
  <script type="text/template" id="report-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var report = jotformAPIClient.getReport("REPORT ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-report-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var response = jotformAPIClient.deleteReport("REPORT ID");
    </code></pre>
</script>
  <script type="text/template" id="folder-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var folder = jotformAPIClient.getFolder("FOLDER ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-submission-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var result = jotformAPIClient.deleteSubmission("SUBMISSION ID");
    </code></pre>
</script>
  <script type="text/template" id="post-submission-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; newSubmission = new Dictionary&lt;string, string&gt;();
newSubmission.Add("1_first", "FIRST NAME");
newSubmission.Add("new", "0");
newSubmission.Add("flag", "0");

var result = jotformAPIClient.editSubmission("SUBMISSION ID", newSubmission);
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-clone-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var result = jotformAPIClient.cloneForm("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-question-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var result = jotformAPIClient.deleteFormQuestion("FORM ID", "QUESTION ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-questions-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; question = new Dictionary&lt;string, string&gt;();
question.Add("type", "control_head");
question.Add("text", "Header");
question.Add("order", "1");
question.Add("name", "clickTo");

var response = jotformAPIClient.createFormQuestion("FORM ID", question);
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-questions-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; question1 = new Dictionary&lt;string, string&gt;();
question1.Add("type", "control_head");
question1.Add("text", "Text 1");
question1.Add("qid", "1");
question1.Add("order", "1");
question1.Add("name", "Header1");

Dictionary&lt;string, string&gt; question2 = new Dictionary&lt;string, string&gt;();
question2.Add("type", "control_head");
question2.Add("text", "Text 2");
question2.Add("qid", "2");
question2.Add("order", "2");
question2.Add("name", "Header 2");

Dictionary&lt;string, string&gt;[] questions = new Dictionary&lt;string, string&gt;[2];
questions[0] = question1;
questions[1] = question2;

Dictionary&lt;String, Dictionary&lt;string, string&gt;[]&gt; questionObject = new Dictionary&lt;string, Dictionary&lt;string, string&gt;[]>&gt;;
questionObject.Add("questions", questions);

var response = jotformAPIClient.createFormQuestions("FORM ID", JsonConvert.SerializeObject(questionObject, Formatting.Indented));

    </code></pre>
</script>
  <script type="text/template" id="post-form-id-question-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; questionProperties = new Dictionary&lt;string, string&gt;();
questionProperties.Add("text", "New Text");
questionProperties.Add("order", "3");
questionProperties.Add("name", "New Name of Question");

var response = jotformAPIClient.editFormQuestion("FORM ID", "QUESTION ID", questionProperties);
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-properties-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; formProperties = new Dictionary&lt;string, string&gt;();
formProperties.Add("thankurl", "http://www.newthankyoupage.com");
formProperties.Add("activeRedirect", "thankurl");
formProperties.Add("formWidth", "650");
formProperties.Add("labelWidth", "150");
formProperties.Add("styles", "nova");

var response = jotformAPIClient.setFormProperties("FORM ID", formProperties);
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-properties-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; formProperties = new Dictionary&lt;string, string&gt;();
formProperties.Add("activeRedirect", "default");
formProperties.Add("formWidth", "650");
formProperties.Add("labelWidth", "150");
formProperties.Add("styles", "nova");

Dictionary&lt;String, Dictionary&lt;string, string&gt;&gt; propertiesObject = new Dictionary&lt;string, Dictionary&lt;string, string&gt;&gt;();
propertiesObject.Add("properties", formProperties);

var response = client.setMultipleFormProperties("FORM ID", JsonConvert.SerializeObject(propertiesObject, Formatting.Indented));

    </code></pre>
</script>
  <script type="text/template" id="post-user-forms-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; question1 = new Dictionary&lt;string, string&gt;();
question1.Add("type", "control_head");
question1.Add("text", "Form Title");
question1.Add("order", "1");
question1.Add("name", "Header");

Dictionary&lt;string, string&gt; question2 = new Dictionary&lt;string, string&gt;();
question2.Add("type", "control_textbox");
question2.Add("text", "Text Box Title");
question2.Add("order", "2");
question2.Add("name", "TextBox");
question2.Add("validation", "None");
question2.Add("required", "No");
question2.Add("readonly", "No");
question2.Add("size", "20");
question2.Add("labelAlign", "Auto");
question2.Add("hint", "");

Dictionary&lt;string, string&gt;[] questions = new Dictionary&lt;string, string&gt;[2];
questions[0] = question1;
questions[1] = question2;

Dictionary&lt;string, string&gt; properties = new Dictionary&lt;string, string&gt;();
properties.Add("title", "New Form");
properties.Add("height", "600");

Dictionary&lt;string, string&gt; email1 = new Dictionary&lt;string, string&gt;();
email1.Add("type", "notification");
email1.Add("name", "notification");
email1.Add("from", "default");
email1.Add("to", "noreply@jotform.com");
email1.Add("subject", "New Submission");
email1.Add("html", "false");

Dictionary&lt;string, string&gt;[] emails = new Dictionary&lt;string, string&gt;[1];
emails[0] = email1;

Dictionary&lt;string, dynamic&gt; form = new Dictionary&lt;string, dynamic&gt;();
form.Add("questions", questions);
form.Add("properties", properties);
form.Add("emails", emails);

var response = jotformAPIClient.createForm(form);
    </code></pre>
</script>
  <script type="text/template" id="post-forms-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; question1 = new Dictionary&lt;string, string&gt;();
question1.Add("type", "control_head");
question1.Add("text", "Form Title");
question1.Add("order", "1");
question1.Add("name", "Header");

Dictionary&lt;string, string&gt; question2 = new Dictionary&lt;string, string&gt;();
question2.Add("type", "control_textbox");
question2.Add("text", "Text Box Title");
question2.Add("order", "2");
question2.Add("name", "TextBox");
question2.Add("validation", "None");
question2.Add("required", "No");
question2.Add("readonly", "No");
question2.Add("size", "20");
question2.Add("labelAlign", "Auto");
question2.Add("hint", "");

Dictionary&lt;string, string&gt;[] questions = new Dictionary&lt;string, string&gt;[2];
questions[0] = question1;
questions[1] = question2;

Dictionary&lt;string, string&gt; properties = new Dictionary&lt;string, string&gt;();
properties.Add("title", "New Form");
properties.Add("height", "600");

Dictionary&lt;string, string&gt; email1 = new Dictionary&lt;string, string&gt;();
email1.Add("type", "notification");
email1.Add("name", "notification");
email1.Add("from", "default");
email1.Add("to", "noreply@jotform.com");
email1.Add("subject", "New Submission");
email1.Add("html", "false");

Dictionary&lt;string, string&gt;[] emails = new Dictionary&lt;string, string&gt;[1];
emails[0] = email1;

Dictionary&lt;string, dynamic&gt; form = new Dictionary&lt;string, dynamic&gt;();
form.Add("questions", questions);
form.Add("properties", properties);
form.Add("emails", emails);

var response = jotformAPIClient.createForm(form);
    </code></pre>
</script>
  <script type="text/template" id="put-user-forms-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; question1 = new Dictionary&lt;string, string&gt;();
question1.Add("type", "control_head");
question1.Add("text", "Form Title");
question1.Add("order", "1");
question1.Add("name", "Header");

Dictionary&lt;string, string&gt; question2 = new Dictionary&lt;string, string&gt;();
question2.Add("type", "control_textbox");
question2.Add("text", "Text Box Title");
question2.Add("order", "2");
question2.Add("name", "TextBox");
question2.Add("validation", "None");
question2.Add("required", "No");
question2.Add("readonly", "No");
question2.Add("size", "20");
question2.Add("labelAlign", "Auto");
question2.Add("hint", "");

Dictionary&lt;string, string&gt;[] questions = new Dictionary&lt;string, string&gt;[2];
questions[0] = question1;
questions[1] = question2;

Dictionary&lt;string, string&gt; properties = new Dictionary&lt;string, string&gt;();
properties.Add("title", "New Form");
properties.Add("height", "600");

Dictionary&lt;string, string&gt; email1 = new Dictionary&lt;string, string&gt;();
email1.Add("type", "notification");
email1.Add("name", "notification");
email1.Add("from", "default");
email1.Add("to", "noreply@jotform.com");
email1.Add("subject", "New Submission");
email1.Add("html", "false");

Dictionary&lt;string, string&gt;[] emails = new Dictionary&lt;string, string&gt;[1];
emails[0] = email1;

Dictionary&lt;string, dynamic&gt; form = new Dictionary&lt;string, string&gt;dynamic();
form.Add("questions", questions);
form.Add("properties", properties);
form.Add("emails", emails);

String data = JsonConvert.SerializeObject(form);

var response = jotformAPIClient.createForms(data);
    </code></pre>
</script>
  <script type="text/template" id="put-forms-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary&lt;string, string&gt; question1 = new Dictionary&lt;string, string&gt;();
question1.Add("type", "control_head");
question1.Add("text", "Form Title");
question1.Add("order", "1");
question1.Add("name", "Header");

Dictionary&lt;string, string&gt; question2 = new Dictionary&lt;string, string&gt;();
question2.Add("type", "control_textbox");
question2.Add("text", "Text Box Title");
question2.Add("order", "2");
question2.Add("name", "TextBox");
question2.Add("validation", "None");
question2.Add("required", "No");
question2.Add("readonly", "No");
question2.Add("size", "20");
question2.Add("labelAlign", "Auto");
question2.Add("hint", "");

Dictionary&lt;string, string&gt;[] questions = new Dictionary&lt;string, string&gt;[2];
questions[0] = question1;
questions[1] = question2;

Dictionary&lt;string, string&gt; properties = new Dictionary&lt;string, string&gt;();
properties.Add("title", "New Form");
properties.Add("height", "600");

Dictionary&lt;string, string&gt; email1 = new Dictionary&lt;string, string&gt;();
email1.Add("type", "notification");
email1.Add("name", "notification");
email1.Add("from", "default");
email1.Add("to", "noreply@jotform.com");
email1.Add("subject", "New Submission");
email1.Add("html", "false");

Dictionary&lt;string, string&gt;[] emails = new Dictionary&lt;string, string&gt;[1];
emails[0] = email1;

Dictionary&lt;string, dynamic&gt; form = new Dictionary&lt;string, string&gt;dynamic();
form.Add("questions", questions);
form.Add("properties", properties);
form.Add("emails", emails);

String data = JsonConvert.SerializeObject(form);

var response = jotformAPIClient.createForms(data);
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var response = jotformAPIClient.deleteForm("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="form-id-reports-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

var response = jotformAPIClient.getFormReports("FORM ID");
    </code></pre>
</script>
  <script type="text/template" id="system-plan-planName-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient();

var response = jotformAPIClient.getPlan("PLAN NAME");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-reports-csharp">
	<pre><code class="csharp">
var jotformAPIClient = new JotForm.APIClient("YOUR API CODE");

Dictionary<string, string> report = new Dictionary<string, string>();
report.Add("title", "REPORT TITLE");
report.Add("list_type", "REPORT TYPE");
report.Add("fields", "ip, dt, 1");

var response = client.createReport("FORM ID", report);
    </code></pre>
</script>
  <script type="text/template" id="user-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
userInfo = jotform.getUser()
    </code></pre>
</script>
  <script type="text/template" id="user-usage-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
usage = jotform.getUsage()
    </code></pre>
</script>
  <script type="text/template" id="user-forms-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
forms = jotform.getForms()
    </code></pre>
</script>
  <script type="text/template" id="user-submissions-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
submissions = jotform.getSubmissions()
    </code></pre>
</script>
  <script type="text/template" id="user-subusers-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
subusers = jotform.getSubusers()
    </code></pre>
</script>
  <script type="text/template" id="user-folders-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
folders = jotform.getFolders()
    </code></pre>
</script>
  <script type="text/template" id="user-reports-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
reports = jotform.getReports()
    </code></pre>
</script>
  <script type="text/template" id="user-settings-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
settings = jotform.getSettings()
    </code></pre>
</script>
  <script type="text/template" id="user-history-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
history = jotform.getHistory()
    </code></pre>
</script>
  <script type="text/template" id="form-id-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
form = jotform.getForm()
form = jotform.getForm("#formID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-questions-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
questions = jotform.getFormQuestions("#formID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-question-id-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
question = jotform.getFormQuestion("#formID", "#questionID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-submissions-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
submissions = jotform.getFormSubmissons("#formID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-submissions-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
result = jotform.createFormSubmissions("#formID", "#questionID", "#submissionID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-files-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
files = jotform.getFormFiles()
    </code></pre>
</script>
  <script type="text/template" id="form-id-webhooks-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
webhooks = jotform.getFormWebhooks("#formID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-webhooks-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
result = jotform.createFormWebhook("#formID", "http://www.example.com/notify.php")
    </code></pre>
</script>
  <script type="text/template" id="submission-id-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
submission = jotform.getSubmission("#submissionID")
    </code></pre>
</script>
  <script type="text/template" id="report-id-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
report = jotform.getReport("#reportID")
    </code></pre>
</script>
  <script type="text/template" id="folder-id-ruby">
	<pre><code class="ruby">
jotform = JotForm.new("APIKey")
folder = jotform.getFolder("#folderID")
    </code></pre>
</script>
  <script type="text/template" id="user-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val userInfo = client.getUser()
    </code></pre>
</script>
  <script type="text/template" id="user-usage-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val usage = client.getUsage()
    </code></pre>
</script>
  <script type="text/template" id="user-forms-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val forms = client.getForms()
    </code></pre>
</script>
  <script type="text/template" id="user-submissions-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val submissions = client.getSubmissions()
    </code></pre>
</script>
  <script type="text/template" id="user-subusers-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val subusers = client.getSubusers()
    </code></pre>
</script>
  <script type="text/template" id="user-folders-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val folders = client.getFolders()
    </code></pre>
</script>
  <script type="text/template" id="user-reports-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val reports = client.getReports()
    </code></pre>
</script>
  <script type="text/template" id="user-register-scala">
	<pre><code class="scala">
val client = new JotForm()

val userDetails = Map("username" -> "UserName", "password" -> "Password", "email" -> "User email")

val response = client.registerUser(userDetails)
    </code></pre>
</script>
  <script type="text/template" id="user-login-scala">
	<pre><code class="scala">
val client = new JotForm()

val credentials = Map("username" -> "Username", "password" -> "Password" ,"appName" -> "Application Name", "access" -> "Access Type")

val response = client.loginUser(credentials)
    </code></pre>
</script>
  <script type="text/template" id="user-logout-scala">
  <pre><code class="scala">
val client = new JotForm()

val response = client.logoutUser()
    </code></pre>
</script>
  <script type="text/template" id="user-settings-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val settings = client.getSettings()
    </code></pre>
</script>
  <script type="text/template" id="post-user-settings-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val settings = Map("email" -> "new@email.com", "website" -> "http://www.newwebsite.com")

val response = client.updateSettings(settings)
    </code></pre>
</script>
  <script type="text/template" id="user-history-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val history = client.getHistory()
    </code></pre>
</script>
  <script type="text/template" id="form-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val form = client.getForm("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-questions-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val questions = client.getFormQuestions("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-question-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val question = client.getFormQuestion("FORM ID", "QUESTION ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val properties = client.getFormProperties("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-properties-key-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

client property = client.getFormProperty("FORM ID", "PROPERTY KEY")
    </code></pre>
</script>
  <script type="text/template" id="form-id-submissions-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val submissions = client.getFormSubmissons("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-submissions-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val submission = Map("1" -> "answer of Question 1", "2_first" -> "First Name", "2_last" -> "Last Name")

val result = client.createFormSubmission("FORM ID", submission)
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-submissions-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

// First submission
val answer1_1: HashMap[String, String]  = new HashMap[String, String]()
answer1_1.put("text", "answer of Question 1")

val answer1_2: HashMap[String, String] = new HashMap[String, String]()
answer1_2.put("text", "answer of Question 2")

val submission1: HashMap[String, Object] = new HashMap[String, Object]()
submission1.put("1", answer1_1)
submission1.put("2", answer1_2)

// Second submission
val answer2_1: HashMap[String, String] = new HashMap[String, String]()
answer2_1.put("text", "answer of Question 1")

val answer2_2: HashMap[String, String] = new HashMap[String, String]()
answer2_2.put("text", "answer of Question 2")

val submission2: HashMap[String, Object] = new HashMap[String, Object]()
submission2.put("1", answer2_1)
submission2.put("2", answer2_2)

val submissions: Map[String, Object] = new HashMap[String, Object]()
submissions.put("1", submission1)
submissions.put("2", submission2)

val data: JSONObject = new JSONObject(submissions)

/*data needs to be json
[
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   },
   {
      "1":{
         "text":"answer of Question 1"
      },
      "2":{
         "text":"answer of Question 2"
      }
   }
]
*/

var response = client.createFormSubmissions("FORM ID", data)
    </code></pre>
</script>
  <script type="text/template" id="form-id-files-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val files = client.getFormFiles()
    </code></pre>
</script>
  <script type="text/template" id="form-id-webhooks-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val webhooks = client.getFormWebhooks("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-webhooks-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val result = client.createFormWebhook("FORM ID", "http://www.example.com/notify.php")

    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-webhooks-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val response = client.deleteFormWebhook("FORM ID", "WEBHOOK ID")
    </code></pre>
</script>
  <script type="text/template" id="submission-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val submission = client.getSubmission("SUBMISSION ID")
    </code></pre>
</script>
  <script type="text/template" id="report-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val report = client.getReport("REPORT ID");
    </code></pre>
</script>
  <script type="text/template" id="delete-report-id-scala">
  <pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val response = client.deleteReport("REPORT ID")
    </code></pre>
</script>
  <script type="text/template" id="folder-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val folder = client.getFolder("FOLDER ID")
    </code></pre>
</script>
  <script type="text/template" id="delete-submission-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val result = client.deleteSubmission("SUBMISSION ID")
    </code></pre>
</script>
  <script type="text/template" id="post-submission-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val submission = Map("1_first" -> "FIRST NAME", "new" -> "0", "flag" -> "*")

val result = client.editSubmission("SUBMISSION ID", newSubmission)
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-clone-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val result = client.cloneForm("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-question-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val result = client.deleteFormQuestion("FORM ID", "QUESTION ID");
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-questions-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val question = Map("type" -> "control_head", "text" -> "Header", "order" -> "1", "name" -> "clickTo")

val response = client.createFormQuestion("FORM ID", question)
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-questions-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val question1: 	HashMap[String, String]  = new HashMap[String, String]()
question1.put("type", "control_head")
question1.put("text", "Text 1")
question1.put("qid", "1")
question1.put("order", "1")
question1.put("name", "Header1")

val question2: HashMap[String, String] = new HashMap[String, String]()
question2.put("type", "control_head")
question2.put("text", "Text 2")
question2.put("qid", "2")
question2.put("order", "2")
question2.put("name", "Header2")

val questions: HashMap[String, Object] = new HashMap[String, Object]()

questions.put("1",question1)
questions.put("2", question2)

val questionObject: HashMap[String, Object] = new HashMap[String, Object]()
questionObject.put("questions", questions)

val data: JSONObject = new JSONObject(questionObject)

/* data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Text 1",
         "order":"1",
         "name":"Header1"
      },
      {
         "type":"control_head",
         "text":"Text 2",
         "order":"2",
         "name":"Header2"
      }
   ]
}
*/

val response = client.createFormQuestions("FORM ID", data);

    </code></pre>
</script>
  <script type="text/template" id="post-form-id-question-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val questionProperties = Map("text" -> "New Text", "order" -> "3", "name" -> "New Name of Question")

val response = client.editFormQuestion("FORM ID", "QUESTION ID", questionProperties)
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-properties-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val formProperties = Map("thankurl" -> "http://www.newthankyoupage.com", "activeRedirect" -> "default", "formWidth" -> "650", "labelWidth" -> "150", "styles" -> "nova")

val response = client.setFormProperties("FORM ID", formProperties)
    </code></pre>
</script>
  <script type="text/template" id="put-form-id-properties-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val formProperties: HashMap[String, String] = new HashMap[String, String]()
formProperties.put("activeRedirect", "default")
formProperties.put("formWidth", "650")
formProperties.put("labelWidth", "100")
formProperties.put("styles", "nova")

val properties: HashMap[String, Object] = new HashMap[String, Object]()
properties.put("properties", formProperties)

val data: JSONObject = new JSONObject(properties)

/* data needs to be json
{
   "properties":{
      "activeRedirect":"default",
      "formWidth":"650",
      "labelWidth":"150",
      "styles":"nova"
   }
}
*/

val response = client.setMultipleFormProperties("FORM ID", data)

    </code></pre>
</script>
  <script type="text/template" id="post-user-forms-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val question1: Map[String, String] =  Map("type" -> "control_head", "text" -> "Form Title", "qid" -> "1", "order" -> "1", "name" -> "Header", "headerType" -> "Large")

val question2: Map[String, String] = Map("type" -> "control_textbox", "text" -> "Text Box Title", "qid" -> "2", "order" -> "2", "name" -> "TextBox", "validation" -> "None", "requied" -> "No", "readonly" -> "No", "size" -> "20", "labelAlign" -> "Auto", "hint" -> "")

val questions: Map[String, Any] = Map("1" -> question1, "2" -> question2)

val formProperties: Map[String, String] =Map("title" -> "New Form", "height" -> "600")

val email1: Map[String, String] = Map("type" -> "notification", "name" -> "notification", "from" -> "default", "from" -> "default", "to" -> "YOUR EMAIL ADDRESS", "subject" -> "New Submission", "html" -> "false")

val emails: Map[String, Any] = Map("1" -> email1)

val form: Map[String, Any] = Map("questions" -> questions, "properties" -> formProperties, "emails" -> emails)

val response: JSONObject = client.createForm(form)

val response = client.createForm(form)
    </code></pre>
</script>
  <script type="text/template" id="post-forms-scala">
  <pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val question1: Map[String, String] =  Map("type" -> "control_head", "text" -> "Form Title", "qid" -> "1", "order" -> "1", "name" -> "Header", "headerType" -> "Large")

val question2: Map[String, String] = Map("type" -> "control_textbox", "text" -> "Text Box Title", "qid" -> "2", "order" -> "2", "name" -> "TextBox", "validation" -> "None", "requied" -> "No", "readonly" -> "No", "size" -> "20", "labelAlign" -> "Auto", "hint" -> "")

val questions: Map[String, Any] = Map("1" -> question1, "2" -> question2)

val formProperties: Map[String, String] =Map("title" -> "New Form", "height" -> "600")

val email1: Map[String, String] = Map("type" -> "notification", "name" -> "notification", "from" -> "default", "from" -> "default", "to" -> "YOUR EMAIL ADDRESS", "subject" -> "New Submission", "html" -> "false")

val emails: Map[String, Any] = Map("1" -> email1)

val form: Map[String, Any] = Map("questions" -> questions, "properties" -> formProperties, "emails" -> emails)

val response: JSONObject = client.createForm(form)

val response = client.createForm(form)
    </code></pre>
</script>
  <script type="text/template" id="put-user-forms-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val question1: HashMap[String, String] = new HashMap[String, String]()
question1.put("type", "control_head")
question1.put("text", "Form Title")
question1.put("qid", "1")
question1.put("order", "1")
question1.put("name", "Header")
question1.put("headerType", "Large")

val question2: HashMap[String, String] = new HashMap[String, String]()
question2.put("type", "control_textbox")
question2.put("text", "Text Box Title")
question2.put("qid", "2")
question2.put("order", "2")
question2.put("name", "TextBox")
question2.put("validation", "None")
question2.put("requied", "No")
question2.put("readonly", "No")
question2.put("size", "20")
question2.put("labelAlign", "Auto")
question2.put("hint", "")

val questions: HashMap[String, Object] = new HashMap[String, Object]()
questions.put("1", question1)
questions.put("2", question2)

val formProperties: HashMap[String, String] = new HashMap[String, String]()
formProperties.put("title", "New Form")
formProperties.put("height", "600")

val email1: HashMap[String, String] = new HashMap[String, String]()
email1.put("type", "notification")
email1.put("name", "notification")
email1.put("from", "default")
email1.put("to", "YOUR EMAIL ADDRESS")
email1.put("subject", "New Submission")
email1.put("html", "false")

val emails: HashMap[String, Object] = new HashMap[String, Object]()
emails.put("1",  email1)

val form: HashMap[String, Object] = new HashMap[String, Object]()
form.put("questions", questions)
form.put("properties", formProperties)
form.put("emails", emails)

val data: JSONObject = new JSONObject(properties)

/* data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"noreply@jotform.com",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
*/

val response: JSONObject = client.createForms(data)
    </code></pre>
</script>
  <script type="text/template" id="put-forms-scala">
  <pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val question1: HashMap[String, String] = new HashMap[String, String]()
question1.put("type", "control_head")
question1.put("text", "Form Title")
question1.put("qid", "1")
question1.put("order", "1")
question1.put("name", "Header")
question1.put("headerType", "Large")

val question2: HashMap[String, String] = new HashMap[String, String]()
question2.put("type", "control_textbox")
question2.put("text", "Text Box Title")
question2.put("qid", "2")
question2.put("order", "2")
question2.put("name", "TextBox")
question2.put("validation", "None")
question2.put("requied", "No")
question2.put("readonly", "No")
question2.put("size", "20")
question2.put("labelAlign", "Auto")
question2.put("hint", "")

val questions: HashMap[String, Object] = new HashMap[String, Object]()
questions.put("1", question1)
questions.put("2", question2)

val formProperties: HashMap[String, String] = new HashMap[String, String]()
formProperties.put("title", "New Form")
formProperties.put("height", "600")

val email1: HashMap[String, String] = new HashMap[String, String]()
email1.put("type", "notification")
email1.put("name", "notification")
email1.put("from", "default")
email1.put("to", "YOUR EMAIL ADDRESS")
email1.put("subject", "New Submission")
email1.put("html", "false")

val emails: HashMap[String, Object] = new HashMap[String, Object]()
emails.put("1",  email1)

val form: HashMap[String, Object] = new HashMap[String, Object]()
form.put("questions", questions)
form.put("properties", formProperties)
form.put("emails", emails)

val data: JSONObject = new JSONObject(properties)

/* data needs to be json
{
   "questions":[
      {
         "type":"control_head",
         "text":"Form Title",
         "order":"1",
         "name":"Header"
      },
      {
         "type":"control_textbox",
         "text":"Text Box Title",
         "order":"2",
         "name":"TextBox",
         "validation":"None",
         "required":"No",
         "readonly":"No",
         "size":"20",
         "labelAlign":"Auto",
         "hint":""
      }
   ],
   "properties":{
      "title":"New Form",
      "height":"600"
   },
   "emails":[
      {
         "type":"notification",
         "name":"notification",
         "from":"default",
         "to":"noreply@jotform.com",
         "subject":"New Submission",
         "html":"false"
      }
   ]
}
*/

val response: JSONObject = client.createForms(data)
    </code></pre>
</script>
  <script type="text/template" id="delete-form-id-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val response = client.deleteForm("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="form-id-reports-scala">
	<pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val response = client.getFormReports("FORM ID")
    </code></pre>
</script>
  <script type="text/template" id="system-plan-planName-scala">
  <pre><code class="scala">
val client = new JotForm()

val response = client.getPlan("PLAN NAME")
    </code></pre>
</script>
  <script type="text/template" id="post-form-id-reports-scala">
  <pre><code class="scala">
val client = new JotForm()
client.setAPIKey("YOUR API KEY")

val report = Map("title" -> "REPORT TITLE", "list_type" -> "REPORT TYPE", "fields" -> "ip, dt, 1")
val response = client.createReport("FORM ID", report)
    </code></pre>
</script>
  <script type="text/template" id="user-response-sample">
    <div class="preCont" id="user-response">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>username</b>, <b>name</b>, <b>email</b>, <b>website</b>, <b>avatarUrl</b> and <b>company</b> are basic user account details.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>time_zone</b> is in <A target="_blank" href="http://en.wikipedia.org/wiki/List_of_IANA_time_zones">IANA format</a>.</li>
            <li><b>account_type</b> list can be seen in <a target="_blank" href="http://www.jotform.com/pricing">Pricing page</a>. </li>
            <li><b>status</b> can be ACTIVE, DELETED or SUSPENDED</li>
            <li><b>created_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li><b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>You should append API Key (or authenticate with header/cookie) to the <b>usage</b> URL to get the monthly usage details for a user.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "username": "johnsmith",
        "name": "John Smith",
        "email": "john@example.com",
        "website": "http://www.jotform.com",
        "time_zone": "America/New_York",
        "account_type": "http://api.jotform.com/system/plan/PREMIUM",
        "status": "ACTIVE",
        "created_at": "2013-06-24 18:43:21",
        "updated_at": "2013-06-25 19:01:52",
        "usage": "http://api.jotform.com/user/usage",
        "industry": "Web Development",
        "securityAnswer": "",
        "company": "Interlogy, LLC",
        "securityQuestion": "",
        "webhooks": "[\"http://www.example.com/instant_submission_notification.php\"]",
        "doNotClone": "0",
        "folderLayout": "{\"rootFolderID\":{\"nodes\":{\"folderID\":{\"nodes\":[]},\"folderID\":{\"nodes\":[]},}}}",
        "language": "en-US",
        "avatarUrl": "http://gravatar.com/avatar/c3308f0feb2f350cded9222f83fb9363",
    },
    "limit-left": 4999
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-usage-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>Number of <b>submissions</b> received this month</li>
            <li>Number of secure submissions received this month</li>
            <li>Number of payment submissions received this month</li>
            <li>Total disk space used for uploaded files. In bytes.</li> 
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "submissions": "478",
        "ssl_submissions": "234",
        "payments": "35",
        "uploads": "31246868",
    },
    "limit-left": 4986
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-forms-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the Form ID</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>            
            <li>&nbsp;</li>
            <li>Form height in pixel. Form width can be called from /form/{formID}/properties/formWidth</li>
            <li><b>status</b> can be ENABLED, DISABLED or DELETED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>new</b> is the total number of unread submissions</li>
            <li><b>count</b> is the total number of submissions</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [{ 
        "id": "31504059977966",
        "username": "johnsmith",
        "title": "Contact Us",
        "height": "1550",
        "url": "http://www.jotformpro.com/form/31504059977966",
        "status": "ENABLED",
        "created_at": "2013-06-24 18:43:21",
        "updated_at": "2013-06-25 19:01:52",
        "new": "5",
        "count": "755"
    }],
    "limit-left": 4986
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-submissions-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>offset</b> is start of each result set for submission data.</li>
            <li><b>limit</b> is number of results in each result set for submission data.</li>
            <li><b>orderby</b> orders results by a submission field name.</li>
            <li><b>filter</b> filters the query results to fetch a specific submissions range.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the Submission ID</li>
            <li>&nbsp;</li>
            <li><b>ip</b> address of the submitter</li>            
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>status</b> can be ACTIVE or OVERQUOTA</li>
            <li><b>new</b> is 1 if this submission is not read</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>text</b> is the question label on the form</li>
            <li><b>type</b> is the question type such as textbox or dropdown</li>
            <li><b>answer</b> is the actual entry made by the submitter</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>Most commonly used <b>type</b>s are control_textbox, control_textarea, control_dropdown
            control_radio, control_checkbox, control_fileupload, control_fullname, control_email and control_datetime.
            <a target="_blank" href="http://www.jotform.com/help/46-Quick-Overview-of-Form-Fields">Full List</a></li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "resultSet": {
           "offset": 0,
           "limit": 100,
           "orderby": "id",
           "filter": {
               "new": "1"
           },
           "count": 100
    },
    "message": "success",
    "content": [{
        "id": "237955080346633702",
        "form_id": "31751954731962",
        "ip": "123.123.123.123",
        "created_at": "2013-06-25 03:38:00",
        "updated_at": "2013-06-27 04:58:00",
        "status": "ACTIVE",
        "new": "1",
        "answers": {
            "3": {
                "text": "Name",
                "type":"control_fullname",
                "answer": {
                    "first": "Bart",
                    "last": "Simpson"
                },
                "prettyFormat": "Bart Simpson"
            },
            "4": {
                "text": "Your Message",
                "type": "control_textarea",
                "answer":"My father is choking me. Please help."
            }
    }],
    "limit-left": 9991
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-subusers-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>owner</b> the parent account that created this sub-user.</li>
            <li><b>status</b> can be LIVE, DELETED or PENDING. If the user has not accepted the invitation sub-user is in PENDING status.</li>
            <li><b>created_at</b>: YYYY-MM-DD HH:MM:SS </li>
            <li>&nbsp;</li>
            <li><b>type</b> can be FORM, FOLDER or ALL. </li>
            <li><b>resource_id</b> is form ID or folder ID, depending on <b>type</b>.</li>
            <li><b>access_type</b> is full or readOnly. readOnly means form cannot be changed by the sub-user. Only submissions can be viewed.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [{ 
        "owner": "johnsmith", 
        "status": "LIVE", 
        "email": "john@example.com", 
        "username": "fredsmith",
        "created_at": "2013-06-25 03:38:00",
        "permissions": [{ 
            "type": "FORM",
            "resource_id": "22911182663957",
            "access_type": "full",
            "title":"Contact Us" 
        }],
        "limit-left": 9991
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-folders-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is folder ID.</li>
            <li><b>path</b> is list of folders above this folder separated with comma.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
                <li><b>parent</b> is the next folder above. If this folder is a root folder parent returns itself.</li>
            <li><b>forms</b> lists all forms under this folder.</li>
           <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>subfolders</b> lists all folders under this folder.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "id": "507eb4d2ceae3f9674000000",
        "path": "507eb4d2ceae3f9674000000",
        "owner": "johnsmith",
        "name": "Contact Forms", 
        "parent": "507eb4d2ceae3f9674000000", 
        "color": "rgb(94,94,94)", 
        "forms": { 
            "31504059977966": 
                {
                    "id":"31504059977966",
                    "username":"johnsmith",
                    "title":"Contact Us",
                    "height":"501",
                    "status":"ENABLED",
                    "created_at":"2012-12-21 12:12:09",
                    "updated_at":"2013-04-12 02:16:44",
                    "new":"11",
                    "count":"11",
                    "source":"",
                    "slug":"23554898332968",
                    "url":"http://form.jotformpro.com/form/31504059977966"
                }
        },
        "subfolders": [
            {
                "id": "907eb4d2ceae3f9674000000",
                "path": "507eb4d2ceae3f9674000000,907eb4d2ceae3f9674000000",
                "owner": "johnsmith",
                "name": "Special Contact Forms", 
                "parent": "507eb4d2ceae3f9674000000", 
                "color": "rgb(95,95,95)",                 
                "forms": [],
                "subfolders": []
            }
        ]
    }
    "limit-left": 4985
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-reports-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is report ID.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>

            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>fields</b> is a comma separated list of all fields.</li>
            <li><b>list_type</b> can be excel, csv, grid, table, calendar, rss or visual.</li>
            <li><b>status</b> can be ENABLED or DELETED</li>
            <li>&nbsp;</li>
            <li><b>isProtected</b> is true if password protected</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [{ 
        "id": "31673586029057",
        "form_id": "31673104360950",
        "title": "Report",
        "created_at":"2013-06-17 08:11:49",
        "updated_at":"2013-06-17 08:14:49",
        "fields": "ip,dt,3,4",
        "list_type": "excel",
        "status": "ENABLED",
        "url": "http://www.jotform.com/excel/31672077425051",
        "isProtected": false 
    }],
    "limit-left": 4985
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-settings-response-sample">
    <div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>username</b>, <b>name</b>, <b>email</b>, <b>website</b>, <b>avatarUrl</b> and <b>company</b> are basic user account details.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>time_zone</b> is in <A target="_blank" href="http://en.wikipedia.org/wiki/List_of_IANA_time_zones">IANA format</a>.</li>
            <li><b>account_type</b> list can be seen in <a target="_blank" href="http://www.jotform.com/pricing">Pricing page</a>. </li>
            <li><b>status</b> can be ACTIVE, DELETED or SUSPENDED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li>You should append API Key (or authenticate with header/cookie) to the <b>usage</b> URL to get the monthly usage details for a user.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "username": "johnsmith",
        "name": "John Smith",
        "email": "john@example.com",
        "website": "http://www.jotform.com",
        "time_zone": "America/New_York",
        "account_type": "http://api.jotform.com/system/plan/PREMIUM",
        "status": "ACTIVE",
        "created_at": "2013-06-24 18:43:21",
        "updated_at": "2013-06-25 19:01:52",
        "usage": "http://api.jotform.com/user/usage",
        "industry": "Education",
        "securityAnswer": "",
        "company": "Interlogy, LLC",
        "webhooks": "[\"ssl:\\/\\/gateway.sandbox.push.apple.com\"]",
        "doNotClone": "0",
        "avatarUrl": "http://www.gravatar.com/avatar/bf3438cb82e49ad6d37604bd1b23a9f7?s=50&d=identicon"
    },
    "limit-left": 4999
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-user-settings-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>username</b>, <b>name</b>, <b>email</b>, and<b>website</b> are basic user account details.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>time_zone</b> is in <A target="_blank" href="http://en.wikipedia.org/wiki/List_of_IANA_time_zones">IANA format</a>.</li>
            <li><b>account_type</b> list can be seen in <a target="_blank" href="http://www.jotform.com/pricing">Pricing page</a>. </li>
            <li><b>status</b> can be ACTIVE, DELETED or SUSPENDED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "username": "johndoe",
        "name": null,
        "email": null,
        "website": "http://www.example.com",
        "time_zone": "UTC+8:00",
        "account_type": null,
        "status": null,
        "created_at": null,
        "updated_at": null
    },
    "limit-left": 4999
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-history-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>type</b> can be userCreation, userLogin, formCreation, formUpdate, formDelete or formPurge.
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>timestamp</b> is number of seconds since Jan 1st, 1970.</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [{
        "type": "formCreation",
        "formID": "31751954731962",
        "username": "johnsmith",
        "formTitle": "Untitled Form",
        "formStatus": "ENABLED",
        "ip": "123.123.123.123",
        "timestamp": 1372145854
    }],
    "limit-left": 4999
}</code></pre>
</div>
</script>
  <script type="text/template" id="form-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the Form ID</li>
            <li><b>username</b> is user who created the Form</li>
            <li><b>title</b> is the specified title of the Form</li>
            <li>Form height in pixel. Form width can be called from /form/{formID}/properties/formWidth</li>
            <li><b>status</b> can be ENABLED, DISABLED or DELETED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>new</b> is the total number of unread submissions</li>
            <li><b>count</b> is the total number of submissions</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [{ 
        "id": "31504059977966",
        "username": "johnsmith",
        "title": "Contact Us",
        "height": "1550",
        "url": "http://www.jotformpro.com/form/31504059977966",
        "status": "ENABLED",
        "created_at": "2013-06-24 18:43:21",
        "updated_at": "2013-06-25 19:01:52",
        "new": "5",
        "count": "755"
    }],
    "limit-left": 4984
}</code></pre>
</div>
</script>
  <script type="text/template" id="form-id-questions-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>order</b> defines the location of the question in the form.</li>
            <li><b>qid</b> is question ID.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>text</b> is question label</li>
            <li>Most commonly used <b>type</b>s are control_textbox, control_textarea, control_dropdown
            control_radio, control_checkbox, control_fileupload, control_fullname, control_email and control_datetime. 
            <a target="_blank" href="http://www.jotform.com/help/46-Quick-Overview-of-Form-Fields">Full List</a></li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>sublabel</b> is used in questions with multiple fields.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "1": { 
            "hint":" ",
            "labelAlign":"Auto",
            "name":"textboxExample1",
            "order":"1",
            "qid":"1",
            "readonly":"No",
            "required":"No",
            "shrink": "No",
            "size":"20",
            "text":"Textbox Example",
            "type":"control_textbox",
            "validation":"None"
        },
        "2": { 
            "labelAlign":"Auto",
            "middle":"No",
            "name":"fullName2",
            "order":"1",
            "prefix":"No",
            "qid":"2",
            "readonly":"No",
            "required":"No",
            "shrink": "Yes",
            "sublabels":
            {
                "prefix":"Prefix",
                "first":"First Name",
                "middle":"Middle Name",
                "last":"Last Name",
                "suffix":"Suffix"
            },
            "suffix":"No",
            "text":"Full Name",
            "type":"control_fullname"
        },
        "3": {
            "cols": "40",
            "entryLimit": "None-0",
            "labelAlign": "Auto",
            "name": "yourMessage",
            "order": "3",
            "qid": "3",
            "required": "No",
            "rows": "6",
            "text": "Your Message",
            "type": "control_textarea",
            "validation": "None"
        }
    },
    "limit-left": 4982
}</code></pre>
</div>
</script>
  <script type="text/template" id="form-id-question-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>order</b> defines the location of the question in the form.</li>
            <li><b>qid</b> is question ID.</li>
            <li><b>text</b> is question label</li>
            <li>Most commonly used <b>type</b>s are control_textbox, control_textarea, control_dropdown
            control_radio, control_checkbox, control_fileupload, control_fullname, control_email and control_datetime. 
            <a target="_blank" href="http://www.jotform.com/help/46-Quick-Overview-of-Form-Fields">Full List</a></li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "headerType": "Large",
        "name": "Header",
        "order": "1",
        "qid": "1",
        "text": "Form Title",
        "type": "control_head"
    },
    "limit-left": 9994
}</code></pre>
</div>
</script>
  <script type="text/template" id="form-id-properties-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the Form ID.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>emails</b> is the notifications array of the form.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>formStrings</b> contains messages of your form for your users.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "id": "31774828724868",
        "formWidth": "690",
        "activeRedirect": "default",
        "alignment": "Left",
        "defaultEmailAssigned": "Yes",
        "expireDate": "No Limit",
        "font": "Lucida Grande",
        "fontcolor": "#555",
        "fontsize": "14",
        "hash": "6t6ch3o90",
        "hideMailEmptyFields": "disable",
        "highlightLine": "Enabled",
        "labelWidth": "150",
        "limitSubmission": "No Limit",
        "lineSpacing": "12",
        "messageOfLimitedForm": "This form is currently unavailable!",
        "optioncolor": "#000",
        "pagetitle": "Form",
        "sendpostdata": "No",
        "styles": "nova",
        "unique": "None",
        "uniqueField": "<Field Id>",
        "autoFill": {
            "bindChange": "on",
            "menu": "disable",
            "timeout": "4",
            "ttl": "86400"
        },
        "emails": {
            "body": "\nQuestion\t\t Answer\t\t \nFull Name\t\t {fullName3}\t\t \nE-mail\t\t {email5}\t\t \nAddress\t\t {address4}\t\t \n",
            "dirty": "1",
            "disabled": "",
            "from": "default|",
            "html": "",
            "name": "Notification",
            "replyTo": "none",
            "subject": "New submission: {form_title}",
            "to": "johnsmith@example.com",
            "type": "notification"
        },{
            "body": "\n\n\n&amp;nbsp;\n\n\n\n\n\n\n&amp;nbsp;\n\n&amp;nbsp;\n\n\n\n\n\n\n&amp;nbsp;\n\n\nQuestion\nAnswer\n\n\nFull Name{fullName1}\n\nE-mail{email3}\n\n\n&amp;nbsp;\n\n\n&amp;nbsp;\n&amp;nbsp;\n&amp;nbsp;\n\n\n\n\n\n\n&amp;nbsp;\n\n\n\n\&amp;nbsp;",
            "dirty": "",
            "disabled": "",
            "from": "none|noreply@jotform.com",
            "html": "1",
            "name": "Auto Responder",
            "replyTo": "johnsmith@example.com",
            "subject": "Auto Responder",
            "to": "{email3}",
            "type": "autorespond"
        },
        "formStrings": {
            "alphabetic": "This field can only contain letters",
            "alphanumeric": "This field can only contain letters and numbers.",
            "confirmClearForm": "Are you sure you want to clear the form?",
            "confirmEmail": "E-mail does not match",
            "email": "Enter a valid e-mail address",
            "gradingScoreError": "Score total should only be less than or equal to",
            "incompleteFields": "There are incomplete required fields. Please complete them.",
            "inputCarretErrorA": "Input should not be less than the minimum value:",
            "inputCarretErrorB": "Input should not be greater than the maximum value:",
            "lessThan": "Your score should be less than or equal to",
            "maxDigitsError": "The maximum digits allowed is",
            "numeric": "This field can only contain numeric values",
            "pleaseWait": "Please wait...",
            "required": "This field is required.",
            "requireEveryRow": "Every row is required.",
            "requireOne": "At least one field required.",
            "submissionLimit": "Sorry! Only one entry is allowed.  Multiple submissions are disabled for this form.",
            "uploadExtensions": "You can only upload following files:",
            "uploadFilesize": "File size cannot be bigger than:"
        }
    },
    "limit-left": 9998
}</code></pre>
</div>
</script>
  <script type="text/template" id="form-id-properties-key-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>content</b> contains your requested property key in the request </br>(Ex. formWidth)</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "formWidth": "690"
    },
    "limit-left": 9997
}</code></pre>
</div>
</script>
  <script type="text/template" id="form-id-submissions-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the Submission ID</li>
            <li>&nbsp;</li>
            <li><b>ip</b> address of the submitter</li>            
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>status</b> can be ACTIVE or OVERQUOTA</li>
            <li><b>new</b> is 1 if this submission is not read</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>text</b> is the question label on the form</li>
            <li><b>type</b> is the question type such as textbox or dropdown</li>
            <li><b>answer</b> is the actual entry made by the submitter</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>Most commonly used <b>type</b>s are control_textbox, control_textarea, control_dropdown
            control_radio, control_checkbox, control_fileupload, control_fullname, control_email and control_datetime.
            <a target="_blank" href="http://www.jotform.com/help/46-Quick-Overview-of-Form-Fields">Full List</a></li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [{
        "id": "237955080346633702",
        "form_id": "31751954731962",
        "ip": "123.123.123.123",
        "created_at": "2013-06-25 03:38:00",
        "updated_at": "2013-06-27 04:58:00",
        "status": "ACTIVE",
        "new": "1",
        "answers": {
            "3": {
                "text": "Name",
                "type":"control_fullname",
                "answer": {
                    "first": "Bart",
                    "last": "Simpson"
                },
                "prettyFormat": "Bart Simpson"
            },
            "4": {
                "text": "Your Message",
                "type": "control_textarea",
                "answer":"My father is choking me. Please help."
            }
    }],
    "limit-left": 9991
}</code></pre>
</div>
</script>
  <script type="text/template" id="form-id-files-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>name</b> is file name</li>
            <li><b>type</b> is file type</li>
            <li><b>size</b> is in bytes</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>date: </b> YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [
        {
            "name": "picture.png",
            "type": "image/png",
            "size": "9692",
            "username": "johnsmith",
            "form_id": "31754366679872",
            "submission_id": "237977932346236318",
            "date": "2013-06-25 09:58:52",
            "url": "http://www.jotform.com/uploads/johnsmith/31754366679872/237977932346236318/screen.png",
        }
    ],
    "limit-left": 9962
}</code></pre>
</div>
</script>
  <script type="text/template" id="report-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is report ID.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>fields</b> is a comma separated list of all fields.</li>
            <li><b>list_type</b> can be excel, csv, grid, table, calendar, rss or visual.</li>
            <li><b>status</b> can be ENABLED or DELETED</li>
            <li>&nbsp;</li>
            <li><b>isProtected</b> is true if password protected</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [{ 
        "id": "31673586029057",
        "form_id": "31673104360950",
        "title": "Report",
        "created_at":"2013-06-17 08:11:49",
        "updated_at":"2013-06-17 08:14:49",
        "fields": "ip,dt,3,4",
        "list_type": "excel",
        "status": "ENABLED",
        "url": "http://www.jotform.com/excel/31672077425051",
        "isProtected": false 
    }],
    "limit-left": 4985
}</code></pre>
</div>
</script>
  <script type="text/template" id="delete-report-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": true,
    "limit-left": 9998
}</code></pre>
</div>
</script>
  <script type="text/template" id="submission-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the Submission ID</li>
            <li>&nbsp;</li>
            <li><b>ip</b> address of the submitter</li>            
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>status</b> can be ACTIVE or OVERQUOTA</li>
            <li><b>new</b> is 1 if this submission is not read</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>text</b> is the question label on the form</li>
            <li><b>type</b> is the question type such as textbox or dropdown</li>
            <li><b>answer</b> is the actual entry made by the submitter</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>Most commonly used <b>type</b>s are control_textbox, control_textarea, control_dropdown
            control_radio, control_checkbox, control_fileupload, control_fullname, control_email and control_datetime.
            <a target="_blank" href="http://www.jotform.com/help/46-Quick-Overview-of-Form-Fields">Full List</a></li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [{
        "id": "237955080346633702",
        "form_id": "31751954731962",
        "ip": "123.123.123.123",
        "created_at": "2013-06-25 03:38:00",
        "updated_at": "2013-06-27 04:58:00",
        "status": "ACTIVE",
        "new": "1",
        "answers": {
            "3": {
                "text": "Name",
                "type":"control_fullname",
                "answer": {
                    "first": "Bart",
                    "last": "Simpson"
                },
                "prettyFormat": "Bart Simpson"
            },
            "4": {
                "text": "Your Message",
                "type": "control_textarea",
                "answer":"My father is choking me. Please help."
            }
    }],
    "limit-left": 9991
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-form-id-submissions-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the Submission ID</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
     "responseCode": 200,
     "message": "success",
     "content": {
         "submissionID": "SUBMISSION ID",
         "URL": "http://api.jotform.com/submission/SUBMISSION ID"
     },
     "limit-left": 9966

}</code></pre>
</div>
</script>
  <script type="text/template" id="put-form-id-submissions-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the Submission ID</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [
        {
            "submissionID": "SUBMISSION ID",
            "URL": "http://api.jotform.com/submission/SUBMISSION ID"
        },
        {
            "submissionID": "SUBMISSION ID",
            "URL": "http://api.jotform.com/submission/SUBMISSION ID"
        }
    ],
    "limit-left": 9973
}</code></pre>
</div>
</script>
  <script type="text/template" id="form-id-webhooks-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>content: </b>Webhook URL list of form</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode":200,
    "message":"success",
    "content":[
        "0": "http://www.example.com/instant_submission_notification.php",
        "1": "http://www.example.com/notify.php"
    ],
    "limit-left":9959
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-form-id-webhooks-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>content: </b>Webhook URL list of form</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
     "responseCode": 200,
     "message": "success",
     "content": [
        "0": "http://newly.added.webhook.tld/notification.php",
        "1": "http://www.example.com/instant_submission_notification.php"
     ],
     "limit-left": 9957
}</code></pre>
</div>
</script>
  <script type="text/template" id="delete-form-id-webhooks-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>content: </b>Remaining webhook URLs of form</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
     "responseCode": 200,
     "message": "success",
     "content": [
        "0": "http://newly.added.webhook.tld/notification.php",
        "1": "http://www.example.com/instant_submission_notification.php"
    ],
    "limit-left": 9957
}</code></pre>
</div>
</script>
  <script type="text/template" id="folder-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is folder ID.</li>
            <li><b>path</b> is list of folders above this folder separated with comma.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
                <li><b>parent</b> is the next folder above. If this folder is a root folder parent returns itself.</li>
            <li><b>forms</b> lists all forms under this folder.</li>
           <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>subfolders</b> lists all folders under this folder.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "id": "507eb4d2ceae3f9674000000",
        "path": "507eb4d2ceae3f9674000000",
        "owner": "johnsmith",
        "name": "Contact Forms", 
        "parent": "507eb4d2ceae3f9674000000", 
        "color": "rgb(94,94,94)", 
        "forms": { 
            "31504059977966": 
                {
                    "id":"31504059977966",
                    "username":"johnsmith",
                    "title":"Contact Us",
                    "height":"501",
                    "status":"ENABLED",
                    "created_at":"2012-12-21 12:12:09",
                    "updated_at":"2013-04-12 02:16:44",
                    "new":"11",
                    "count":"11",
                    "source":"",
                    "slug":"23554898332968",
                    "url":"http://form.jotformpro.com/form/31504059977966"
                }
        },
        "subfolders": [
            {
                "id": "907eb4d2ceae3f9674000000",
                "path": "507eb4d2ceae3f9674000000,907eb4d2ceae3f9674000000",
                "owner": "johnsmith",
                "name": "Special Contact Forms", 
                "parent": "507eb4d2ceae3f9674000000", 
                "color": "rgb(95,95,95)",                 
                "forms": [],
                "subfolders": []
            }
        ]
    },
    "limit-left": 9957
}</code></pre>
</div>
</script>
  <script type="text/template" id="delete-submission-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": "Submission #{submissionID} deleted successfully.",
    "limit-left": 9965
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-submission-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the Submission ID</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "submissionID": "{submissionID}",
        "URL": "http://api.jotform.com/submission/{submissionID}"
    },
    "limit-left": 9961
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-form-id-clone-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the ID of the created Form</li>
            <li><b>username</b> is user who created the Form</li>
            <li><b>title</b> is the specified title of the Form</li>
            <li><b>height</b> is the specified height of the Form</li>
            <li><b>status</b> can be ENABLED, DISABLED or DELETED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>new</b> is the total number of unread submissions</li>
            <li><b>count</b> is the total number of submissions</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
    "id": "{formID}",
    "username": "username",
    "title": "form title",
    "height": "527",
    "status": "ENABLED",
    "created_at": null,
    "updated_at": null,
    "new": 0,
    "count": 0,
    "url": "http://form.jotform.co/form/{formID}"
},
"limit-left": 9957
}</code></pre>
</div>
</script>
  <script type="text/template" id="delete-form-id-question-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": "QuestionID #{QuestionID} successfully deleted.",
    "limit-left": 9953
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-form-id-questions-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>Most commonly used <b>type</b>s are control_textbox, control_textarea, control_dropdown
            control_radio, control_checkbox, control_fileupload, control_fullname, control_email and control_datetime. 
            <a target="_blank" href="http://www.jotform.com/help/46-Quick-Overview-of-Form-Fields">Full List</a></li>
            <li><b>text</b> is question label</li>
            <li><b>qid</b> is question ID.</li>
            <li><b>order</b> defines the location of the question in the form.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "type": "control_head",
        "text": "Header",
        "qid": 1,
        "order": 1,
        "name": "clickTo",
        "headerType": "Default"
    },
    "limit-left": 9957
}</code></pre>
</div>
</script>
  <script type="text/template" id="put-form-id-questions-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>Most commonly used <b>type</b>s are control_textbox, control_textarea, control_dropdown
            control_radio, control_checkbox, control_fileupload, control_fullname, control_email and control_datetime. 
            <a target="_blank" href="http://www.jotform.com/help/46-Quick-Overview-of-Form-Fields">Full List</a></li>
            <li><b>text</b> is question label</li>
            <li><b>qid</b> is question ID.</li>
            <li><b>order</b> defines the location of the question in the form.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "1": {
            "type": "control_head",
            "text": "Text 1",
            "qid": 1,
            "order": "1",
            "name": "Header1",
            "headerType": "Default"
        },
        "2": {
            "type": "control_head",
            "text": "Text 2",
            "qid": 2,
            "order": "2",
            "name": "Header2",
            "headerType": "Small"
        }
    },
    "limit-left": 9956
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-form-id-question-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>text</b> is question label</li>
            <li><b>order</b> defines the location of the question in the form.</li>
            <li>Most commonly used <b>type</b>s are control_textbox, control_textarea, control_dropdown
            control_radio, control_checkbox, control_fileupload, control_fullname, control_email and control_datetime. 
            <a target="_blank" href="http://www.jotform.com/help/46-Quick-Overview-of-Form-Fields">Full List</a></li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [
        {
            "text": "New Text",
            "order": "3",
            "type": "control_head"
        }
    ],
    "limit-left": 9954
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-form-id-properties-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>content:</b> edited property keys and their new values</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "thankurl": "http://www.newthankyoupage.com",
        "activeRedirect": "default",
        "formWidth": "650",
        "labelWidth": "150",
        "styles": "nova"
    },
    "limit-left": 9998
}</code></pre>
</div>
</script>
  <script type="text/template" id="put-form-id-properties-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>content:</b> edited property keys and their values</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "messageOfLimitedForm": "Limit reached!",
        "labelWidth": "100"
    },
    "limit-left": 9952
}</code></pre>
</div>
</script>
  <script type="text/template" id="put-user-forms-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the ID of the created Form</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>username</b> is user who created the Form</li>
            <li><b>title</b> is the specified title of the Form</li>
            <li><b>height</b> is the specified height of the Form</li>
            <li><b>status</b> can be ENABLED, DISABLED or DELETED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>new</b> is the total number of unread submissions</li>
            <li><b>count</b> is the total number of submissions</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "id": "FORM ID",
        "username": "username",
        "title": "Form Title",
        "height": "600",
        "status": null,
        "created_at": null,
        "updated_at": null,
        "new": 0,
        "count": 0,
        "url": "http://form.jotformpro.com/form/{formID}"
    },
    "limit-left": 9951
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-user-forms-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the ID of the created Form</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>username</b> is user who created the Form</li>
            <li><b>title</b> is the specified title of the Form</li>
            <li><b>height</b> is the specified height of the Form</li>
            <li><b>status</b> can be ENABLED, DISABLED or DELETED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>new</b> is the total number of unread submissions</li>
            <li><b>count</b> is the total number of submissions</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "id": "FORM ID",
        "username": "username",
        "title": "Form Title",
        "height": "600",
        "status": null,
        "created_at": null,
        "updated_at": null,
        "new": 0,
        "count": 0,
        "url": "http://form.jotformpro.com/form/{formID}"
    },
    "limit-left": 9951
}</code></pre>
</div>
</script>
  <script type="text/template" id="delete-form-id-response-sample">
<div class="preCont">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is the ID of the created Form</li>
            <li><b>username</b> is user who created the Form</li>
            <li><b>title</b> is the specified title of the Form</li>
            <li><b>height</b> is the specified height of the Form</li>
            <li><b>status</b> can be ENABLED, DISABLED or DELETED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li><b>new</b> is the total number of unread submissions</li>
            <li><b>count</b> is the total number of submissions</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "id": "FORM ID",
        "username": "username",
        "title": "Form Title",
        "height": "600",
        "status": "DELETED",
        "created_at": "2013-08-05 08:49:01",
        "updated_at": "2013-08-05 08:50:41",
        "new": "0",
        "count": "0"
    },
    "limit-left": 9950
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-register-response-sample">
    <div class="preCont" id="user-response">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>username</b>, <b>name</b>, <b>email</b>, <b>website</b> and <b>avatarUrl</b> are basic user account details.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>time_zone</b> is in <A target="_blank" href="http://en.wikipedia.org/wiki/List_of_IANA_time_zones">IANA format</a>.</li>
            <li><b>account_type</b> list can be seen in <a target="_blank" href="http://www.jotform.com/pricing">Pricing page</a>. </li>
            <li><b>status</b> can be ACTIVE, DELETED or SUSPENDED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li>You should append API Key (or authenticate with header/cookie) to the <b>usage</b> URL to get the monthly usage details for a user.</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "username": "johnsmith",
        "name": null,
        "email": "john@example.com",
        "website": null,
        "time_zone": null,
        "account_type": "http://api.jotform.com/system/plan/FREE",
        "status": "ACTIVE",
        "created_at": "2013-06-24 18:43:21",
        "updated_at": "2013-06-25 19:01:52",
        "usage": "http://api.jotform.com/user/usage",
        "avatarUrl": "http://gravatar.com/avatar/c3308f0feb2f350cded9222f83fb9363"
    },
    "limit-left": 4999
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-login-response-sample">
<div class="preCont" id="user-response">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>username</b>, <b>name</b>, <b>email</b>, <b>website</b>, <b>avatarUrl</b>, <b>company</b>, <b>industry</b>, <b>security question</b> and <b>security answer</b> are basic user account details.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>time_zone</b> is in <A target="_blank" href="http://en.wikipedia.org/wiki/List_of_IANA_time_zones">IANA format</a>.</li>
            <li><b>account_type</b> list can be seen in <a target="_blank" href="http://www.jotform.com/pricing">Pricing page</a>. </li>
            <li><b>status</b> can be ACTIVE, DELETED or SUSPENDED</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li>You should append API Key (or authenticate with header/cookie) to the <b>usage</b> URL to get the monthly usage details for a user.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "username": "johnsmith",
        "name": "John Smith",
        "email": "john@example.com",
        "website": "http://www.jotform.com",
        "time_zone": "America/New_York",
        "account_type": "http://api.jotform.com/system/plan/PREMIUM",
        "status": "ACTIVE",
        "created_at": "2013-06-24 18:43:21",
        "updated_at": "2013-06-25 19:01:52",
        "usage": "http://api.jotform.com/user/usage",
        "industry": "",
        "securityAnswer": "",
        "company": "Interlogy, LLC",
        "securityQuestion": "",
        "avatarUrl": "http://gravatar.com/avatar/c3308f0feb2f350cded9222f83fb9363",
        "appKey": "APP KEY"
    },
    "limit-left": 4999
}</code></pre>
</div>
</script>
  <script type="text/template" id="user-logout-response-sample">
<div class="preCont" id="user-response">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": true,
    "limit-left": 9992
}</code></pre>
</div>
</script>
  <script type="text/template" id="form-id-reports-response-sample">
<div class="preCont" id="user-response">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is report ID.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>fields</b> is a comma separated list of all fields.</li>
            <li><b>list_type</b> can be excel, csv, grid, table, calendar, rss or visual.</li>
            <li><b>status</b> can be ENABLED or DELETED</li>
            <li>&nbsp;</li>
            <li><b>isProtected</b> is true if password protected</li>
            <li>&nbsp;</li>
            <li><b>created_at</b>, <b>updated_at</b>: YYYY-MM-DD HH:MM:SS</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": [
        {
            "id": "REPORT ID",
            "form_id": "FORM ID",
            "title": "Report",
            "created_at": "2013-09-03 02:39:55",
            "updated_at": null,
            "url": "http://www.jotform.com/report/REPORT ID",
            "isProtected": false
        },
        {
            "id": "REPORT ID",
            "form_id": "FORM ID",
            "title": "Table Report",
            "fields": "ip,dt,1,2",
            "list_type": "table",
            "status": "ENABLED",
            "url": "http://www.jotform.com/table/REPORT ID",
            "isProtected": false,
            "settings": "{\"displayImgRaw\":{\"toggle\":\"show\",\"checked\":\"no\"}}",
            "created_at": "2013-09-03 02:39:45",
            "updated_at": null
        }
    ],
    "limit-left": 9962
}</code></pre>
</div>
</script>
  <script type="text/template" id="system-plan-planName-response-sample">
<div class="preCont" id="user-response">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>name</b> is users account type. Full list can be seen in <a target="_blank" href="http://www.jotform.com/pricing">Pricing page</a>. </li>
            <li>&nbsp;</li>
            <li>Number of <b>submissions</b> can be received in a month</li>
            <li>&nbsp;</li>
            <li>Number of secure submissions can be received in a month</li>
            <li>Number of payment submissions can be received in a month</li>
            <li>Total disk space can be used for uploaded files. In bytes.</li> 
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>api-daily-limit</b> is the number of daily api calls you can make.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "name": "FREE",
        "limits": {
            "submissions": 100,
            "overSubmissions": 1000,
            "sslSubmissions": 10,
            "payments": 10,
            "uploads": 104857600,
            "tickets": 0,
            "subusers": 1,
            "api-daily-limit": 1000
        },
        "prices": {
            "monthly": 0,
            "yearly": 0,
            "biyearly": 0
        },
        "plimusIDs": {
            "monthly": 0,
            "yearly": 0,
            "biyearly": 0
        },
        "fastSpringURLs": {
            "monthly": "",
            "yearly": "",
            "biyearly": ""
        }
    },
    "limit-left": 9962
}</code></pre>
</div>
</script>
  <script type="text/template" id="post-form-id-reports-response-sample">
<div class="preCont" id="user-response">
    <div>
        <ul>
            <li class="toggleHelp">Minimize</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>id</b> is report ID.</li>
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li><b>fields</b> is a comma separated list of all fields.</li>
            <li><b>list_type</b> can be excel, csv, grid, table, calendar, rss or visual.</li>
            <li><b>status</b> can be ENABLED or DELETED</li>
            <li>&nbsp;</li>
            <li><b>isProtected</b> is true if password protected</li>
            <li>&nbsp;</li>
            <li><b>limit-left</b> is the number of daily api calls you can make.</li>
        </ul>
    </div>
    <pre><code class="json">{
    "responseCode": 200,
    "message": "success",
    "content": {
        "id": "REPORT ID",
        "form_id": "FORM ID",
        "title": "REPORT TITLE",
        "fields": "dt,ip",
        "list_type": "REPORT TYPE",
        "status": "ENABLED",
        "url": "http://www.jotform.com/{reportType}/{reportID}",
        "isProtected": false
    },
    "limit-left": 9973
}</code></pre>
</div>
</script>
 </head>    
 <!-- curl codes -->                                                   
 <!-- nodejs codes -->                      
 <!--
     <script type="text/template" id="user-invoices-nodejs">
         <pre><code class="javascript">
 var jf = require("JotForm");

 jf.options({
     debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getUserInvoices()
.then(function(r){
    /**
     successful response including user invoices array
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>    

     <script type="text/template" id="user-settings-key-nodejs">
        <pre><code class="javascript">
var jf = require("JotForm");

jf.options({
    debug: true,
    apiKey: "YOUR_API_KEY"
});

jf.getUserSettingsBySettingKey(settingsKey)
.then(function(r){
    /**
     successful response including user setting data with given key
     .
     */
})
.fail(function(e){
    /*
     error during request or not authenticated
     */
});
        </code></pre>
    </script>  
--> 
 <!-- php codes -->                                               
 <!-- go codes -->                                                
 <!-- python codes -->                                               
 <!-- java codes -->                                               
 <!-- javascript codes --> 
 <!-- ...................USER................ -->                  
 <!-- ..........................FORM...........................-->                       
 <!-- .......................SUBMISSION....................... -->    
 <!-- .........................REPORT................................ -->  
 <!-- .........................FOLDER................................ -->  
 <!-- csharp codes -->                                               
 <!-- ruby codes -->                     
 <!-- scala codes -->                                                                                           
 <!--<body data-spy="scroll" data-target="#navbar">--> 
 <body> 
  <div id="header" class="header"> 
   <div class="header-content"> 
    <a href="/" class="logo-link"> <img src="//cdn.jotfor.ms/anywhere/img/jotformDevLogo@4x.png" alt="JotForm Developers"> </a> 
    <div class="header-nav"> 
     <div class="nav-toggler" id="navToggler">
      |||
     </div> 
     <ul id="topMenu"> 
      <li><a href="https://developers.jotform.com" id="api-link" class="activated">API</a></li> 
      <li><a href="https://apps.jotform.com">Apps</a></li> 
      <!--<li><a href="http://developers.jotform.com/competition/?s=1">Competition</a></li>--> 
      <li><a href="https://developers.jotform.com/libraries">Libraries</a></li> 
      <li><a href="https://developers.jotform.com/widgets">Widgets</a></li> 
      <li><a href="https://developers.jotform.com/integrations">Integrations</a></li> 
      <li><a href="https://developers.jotform.com/forum">Forum</a></li> 
      <li><a href="https://developers.jotform.com/myapps">My Apps</a></li> 
     </ul> 
     <div style="display:none;"> 
      <div class="login-cont" id="accountSection" syle="display:none;"> 
       <a id="login-toggler">Login</a> 
       <div class="login-box dn" style="z-index:9999;"> 
        <div class="login-box-content"> 
         <div> 
          <div class="wide-line"> 
           <input type="text" placeholder="username" id="username-login" class="ajax-login-text"> 
          </div> 
          <div class="wide-line"> 
           <input type="password" placeholder="password" id="password-login" class="ajax-login-text"> 
          </div> 
          <div class="wide-line"> 
           <label id="signup_link" class="btn_link"><a href="#">Sign Up</a></label> 
           <input type="submit" id="login" value="Login" class="button ajax-login-button"> 
           <div class="clearer"></div> 
          </div> 
         </div> 
        </div> 
        <div class="register-box-content dn"> 
         <form action="#" method="post" onSubmit="return false;"> 
          <div class="wide-line"> 
           <input type="text" placeholder="username" id="username" class="ajax-reg-text"> 
          </div> 
          <div class="wide-line"> 
           <input type="email" placeholder="email" id="email" class="ajax-reg-text"> 
          </div> 
          <div class="wide-line"> 
           <input type="password" placeholder="password" id="password" class="ajax-reg-text"> 
          </div> 
          <div class="wide-line"> 
           <input type="password" placeholder="repeat password" id="repeat_password" class="ajax-reg-text"> 
          </div> 
          <div class="wide-line"> 
           <label id="login_link" class="btn_link"><a href="#">Login</a></label> 
           <input type="submit" id="signup" value="Sign Up" class="button ajax-reg-button"> 
           <div class="clearer"></div> 
          </div> 
         </form> 
        </div> 
        <div id="error-box"></div> 
       </div> 
      </div> 
      <div class="user-header-info" style="display:none;"> 
       <!--<span>Welcome {{user.username}}</span>--> 
       <a id="logged-in-logged" style="padding:0"><img src=""> </a> 
       <div class="login-box login-box-logged dn" style="z-index:9999"> 
        <div class="wide-line" style="width: 100%;float: left;"> 
         <a id="myaccount-link" target="_blank" href="https://www.jotform.com/myaccount">My Account</a> 
        </div> 
        <div class="wide-line"> 
         <div> 
          <input type="submit" id="logout" value="Logout" class="button ajax-login-button" style="width: 100%;"> 
         </div> 
        </div> 
       </div> 
      </div> 
     </div> 
     <!--<div class="login-cont" id="accountSection">
                            <a href="#" id="login-toggler">Login</a>
                            <div class="login-box dn">
                                <div class="wide-line">
                                    <input type="text" placeholder="username" id="username" />
                                </div>
                                <div class="wide-line">
                                    <input type="password" placeholder="password" id="password" />
                                </div>
                                <div class="wide-line">
                                    <button id="login">Login</button>
                                </div>
                            </div>
                            
                        LOGIN control will be here
                            <div class="user-header-info">

                                <a href="#" id="logged-in" style="padding:0"><img src="{{user.avatar}}" />  </a>
                                <div class="login-box dn">
                                    <div class="wide-line">
                                        <a id="myaccount-link" target="_blank" href="http://www.jotform.com/myaccount">My Account</a>
                                    </div>
                                    <div class="wide-line">
                                        <form action="/logout" method="post">
                                            <button type="submit">Logout</button>
                                        </form>
                                    </div>
                                </div>                         
                            </div>
                    </div>--> 
    </div> 
   </div> 
  </div> 
  <header class="jumbotron subhead"> 
   <div class="contz"> 
    <div class="head-title">
      API Documentation 
    </div> 
   </div> 
   <div class="bg-title">
     API Documentation 
   </div> 
  </header> 
  <div class="container"> 
   <div class="row"> 
    <div id="navbar" class="span3"> 
     <div id="navCont"> 
      <ul class="nav nav-list side-nav" id="navbarlist"> 
       <li style="position:relative;"> <select id="language"> <option value="curl">cURL</option> <option value="php">PHP</option> <option value="javascript">Javascript</option> <option value="java">Java</option> <option value="python">Python</option> <option value="nodejs">NodeJS</option> <option value="go">GO</option> <option value="csharp">C#</option> <option value="ruby">Ruby</option> <option value="scala">Scala</option> </select> <span class="selectMask"></span> </li> 
       <li class="bold"> <a href="#overview">Overview</a> </li> 
       <li class="navbar-item bold"> <a href="#gettingstarted">Getting Started</a> </li> 
       <li class="navbar-item bold"> <a href="#authentication">Authentication</a> </li> 
       <li class="navbar-item bold"> <a href="#libraries">Libraries</a> </li> 
       <li class="navbar-item bold"> <a href="#usecases">Use Cases</a> </li> 
       <li class="navbar-item bold" style="margin-bottom: 18px;"> <a href="#faq">FAQ</a> </li> 
       <li> 
        <ul id="method-items"> 
        </ul> </li> 
       <!--
                            <li class="bold" style="margin-top: 18px;">
                                <a href="#contact">Contact API Team</a>
                            </li>
                            --> 
      </ul> 
     </div> 
    </div> 
    <div class="span9" id="sections"> 
     <section id="overview" class="request-wrapper"> 
      <div class="row-fluid" style="position: relative;"> 
       <h2>Overview</h2> 
       <!--<span class="beta-flag"></span>--> The JotForm API makes it possible to connect to your form data without using the JotForm web site. 
       <br>
       <br> The JotForm API is written for JotForm users and 3rd party developers who would like to serve JotForm users. For example, 
       <a href="https://zapier.com/zapbook/jotform/" rel="nofollow">Zapier</a> uses the JotForm API to connect form submission data with other services. 
       <br>
       <br> Care to tell us how you would like to use JotForm API? Feel free to email us at 
       <a href="mailto:api@jotform.com">api@jotform.com</a>. We'd be happy to help youwell even assign a developer to help you with your task! 
       <br>
       <br> 
      </div> 
     </section> 
     <section id="gettingstarted" class="request-wrapper"> 
      <div class="row-fluid"> 
       <h2>Getting Started</h2> 
       <p> To get started using JotForm API you need a valid API key. Obtaining an API key is very simple. </p>
       <ul style="margin-bottom:16px;"> 
        <li><b>1. </b>Go to <a href="https://www.jotform.com/myaccount/api">My Account</a></li> 
        <li><b>2. </b>Navigate to API Section</li> 
        <li><b>3. </b>Create a new API Key</li> 
       </ul> 
       <a href="https://www.jotform.com/myaccount/api"><img src="//cdn.jotfor.ms/apidocs/img/my-account-api.png" border="0"></a> 
       <p></p> 
       <p>Get started with the JotForm API by using an API library in the language of your choice. See <a href="#libraries">libraries</a> section for a complete list.</p> 
      </div> 
     </section> 
     <section id="authentication" class="request-wrapper"> 
      <div class="row-fluid"> 
       <h2>Authentication</h2> The JotForm API supports more than one authentication method to simplify the authentication process in different programming languages.
       <br> 
       <h4 style="padding-top: 10px;">1. Authenticate with Query Parameters</h4> You can send your API Key with your query as a parameter 
       <br> 
       <br> 
       <b>GET</b> An example call to get user details
       <br> 
       <div class="code-sample"> 
        <pre><code class="bash">
    curl -X GET "http://api.jotform.com/user?apiKey={myApiKey}"
    
</code></pre> 
       </div> 
       <b>POST</b> An example call to setup a new webhook
       <br> 
       <div class="code-sample"> 
        <pre><code class="bash">
    curl -X POST -d "webhookURL=http://my.webhook.url/connect-to-DB.ext" -d "apiKey={myApiKey}" "http://api.jotform.com/v1/form/{myFormID}/webhooks"

</code></pre> 
       </div> 
       <h4 style="padding-top: 10px;">2. Authenticate with HTTP Headers</h4> You can send your API Key with your query as a HTTP header 
       <br>
       <br> An example call to get user details by HTTP header
       <br> 
       <pre><code class="bash">
    curl -H "APIKEY: {myApiKey}" "http://api.jotform.com/user"

</code></pre> 
       <h4 style="padding-top: 10px;">3. Authenticate with Javascript SDK</h4> You can authenticate users through JotForm by using our Javascript SDK. 
       <br>
       <br> 1. First, you should call JF.login() to launch a login form within an iFrame pop-up to prompt a user to sign-in. If the user authenticates successfully, (s)he will be asked to allow permissions to access to her account. You can pass callback functions to JF.login for both successful and failed authorizations. 
       <img style="margin-left:-60px;" src="//cdn.jotfor.ms/apidocs/img/authorizeWindow.png"> 
       <div class="code-sample"> 
        <pre><code class="bash">
&lt;script src="https://js.jotform.com/JotForm.js"&gt;&lt;/script&gt;
&lt;script&gt;

    //JF.login(success, error) method takes two optional arguments
    //Both arguments should be function 
    //First argument will be called after successful login
    //Second argument will be called if authorization fails
    JF.login(

        function success(){
            JF.getForms(function(response){
                for(var i=0; i&lt;response.length; i++){
                    document.write( "&lt;li&gt; " + response[i].title);
                }
            });
        },

        function error(){
            window.alert("Could not authorize user");
        }
    ); 
&lt;/script&gt; 
                            </code></pre> 
       </div> 2. At this point, we can use the API to perform actions. But, what if we want to be able to store this authentication so that we can use it in the future? To be able to do that, you need to get the user's API key and save it in your servers. In order to obtain API key from SDK, call JF.getAPIKey method. 
       <div class="code-sample"> 
        <pre><code class="bash">
var apiKey = JF.getAPIKey();
console.log(apiKey); //should log currently used API key
                            </code></pre> 
       </div> 
       <br>
       <br> Once you have the API key, you can call JF.initialize({apiKey: "123456789"}) and then call any other API methods. Note that JF.login method will automatically call initialize method after successful login. 
       <div class="code-sample"> 
        <pre><code class="bash">
JF.initialize( {apiKey: "123456789"} ); 
                            </code></pre> 
       </div> 
       <button id="login-button">Login with Jotform</button> 
      </div> 
     </section> 
     <section id="libraries" class="request-wrapper"> 
      <div class="row-fluid"> 
       <h2>Libraries</h2> 
       <h4>Github Repositories</h4> 
       <p> <b>Android : </b><a href="https://github.com/jotform/jotform-api-android">https://github.com/jotform/jotform-api-android</a> - <a href="https://github.com/jotform/jotform-api-android/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-android/archive/master.tar.gz">Tarball</a><br> <b>C# : </b><a href="https://github.com/jotform/jotform-api-csharp">https://github.com/jotform/jotform-api-csharp</a> - <a href="https://github.com/jotform/jotform-api-csharp/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-csharp/archive/master.tar.gz">Tarball</a><br> <b>GO : </b><a href="https://github.com/jotform/jotform-api-go">https://github.com/jotform/jotform-api-go</a> - <a href="https://github.com/jotform/jotform-api-go/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-go/archive/master.tar.gz">Tarball</a><br> <b>iOS : </b><a href="https://github.com/jotform/jotform-api-ios">https://github.com/jotform/jotform-api-ios</a> - <a href="https://github.com/jotform/jotform-api-ios/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-ios/archive/master.tar.gz">Tarball</a><br> <b>Java : </b><a href="https://github.com/jotform/jotform-api-java">https://github.com/jotform/jotform-api-java</a> - <a href="https://github.com/jotform/jotform-api-java/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-java/archive/master.tar.gz">Tarball</a><br> <b>NodeJS : </b><a href="https://github.com/jotform/jotform-api-nodejs">https://github.com/jotform/jotform-api-nodejs</a> - <a href="https://github.com/jotform/jotform-api-nodejs/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-nodejs/archive/master.tar.gz">Tarball</a><br> <b>PHP : </b><a href="https://github.com/jotform/jotform-api-php">https://github.com/jotform/jotform-api-php</a> - <a href="https://github.com/jotform/jotform-api-php/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-php/archive/master.tar.gz">Tarball</a><br> <b>Python 2.7 : </b><a href="https://github.com/jotform/jotform-api-python">https://github.com/jotform/jotform-api-python</a> - <a href="https://github.com/jotform/jotform-api-python/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-python/archive/master.tar.gz">Tarball</a><br> <b>Ruby : </b><a href="https://github.com/jotform/jotform-api-ruby">https://github.com/jotform/jotform-api-ruby</a> - <a href="https://github.com/jotform/jotform-api-ruby/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-ruby/archive/master.tar.gz">Tarball</a><br> <b>Scala : </b><a href="https://github.com/jotform/jotform-api-scala">https://github.com/jotform/jotform-api-scala</a> - <a href="https://github.com/jotform/jotform-api-scala/archive/master.zip">ZIP</a> or <a href="https://github.com/jotform/jotform-api-scala/archive/master.tar.gz">Tarball</a><br> </p> 
       <hr> 
       <h4>Installation Notes</h4> 
       <br> 
       <b>PHP Client Library</b>
       <br> 
       <p>Simply download <i>JotForm.php</i> into your application path and include in your php file as:</p> 
       <pre>
include "../JotForm.php";
</pre> 
       <p>More info available on <a href="https://github.com/jotform/jotform-api-php">repository page at Github</a>.</p> 
       <br> 
       <b>Python 2.7 Client Library</b>
       <br> 
       <p>There is currently no package submitted to PyPi. You need to download and import <i>jotform_api.py</i> as follows.</p> 
       <pre>
from jotform_api import JotformAPIClient
</pre> 
       <p>More info available on <a href="https://github.com/jotform/jotform-api-python">repository page at Github</a>.</p> 
       <br> 
       <b>Java Client Library</b>
       <br> 
       <p>Java client library is not available as a '.jar' file so you have to copy the folder structure of Jotform Java package into your project. Jotform API Java client uses <i>Apache HTTP Client 4.2.5</i> and <i>org.json</i> packages. So in order to work with the api client you need to add them to your project.</p> 
       <p>First check out the git repository and add the following files into your src folder as:</p> 
       <pre>
/src/com/jotform/api/JotformAPIWrapper.java
/src/com/jotform/api/JotformException.java
/src/com/jotform/api/samples/GetTodaysSubmissions.java
/src/com/jotform/api/samples/PrintFormList.java
/src/org/json/JSONArray.java
/src/org/json/JSONException.java
/src/org/json/JSONObject.java
/src/org/json/JSONString.java
/src/org/json/JSONStringer.java
/src/org/json/JSONTokener.java
/src/org/json/JSONWriter.java
</pre> 
       <p>Then copy the contents of the <i>/lib/</i> folder into your project with the same path. </p>
       <pre>
/lib/commons-logging-1.1.1.jar
/lib/httpclient-4.2.5.jar
/lib/httpcore-4.2.4.jar
</pre> 
       <p>Then you will need to add these <i>.jar</i>s into your buildpath. If you are using eclipse, you can simply right click on each jar file and click Build Path-&gt;Add To Build Path. If the jars are not visible in your project explorer even though you copied them into your <i>lib/</i> folder, try right clicking on your project in Package Explorer and then clicking refresh.</p> 
       <p>More information available on <a href="https://github.com/jotform/jotform-api-php">repository page at Github</a>.</p> 
       <b>Javascript Client Library</b> Copy and paste the script below to your page 
       <pre>
&lt;script src="https://js.jotform.com/JotForm.js"&gt;&lt;/script&gt;
</pre> 
       <b>NodeJS Client Library</b> 
       <pre>
npm install jotform
</pre> 
       <p>More information available on <a href="https://github.com/jotform/jotform-api-nodejs">repository page at Github</a>.</p> 
      </div>
     </section> 
     <section id="usecases" class="request-wrapper"> 
      <div class="row-fluid"> 
       <h2>Use cases</h2> You can find some use cases in 
       <b><a href="https://github.com/jotform/api-use-cases">API Use Cases Repository</a></b> 
       <br> 
       <br> 
       <li style="margin-left:20px"> <b><a href="https://github.com/jotform/api-use-cases/blob/master/simple.survey.tool.php">Calculate Survey Result Percentages</a></b> : Example written with API PHP library to calculate the percentages of star rates/radio buttons in the form submissions. </li> 
       <li style="margin-left:20px"> <b><a href="https://github.com/jotform/api-use-cases/tree/master/ruby-uploaded-files-downloader">Download your submissions' uploaded files</a></b> to your computer, implemented with Ruby. </li> 
       <li style="margin-left:20px"> <b><a href="https://github.com/jotform/api-use-cases/tree/master/combine-submissions">Combine Submissions</a></b> from different forms into one .csv file. Implemented with JavaScript and PHP. </li> 
       <li style="margin-left:20px"> <b><a href="https://github.com/jotform/api-use-cases/tree/master/submission-country-map">Contribution Map</a></b> : See where submissions come from. Implemented with JavaScript only. </li> 
       <li style="margin-left:20px"> <b><a href="https://github.com/jotform/api-use-cases/tree/master/submission-view">JotForm Views</a></b> : List and display Submissions blended with your imagination. Made so easy. Implemented with JavaScript and PHP. </li> 
       <li style="margin-left:20px"> <b><a href="https://github.com/jotform/api-use-cases/tree/master/populate-fields">Populate Fields</a></b> : A script that creates urls to prepopulate your forms with your desired values. Implemented with JavaScript. </li> 
       <li style="margin-left:20px"> <b><a href="https://github.com/jotform/api-use-cases/tree/master/answer-comparator">Answer Comparator</a></b> : This script compares the current form entries to those that have already been submitted by previous users. Implemented with JavaScript and PHP. </li> 
       <li style="margin-left:20px"> <b><a href="https://github.com/jotform/api-use-cases/tree/master/import-submissions">Import Submissions</a></b> : This script imports data from .CSV and Microsoft Excel files and submits them to JotForm via the PHP API. Implemented with JavaScript and PHP. </li> 
       <br> 
       <i>Do you have an use case to share with us? Fork our <a href="https://github.com/jotform/api-use-cases">repository</a>, commit your code and open a pull request!</i> 
       <br> 
       <br> 
       <i>Do you want us to implement examples for you? <a href="http://aytekin.jotform.pro/apidocs/#contact">Contact Us</a> and let us know your request!</i> 
       <br> 
       <br> 
      </div>
     </section> 
     <section id="faq" class="request-wrapper"> 
      <div class="row-fluid"> 
       <h2>FAQ</h2> 
       <h4>What is JotForm API?</h4> JotForm API allows you to access your JotForm account, forms and form submissions. Writing applications, integrations and scripts with JotForm API is very easy since it is based on REST principles. Code samples are also available on most common languages such as PHP, Java, Python, NodeJS and GO. 
       <h4>What are the most common uses for JotForm API? </h4> 
       <li>Integration with a 3rd party app to process existing form submission data, or to receive submission notifications with webhooks. </li> 
       <li>Mobile frontend apps for JotForm.  </li>
       <li>To Process form submission data to with your own scripts. </li> 
       <h4>What is covered in Version 1?</h4> JotForm API v1 is mostly read only. You can get information about the JotForm user and forms. You can also download existing form data. 
       <h4>Are there any restrictions?</h4> API Keys are limited 1000 requests for free accounts and 10000 requets for paid accounts per day. If you need your limits to be increased please 
       <a href="#contact">contact us</a>. 
       <h4>Where can I get an API Key? </h4> You can get your JotForm API Key from 
       <a href="https://www.jotform.com/myaccount/api">API section</a> at My Account. 
       <h4>Does JotForm API supports JSONP?</h4> Yes, JotForm API supports JSONP requests. You can simply add "callback" variable with your callback function's name to your API requests. 
       <br>
       <br> Example usage: 
       <a target="_blank" href="http://api.jotform.com/user?apiKey={APIKey}&amp;callback=myCallBackFunction">http://api.jotform.com/user?apiKey={APIKey}&amp;callback=myCallBackFunction</a> 
       <br>
       <br> If you have any further question, please 
       <a href="#contact">contact</a> API Team. 
       <br> 
      </div> 
     </section> 
     <div id="method-sections"> 
     </div> 
     <!--
                    <section id="contact" class="request-wrapper">
                        <div class="row-fluid">
                            <h2>Contact API Team</h2>
                            <script type="text/javascript" src="http://form.jotformpro.com/jsform/30693660548966"></script>
                        </div>
                    </section> 
                    --> 
    </div> 
   </div> 
  </div> 
  <footer class="footer"> 
   <a href="developers.jotform.com"> <img src="//cdn.jotfor.ms/apidocs/img/JotformDevLogoMini.png"> </a> 
  </footer> 
  <script type="text/javascript">

          var _gaq = _gaq || [];
          _gaq.push(['_setAccount', 'UA-1170872-7']);
          _gaq.push(['_setDomainName', 'jotform.com']);
          _gaq.push(['_setAllowLinker', true]);
          _gaq.push(['_trackPageview']);

          (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
          })();

        </script> 
  <script type="text/javascript">
            $(window).on('scroll', function(){
                var aaa = $(window).scrollTop();
                var bbb = $(window).height();
                var ccc = $(document).height();
                var ddd = aaa/ccc;
                var fff = $("#navbarlist").height();
                var eee = fff - bbb;
                // first version
                /* if($(window).scrollTop()>187){
                    $("ul.nav-list").addClass("affix");
                    $("ul.nav-list").css("top", ((-1)*ddd*eee));
                    $("#navCont").css("height",bbb);
                }else {
                    $("ul.nav-list").removeClass("affix");
                }*/
                //second version
                /* if($(window).scrollTop()>187){
                    $("#navCont").addClass("affix");
                    $("#navCont").css("top", ((-1)*ddd*eee));
                    $("#navCont").css("height",bbb);
                }else {
                    $("#navCont").removeClass("affix");
                } */
                //third version - no inline auto scroll
                if($(window).scrollTop()>187){
                    $("#navCont").addClass("affix");
                    //$("#navCont").css("top", ((-1)*ddd*eee));
                    $("#navCont").css("top", "0px");
                    $("#navCont").css("max-height",bbb - 105);
                } else {
                    $("#navCont").removeClass("affix");
                    $("#navCont").css("max-height",bbb - 225);
                }
            }); 



            var views = [];
            $(document).ready(function(){ 
                _.each(requestModels, function(m){
                    views.push(new MethodSectionView(m));
                });

                /*$('a:not(.button)').click(function(){
                    $('html, body').animate({
                        scrollTop: $( $(this).attr('href') ).offset().top
                    }, 500);
                    //return false;
                });*/


                $("#navToggler").click(function() {
                    if($("#topMenu").css("display")=="none") {
                        $("#topMenu").show();
                    } else {
                        $("#topMenu").hide();
                    }
                });

                /*  $("#login-toggler").click(function() {
                    $(".login-box").toggleClass("dn");
                    $("#login-toggler").toggleClass("activated");
                });

                $("#logged-in").click(function() {
                    $(".login-box").toggleClass("dn");
                    $("#logged-in").toggleClass("activated");
                }); */

                $("body").on("click", ".navbar-item", function(e) {
                    $(".navbar-item").removeClass("active");
                    $(e.target).closest("li").addClass("active");
                });

                $(".cat-cont").bind("click", function(){
                    $(".category-list").not($(this).next()[0]).addClass("dn"); //if not() is not used, it does not work properly
                    $(".cat-cont").not(this).removeClass("up"); //if not() is not used, it does not work properly
                    $(this).next().toggleClass("dn");
                    $(this).toggleClass("up");
                });

                //tFlag = 1;
                $(".toggleHelp").click( function() {
                    if (!$(this).hasClass("hede")) {
                        $(this).parent().parent().animate({"width":"20px","opacity":"0.4"});
                        $(this).addClass('hede');
                    } else {
                        $(this).parent().parent().animate({"width":"50%","opacity":"0.95"});
                        $(this).removeClass('hede');
                    } 
                });

                $("#login-button").click(function(){
                    JF.login(function(){
                        $("input[name=apikey]").val(JF.getAPIKey());
                    });
                });

                $(".menu-opener").click ( function () {
                    $("#navbar").toggleClass("dn");
                });

            });

            if($.cookie("api-language")){
                $("#language").val($.cookie("api-language"));
                window.stageModel.set($.cookie("api-language"));
            }

            $("#language").change(function(){
                $.cookie("api-language", $(this).val());
                window.stageModel.set("language", $(this).val());
            });

            hljs.initHighlightingOnLoad();
        </script> 
  <script>
        var apiTextBox = function(){
            var cookie = readCookie("jotApi");
            if(cookie){
                var apiInput;
                $('input[name="apikey"]').before(function(i){
                    $(this).hide();
                    var useCookie = '<li><input checked="true" name="apiKeyRadio-' + i + '" type="radio" id="useMyApiKey-' + i + '"><label for="useMyApiKey-' + i + '">Use My Cookie</label></li>';
                    var writeApi =  '<li><input name="apiKeyRadio-' + i + '" type="radio" id="writeApi-' + i + '"><label for="writeApi-' + i + '">Enter Api Key</label></li>';
                    var data = useCookie + writeApi;
                    return $('<ul class="useCookie">' + data + '</ul>').bind('click', {apiInput: apiInput}, function(event){
                        var data = event.data;
                        if(event.target.id.indexOf("useMyApiKey") > -1){
                            $(event.target).closest("td").find('input[type="text"]').hide();
                        }else if(event.target.id.indexOf("writeApi") > -1){
                            $(event.target).closest("td").find('input[type="text"]').show();
                        }
                    });
                });
            }else{
                //is not loggedin
            }
        };
        var hideOptionalFields = function(){
            $('div.table-contz').find("tr.optional:first").each(function(){
                var closeLinkText = "Hide Optional Fields";
                var openLinkText = "Show Optional Fields";
                var main = $(this).closest("div.table-contz");
                var optionalTrs = $('tr.optional', main);
                var clickLink = $('<a>' + openLinkText + '</a>').bind('click', {optionalTrs: optionalTrs}, function(event){
                    var data = event.data;
                    var hasClassOptional = data.optionalTrs.hasClass("optional");
                    data.optionalTrs.toggleClass("optional");
                    $(this).toggleClass("up");
                    if(hasClassOptional){
                        $(this).text(closeLinkText);
                    }else{
                        $(this).text(openLinkText);
                    }
                });
                var tr = $('<tr></tr>');
                var td = $('<td class="collapseOptional" colspan="3"></td>');
                td.append(clickLink);
                tr.append(td);
                $(this).before(tr);
            });
        };
        $(function(){
            apiTextBox();
            hideOptionalFields();
        });

        var userBehaviour = function(){
            var jotApi = readCookie("jotApi");

            if(jotApi){
                var username = jotApi.match(/(.*)%3A.*/);
                $.ajax({
                  type: 'POST',
                  data: {"action":"emailTracking", "event":"pageView", "username" : username[1], "pageName" : "apidocs", "url" : window.location.href},
                  url: 'https://www.jotform.com/server.php',
                  dataType: "JSON",
                  success: function(resp) {
                    //success
                    console.log(resp);
                  }
                });
            }
        };
        userBehaviour();
        </script>   
 </body>
</html>