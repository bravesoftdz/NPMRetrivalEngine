<html>
 <head> 
  <title>Methods of the java.util.Math class (ctd)</title> 
  <meta name="description" content="Performance characteristics of trigonometric and other methods of the Math class."> 
  <meta name="keywords" content="Java,math,floating point,trigonometry,java.util.Math"> 
  <meta name="author" content="Neil Coffey"> 
  <link rel="stylesheet" type="text/css" href="../styles.css"> 
 </head> 
 <body> 
  <table>
   <tbody>
    <tr valign="top">
     <td width="162"> 
      <div class="navbar">
       <font size="-1"> <img src="../../RightArrowBlue.gif">&nbsp;<a href="/">Javamex Home</a><br> <img src="../../RightArrowBlue.gif">&nbsp;<a href="/javasearch">Java Search</a><br> <img src="/RightArrowBlue.gif">&nbsp;<a href="/tutorials/synchronization_concurrency_1.shtml">Java synchronization</a><br> <img src="/RightArrowBlue.gif">&nbsp;<a href="/tutorials/profiling/profiling_java5.shtml">Java profiling</a><br> <img src="/RightArrowBlue.gif">&nbsp;<a href="/tutorials/io/index.shtml">Java I/O</a><br> <img src="/RightArrowBlue.gif">&nbsp;<a href="/tutorials/io/nio_intro.shtml">NIO</a><br> <img src="/RightArrowBlue.gif">&nbsp;<a href="/tutorials/collections/index.shtml">Java collections</a> </font>
      </div> 
      <hr> <script type="text/javascript"><!--
google_ad_client = "pub-7685045015884574";
google_ad_slot = "4332830588";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script> <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> 
      <hr> <script type="text/javascript"><!--
google_ad_client = "pub-7685045015884574";
google_ad_slot = "4332830588";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script> <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> </td>
     <td> <p><font size="-1"> <img src="/RightArrowBlue.gif">&nbsp;<a href="/">Home</a> <img src="/RightArrowBlue.gif">&nbsp;<a href="./">Math intro</a> <img src="/RightArrowBlue.gif">&nbsp;<a href="floating_point_primitive.shtml"><tt>float</tt> and <tt>double</tt></a> <img src="/RightArrowBlue.gif">&nbsp;<a href="java_util_math.shtml">java.util.Math</a> <img src="/RightArrowBlue.gif">&nbsp;<a href="BigDecimal_BigInteger.shtml">BigDecimal and BigInteger</a> <img src="/RightArrowBlue.gif">&nbsp;<a href="karatsuba.shtml">Karatsuba's algorithm</a> </font></p> 
      <table style="margin: 0px;">
       <tbody>
        <tr valign="top">
         <td> <i>Search this site:</i></td>
         <td> 
          <!-- Google CSE Search Box Begins  --> 
          <form action="http://www.google.com/cse" id="searchbox_007572414825397037682:iud26zxm2jq"> 
           <input type="hidden" name="cx" value="007572414825397037682:iud26zxm2jq"> 
           <input type="text" name="q" size="30"> 
           <input type="submit" name="sa" value="Search"> 
          </form> <script type="text/javascript" src="http://www.google.com/coop/cse/brand?form=searchbox_007572414825397037682%3Aiud26zxm2jq&amp;lang=en"></script> 
          <!-- Google CSE Search Box Ends --> </td>
         <td> <a href="/tutorials/threads/"><img src="/ix/threads.png" border="0" alt="Threads"></a> <a href="/tutorials/database/"><img src="/ix/db.png" border="0" alt="Database"></a> <a href="/tutorials/profiling/profiling_java5.shtml"><img src="/ix/profiling.png" border="0" alt="Profiling"></a> <a href="/tutorials/regular_expressions/"><img src="/ix/regex.png" border="0" alt="Regular expressions"></a> <a href="/tutorials/random_numbers/"><img src="/ix/random.png" border="0" alt="Random numbers"></a> <a href="/tutorials/compression/"><img src="/ix/compression.png" border="0" alt="Compression"></a> <a href="/tutorials/exceptions/"><img src="/ix/exceptions.png" border="0" alt="Exceptions"></a> <a href="/java_equivalents/index.shtml"><img src="/ix/c.png" border="0" alt="C Equivalents in Java"></a> </td>
        </tr>
       </tbody>
      </table> 
      <!-- AddThis Button BEGIN --> <script type="text/javascript">addthis_pub  = 'frenchlinguistics';</script> <a href="http://www.addthis.com/bookmark.php" onmouseover="return addthis_open(this, '', '[URL]', '[TITLE]')" onmouseout="addthis_close()" onclick="return addthis_sendto()"><img src="http://s9.addthis.com/button1-bm.gif" width="125" height="16" border="0" alt=""></a><script type="text/javascript" src="http://s7.addthis.com/js/152/addthis_widget.js"></script> 
      <!-- AddThis Button END --> <h1>Mathematical operations in Java: <tt>java.util.Math</tt> (ctd)</h1> <p>This page continues from the previous page on <a href="java_util_math.shtml">information and performance of methods provided by the <tt>java.util.Math</tt> class</a>. Please see that page in particular for information about interpreting the timing information given below. </p> <h3><tt>Math.log()</tt>: natural logarithm</h3> <p>The method <tt>Math.log()</tt> computes the <i>natural logarithm</i>, or in other words, the opposite of Math.exp(), and often written either ln(<i>x</i>) or log<sub>10</sub>(<i>x</i>). Like <i>e<sup>x</sup></i>, calculating natural logarithms crops up in various mathematical applications. </p> <p>Hotspot on Intel architectures makes use of the <tt>FYL2X</tt> instruction which calculates a base 2 logarithm, and the equivalence ln(<i>x</i>) ? log<sub>2</sub> * log<sub>2</sub>(<i>x</i>). With this implementation, calling <tt>Math.log()</tt> appears to take <b>in the order of 50 clock cycles</b> on our test i7 machine, or about 25-50 times slower than a floating point addition depending on circumstances. </p> <h3><tt>Math.pow()</tt>: calculating arbitrary powers</h3> <p>The <tt>Math.pow()</tt> method can be used to calculate arbitrary powers. Specifically, calling <tt>Math.pow(x, y)</tt> calculates <i>x<sup>y</sup></i>, where both <i>x</i> and <i>y</i> can be any arbitrary double and the result will be the nearest <tt>double</tt> representation possible to the actual answer. </p> <p>It should be noted that <tt>Math.pow()</tt> is potentially <b>very slow compared to many other operations</b>. On our test system, it takes something in the order of 600 clock cycles in the worst case. However, the algorithm used does provide for a a special <b>"fast case" where <tt>y</tt> is a power of 2</b> where it takes in the order of 30 clock cycles. </p> <h3><tt>Math.sin()</tt>, <tt>Math.cos()</tt> and <tt>Math.tan()</tt>: calculating sines, cosines and tangents</h3> <p>These functions calculate the key <b>trigonometric</b> functions sine, cosine and tangent which define the relationship between the angle of a right-angled triangle and the ratios of the lengths pairs of its sides. These functions crop up in a variety of applications, from the simple drawing of geometrical shapes to more complex operations such as the analysis of waveforms. They each take their input value in <b>radians</b>, where a full circle or 360 degrees is equivalent to 2*pi radians. (In a program, you can get the <tt>double</tt> value of PI using the constant <tt>Math.PI</tt>.) </p> <p>The sine, cosine and tangent functions are all repeating functions, whereby the "core" behaviour of the function with input values between 0 and pi/2 is effectively repeated (with sign changes) over other ranges of input values. Because less "juggling" is required to accommodate this repetition, Java's <tt>sin()</tt>, <tt>cos()</tt> and <tt>tan()</tt> functions have "fast cases" for input values between -pi/2 and pi/2. Approximate number of clock cycles (i.e. relative to the "best case" for a floating point addition on many processors) are approximately as follows: </p> 
      <center> 
       <table border width="60%"> 
        <tbody>
         <tr>
          <th>Function</th>
          <th>Input range</th>
          <th>Timing<br>(reative to floating point addition)</th>
         </tr> 
         <tr>
          <td rowspan="2"><tt>Math.sin()<br>Math.cos()</tt></td>
          <td>-pi/2 - pi/2</td>
          <td>~ 65</td>
         </tr> 
         <tr>
          <td>&lt; -pi/2 or &gt; pi/2</td>
          <td>~ 120</td>
         </tr> 
         <tr>
          <td rowspan="2"><tt>Math.tan()</tt></td>
          <td>-pi/2 - pi/2</td>
          <td>~ 80</td>
         </tr> 
         <tr>
          <td>&lt; -pi/2 or &gt; pi/2</td>
          <td>~ 200</td>
         </tr> 
        </tbody>
       </table> 
      </center> <p>Notice that <tt>tan()</tt> is <i>functionally</i> equivalent to <tt>sin()/cos()</tt> but that it is faster (and marginally more accurate) to use the <tt>tan()</tt> function because a different method of calculation is actually used. </p> 
      <!--


<p>In the general case, the formula for calculating <i>x<sup>y</sup></i> (and
the one essentially used by <tt>Math.pow()</tt>) is:
</p>

<div class="summarybox">
x<sup>y</sup> &equiv; <i>e</i><sup><i>y</i> ln <i>x</i></sup>
</div>

<p>In other words, we can calculate almost the same value with the following code:</p>

--> 
      <hr><p align="center"><font size="-1"><i>Written by Neil Coffey. Copyright © Javamex UK 2011. All rights reserved. If you have any feedback on the Java collections tutorials in this section or about the content of this site in general, please leave a message on the Javamex forum. </i></font></p> </td>
    </tr>
   </tbody>
  </table> 
  <script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script> 
  <script type="text/javascript">
var pageTracker = _gat._getTracker("UA-2207493-4");
pageTracker._initData();
pageTracker._trackPageview();
</script>   
 </body>
</html>