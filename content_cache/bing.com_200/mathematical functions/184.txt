<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <meta name="generator" content="made with love by dartdoc 0.13.0+1"> 
  <meta name="description" content="function_tree API docs, for the Dart programming language."> 
  <title>function_tree - Dart API docs</title> 
  <link rel="canonical" href="https://www.dartdocs.org/documentation/function_tree/latest/index.html"> 
  <link href="https://fonts.googleapis.com/css?family=Source+Code+Pro:500,400i,400,300|Source+Sans+Pro:400,300,700" rel="stylesheet"> 
  <link rel="stylesheet" href="static-assets/prettify.css"> 
  <link rel="stylesheet" href="static-assets/styles.css"> 
  <link rel="icon" href="static-assets/favicon.png"> 
  <script type="text/javascript">
(function () {
    function getFromHash(hash, regexp, body) {
        var match = hash.match(regexp);
        var result;
        if (match) {
            result = body ? body(match[1]) : match[1];
        }
        return [result, hash.replace(regexp, "")];
    }

    function getPackage(hash) {
        return getFromHash(hash, /^([^\/]+)\//, function (m) { return m.replace("-", "."); });
    }

    function getLibrary(hash) {
        return getFromHash(hash, /^([^@\.]+)/, function (m) { return m.replace("-", "."); });
    }

    function getClass(hash) {
        return getFromHash(hash, /^\.([^@]+)/);
    }

    function getFunction(hash) {
        return getFromHash(hash, /^@id_(.+)$/);
    }

    function getMethod(hash) {
        return getFromHash(hash, /^@id_(.+)$/, function (m) {
            // if it contains ',', we should discard everything after that,
            // that was probably named parameter arguments
            // if it ends with '-', it may be a constructor
            return m.replace(/,.*/, "").replace("-", "");
        });
    }

    var hash = location.hash.replace(/^#/, "");

    var packageResult = getPackage(hash);
    var packageName = packageResult[0];
    hash = packageResult[1];

    if (packageName && location.pathname.indexOf(packageName) !== -1) {
        var libraryResult = getLibrary(hash);
        var library = libraryResult[0];
        hash = libraryResult[1];

        if (library) {
            var classResult = getClass(hash);
            var className = classResult[0];
            hash = classResult[1];

            var method;
            var func;
            if (className) {
                method = getMethod(hash)[0];
            } else {
                func = getFunction(hash)[0];
            }

            var newPath;
            if (className) {
                if (method) {
                    newPath = "/" + library + "/" + className + "/" + method + ".html";
                } else {
                    newPath = "/" + library + "/" + className + "-class.html";
                }
            } else if (func) {
                newPath = "/" + library + "/" + func + ".html";
            } else {
                newPath = "/" + library + "/" + library + "-library.html";
            }

            var newLocation = location.href.replace(/\/[^\/]*#.*$/, newPath);

            var http = new XMLHttpRequest();
            http.open('HEAD', newLocation);
            http.onreadystatechange = function () {
                if (this.readyState === this.DONE && this.status === 200) {
                    location.href = newLocation;
                }
            };
            http.send();
        }
    }
}());
</script> 
 </head> 
 <body> 
  <div id="overlay-under-drawer"></div> 
  <header id="title"> 
   <ol class="breadcrumbs gt-separated dark hidden-xs"> 
    <li><a href="https://bitbucket.org/ram6ler/function-tree/wiki/Home">package function_tree</a></li> 
   </ol> 
   <div class="self-name">
    function_tree
   </div> 
   <form class="search navbar-right" role="search"> 
    <input type="text" id="search-box" autocomplete="off" disabled class="form-control typeahead" placeholder="Loading search..."> 
   </form> 
  </header> 
  <main> 
   <div class="col-xs-6 col-sm-3 col-md-2 sidebar sidebar-offcanvas-left"> 
    <h5>package function_tree</h5> 
    <ol> 
     <li class="section-title"><a href="index.html#libraries">Libraries</a></li> 
     <li><a href="function_tree/function_tree-library.html">function_tree</a></li> 
    </ol> 
   </div> 
   <div class="col-xs-12 col-sm-9 col-md-8 main-content"> 
    <section class="desc markdown"> 
     <h1>function_tree</h1> 
     <p>A library for parsing and evaluating mathematical functions built from strings.</p> 
     <h2>Usage</h2> 
     <p>A simple usage example:</p> 
     <pre class="prettyprint language-dart"><code>import 'package:function_tree/function_tree.dart';
import 'dart:math' show PI;

main() {
  var f = new FunctionOfX("1.5 * sin(2 * (x - PI / 3)) + 2");
  print(f(PI));

  var ft = new FunctionTree(
    fromExpression: "1.5 * sin(2 * (x - PI / 3)^2) + y",
    withVariableNames: ["x", "y"]);

  print(ft({"x": 1, "y": 2}));
}
</code></pre> 
     <h2>Features and bugs</h2> 
     <p>Please file feature requests and bugs at the <a href="https://bitbucket.org/ram6ler/function-tree/issues">issue tracker</a>.</p> 
    </section> 
    <section class="summary" id="libraries"> 
     <h2>Libraries</h2> 
     <dl> 
      <dt id="function_tree"> 
       <span class="name"><a href="function_tree/function_tree-library.html">function_tree</a></span> 
      </dt> 
      <dd>
        A library for parsing and evaluating mathematical functions built from strings. 
      </dd> 
     </dl> 
    </section> 
   </div> 
   <!-- /.main-content --> 
  </main> 
  <footer> 
   <span class="no-break"> function_tree 0.1.1 </span> • 
   <span class="copyright no-break"> <a href="http://creativecommons.org/licenses/by-sa/4.0/">cc license</a> </span> 
  </footer> 
  <script src="https://code.jquery.com/jquery-2.1.4.min.js"></script> 
  <script src="static-assets/typeahead.bundle.min.js"></script> 
  <script src="static-assets/prettify.js"></script> 
  <script src="static-assets/URI.js"></script> 
  <script src="static-assets/script.js"></script> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-51687523-1', 'auto');
  ga('send', 'pageview');

</script>   
 </body>
</html>