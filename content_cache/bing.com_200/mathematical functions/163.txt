<!doctype html>
<html lang="en" prefix="og: http://ogp.me/ns#">
 <head> 
  <meta charset="UTF-8"> 
  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"844a840367","applicationID":"13323906","transactionName":"c1cMREAKXVRcRhpFUlNTA1dXFh5LUVtC","queueTime":2,"applicationTime":31,"agent":""}</script> 
  <script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var o=n[t]={exports:{}};e[t][0].call(o.exports,function(n){var o=e[t][1][n];return r(o||n)},o,o.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<t.length;o++)r(t[o]);return r}({1:[function(e,n,t){function r(){}function o(e,n,t){return function(){return i(e,[c.now()].concat(u(arguments)),n?null:this,t),n?void 0:this}}var i=e("handle"),a=e(2),u=e(3),f=e("ee").get("tracer"),c=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],d="api-",l=d+"ixn-";a(p,function(e,n){s[n]=o(d+n,!0,"api")}),s.addPageAction=o(d+"addPageAction",!0),s.setCurrentRouteName=o(d+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,o="function"==typeof n;return i(l+"tracer",[c.now(),e,t],r),function(){if(f.emit((o?"":"no-")+"fn-start",[c.now(),r,o],t),o)try{return n.apply(this,arguments)}finally{f.emit("fn-end",[c.now()],t)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=o(l+n)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,c.now()])}},{}],2:[function(e,n,t){function r(e,n){var t=[],r="",i=0;for(r in e)o.call(e,r)&&(t[i]=n(r,e[r]),i+=1);return t}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],3:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,o=t-n||0,i=Array(o<0?0:o);++r<o;)i[r]=e[n+r];return i}n.exports=r},{}],4:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function o(e){function n(e){return e&&e instanceof r?e:e?f(e,u,i):i()}function t(t,r,o,i){if(!d.aborted||i){e&&e(t,r,o);for(var a=n(o),u=m(t),f=u.length,c=0;c<f;c++)u[c].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function l(e,n){v[e]=m(e).concat(n)}function m(e){return v[e]||[]}function w(e){return p[e]=p[e]||o(t)}function g(e,n){c(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var v={},y={},b={on:l,emit:t,get:w,listeners:m,context:n,buffer:g,abort:a,aborted:!1};return b}function i(){return new r}function a(){(s.api||s.feature)&&(d.aborted=!0,s=d.backlog={})}var u="nr@context",f=e("gos"),c=e(2),s={},p={},d=n.exports=o();d.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(o.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){o.buffer([e],r),o.emit(e,n,t)}var o=e("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!x++){var e=h.info=NREUM.info,n=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();c(y,function(n,t){e[n]||(e[n]=t)}),f("mark",["onload",a()+h.offset],null,"api");var t=d.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function o(){"complete"===d.readyState&&i()}function i(){f("mark",["domContent",a()+h.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(u=Math.max((new Date).getTime(),u))-h.offset}var u=(new Date).getTime(),f=e("handle"),c=e(2),s=e("ee"),p=window,d=p.document,l="addEventListener",m="attachEvent",w=p.XMLHttpRequest,g=w&&w.prototype;NREUM.o={ST:setTimeout,SI:p.setImmediate,CT:clearTimeout,XHR:w,REQ:p.Request,EV:p.Event,PR:p.Promise,MO:p.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1059.min.js"},b=w&&g&&g[l]&&!/CriOS/.test(navigator.userAgent),h=n.exports={offset:u,now:a,origin:v,features:{},xhrWrappable:b};e(1),d[l]?(d[l]("DOMContentLoaded",i,!1),p[l]("load",r,!1)):(d[m]("onreadystatechange",o),p[m]("onload",r)),f("mark",["firstbyte",u],null,"api");var x=0,E=e(4)},{}]},{},["loader"]);</script> 
  <title>javascript-snippets</title> 
  <link rel="stylesheet" media="all" href="https://github-atom-io-herokuapp-com.global.ssl.fastly.net/assets/application-15fe4b78e8ac4cd261e60be02792d6d1.css" data-turbolinks-track="true"> 
  <script src="https://github-atom-io-herokuapp-com.global.ssl.fastly.net/assets/application-22643a5d3387e35bc6ac15bd505346a0.js" data-turbolinks-track="true"></script> 
  <meta name="csrf-param" content="authenticity_token"> 
  <meta name="csrf-token" content="23Q6twjAttnzbZIzmUAYjRdyJIXcTT1p4slE0FKY5JqEMN6QCtCDu9TLcD71yrTwM75SIwuHSt7fx1eYOhDFng=="> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-3769691-35', 'atom.io');
  ga('send', 'pageview');

</script> 
  <meta property="og:url" content="https://atom.io/packages/javascript-snippets"> 
  <meta property="og:site_name" content="Atom"> 
  <meta property="og:title" content="javascript-snippets"> 
  <meta property="og:description" content="JavaScript &amp; NodeJS Snippets for Atom"> 
  <meta property="og:type" content="website"> 
  <meta property="og:author" content="https://github.com/zenorocha"> 
  <meta property="og:image" content="https://secure.travis-ci.org/zenorocha/atom-javascript-snippets.svg?branch=master"> 
  <meta property="twitter:card" content="summary_large_image"> 
  <meta property="twitter:site" content="@AtomEditor"> 
  <meta property="twitter:creator" content="https://github.com/zenorocha"> 
  <meta property="twitter:title" content="javascript-snippets"> 
  <meta property="twitter:description" content="JavaScript &amp; NodeJS Snippets for Atom"> 
  <meta property="twitter:image:src" content="https://secure.travis-ci.org/zenorocha/atom-javascript-snippets.svg?branch=master"> 
  <meta name="description" content="At GitHub, we’re building the text editor we’ve always wanted: hackable to the core, but approachable on the first day without ever touching a config file. We can’t wait to see what you build with it."> 
  <link rel="shortcut icon" href="/favicon.ico"> 
  <link rel="alternate" type="application/atom+xml" title="Atom Packages and Themes" href="https://atom.io/packages.atom"> 
 </head> 
 <body> 
  <div class="footer-push"> 
   <nav class="top-bar" aria-label="Primary"> 
    <div class="wrapper no-pad"> 
     <ul class="navigation"> 
      <li><h1><a href="/" class="logo-small" title="Atom: A hackable text editor for the 21st Century"></a></h1></li> 
      <li><a class="is-selected" href="/packages">Packages</a></li> 
      <li><a class="" href="/themes">Themes</a></li> 
      <li><a class="" href="/docs">Documentation</a></li> 
      <li><a href="http://blog.atom.io">Blog</a></li> 
      <li><a href="http://discuss.atom.io">Discuss</a></li> 
     </ul> 
     <div class="top-bar-right"> 
      <a href="/login?last_url=%2Fpackages%2Fjavascript-snippets"> <span class="octicon octicon-log-in"></span> Sign in </a> 
     </div> 
    </div> 
   </nav> 
   <div id="js-pjax-container"> 
    <div class="wrapper package-show content-push"> 
     <div> 
      <div class="grid-cell"> 
       <div class="package-card card"> 
        <div class="body css-truncate"> 
         <h4 class="card-name"> <span class="css-truncate-target"><a href="/packages/javascript-snippets">javascript-snippets</a></span> </h4> 
         <span class="css-truncate-target card-description">JavaScript &amp; NodeJS Snippets for Atom</span> 
         <ul class="keywords"> 
         </ul> 
        </div> 
        <div class="meta"> 
         <a href="/users/zenorocha"> <img src="https://github.com/zenorocha.png" alt="" class="gravatar"> </a> 
         <a href="/users/zenorocha" class="author"> zenorocha </a> 
         <div class="meta-right"> 
          <a class="linked-octicon" href="https://github.com/zenorocha/atom-javascript-snippets/releases/tag/v1.2.1"> <span class="stat tooltipped tooltipped-n" aria-label="Latest version"> <span class="octicon octicon-versions"></span> <span class="value">1.2.1</span> </span> </a> 
          <span class="stat tooltipped tooltipped-n" aria-label="163,058 downloads"> <span class="octicon octicon-cloud-download"></span> <span class="value">163,058</span> </span> 
          <span class="js-star-wrap"> 
           <div class="star-box tooltipped tooltipped-nw" aria-label="You must be signed in to star packages"> 
            <a href="/packages/javascript-snippets/star" class="js-star-button star-button minibutton with-count disabled " data-skip-pjax aria-label="Star javascript-snippets"> <span class="octicon octicon-star"></span> </a> 
            <a class="social-count" href="/packages/javascript-snippets/stargazers" aria-label="379 users starred javascript-snippets"> 379 </a> 
           </div> </span> 
         </div> 
         <!-- meta-right --> 
        </div> 
        <!-- meta --> 
       </div> 
      </div> 
      <div class="package-meta"> 
       <ul> 
        <li><a href="https://github.com/zenorocha/atom-javascript-snippets"><span class="octicon octicon-repo"></span> Repo</a></li> 
        <li><a href="https://github.com/zenorocha/atom-javascript-snippets/issues"><span class="octicon octicon-bug"></span> Bugs</a></li> 
        <li><a href="https://github.com/zenorocha/atom-javascript-snippets/releases"><span class="octicon octicon-versions"></span> Versions</a></li> 
        <li> <a href="https://github.com/zenorocha/atom-javascript-snippets/blob/03964ceef4b2a0991a8329737cd7c4b37181885f/package.json#L0"><span class="octicon octicon-law"></span> License</a> </li> 
       </ul> 
       <a href="#flag-modal" class="js-show-flag show-flag"><span class="octicon octicon-circle-slash"></span> Flag as spam or malicious</a> 
      </div> 
     </div> 
     <div class="markdown-body readme"> 
      <h1> <a href="#javascript-snippets-for-atom-"></a>JavaScript Snippets for <a href="http://atom.io">Atom</a> <a href="https://travis-ci.org/zenorocha/atom-javascript-snippets"><img src="https://i.github-camo.com/5f73a18f9eb2a68329a1c8da17b8620665bcd3b8/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f7a656e6f726f6368612f61746f6d2d6a6176617363726970742d736e6970706574732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://secure.travis-ci.org/zenorocha/atom-javascript-snippets.svg?branch=master"></a> </h1> 
      <p><img src="https://i.github-camo.com/530eafbaf5b2bc0e6cf78666bbdb339cd65bf713/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f3339383839332f333532383131382f66303763323037322d303738622d313165342d393365392d6363623133333938323465362e676966" alt="Demo" data-canonical-src="https://cloud.githubusercontent.com/assets/398893/3528118/f07c2072-078b-11e4-93e9-ccb1339824e6.gif"></p> 
      <h2> <a href="#install"></a>Install</h2> 
      <p>Go to <code>Atom &gt; Preferences...</code> then search for <strong>JavaScript Snippets</strong> in Packages tab. Restart atom.</p> 
      <h2> <a href="#development"></a>Development</h2> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="source shell"><span>$&nbsp;</span><span class="support function builtin shell"><span>cd</span></span><span>&nbsp;</span><span class="keyword operator tilde shell"><span>~</span></span><span>/.atom/packages</span></span>
       </div>
       <div class="line">
        <span class="source shell"><span>$&nbsp;git&nbsp;clone&nbsp;https://github.com/zenorocha/atom-javascript-snippets.git</span></span>
       </div>
       <div class="line">
        <span class="source shell"><span>$&nbsp;</span><span class="support function builtin shell"><span>cd</span></span><span>&nbsp;atom-javascript-snippets</span></span>
       </div>
       <div class="line">
        <span class="source shell"><span>$&nbsp;apm&nbsp;install</span></span>
       </div>
       <div class="line">
        <span class="source shell"><span>$&nbsp;apm&nbsp;link</span></span>
       </div></pre> 
      <h2> <a href="#console"></a>Console</h2> 
      <h3> <a href="#cd-consoledir"></a>[cd] console.dir</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>console.dir(${1:obj});</span></span>
       </div></pre> 
      <h3> <a href="#ce-consoleerror"></a>[ce] console.error</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>console.error(${1:obj});</span></span>
       </div></pre> 
      <h3> <a href="#ci-consoleinfo"></a>[ci] console.info</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>console.info(${1:obj});</span></span>
       </div></pre> 
      <h3> <a href="#cl-consolelog"></a>[cl] console.log</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>console.log(${1:obj});</span></span>
       </div></pre> 
      <h3> <a href="#cw-consolewarn"></a>[cw] console.warn</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>console.warn(${1:obj});</span></span>
       </div></pre> 
      <h3> <a href="#de-debugger"></a>[de] debugger</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>debugger;</span></span>
       </div></pre> 
      <h2> <a href="#dom"></a>DOM</h2> 
      <h3> <a href="#ae-addeventlistener"></a>[ae] addEventListener</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.addEventListener('${2:event}',&nbsp;function(e)&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>});</span></span>
       </div></pre> 
      <h3> <a href="#ac-appendchild"></a>[ac] appendChild</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.appendChild(${2:elem});</span></span>
       </div></pre> 
      <h3> <a href="#rc-removechild"></a>[rc] removeChild</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.removeChild(${2:elem});</span></span>
       </div></pre> 
      <h3> <a href="#cel-createelement"></a>[cel] createElement</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.createElement(${2:elem});</span></span>
       </div></pre> 
      <h3> <a href="#cdf-createdocumentfragment"></a>[cdf] createDocumentFragment</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.createDocumentFragment();</span></span>
       </div></pre> 
      <h3> <a href="#ca-classlistadd"></a>[ca] classList.add</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.classList.add('${2:class}');</span></span>
       </div></pre> 
      <h3> <a href="#ct-classlisttoggle"></a>[ct] classList.toggle</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.classList.toggle('${2:class}');</span></span>
       </div></pre> 
      <h3> <a href="#cr-classlistremove"></a>[cr] classList.remove</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.classList.remove('${2:class}');</span></span>
       </div></pre> 
      <h3> <a href="#gi-getelementbyid"></a>[gi] getElementById</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.getElementById('${2:id}');</span></span>
       </div></pre> 
      <h3> <a href="#gc-getelementsbyclassname"></a>[gc] getElementsByClassName</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.getElementsByClassName('${2:class}');</span></span>
       </div></pre> 
      <h3> <a href="#gt-getelementsbytagname"></a>[gt] getElementsByTagName</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.getElementsByTagName('${2:tag}');</span></span>
       </div></pre> 
      <h3> <a href="#ga-getattribute"></a>[ga] getAttribute</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.getAttribute('${2:attr}');</span></span>
       </div></pre> 
      <h3> <a href="#sa-setattribute"></a>[sa] setAttribute</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.setAttribute('${2:attr}',&nbsp;${3:value});</span></span>
       </div></pre> 
      <h3> <a href="#ra-removeattribute"></a>[ra] removeAttribute</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.removeAttribute('${2:attr}');</span></span>
       </div></pre> 
      <h3> <a href="#ih-innerhtml"></a>[ih] innerHTML</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.innerHTML&nbsp;=&nbsp;'${2:elem}';</span></span>
       </div></pre> 
      <h3> <a href="#tc-textcontent"></a>[tc] textContent</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.textContent&nbsp;=&nbsp;'${2:content}';</span></span>
       </div></pre> 
      <h3> <a href="#qs-queryselector"></a>[qs] querySelector</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.querySelector('${2:selector}');</span></span>
       </div></pre> 
      <h3> <a href="#qsa-queryselectorall"></a>[qsa] querySelectorAll</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:document}.querySelectorAll('${2:selector}');</span></span>
       </div></pre> 
      <h2> <a href="#loop"></a>Loop</h2> 
      <h3> <a href="#fe-foreach"></a>[fe] forEach</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:myArray}.forEach(function(${2:elem})&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>});</span></span>
       </div></pre> 
      <h3> <a href="#fi-for-in"></a>[fi] for in</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>for&nbsp;(${1:prop}&nbsp;in&nbsp;${2:obj})&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(${2:obj}.hasOwnProperty(${1:prop}))&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>}</span></span>
       </div></pre> 
      <h2> <a href="#function"></a>Function</h2> 
      <h3> <a href="#fn-function"></a>[fn] function</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>function&nbsp;${1:methodName}&nbsp;(${2:arguments})&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>}</span></span>
       </div></pre> 
      <h3> <a href="#afn-anonymous-function"></a>[afn] anonymous function</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>function(${1:arguments})&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>}</span></span>
       </div></pre> 
      <h3> <a href="#pr-prototype"></a>[pr] prototype</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:ClassName}.prototype.${2:methodName}&nbsp;=&nbsp;function(${3:arguments})&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>}</span></span>
       </div></pre> 
      <h3> <a href="#iife-immediately-invoked-function-expression"></a>[iife] immediately-invoked function expression</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>(function(${1:window},&nbsp;${2:document})&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>})(${1:window},&nbsp;${2:document});</span></span>
       </div></pre> 
      <h3> <a href="#call-function-call"></a>[call] function call</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:methodName}.call(${2:context},&nbsp;${3:arguments})</span></span>
       </div></pre> 
      <h3> <a href="#apply-function-apply"></a>[apply] function apply</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:methodName}.apply(${2:context},&nbsp;[${3:arguments}])</span></span>
       </div></pre> 
      <h3> <a href="#ofn-function-as-a-property-of-an-object"></a>[ofn] function as a property of an object</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>${1:functionName}:&nbsp;function(${2:arguments})&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${3://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>}</span></span>
       </div></pre> 
      <h2> <a href="#json"></a>JSON</h2> 
      <h3> <a href="#jp-jsonparse"></a>[jp] JSON.parse</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>JSON.parse(${1:obj});</span></span>
       </div></pre> 
      <h3> <a href="#js-jsonstringify"></a>[js] JSON.stringify</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>JSON.stringify(${1:obj});</span></span>
       </div></pre> 
      <h2> <a href="#timer"></a>Timer</h2> 
      <h3> <a href="#si-setinterval"></a>[si] setInterval</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>setInterval(function()&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>},&nbsp;${1:delay});</span></span>
       </div></pre> 
      <h3> <a href="#st-settimeout"></a>[st] setTimeout</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>setTimeout(function()&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>},&nbsp;${1:delay});</span></span>
       </div></pre> 
      <h2> <a href="#nodejs"></a>NodeJS</h2> 
      <h3> <a href="#ase-assertequal"></a>[ase] assert.equal</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>assert.equal(${1:actual},&nbsp;${2:expected});</span></span>
       </div></pre> 
      <h3> <a href="#asd-assertdeepequal"></a>[asd] assert.deepEqual</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>assert.deepEqual(${1:actual},&nbsp;${2:expected});</span></span>
       </div></pre> 
      <h3> <a href="#asn-assertnotequal"></a>[asn] assert.notEqual</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>assert.notEqual(${1:actual},&nbsp;${2:expected});</span></span>
       </div></pre> 
      <h3> <a href="#me-moduleexports"></a>[me] module.exports</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>module.exports&nbsp;=&nbsp;${1:name};</span></span>
       </div></pre> 
      <h3> <a href="#pe-processexit"></a>[pe] process.exit</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>process.exit(${1:code});</span></span>
       </div></pre> 
      <h3> <a href="#re-require"></a>[re] require</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>require('${1:module}');</span></span>
       </div></pre> 
      <h2> <a href="#bdd"></a>BDD</h2> 
      <h3> <a href="#desc-describe"></a>[desc] describe</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>describe('${1:description}',&nbsp;function()&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>});</span></span>
       </div></pre> 
      <h3> <a href="#ita-it-asynchronous"></a>[ita] it asynchronous</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>it('${1:description}',&nbsp;function(done)&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>});</span></span>
       </div></pre> 
      <h3> <a href="#its-it-synchronous"></a>[its] it synchronous</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>it('${1:description}',&nbsp;function()&nbsp;{</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>&nbsp;&nbsp;&nbsp;&nbsp;${0://&nbsp;body...}</span></span>
       </div>
       <div class="line">
        <span class="text plain null-grammar"><span>});</span></span>
       </div></pre> 
      <h3> <a href="#itp-it-pending"></a>[itp] it pending</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>it('${1:description}');</span></span>
       </div></pre> 
      <h2> <a href="#misc"></a>Misc</h2> 
      <h3> <a href="#us-use-strict"></a>[us] use strict</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>'use&nbsp;strict';</span></span>
       </div></pre> 
      <h3> <a href="#al-alert"></a>[al] alert</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>alert('${1:msg}');</span></span>
       </div></pre> 
      <h3> <a href="#co-confirm"></a>[co] confirm</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>confirm('${1:msg}');</span></span>
       </div></pre> 
      <h3> <a href="#pm-prompt"></a>[pm] prompt</h3> 
      <pre class="editor editor-colors">
       <div class="line">
        <span class="text plain null-grammar"><span>prompt('${1:msg}');</span></span>
       </div></pre> 
      <h2> <a href="#contributing"></a>Contributing</h2> 
      <ol> 
       <li>Fork it!</li> 
       <li>Create your feature branch: <code>git checkout -b my-new-feature</code> </li> 
       <li>Commit your changes: <code>git commit -m 'Add some feature'</code> </li> 
       <li>Push to the branch: <code>git push origin my-new-feature</code> </li> 
       <li>Submit a pull request :D</li> 
      </ol> 
      <h2> <a href="#history"></a>History</h2> 
      <p>Check <a href="https://github.com/zenorocha/atom-javascript-snippets/releases">Release</a> list.</p> 
      <h2> <a href="#license"></a>License</h2> 
      <p><a href="http://zenorocha.mit-license.org/">MIT License</a> © Zeno Rocha</p> 
     </div> 
    </div> 
    <div id="flag-modal" style="display:none"> 
     <h2> I think this package is bad news. </h2> 
     <p> Good catch. Let us know what about this package looks wrong to you, and we'll investigate right away. </p> 
     <form action="/packages/javascript-snippets/flag" accept-charset="UTF-8" method="post">
      <input name="utf8" type="hidden" value="?">
      <input type="hidden" name="authenticity_token" value="GGOOEJXdMRJ/cFHsP+WqKppjM0hjuTYmHowoXLpbp2ZHJ2o3l80EcFjWs+FTbwZXvq9F7rRzQZEjgjsU0tOGYg=="> 
      <textarea rows="5" name="flag[message]" id="flag_message">
</textarea> 
      <input type="submit" name="commit" value="Flag javascript-snippets" class="button primary flag-button"> 
     </form>
    </div> 
   </div> 
   <div class="footer-pad"></div> 
  </div> 
  <footer> 
   <div class="footer"> 
    <div class="wrapper no-pad"> 
     <ul class="footer-left"> 
      <li><a href="/terms">Terms of Use</a></li> 
      <li><a href="https://help.github.com/articles/github-privacy-policy/">Privacy</a></li> 
      <li><a href="https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md">Code of Conduct</a></li> 
      <li><a href="/releases">Releases</a></li> 
      <li><a href="/faq">FAQ</a></li> 
      <li><a href="/contact">Contact</a></li> 
     </ul> 
     <div class="footer-right"> 
      <a href="https://github.com"><span class="octicon octicon-code"></span> with <span class="octicon octicon-heart"></span> by <span class="octicon octicon-logo-github"></span></a> 
     </div> 
    </div> 
   </div> 
  </footer>   
 </body>
</html>