<!doctype html>
<html class="no-js hasSidebar hasPageActions hasBreadcrumb " lang="en-us" dir="ltr">
 <head> 
  <meta charset="utf-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <meta property="og:title" content="Java developer reference for Azure Functions"> 
  <meta property="og:image" content="https://docs.microsoft.com/_themes/docs.theme/master/en-us/_themes/images/microsoft-header.png"> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:site" content="@docsmsft"> 
  <meta name="twitter:title" content="Java developer reference for Azure Functions"> 
  <meta name="twitter:description" content="Understand how to develop functions with Java."> 
  <meta name="twitter:image" content="https://docs.microsoft.com/_themes/docs.theme/master/en-us/_themes/images/microsoft-header.png"> 
  <meta name="twitter:image:alt" content="Microsoft Logo"> 
  <meta name="breadcrumb_path" content="/azure/bread/toc.json"> 
  <meta name="ms.devlang" content="java"> 
  <meta name="ms.tgt_pltfrm" content="multiple"> 
  <meta name="author" content="rloutlaw"> 
  <meta name="description" content="Understand how to develop functions with Java."> 
  <meta name="ms.author" content="routlaw"> 
  <meta name="manager" content="justhe"> 
  <meta name="documentationcenter" content="na"> 
  <meta name="keywords" content="azure functions, functions, event processing, webhooks, dynamic compute, serverless architecture, java"> 
  <meta name="ms.topic" content="article"> 
  <meta name="services" content="functions"> 
  <meta name="ms.service" content="functions"> 
  <meta name="ms.date" content="09/20/2017"> 
  <meta name="ms.workload" content="na"> 
  <meta name="search.ms_sitename" content="Docs"> 
  <meta name="search.ms_docsetname" content="azure-documents"> 
  <meta name="version" content="0"> 
  <meta name="locale" content="en-us"> 
  <meta name="site_name" content="Docs"> 
  <meta name="search.ms_product" content="Azure"> 
  <meta name="depot_name" content="Azure.azure-documents"> 
  <meta name="updated_at" content="2017-10-05 05:07 PM"> 
  <meta name="gitcommit" content="https://github.com/MicrosoftDocs/azure-docs-pr/blob/bc5ffc917ba98cb5f41dcf1b80d4c731615fb9e9/articles/azure-functions/functions-reference-java.md"> 
  <meta name="original_content_git_url" content="https://github.com/MicrosoftDocs/azure-docs-pr/blob/live/articles/azure-functions/functions-reference-java.md"> 
  <meta name="document_id" content="5e85de04-2f8b-68ea-eeb9-dcc65f216332"> 
  <meta name="pagetype" content="Conceptual"> 
  <meta name="toc_rel" content="TOC.json"> 
  <meta name="pdf_url_template" content="https://docs.microsoft.com/pdfstore/en-us/Azure.azure-documents/{branchName}{pdfName}"> 
  <meta name="word_count" content="1218"> 
  <meta name="scope" content="Azure"> 
  <link href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-java" rel="canonical"> 
  <title>Java developer reference for Azure Functions | Microsoft Docs</title> 
  <link rel="stylesheet" href="/_themes/docs.theme/master/en-us/_themes/css/10d210ca85653cfc346f.site.css "> 
  <link rel="stylesheet" href="/_themes/docs.theme/master/en-us/_themes/css/10d210ca85653cfc346f.conceptual.css "> 
  <link rel="stylesheet" href="/_themes/docs.theme/master/en-us/_themes/global/css/azureHeader.css?v=4"> 
  <link rel="stylesheet" href="https://azure.microsoft.com/en-us/asset/menucss/"> 
  <script>
	var msDocs = {
		data:{
			contentLocale: 'en-us',
			contentDir: 'ltr',
			userLocale: 'en-us',
			userDir: 'ltr',
			pathToTheme: '/_themes/docs.theme/master/en-us/_themes/',
			pageTemplate: 'Conceptual',
			brand: 'azure',
			forceVersionPicker:false		},
		functions:{},
		settings:{
			extendBreadcrumb: false
		}
	};
	if (!('Promise' in window && 'resolve' in window.Promise && 'reject' in window.Promise && 'all' in window.Promise && 'race' in window.Promise)) {
		document.write('<script src="/_themes/docs.theme/master/en-us/_themes/global/js/bluebird.min.js"><\/script>');
	}
	</script> 
  <!--[if lt IE 9]>
		<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.12.4.min.js"></script>
		<script src="/_themes/docs.theme/master/en-us/_themes/global/js/polyfills/all.js"></script>
<script src="/_themes/docs.theme/master/en-us/_themes/global/js/azureHeader/respond_and_ie8Setup_combine.js"></script>	<![endif]--> 
  <!--[if gte IE 9]><!--> 
  <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.2.4.min.js"></script> 
  <!--<![endif]--> 
  <script>window.jQuery || document.write('<script src="/_themes/docs.theme/master/en-us/_themes/global/js/jquery/jquery-1.12.4.min.js"><\/script>')</script> 
  <script src="/_themes/docs.theme/master/en-us/_themes/global/js/global.min.js?v=271"></script> 
  <script src="/_themes/docs.theme/master/en-us/_themes/global/js/azureHeader/loader.js?v=4"></script> 
 </head> 
 <body> 
  <div id="lca-cookie-notification" class="cookieContainer"> 
  </div> 
  <div id="headerAreaHolder" class="az_h default" ms.pgarea="header" data-bi-name="header"> 
   <div class="azure-header_holder"> 
    <div class="azure-header"> 
     <header class="azure-header_temp"> 
      <div class="row column"> 
       <a href="https://azure.microsoft.com/en-us/" class="logo" title="Microsoft Azure"> 
        <svg x="0px" y="0px" width="165px" height="20px" viewbox="0 0 165 20"> 
         <path fill="#29A5DE" d="M18,19H16V7.1C16,6.2,16,5,16.1,3.7h0c-0.2,0.8-0.4,1.4-0.5,1.7L9.5,19h-1l-6-13.5c-0.2-0.4-0.3-1-0.5-1.8
							h0C2,4.4,2,5.5,2,7.1V19H0V1.3h2.7l5.4,12.3c0.4,0.9,0.7,1.7,0.8,2.1H9c0.4-1,0.6-1.7,0.9-2.2l5.5-12.3H18V19z" /> 
         <path fill="#29A5DE" d="M22.8,3.1c-0.4,0-0.7-0.1-0.9-0.4s-0.4-0.6-0.4-0.9s0.1-0.7,0.4-0.9c0.3-0.3,0.6-0.4,0.9-0.4
							c0.4,0,0.7,0.1,0.9,0.4c0.3,0.3,0.4,0.6,0.4,0.9c0,0.4-0.1,0.7-0.4,0.9C23.5,3,23.2,3.1,22.8,3.1z M23.8,19h-2V6.3h2V19z" /> 
         <path fill="#29A5DE" d="M35.8,18.4c-1,0.6-2.1,0.9-3.5,0.9c-1.8,0-3.3-0.6-4.4-1.8c-1.1-1.2-1.7-2.7-1.7-4.6c0-2.1,0.6-3.7,1.8-5
							C29.4,6.7,30.9,6,32.9,6C34,6,35,6.2,35.9,6.7v2.1c-0.9-0.7-1.9-1-3-1c-1.3,0-2.3,0.5-3.2,1.4c-0.8,0.9-1.2,2.1-1.2,3.6
							c0,1.5,0.4,2.6,1.2,3.5c0.8,0.9,1.8,1.3,3.1,1.3c1.1,0,2.1-0.4,3.1-1.1V18.4z" /> 
         <path fill="#29A5DE" d="M44.9,8.4C44.5,8.1,44,8,43.3,8c-0.9,0-1.6,0.4-2.2,1.2c-0.6,0.8-0.9,1.9-0.9,3.3V19h-2V6.3h2v2.6h0
							c0.3-0.9,0.7-1.6,1.3-2.1c0.6-0.5,1.3-0.7,2-0.7c0.5,0,0.9,0.1,1.2,0.2V8.4z" /> 
         <path fill="#29A5DE" d="M51.4,19.3c-1.9,0-3.4-0.6-4.5-1.8c-1.1-1.2-1.7-2.7-1.7-4.7c0-2.1,0.6-3.8,1.7-5S49.7,6,51.7,6
							c1.9,0,3.4,0.6,4.4,1.7c1.1,1.2,1.6,2.8,1.6,4.8c0,2-0.6,3.6-1.7,4.8C54.8,18.6,53.3,19.3,51.4,19.3z M51.5,7.7
							c-1.3,0-2.3,0.4-3.1,1.3c-0.8,0.9-1.1,2.1-1.1,3.7c0,1.5,0.4,2.7,1.1,3.5c0.8,0.9,1.8,1.3,3.1,1.3c1.3,0,2.3-0.4,3-1.3
							c0.7-0.8,1.1-2,1.1-3.6c0-1.6-0.4-2.8-1.1-3.6C53.8,8.2,52.8,7.7,51.5,7.7z" /> 
         <path fill="#29A5DE" d="M59.5,18.5v-2.2c1.1,0.8,2.3,1.2,3.6,1.2c1.8,0,2.7-0.6,2.7-1.8c0-0.3-0.1-0.6-0.2-0.9
							c-0.2-0.2-0.4-0.4-0.6-0.6c-0.3-0.2-0.6-0.3-0.9-0.5c-0.3-0.1-0.7-0.3-1.1-0.4c-0.6-0.2-1-0.4-1.5-0.7c-0.4-0.2-0.8-0.5-1.1-0.8
							c-0.3-0.3-0.5-0.6-0.6-1c-0.1-0.4-0.2-0.8-0.2-1.3c0-0.6,0.1-1.1,0.4-1.6C60.2,7.7,60.5,7.3,61,7c0.5-0.3,1-0.5,1.5-0.7
							C63.1,6.1,63.7,6,64.3,6c1.1,0,2.1,0.2,2.9,0.6v2c-0.9-0.6-2-0.9-3.2-0.9c-0.4,0-0.7,0-1,0.1c-0.3,0.1-0.6,0.2-0.8,0.4
							c-0.2,0.2-0.4,0.3-0.5,0.6c-0.1,0.2-0.2,0.5-0.2,0.7c0,0.3,0.1,0.6,0.2,0.8c0.1,0.2,0.3,0.4,0.5,0.6c0.2,0.2,0.5,0.3,0.8,0.5
							c0.3,0.1,0.7,0.3,1.1,0.5c0.6,0.2,1.1,0.4,1.5,0.7c0.4,0.2,0.8,0.5,1.1,0.8c0.3,0.3,0.6,0.6,0.7,1c0.2,0.4,0.3,0.8,0.3,1.3
							c0,0.6-0.1,1.2-0.4,1.6c-0.3,0.5-0.6,0.8-1.1,1.1c-0.5,0.3-1,0.5-1.6,0.7c-0.6,0.1-1.2,0.2-1.9,0.2C61.6,19.3,60.4,19,59.5,18.5z" /> 
         <path fill="#29A5DE" d="M75.6,19.3c-1.9,0-3.4-0.6-4.5-1.8c-1.1-1.2-1.7-2.7-1.7-4.7c0-2.1,0.6-3.8,1.7-5C72.4,6.6,73.9,6,75.9,6
							c1.9,0,3.4,0.6,4.4,1.7c1.1,1.2,1.6,2.8,1.6,4.8c0,2-0.6,3.6-1.7,4.8C79,18.6,77.5,19.3,75.6,19.3z M75.7,7.7
							c-1.3,0-2.3,0.4-3.1,1.3c-0.8,0.9-1.1,2.1-1.1,3.7c0,1.5,0.4,2.7,1.1,3.5c0.8,0.9,1.8,1.3,3.1,1.3c1.3,0,2.3-0.4,3-1.3
							c0.7-0.8,1.1-2,1.1-3.6c0-1.6-0.4-2.8-1.1-3.6C78.1,8.2,77,7.7,75.7,7.7z" /> 
         <path fill="#29A5DE" d="M97.6,8.1V6.3h-3.2V2.6l-2,0.7v3.1h-2.6h-1.5h-1.4V4.4c0-1.8,0.7-2.7,2.1-2.7c0.5,0,0.9,0.1,1.3,0.3V0.2
							C89.9,0.1,89.4,0,88.8,0c-1.1,0-2.1,0.4-2.9,1.2c-0.8,0.8-1.1,1.8-1.1,3.1v2h-2.2v1.7h2.2V19h2V8.1h1.4h1.5h2.6v7.5
							c0,2.5,1.1,3.7,3.3,3.7c0.8,0,1.4-0.1,1.9-0.4v-1.7c-0.4,0.3-0.8,0.4-1.3,0.4c-0.7,0-1.1-0.2-1.4-0.5c-0.3-0.4-0.4-1-0.4-1.8V8.1
							H97.6z" /> 
         <path fill="#29A5DE" d="M119.9,19h-2.3l-1.9-5h-7.5l-1.8,5h-2.3L111,1.3h2.1L119.9,19z M115.1,12.1l-2.8-7.5
							c-0.1-0.2-0.2-0.6-0.3-1.2h0c-0.1,0.5-0.2,0.9-0.3,1.2l-2.7,7.5H115.1z" /> 
         <path fill="#29A5DE" d="M130.4,6.9l-7.5,10.3h7.4V19H120v-0.6l7.5-10.3h-6.8V6.3h9.7V6.9z" /> 
         <path fill="#29A5DE" d="M142.6,19h-2v-2h0c-0.8,1.5-2.1,2.3-3.9,2.3c-3,0-4.5-1.8-4.5-5.4V6.3h2v7.2c0,2.7,1,4,3.1,4
							c1,0,1.8-0.4,2.4-1.1c0.6-0.7,1-1.7,1-2.9V6.3h2V19z" /> 
         <path fill="#29A5DE" d="M152.6,8.4c-0.4-0.3-0.9-0.4-1.5-0.4c-0.9,0-1.6,0.4-2.2,1.2c-0.6,0.8-0.9,1.9-0.9,3.3V19h-2V6.3h2v2.6h0
							c0.3-0.9,0.7-1.6,1.3-2.1c0.6-0.5,1.3-0.7,2-0.7c0.5,0,0.9,0.1,1.2,0.2V8.4z" /> 
         <path fill="#29A5DE" d="M164,13.1h-8.9c0,1.4,0.4,2.5,1.1,3.3c0.7,0.8,1.7,1.1,3,1.1c1.4,0,2.7-0.5,3.9-1.4V18
							c-1.1,0.8-2.6,1.2-4.4,1.2c-1.8,0-3.2-0.6-4.2-1.7c-1-1.1-1.5-2.8-1.5-4.8c0-2,0.6-3.6,1.7-4.8c1.1-1.2,2.5-1.9,4.1-1.9
							s2.9,0.5,3.8,1.6s1.4,2.6,1.4,4.4V13.1z M161.9,11.4c0-1.2-0.3-2.1-0.8-2.7c-0.6-0.6-1.3-1-2.3-1c-1,0-1.8,0.3-2.4,1
							c-0.7,0.7-1.1,1.6-1.2,2.7H161.9z" /> 
        </svg> </a> 
       <a href="#" class="small-search" onclick="return false"><span class="icon icon-search"></span></a> 
      </div> 
     </header> 
    </div> 
   </div> 
  </div> 
  <div class="container mainContainer" lang="en-us" dir="ltr" ms.pgarea="body" data-bi-name="body"> 
   <main role="main" ms.cmpgrp="content" data-bi-name="content"> 
    <div id="main"> 
     <h1 id="azure-functions-java-developer-guide" sourcefile="articles/azure-functions/functions-reference-java.md" sourcestartlinenumber="17" sourceendlinenumber="17">Azure Functions Java developer guide</h1> 
     <div class="metadata loading" ms.cmpgrp="page info" data-bi-name="page info"> 
      <div> 
       <time class="date" datetime="09/20/2017">09/20/2017</time> 
       <span class="reading-time">6 minutes to read</span> 
       <span class="contributors-text" hidden>Contributors</span> 
       <ul class="contributors" ms.cmpgrp="contributors" data-bi-name="contributors" hidden> 
        <li><a href="https://github.com/rloutlaw" title="Robert Outlaw" ms.cmpnm="contributorprofile" data-bi-name="contributorprofile"><img data-src="https://github.com/rloutlaw.png?size=16" alt="Robert Outlaw"></a></li> 
        <li><a href="https://github.com/ggailey777" title="Glenn Gailey" ms.cmpnm="contributorprofile" data-bi-name="contributorprofile"><img data-src="https://github.com/ggailey777.png?size=16" alt="Glenn Gailey"></a></li> 
       </ul> 
      </div> 
      <nav id="center-doc-outline" class="doc-outline" ms.cmpgrp="intopic toc" data-bi-name="intopic toc" role="navigation" aria-label="On page navigation"> 
       <h3>In this article</h3> 
      </nav> 
     </div> 
     <div>
      <div class="content"> 
       <div class="op_single_selector">
        <div class="op_single_selector">
         <ul> 
          <li><a href="functions-reference-csharp" data-linktype="relative-path">C# script</a> </li> 
          <li><a href="functions-reference-fsharp" data-linktype="relative-path">F# script</a> </li> 
          <li><a href="functions-reference-node" data-linktype="relative-path">JavaScript</a> </li> 
          <li><a href="functions-reference-java" data-linktype="relative-path">Java</a> </li> 
         </ul> 
        </div> 
       </div> 
       <h2 id="programming-model">Programming model</h2> 
       <p>Your Azure function should be a stateless class method that processes input and produces output. Although you are allowed to write instance methods, your function must not depend on any instance fields of the class. All function methods must have a <code>public</code> access modifier.</p> 
       <h2 id="triggers-and-annotations">Triggers and annotations</h2> 
       <p>Typically an Azure function is invoked because of an external trigger. Your function needs to process that trigger and its associated inputs and produce one or more outputs.</p> 
       <p>Java annotations are included in the <code>azure-functions-java-core</code> package to bind input and outputs to your methods. The supported input triggers and output binding annotations are included in the following table:</p> 
       <table> 
        <thead> 
         <tr> 
          <th>Binding</th> 
          <th>Annotation</th> 
         </tr> 
        </thead> 
        <tbody> 
         <tr> 
          <td>CosmosDB</td> 
          <td>N/A</td> 
         </tr> 
         <tr> 
          <td>HTTP</td> 
          <td>
           <ul>
            <li><code>HttpTrigger</code></li>
            <li><code>HttpOutput</code></li>
           </ul></td> 
         </tr> 
         <tr> 
          <td>Mobile Apps</td> 
          <td>N/A</td> 
         </tr> 
         <tr> 
          <td>Notification Hubs</td> 
          <td>N/A</td> 
         </tr> 
         <tr> 
          <td>Storage Blob</td> 
          <td>
           <ul>
            <li><code>BlobTrigger</code></li>
            <li><code>BlobOutput</code></li>
            <li><code>BlobOutput</code></li>
           </ul></td> 
         </tr> 
         <tr> 
          <td>Storage Queue</td> 
          <td>
           <ul>
            <li><code>QueueTrigger</code></li>
            <li><code>QueueOutput</code></li>
           </ul></td> 
         </tr> 
         <tr> 
          <td>Storage Table</td> 
          <td>
           <ul>
            <li><code>TableInput</code></li>
            <li><code>TableOutput</code></li>
           </ul></td> 
         </tr> 
         <tr> 
          <td>Timer</td> 
          <td>
           <ul>
            <li><code>TimerTrigger</code></li>
           </ul></td> 
         </tr> 
         <tr> 
          <td>Twilio</td> 
          <td>N/A</td> 
         </tr> 
        </tbody> 
       </table> 
       <p>Trigger inputs and outputs can also be defined in the <a href="/en-us/azure/azure-functions/functions-reference#function-code" data-linktype="absolute-path">function.json</a> for your application.</p> 
       <div class="IMPORTANT">
        <h5>Important</h5>
        <p>You must configure an Azure Storage account in your <a href="/en-us/azure/azure-functions/functions-run-local#local-settings-file" data-linktype="absolute-path">local.settings.json</a> to run Azure Storage Blob, Queue, or Table triggers locally.</p> 
       </div> 
       <p>Example using annotations:</p> 
       <pre><code class="lang-java">import com.microsoft.azure.serverless.functions.annotation.HttpTrigger;
import com.microsoft.azure.serverless.functions.ExecutionContext;

public class Function {
    public String echo(@HttpTrigger(name = "req", methods = {"post"},  authLevel = AuthorizationLevel.ANONYMOUS) 
        String req, ExecutionContext context) {
        return String.format(req);
    }
}
</code></pre>
       <p>The same function written without annotations:</p> 
       <pre><code class="lang-java">package com.example;

public class MyClass {
    public static String echo(String in) {
        return in;
    }
}
</code></pre>
       <p>with the corresponding <code>function.json</code>:</p> 
       <pre><code class="lang-json">{
  "scriptFile": "azure-functions-example.jar",
  "entryPoint": "com.example.MyClass.echo",
  "bindings": [
    {
      "type": "httpTrigger",
      "name": "req",
      "direction": "in",
      "authLevel": "anonymous",
      "methods": [ "post" ]
    },
    {
      "type": "http",
      "name": "$return",
      "direction": "out"
    }
  ]
}
</code></pre>
       <h2 id="data-types">Data Types</h2> 
       <p>You are free to use all the data types in Java for the input and output data, including native types; customized Java types and specialized Azure types defined in <code>azure-functions-java-core</code> package. The Azure Functions runtime attempts convert the input received into the type requested by your code.</p> 
       <h3 id="strings">Strings</h3> 
       <p>Values passed into function methods will be cast to Strings if the corresponding input parameter type for the function is of type <code>String</code>. </p> 
       <h3 id="plain-old-java-objects-pojos">Plain old Java objects (POJOs)</h3> 
       <p>Strings formatted with JSON will be cast to Java types if the input of the function method expects that Java type. This conversion allows you to pass JSON inputs into your functions and work with Java types in your code without having to implement the conversion in your own code.</p> 
       <p>POJO types used as inputs to functions must the same <code>public</code> access modifier as the function methods they are being used in. You don't have to declare POJO class fields <code>public</code>. For example, a JSON string <code>{ "x": 3 }</code> is able to be converted to the following POJO type:</p> 
       <pre><code class="lang-Java">public class MyData {
    private int x;
}
</code></pre>
       <h3 id="binary-data">Binary data</h3> 
       <p>Binary data is represented as a <code>byte[]</code> in your Azure functions code. Bind binary inputs or outputs to your functions by setting the <code>dataType</code> field in your function.json to <code>binary</code>:</p> 
       <pre><code class="lang-json"> {
  "scriptFile": "azure-functions-example.jar",
  "entryPoint": "com.example.MyClass.echo",
  "bindings": [
    {
      "type": "blob",
      "name": "content",
      "direction": "in",
      "dataType": "binary",
      "path": "container/myfile.bin",
      "connection": "ExampleStorageAccount"
    },
  ]
}
</code></pre>
       <p>Then use it in your function code:</p> 
       <pre><code class="lang-java">// Class definition and imports are omitted here
public static String echoLength(byte[] content) {
}
</code></pre>
       <p>Use <code>OutputBinding&lt;byte[]&gt;</code> type to make a binary output binding.</p> 
       <h2 id="function-method-overloading">Function method overloading</h2> 
       <p>You are allowed to overload function methods with the same name but with different types. For example, you can have both <code>String echo(String s)</code> and <code>String echo(MyType s)</code> in one class, and Azure Functions runtime decides which one to invoke by examine the actual input type (for HTTP input, MIME type <code>text/plain</code> leads to <code>String</code> while <code>application/json</code> represents <code>MyType</code>).</p> 
       <h2 id="inputs">Inputs</h2> 
       <p>Input are divided into two categories in Azure Functions: one is the trigger input and the other is the additional input. Although they are different in <code>function.json</code>, the usage is identical in Java code. Let's take the following code snippet as an example:</p> 
       <pre><code class="lang-java">package com.example;

import com.microsoft.azure.serverless.functions.annotation.BindingName;

public class MyClass {
    public static String echo(String in, @BindingName("item") MyObject obj) {
        return "Hello, " + in + " and " + obj.getKey() + ".";
    }

    private static class MyObject {
        public String getKey() { return this.RowKey; }
        private String RowKey;
    }
}
</code></pre>
       <p>The <code>@BindingName</code> annotation accepts a <code>String</code> property that represents the name of the binding/trigger defined in <code>function.json</code>:</p> 
       <pre><code class="lang-json">{
  "scriptFile": "azure-functions-example.jar",
  "entryPoint": "com.example.MyClass.echo",
  "bindings": [
    {
      "type": "httpTrigger",
      "name": "req",
      "direction": "in",
      "authLevel": "anonymous",
      "methods": [ "put" ],
      "route": "items/{id}"
    },
    {
      "type": "table",
      "name": "item",
      "direction": "in",
      "tableName": "items",
      "partitionKey": "Example",
      "rowKey": "{id}",
      "connection": "ExampleStorageAccount"
    },
    {
      "type": "http",
      "name": "$return",
      "direction": "out"
    }
  ]
}
</code></pre>
       <p>So when this function is invoked, the HTTP request payload passes a <code>String</code> for argument <code>in</code> and an Azure Table Storage <code>MyObject</code> type passed to argument <code>obj</code>.</p> 
       <h2 id="outputs">Outputs</h2> 
       <p>Outputs can be expressed both in return value or output parameters. If there is only one output, you are recommended to use the return value. For multiple outputs, you have to use output parameters.</p> 
       <p>Return value is the simplest form of output, you just return the value of any type, and Azure Functions runtime will try to marshal it back to the actual type (such as an HTTP response). In <code>functions.json</code>, you use <code>$return</code> as the name of the output binding.</p> 
       <p>To produce multiple output values, use <code>OutputParameter&lt;T&gt;</code> type defined in the <code>azure-functions-java-core</code> package. If you need to make an HTTP response and push a message to a queue as well, you can write something like:</p> 
       <pre><code class="lang-java">package com.example;

import com.microsoft.azure.serverless.functions.OutputParameter;
import com.microsoft.azure.serverless.functions.annotation.BindingName;

public class MyClass {
    public static String echo(String body, @BindingName("message") OutputParameter&lt;String&gt; queue) {
        String result = "Hello, " + body + ".";
        queue.setValue(result);
        return result;
    }
}
</code></pre>
       <p>and define the output binding in <code>function.json</code>:</p> 
       <pre><code class="lang-json">{
  "scriptFile": "azure-functions-example.jar",
  "entryPoint": "com.example.MyClass.echo",
  "bindings": [
    {
      "type": "httpTrigger",
      "name": "req",
      "direction": "in",
      "authLevel": "anonymous",
      "methods": [ "post" ]
    },
    {
      "type": "queue",
      "name": "message",
      "direction": "out",
      "queueName": "myqueue",
      "connection": "ExampleStorageAccount"
    },
    {
      "type": "http",
      "name": "$return",
      "direction": "out"
    }
  ]
}
</code></pre>
       <h2 id="specialized-types">Specialized Types</h2> 
       <p>Sometimes a function must have detailed control over inputs and outputs. Specialized types in the <code>azure-functions-java-core</code> package are provided for you to manipulate request information and tailor the return status of a HTTP trigger:</p> 
       <table> 
        <thead> 
         <tr> 
          <th>Specialized Type</th> 
          <th style="text-align:center">Target</th> 
          <th>Typical Usage</th> 
         </tr> 
        </thead> 
        <tbody> 
         <tr> 
          <td><code>HttpRequestMessage</code></td> 
          <td style="text-align:center">HTTP Trigger</td> 
          <td>Get method, headers, or queries</td> 
         </tr> 
         <tr> 
          <td><code>HttpResponseMessage</code></td> 
          <td style="text-align:center">HTTP Output Binding</td> 
          <td>Return status other than 200</td> 
         </tr> 
        </tbody> 
       </table> 
       <div class="NOTE">
        <h5>Note</h5>
        <p>You can also use <code>@BindingName</code> annotation to get HTTP headers and queries. For example, <code>@Bind("name") String query</code> iterates the HTTP request headers and queries and pass that value to the method. For example, <code>query</code> will be <code>"test"</code> if the request URL is <code>http://example.org/api/echo?name=test</code>.</p> 
       </div> 
       <h2 id="functions-execution-context">Functions execution context</h2> 
       <p>You interact with Azure Functions execution environment via the <code>ExecutionContext</code> object defined in the <code>azure-functions-java-core</code> package. Use the <code>ExecutionContext</code> object to use invocation information and functions runtime information in your code.</p> 
       <h3 id="logging">Logging</h3> 
       <p>Access to the Functions runtime logger is available through the <code>ExecutionContext</code> object. This logger is tied to the Azure monitor and allows you to flag warnings and errors encountered during function execution.</p> 
       <p>The following example code logs a warning message when the request body received is empty.</p> 
       <pre><code class="lang-java">import com.microsoft.azure.serverless.functions.annotation.HttpTrigger;
import com.microsoft.azure.serverless.functions.ExecutionContext;

public class Function {
    public String echo(@HttpTrigger(name = "req", methods = {"post"}, authLevel = AuthorizationLevel.ANONYMOUS) String req, ExecutionContext context) {
        if (req.isEmpty()) {
            context.getLogger().warning("Empty request body received in " + context.getInvocationId());
        }
        return String.format(req);
    }
}
</code></pre>
       <h2 id="next-steps">Next steps</h2> 
       <p>For more information, see the following resources:</p> 
       <ul> 
        <li><a href="functions-best-practices" data-linktype="relative-path">Best practices for Azure Functions</a></li> 
        <li><a href="functions-reference" data-linktype="relative-path">Azure Functions developer reference</a></li> 
        <li><a href="functions-triggers-bindings" data-linktype="relative-path">Azure Functions triggers and bindings</a></li> 
       </ul> 
      </div>
     </div> 
     <div id="comments-container" ms.cmpgrp="comments" data-bi-name="comments" role="form"></div> 
    </div> 
   </main> 
   <div class="pageActions"> 
    <div id="page-actions" ms.cmpgrp="pageactions" data-bi-name="pageactions" role="complementary"> 
     <div id="page-actions-content"> 
      <ul class="action-list"> 
       <li> <a href="#comments-container" id="comments-link" ms.cmpnm="comments" data-bi-name="comments"> <i class="icon icon-comments"></i>Comments </a> </li> 
       <li id="contenteditbtn"> <a href="https://github.com/Microsoft/azure-docs/blob/master/articles/azure-functions/functions-reference-java.md" title="Edit This Document" ms.cmpnm="edit" data-bi-name="edit"> <i class="icon icon-editor"></i>Edit </a> </li> 
       <li> <a href="#" class="sharebutton" title="Share This Document" ms.cmpnm="share" data-bi-name="share"><i class="icon icon-share"></i>Share</a> 
        <div class="share-container"> 
         <div>
          <a href="" class="share-twitter" ms.cmpnm="twitter" data-bi-name="twitter"><i class="icon icon-twitter"></i>Twitter</a>
         </div> 
         <div>
          <a href="" class="share-linkedin" ms.cmpnm="share-linkedin" data-bi-name="linkedin"><i class="icon icon-linkedin"></i>LinkedIn</a>
         </div> 
         <div>
          <a href="" class="share-facebook" ms.cmpnm="facebook" data-bi-name="facebook"><i class="icon icon-facebook"></i>Facebook</a>
         </div> 
         <div>
          <a href="" class="share-email" ms.cmpnm="email" data-bi-name="email"><i class="icon icon-email"></i>Email</a>
         </div> 
        </div> </li> 
       <li class="typeSep">|</li> 
       <li> <label for="theme-selector">Theme</label> <select id="theme-selector" data-bi-name="select-theme"> <option value="" class="removedOnload"></option> <option value="">Light</option> <option value="theme_night">Dark</option> </select> </li> 
      </ul> 
      <nav id="side-doc-outline" class="doc-outline" ms.cmpnm="intopic toc" data-bi-name="intopic toc" role="navigation" aria-label="On page navigation"> 
       <h3>In this article</h3> 
      </nav> 
     </div> 
    </div> 
   </div> 
   <ul class="breadcrumbs" ms.cmpgrp="breadcrumb" data-bi-name="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList" role="navigation" aria-label="Breadcrumb">
    <li></li>
   </ul> 
   <div class="sidebar" id="sidebar" ms.cmpgrp="left toc" data-bi-name="left toc" role="navigation" aria-label="Main Navigation" lang="en-us" dir="ltr"> 
    <div id="sidebarContent"> 
     <div class="filterHolder"> 
     </div> 
     <nav class="toc"></nav> 
     <div class="pdfDownloadHolder"></div> 
    </div> 
    <div class="tocSpace"></div> 
   </div> 
   <div id="menu-nav" class="dropdown-container" lang="en-us" dir="ltr"> 
    <div class="dropdown dropdown-full mobilenavi"> 
     <select> </select> 
    </div> 
   </div> 
  </div> 
  <div id="openFeedbackContainer" class="openfeedback-container footer-layout"></div> 
  <div class="container footerContainer"> 
   <footer id="footer" ms.pgarea="footer" data-bi-name="footer" class="footer-layout"> 
    <div class="container" role="contentinfo"> 
     <a data-mscc-ic="false" id="locale-selector-link" href="#" data-bi-name="select-locale" ms.cmpnm="select-locale"></a> 
     <ul class="links" ms.cmpgrp="footerlinks" data-bi-name="footerlinks"> 
      <li><a data-mscc-ic="false" href="https://docs.microsoft.com/teamblog" ms.cmpnm="bloglink" data-bi-name="bloglink">Blog</a></li> 
      <li><a data-mscc-ic="false" href="//privacy.microsoft.com/en-us/" ms.cmpnm="privacy" data-bi-name="privacy">Privacy &amp; Cookies</a></li> 
      <li><a data-mscc-ic="false" href="/en-us/legal/termsofuse" ms.cmpnm="termsofuse" data-bi-name="termsofuse">Terms of Use</a></li> 
      <li><a data-mscc-ic="false" href="//aka.ms/sitefeedback" ms.cmpnm="feedback" data-bi-name="feedback">Feedback</a></li> 
      <li id="impressum-section" hidden><a data-mscc-ic="false" id="impressum-link" href="#" ms.cmpnm="impressum" data-bi-name="impressum">Impressum</a></li> 
      <li><a data-mscc-ic="false" href="https://www.microsoft.com/en-us/legal/intellectualproperty/Trademarks/EN-US.aspx" ms.cmpnm="trademarks" data-bi-name="trademarks">Trademarks</a></li> 
     </ul> 
    </div> 
   </footer> 
  </div> 
  <script src="/_themes/docs.theme/master/en-us/_themes/javascript/10d210ca85653cfc346f.conceptual.js"></script>  
 </body>
</html>