<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- MHonArc v2.6.10 -->
<!--X-Subject: News: Elementary Function Test Package (ELEFUNT) in Java, and in        quadruple&#45;precision for C/C++ and Fortran -->
<!--X-From-R13: "@ryfba V. T. Prror" <orrorNzngu.hgnu.rqh> -->
<!--X-Date: Fri, 7 Jun 2002 18:43:21 &#45;0700 (PDT) -->
<!--X-Message-Id: CMM.0.92.0.1023500332.beebe@suncore.math.utah.edu -->
<!--X-Content-Type: text/plain -->
<!--X-Head-End-->
<html>
 <head> 
  <title>News: Elementary Function Test Package (ELEFUNT) in Java, and in        quadruple-precision for C/C++ and Fortran</title> 
  <meta NAME="pagetype" CONTENT="Index"> 
  <link rel="stylesheet" href="../754.css"> 
 </head> 
 <body> 
  <div class="msgcontents"> 
   <!--X-Body-Begin--> 
   <!--X-User-Header--> 
   <!--X-User-Header-End--> 
   <!--X-TopPNI--> 
   <hr> [
   <a href="msg00527.html">Date Prev</a>][
   <a href="msg00529.html">Date Next</a>][
   <a href="msg00526.html">Thread Prev</a>][
   <a href="msg00529.html">Thread Next</a>][
   <a href="mail13.html#00528">Date Index</a>][
   <a href="thrd13.html#00528">Thread Index</a>] 
   <!--X-TopPNI-End--> 
   <!--X-MsgBody--> 
   <!--X-Subject-Header-Begin--> 
   <h1>News: Elementary Function Test Package (ELEFUNT) in Java, and in quadruple-precision for C/C++ and Fortran</h1> 
   <hr> 
   <!--X-Subject-Header-End--> 
   <!--X-Head-of-Message--> 
   <ul> 
    <li><em>To</em>: "<a href="mailto:stds-754@DOMAIN.HIDDEN">stds-754@xxxxxxxx</a>" &lt;<a href="mailto:stds-754@DOMAIN.HIDDEN">stds-754@xxxxxxxx</a>&gt;</li> 
    <li><em>Subject</em>: News: Elementary Function Test Package (ELEFUNT) in Java, and in quadruple-precision for C/C++ and Fortran</li> 
    <li><em>From</em>: "Nelson H. F. Beebe" &lt;<a href="mailto:beebe@DOMAIN.HIDDEN">beebe@xxxxxxxxxxxxx</a>&gt;</li> 
    <li><em>Date</em>: Fri, 7 Jun 2002 19:38:52 -0600 (MDT)</li> 
    <li><em>Cc</em>: <a href="mailto:beebe@DOMAIN.HIDDEN">beebe@xxxxxxxxxxxxx</a>, <a href="mailto:William.Waite@DOMAIN.HIDDEN">William.Waite@xxxxxxxxxxxx</a>, <a href="mailto:michaelmetcalf@DOMAIN.HIDDEN">michaelmetcalf@xxxxxxxxxxxxxx</a>, <a href="mailto:boisvert@DOMAIN.HIDDEN">boisvert@xxxxxxxx</a>, <a href="mailto:vsnyder@DOMAIN.HIDDEN">vsnyder@xxxxxxxxxxxxx</a>, <a href="mailto:ball@DOMAIN.HIDDEN">ball@xxxxxxxxxxxxxxxx</a>, <a href="mailto:sysstaff@DOMAIN.HIDDEN">sysstaff@xxxxxxxxxxxxx</a>, "Brad Hawks" &lt;<a href="mailto:brad@DOMAIN.HIDDEN">brad@xxxxxxxxxxxxxxxx</a>&gt;, "Carleton Detar" &lt;<a href="mailto:detar@DOMAIN.HIDDEN">detar@xxxxxxxxxxxxxxxx</a>&gt;, "Jim Meyering" &lt;<a href="mailto:meyering@DOMAIN.HIDDEN">meyering@xxxxxxxxxx</a>&gt;, "Arnold Robbins" &lt;<a href="mailto:arnold@DOMAIN.HIDDEN">arnold@xxxxxxx</a>&gt;, <a href="mailto:rodgers@DOMAIN.HIDDEN">rodgers@xxxxxxxxxxxxx</a>, <a href="mailto:debar@DOMAIN.HIDDEN">debar@xxxxxxxxxxxxx</a>, <a href="mailto:hohn@DOMAIN.HIDDEN">hohn@xxxxxxxxxxxxx</a>, <a href="mailto:haoyu@DOMAIN.HIDDEN">haoyu@xxxxxxxxxxxxx</a></li> 
    <li><em>Delivery-date</em>: Fri Jun 7 18:43:23 2002</li> 
    <li><em>Sender</em>: <a href="mailto:owner-stds-754@DOMAIN.HIDDEN">owner-stds-754@xxxxxxxxxxxxxxxxxx</a></li> 
   </ul> 
   <!--X-Head-of-Message-End--> 
   <!--X-Head-Body-Sep-Begin--> 
   <hr> 
   <!--X-Head-Body-Sep-End--> 
   <!--X-Body-of-Message--> 
   <pre>
I'm pleased to announce the availability of two major additions to the
Cody &amp; Waite Elementary Function Test Package (ELEFUNT), originally
described in their important book

@String{pub-PH                  = "Pren{\-}tice-Hall"}
@String{pub-PH:adr              = "Upper Saddle River, NJ 07458, USA"}

@Book{Cody:SME80,
  author =       "William J. {Cody, Jr.} and William Waite",
  title =        "Software Manual for the Elementary Functions",
  publisher =    pub-PH,
  address =      pub-PH:adr,
  pages =        "x + 269",
  year =         "1980",
  ISBN =         "0-13-822064-6",
  LCCN =         "QA331 .C635 1980",
  bibdate =      "Tue Dec 14 23:28:38 1993",
}

The additions are:

(1) Quadruple-precision ELEFUNT for Fortran, C, and C++ (Fortran
    REAL*16 and C/C++ long double [which could be 80-bit or 128-bit,
    depending on the platform]).

(2) ELEFUNT in Java (single- and double-precision).

To my knowledge, neither of these capabilities has previously been
available, but I won't be offended if someone can provide evidence of
prior work.

Today's release replaces an older version for Fortran and C in the
distributions at (pick your favorite archive format):

	<a href="http://www.math.utah.edu/~beebe/software/ieee/elefunt.jar">http://www.math.utah.edu/~beebe/software/ieee/elefunt.jar</a>
	<a href="http://www.math.utah.edu/~beebe/software/ieee/elefunt.tar.gz">http://www.math.utah.edu/~beebe/software/ieee/elefunt.tar.gz</a>
	<a href="http://www.math.utah.edu/~beebe/software/ieee/elefunt.zip">http://www.math.utah.edu/~beebe/software/ieee/elefunt.zip</a>
	<a href="http://www.math.utah.edu/~beebe/software/ieee/elefunt.zoo">http://www.math.utah.edu/~beebe/software/ieee/elefunt.zoo</a>

The same files are also available at

	<a href="ftp://ftp.math.utah.edu/pub/elefunt/">ftp://ftp.math.utah.edu/pub/elefunt/</a>
	<a href="http://www.math.utah.edu/pub/elefunt/">http://www.math.utah.edu/pub/elefunt/</a>

Each of these archives contains all language versions, including test
output for many current systems.  [I have historical ELEFUNT test
output going back to 1987, but I've chosen not to include it in the
new distribution; it is available on request.]

The ELEFUNT book was written before IEEE 754 arithmetic was available.
Bill Cody later published an update to the environmental inquiry
routine, machar(), in ACM Algorithm 665 (ACM TOMS 14(4) 303--311
(1988)) to accommodate that arithmetic.  However, compiler advances are
such that even that code does not work correctly on current Intel x86
systems: the updated code in my distribution fixes those problems.

The Java version was an interesting project, and has a long README
file [available via a link from

	<a href="http://www.math.utah.edu/~beebe/software/java">http://www.math.utah.edu/~beebe/software/java</a>

where you can also investigate my little Fibonacci project for
comparison of Java with 31 other programming languages] that describes
its development, and discusses several aspects of Java for numerical
work.

Fortran/C-to-Java translators are not mature enough to handle the
source code conversion, and in any event, an important design goal of
my ELEFUNT work has been to preserve maximal code similarity to the
Fortran version, since Fortran remains the master language for
ELEFUNT.  Thus, the translation was again carried out by hand.  For
Java, machar() is not needed, since Java has the same arithmetic
everywhere: all environmental parameters formerly supplied by machar()
are simply defined as named constants in Java.

Since Java purports to offer a subset IEEE 754 environment for its
goal of `write once, run anywhere', I was most interested to see to
what extent this was possible, and also to use ELEFUNT to evaluate the
quality of the elementary mathematical functions in Java.

The main results of this work are:

(a) Identical results are achievable on PowerPC (Apple MacOSX), Intel
    IA-32 (GNU/Linux), and SPARC (Sun Solaris) implementations, but
    small differences appear on MIPS (SGI IRIX) and Alpha
    (HP/Compaq/DEC OSF/1) systems.  [None of the IBM RS/6000 AIX
    systems to which I have access currently have Java installations:
    I'd be pleased to hear from anyone who has such access, and can
    supply ELEFUNT test results to me.  Ditto for Java on MS/Windows,
    on IBM S/390, and other operating systems.]

(b) The test suite uncovered a fundamental error in Java on Alpha:
    (long)NaN is incorrectly converted to Long.MAX_VALUE (2^63 - 1),
    instead of to zero, as required by the Java Virtual Machine
    specification.

(c) With the exception in (b), Java code on all implementations has
    been found to handle IEEE 754 signed zero, subnormals, NaN, and
    Infinity correctly, unlike almost every other programming language
    implementation that I've tested.  [Before the recent JDK 1.4,
    however, Infinity and NaN cannot be input, even though they can be
    output.]  The Java ELEFUNT test results all show acceptable
    accuracy.

(d) A pair of large packages (fmtflt and fmtint) for support of
    formatted numerical output has been written to facilitate
    conversion of Fortran WRITE and C printf() statements to Java.

(e) The packages in (d) are documented in javadoc, so that the
    distribution includes online HTML documentation whose format
    closely resembles that supplied for any of the standard Java
    classes.

(f) A new math class, extmath, provides a replacement for
    java.lang.Math, supplying elementary functions that are absent
    from the latter.  You can simply replace Math.X by extmath.X for
    all X: the Java Math class underlies extmath, so nothing is lost,
    except a bit of run time from the library interface.

(g) The quadruple-precision ELEFUNT tests show pretty acceptable
    results, without the horrid test failures routinely exposed by
    ELEFUNT a decade or more ago.  Nevertheless, the new availability
    of ELEFUNT for this precision should allow vendors the opportunity
    for further improvements in quality of implementation.

(h) The C/C++/Java versions of ELEFUNT can now be coaxed into running
    larger numbers of test points (the ELEFUNT default of 2000 points
    per test interval reflects hardware speeds of two decades ago),
    and with different starting seeds for the pseudo-random number
    generators.  When the test points are pushed higher (up to
    20,000,0000 in my tests: see elefunt/c/ChangeLog), significantly
    higher maximum-relative-error points are uncovered.  I did not
    expect this, but it does demonstrate that we need to be even more
    diligent in our software testing.

(i) The elefunt.sh scripts for each language automate the ELEFUNT
    testing with every compiler known to me on the systems that I have
    access to.

(j) The world now has almost 14K new lines of freely-available useful
    Java code, and 6K lines of new quadruple-precision ELEFUNT code in
    Fortran and C/C++, that did not exist a week ago :^)!  [Which is
    why I've left email unread for 6 days, though today I did catch
    up.]

Enjoy: comments and further test results are always welcome.

-------------------------------------------------------------------------------
- Nelson H. F. Beebe                    Tel: +1 801 581 5254                  -
- Center for Scientific Computing       FAX: +1 801 585 1640, +1 801 581 4148 -
- University of Utah                    Internet e-mail: beebe@xxxxxxxxxxxxx  -
- Department of Mathematics, 110 LCB        beebe@xxxxxxx  beebe@xxxxxxxxxxxx -
- 155 S 1400 E RM 233                       beebe@xxxxxxxx                    -
- Salt Lake City, UT 84112-0090, USA    URL: <a href="http://www.math.utah.edu/~beebe">http://www.math.utah.edu/~beebe</a>  -
-------------------------------------------------------------------------------
</pre> 
   <!--X-Body-of-Message-End--> 
   <!--X-MsgBody-End--> 
   <!--X-Follow-Ups--> 
   <hr> 
   <!--X-Follow-Ups-End--> 
   <!--X-References--> 
   <!--X-References-End--> 
   <!--X-BotPNI--> 
   <ul> 
    <li>Prev by Date: <strong><a href="msg00527.html">Re: [Fwd: 754R &amp; C DR 243]</a></strong> </li> 
    <li>Next by Date: <strong><a href="msg00529.html">Re: 754R &amp; C DR 243</a></strong> </li> 
    <li>Previous by thread: <strong><a href="msg00526.html">Paper reference for 'Densely Packed Decimal'</a></strong> </li> 
    <li>Next by thread: <strong><a href="msg00529.html">Re: 754R &amp; C DR 243</a></strong> </li> 
    <li>Index(es): 
     <ul> 
      <li><a href="mail13.html#00528"><strong>Date</strong></a></li> 
      <li><a href="thrd13.html#00528"><strong>Thread</strong></a></li> 
     </ul> </li> 
   </ul> 
   <!--X-BotPNI-End--> 
   <!--X-User-Footer--> 
   <!--X-User-Footer-End--> 
  </div> 
  <div class="lowernavbar"> 
   <p> <a href="../">754</a> | <a href="../revision.html">revision</a> | <a href="../faq.html">FAQ</a> | <a href="../reading.html">references</a> | <a href="../email/threads.html">list archive</a> </p> 
  </div>   
 </body>
</html>