<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <meta name="description" content="A JavaScript vector maths library for Node.js and the browser."> 
  <meta name="keywords" content="javascript, vector, victor, math, 2d, drawing, npm, browserify, bower"> 
  <meta name="author" content=""> 
  <link rel="stylesheet" href="./styles/screen.css"> 
  <link rel="stylesheet" href="./styles/prism.css"> 
  <link rel="shortcut icon" href="./favicon.ico"> 
  <link href="//fonts.googleapis.com/css?family=Source+Sans+Pro:400,300" rel="stylesheet" type="text/css"> 
  <link rel="icon" type="image/x-icon" href="/favicon.ico"> 
  <title>Victor.js - 2D Vectors for JavaScript</title> 
 </head> 
 <body> 
  <div id="header-wrapper" class="header-wrapper"> 
   <div class="container-fluid"> 
    <h1>victor.js</h1> 
    <div class="row logo"> 
     <div class="col-md-6 col-md-offset-3 col-xs-12 col-xs-offset-0"> 
      <img src="assets/header-logo.png"> 
     </div> 
    </div> 
    <div class="row"> 
     <div class="col-md-12"> 
      <div class="lead"> 
       <p>A JavaScript 2D vector maths library for Node.js and the browser.</p> 
      </div> 
     </div> 
    </div> 
    <div class="row"> 
     <div class="col-sm-offset-3 col-sm-4 col-md-offset-2 col-md-4"> 
      <h2>Use Anywhere</h2> 
      <p>Victor can be used in both Node.js and the browser.</p> 
      <p>Builds come with an UMD wrapper so it can be used in CommonJS and AMD environments, or as a global object.</p> 
      <p>Install Victor with bower, npm, or <a href="https://github.com/maxkueng/victor/releases">download</a> the latest release.</p> 
     </div> 
     <div class="col-sm-4 col-md-4"> 
      <h2>Open Source</h2> 
      <p>Victor is licensed under the <a href="http://opensource.org/licenses/MIT">MIT license</a> and can be used without restrictions.</p> 
      <p>Fork Victor on <a href="https://github.com/maxkueng/victor">GitHub</a> and help make it better.</p> 
     </div> 
    </div> 
   </div> 
   <div class="ghbuttons"> 
    <iframe src="http://ghbtns.com/github-btn.html?user=maxkueng&amp;repo=victor&amp;type=watch&amp;count=true" allowtransparency="true" frameborder="0" scrolling="0" width="110" height="20"></iframe> 
   </div> 
  </div> 
  <div class="container-fluid"> 
   <div class="row"> 
    <div class="col-sm-3 col-md-2 hidden-xs"> 
     <div class="sidebar"> 
      <nav> 
       <ul> 
        <li> <a href="#installation">Installation</a> 
         <ul> 
          <li> <a href="#installation-npm">Node &amp; Browserify</a> </li> 
          <li> <a href="#installation-bower">Bower</a> </li> 
          <li> <a href="#build-test">Build &amp; Test</a> </li> 
         </ul> </li> 
        <li> <a href="#documentation">Documentation</a> 
         <ul> 
          <li> <a href="#properties">Properties</a> 
           <ul> 
            <li> <a href="#properties-x"><tt>.x</tt></a> </li> 
            <li> <a href="#properties-x"><tt>.y</tt></a> </li> 
           </ul> </li> 
          <li> <a href="#constructors">Constructors</a> 
           <ul> 
            <li> <a href="#constructors-new"><tt>new Victor</tt></a> </li> 
            <li> <a href="#constructors-fromarray"><tt>Victor.fromArray</tt></a> </li> 
            <li> <a href="#constructors-fromobject"><tt>Victor.fromObject</tt></a> </li> 
           </ul> </li> 
          <li> <a href="#utility">Utility</a> 
           <ul> 
            <li> <a href="#clone"><tt>.clone</tt></a> </li> 
            <li> <a href="#copyx"><tt>.copyX</tt></a> </li> 
            <li> <a href="#copyY"><tt>.copyY</tt></a> </li> 
            <li> <a href="#copy"><tt>.copy</tt></a> </li> 
            <li> <a href="#tostring"><tt>.toString</tt></a> </li> 
            <li> <a href="#toarray"><tt>.toArray</tt></a> </li> 
            <li> <a href="#toobject"><tt>.toObject</tt></a> </li> 
           </ul> </li> 
          <li> <a href="#manipilation">Manipulation</a> 
           <ul> 
            <li> <a href="#addx"><tt>.addX</tt></a> </li> 
            <li> <a href="#addy"><tt>.addY</tt></a> </li> 
            <li> <a href="#add"><tt>.add</tt></a> </li> 
            <li> <a href="#subtractx"><tt>.subtractX</tt></a> </li> 
            <li> <a href="#subtracty"><tt>.subtractY</tt></a> </li> 
            <li> <a href="#subtract"><tt>.subtract</tt></a> </li> 
            <li> <a href="#multiplyx"><tt>.multiplyX</tt></a> </li> 
            <li> <a href="#multiplyy"><tt>.multiplyY</tt></a> </li> 
            <li> <a href="#multiply"><tt>.multiply</tt></a> </li> 
            <li> <a href="#dividex"><tt>.divideX</tt></a> </li> 
            <li> <a href="#dividey"><tt>.divideY</tt></a> </li> 
            <li> <a href="#divide"><tt>.divide</tt></a> </li> 
            <li> <a href="#invertx"><tt>.invertX</tt></a> </li> 
            <li> <a href="#inverty"><tt>.invertY</tt></a> </li> 
            <li> <a href="#invert"><tt>.invert</tt></a> </li> 
            <li> <a href="#mixx"><tt>.mixX</tt></a> </li> 
            <li> <a href="#mixy"><tt>.mixY</tt></a> </li> 
            <li> <a href="#mix"><tt>.mix</tt></a> </li> 
            <li> <a href="#normalize"><tt>.normalize</tt></a> </li> 
            <li> <a href="#norm"><tt>.norm</tt> (alias)</a> </li> 
            <li> <a href="#limit"><tt>.limit</tt></a> </li> 
            <li> <a href="#unfloat"><tt>.unfloat</tt></a> </li> 
            <li> <a href="#rotate"><tt>.rotate</tt></a> </li> 
            <li> <a href="#rotatedeg"><tt>.rotateDeg</tt></a> </li> 
            <li> <a href="#rotateby"><tt>.rotateBy</tt></a> </li> 
            <li> <a href="#rotateby"><tt>.rotateByDeg</tt></a> </li> 
            <li> <a href="#randomizex"><tt>.randomizeX</tt></a> </li> 
            <li> <a href="#randomizey"><tt>.randomizeY</tt></a> </li> 
            <li> <a href="#randomize"><tt>.randomize</tt></a> </li> 
            <li> <a href="#randomizeany"><tt>.randomizeAny</tt></a> </li> 
           </ul> </li> 
          <li> <a href="#products">Products</a> 
           <ul> 
            <li> <a href="#dot"><tt>.dot</tt></a> </li> 
            <li> <a href="#cross"><tt>.cross</tt></a> </li> 
            <li> <a href="#length"><tt>.length</tt></a> </li> 
            <li> <a href="#magnitude"><tt>.magnitude</tt> (alias)</a> </li> 
            <li> <a href="#lengthsq"><tt>.lengthSq</tt></a> </li> 
            <li> <a href="#distancex"><tt>.distanceX</tt></a> </li> 
            <li> <a href="#absdistancex"><tt>.absDistanceX</tt></a> </li> 
            <li> <a href="#distancey"><tt>.distanceY</tt></a> </li> 
            <li> <a href="#absdistancey"><tt>.absDistanceY</tt></a> </li> 
            <li> <a href="#distance"><tt>.distance</tt></a> </li> 
            <li> <a href="#distancesq"><tt>.distanceSq</tt></a> </li> 
            <li> <a href="#horizontalangle"><tt>.horizontalAngle</tt></a> </li> 
            <li> <a href="#angle"><tt>.angle</tt> (alias)</a> </li> 
            <li> <a href="#direction"><tt>.direction</tt> (alias)</a> </li> 
            <li> <a href="#horizontalangledeg"><tt>.horizontalAngleDeg</tt></a> </li> 
            <li> <a href="#angleDeg"><tt>.angleDeg</tt> (alias)</a> </li> 
            <li> <a href="#verticalangle"><tt>.verticalAngle</tt></a> </li> 
            <li> <a href="#verticalangledeg"><tt>.verticalAngleDeg</tt></a> </li> 
           </ul> </li> 
         </ul> </li> 
        <li> <a href="#credits">Credits</a> 
         <ul> 
          <li><a href="#contributors">Contributors</a></li> 
         </ul> </li> 
       </ul> 
      </nav> 
     </div> 
    </div> 
    <div class="col-sm-9 xxcol-sm-offset-3 col-md-10 xxcol-md-offset-2 main"> 
     <h2><a name="installation"></a>Installation</h2> 
     <p>You can manually <a href="https://github.com/maxkueng/victor/tree/master/build">download</a> the latest build or use your favorite package manager.</p> 
     <h3><a name="installation-npm"></a>Node.js &amp; Browserify</h3> 
     <pre data-src="examples/installation-node.js"></pre> 
     <h3><a name="installation-bower"></a>Bower</h3> 
     <pre data-src="examples/installation-bower.js"></pre> 
     <h3><a name="build-test"></a>Build &amp; Test</h3> 
     <p class="pull-right"><a href="https://travis-ci.org/maxkueng/victor"><img src="https://api.travis-ci.org/maxkueng/victor.png?branch=master"></a></p> 
     <p>Install <a href="http://nodejs.org/">Node.js</a> and run the build and test scripts.</p> 
     <pre data-src="examples/build-1.js"></pre> 
     <h2><a name="documentation"></a>Documentation</h2> 
     <h3><a name="properties"></a>Properties</h3> 
     <!-- x --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="properties-x"></a><tt>.x</tt></h4> 
       <p>Holds the value for the X component.</p> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/x-1.js"></pre> 
      </div> 
     </div>
     <!-- /x --> 
     <!-- y --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="properties-y"></a><tt>.y</tt></h4> 
       <p>Holds the value for the Y component.</p> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/y-1.js"></pre> 
      </div> 
     </div>
     <!-- /y --> 
     <h3><a name="constructors"></a>Constructors</h3> 
     <p>Different constructors allow instanciation in most practical way for the situation.</p> 
     <!-- new Victor --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="constructors-new"></a><tt>new Victor(x, y)</tt></h4> 
       <p>Can be used without the <tt>new</tt> keyword.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Number</strong> <em>x</em> The X component</li> 
          <li><strong>Number</strong> <em>y</em> The Y component</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> The new vector</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/cnstr-new-1.js"></pre> 
      </div> 
     </div>
     <!-- /new Victor --> 
     <!-- static-fromArray --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="constructors-fromarray"></a><tt>Victor.fromArray(array)</tt></h4> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Array</strong> <em>array</em> An array that contains the X component in the first element and the Y component in the second</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> The new vector</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/cnstr-fromarray-1.js"></pre> 
      </div> 
     </div>
     <!-- /static-fromArray --> 
     <!-- static-fromObject --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="constructors-fromobject"></a><tt>Victor.fromObject(obj)</tt></h4> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Object</strong> <em>obj</em> An object containing the X component in the <tt>x</tt> property and the Y component in the <tt>y</tt> property</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> The new vector</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/cnstr-fromobject-1.js"></pre> 
      </div> 
     </div>
     <!-- /static-fromObject --> 
     <h3><a name="utility"></a>Utility</h3> 
     <!-- clone --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="clone"></a><tt>.clone()</tt></h4> 
       <p>Creates a new <tt>Victor</tt> with the same X and Y components.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> A new vector</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/clone-1.js"></pre> 
      </div> 
     </div>
     <!-- /clone --> 
     <!-- copyX --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="copyx"></a><tt>.copyX(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Copies the X component of another vector in to itself.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/copyx-1.js"></pre> 
      </div> 
     </div>
     <!-- /copyX --> 
     <!-- copyY --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="copyy"></a><tt>.copyY(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Copies the Y component of another vector in to itself.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/copyy-1.js"></pre> 
      </div> 
     </div>
     <!-- /copyY --> 
     <!-- copy --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="copy"></a><tt>.copy(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Copies the X and Y components of another vector in to itself.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/copy-1.js"></pre> 
      </div> 
     </div>
     <!-- /copy --> 
     <!-- toString --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="tostring"></a><tt>.toString()</tt></h4> 
       <p>Returns a string representation of the X and Y components.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>String</strong></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/tostring-1.js"></pre> 
      </div> 
     </div>
     <!-- /toString --> 
     <!-- toArray --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="toarray"></a><tt>.toArray()</tt></h4> 
       <p>Returns an array representation of the X and Y components.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Array</strong></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/toarray-1.js"></pre> 
      </div> 
     </div>
     <!-- /toArray --> 
     <!-- toObject --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="toobject"></a><tt>.toObject()</tt></h4> 
       <p>Returns an object representation of tha X and Y components.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Object</strong></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/toobject-1.js"></pre> 
      </div> 
     </div>
     <!-- /toObject --> 
     <h3><a name="manipulation"></a>Manipulation</h3> 
     <p>All manipulation functions are chainable.</p> 
     <!-- addX --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="addx"></a><tt>.addX(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Adds another vector's X component to itself.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/addx-1.js"></pre> 
      </div> 
     </div>
     <!-- /addX --> 
     <!-- addY --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="addy"></a><tt>.addY(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Adds another vector's Y component to itself.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/addy-1.js"></pre> 
      </div> 
     </div>
     <!-- /addY --> 
     <!-- add --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="add"></a><tt>.add(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Adds another vector to itself.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/add-1.js"></pre> 
       <div class="demo demo-add"></div> 
      </div> 
     </div>
     <!-- /add --> 
     <!-- subtractX --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="subtractx"></a><tt>.subtractX(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Subtracts another vector's X component from itself.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/subtractx-1.js"></pre> 
      </div> 
     </div>
     <!-- /subtractX --> 
     <!-- subtractY --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="subtracty"></a><tt>.subtractY(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Subtracts another vector's Y component from itself.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/subtracty-1.js"></pre> 
      </div> 
     </div>
     <!-- /subtractY --> 
     <!-- subtract --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="subtract"></a><tt>.subtract(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Subtracts another vector from itself.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/subtract-1.js"></pre> 
      </div> 
     </div>
     <!-- /subtract --> 
     <!-- multiplyX --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="multiplyx"></a><tt>.multiplyX(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Multiplies the X component with the X component of another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/multiplyx-1.js"></pre> 
      </div> 
     </div>
     <!-- /multiplyX --> 
     <!-- multiplyY --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="multiplyy"></a><tt>.multiplyY(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Multiplies the Y component with the Y component of another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/multiplyy-1.js"></pre> 
      </div> 
     </div>
     <!-- /multiplyY --> 
     <!-- multiply --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="multiply"></a><tt>.multiply(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Multiplies both components with another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/multiply-1.js"></pre> 
      </div> 
     </div>
     <!-- /multiply --> 
     <!-- divideX --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="dividex"></a><tt>.divideX(vector)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Divides the X component by the X component of another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/dividex-1.js"></pre> 
      </div> 
     </div>
     <!-- /divideX --> 
     <!-- divideY --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="dividey"></a><tt>.divideY(scalar)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Divides the Y component by the Y component of another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/dividey-1.js"></pre> 
      </div> 
     </div>
     <!-- /divideY --> 
     <!-- divide --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="divide"></a><tt>.divide(scalar)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Divides both components by another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/divide-1.js"></pre> 
      </div> 
     </div>
     <!-- /divide --> 
     <!-- invertX --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="invertx"></a><tt>.invertX()</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Inverts the X component.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/invertx-1.js"></pre> 
      </div> 
     </div>
     <!-- /invertX --> 
     <!-- invertY --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="inverty"></a><tt>.invertY()</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Inverts the Y component.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/inverty-1.js"></pre> 
      </div> 
     </div>
     <!-- /invertY --> 
     <!-- invert --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="invert"></a><tt>.invert()</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Inverts both components.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/invert-1.js"></pre> 
      </div> 
     </div>
     <!-- /invert --> 
     <!-- mixX --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="mixx"></a><tt>.mixX(vector, amount)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Performs a linear blend / interpolation of the X component towards another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
          <li><strong>Number</strong> <em>amount</em> Value between 0 and 1. Default: 0.5</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/mixx-1.js"></pre> 
      </div> 
     </div>
     <!-- /mixX --> 
     <!-- mixY --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="mixy"></a><tt>.mixY(vector, amount)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Performs a linear blend / interpolation of the Y component towards another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
          <li><strong>Number</strong> <em>amount</em> Value between 0 and 1. Default: 0.5</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/mixy-1.js"></pre> 
      </div> 
     </div>
     <!-- /mixY --> 
     <!-- mix --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="mix"></a><tt>.mix(vector, amount)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Performs a linear blend / interpolation towards another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
          <li><strong>Number</strong> <em>amount</em> Value between 0 and 1. Default: 0.5</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/mix-1.js"></pre> 
      </div> 
     </div>
     <!-- /mix --> 
     <!-- normalize --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="normalize"></a><tt>.normalize()</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Normalizes the vector by scaling it down to a <a href="#length">length</a> of 1 while keeping its direction.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
       <h4><a name="norm"></a><tt>.norm()</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Alias of <a href="#normalize">normalize</a>.</p> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/normalize-1.js"></pre> 
      </div> 
     </div>
     <!-- /normalize --> 
     <!-- limit --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="limit"></a><tt>.limit(max, multiplier)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>If either component is greater than <tt>max</tt>, multiplies the component by <tt>multiplier</tt>.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Number</strong> <em>max</em></li> 
          <li><strong>Number</strong> <em>multiplier</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/limit-1.js"></pre> 
      </div> 
     </div>
     <!-- /limit --> 
     <!-- unfloat --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="unfloat"></a><tt>.unfloat()</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Rounds the components to integer numbers.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/unfloat-1.js"></pre> 
      </div> 
     </div>
     <!-- /unfloat --> 
     <!-- rotate --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="rotate"></a><tt>.rotate(angle)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Rotates the vector to a certain angle, in radians CCW from +X axis.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Number</strong> <em>angle</em> Angle in radians</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
       <h4><a name="rotatedeg"></a><tt>.rotateDeg(angle)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Same as <a href="#rotate">rotate</a> but uses degrees</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Number</strong> <em>angle</em> Angle in degrees</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/rotate-1.js"></pre> 
      </div> 
     </div>
     <!-- /rotate --> 
     <!-- rotateBy --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="rotateby"></a><tt>.rotateBy(rotation)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Rotates the vector by a rotation angle, given in radians CCW from +X axis.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Number</strong> <em>rotation</em> Rotation in radians</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
       <h4><a name="rotatebydeg"></a><tt>.rotateByDeg(rotation)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Same as <a href="#rotateby">rotateBy</a> but uses degrees</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Number</strong> <em>rotation</em> Rotation in degrees</li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/rotateby-1.js"></pre> 
      </div> 
     </div>
     <!-- /rotateBy --> 
     <!-- randomizeX --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="randomizex"></a><tt>.randomizeX(topLeft, bottomRight)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Randomizes the X component with a value between <tt>topLeft</tt> and <tt>bottomRight</tt>.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>topLeft</em></li> 
          <li><strong>Victor</strong> <em>bottomRight</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/randomizex-1.js"></pre> 
      </div> 
     </div>
     <!-- /randomizeX --> 
     <!-- randomizeY --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="randomizey"></a><tt>.randomizeY(topLeft, bottomRight)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Randomizes the Y component with a value between <tt>topLeft</tt> and <tt>bottomRight</tt>.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>topLeft</em></li> 
          <li><strong>Victor</strong> <em>bottomRight</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/randomizey-1.js"></pre> 
      </div> 
     </div>
     <!-- /randomizeY --> 
     <!-- randomize --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="randomize"></a><tt>.randomize(topLeft, bottomRight)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Randomizes the components with a value between <tt>topLeft</tt> and <tt>bottomRight</tt>.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>topLeft</em></li> 
          <li><strong>Victor</strong> <em>bottomRight</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/randomize-1.js"></pre> 
       <div class="demo demo-randomize"></div> 
      </div> 
     </div>
     <!-- /randomize --> 
     <!-- randomizeAny --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="randomizeany"></a><tt>.randomizeAny(topLeft, bottomRight)</tt> <span class="label-chainable">chainable</span></h4> 
       <p>Randomly randomizes either the X component or the Y component with a value between <tt>topLeft</tt> and <tt>bottomRight</tt>.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>topLeft</em></li> 
          <li><strong>Victor</strong> <em>bottomRight</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Victor</strong> <tt>this</tt></li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/randomizeany-1.js"></pre> 
      </div> 
     </div>
     <!-- /randomizeAny --> 
     <h3><a name="products"></a>Products</h3> 
     <!-- dot --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="dot"></a><tt>.dot(vector)</tt></h4> 
       <p>Returns the dot product of two vectors.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Dot product</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/dot-1.js"></pre> 
      </div> 
     </div>
     <!-- /dot --> 
     <!-- cross --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="cross"></a><tt>.cross(vector)</tt></h4> 
       <p>Returns the cross product of two vectors.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Cross product</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/cross-1.js"></pre> 
      </div> 
     </div>
     <!-- /cross --> 
     <!-- length --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="length"></a><tt>.length()</tt></h4> 
       <p>Returns the length / magnitude.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Length</li> 
         </ul> 
        </dd> 
       </dl> 
       <h4><a name="magnitude"></a><tt>.magnitude()</tt></h4> 
       <p>Alias for <a href="#length">length</a>.</p> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/length-1.js"></pre> 
      </div> 
     </div>
     <!-- /length --> 
     <!-- lengthSq --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="lengthsq"></a><tt>.lengthSq()</tt></h4> 
       <p>Returns the squared length / magnitude. If the length is only needed for comparison, this function is faster than <a href="#length">length</a>.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Squared length</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/lengthsq-1.js"></pre> 
      </div> 
     </div>
     <!-- /lengthSq --> 
     <!-- distanceX --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="distancex"></a><tt>.distanceX(vector)</tt></h4> 
       <p>Returns the distance of the X component from another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Distance</li> 
         </ul> 
        </dd> 
       </dl> 
       <h4><a name="absdistancex"></a><tt>.absDistanceX(vector)</tt></h4> 
       <p>Same as <a href="#distancex">distanceX</a> but always returns an absolute value.</p> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/distancex-1.js"></pre> 
      </div> 
     </div>
     <!-- /distanceX --> 
     <!-- distanceY --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="distancey"></a><tt>.distanceY(vector)</tt></h4> 
       <p>Returns the distance of the Y component from another vector.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Distance</li> 
         </ul> 
        </dd> 
       </dl> 
       <h4><a name="absdistancey"></a><tt>.absDistanceY(vector)</tt></h4> 
       <p>Same as <a href="#distancey">distanceY</a> but always returns an absolute value.</p> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/distancey-1.js"></pre> 
      </div> 
     </div>
     <!-- /distanceY --> 
     <!-- distance --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="distance"></a><tt>.distance(vector)</tt></h4> 
       <p>Returns the euclidean distance between two vectors.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Distance</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/distance-1.js"></pre> 
      </div> 
     </div>
     <!-- /distance --> 
     <!-- distanceSq --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="distancesq"></a><tt>.distanceSq(vector)</tt></h4> 
       <p>Returns the squared euclidean distance between two vectors. If the distance is only needed for comparison, this function is faster than <a href="#distance">distance</a>.</p> 
       <dl class="method-docs"> 
        <dt>
         Params
        </dt> 
        <dd> 
         <ul class="params"> 
          <li><strong>Victor</strong> <em>vector</em></li> 
         </ul> 
        </dd> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Squared distance</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/distancesq-1.js"></pre> 
      </div> 
     </div>
     <!-- /distanceSq --> 
     <!-- horizontalAngle --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="horizontalangle"></a><tt>.horizontalAngle()</tt></h4> 
       <p>Returns the angle towards X in radians.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Angle</li> 
         </ul> 
        </dd> 
       </dl> 
       <h4><a name="angle"></a><tt>.angle()</tt></h4> 
       <p>Alias for <a href="#horizontalangle">horizontalAngle</a>.</p> 
       <h4><a name="direction"></a><tt>.direction()</tt></h4> 
       <p>Alias for <a href="#horizontalangle">horizontalAngle</a>.</p> 
       <h4><a name="horizontalangledeg"></a><tt>.horizontalAngleDeg()</tt></h4> 
       <p>Same as <a href="#horizontalangle">horizontalAngle</a> but returns degrees.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Angle</li> 
         </ul> 
        </dd> 
       </dl> 
       <h4><a name="angledeg"></a><tt>.angleDeg()</tt></h4> 
       <p>Alias for <a href="#horizontalangledeg">horizontalAngleDeg</a>.</p> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/horizontalangle-1.js"></pre> 
       <div class="demo demo-angle"></div> 
      </div> 
     </div>
     <!-- /horizontalAngle --> 
     <!-- verticalAngle --> 
     <div class="row doc-row"> 
      <div class="col-md-6 doc-text"> 
       <h4><a name="verticalangle"></a><tt>.verticalAngle()</tt></h4> 
       <p>Returns the angle towards Y in radians.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Angle</li> 
         </ul> 
        </dd> 
       </dl> 
       <h4><a name="verticalangledeg"></a><tt>.verticalAngleDeg()</tt></h4> 
       <p>Same as <a href="#verticalangle">verticalAngle</a> but returns degrees.</p> 
       <dl class="method-docs"> 
        <dt>
         Return
        </dt> 
        <dd> 
         <ul class="return"> 
          <li><strong>Number</strong> Angle</li> 
         </ul> 
        </dd> 
       </dl> 
      </div> 
      <div class="col-md-6 doc-example"> 
       <pre data-src="examples/verticalangle-1.js"></pre> 
      </div> 
     </div>
     <!-- /verticalAngle --> 
     <h2><a name="credits"></a>Credits</h2> 
     <div class="row"> 
      <div class="col-md-12"> 
       <h3><a name="contributors"></a>Contributors</h3> 
       <ul> 
        <li><a href="https://github.com/maxkueng">Max Kueng</a></li> 
        <li><a href="https://github.com/supercrabtree">George Crabtree</a></li> 
       </ul> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <script src="scripts/prism.js"></script> 
  <script src="scripts/bundle/main.js"></script> 
  <script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-49606192-1', 'victorjs.org');
ga('send', 'pageview');
</script>   
 </body>
</html>