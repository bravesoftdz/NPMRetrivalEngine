<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en-US">
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
  <meta http-equiv="Content-Language" content="en"> 
  <meta name="description" content="Open Source Javascript graphics library jsDraw2D. Draw line, rectangle, circle, ellipse, polygon, arc, bezier curve, curves."> 
  <meta name="keywords" content="Javascript graphics library, jsDraw2D, Draw line, draw rectangle, draw circle, draw ellipse, draw polygon, draw arc, draw bezier curve, draw curves."> 
  <title>Javascript Graphics Library jsDraw2D draw line, circle, rectangle, polygon, curve, ellipse.</title> 
  <link rel="stylesheet" type="text/css" href="jsdraw2d.css" media="screen"> 
  <script type="text/javascript" src="jsDraw2D.js">
</script> 
 </head> 
 <body> 
  <script type="text/javascript">
    var addthis_disable_flash = true;
</script> 
  <div class="container"> 
   <div class="main"> 
    <div class="header"> 
     <div class="title"> 
      <h1> <img height="54" src="jsdraw2d.jpg" width="195" border="0" alt="jsDraw2D JavaScript Graphics Library"> </h1> 
     </div> 
    </div> 
    <div class="content"> 
     <div class="grarybg"> 
      <div> 
       <a href="http://www.jsfiction.com">jsFiction</a>| 
       <a href="http://jsdraw2dx.jsfiction.com" style="color:red;"><b>jsDraw2DX [New]</b></a>| 
       <a href="#demo">Interactive Demos</a>| 
       <a href="documentation.htm">Documentaion</a>| 
       <a href="#start">Getting Started</a>| 
       <a href="viewsourcecode.htm">View Source</a>| 
       <a href="download.htm">Download</a>| 
       <a href="#license">License</a>| 
       <a href="#comments">Comments</a>| 
       <a href="https://jpeg-compressor.com">JPEG Compressor</a> 
      </div> 
     </div> 
     <div class="section"> 
      <h2>Before jsDraw2D, <a href="http://jsdraw2dx.jsfiction.com">check the all new jsDraw2DX, SVG Graphics Library for Javascript</a></h2> 
      <a title="jsDraw2DX SVG Javascript Graphics Library" alt="jsDraw2DX SVG Javascript Graphics Library" href="http://jsdraw2dx.jsfiction.com"><img src="jsdraw2dx_demo.png" border="0"></a> 
     </div> 
     <div class="section"> 
      <h2> <i>jsDraw2D</i> : 2D Graphics Library for JavaScript&nbsp; <a href="http://www.addthis.com/bookmark.php" onclick="addthis_url   = location.href; addthis_title = document.title; return addthis_click(this);" target="_blank"><img src="http://s9.addthis.com/button1-bm.gif" width="125" height="16" border="0" alt="Bookmark and Share"></a> <script type="text/javascript">var addthis_pub = 'sameer_swapna';</script> <script type="text/javascript" src="http://s9.addthis.com/js/widget.php?v=10"></script> </h2> 
      <p>&nbsp; Welcome to the home page of Open Source JavaScript Graphics Library: <b>jsDraw2D</b>. This is a pure JavaScript library to draw 2D graphics on web pages inside web browser without using SVG,VML or Canvas. JavaScript developers, web developers&nbsp; and webmasters can take advantage of the library to add graphics drawing functionality to their web applications or websites using the library. The library is entirely written in JavaScript and does not need any plug-in or additional software to run/execute. It works even on not-so-smart small screen mobile browsers too. The JavaScript source code of the library is open and free under a LGPL License.</p> 
      <p style="color:red"><b>Today(12-May-2012) we are pleased to launch our new HTML5 ready javascript graphics library <a href="http://jsdraw2dx.jsfiction.com">jsDraw2DX</a> which is based on SVG and VML</b></p> 
      <br> 
      <div id="canvas" style="overflow:hidden;position:relative;width:600px;height:200px;"></div> 
      <br> 
      <p>&nbsp;The diagram above is an example drawn using our <i>jsDraw2D</i> library in JavaScript.<a href="#source">View source of this example</a></p> 
      <br> 
      <script type="text/javascript"><!--
google_ad_client = "ca-pub-6549306531419697";
/* jsFictionHorLinks */
google_ad_slot = "1404987440";
google_ad_width = 728;
google_ad_height = 15;
//-->
</script> 
      <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> 
     </div> 
     <div class="section"> 
      <p><b>Features:</b></p> 
      <br> 
      <p></p>
      <ul> 
       <li>With <i>jsDraw2D</i>, you can draw advance drawings like cubic Bezier curve, general Bezier curve (The general Bezier curve can be of any degrees including linear, quadratic and cubic), open curve passing through given points and closed curve passing through given points.</li> 
       <br>
       <br> 
       <li>You can draw all basic drawings like line, rectangle, polyline, polygon, circle, ellipse and arc. Also you can draw text or image at specified point location.</li> 
       <br>
       <br> 
       <li>You can draw filled rectangle, polygon, circle, ellipse, arc and closed curve.</li> 
       <br>
       <br> 
       <li>This is a kind of make-it-work-every-where library so that your web page will display the graphics not only on modern browsers, old browsers, android and smart phones but also on many of not-so-smart small screen phones too.</li> 
       <br>
       <br> 
       <li>By default, the orgin(0,0) of a document or a div element is top left corner, but with <i>jsDraw2D</i> you can set the orgin for drawing at any location/point on the document or the div element.</li> 
       <br>
       <br> 
       <li><i>jsDraw2D</i> provide two options for co-ordinate system; "default" and "cartecian". In "default" system, on x axis, values above origin are positive and values below origin are negative while in "cartecian" system it is opposite. Following diagram will illustrate it better. </li> 
       <table> 
        <tbody>
         <tr> 
          <td width="200"> 
           <div id="canvas1" style="overflow:hidden;position:relative;width:140px;height:120px;"></div></td> 
          <td width="200"> 
           <div id="canvas2" style="overflow:hidden;position:relative;width:140px;height:120px;"></div></td> 
         </tr> 
        </tbody>
       </table> 
       <br>
       <br> 
       <li>One more important feature is that you can specify scale of the drawing so that instead of using 1px as unit, you can specify your own value of scale. To get better idea about the scale, please see the illustration below,</li> 
       <table> 
        <tbody>
         <tr> 
          <td width="200"> 
           <div id="canvas3" style="overflow:hidden;position:relative;width:140px;height:120px;"></div></td> 
          <td width="200"> 
           <div id="canvas4" style="overflow:hidden;position:relative;width:140px;height:120px;"></div></td> 
         </tr> 
        </tbody>
       </table> 
       <br>
       <br> 
       <li>As you can see in above diagrams, you can optionally display grid/axis or range along the x and y axis.</li> 
       <br>
       <br> 
       <li>Supports most of the modern web browsers. Please note that the performance can be different in different browsers. Tested on IE 7, Mozilla Firefox 3, Google Chrome, Opera 9.64 and Safari 4 with Windows XP.</li> 
       <br>
       <br> 
       <li>The number of div elements composing the diagrams are optimized to get efficient performance. Still as an ongoing activity, we will try to achieve more optimization and better performance as much as possible.</li> 
       <br>
       <br> 
       <li>The library includes <i>jsColor</i> class which provides various color related functionality like converting RGB to Hex and vice versa, getting darker or brighter shade of the given color.</li> 
       <br>
       <br> 
       <li>The library is designed in object oriented manner. This makes the developers to have many of the advantages of object oriented design. </li> 
      </ul>
      <p></p> 
     </div> 
     <div id="demo" class="section"> 
      <script type="text/javascript"><!--
    google_ad_client = "pub-6549306531419697";
    /* jsFictionHor 728x90, created 9/16/09 */
    google_ad_slot = "1107970025";
    google_ad_width = 728;
    google_ad_height = 90;
//-->
</script> 
      <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> 
      <p><b>Interactive Demos:</b></p> 
      <br> 
      <p></p>
      <ul> 
       <li><a href="demo/curvesbezier.htm">Draw "Bezier Curve" and "Curve through points"</a></li> 
       <br>
       <br> 
       <li><a href="demo/linepolygon.htm">Draw Line, Polyline and Polygon</a></li> 
       <br>
       <br> 
       <li><a href="demo/circleellipse.htm">Draw Circle, Ellipse, Arc and Rectangle</a></li> 
      </ul>
      <p></p> 
     </div> 
     <div id="start" class="section"> 
      <p><b>Getting Started:</b></p> 
      <br>
      <br> 
      <ul> 
       <li><a href="download.htm">Download jsDraw2D</a> and copy it to the same folder in which your web page is present. If you want to copy it to another folder then you have to specify the src parameter as appropriate relative path. Please do not use the jsDraw2D.js file from our website directly.</li> 
       <br>
       <br> 
       <li>Add following code inside <b>&lt;head&gt;</b> tag or just after <b>&lt;body&gt;</b> start tag. </li> 
       <div class="jscode">
         &lt;script type="text/JavaScript" src="jsDraw2D.js"&gt;&lt;/script&gt; 
       </div> 
       <br>
       <br> 
       <li> The html div element on which you are going to draw, should have style as specified for the div element below, <br>If drawing is to be limited within the&nbsp;width and height of the canvas div element. <br><b>&lt;div id="canvas" style="overflow:hidden;position:relative;width:600px;height:300px;"&gt;&lt;/div&gt;</b> <br> else <br><b>&lt;div id="canvas" style="position:relative;width:600px;height:300px;"&gt;&lt;/div&gt;</b> <br> You can use&nbsp; multiple div element for drawing. Then you require to create that many objects of <i>jsGraphisc</i> .(You will come to know in detail about <i>jsGraphics</i> object letter on this page) </li> 
       <br>
       <br> 
       <li>Now you are ready to start drawing. Add <b>&lt;script&gt;</b> tag anywhere after the canvas <b>&lt;div&gt;</b> tag. The best place to add the <b>&lt;script&gt;</b> tag is just before the end of <b>&lt;body&gt;</b> tag. Write the code in the manner shown below. 
        <div class="jscode">
          &lt;script type="text/JavaScript"&gt;
         <br> 
         <br> &nbsp;&nbsp;&nbsp; //Create jsGraphics object
         <br> &nbsp;&nbsp;&nbsp; var gr = new jsGraphics(document.getElementById("canvas"));
         <br> 
         <br> &nbsp;&nbsp;&nbsp; //Create jsColor object
         <br> &nbsp;&nbsp;&nbsp; var col = new jsColor("red");
         <br> 
         <br> &nbsp;&nbsp;&nbsp; //Create jsPen object
         <br> &nbsp;&nbsp;&nbsp; var pen = new jsPen(col,1);
         <br> 
         <br> &nbsp;&nbsp;&nbsp; //Draw a Line between 2 points
         <br> &nbsp;&nbsp;&nbsp; var pt1 = new jsPoint(20,30);
         <br> &nbsp;&nbsp;&nbsp; var pt2 = new jsPoint(120,230);
         <br> &nbsp;&nbsp;&nbsp; gr.drawLine(pen,pt1,pt2);
         <br> 
         <br> &nbsp;&nbsp;&nbsp; //Draw filled circle with pt1 as center point and radius 30. 
         <br> &nbsp;&nbsp;&nbsp; gr.fillCircle(col,pt1,30);
         <br> 
         <br> &nbsp;&nbsp;&nbsp; //You can also code with inline object instantiation like below
         <br> &nbsp;&nbsp;&nbsp; gr.drawLine(pen,new jsPoint(40,10),new jsPoint(70,150)); 
         <br>
         <br> &lt;/script&gt; 
        </div></li> 
       <br>
       <br> 
       <li>Example source code used to draw the diagram above 
        <div id="source" class="jscode">
          &lt;script type="text/javascript"&gt;
         <br> &nbsp;&nbsp;&nbsp; var gr=new jsGraphics(document.getElementById("canvas"));
         <br> &nbsp;&nbsp;&nbsp; var redPen=new jsPen(new jsColor("red"),1);
         <br> &nbsp;&nbsp;&nbsp; var greenPen=new jsPen(new jsColor("green"),3);
         <br> &nbsp;&nbsp;&nbsp; var bluePen=new jsPen(new jsColor("blue"),1);
         <br> 
         <br> &nbsp;&nbsp;&nbsp; var curvePoints=new Array(new jsPoint(28,35),new jsPoint(52,16),new jsPoint(177,38),new jsPoint(149,85),new jsPoint(57,92)); 
         <br> &nbsp;&nbsp;&nbsp; var bezierPoints=new Array(new jsPoint(-283,10),new jsPoint(-206,95),new jsPoint(-24,90),new jsPoint(-56,10));
         <br> &nbsp;&nbsp;&nbsp; var closedCurvePoints=new Array(new jsPoint(-265,-50),new jsPoint(-68,-23),new jsPoint(-114,-50),new jsPoint(-58,-95));
         <br> &nbsp;&nbsp;&nbsp; var polyPoints=new Array(new jsPoint(160,-50),new jsPoint(190,-80),new jsPoint(240,-15),new jsPoint(260,-67));
         <br> 
         <br> &nbsp;&nbsp;&nbsp; gr.setOrigin(new jsPoint(300,100)); 
         <br> &nbsp;&nbsp;&nbsp; gr.setCoordinateSystem("cartecian"); 
         <br> &nbsp;&nbsp;&nbsp; gr.showGrid(20);
         <br> 
         <br> &nbsp;&nbsp;&nbsp; plotPoints(curvePoints); 
         <br> &nbsp;&nbsp;&nbsp; plotPoints(bezierPoints); 
         <br> 
         <br> &nbsp;&nbsp;&nbsp; gr.drawCurve(bluePen,curvePoints);
         <br> &nbsp;&nbsp;&nbsp; gr.drawBezier(bluePen,bezierPoints); 
         <br> &nbsp;&nbsp;&nbsp; gr.fillClosedCurve(redPen.color,closedCurvePoints);
         <br> 
         <br> &nbsp;&nbsp;&nbsp; gr.drawLine(greenPen,new jsPoint(25,-25),new jsPoint(80,-80)); 
         <br> &nbsp;&nbsp;&nbsp; gr.fillEllipse(new jsColor("aqua"),new jsPoint(100,-55),50,30);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
         <br> &nbsp;&nbsp;&nbsp; gr.drawPolygon(redPen,polyPoints); 
         <br> 
         <br> &nbsp;&nbsp;&nbsp; var font=new jsFont("arial","bold","12px");
         <br> 
         <br> &nbsp;&nbsp;&nbsp; gr.drawText("Curve passing through given points.",new jsPoint(200,80),font,bluePen.color,90); 
         <br> &nbsp;&nbsp;&nbsp; gr.drawText("Cubic Bezier curve.",new jsPoint(-220,40),font,bluePen.color,110);
         <br> &nbsp;&nbsp;&nbsp; gr.drawText("Filled, closed curve.",new jsPoint(-60,-25),font,bluePen.color,60);
         <br> &nbsp;&nbsp;&nbsp; gr.drawText("Basic drawing (line, ellipse, polygon).",new jsPoint(25,-80),font,bluePen.color);
         <br> 
         <br> &nbsp;&nbsp;&nbsp; plotPoints(closedCurvePoints);
         <br> 
         <br> &nbsp;&nbsp;&nbsp; function plotPoints(points) 
         <br> &nbsp;&nbsp;&nbsp; { 
         <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for( i in points) 
         <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { 
         <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gr.fillRectangle(new jsColor("green"),new jsPoint(points[i].x-2,points[i].y+2),4,4);
         <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
         <br> &nbsp;&nbsp;&nbsp; }
         <br> &lt;/script&gt;div&gt; 
        </div> </li> 
      </ul> 
      <br> 
      <script type="text/javascript"><!--
    google_ad_client = "pub-6549306531419697";
    /* jsFictionHor 728x90, created 9/16/09 */
    google_ad_slot = "1107970025";
    google_ad_width = 728;
    google_ad_height = 90;
//-->
</script> 
      <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> 
     </div> 
     <div id="license" class="section"> 
      <p><b>License:</b></p> 
      <a rel="license" href="http://www.gnu.org/licenses/lgpl.html"> <img alt="LGPL License" style="border-width:0" src="http://www.gnu.org/graphics/lgplv3-147x51.png"></a> 
      <p>The jsDraw2D library is open source and free; licensed under <a rel="license" href="http://www.gnu.org/licenses/lgpl.html">LGPL</a>. </p> 
     </div> 
     <div class="section"> 
      <p><b>Disclaimer &amp; Note:</b></p> 
      <p></p>
      <ul> 
       <li>Find the disclaimer in <a href="http://www.jsfiction.com/termsofuse.htm">Terms of use.</a> Following are additional points of the disclaimer.</li> 
       <li>We would like you to note that the curve drawing using the library may not be accurate and error-free. The algorithm is developed to have good enough balance between accuracy and performance.</li> 
       <li>Testing is not done on all web browsers and operating systems and mobiles.</li> 
      </ul>
      <p></p> 
     </div> 
     <div class="section"> 
      <p><b>Design &amp; Development:</b></p> 
      <p></p>
      <ul> 
       <li>Efficient line, circle and ellipse drawing algorithms are based on mid-point algorithm originally invented by Bresenham.</li> 
       <li>In jsDraw2D, the beziers and curve drawing is first time implemented with pure javascript with good enough performance.</li> 
       <li>The source code of the library can also be used to study the various computer graphics algorithms.</li> 
       <li>Developed by: <b>Sameer Burle</b></li> 
      </ul>
      <p></p> 
     </div> 
     <div id="comments" class="section"> 
      <div id="disqus_thread"></div> 
      <script type="text/javascript">
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'jsfiction'; // required: replace example with your forum shortname

            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
</script> 
      <noscript>
       Please enable JavaScript to view the 
       <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
      </noscript> 
      <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> 
     </div> 
     <div class="section"> 
      <script type="text/javascript"><!--
    google_ad_client = "ca-pub-6549306531419697";
    /* jsFictionHorLinks */
    google_ad_slot = "1404987440";
    google_ad_width = 728;
    google_ad_height = 15;
//-->
</script> 
      <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> 
     </div> 
    </div> 
    <div class="footer">
      Copyright 2012 jsFiction.com | A project by 
     <a href="http://www.globefeed.com">GlobeFeed.com</a> | 
     <a href="http://www.jsfiction.com/termsofuse.htm"> Terms of Use </a> | 
     <a href="http://www.jsfiction.com/privacy.htm"> Privacy Policy </a> | 
     <a href="http://www.jsfiction.com/contact.htm">Contact</a> 
    </div> 
   </div> 
  </div> 
  <script type="text/javascript">
    var gr = new jsGraphics(document.getElementById("canvas"));

    var redPen = new jsPen(new jsColor("red"), 1);
    var greenPen = new jsPen(new jsColor("green"), 3);
    var bluePen = new jsPen(new jsColor("blue"), 1);

    var curvePoints = new Array(new jsPoint(28, 35), new jsPoint(52, 16), new jsPoint(177, 38), new jsPoint(149, 85), new jsPoint(57, 92));
    var bezierPoints = new Array(new jsPoint(-283, 10), new jsPoint(-206, 95), new jsPoint(-24, 90), new jsPoint(-56, 10));
    var closedCurvePoints = new Array(new jsPoint(-265, -50), new jsPoint(-68, -23), new jsPoint(-114, -50), new jsPoint(-58, -95));
    var polyPoints = new Array(new jsPoint(160, -50), new jsPoint(190, -80), new jsPoint(240, -15), new jsPoint(260, -67));

    gr.setOrigin(new jsPoint(300, 100));
    gr.setCoordinateSystem("cartecian");
    gr.showGrid(20);

    plotPoints(curvePoints);
    plotPoints(bezierPoints);

    gr.drawCurve(bluePen, curvePoints);
    gr.drawBezier(bluePen, bezierPoints);
    gr.fillClosedCurve(redPen.color, closedCurvePoints);

    gr.drawLine(greenPen, new jsPoint(25, -25), new jsPoint(80, -80));
    gr.fillEllipse(new jsColor("aqua"), new jsPoint(100, -55), 50, 30);
    gr.drawPolygon(redPen, polyPoints);

    var font = new jsFont("arial", "bold", "12px");

    gr.drawText("Curve passing through given points.", new jsPoint(200, 80), font, bluePen.color, 90);
    gr.drawText("Cubic Bezier curve.", new jsPoint(-220, 40), font, bluePen.color, 110);
    gr.drawText("Filled, closed curve.", new jsPoint(-60, -25), font, bluePen.color, 60);
    gr.drawText("Basic drawing (line, ellipse, polygon).", new jsPoint(25, -80), font, bluePen.color);



    plotPoints(closedCurvePoints);

    function plotPoints(points) {
        for (i in points) {
            gr.fillRectangle(new jsColor("green"), new jsPoint(points[i].x - 2, points[i].y + 2), 4, 4);
        }
    }

    //default and cartecian illustration..
    var gr1 = new jsGraphics(document.getElementById("canvas1"));
    var gr2 = new jsGraphics(document.getElementById("canvas2"));

    gr1.setOrigin(new jsPoint(60, 60));
    gr1.setCoordinateSystem("default");
    gr1.showGrid(20);
    gr1.drawText("default", new jsPoint(20, 20), font, bluePen.color);

    gr2.setOrigin(new jsPoint(60, 60));
    gr2.setCoordinateSystem("cartecian");
    gr2.showGrid(20);
    gr2.drawText("cartecian", new jsPoint(20, 40), font, bluePen.color);

    //scale illustration..
    var gr3 = new jsGraphics(document.getElementById("canvas3"));
    var gr4 = new jsGraphics(document.getElementById("canvas4"));

    gr3.showGrid(20);
    gr3.drawLine(bluePen, new jsPoint(20, 20), new jsPoint(60, 50));
    gr3.drawText("default scale = 1, Line (20,20) to (60,50)", new jsPoint(20, 70), font, bluePen.color);

    gr4.setScale(2);
    gr4.showGrid(20);
    gr4.drawLine(bluePen, new jsPoint(20, 20), new jsPoint(60, 50));
    gr4.drawText("scale = 2, Line (20,20) to (60,50)", new jsPoint(10, 45), font, bluePen.color);

</script> 
  <!--[if gte IE 7]--> 
  <script type="text/javascript">
    (function() {
        var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
        po.src = 'https://apis.google.com/js/plusone.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
    })();
</script> 
  <!--[endif]--> 
  <script type="text/javascript">
    var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
    document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script> 
  <script type="text/javascript">
    try {
        var pageTracker = _gat._getTracker("UA-350192-9");
        pageTracker._trackPageview();
    } catch (err) { }</script>  
 </body>
</html>