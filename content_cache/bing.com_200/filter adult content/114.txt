<!doctype html>
<html lang="en">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="HandheldFriendly" content="True"> 
  <meta name="MobileOptimized" content="480"> 
  <meta name="viewport" content="width=device-width, height=device-height initial-scale=1.0, maximum-scale=1.0, user-scalable=0"> 
  <title>Java Collections - List</title> 
  <meta name="description" content="Explains how Java's List interface works which is part of the Java Collection API."> 
  <meta name="keywords" content="java collection collections List java.util.List API framework"> 
  <meta name="author" content="Jakob Jenkov"> 
  <meta name="twitter:card" content="summary_large_image"> 
  <meta name="twitter:site" content="@jjenkov"> 
  <meta name="twitter:title" content="Java Collections - List"> 
  <meta name="twitter:description" content="Explains how Java's List interface works which is part of the Java Collection API."> 
  <meta name="twitter:creator" content="@jjenkov"> 
  <meta name="twitter:domain" content="jenkov.com"> 
  <meta name="twitter:image:src" content="http://tutorials.jenkov.com/images/java-collections/java-collections-teaser-500-300.png"> 
  <meta name="og:type" content="article"> 
  <meta name="og:title" content="Java Collections - List"> 
  <meta property="og:url" content="http://tutorials.jenkov.com/java-collections/list.html"> 
  <meta property="og:description" content="Explains how Java's List interface works which is part of the Java Collection API."> 
  <meta property="og:image" content="http://tutorials.jenkov.com/images/java-collections/java-collections-teaser-500-300.png"> 
  <link href="https://plus.google.com/108227213807945109821" rel="publisher"> 
  <meta name="google-site-verification" content="i_TwzdElg-by5uXLvyAjuIaCjxo0yjtW8LdRPUDEEcw"> 
  <!-- jQuery --> 
  <!--<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script> --> 
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script> 
 </head> 
 <body> 
  <style>
body {background-color: #f0f0f0;background-image: linear-gradient(180deg, #f0f0f0, #e0e0e0);}
.dataTable th, .dataTable td { padding: 2px 8px; }
</style> 
  <style id="layoutCss"></style> 
  <style id="jqcCss"></style> 
  <style id="articleCss"></style> 
  <style id="navBarCss"></style> 
  <style>
code  { font-size: 14px; }
</style> 
  <script>
lcv = "4";
ls = localStorage;
cacheLoaded = false;
pageLoaded = false;

var prevArticleInCategory = "/java-collections/generic-collections.html";
var nextArticleInCategory = "/java-collections/set.html";
</script> 
  <script id="jqcJs"></script> 
  <script id="bottomNavBarModule"></script> 
  <script>
function jsonp(url) {
    var script   = document.createElement("script"); script.type = "text/javascript"; script.src = url;
    document.body.appendChild(script);
}
function insertById(ids) {
    for(var i=0, n=ids.length; i < n; i++) {
        var el = document.getElementById(ids[i]);
        if(el != null) { el.innerHTML = localStorage[ids[i]]; }
    }
}
function insertByClass(ids) {
    for(var i=0, n=ids.length; i<n; i++) {
        var els = document.getElementsByClassName(ids[i]);
        for(var j=0,m=els.length; j<m; j++) { els[j].innerHTML = localStorage[ids[i]]; }
    }
}
function init() {
    if(cacheLoaded == true && pageLoaded == true) {
        console.log("initializing page");
        insertById(["layoutCss", "jqcCss", "topBarLogo", "articleCss", "navBarCss", "bottomNavBar", "bottomNavBarModule", "jqcJs"]);
        insertByClass(["authorPhoto", "authorSocialLinks", "newsletterForm", "googlePlusShare"]);
        $(document).ready(function() { bottomNavBarModule(); });
        console.log("page initialized");
    }
}
if(ls.lcv != lcv) {
    for(var i=0; i < ls.length; i++){
        ls.removeItem(ls.key(i));
    }
    jsonp("/cached-" + lcv + ".js");
    console.log("cache cleared");
} else {
    cacheLoaded = true;
}
ls.lcv = lcv;
</script> 
  <!-- jqComponents --> 
  <script>
articleLen = 9175;
adRandom = Math.random() * 100;

function dw(text) { document.write(text); }

function writeAd(adSlot, w, h) {
 dw("<script async src='//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js'><"); dw("/script>");
 dw("<ins class='adsbygoogle' style='display:inline-block;width:" + w + "px;height:" + h + "px' data-ad-client='ca-pub-5569543489255665' data-ad-slot='" +  adSlot + "'></ins>");
 dw("<script>");
 dw("(adsbygoogle = window.adsbygoogle || []).push({});");
 dw("<"); dw("/script>");
}

function topAdStyles(w, mT, mB) {
    var adEl = document.getElementById("topAds");
    adEl.style.width = (w + "px"); adEl.style.marginTop = (mT + "px"); adEl.style.marginBottom = (mB + "px"); adEl.style.marginRight = "auto"; adEl.style.marginLeft = "auto";
}

function bottomAdStyles(elId, w, mT, mB) {
    var adEl = document.getElementById(elId);
    adEl.style.width = (w + "px"); adEl.style.marginTop = (mT + "px"); adEl.style.marginBottom = (mB + "px"); adEl.style.marginRight = "auto"; adEl.style.marginLeft = "auto";
}
</script> 
  <div id="topBar"> 
   <div jqc-row jqc-row-paddings="0:0 3:24"> 
    <div jqc-cell="0:12c"> 
     <div id="topBarContent"> 
      <div id="topBarLogo"></div> 
      <div id="topBarPhrase">
       Tech and Media Labs
      </div> 
      <div id="topBarMenu"> 
       <a href="http://tutorials.jenkov.com">Tutorials</a> 
       <a href="http://jenkov.com/about/index.html">About</a> 
       <a href="http://jenkov.com/rss.xml">RSS</a> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div id="cookieNote"> 
   <div jqc-row jqc-row-widths="0:100% 4:1200" jqc-row-paddings="0:0 3:24"> 
    <div jqc-cell="0:12c"> 
     <div class="card">
       This site uses cookies to improve the user experience. 
      <button onclick="hideCookieNote()">OK</button> 
     </div> 
    </div> 
   </div> 
  </div> 
  <script>
function hideCookieNote() { document.getElementById("cookieNote").innerHTML = ""; ls.cookieNote = 0; }

if(ls.cookieNote == 0) {
    hideCookieNote();
}
</script> 
  <div jqc-row jqc-row-widths="0:100% 4:1200" jqc-row-paddings="0:0"> 
   <div jqc-cell="0:12c"> 
    <div id="topAds"> 
     <script>
                var adEl = document.getElementById("topAds");
                if(window.innerWidth > 970) {
                    if(adRandom <= 5){
                        writeAd("6094206201", 970, 90); /* wider ad - 5% of page views */
                        topAdStyles(970, 20, 20);
                    } else {
                        writeAd("7630855405", 728, 90); /* standard ad */
                        topAdStyles(728, 20, 20);
                    }
                } else if(window.innerWidth >= 728 && window.innerWidth <= 970)  {  /* Tutorials - Top Banner */
                    writeAd("7630855405", 728, 90);
                    topAdStyles(728, 20, 20);
                } else {  /* Tutorials - Top Banner - Mobile */
                    writeAd("3297914607", 320, 50);
                    topAdStyles(320, 10, 0);
                }
            </script> 
    </div> 
   </div> 
  </div> 
  <div id="main"> 
   <div jqc-row jqc-row-widths="0:100% 4:1200" jqc-column-counts="0:24" jqc-row-paddings="0:0 3:24" jqc-cell-spacings="0:8"> 
    <div jqc-cell="0:0c  3:7c"> 
     <div id="trailToc" class="card"> 
      <div id="trailTitle">
       Java Collections
      </div>
      <ol>
       <li><a href="/java-collections/index.html">Java Collections Tutorial</a></li>
       <li><a href="/java-collections/overview.html">Java Collections - Overview</a></li>
       <li><a href="/java-collections/iterable.html">Java Collections - Iterable</a></li>
       <li><a href="/java-collections/collection.html">Java Collections - Collection</a></li>
       <li><a href="/java-collections/generic-collections.html">Java Collections - Generic Collections</a></li>
       <li><a href="/java-collections/list.html"><b>Java Collections - List</b></a></li>
       <li><a href="/java-collections/set.html">Java Collections - Set</a></li>
       <li><a href="/java-collections/sortedset.html">Java Collections - SortedSet</a></li>
       <li><a href="/java-collections/navigableset.html">Java Collections - NavigableSet</a></li>
       <li><a href="/java-collections/map.html">Java Collections - Map</a></li>
       <li><a href="/java-collections/sortedmap.html">Java Collections - SortedMap</a></li>
       <li><a href="/java-collections/navigablemap.html">Java Collections - NavigableMap</a></li>
       <li><a href="/java-collections/queue.html">Java Collections - Queue</a></li>
       <li><a href="/java-collections/deque.html">Java Collections - Deque</a></li>
       <li><a href="/java-collections/stack.html">Java Collections - Stack</a></li>
       <li><a href="/java-collections/hashcode-equals.html">Java Collections - hashCode() and equals()</a></li>
       <li><a href="/java-collections/sorting.html">Java Collections - Sorting</a></li>
       <li><a href="/java-collections/streams.html">Java Collections - Streams</a></li>
      </ol> 
     </div> 
     <br>
     <br> 
     <!-- Left Bar Adsense Banner Ad --> 
     <div id="side-ads"> 
      <script>
                if(window.innerWidth >= 900){
                    if(adRandom <= 94)     { writeAd("5873880207", 300,  600);}
                    else if(adRandom < 96) { writeAd("3389666608", 160,  600);}
                    else                   { writeAd("4257546205", 300, 1050);}
                }
            </script> 
     </div> 
     <br>
     <br> 
     <div style="display: none;" class="card newsletterForm"> 
     </div> 
    </div> 
    <div jqc-cell="0:24c 3:17c"> 
     <div class="card"> 
      <h1>Java Collections - List</h1> 
      <div id="mainBody"> 
       <div id="pageToc" itemscope itemtype="http://schema.org/SiteNavigationElement"> 
        <ul>
         <li><a href="#java-list-tutorial-video">Java List Tutorial Video</a></li>
         <li><a href="#implementations">List Implementations</a></li>
         <li><a href="#add">Adding and Accessing Elements</a></li>
         <li><a href="#remove">Removing Elements</a></li>
         <li><a href="#clearing-a-list">Clearing a List</a></li>
         <li><a href="#list-size">List Size</a></li>
         <li><a href="#generics">Generic Lists</a></li>
         <li><a href="#iterating-a-list">Iterating a List</a></li>
         <li><a href="#javadoc">More Details in the JavaDoc</a></li>
        </ul> 
       </div> 
       <div id="lastUpdate"> 
        <table>
         <tbody>
          <tr>
           <td class="authorPhoto"></td> 
           <td><p style="margin: 0px 0px 6px 0px;"> Jakob Jenkov<br> Last update: 2015-07-05 </p> 
            <div class="authorSocialLinks"></div> </td> 
          </tr> 
         </tbody>
        </table> 
       </div> 
       <p> The <code>java.util.List</code> interface is a subtype of the <a href="collection.html"><code>java.util.Collection</code></a> interface. It represents an ordered list of objects, meaning you can access the elements of a <code>List</code> in a specific order, and by an index too. You can also add the same element more than once to a <code>List</code>. </p> 
       <a name="java-list-tutorial-video"></a> 
       <h2>Java List Tutorial Video</h2> 
       <p> If you prefer to watch a video instead of reading text, here is a video version of this Java List tutorial: </p> 
       <iframe width="560" height="315" src="https://www.youtube.com/embed/d3QbptJRln4" frameborder="0" allowfullscreen></iframe> 
       <a name="implementations"></a> 
       <h2>List Implementations</h2> 
       <p> Being a <code>Collection</code> subtype all methods in the <code>Collection</code> interface are also available in the <code>List</code> interface. </p> 
       <p> Since <code>List</code> is an interface you need to instantiate a concrete implementation of the interface in order to use it. You can choose between the following <code>List</code> implementations in the Java Collections API: </p> 
       <ul> 
        <li>java.util.ArrayList</li> 
        <li>java.util.LinkedList</li> 
        <li>java.util.Vector</li> 
        <li>java.util.Stack</li> 
       </ul> 
       <p> There are also <code>List</code> implementations in the <code>java.util.concurrent</code> package, but I will leave the concurrency utilities out of this tutorial. </p> 
       <p> Here are a few examples of how to create a <code>List</code> instance: </p> 
       <pre class="codeBox">
List listA = new ArrayList();
List listB = new LinkedList();
List listC = new Vector();
List listD = new Stack();
</pre> 
       <a name="add"></a> 
       <h2>Adding and Accessing Elements</h2> 
       <p> To add elements to a <code>List</code> you call its <code>add()</code> method. This method is inherited from the <code>Collection</code> interface. Here are a few examples: </p> 
       <pre class="codeBox">
List listA = new ArrayList();

listA.add("element 1");
listA.add("element 2");
listA.add("element 3");

listA.add(0, "element 0");
</pre> 
       <p> The first three <code>add()</code> calls add a <code>String</code> instance to the end of the list. The last <code>add()</code> call adds a <code>String</code> at index 0, meaning at the beginning of the list. </p> 
       <p> The order in which the elements are added to the <code>List</code> is stored, so you can access the elements in the same order. You can do so using either the <code>get(int index)</code> method, or via the <code>Iterator</code> returned by the <code>iterator()</code> method. Here is how: </p> 
       <pre class="codeBox">
List listA = new ArrayList();

listA.add("element 0");
listA.add("element 1");
listA.add("element 2");

//access via index
String element0 = listA.get(0);
String element1 = listA.get(1);
String element3 = listA.get(2);


//access via Iterator
Iterator iterator = listA.iterator();
while(iterator.hasNext(){
  String element = (String) iterator.next();
}


//access via new for-loop
for(Object object : listA) {
    String element = (String) object;
}
</pre> 
       <p> When iterating the list via its <code>Iterator</code> or via the for-loop (which also uses the Iterator behind the scene), the elements are iterated in the same sequence they are stored in the list. </p> 
       <a name="remove"></a> 
       <h2>Removing Elements</h2> 
       <p> You can remove elements in two ways: </p> 
       <ol> 
        <li>remove(Object element)</li> 
        <li>remove(int index)</li> 
       </ol> 
       <p> <code>remove(Object element)</code> removes that element in the list, if it is present. All subsequent elements in the list are then moved up in the list. Their index thus decreases by 1. </p> 
       <p> <code>remove(int index)</code> removes the element at the given index. All subsequent elements in the list are then moved up in the list. Their index thus decreases by 1. </p> 
       <a name="clearing-a-list"></a> 
       <h2>Clearing a List</h2> 
       <p> The Java <code>List</code> interface contains a <code>clear()</code> method which removes all elements from the list when called. Here is simple example of clearing a <code>List</code> with <code>clear()</code>: </p> 
       <pre class="codeBox">
List list = new ArrayList();

list.add("object 1");
list.add("object 2");
//etc.

<b>list.clear();</b>
</pre> 
       <a name="list-size"></a> 
       <h2>List Size</h2> 
       <p> You can obtain the number of elements in the <code>List</code> by calling the <code>size()</code> method. Here is an example: </p> 
       <pre class="codeBox">
List list = new ArrayList();

list.add("object 1");
list.add("object 2");

int size = list.size();
</pre> 
       <a name="generics"></a> 
       <h2>Generic Lists</h2> 
       <p> By default you can put any <code>Object</code> into a <code>List</code>, but from Java 5, Java Generics makes it possible to limit the types of object you can insert into a <code>List</code>. Here is an example: </p> 
       <pre class="codeBox">
List&lt;MyObject&gt; list = new ArrayList&lt;MyObject&gt;();
</pre> 
       <p> This <code>List</code> can now only have <code>MyObject</code> instances inserted into it. You can then access and iterate its elements without casting them. Here is how it looks: </p> 
       <pre class="codeBox">
MyObject myObject = list.get(0);

for(MyObject anObject : list){
   //do someting to anObject...
}
</pre> 
       <p> For more information about Java Generics, see the <a href="/java-generics/index.html">Java Generics Tutorial</a>. </p> 
       <a name="iterating-a-list"></a> 
       <h2>Iterating a List</h2> 
       <p> You can iterate a Java <code>List</code> in several different ways. I will cover the three most common mechanisms here. </p> 
       <p> The first way to iterate a <code>List</code> is to use an <code>Iterator</code>. Here is an example of iterating a <code>List</code> with an <code>Iterator</code>: </p> 
       <pre class="codeBox">
List list = new ArrayList();

//add elements to list

Iterator iterator = list.iterator();
while(iterator.hasNext()) {
    Object next = iterator.next();
}
</pre> 
       <p> You obtain an <code>Iterator</code> by calling the <code>iterator()</code> method of the <code>List</code> interface. </p> 
       <p> Once you have obtained an <code>Iterator</code> you can keep calling its <code>hasNext()</code> method until it returns <code>false</code>. Calling <code>hasNext()</code> is done inside a <code>while</code> loop as you can see. </p> 
       <p> Inside the <code>while</code> loop you call the <code>next()</code> method of the <code>Iterator</code> interface to obtain the next element pointed to by the <code>Iterator</code>. </p> 
       <p> If the <code>List</code> is typed you can save some object casting inside the <code>while</code> loop. Here is an example: </p> 
       <pre class="codeBox">
List&lt;String&gt; mylistStr = new ArrayList&lt;&gt;();

Iterator&lt;String&gt; iterator = mylistStr.iterator();
while(iterator.hasNext()){
    String obj = iterator.next();
}
</pre> 
       <p> Another way to iterate a <code>List</code> is to use the <code>for</code> loop added in Java 5 (also called a "for each" loop). Here is an example of iterating a <code>List</code> using the <code>for</code> loop: </p> 
       <pre class="codeBox">
List list = new ArrayList();

//add elements to list

for(Object obj : list) {
    
}
</pre> 
       <p> The <code>for</code> loop is executed once per element in the <code>List</code>. Inside the <code>for</code> loop each element is in turn bound to the <code>obj</code> variable. </p> 
       <p> If the list is typed (a <i>generic</i> <code>List</code>) you can change the type of the variable inside the <code>for</code> loop. Here is typed <code>List</code> iteration example: </p> 
       <pre class="codeBox">
List&lt;String&gt; list = new ArrayList&lt;String&gt;();

//add elements to list

for(String obj : list) {
    
}
</pre> 
       <p> Notice how the <code>List</code> is typed to <code>String</code>. Therefore you can set the type of the variable inside the <code>for</code> loop to <code>String</code>. </p> 
       <p> The last way to iterate a <code>List</code> is to use a standard <code>for</code> loop like this: </p> 
       <pre class="codeBox">
List list = new ArrayList();

//add elements to list

for(int i=0; i &lt; list.size(); i++) {
    Object obj = list.get(i);
}
</pre> 
       <p> The <code>for</code> loop creates an <code>int</code> variable and initializes it to 0. Then it loops as long as the int variable <code>i</code> is less than the size of the list. For each iteration the variable <code>i</code> is incremented. </p> 
       <p> Inside the <code>for</code> loop the example accesses the elements in the <code>List</code> via its <code>get()</code> method, passing the incrementing variable <code>i</code> as parameter. </p> 
       <a name="javadoc"></a> 
       <h2>More Details in the JavaDoc</h2> 
       <p> There is a lot more you can do with a <code>List</code>, but you will have to check out the JavaDoc for more details. This text focused on the two most common operations: Adding / removing elements, and iterating the elements. </p> 
       <div> 
       </div> 
       <div id="next">
        Next: 
        <a href="/java-collections/set.html">Java Collections - Set</a>
       </div> 
       <div id="bottomSocial"> 
        <div style="display:inline-block;"> 
         <table> 
          <tbody>
           <tr>
            <td colspan="2"> 
             <div class="g-plus" data-action="share" data-height="24" data-annotation="none"></div> <script type="text/javascript">
                                    (function() {
                                        var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
                                        po.src = 'https://apis.google.com/js/platform.js';
                                        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
                                     })();
                                </script> <a href="https://twitter.com/share" class="twitter-share-button" data-via="jjenkov" target="_blank">Tweet</a> <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script> </td>
           </tr> 
           <tr>
            <td class="authorPhoto"></td>
            <td><p style="margin: 0px 0px 6px 0px;">Jakob Jenkov</p>
             <div class="authorSocialLinks"></div></td>
           </tr> 
          </tbody>
         </table> 
        </div> 
        <div style="display:inline-block;" class="newsletterForm"></div> 
       </div> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <!-- Bottom ads - (nested row is working, but should perhaps not be a nested row?) (note: was a nested row in old design - not in new) --> 
  <div jqc-row jqc-row-paddings="0:0"> 
   <div jqc-cell="0:12c"> 
    <div id="pageBottomAds"> 
     <script>
                    if(articleLen >= 4000){ /* for longer articles place ads here, at the bottom of the page */
                        if(window.innerWidth >= 728 ) {  /* Adsense Ads - Bottom Banner */
                            if(adRandom < 5)       { writeAd("2721937400", 970, 90);  bottomAdStyles("pageBottomAds", 970, 20, 20);}
                            else if(adRandom < 30) { writeAd("9547200207", 970, 250); bottomAdStyles("pageBottomAds", 970, 20, 20);}
                            else                   { writeAd("7776167002", 728, 90);  bottomAdStyles("pageBottomAds", 728, 20, 20);}
                        } else if(window.innerWidth < 728) {  /* Adsense Ads - Bottom Banner - Mobile */
                            if(adRandom < 50) {
                                writeAd("4216244607", 320, 50); bottomAdStyles("pageBottomAds", 320, 10, 0);
                            } else {
                                writeAd("7377085404", 320, 100); bottomAdStyles("pageBottomAds", 320, 10, 0);
                            }
                        }
                    }
                </script> 
     <br>
     <br>
     <br> 
    </div> 
    <div style="height: 30px"></div> 
    <div id="disqusComments" class="card"> 
     <div id="disqus_thread"></div> 
     <script type="text/javascript">
                var disqus_shortname = 'tutorials-jenkov-com'; // required: replace example with your forum shortname

                /* * * DON'T EDIT BELOW THIS LINE * * */
                (function() {
                    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();
            </script> 
     <noscript>
      Please enable JavaScript to view the 
      <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
     </noscript> 
    </div> 
   </div> 
  </div> 
  <span id="layoutManager" jqc-type="jqcResponsiveLayoutManager" jqc-row-paddings="0:8 4:0"></span> 
  <div id="footerBar"> 
   <div jqc-row> 
    <div jqc-cell="0:12c">
      Copyright &nbsp;Jenkov Aps 
    </div> 
   </div> 
  </div> 
  <div id="trailTocFixedDiv"> 
   <div id="trailTocFixedCloseButton">
    Close TOC
   </div> 
   <div id="trailTocFixedInnerDiv"></div> 
  </div> 
  <div id="bottomNavBar"></div> 
  <!-- init page --> 
  <script>
pageLoaded = true;
init();
</script> 
  <!-- Google Analytics Script --> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-4036229-3', 'auto');
  ga('send', 'pageview');

</script>  
 </body>
</html>