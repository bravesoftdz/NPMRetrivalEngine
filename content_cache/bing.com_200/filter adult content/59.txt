<!doctype html>
<html lang="zh-cn">
 <head> 
  <meta charset="utf-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <title>javaweb????(???)——Filter???? - ???? - ???</title> 
  <link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=ChDk9h03-S75WEqNhGvXkWireJ5cCWdK1xRM9NIXfnM1"> 
  <link id="MainCss" type="text/css" rel="stylesheet" href="/skins/SimpleClear/bundle-SimpleClear.css?v=EVOKy_9d-0OzsDt7Iaw0OHSiRqKJoQVRFQeK_xCGZ6c1"> 
  <link type="text/css" rel="stylesheet" href="/blog/customcss/133816.css?v=ywxzTbV%2b2OE%2bOBzQ0AZQvXcKb58%3d"> 
  <link id="mobile-style" media="only screen and (max-width: 768px)" type="text/css" rel="stylesheet" href="/skins/SimpleClear/bundle-SimpleClear-mobile.css?v=anHBEvdDomkcPmF4SND4WEEhU5d1hZayHTLY-ZIf0RA1"> 
  <link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/xdp-gacl/rss"> 
  <link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/xdp-gacl/rsd.xml"> 
  <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/xdp-gacl/wlwmanifest.xml"> 
  <script src="//common.cnblogs.com/script/jquery.js" type="text/javascript"></script> 
  <script type="text/javascript">var currentBlogApp = 'xdp-gacl', cb_enable_mathjax=false;var isLogined=false;</script> 
  <script src="/bundles/blog-common.js?v=zLAewHCaOmEYGOn3iyM1yprOSNEWA2FkU2TsbgxrSSg1" type="text/javascript"></script> 
 </head> 
 <body> 
  <a name="top"></a> 
  <div id="page_begin_html"></div>
  <script>load_page_begin_html();</script> 
  <div id="main"> 
   <div id="header"> 
    <h1><a id="Header1_HeaderTitle" href="http://www.cnblogs.com/xdp-gacl/">????</a></h1> 
    <p id="tagline">????????????????</p>
   </div> 
   <div id="post_detail"> 
    <div class="post"> 
     <h2 class="postTitle"><a id="cb_post_title_url" href="http://www.cnblogs.com/xdp-gacl/p/3952405.html">javaweb????(???)——Filter????</a></h2> 
     <div class="postText">
      <div id="cnblogs_post_body">
       <p>???filter???????????????request?response?????????????Decorator(???)???request?response???????????????????????????????</p> 
       <h2>??Decorator????</h2> 
       <h3>1.1?Decorator??????</h3> 
       <p>??????????????????????2?????????????</p> 
       <ol> 
        <li>??????????????</li> 
        <li>??Decorator????????????</li> 
       </ol> 
       <p>?????????JAVA?????????????????Decorator?????<span style="color: #ff0000;"><strong>????????(Wrapper)??????????????????????????????????????</strong></span><span style="color: #ff0000;"><strong>????????????????????????????????????????????????????????????????</strong></span></p> 
       <p>??????????????????????????????????????????????????????????????????<span style="color: #ff0000;"><strong>???????????Decorator????????????????????????????????class??</strong></span>???request?response???????????servlet????sun?????HttpServletRequest\response?????????????Tomcat????????request?response???????web??????servlet???????????????????????servlet????????????????????????????request?response????????????????????????????????????Decorator??????????????</p> 
       <h3>1.2?Decorator???????</h3> 
       <p>??1.??????????????????????????????????????<br>??2.????????????????????????<br>??3.?????????????????????<br>??4.?????????????????</p> 
       <h2>&nbsp;????Decorator??????request??</h2> 
       <p>??Servlet API ??????request???Decorator??????????HttpServletRequestWrapper?HttpServletRequestWrapper ????request ????????????????????????????????? request ???????????????request???????????request?????????</p> 
       <h3>2.1???Decorator????request????get?post????????????</h3> 
       <p>??????????????????CharacterEncodingFilter??????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;">  1</span> <span style="color: #0000ff;">package</span><span style="color: #000000;"> me.gacl.web.filter;
</span><span style="color: #008080;">  2</span> 
<span style="color: #008080;">  3</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #008080;">  4</span> 
<span style="color: #008080;">  5</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.Filter;
</span><span style="color: #008080;">  6</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterChain;
</span><span style="color: #008080;">  7</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterConfig;
</span><span style="color: #008080;">  8</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletException;
</span><span style="color: #008080;">  9</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletRequest;
</span><span style="color: #008080;"> 10</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletResponse;
</span><span style="color: #008080;"> 11</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #008080;"> 12</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequestWrapper;
</span><span style="color: #008080;"> 13</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;
</span><span style="color: #008080;"> 14</span> 
<span style="color: #008080;"> 15</span> <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 16</span> <span style="color: #008000;">* @ClassName: CharacterEncodingFilter
</span><span style="color: #008080;"> 17</span> <span style="color: #008000;">* @Description: ??????????get?post????????????
</span><span style="color: #008080;"> 18</span> <span style="color: #008000;">* </span><span style="color: #808080;">@author</span><span style="color: #008000;">: ????
</span><span style="color: #008080;"> 19</span> <span style="color: #008000;">* @date: 2014-8-31 ??11:09:37
</span><span style="color: #008080;"> 20</span> <span style="color: #008000;">*
</span><span style="color: #008080;"> 21</span> <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 22</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> CharacterEncodingFilter <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Filter {
</span><span style="color: #008080;"> 23</span> 
<span style="color: #008080;"> 24</span>     <span style="color: #0000ff;">private</span> FilterConfig filterConfig = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 25</span>     <span style="color: #008000;">//</span><span style="color: #008000;">?????????</span>
<span style="color: #008080;"> 26</span>     <span style="color: #0000ff;">private</span> String defaultCharset = "UTF-8"<span style="color: #000000;">;
</span><span style="color: #008080;"> 27</span> 
<span style="color: #008080;"> 28</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doFilter(ServletRequest req, ServletResponse resp,
</span><span style="color: #008080;"> 29</span>             FilterChain chain) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException, ServletException {
</span><span style="color: #008080;"> 30</span>         
<span style="color: #008080;"> 31</span>         HttpServletRequest request =<span style="color: #000000;"> (HttpServletRequest) req;
</span><span style="color: #008080;"> 32</span>         HttpServletResponse response =<span style="color: #000000;"> (HttpServletResponse) resp;
</span><span style="color: #008080;"> 33</span>         <span style="color: #008000;">//</span><span style="color: #008000;">???web.xml????????</span>
<span style="color: #008080;"> 34</span>         String charset = filterConfig.getInitParameter("charset"<span style="color: #000000;">);
</span><span style="color: #008080;"> 35</span>         <span style="color: #0000ff;">if</span>(charset==<span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;"> 36</span>             charset =<span style="color: #000000;"> defaultCharset;
</span><span style="color: #008080;"> 37</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 38</span> <span style="color: #000000;">        request.setCharacterEncoding(charset);
</span><span style="color: #008080;"> 39</span> <span style="color: #000000;">        response.setCharacterEncoding(charset);
</span><span style="color: #008080;"> 40</span>         response.setContentType("text/html;charset="+<span style="color: #000000;">charset);
</span><span style="color: #008080;"> 41</span>         
<span style="color: #008080;"> 42</span>         MyCharacterEncodingRequest requestWrapper = <span style="color: #0000ff;">new</span><span style="color: #000000;"> MyCharacterEncodingRequest(request);
</span><span style="color: #008080;"> 43</span> <span style="color: #000000;">        chain.doFilter(requestWrapper, response);
</span><span style="color: #008080;"> 44</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 45</span> 
<span style="color: #008080;"> 46</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> init(FilterConfig filterConfig) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException {
</span><span style="color: #008080;"> 47</span>         <span style="color: #008000;">//</span><span style="color: #008000;">?????????????</span>
<span style="color: #008080;"> 48</span>         <span style="color: #0000ff;">this</span>.filterConfig =<span style="color: #000000;"> filterConfig;
</span><span style="color: #008080;"> 49</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 50</span>     
<span style="color: #008080;"> 51</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> destroy() {
</span><span style="color: #008080;"> 52</span> 
<span style="color: #008080;"> 53</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 54</span> <span style="color: #000000;">}
</span><span style="color: #008080;"> 55</span> 
<span style="color: #008080;"> 56</span> <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 57</span> <span style="color: #008000;">* @ClassName: MyCharacterEncodingRequest
</span><span style="color: #008080;"> 58</span> <span style="color: #008000;">* @Description: Servlet API??????request???Decorator??????????HttpServletRequestWrapper,
</span><span style="color: #008080;"> 59</span> <span style="color: #008000;">* (HttpServletRequestWrapper????request????????????????????????????????? request???????)
</span><span style="color: #008080;"> 60</span> <span style="color: #008000;">* ???????request???????????request?????????
</span><span style="color: #008080;"> 61</span> <span style="color: #008000;">* ???????request?????????????HttpServletRequestWrapper????????????????
</span><span style="color: #008080;"> 62</span> <span style="color: #008000;">* </span><span style="color: #808080;">@author</span><span style="color: #008000;">: ????
</span><span style="color: #008080;"> 63</span> <span style="color: #008000;">* @date: 2014-9-2 ??10:42:57
</span><span style="color: #008080;"> 64</span> <span style="color: #008000;">*     1.????????????? 
</span><span style="color: #008080;"> 65</span> <span style="color: #008000;">    2??????????????
</span><span style="color: #008080;"> 66</span> <span style="color: #008000;">    3?????????????????
</span><span style="color: #008080;"> 67</span> <span style="color: #008000;">    4??????????
</span><span style="color: #008080;"> 68</span> <span style="color: #008000;">    5?????????????????????????????
</span><span style="color: #008080;"> 69</span> <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 70</span> <span style="color: #0000ff;">class</span> MyCharacterEncodingRequest <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServletRequestWrapper{
</span><span style="color: #008080;"> 71</span>     <span style="color: #008000;">//</span><span style="color: #008000;">?????????????(request???????????)</span>
<span style="color: #008080;"> 72</span>     <span style="color: #0000ff;">private</span><span style="color: #000000;"> HttpServletRequest request;
</span><span style="color: #008080;"> 73</span>     <span style="color: #008000;">//</span><span style="color: #008000;">????????????????</span>
<span style="color: #008080;"> 74</span>     <span style="color: #0000ff;">public</span><span style="color: #000000;"> MyCharacterEncodingRequest(HttpServletRequest request) {
</span><span style="color: #008080;"> 75</span>         <span style="color: #0000ff;">super</span><span style="color: #000000;">(request);
</span><span style="color: #008080;"> 76</span>         <span style="color: #0000ff;">this</span>.request =<span style="color: #000000;"> request;
</span><span style="color: #008080;"> 77</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 78</span>     <span style="color: #008000;">/*</span><span style="color: #008000;"> ???????getParameter??
</span><span style="color: #008080;"> 79</span> <span style="color: #008000;">     * @see javax.servlet.ServletRequestWrapper#getParameter(java.lang.String)
</span><span style="color: #008080;"> 80</span>      <span style="color: #008000;">*/</span>
<span style="color: #008080;"> 81</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 82</span>     <span style="color: #0000ff;">public</span><span style="color: #000000;"> String getParameter(String name) {
</span><span style="color: #008080;"> 83</span>         <span style="color: #0000ff;">try</span><span style="color: #000000;">{
</span><span style="color: #008080;"> 84</span>             <span style="color: #008000;">//</span><span style="color: #008000;">??????</span>
<span style="color: #008080;"> 85</span>             String value= <span style="color: #0000ff;">this</span><span style="color: #000000;">.request.getParameter(name);
</span><span style="color: #008080;"> 86</span>             <span style="color: #0000ff;">if</span>(value==<span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;"> 87</span>                 <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 88</span> <span style="color: #000000;">            }
</span><span style="color: #008080;"> 89</span>             <span style="color: #008000;">//</span><span style="color: #008000;">?????get??????????????????</span>
<span style="color: #008080;"> 90</span>             <span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">this</span>.request.getMethod().equalsIgnoreCase("get"<span style="color: #000000;">)) {
</span><span style="color: #008080;"> 91</span>                 <span style="color: #0000ff;">return</span><span style="color: #000000;"> value;
</span><span style="color: #008080;"> 92</span>             }<span style="color: #0000ff;">else</span><span style="color: #000000;">{
</span><span style="color: #008080;"> 93</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">????get?????????????????????</span>
<span style="color: #008080;"> 94</span>                 value = <span style="color: #0000ff;">new</span> String(value.getBytes("ISO8859-1"),<span style="color: #0000ff;">this</span><span style="color: #000000;">.request.getCharacterEncoding());
</span><span style="color: #008080;"> 95</span>                 <span style="color: #0000ff;">return</span><span style="color: #000000;"> value;
</span><span style="color: #008080;"> 96</span> <span style="color: #000000;">            }
</span><span style="color: #008080;"> 97</span>         }<span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
</span><span style="color: #008080;"> 98</span>             <span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RuntimeException(e);
</span><span style="color: #008080;"> 99</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">100</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">101</span> }</pre> 
       </div> 
       <p>???web.xml?????CharacterEncodingFilter</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span> <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">??????????get?post????????????</span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;"> 2</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 3</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>CharacterEncodingFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>me.gacl.web.filter.CharacterEncodingFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span>   
<span style="color: #008080;"> 7</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>CharacterEncodingFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/*<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span></pre> 
       </div> 
       <p>????jsp????????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span> <span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">@ page language</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">java</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #000000;"> pageEncoding</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">UTF-8</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>
<span style="color: #008080;"> 2</span> <span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #f5f5f5; color: #000000;">??jstl??? </span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>
<span style="color: #008080;"> 3</span> <span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">@taglib uri</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">http://java.sun.com/jsp/jstl/core</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #000000;"> prefix</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">c</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>
<span style="color: #008080;"> 4</span> <span style="color: #0000ff;">&lt;!</span><span style="color: #ff00ff;">DOCTYPE HTML</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>???????????get?post????????????<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>   
<span style="color: #008080;">10</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span>        <span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #f5f5f5; color: #000000;">??c:url????url?????url???servletDemo1???</span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>
<span style="color: #008080;">12</span>        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">c:url </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="/servlet/ServletDemo1"</span><span style="color: #ff0000;"> scope</span><span style="color: #0000ff;">="page"</span><span style="color: #ff0000;"> var</span><span style="color: #0000ff;">="servletDemo1"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>            <span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #f5f5f5; color: #000000;">???url???????? ??????username????????</span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>
<span style="color: #008080;">14</span>            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">c:param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="username"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="????"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">c:param</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span>        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">c:url</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">16</span>       <span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #f5f5f5; color: #000000;">??get????? </span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>
<span style="color: #008080;">17</span>        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="${servletDemo1}"</span><span style="color: #0000ff;">&gt;</span>???(get????)<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span>        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">hr</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #008080;">19</span>        <span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #f5f5f5; color: #000000;">??post?????? </span><span style="background-color: #f5f5f5; color: #000000;">--</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>
<span style="color: #008080;">20</span>        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form </span><span style="color: #ff0000;">action</span><span style="color: #0000ff;">="${pageContext.request.contextPath}/servlet/ServletDemo1"</span><span style="color: #ff0000;"> method</span><span style="color: #0000ff;">="post"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">21</span>            ????<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="username"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="????"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #008080;">22</span>            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="submit" <span style="color: #ff0000;">value</span>="post????"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">23</span>        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">24</span>        
<span style="color: #008080;">25</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">26</span> <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span></pre> 
       </div> 
       <p>???????????ServletDemo1</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">package</span><span style="color: #000000;"> me.gacl.web.controller;
</span><span style="color: #008080;"> 2</span> 
<span style="color: #008080;"> 3</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #008080;"> 4</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.PrintWriter;
</span><span style="color: #008080;"> 5</span> 
<span style="color: #008080;"> 6</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletException;
</span><span style="color: #008080;"> 7</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServlet;
</span><span style="color: #008080;"> 8</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #008080;"> 9</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;
</span><span style="color: #008080;">10</span> 
<span style="color: #008080;">11</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> ServletDemo1 <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServlet {
</span><span style="color: #008080;">12</span> 
<span style="color: #008080;">13</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doGet(HttpServletRequest request, HttpServletResponse response)
</span><span style="color: #008080;">14</span>             <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException, IOException {
</span><span style="color: #008080;">15</span>         <span style="color: #008000;">//</span><span style="color: #008000;">????</span>
<span style="color: #008080;">16</span>         String username = request.getParameter("username"<span style="color: #000000;">);
</span><span style="color: #008080;">17</span>         <span style="color: #008000;">//</span><span style="color: #008000;">??????</span>
<span style="color: #008080;">18</span>         String method =<span style="color: #000000;"> request.getMethod();
</span><span style="color: #008080;">19</span>         <span style="color: #008000;">//</span><span style="color: #008000;">?????</span>
<span style="color: #008080;">20</span>         PrintWriter out =<span style="color: #000000;"> response.getWriter();
</span><span style="color: #008080;">21</span>         out.write("??????"+<span style="color: #000000;">method);
</span><span style="color: #008080;">22</span>         out.write("&lt;br/&gt;"<span style="color: #000000;">);
</span><span style="color: #008080;">23</span>         out.write("???????"+<span style="color: #000000;">username);
</span><span style="color: #008080;">24</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">25</span> 
<span style="color: #008080;">26</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doPost(HttpServletRequest request, HttpServletResponse response)
</span><span style="color: #008080;">27</span>             <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException, IOException {
</span><span style="color: #008080;">28</span> <span style="color: #000000;">        doGet(request, response);
</span><span style="color: #008080;">29</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">30</span> 
<span style="color: #008080;">31</span> }</pre> 
       </div> 
       <p>?????????</p> 
       <p>??<img src="http://images.cnitblog.com/blog/289233/201409/022317178911173.gif" alt="" width="950" height="224"></p> 
       <p>????????????????get??????post????????????????????</p> 
       <h3>2.2???Decorator????request????html??????</h3> 
       <p>??????html???????????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;">  1</span> <span style="color: #0000ff;">package</span><span style="color: #000000;"> me.gacl.web.filter;
</span><span style="color: #008080;">  2</span> 
<span style="color: #008080;">  3</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #008080;">  4</span> 
<span style="color: #008080;">  5</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.Filter;
</span><span style="color: #008080;">  6</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterChain;
</span><span style="color: #008080;">  7</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterConfig;
</span><span style="color: #008080;">  8</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletException;
</span><span style="color: #008080;">  9</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletRequest;
</span><span style="color: #008080;"> 10</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletResponse;
</span><span style="color: #008080;"> 11</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #008080;"> 12</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequestWrapper;
</span><span style="color: #008080;"> 13</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;
</span><span style="color: #008080;"> 14</span> 
<span style="color: #008080;"> 15</span> <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 16</span> <span style="color: #008000;">* @ClassName: HtmlFilter
</span><span style="color: #008080;"> 17</span> <span style="color: #008000;">* @Description: html?????
</span><span style="color: #008080;"> 18</span> <span style="color: #008000;">* </span><span style="color: #808080;">@author</span><span style="color: #008000;">: ????
</span><span style="color: #008080;"> 19</span> <span style="color: #008000;">* @date: 2014-9-2 ??11:28:41
</span><span style="color: #008080;"> 20</span> <span style="color: #008000;">*
</span><span style="color: #008080;"> 21</span> <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 22</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> HtmlFilter <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Filter {
</span><span style="color: #008080;"> 23</span> 
<span style="color: #008080;"> 24</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doFilter(ServletRequest req, ServletResponse resp,
</span><span style="color: #008080;"> 25</span>             FilterChain chain) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException, ServletException {
</span><span style="color: #008080;"> 26</span>         
<span style="color: #008080;"> 27</span>         HttpServletRequest request =<span style="color: #000000;"> (HttpServletRequest) req;
</span><span style="color: #008080;"> 28</span>         HttpServletResponse response =<span style="color: #000000;"> (HttpServletResponse) resp;
</span><span style="color: #008080;"> 29</span> 
<span style="color: #008080;"> 30</span>         MyHtmlRequest myrequest = <span style="color: #0000ff;">new</span><span style="color: #000000;"> MyHtmlRequest(request);
</span><span style="color: #008080;"> 31</span> <span style="color: #000000;">        chain.doFilter(myrequest, response);
</span><span style="color: #008080;"> 32</span>         
<span style="color: #008080;"> 33</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 34</span> 
<span style="color: #008080;"> 35</span>     
<span style="color: #008080;"> 36</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> destroy() {
</span><span style="color: #008080;"> 37</span>         
<span style="color: #008080;"> 38</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 39</span> 
<span style="color: #008080;"> 40</span>     
<span style="color: #008080;"> 41</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> init(FilterConfig filterConfig) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException {
</span><span style="color: #008080;"> 42</span>         
<span style="color: #008080;"> 43</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 44</span> <span style="color: #000000;">}
</span><span style="color: #008080;"> 45</span> 
<span style="color: #008080;"> 46</span> <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 47</span> <span style="color: #008000;">* @ClassName: MyHtmlRequest
</span><span style="color: #008080;"> 48</span> <span style="color: #008000;">* @Description: ??Decorator????request?????html??????
</span><span style="color: #008080;"> 49</span> <span style="color: #008000;">* </span><span style="color: #808080;">@author</span><span style="color: #008000;">: ????
</span><span style="color: #008080;"> 50</span> <span style="color: #008000;">* @date: 2014-9-2 ??11:29:09
</span><span style="color: #008080;"> 51</span> <span style="color: #008000;">*
</span><span style="color: #008080;"> 52</span> <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 53</span> <span style="color: #0000ff;">class</span> MyHtmlRequest <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServletRequestWrapper {
</span><span style="color: #008080;"> 54</span> 
<span style="color: #008080;"> 55</span>     <span style="color: #0000ff;">private</span><span style="color: #000000;"> HttpServletRequest request;
</span><span style="color: #008080;"> 56</span> 
<span style="color: #008080;"> 57</span>     <span style="color: #0000ff;">public</span><span style="color: #000000;"> MyHtmlRequest(HttpServletRequest request) {
</span><span style="color: #008080;"> 58</span>         <span style="color: #0000ff;">super</span><span style="color: #000000;">(request);
</span><span style="color: #008080;"> 59</span>         <span style="color: #0000ff;">this</span>.request =<span style="color: #000000;"> request;
</span><span style="color: #008080;"> 60</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 61</span> 
<span style="color: #008080;"> 62</span>     <span style="color: #008000;">/*</span><span style="color: #008000;"> ???????getParameter??
</span><span style="color: #008080;"> 63</span> <span style="color: #008000;">     * @see javax.servlet.ServletRequestWrapper#getParameter(java.lang.String)
</span><span style="color: #008080;"> 64</span>      <span style="color: #008000;">*/</span>
<span style="color: #008080;"> 65</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 66</span>     <span style="color: #0000ff;">public</span><span style="color: #000000;"> String getParameter(String name) {
</span><span style="color: #008080;"> 67</span>         String value = <span style="color: #0000ff;">this</span><span style="color: #000000;">.request.getParameter(name);
</span><span style="color: #008080;"> 68</span>         <span style="color: #0000ff;">if</span> (value == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
</span><span style="color: #008080;"> 69</span>             <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 70</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 71</span>         <span style="color: #008000;">//</span><span style="color: #008000;">??filter??value??html??</span>
<span style="color: #008080;"> 72</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> filter(value);
</span><span style="color: #008080;"> 73</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 74</span> 
<span style="color: #008080;"> 75</span>     <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 76</span> <span style="color: #008000;">    * @Method: filter
</span><span style="color: #008080;"> 77</span> <span style="color: #008000;">    * @Description: ??????html??
</span><span style="color: #008080;"> 78</span> <span style="color: #008000;">    * @Anthor:????
</span><span style="color: #008080;"> 79</span> <span style="color: #008000;">    * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> message
</span><span style="color: #008080;"> 80</span> <span style="color: #008000;">    * </span><span style="color: #808080;">@return</span>
<span style="color: #008080;"> 81</span>     <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 82</span>     <span style="color: #0000ff;">public</span><span style="color: #000000;"> String filter(String message) {
</span><span style="color: #008080;"> 83</span>         <span style="color: #0000ff;">if</span> (message == <span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;"> 84</span>             <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 85</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 86</span>         <span style="color: #0000ff;">char</span> content[] = <span style="color: #0000ff;">new</span> <span style="color: #0000ff;">char</span><span style="color: #000000;">[message.length()];
</span><span style="color: #008080;"> 87</span>         message.getChars(0, message.length(), content, 0<span style="color: #000000;">);
</span><span style="color: #008080;"> 88</span>         StringBuffer result = <span style="color: #0000ff;">new</span> StringBuffer(content.length + 50<span style="color: #000000;">);
</span><span style="color: #008080;"> 89</span>         <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = 0; i &lt; content.length; i++<span style="color: #000000;">) {
</span><span style="color: #008080;"> 90</span>             <span style="color: #0000ff;">switch</span><span style="color: #000000;"> (content[i]) {
</span><span style="color: #008080;"> 91</span>             <span style="color: #0000ff;">case</span> '&lt;'<span style="color: #000000;">:
</span><span style="color: #008080;"> 92</span>                 result.append("&amp;lt;"<span style="color: #000000;">);
</span><span style="color: #008080;"> 93</span>                 <span style="color: #0000ff;">break</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 94</span>             <span style="color: #0000ff;">case</span> '&gt;'<span style="color: #000000;">:
</span><span style="color: #008080;"> 95</span>                 result.append("&amp;gt;"<span style="color: #000000;">);
</span><span style="color: #008080;"> 96</span>                 <span style="color: #0000ff;">break</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 97</span>             <span style="color: #0000ff;">case</span> '&amp;'<span style="color: #000000;">:
</span><span style="color: #008080;"> 98</span>                 result.append("&amp;amp;"<span style="color: #000000;">);
</span><span style="color: #008080;"> 99</span>                 <span style="color: #0000ff;">break</span><span style="color: #000000;">;
</span><span style="color: #008080;">100</span>             <span style="color: #0000ff;">case</span> '"'<span style="color: #000000;">:
</span><span style="color: #008080;">101</span>                 result.append("&amp;quot;"<span style="color: #000000;">);
</span><span style="color: #008080;">102</span>                 <span style="color: #0000ff;">break</span><span style="color: #000000;">;
</span><span style="color: #008080;">103</span>             <span style="color: #0000ff;">default</span><span style="color: #000000;">:
</span><span style="color: #008080;">104</span> <span style="color: #000000;">                result.append(content[i]);
</span><span style="color: #008080;">105</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">106</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">107</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> result.toString();
</span><span style="color: #008080;">108</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">109</span> }</pre> 
       </div> 
       <p>???web.xml?????HtmlFilter</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span> <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">??Html??????????html??</span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;"> 2</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 3</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>HtmlFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>me.gacl.web.filter.HtmlFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span>   
<span style="color: #008080;"> 7</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>HtmlFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/*<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span></pre> 
       </div> 
       <p>????jsp????????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span> <span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">@ page language</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">java</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #000000;"> import</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">java.util.*</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #000000;"> pageEncoding</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">UTF-8</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>
<span style="color: #008080;"> 2</span> <span style="color: #0000ff;">&lt;!</span><span style="color: #ff00ff;">DOCTYPE HTML</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 3</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>html?????<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>   
<span style="color: #008080;"> 8</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form </span><span style="color: #ff0000;">action</span><span style="color: #0000ff;">="${pageContext.request.contextPath}/servlet/ServletDemo2"</span><span style="color: #ff0000;"> method</span><span style="color: #0000ff;">="post"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span> <span style="color: #000000;">           ??:
</span><span style="color: #008080;">11</span>            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">textarea </span><span style="color: #ff0000;">rows</span><span style="color: #0000ff;">="8"</span><span style="color: #ff0000;"> cols</span><span style="color: #0000ff;">="70"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="message"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">12</span>            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text/javascript"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>            <span style="background-color: #f5f5f5; color: #0000ff;">while</span><span style="background-color: #f5f5f5; color: #000000;">(</span><span style="background-color: #f5f5f5; color: #0000ff;">true</span><span style="background-color: #f5f5f5; color: #000000;">){
</span><span style="color: #008080;">14</span> <span style="background-color: #f5f5f5; color: #000000;">               alert(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">?????????????</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">);
</span><span style="color: #008080;">15</span> <span style="background-color: #f5f5f5; color: #000000;">           }
</span><span style="color: #008080;">16</span>            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>         <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="http://www.cnblogs.com"</span><span style="color: #0000ff;">&gt;</span>?????<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span>            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">textarea</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">19</span>            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="submit"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="??"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">20</span>        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">21</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">22</span> <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span></pre> 
       </div> 
       <p>???????????ServletDemo2</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">package</span><span style="color: #000000;"> me.gacl.web.controller;
</span><span style="color: #008080;"> 2</span> 
<span style="color: #008080;"> 3</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #008080;"> 4</span> 
<span style="color: #008080;"> 5</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletException;
</span><span style="color: #008080;"> 6</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServlet;
</span><span style="color: #008080;"> 7</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #008080;"> 8</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;
</span><span style="color: #008080;"> 9</span> 
<span style="color: #008080;">10</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> ServletDemo2 <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServlet {
</span><span style="color: #008080;">11</span> 
<span style="color: #008080;">12</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doGet(HttpServletRequest request, HttpServletResponse response)
</span><span style="color: #008080;">13</span>             <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException, IOException {
</span><span style="color: #008080;">14</span>         <span style="color: #008000;">//</span><span style="color: #008000;">?????????</span>
<span style="color: #008080;">15</span>         String message = request.getParameter("message"<span style="color: #000000;">);
</span><span style="color: #008080;">16</span>         response.getWriter().write("????????&lt;br/&gt;" +<span style="color: #000000;"> message);
</span><span style="color: #008080;">17</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">18</span> 
<span style="color: #008080;">19</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doPost(HttpServletRequest request, HttpServletResponse response)
</span><span style="color: #008080;">20</span>             <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException, IOException {
</span><span style="color: #008080;">21</span> <span style="color: #000000;">        doGet(request, response);
</span><span style="color: #008080;">22</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">23</span> }</pre> 
       </div> 
       <p>???????</p> 
       <p>??<img src="http://images.cnitblog.com/blog/289233/201409/022357043282069.gif" alt="" width="950" height="565"></p> 
       <p>????????????????html??????????</p> 
       <h3>2.3???Decorator????request????????????</h3> 
       <p>???????????????????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;">  1</span> <span style="color: #0000ff;">package</span><span style="color: #000000;"> me.gacl.web.filter;
</span><span style="color: #008080;">  2</span> 
<span style="color: #008080;">  3</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.BufferedReader;
</span><span style="color: #008080;">  4</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #008080;">  5</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.InputStream;
</span><span style="color: #008080;">  6</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.InputStreamReader;
</span><span style="color: #008080;">  7</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.UnsupportedEncodingException;
</span><span style="color: #008080;">  8</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.ArrayList;
</span><span style="color: #008080;">  9</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.List;
</span><span style="color: #008080;"> 10</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.Filter;
</span><span style="color: #008080;"> 11</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterChain;
</span><span style="color: #008080;"> 12</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterConfig;
</span><span style="color: #008080;"> 13</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletException;
</span><span style="color: #008080;"> 14</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletRequest;
</span><span style="color: #008080;"> 15</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletResponse;
</span><span style="color: #008080;"> 16</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #008080;"> 17</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequestWrapper;
</span><span style="color: #008080;"> 18</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;
</span><span style="color: #008080;"> 19</span> 
<span style="color: #008080;"> 20</span> <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 21</span> <span style="color: #008000;">* @ClassName: DirtyFilter
</span><span style="color: #008080;"> 22</span> <span style="color: #008000;">* @Description: ??????
</span><span style="color: #008080;"> 23</span> <span style="color: #008000;">* </span><span style="color: #808080;">@author</span><span style="color: #008000;">: ????
</span><span style="color: #008080;"> 24</span> <span style="color: #008000;">* @date: 2014-9-6 ??10:43:11
</span><span style="color: #008080;"> 25</span> <span style="color: #008000;">*
</span><span style="color: #008080;"> 26</span> <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 27</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> DirtyFilter <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Filter {
</span><span style="color: #008080;"> 28</span> 
<span style="color: #008080;"> 29</span>     <span style="color: #0000ff;">private</span> FilterConfig config = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 30</span>     
<span style="color: #008080;"> 31</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 32</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> init(FilterConfig filterConfig) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException {
</span><span style="color: #008080;"> 33</span>         <span style="color: #0000ff;">this</span>.config =<span style="color: #000000;"> filterConfig;
</span><span style="color: #008080;"> 34</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 35</span> 
<span style="color: #008080;"> 36</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 37</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doFilter(ServletRequest req, ServletResponse resp,
</span><span style="color: #008080;"> 38</span>             FilterChain chain) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException, ServletException {
</span><span style="color: #008080;"> 39</span>         
<span style="color: #008080;"> 40</span>         HttpServletRequest request =<span style="color: #000000;"> (HttpServletRequest) req;
</span><span style="color: #008080;"> 41</span>         HttpServletResponse response =<span style="color: #000000;"> (HttpServletResponse) resp;
</span><span style="color: #008080;"> 42</span>         DirtyRequest dirtyrequest = <span style="color: #0000ff;">new</span><span style="color: #000000;"> DirtyRequest(request);
</span><span style="color: #008080;"> 43</span>         
<span style="color: #008080;"> 44</span> <span style="color: #000000;">        chain.doFilter(dirtyrequest, response);
</span><span style="color: #008080;"> 45</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 46</span> 
<span style="color: #008080;"> 47</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 48</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> destroy() {
</span><span style="color: #008080;"> 49</span> 
<span style="color: #008080;"> 50</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 51</span>     
<span style="color: #008080;"> 52</span>     <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 53</span> <span style="color: #008000;">    * @Method: getDirtyWords
</span><span style="color: #008080;"> 54</span> <span style="color: #008000;">    * @Description: ??????
</span><span style="color: #008080;"> 55</span> <span style="color: #008000;">    * @Anthor:????
</span><span style="color: #008080;"> 56</span> <span style="color: #008000;">    *
</span><span style="color: #008080;"> 57</span> <span style="color: #008000;">    * </span><span style="color: #808080;">@return</span>
<span style="color: #008080;"> 58</span>     <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 59</span>     <span style="color: #0000ff;">private</span> List&lt;String&gt;<span style="color: #000000;"> getDirtyWords(){
</span><span style="color: #008080;"> 60</span>         List&lt;String&gt; dirtyWords = <span style="color: #0000ff;">new</span> ArrayList&lt;String&gt;<span style="color: #000000;">();
</span><span style="color: #008080;"> 61</span>         String dirtyWordPath = config.getInitParameter("dirtyWord"<span style="color: #000000;">);
</span><span style="color: #008080;"> 62</span>         InputStream inputStream =<span style="color: #000000;"> config.getServletContext().getResourceAsStream(dirtyWordPath);
</span><span style="color: #008080;"> 63</span>         InputStreamReader is = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 64</span>         <span style="color: #0000ff;">try</span><span style="color: #000000;"> {
</span><span style="color: #008080;"> 65</span>             is = <span style="color: #0000ff;">new</span> InputStreamReader(inputStream,"UTF-8"<span style="color: #000000;">);
</span><span style="color: #008080;"> 66</span>         } <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (UnsupportedEncodingException e2) {
</span><span style="color: #008080;"> 67</span> <span style="color: #000000;">            e2.printStackTrace();
</span><span style="color: #008080;"> 68</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 69</span>         BufferedReader reader = <span style="color: #0000ff;">new</span><span style="color: #000000;"> BufferedReader(is);
</span><span style="color: #008080;"> 70</span> <span style="color: #000000;">        String line;
</span><span style="color: #008080;"> 71</span>         <span style="color: #0000ff;">try</span><span style="color: #000000;"> {
</span><span style="color: #008080;"> 72</span>             <span style="color: #0000ff;">while</span> ((line = reader.readLine())!= <span style="color: #0000ff;">null</span>) {<span style="color: #008000;">//</span><span style="color: #008000;">?? line???????</span>
<span style="color: #008080;"> 73</span> <span style="color: #000000;">                dirtyWords.add(line);
</span><span style="color: #008080;"> 74</span> <span style="color: #000000;">            }
</span><span style="color: #008080;"> 75</span>         } <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IOException e) {
</span><span style="color: #008080;"> 76</span> <span style="color: #000000;">            e.printStackTrace();
</span><span style="color: #008080;"> 77</span> <span style="color: #000000;">        } 
</span><span style="color: #008080;"> 78</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> dirtyWords;
</span><span style="color: #008080;"> 79</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 80</span>     
<span style="color: #008080;"> 81</span>     <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 82</span> <span style="color: #008000;">    * @ClassName: DirtyRequest
</span><span style="color: #008080;"> 83</span> <span style="color: #008000;">    * @Description: ??Decorator????request?????????????
</span><span style="color: #008080;"> 84</span> <span style="color: #008000;">    * </span><span style="color: #808080;">@author</span><span style="color: #008000;">: ????
</span><span style="color: #008080;"> 85</span> <span style="color: #008000;">    * @date: 2014-9-6 ??11:56:35
</span><span style="color: #008080;"> 86</span> <span style="color: #008000;">    *
</span><span style="color: #008080;"> 87</span>     <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 88</span>     <span style="color: #0000ff;">class</span> DirtyRequest <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServletRequestWrapper{
</span><span style="color: #008080;"> 89</span> 
<span style="color: #008080;"> 90</span>         <span style="color: #0000ff;">private</span> List&lt;String&gt; dirtyWords =<span style="color: #000000;"> getDirtyWords();
</span><span style="color: #008080;"> 91</span>         <span style="color: #0000ff;">private</span><span style="color: #000000;"> HttpServletRequest request;
</span><span style="color: #008080;"> 92</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> DirtyRequest(HttpServletRequest request) {
</span><span style="color: #008080;"> 93</span>             <span style="color: #0000ff;">super</span><span style="color: #000000;">(request);
</span><span style="color: #008080;"> 94</span>             <span style="color: #0000ff;">this</span>.request =<span style="color: #000000;"> request;
</span><span style="color: #008080;"> 95</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 96</span>         <span style="color: #008000;">/*</span><span style="color: #008000;"> ??getParameter?????????????
</span><span style="color: #008080;"> 97</span> <span style="color: #008000;">         * @see javax.servlet.ServletRequestWrapper#getParameter(java.lang.String)
</span><span style="color: #008080;"> 98</span>          <span style="color: #008000;">*/</span>
<span style="color: #008080;"> 99</span> <span style="color: #000000;">        @Override
</span><span style="color: #008080;">100</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> String getParameter(String name) {
</span><span style="color: #008080;">101</span>             
<span style="color: #008080;">102</span>             String value = <span style="color: #0000ff;">this</span><span style="color: #000000;">.request.getParameter(name);
</span><span style="color: #008080;">103</span>             <span style="color: #0000ff;">if</span>(value==<span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;">104</span>                 <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;">105</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">106</span>             
<span style="color: #008080;">107</span>             <span style="color: #0000ff;">for</span><span style="color: #000000;">(String dirtyWord : dirtyWords){
</span><span style="color: #008080;">108</span>                 <span style="color: #0000ff;">if</span><span style="color: #000000;">(value.contains(dirtyWord)){
</span><span style="color: #008080;">109</span>                     System.out.println("?????????"+dirtyWord+"???????****"<span style="color: #000000;">);
</span><span style="color: #008080;">110</span>                     <span style="color: #008000;">//</span><span style="color: #008000;">??????</span>
<span style="color: #008080;">111</span>                     value = value.replace(dirtyWord, "****"<span style="color: #000000;">);
</span><span style="color: #008080;">112</span> <span style="color: #000000;">                }
</span><span style="color: #008080;">113</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">114</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> value;
</span><span style="color: #008080;">115</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">116</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">117</span> }</pre> 
       </div> 
       <p>???web.xml?????DirtyFilter</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span>  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">?????????</span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;"> 2</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 3</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>DirtyFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>me.gacl.web.filter.DirtyFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>       <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> ???????????? </span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;"> 6</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>dirtyWord<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>    
<span style="color: #008080;"> 8</span>          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>/WEB-INF/DirtyWord.txt<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span>   
<span style="color: #008080;">12</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>DirtyFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">14</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/*<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span></pre> 
       </div> 
       <p>?????????????????????DirtyFilter?????????????????</p> 
       <p>??????????CharacterEncodingFilter?HtmlFilter?DirtyFilter?????????????????????request?????3??request???getParameter????3??????getParameter?????????????????????html????????????????</p> 
       <p>????????????????????????????????????????????html???????????????????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;">  1</span> <span style="color: #0000ff;">package</span><span style="color: #000000;"> me.gacl.web.filter;
</span><span style="color: #008080;">  2</span> 
<span style="color: #008080;">  3</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.BufferedReader;
</span><span style="color: #008080;">  4</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #008080;">  5</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.InputStream;
</span><span style="color: #008080;">  6</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.InputStreamReader;
</span><span style="color: #008080;">  7</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.UnsupportedEncodingException;
</span><span style="color: #008080;">  8</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.ArrayList;
</span><span style="color: #008080;">  9</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.List;
</span><span style="color: #008080;"> 10</span> 
<span style="color: #008080;"> 11</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.Filter;
</span><span style="color: #008080;"> 12</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterChain;
</span><span style="color: #008080;"> 13</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterConfig;
</span><span style="color: #008080;"> 14</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletException;
</span><span style="color: #008080;"> 15</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletRequest;
</span><span style="color: #008080;"> 16</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletResponse;
</span><span style="color: #008080;"> 17</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #008080;"> 18</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequestWrapper;
</span><span style="color: #008080;"> 19</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;
</span><span style="color: #008080;"> 20</span> 
<span style="color: #008080;"> 21</span> <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 22</span> <span style="color: #008000;">* @ClassName: AdvancedFilter
</span><span style="color: #008080;"> 23</span> <span style="color: #008000;">* @Description: ?????????????????????html??????????????
</span><span style="color: #008080;"> 24</span> <span style="color: #008000;">* </span><span style="color: #808080;">@author</span><span style="color: #008000;">: ????
</span><span style="color: #008080;"> 25</span> <span style="color: #008000;">* @date: 2014-9-6 ??6:17:37
</span><span style="color: #008080;"> 26</span> <span style="color: #008000;">*
</span><span style="color: #008080;"> 27</span> <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 28</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> AdvancedFilter <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Filter {
</span><span style="color: #008080;"> 29</span> 
<span style="color: #008080;"> 30</span>     <span style="color: #0000ff;">private</span> FilterConfig filterConfig = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 31</span>     <span style="color: #008000;">//</span><span style="color: #008000;">?????????</span>
<span style="color: #008080;"> 32</span>     <span style="color: #0000ff;">private</span> String defaultCharset = "UTF-8"<span style="color: #000000;">;
</span><span style="color: #008080;"> 33</span>     
<span style="color: #008080;"> 34</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 35</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> init(FilterConfig filterConfig) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException {
</span><span style="color: #008080;"> 36</span>         <span style="color: #008000;">//</span><span style="color: #008000;">?????????????</span>
<span style="color: #008080;"> 37</span>         <span style="color: #0000ff;">this</span>.filterConfig =<span style="color: #000000;"> filterConfig;
</span><span style="color: #008080;"> 38</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 39</span> 
<span style="color: #008080;"> 40</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 41</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doFilter(ServletRequest req, ServletResponse resp,
</span><span style="color: #008080;"> 42</span>             FilterChain chain) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException, ServletException {
</span><span style="color: #008080;"> 43</span>         HttpServletRequest request =<span style="color: #000000;"> (HttpServletRequest) req;
</span><span style="color: #008080;"> 44</span>         HttpServletResponse response =<span style="color: #000000;"> (HttpServletResponse) resp;
</span><span style="color: #008080;"> 45</span>         <span style="color: #008000;">//</span><span style="color: #008000;">???web.xml????????</span>
<span style="color: #008080;"> 46</span>         String charset = filterConfig.getInitParameter("charset"<span style="color: #000000;">);
</span><span style="color: #008080;"> 47</span>         <span style="color: #0000ff;">if</span>(charset==<span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;"> 48</span>             charset =<span style="color: #000000;"> defaultCharset;
</span><span style="color: #008080;"> 49</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 50</span> <span style="color: #000000;">        request.setCharacterEncoding(charset);
</span><span style="color: #008080;"> 51</span> <span style="color: #000000;">        response.setCharacterEncoding(charset);
</span><span style="color: #008080;"> 52</span>         response.setContentType("text/html;charset="+<span style="color: #000000;">charset);
</span><span style="color: #008080;"> 53</span>         
<span style="color: #008080;"> 54</span>         AdvancedRequest requestWrapper = <span style="color: #0000ff;">new</span><span style="color: #000000;"> AdvancedRequest(request);
</span><span style="color: #008080;"> 55</span> <span style="color: #000000;">        chain.doFilter(requestWrapper, response);
</span><span style="color: #008080;"> 56</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 57</span> 
<span style="color: #008080;"> 58</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 59</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> destroy() {
</span><span style="color: #008080;"> 60</span> 
<span style="color: #008080;"> 61</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 62</span> 
<span style="color: #008080;"> 63</span>     <span style="color: #0000ff;">class</span> AdvancedRequest <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServletRequestWrapper{
</span><span style="color: #008080;"> 64</span>         
<span style="color: #008080;"> 65</span>         <span style="color: #0000ff;">private</span> List&lt;String&gt; dirtyWords =<span style="color: #000000;"> getDirtyWords();
</span><span style="color: #008080;"> 66</span>         
<span style="color: #008080;"> 67</span>         <span style="color: #008000;">//</span><span style="color: #008000;">?????????????(request???????????)</span>
<span style="color: #008080;"> 68</span>         <span style="color: #0000ff;">private</span><span style="color: #000000;"> HttpServletRequest request;
</span><span style="color: #008080;"> 69</span>         <span style="color: #008000;">//</span><span style="color: #008000;">????????????????</span>
<span style="color: #008080;"> 70</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> AdvancedRequest(HttpServletRequest request) {
</span><span style="color: #008080;"> 71</span>             <span style="color: #0000ff;">super</span><span style="color: #000000;">(request);
</span><span style="color: #008080;"> 72</span>             <span style="color: #0000ff;">this</span>.request =<span style="color: #000000;"> request;
</span><span style="color: #008080;"> 73</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 74</span>         <span style="color: #008000;">/*</span><span style="color: #008000;"> ???????getParameter??
</span><span style="color: #008080;"> 75</span> <span style="color: #008000;">         * @see javax.servlet.ServletRequestWrapper#getParameter(java.lang.String)
</span><span style="color: #008080;"> 76</span>          <span style="color: #008000;">*/</span>
<span style="color: #008080;"> 77</span> <span style="color: #000000;">        @Override
</span><span style="color: #008080;"> 78</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> String getParameter(String name) {
</span><span style="color: #008080;"> 79</span>             <span style="color: #0000ff;">try</span><span style="color: #000000;">{
</span><span style="color: #008080;"> 80</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">??????</span>
<span style="color: #008080;"> 81</span>                 String value= <span style="color: #0000ff;">this</span><span style="color: #000000;">.request.getParameter(name);
</span><span style="color: #008080;"> 82</span>                 <span style="color: #0000ff;">if</span>(value==<span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;"> 83</span>                     <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 84</span> <span style="color: #000000;">                }
</span><span style="color: #008080;"> 85</span>                 <span style="color: #008000;">//</span><span style="color: #008000;">?????get??????????????????</span>
<span style="color: #008080;"> 86</span>                 <span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">this</span>.request.getMethod().equalsIgnoreCase("get"<span style="color: #000000;">)) {
</span><span style="color: #008080;"> 87</span>                     <span style="color: #008000;">//</span><span style="color: #008000;">??filter??value??html??</span>
<span style="color: #008080;"> 88</span>                     value=<span style="color: #000000;"> filter(value);
</span><span style="color: #008080;"> 89</span>                 }<span style="color: #0000ff;">else</span><span style="color: #000000;">{
</span><span style="color: #008080;"> 90</span>                     <span style="color: #008000;">//</span><span style="color: #008000;">????get?????????????????????</span>
<span style="color: #008080;"> 91</span>                     value = <span style="color: #0000ff;">new</span> String(value.getBytes("ISO8859-1"),<span style="color: #0000ff;">this</span><span style="color: #000000;">.request.getCharacterEncoding());
</span><span style="color: #008080;"> 92</span>                     <span style="color: #008000;">//</span><span style="color: #008000;">??filter??value??html??</span>
<span style="color: #008080;"> 93</span>                     value=<span style="color: #000000;"> filter(value);
</span><span style="color: #008080;"> 94</span> <span style="color: #000000;">                }
</span><span style="color: #008080;"> 95</span>                 
<span style="color: #008080;"> 96</span>                 <span style="color: #0000ff;">for</span><span style="color: #000000;">(String dirtyWord : dirtyWords){
</span><span style="color: #008080;"> 97</span>                     <span style="color: #0000ff;">if</span><span style="color: #000000;">(value.contains(dirtyWord)){
</span><span style="color: #008080;"> 98</span>                         System.out.println("?????????"+dirtyWord+"???????****"<span style="color: #000000;">);
</span><span style="color: #008080;"> 99</span>                         <span style="color: #008000;">//</span><span style="color: #008000;">??????</span>
<span style="color: #008080;">100</span>                         value = value.replace(dirtyWord, "****"<span style="color: #000000;">);
</span><span style="color: #008080;">101</span> <span style="color: #000000;">                    }
</span><span style="color: #008080;">102</span> <span style="color: #000000;">                }
</span><span style="color: #008080;">103</span>                 <span style="color: #0000ff;">return</span><span style="color: #000000;"> value;
</span><span style="color: #008080;">104</span>             }<span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
</span><span style="color: #008080;">105</span>                 <span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RuntimeException(e);
</span><span style="color: #008080;">106</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">107</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">108</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">109</span> 
<span style="color: #008080;">110</span>     <span style="color: #008000;">/**</span>
<span style="color: #008080;">111</span> <span style="color: #008000;">    * @Method: filter
</span><span style="color: #008080;">112</span> <span style="color: #008000;">    * @Description: ??????html??
</span><span style="color: #008080;">113</span> <span style="color: #008000;">    * @Anthor:????
</span><span style="color: #008080;">114</span> <span style="color: #008000;">    * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> value
</span><span style="color: #008080;">115</span> <span style="color: #008000;">    * </span><span style="color: #808080;">@return</span>
<span style="color: #008080;">116</span>     <span style="color: #008000;">*/</span> 
<span style="color: #008080;">117</span>     <span style="color: #0000ff;">public</span><span style="color: #000000;"> String filter(String value) {
</span><span style="color: #008080;">118</span>         <span style="color: #0000ff;">if</span> (value == <span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;">119</span>             <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;">120</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">121</span>         <span style="color: #0000ff;">char</span> content[] = <span style="color: #0000ff;">new</span> <span style="color: #0000ff;">char</span><span style="color: #000000;">[value.length()];
</span><span style="color: #008080;">122</span>         value.getChars(0, value.length(), content, 0<span style="color: #000000;">);
</span><span style="color: #008080;">123</span>         StringBuffer result = <span style="color: #0000ff;">new</span> StringBuffer(content.length + 50<span style="color: #000000;">);
</span><span style="color: #008080;">124</span>         <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = 0; i &lt; content.length; i++<span style="color: #000000;">) {
</span><span style="color: #008080;">125</span>             <span style="color: #0000ff;">switch</span><span style="color: #000000;"> (content[i]) {
</span><span style="color: #008080;">126</span>             <span style="color: #0000ff;">case</span> '&lt;'<span style="color: #000000;">:
</span><span style="color: #008080;">127</span>                 result.append("&amp;lt;"<span style="color: #000000;">);
</span><span style="color: #008080;">128</span>                 <span style="color: #0000ff;">break</span><span style="color: #000000;">;
</span><span style="color: #008080;">129</span>             <span style="color: #0000ff;">case</span> '&gt;'<span style="color: #000000;">:
</span><span style="color: #008080;">130</span>                 result.append("&amp;gt;"<span style="color: #000000;">);
</span><span style="color: #008080;">131</span>                 <span style="color: #0000ff;">break</span><span style="color: #000000;">;
</span><span style="color: #008080;">132</span>             <span style="color: #0000ff;">case</span> '&amp;'<span style="color: #000000;">:
</span><span style="color: #008080;">133</span>                 result.append("&amp;amp;"<span style="color: #000000;">);
</span><span style="color: #008080;">134</span>                 <span style="color: #0000ff;">break</span><span style="color: #000000;">;
</span><span style="color: #008080;">135</span>             <span style="color: #0000ff;">case</span> '"'<span style="color: #000000;">:
</span><span style="color: #008080;">136</span>                 result.append("&amp;quot;"<span style="color: #000000;">);
</span><span style="color: #008080;">137</span>                 <span style="color: #0000ff;">break</span><span style="color: #000000;">;
</span><span style="color: #008080;">138</span>             <span style="color: #0000ff;">default</span><span style="color: #000000;">:
</span><span style="color: #008080;">139</span> <span style="color: #000000;">                result.append(content[i]);
</span><span style="color: #008080;">140</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">141</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">142</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> (result.toString());
</span><span style="color: #008080;">143</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">144</span>     
<span style="color: #008080;">145</span>     <span style="color: #008000;">/**</span>
<span style="color: #008080;">146</span> <span style="color: #008000;">    * @Method: getDirtyWords
</span><span style="color: #008080;">147</span> <span style="color: #008000;">    * @Description: ??????
</span><span style="color: #008080;">148</span> <span style="color: #008000;">    * @Anthor:????
</span><span style="color: #008080;">149</span> <span style="color: #008000;">    *
</span><span style="color: #008080;">150</span> <span style="color: #008000;">    * </span><span style="color: #808080;">@return</span>
<span style="color: #008080;">151</span>     <span style="color: #008000;">*/</span> 
<span style="color: #008080;">152</span>     <span style="color: #0000ff;">private</span> List&lt;String&gt;<span style="color: #000000;"> getDirtyWords(){
</span><span style="color: #008080;">153</span>         List&lt;String&gt; dirtyWords = <span style="color: #0000ff;">new</span> ArrayList&lt;String&gt;<span style="color: #000000;">();
</span><span style="color: #008080;">154</span>         String dirtyWordPath = filterConfig.getInitParameter("dirtyWord"<span style="color: #000000;">);
</span><span style="color: #008080;">155</span>         InputStream inputStream =<span style="color: #000000;"> filterConfig.getServletContext().getResourceAsStream(dirtyWordPath);
</span><span style="color: #008080;">156</span>         InputStreamReader is = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;">157</span>         <span style="color: #0000ff;">try</span><span style="color: #000000;"> {
</span><span style="color: #008080;">158</span>             is = <span style="color: #0000ff;">new</span><span style="color: #000000;"> InputStreamReader(inputStream,defaultCharset);
</span><span style="color: #008080;">159</span>         } <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (UnsupportedEncodingException e2) {
</span><span style="color: #008080;">160</span> <span style="color: #000000;">            e2.printStackTrace();
</span><span style="color: #008080;">161</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">162</span>         BufferedReader reader = <span style="color: #0000ff;">new</span><span style="color: #000000;"> BufferedReader(is);
</span><span style="color: #008080;">163</span> <span style="color: #000000;">        String line;
</span><span style="color: #008080;">164</span>         <span style="color: #0000ff;">try</span><span style="color: #000000;"> {
</span><span style="color: #008080;">165</span>             <span style="color: #0000ff;">while</span> ((line = reader.readLine())!= <span style="color: #0000ff;">null</span>) {<span style="color: #008000;">//</span><span style="color: #008000;">?? line???????</span>
<span style="color: #008080;">166</span> <span style="color: #000000;">                dirtyWords.add(line);
</span><span style="color: #008080;">167</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">168</span>         } <span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IOException e) {
</span><span style="color: #008080;">169</span> <span style="color: #000000;">            e.printStackTrace();
</span><span style="color: #008080;">170</span> <span style="color: #000000;">        } 
</span><span style="color: #008080;">171</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> dirtyWords;
</span><span style="color: #008080;">172</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">173</span> }</pre> 
       </div> 
       <p>???web.xml?????AdvancedFilter</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>AdvancedFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 3</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>me.gacl.web.filter.AdvancedFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>charset<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>    
<span style="color: #008080;"> 6</span>          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>UTF-8<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 7</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>dirtyWord<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>    
<span style="color: #008080;">10</span>          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>/WEB-INF/DirtyWord.txt<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span>     <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">12</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>   
<span style="color: #008080;">14</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">15</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>AdvancedFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">16</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/*<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">17</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span></pre> 
       </div> 
       <p>??AdvancedFilter????????????????????html??????????????????</p> 
       <h2>????Decorator??????response??</h2> 
       <p>??Servlet&nbsp; API ????response???Decorator??????????HttpServletResponseWrapper ?HttpServletResponseWrapper????response????????????????????????????????? response???????????????response???????????response?????????</p> 
       <h3>3.1?response????——????????</h3> 
       <p>????HttpServletResponseWrapper????????????</p> 
       <p>??????:??filter?????????????response????????response??????getOutputStream???getWriter???????????????????????????????ServletOutputStream??????????ServletOuputStream??????write??????????????buffer????????????filter?????????????????????GzipOuputStream??????????????????????????????</p> 
       <p>???????????????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;">  1</span> <span style="color: #0000ff;">package</span><span style="color: #000000;"> me.gacl.web.filter;
</span><span style="color: #008080;">  2</span> 
<span style="color: #008080;">  3</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.ByteArrayOutputStream;
</span><span style="color: #008080;">  4</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #008080;">  5</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.OutputStreamWriter;
</span><span style="color: #008080;">  6</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.PrintWriter;
</span><span style="color: #008080;">  7</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.zip.GZIPOutputStream;
</span><span style="color: #008080;">  8</span> 
<span style="color: #008080;">  9</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.Filter;
</span><span style="color: #008080;"> 10</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterChain;
</span><span style="color: #008080;"> 11</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterConfig;
</span><span style="color: #008080;"> 12</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletException;
</span><span style="color: #008080;"> 13</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletOutputStream;
</span><span style="color: #008080;"> 14</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletRequest;
</span><span style="color: #008080;"> 15</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletResponse;
</span><span style="color: #008080;"> 16</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #008080;"> 17</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;
</span><span style="color: #008080;"> 18</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponseWrapper;
</span><span style="color: #008080;"> 19</span> 
<span style="color: #008080;"> 20</span> <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 21</span> <span style="color: #008000;">* @ClassName: GzipFilter
</span><span style="color: #008080;"> 22</span> <span style="color: #008000;">* @Description: ???????web???????????????????
</span><span style="color: #008080;"> 23</span> <span style="color: #008000;">* </span><span style="color: #808080;">@author</span><span style="color: #008000;">: ????
</span><span style="color: #008080;"> 24</span> <span style="color: #008000;">* @date: 2014-9-7 ??10:52:42
</span><span style="color: #008080;"> 25</span> <span style="color: #008000;">*
</span><span style="color: #008080;"> 26</span> <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 27</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> GzipFilter <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Filter {
</span><span style="color: #008080;"> 28</span> 
<span style="color: #008080;"> 29</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doFilter(ServletRequest req, ServletResponse resp,
</span><span style="color: #008080;"> 30</span>             FilterChain chain) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException, ServletException {
</span><span style="color: #008080;"> 31</span>         
<span style="color: #008080;"> 32</span>         HttpServletRequest request =<span style="color: #000000;"> (HttpServletRequest) req;
</span><span style="color: #008080;"> 33</span>         HttpServletResponse response =<span style="color: #000000;"> (HttpServletResponse) resp;
</span><span style="color: #008080;"> 34</span>         
<span style="color: #008080;"> 35</span>         BufferResponse myresponse = <span style="color: #0000ff;">new</span><span style="color: #000000;"> BufferResponse(response);
</span><span style="color: #008080;"> 36</span> <span style="color: #000000;">        chain.doFilter(request, myresponse);
</span><span style="color: #008080;"> 37</span>         <span style="color: #008000;">//</span><span style="color: #008000;">??????????????????</span>
<span style="color: #008080;"> 38</span>         <span style="color: #0000ff;">byte</span> out[] =<span style="color: #000000;"> myresponse.getBuffer();
</span><span style="color: #008080;"> 39</span>         System.out.println("????:" +<span style="color: #000000;"> out.length);
</span><span style="color: #008080;"> 40</span>         
<span style="color: #008080;"> 41</span>         ByteArrayOutputStream bout = <span style="color: #0000ff;">new</span><span style="color: #000000;"> ByteArrayOutputStream();
</span><span style="color: #008080;"> 42</span>         <span style="color: #008000;">//</span><span style="color: #008000;">?????????</span>
<span style="color: #008080;"> 43</span>         GZIPOutputStream gout = <span style="color: #0000ff;">new</span><span style="color: #000000;"> GZIPOutputStream(bout);
</span><span style="color: #008080;"> 44</span> <span style="color: #000000;">        gout.write(out);
</span><span style="color: #008080;"> 45</span> <span style="color: #000000;">        gout.close();
</span><span style="color: #008080;"> 46</span>         
<span style="color: #008080;"> 47</span>         <span style="color: #0000ff;">byte</span> gzip[] =<span style="color: #000000;"> bout.toByteArray();
</span><span style="color: #008080;"> 48</span>         System.out.println("??????:" +<span style="color: #000000;"> gzip.length);
</span><span style="color: #008080;"> 49</span>         
<span style="color: #008080;"> 50</span>         response.setHeader("content-encoding", "gzip"<span style="color: #000000;">);
</span><span style="color: #008080;"> 51</span> <span style="color: #000000;">        response.setContentLength(gzip.length);
</span><span style="color: #008080;"> 52</span> <span style="color: #000000;">        response.getOutputStream().write(gzip);
</span><span style="color: #008080;"> 53</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 54</span>     
<span style="color: #008080;"> 55</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> destroy() {
</span><span style="color: #008080;"> 56</span>         
<span style="color: #008080;"> 57</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 58</span> 
<span style="color: #008080;"> 59</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> init(FilterConfig filterConfig) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException {
</span><span style="color: #008080;"> 60</span>         
<span style="color: #008080;"> 61</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 62</span> <span style="color: #000000;">}
</span><span style="color: #008080;"> 63</span> 
<span style="color: #008080;"> 64</span> <span style="color: #0000ff;">class</span> BufferResponse <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServletResponseWrapper{
</span><span style="color: #008080;"> 65</span> 
<span style="color: #008080;"> 66</span>     <span style="color: #0000ff;">private</span> ByteArrayOutputStream bout = <span style="color: #0000ff;">new</span><span style="color: #000000;"> ByteArrayOutputStream();
</span><span style="color: #008080;"> 67</span>     <span style="color: #0000ff;">private</span><span style="color: #000000;"> PrintWriter pw;
</span><span style="color: #008080;"> 68</span>     <span style="color: #0000ff;">private</span><span style="color: #000000;"> HttpServletResponse response;
</span><span style="color: #008080;"> 69</span>     <span style="color: #0000ff;">public</span><span style="color: #000000;"> BufferResponse(HttpServletResponse response) {
</span><span style="color: #008080;"> 70</span>         <span style="color: #0000ff;">super</span><span style="color: #000000;">(response);
</span><span style="color: #008080;"> 71</span>         <span style="color: #0000ff;">this</span>.response =<span style="color: #000000;"> response;
</span><span style="color: #008080;"> 72</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 73</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 74</span>     <span style="color: #0000ff;">public</span> ServletOutputStream getOutputStream() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException {
</span><span style="color: #008080;"> 75</span>         <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> MyServletOutputStream(bout);
</span><span style="color: #008080;"> 76</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 77</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 78</span>     <span style="color: #0000ff;">public</span> PrintWriter getWriter() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException {
</span><span style="color: #008080;"> 79</span>         pw = <span style="color: #0000ff;">new</span> PrintWriter(<span style="color: #0000ff;">new</span> OutputStreamWriter(bout,<span style="color: #0000ff;">this</span><span style="color: #000000;">.response.getCharacterEncoding()));
</span><span style="color: #008080;"> 80</span>         <span style="color: #0000ff;">return</span><span style="color: #000000;"> pw;
</span><span style="color: #008080;"> 81</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 82</span>     
<span style="color: #008080;"> 83</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">byte</span><span style="color: #000000;">[] getBuffer(){
</span><span style="color: #008080;"> 84</span>         <span style="color: #0000ff;">try</span><span style="color: #000000;">{
</span><span style="color: #008080;"> 85</span>             <span style="color: #0000ff;">if</span>(pw!=<span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;"> 86</span> <span style="color: #000000;">                pw.close();
</span><span style="color: #008080;"> 87</span> <span style="color: #000000;">            }
</span><span style="color: #008080;"> 88</span>             <span style="color: #0000ff;">if</span>(bout!=<span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;"> 89</span> <span style="color: #000000;">                bout.flush();
</span><span style="color: #008080;"> 90</span>                 <span style="color: #0000ff;">return</span><span style="color: #000000;"> bout.toByteArray();
</span><span style="color: #008080;"> 91</span> <span style="color: #000000;">            }
</span><span style="color: #008080;"> 92</span>             
<span style="color: #008080;"> 93</span>             
<span style="color: #008080;"> 94</span>             <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 95</span>         }<span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
</span><span style="color: #008080;"> 96</span>             <span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RuntimeException(e);
</span><span style="color: #008080;"> 97</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 98</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 99</span> <span style="color: #000000;">}
</span><span style="color: #008080;">100</span> 
<span style="color: #008080;">101</span> <span style="color: #0000ff;">class</span> MyServletOutputStream <span style="color: #0000ff;">extends</span><span style="color: #000000;"> ServletOutputStream{
</span><span style="color: #008080;">102</span> 
<span style="color: #008080;">103</span>     <span style="color: #0000ff;">private</span><span style="color: #000000;"> ByteArrayOutputStream bout;
</span><span style="color: #008080;">104</span>     <span style="color: #0000ff;">public</span><span style="color: #000000;"> MyServletOutputStream(ByteArrayOutputStream bout){
</span><span style="color: #008080;">105</span>         <span style="color: #0000ff;">this</span>.bout =<span style="color: #000000;"> bout;
</span><span style="color: #008080;">106</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">107</span>     
<span style="color: #008080;">108</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;">109</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> write(<span style="color: #0000ff;">int</span> b) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException {
</span><span style="color: #008080;">110</span>         <span style="color: #0000ff;">this</span><span style="color: #000000;">.bout.write(b);
</span><span style="color: #008080;">111</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">112</span> }</pre> 
       </div> 
       <p>???web.xml????????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span>  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>???????<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 3</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>GzipFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>me.gacl.web.filter.GzipFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span>   
<span style="color: #008080;"> 7</span>   <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">jsp?????????????????????? </span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;"> 8</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>GzipFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">10</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>*.jsp<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span>       <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> ??????????</span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;">12</span>       <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> ???Servlet???
</span><span style="color: #008080;">13</span> <span style="color: #008000;">          request.getRequestDispatcher("jsp????").forward(request, response) 
</span><span style="color: #008080;">14</span> <span style="color: #008000;">      ?????Jsp???????? </span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;">15</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dispatcher</span><span style="color: #0000ff;">&gt;</span>FORWARD<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dispatcher</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">16</span>       <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">?????URL?????jsp??????????????????? REQUEST</span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;">17</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dispatcher</span><span style="color: #0000ff;">&gt;</span>REQUEST<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dispatcher</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">18</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">19</span>   <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">js?????????????????????? </span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;">20</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">21</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>GzipFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">22</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>*.js<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">23</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">24</span>   <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">css?????????????????????? </span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;">25</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">26</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>GzipFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">27</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>*.css<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">28</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">29</span>   <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">html?????????????????????? </span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;">30</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">31</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>GzipFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">32</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>*.html<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">33</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span></pre> 
       </div> 
       <h3>&nbsp;3.2?response????——???????</h3> 
       <p>??????????????????????????????????????????????????????????????????????????????</p> 
       <p>??????????????????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;">  1</span> <span style="color: #0000ff;">package</span><span style="color: #000000;"> me.gacl.web.filter;
</span><span style="color: #008080;">  2</span> 
<span style="color: #008080;">  3</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.ByteArrayOutputStream;
</span><span style="color: #008080;">  4</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #008080;">  5</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.OutputStreamWriter;
</span><span style="color: #008080;">  6</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.PrintWriter;
</span><span style="color: #008080;">  7</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.HashMap;
</span><span style="color: #008080;">  8</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Map;
</span><span style="color: #008080;">  9</span> 
<span style="color: #008080;"> 10</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.Filter;
</span><span style="color: #008080;"> 11</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterChain;
</span><span style="color: #008080;"> 12</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.FilterConfig;
</span><span style="color: #008080;"> 13</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletException;
</span><span style="color: #008080;"> 14</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletOutputStream;
</span><span style="color: #008080;"> 15</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletRequest;
</span><span style="color: #008080;"> 16</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletResponse;
</span><span style="color: #008080;"> 17</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #008080;"> 18</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;
</span><span style="color: #008080;"> 19</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponseWrapper;
</span><span style="color: #008080;"> 20</span> 
<span style="color: #008080;"> 21</span> <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 22</span> <span style="color: #008000;">* @ClassName: WebResourceCachedFilter
</span><span style="color: #008080;"> 23</span> <span style="color: #008000;">* @Description: Web???????
</span><span style="color: #008080;"> 24</span> <span style="color: #008000;">* </span><span style="color: #808080;">@author</span><span style="color: #008000;">: ????
</span><span style="color: #008080;"> 25</span> <span style="color: #008000;">* @date: 2014-9-8 ??12:20:16
</span><span style="color: #008080;"> 26</span> <span style="color: #008000;">*
</span><span style="color: #008080;"> 27</span> <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 28</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> WebResourceCachedFilter <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Filter {
</span><span style="color: #008080;"> 29</span>     <span style="color: #008000;">/**</span>
<span style="color: #008080;"> 30</span> <span style="color: #008000;">    * @Field: map
</span><span style="color: #008080;"> 31</span> <span style="color: #008000;">    *          ??Web???Map??
</span><span style="color: #008080;"> 32</span>     <span style="color: #008000;">*/</span> 
<span style="color: #008080;"> 33</span>     <span style="color: #0000ff;">private</span> Map&lt;String,<span style="color: #0000ff;">byte</span>[]&gt; map = <span style="color: #0000ff;">new</span> HashMap&lt;String,<span style="color: #0000ff;">byte</span>[]&gt;<span style="color: #000000;">();
</span><span style="color: #008080;"> 34</span>     
<span style="color: #008080;"> 35</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 36</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> init(FilterConfig filterConfig) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException {
</span><span style="color: #008080;"> 37</span> 
<span style="color: #008080;"> 38</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 39</span> 
<span style="color: #008080;"> 40</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 41</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doFilter(ServletRequest req, ServletResponse resp,
</span><span style="color: #008080;"> 42</span>             FilterChain chain) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException, ServletException {
</span><span style="color: #008080;"> 43</span>         HttpServletRequest request =<span style="color: #000000;"> (HttpServletRequest) req;
</span><span style="color: #008080;"> 44</span>         HttpServletResponse response =<span style="color: #000000;"> (HttpServletResponse) resp;
</span><span style="color: #008080;"> 45</span>         <span style="color: #008000;">//</span><span style="color: #008000;">1.???????uri</span>
<span style="color: #008080;"> 46</span>         String uri =<span style="color: #000000;"> request.getRequestURI();
</span><span style="color: #008080;"> 47</span>         <span style="color: #008000;">//</span><span style="color: #008000;">2.???????uri?????</span>
<span style="color: #008080;"> 48</span>         <span style="color: #0000ff;">byte</span> b[] =<span style="color: #000000;"> map.get(uri);
</span><span style="color: #008080;"> 49</span>         <span style="color: #008000;">//</span><span style="color: #008000;">3.?????????????????????????</span>
<span style="color: #008080;"> 50</span>         <span style="color: #0000ff;">if</span>(b!=<span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;"> 51</span>             <span style="color: #008000;">//</span><span style="color: #008000;">???????????????????</span>
<span style="color: #008080;"> 52</span>             String webResourceHtmlStr = <span style="color: #0000ff;">new</span><span style="color: #000000;"> String(b,response.getCharacterEncoding());
</span><span style="color: #008080;"> 53</span> <span style="color: #000000;">            System.out.println(webResourceHtmlStr);
</span><span style="color: #008080;"> 54</span> <span style="color: #000000;">            response.getOutputStream().write(b);
</span><span style="color: #008080;"> 55</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 56</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 57</span>         <span style="color: #008000;">//</span><span style="color: #008000;">4.?????????????????????????</span>
<span style="color: #008080;"> 58</span>         BufferResponse myresponse = <span style="color: #0000ff;">new</span><span style="color: #000000;"> BufferResponse(response);
</span><span style="color: #008080;"> 59</span> <span style="color: #000000;">        chain.doFilter(request, myresponse);
</span><span style="color: #008080;"> 60</span>         <span style="color: #008000;">//</span><span style="color: #008000;">??????????????</span>
<span style="color: #008080;"> 61</span>         <span style="color: #0000ff;">byte</span> out[] =<span style="color: #000000;"> myresponse.getBuffer();
</span><span style="color: #008080;"> 62</span>         <span style="color: #008000;">//</span><span style="color: #008000;">5.????????????uri??????????</span>
<span style="color: #008080;"> 63</span> <span style="color: #000000;">        map.put(uri, out);
</span><span style="color: #008080;"> 64</span>         <span style="color: #008000;">//</span><span style="color: #008000;">6.????????</span>
<span style="color: #008080;"> 65</span> <span style="color: #000000;">        response.getOutputStream().write(out);
</span><span style="color: #008080;"> 66</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 67</span> 
<span style="color: #008080;"> 68</span> <span style="color: #000000;">    @Override
</span><span style="color: #008080;"> 69</span>     <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> destroy() {
</span><span style="color: #008080;"> 70</span> 
<span style="color: #008080;"> 71</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 72</span> 
<span style="color: #008080;"> 73</span>     <span style="color: #0000ff;">class</span> BufferResponse <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServletResponseWrapper{
</span><span style="color: #008080;"> 74</span>         <span style="color: #0000ff;">private</span> ByteArrayOutputStream bout = <span style="color: #0000ff;">new</span> ByteArrayOutputStream();  <span style="color: #008000;">//</span><span style="color: #008000;">???????</span>
<span style="color: #008080;"> 75</span>         <span style="color: #0000ff;">private</span><span style="color: #000000;"> PrintWriter pw;
</span><span style="color: #008080;"> 76</span>         <span style="color: #0000ff;">private</span><span style="color: #000000;"> HttpServletResponse response;
</span><span style="color: #008080;"> 77</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> BufferResponse(HttpServletResponse response) {
</span><span style="color: #008080;"> 78</span>             <span style="color: #0000ff;">super</span><span style="color: #000000;">(response);
</span><span style="color: #008080;"> 79</span>             <span style="color: #0000ff;">this</span>.response =<span style="color: #000000;"> response;
</span><span style="color: #008080;"> 80</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 81</span> <span style="color: #000000;">        @Override
</span><span style="color: #008080;"> 82</span>         <span style="color: #0000ff;">public</span> ServletOutputStream getOutputStream() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException {
</span><span style="color: #008080;"> 83</span>             <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> MyServletOutputStream(bout);
</span><span style="color: #008080;"> 84</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 85</span> <span style="color: #000000;">        @Override
</span><span style="color: #008080;"> 86</span>         <span style="color: #0000ff;">public</span> PrintWriter getWriter() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException {
</span><span style="color: #008080;"> 87</span>             pw = <span style="color: #0000ff;">new</span> PrintWriter(<span style="color: #0000ff;">new</span> OutputStreamWriter(bout,<span style="color: #0000ff;">this</span><span style="color: #000000;">.response.getCharacterEncoding()));
</span><span style="color: #008080;"> 88</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> pw;
</span><span style="color: #008080;"> 89</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 90</span>         
<span style="color: #008080;"> 91</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">byte</span><span style="color: #000000;">[] getBuffer(){
</span><span style="color: #008080;"> 92</span>             <span style="color: #0000ff;">try</span><span style="color: #000000;">{
</span><span style="color: #008080;"> 93</span>                 <span style="color: #0000ff;">if</span>(pw!=<span style="color: #0000ff;">null</span><span style="color: #000000;">){
</span><span style="color: #008080;"> 94</span> <span style="color: #000000;">                    pw.close();
</span><span style="color: #008080;"> 95</span> <span style="color: #000000;">                }
</span><span style="color: #008080;"> 96</span>                 <span style="color: #0000ff;">return</span><span style="color: #000000;"> bout.toByteArray();
</span><span style="color: #008080;"> 97</span>             }<span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
</span><span style="color: #008080;"> 98</span>                 <span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RuntimeException(e);
</span><span style="color: #008080;"> 99</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">100</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">101</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">102</span> 
<span style="color: #008080;">103</span>     <span style="color: #0000ff;">class</span> MyServletOutputStream <span style="color: #0000ff;">extends</span><span style="color: #000000;"> ServletOutputStream{
</span><span style="color: #008080;">104</span>         <span style="color: #0000ff;">private</span><span style="color: #000000;"> ByteArrayOutputStream bout;
</span><span style="color: #008080;">105</span>         <span style="color: #0000ff;">public</span> MyServletOutputStream(ByteArrayOutputStream bout){  <span style="color: #008000;">//</span><span style="color: #008000;">????????</span>
<span style="color: #008080;">106</span>             <span style="color: #0000ff;">this</span>.bout =<span style="color: #000000;"> bout;
</span><span style="color: #008080;">107</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">108</span> <span style="color: #000000;">        @Override
</span><span style="color: #008080;">109</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> write(<span style="color: #0000ff;">int</span> b) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException {
</span><span style="color: #008080;">110</span> <span style="color: #000000;">            bout.write(b);
</span><span style="color: #008080;">111</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">112</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">113</span> }</pre> 
       </div> 
       <p>???web.xml???Web???????</p> 
       <div class="cnblogs_code"> 
        <pre><span style="color: #008080;"> 1</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 2</span>        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>Web???????<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 3</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>WebResourceCachedFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 4</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>me.gacl.web.filter.WebResourceCachedFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 5</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 6</span>   
<span style="color: #008080;"> 7</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 8</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>WebResourceCachedFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;"> 9</span>       <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> ?????????JSP?????????????????UI?????????????????? </span><span style="color: #008000;">--&gt;</span>
<span style="color: #008080;">10</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/login.jsp<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">11</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/test.jsp<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">12</span>       <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/test2.jsp<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #008080;">13</span>   <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span></pre> 
       </div> 
       <p>&nbsp;</p>
      </div>
      <div id="MySignature"></div> 
      <div class="clear"></div> 
      <div id="blog_post_info_block"> 
       <div id="BlogPostCategory"></div> 
       <div id="EntryTag"></div> 
       <div id="blog_post_info"> 
       </div> 
       <div class="clear"></div> 
       <div id="post_next_prev"></div> 
      </div> 
     </div> 
     <p class="postfoot">posted on <span id="post-date">2014-10-20 16:01</span> <a href="http://www.cnblogs.com/xdp-gacl/">????</a> ??(<span id="post_view_count">...</span>) ??(<span id="post_comment_count">...</span>) <a href="https://i.cnblogs.com/EditPosts.aspx?postid=3952405" rel="nofollow">??</a> <a href="#" onclick="AddToWz(3952405);return false;">??</a></p> 
    </div> 
    <script type="text/javascript">var allowComments=true,cb_blogId=133816,cb_entryId=3952405,cb_blogApp=currentBlogApp,cb_blogUserGuid='f1774468-815f-e011-a53f-842b2b196315',cb_entryCreatedDate='2014/10/20 16:01:00';loadViewCount(cb_entryId);</script> 
   </div>
   <a name="!comments"></a>
   <div id="blog-comments-placeholder"></div>
   <script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script> 
   <div id="comment_form" class="commentform"> 
    <a name="commentform"></a> 
    <div id="divCommentShow"></div> 
    <div id="comment_nav">
     <span id="span_refresh_tips"></span>
     <a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">????</a>
     <a href="#" onclick="return RefreshPage();">????</a>
     <a href="#top">????</a>
    </div> 
    <div id="comment_form_container"></div> 
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div> 
    <div id="ad_t2"></div> 
    <div id="opt_under_post"></div> 
    <div id="cnblogs_c1" class="c_ad_block"></div> 
    <div id="under_post_news"></div> 
    <div id="cnblogs_c2" class="c_ad_block"></div> 
    <div id="under_post_kb"></div> 
    <div id="HistoryToday" class="c_ad_block"></div> 
    <script type="text/javascript">
    fixPostBody();
    setTimeout(function () { incrementViewCount(cb_entryId); }, 50);
    deliverAdT2();
    deliverAdC1();
    deliverAdC2();    
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);   
</script> 
   </div> 
  </div> 
  <div id="rightmenu"> 
   <div id="my_links"> 
    <h3>??</h3> 
    <ul> 
     <li><a id="blog_nav_sitehome" href="http://www.cnblogs.com/">???</a></li> 
     <li><a id="blog_nav_myhome" href="http://www.cnblogs.com/xdp-gacl/">??</a></li> 
     <!--<li><a id="blog_nav_newpost" rel="nofollow" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">???</a></li>--> 
     <li><a id="blog_nav_contact" rel="nofollow" href="https://msg.cnblogs.com/send/%E5%AD%A4%E5%82%B2%E8%8B%8D%E7%8B%BC">??</a></li> 
     <li><a id="blog_nav_rss" href="http://www.cnblogs.com/xdp-gacl/rss">??</a></li>
     <!--<a id="blog_nav_rss_image" href="http://www.cnblogs.com/xdp-gacl/rss"><img src="//www.cnblogs.com/images/xml.gif" alt="??" /></a>--> 
     <li><a id="blog_nav_admin" rel="nofollow" href="https://i.cnblogs.com/">??</a></li> 
    </ul> 
   </div> 
   <div id="blog-calendar" style="display:none"></div>
   <script type="text/javascript">loadBlogDefaultCalendar();</script> 
   <h3>??</h3> 
   <div class="newsItem"> 
    <div id="blog-news"></div>
    <script type="text/javascript">loadBlogNews();</script> 
   </div> 
   <div id="blog_stats"> 
    <div id="blog_stats"> 
     <h3>??</h3> 
     <ul> 
      <li>?? - 275 </li>
      <li>?? - 0 </li>
      <li>?? - 2712 
       <!--<li>?? - 0--> </li> 
     </ul> 
    </div>
   </div> 
   <div id="blog-sidecolumn"></div>
   <script type="text/javascript">loadBlogSideColumn();</script> 
   <div id="footer">
     Powered by: 
    <br> 
    <a id="Footer1_Hyperlink3" name="Hyperlink1" href="http://www.cnblogs.com/" style="font-family:Verdana;font-size:12px;">???</a> 
    <br> Copyright © ???? 
   </div> 
  </div> 
  <!--PageEndHtml Block Begin--> 
  <!--?????????????--> 
  <script type="text/javascript" language="javascript"> 
    $(document).ready(function() {
        var commentTime = setInterval(function(){if($("#comments_pager_bottom").length>0){CommentBubble();clearTimeout(commentTime);}},50);
    }); 
    function CommentBubble()
    {
var w1 = '<div class="list">' +
        '<table class="out" border="0" cellspacing="0" cellpadding="0"> ' +
            '<tr>' +
                '<td class="icontd" align="right" valign="bottom">' +
                    '<img src="http://pic.cnitblog.com/face/289233/20131202131125.png" width="70px" height="57px"/>' +
                '</td>' +
                '<td align="left" valign="bottom" class="q">' +
                    '<table border="0" cellpadding="0" cellspacing="0" style=""> ' +
                        '<tr><td class="topleft"></td><td class="top"></td><td class="topright"></td></tr> ' +
                        '<tr><td class="left"></td> <td align="left" class="conmts"><p>';
 
 
        var w2 = '</p> </td> <td class="right"></td></tr> ' +
                        '<tr><td class="bottomleft"></td><td class="bottom"></td><td class="bottomright"></td></tr> ' +
                    '</table>' +
                '</td> ' +
            '</tr> ' +
        '</table> ' +
    '</div>';
 
        $.each($(".blog_comment_body"), function(i, t) {
            $(t).html(w1 + $(t).html() + w2);
        });
$(".louzhu").closest(".feedbackItem").find(".out").removeClass("out").addClass("inc");
        /*.find(".q").attr("align","right");*/
        }
</script> 
  <!--PageEndHtml Block End-->   
 </body>
</html>