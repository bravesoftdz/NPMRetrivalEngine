<!doctype html>
<html lang="en-US">
 <head> 
  <script src="https://www.twilio.com/user/reduce-size.js?bust=1503932477"></script> 
  <script type="text/javascript">
(function() {
    var projectId = 3524915770;
    var protocol = ('https:' == document.location.protocol ?
    'https://' : 'http://');
    var scriptTag = document.createElement('script');
    scriptTag.type = 'text/javascript';
    scriptTag.async = true;
    scriptTag.src = protocol + 'cdn.optimizely.com/js/' +
    projectId + '.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(scriptTag, s);
})();
function optimizelyTimeout() {
    window.optimizely = window.optimizely|| [];
    if (!window.optimizely.data) {
    window.optimizely.push("timeout");
    }
}
setTimeout(optimizelyTimeout, 1000);
</script> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="pingback" href="https://www.twilio.com/blog/xmlrpc.php"> 
  <script type="text/javascript">
var _elqQ = _elqQ || [];
_elqQ.push(['elqSetSiteId', '815114181']);
_elqQ.push(['elqTrackPageView']);
_elqQ.push(['elqUseFirstPartyCookie', 'www.twilio.com']);
(function () {
  function async_load()
  {
    var s = document.createElement('script'); s.type = 'text/javascript'; s.async = true;
    s.src = '//img03.en25.com/i/elqCfg.min.js';
    var x = document.getElementsByTagName('script')[0]; x.parentNode.insertBefore(s, x);
  }
  if (window.addEventListener) window.addEventListener('DOMContentLoaded', async_load, false);
  else if (window.attachEvent) window.attachEvent('onload', async_load);
})();
</script> 
  <!-- Facebook Pixel Code --> 
  <script>
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','//connect.facebook.net/en_US/fbevents.js');

fbq('init', '467131150158811');
fbq('track', "PageView");</script> 
  <noscript>
   &lt;img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=467131150158811&amp;amp;ev=PageView&amp;amp;noscript=1"&gt;
  </noscript> 
  <!-- End Facebook Pixel Code --> 
  <style>
@media screen and (max-width: 600px) {
  #signal-header { display: none; }
}
</style> 
  <link type="text/css" media="all" href="https://www.twilio.com/blog/wp-content/cache/autoptimize/css/autoptimize_72dd7fa703432ceda83d64328303fde4.css" rel="stylesheet">
  <link type="text/css" media="screen" href="https://www.twilio.com/blog/wp-content/cache/autoptimize/css/autoptimize_a318e34a19c5647cc570eead676317f3.css" rel="stylesheet">
  <title>Introducing The Twilio Module For Node.js</title> 
  <!-- This site is optimized with the Yoast SEO plugin v4.5 - https://yoast.com/wordpress/plugins/seo/ --> 
  <meta name="description" content="Introducing The Twilio Module For Node.js by Kevin Whinnery."> 
  <meta name="robots" content="noodp"> 
  <link rel="canonical" href="https://www.twilio.com/blog/2013/03/introducing-the-twilio-module-for-node-js.html"> 
  <!-- / Yoast SEO plugin. --> 
  <link rel="dns-prefetch" href="https://www.twilio.com/blog//s0.wp.com"> 
  <link rel="dns-prefetch" href="https://www.twilio.com/blog//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="Twilio Cloud Communications Blog » Feed" href="https://www.twilio.com/blog/feed"> 
  <link rel="alternate" type="application/rss+xml" title="Twilio Cloud Communications Blog » Comments Feed" href="https://www.twilio.com/blog/comments/feed"> 
  <link rel="alternate" type="application/rss+xml" title="Twilio Cloud Communications Blog » Introducing The Twilio Module For Node.js Comments Feed" href="https://www.twilio.com/blog/2013/03/introducing-the-twilio-module-for-node-js.html/feed"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/twilioinc.wpengine.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.7.5"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),!(j.toDataURL().length<3e3)&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,65039,8205,55356,57096),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,55356,57096),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55357,56425,55356,57341,8205,55357,56507),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55357,56425,55356,57341,55357,56507),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <!-- This site uses the Google Analytics by Yoast plugin v5.4.7 - Universal enabled - https://yoast.com/wordpress/plugins/google-analytics/ --> 
  <script type="text/javascript">
	(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	})(window,document,'script','//www.google-analytics.com/analytics.js','__gaTracker');

	__gaTracker('create', 'UA-2900316-1', 'auto');
	__gaTracker('set', 'forceSSL', true);
	 window.optimizely = window.optimizely || [];
 window.optimizely.push("activateUniversalAnalytics");
	__gaTracker('set', 'dimension4', 'Kevin Whinnery');
	__gaTracker('set', 'dimension5', 'post');
	__gaTracker('set', 'dimension6', 'all-things-code');
	__gaTracker('set', 'dimension7', 'JavaScript,Kevin Whinnery,Node.js,SMS,voip');
	__gaTracker('set', 'dimension8', '2013-03-29T09:00:07+00:00');
	__gaTracker('send','pageview');

</script> 
  <!-- / Google Analytics by Yoast --> 
  <script type="text/javascript">
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"https:\/\/twilioinc.wpengine.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script> 
  <script type="text/javascript">
/* <![CDATA[ */
var swiftypeParams = {"engineKey":"NmAy9AdwKrQe1vAxb7JJ"};
/* ]]> */
</script> 
  <link rel="https://api.w.org/" href="https://www.twilio.com/blog/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.twilio.com/blog/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.twilio.com/blog/wp-includes/wlwmanifest.xml"> 
  <link rel="shortlink" href="https://www.twilio.com/blog/?p=11864"> 
  <link rel="alternate" type="application/json+oembed" href="https://www.twilio.com/blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.twilio.com%2Fblog%2F2013%2F03%2Fintroducing-the-twilio-module-for-node-js.html"> 
  <link rel="alternate" type="text/xml+oembed" href="https://www.twilio.com/blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.twilio.com%2Fblog%2F2013%2F03%2Fintroducing-the-twilio-module-for-node-js.html&amp;format=xml"> 
  <link rel="icon" href="https://www.twilio.com/blog/wp-content/uploads/2015/09/cropped-favicon_1141-32x32.png" sizes="32x32"> 
  <link rel="icon" href="https://www.twilio.com/blog/wp-content/uploads/2015/09/cropped-favicon_1141-192x192.png" sizes="192x192"> 
  <link rel="apple-touch-icon-precomposed" href="https://www.twilio.com/blog/wp-content/uploads/2015/09/cropped-favicon_1141-180x180.png"> 
  <meta name="msapplication-TileImage" content="https://www.twilio.com/blog/wp-content/uploads/2015/09/cropped-favicon_1141-270x270.png"> 
 </head> 
 <body class="post-template-default single single-post postid-11864 single-format-standard group-blog"> 
  <!-- Google Tag Manager --> 
  <noscript>
   <iframe src="https://www.twilio.com/blog//www.googletagmanager.com/ns.html?id=GTM-W4RVXH" height="0" width="0" style="display:none;visibility:hidden"></iframe>
  </noscript> 
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-W4RVXH');</script> 
  <!-- End Google Tag Manager --> 
  <div id="fb-root"></div> 
  <script>(function(d, s, id) {
		var js, fjs = d.getElementsByTagName(s)[0];
		if (d.getElementById(id)) return;
		js = d.createElement(s); js.id = id;
		js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=414254592083321&version=v2.0";
		fjs.parentNode.insertBefore(js, fjs);
	}(document, 'script', 'facebook-jssdk'));
window.fbAsyncInit = function() {
  FB.Event.subscribe('edge.create', function(targetUrl) {
    __gaTracker('send', 'social', 'facebook', 'like', targetUrl);
  });
};
window.twttr = (function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0],
    t = window.twttr || {};
  if (d.getElementById(id)) return;
  js = d.createElement(s);
  js.id = id;
  js.src = "https://platform.twitter.com/widgets.js";
  fjs.parentNode.insertBefore(js, fjs);

  t._e = [];
  t.ready = function(f) {
    t._e.push(f);
  };

  return t;
}(document, "script", "twitter-wjs"));

function trackTwitter(intent_event) {
  if (intent_event) {
    var opt_pagePath;
    if (intent_event.target && intent_event.target.nodeName == 'IFRAME') {
          opt_target = extractParamFromUri(intent_event.target.src, 'url');
    }
    __gaTracker('send', 'social', 'twitter', 'tweet', opt_pagePath);
  }
}

function extractParamFromUri(uri, paramName) {
  if (!uri) {
    return;
  }
  var regex = new RegExp('[\\?&#]' + paramName + '=([^&#]*)');
  var params = regex.exec(uri);
  if (params != null) {
    return unescape(params[1]);
  }
  return;
}

//Wrap event bindings - Wait for async js to load
twttr.ready(function (twttr) {
  //event bindings
  twttr.events.bind('tweet', trackTwitter);
});
</script> 
  <script type="text/javascript">
  window.heap=window.heap||[],heap.load=function(e,t){window.heap.appid=e,window.heap.config=t=t||{};var n=t.forceSSL||"https:"===document.location.protocol,a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src=(n?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";var o=document.getElementsByTagName("script")[0];o.parentNode.insertBefore(a,o);for(var r=function(e){return function(){heap.push([e].concat(Array.prototype.slice.call(arguments,0)))}},p=["clearEventProperties","identify","setEventProperties","track","unsetEventProperty"],c=0;c<p.length;c++)heap[p[c]]=r(p[c])};
  heap.load("1541905715");
</script> 
  <div id="page" class="hfeed site"> 
   <a class="skip-link screen-reader-text" href="#content">Skip to content</a> 
   <nav class="navbar navbar-default" role="navigation"> 
    <div class="container"> 
     <!-- Brand and toggle get grouped for better mobile display --> 
     <div class="navbar-header"> 
      <button type="button" class="navbar-toggle hidden-xs" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
      <a class="navbar-brand" href="https://www.twilio.com/blog/"> <img src="https://s3.amazonaws.com/ahoy-assets.twilio.com/global/images/wordmark.svg" width="200"> <span class="logo-blog">blog</span> </a> 
     </div> 
     <div class="hidden-xs">
      <ul id="menu-site-navigation" class="nav navbar-nav pull-right">
       <li id="menu-item-12202" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12202"><a href="http://www.twilio.com" onclick="__gaTracker('send', 'event', 'outbound-widget', 'http://www.twilio.com', 'Home');" title="Home">Home</a></li> 
       <li id="menu-item-12205" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12205"><a href="http://www.twilio.com/blog" onclick="__gaTracker('send', 'event', 'outbound-widget', 'http://www.twilio.com/blog', 'Blog');" title="Blog">Blog</a></li> 
       <li id="menu-item-12204" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12204"><a href="https://www.twilio.com/docs/howto" onclick="__gaTracker('send', 'event', 'outbound-widget', 'https://www.twilio.com/docs/howto', 'Tutorials');" title="Tutorials">Tutorials</a></li> 
       <li id="menu-item-12206" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12206"><a href="https://www.twilio.com/docs/api" onclick="__gaTracker('send', 'event', 'outbound-widget', 'https://www.twilio.com/docs/api', 'Docs');" title="Docs">Docs</a></li> 
       <li id="menu-item-12207" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12207"><a href="http://www.twilio.com/help" onclick="__gaTracker('send', 'event', 'outbound-widget', 'http://www.twilio.com/help', 'Help');" title="Help">Help</a></li> 
       <li id="menu-item-12208" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12208"><a href="https://www.twilio.com/login" onclick="__gaTracker('send', 'event', 'outbound-widget', 'https://www.twilio.com/login', 'Login');" title="Login">Login</a></li> 
       <li id="menu-item-12209" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12209"><a href="https://www.twilio.com/try-twilio" onclick="__gaTracker('send', 'event', 'outbound-widget', 'https://www.twilio.com/try-twilio', 'Signup');" title="Signup">Signup</a></li> 
      </ul>
     </div> 
    </div> 
   </nav> 
   <div id="content" class="site-content container"> 
    <div class="row"> 
     <div id="primary" class="content-area col-md-9"> 
      <main id="main" class="site-main" role="main"> 
       <article id="post-11864" class="row post-11864 post type-post status-publish format-standard hentry category-all-things-code tag-javascript tag-kevin-whinnery tag-node-js tag-sms tag-voip"> 
        <header class="entry-header col-md-12"> 
         <h2 class="entry-title">Introducing The Twilio Module For Node.js</h2> 
         <footer class="entry-footer"> 
          <div class="entry-meta"> 
           <div class="row"> 
            <div class="col-md-6"> 
             <span class="byline"> by <span class="author vcard"><a class="url fn n" href="https://www.twilio.com/blog/author/kevinwhinnery">Kevin Whinnery</a></span></span> on 
             <span class="posted-on"><a href="https://www.twilio.com/blog/2013/03/introducing-the-twilio-module-for-node-js.html" rel="bookmark"><time class="entry-date published" datetime="2013-03-29T09:00:07+00:00">March 29, 2013</time><time class="updated" datetime="2017-08-11T14:57:03+00:00">August 11, 2017</time></a></span> 
            </div> 
            <div class="col-md-6"> 
             <div class="social-buttons"> 
              <div class="fb-like" data-href="https://www.twilio.com/blog/2013/03/introducing-the-twilio-module-for-node-js.html" data-layout="button" data-action="like" data-show-faces="false" data-share="false"></div> 
              <a href="https://twitter.com/share" class="twitter-share-button" data-via="twilio" data-count="none" data-url="https://www.twilio.com/blog/2013/03/introducing-the-twilio-module-for-node-js.html" data-text="Introducing The Twilio Module For Node.js ">Tweet</a> 
              <a href="https://twitter.com/twilio" class="twitter-follow-button" data-show-count="false">Follow @twilio</a> 
             </div> 
            </div> 
           </div> 
          </div>
          <!-- .entry-meta --> 
         </footer>
         <!-- .entry-footer --> 
        </header>
        <!-- .entry-header --> 
        <div class="entry-content col-md-12"> 
         <div class="row"> 
          <div class="col-md-12"> 
           <style>
pre.terminal {<br />  color:lime;<br />  background-color:black;<br />  font-size:16px;<br />  margin-bottom:20px;<br />  padding:10px;<br />}<br />span.inlinecode {<br />  padding:0 3px 0 3px;<br />  color:black;<br />  font-family:Monaco,monospace;<br />}<br /></style> 
           <p><em>This is the first in a series of tutorial blog posts covering the use of Twilios new helper library for node.js. In this tutorial, we will cover the setup and basic features of the module to get you started fast. The next post in this series will help you learn how to <a href="https://www.twilio.com/blog/introduction-to-twilio-client-with-node-js">turn your browser into a soft phone with Twilio Client</a> and node.</em></p> 
           <p>The official <a href="http://twilio.github.com/twilio-node/" onclick="__gaTracker('send', 'event', 'outbound-article', 'http://twilio.github.com/twilio-node/', 'node.js helper library documentation is located here');">node.js helper library documentation is located here</a>.</p> 
           <h3>Making Phones Ring With JavaScript</h3> 
           <p>These days you can write just about any kind of software in JavaScript. Whether its a web front end, a 3D game, a native mobile app, or back end services on a server, today you can do it all in JavaScript. On the server, <a href="http://nodejs.org/" onclick="__gaTracker('send', 'event', 'outbound-article', 'http://nodejs.org/', 'node.js');">node.js</a> is leading the charge, providing a super fast runtime built on the V8 JavaScript engine, a lean but powerful standard library, and a thriving community of module developers packing <a href="https://npmjs.org/" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://npmjs.org/', 'npm');">npm</a> with useful software.</p> 
           <p>To support this growing user community, Twilio recently released a full-featured, officially supported <a href="http://twilio.github.com/twilio-node/" onclick="__gaTracker('send', 'event', 'outbound-article', 'http://twilio.github.com/twilio-node/', 'helper library for node.js');">helper library for node.js</a>. To help introduce the module, I will do a series of blog posts in the coming weeks to show how you can implement awesome communications apps using JavaScript on the server. This week, we will cover the installation and key functional areas of the Twilio module at a high level to get you started.</p> 
           <h3>Getting Started</h3> 
           <p dir="ltr">First things first  if you have not yet installed node.js on your system, you can <a href="http://nodejs.org/" onclick="__gaTracker('send', 'event', 'outbound-article', 'http://nodejs.org/', 'download an installer for your platform from nodejs.org');">download an installer for your platform from nodejs.org</a>. The installer should place both the node and npm executable commands on your system path. To confirm this is the case, open up a command prompt or terminal window and type node -v and npm -v.</p> 
           <p dir="ltr">As of this writing, the latest stable versions of node and npm are 0.10.1 and 1.2.15, respectively. As you use node, you may want to install multiple versions  if so, I would recommend <a href="https://github.com/creationix/nvm" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://github.com/creationix/nvm', 'taking a look at nvm');">taking a look at nvm</a>. But for now, using the standard installer should suffice.</p> 
           <p dir="ltr">Now, lets create a simple node program which uses the Twilio API. From the terminal, create a new directory for this demo exercise. Inside this new directory, create a file called ahoy.js, where we will write code to send a text message using the <a href="https://www.twilio.com/docs/api/rest" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://www.twilio.com/docs/api/rest', 'REST API');">REST API</a>. Next, install the Twilio module using npm, in the same directory as ahoy.js. Note that depending on your system configuration, you may need to install the module using sudo:</p> 
           <pre class="crayon:false terminal">[sudo] npm install twilio
</pre> 
           <p>node.js has a simple module loading system which looks for modules in a node_modules directory in the path where the node program is run. After installing the Twilio module from npm using the method above, you will notice a node_modules directory in your demo folder, and that the twilio module is inside it.</p> 
           <p>Now lets start writing some code. The Twilio module provides three main functional areas:</p> 
           <ul> 
            <li>A client for making authenticated requests against the <a href="https://www.twilio.com/docs/api/rest" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://www.twilio.com/docs/api/rest', 'REST API');">REST API</a></li> 
           </ul> 
           <ul> 
            <li>A utility for generating <a href="https://www.twilio.com/docs/api/twiml" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://www.twilio.com/docs/api/twiml', 'TwiML');">TwiML</a></li> 
           </ul> 
           <ul> 
            <li>A utility for generating <a href="https://www.twilio.com/docs/client/capability-tokens" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://www.twilio.com/docs/client/capability-tokens', 'capability tokens');">capability tokens</a> for use with <a href="http://www.twilio.com/client/mobile" onclick="__gaTracker('send', 'event', 'outbound-article', 'http://www.twilio.com/client/mobile', 'Twilio Client VoIP SDK');">Twilio Client VoIP SDK</a></li> 
           </ul> 
           <p id="internal-source-marker_0.9665515724181112" dir="ltr">Writing a VoIP application with node.js will be the focus of next weeks post, so we wont be exploring the third bullet just yet. But lets take a look at the first two bits of functionality, starting with the REST API.</p> 
           <h3>Using the REST API</h3> 
           <p id="internal-source-marker_0.9665515724181112" dir="ltr">Our first example will use the REST client to send a text message. Open ahoy.js with your favorite text editor and paste in the code below, replacing TWILIO_ACCOUNT_SID and TWILIO_AUTH_TOKEN with the appropriate values from <a href="https://www.twilio.com/user/account" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://www.twilio.com/user/account', 'your account dashboard');">your account dashboard</a>. You will also need a <a href="https://www.twilio.com/user/account/phone-numbers/incoming" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://www.twilio.com/user/account/phone-numbers/incoming', 'Twilio phone number');">Twilio phone number</a> to send messages from  <a href="https://www.twilio.com/user/account/phone-numbers/available/local" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://www.twilio.com/user/account/phone-numbers/available/local', 'you can buy one here');">you can buy one here</a> if you dont already have one to use for testing. Replace TWILIO_NUMBER with this phone number. For testing, youll probably just want to send the message to your own mobile phone  replace +16512223344 with your own mobile number:</p> 
           <p></p>
           <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
           <div id="crayon-59a4303dba0ef290481457" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover expand" style=" margin-top: 12px; margin-bottom: 12px; font-size: 16px !important; line-height: 24px !important;"> 
            <div class="crayon-toolbar" data-settings=" show" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
             <span class="crayon-title"></span> 
             <div class="crayon-tools" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
              <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-expand-button" title="Expand Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-copy-button" title="Copy">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
               <div class="crayon-button-icon"></div>
              </div>
              <span class="crayon-language">JavaScript</span>
             </div>
            </div> 
            <div class="crayon-info" style="min-height: 22.4px !important; line-height: 22.4px !important;"></div> 
            <div class="crayon-plain-wrap">
             <textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2; font-size: 16px !important; line-height: 24px !important;">
// Load the twilio module
var twilio = require('twilio');
 
// Create a new REST API client to make authenticated requests against the
// twilio back end
var client = new twilio(accountSid, authToken);
 
// Pass in parameters to the REST API using an object literal notation. The
// REST client will handle authentication and response serialzation for you.
client.messages.create({
    to:'+16512223344',
    from:'TWILIO_NUMBER',
    body:'ahoy hoy! Testing Twilio and node.js'
}, function(error, message) {
    // The HTTP request to Twilio will run asynchronously. This callback
    // function will be called when a response is received from Twilio
    // The "error" variable will contain error information, if any.
    // If the request was successful, this value will be "falsy"
    if (!error) {
        // The second argument to the callback will contain the information
        // sent back by Twilio for the request. In this case, it is the
        // information about the text messsage you just sent:
        console.log('Success! The SID for this SMS message is:');
        console.log(message.sid);
 
        console.log('Message sent on:');
        console.log(message.dateCreated);
    } else {
        console.log('Oops! There was an error.');
    }
});</textarea>
            </div> 
            <div class="crayon-main" style=""> 
             <table class="crayon-table"> 
              <tbody>
               <tr class="crayon-row"> 
                <td class="crayon-nums " data-settings="show"> 
                 <div class="crayon-nums-content" style="font-size: 16px !important; line-height: 24px !important;">
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-1">
                   1
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-2">
                   2
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-3">
                   3
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-4">
                   4
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-5">
                   5
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-6">
                   6
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-7">
                   7
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-8">
                   8
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-9">
                   9
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-10">
                   10
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-11">
                   11
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-12">
                   12
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-13">
                   13
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-14">
                   14
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-15">
                   15
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-16">
                   16
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-17">
                   17
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-18">
                   18
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-19">
                   19
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-20">
                   20
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-21">
                   21
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-22">
                   22
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-23">
                   23
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-24">
                   24
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-25">
                   25
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-26">
                   26
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-27">
                   27
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-28">
                   28
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-29">
                   29
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0ef290481457-30">
                   30
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0ef290481457-31">
                   31
                  </div>
                 </div> </td> 
                <td class="crayon-code">
                 <div class="crayon-pre" style="font-size: 16px !important; line-height: 24px !important; -moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2;">
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-1">
                   <span class="crayon-c">// Load the twilio module</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-2">
                   <span class="crayon-t">var</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">twilio</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-e">require</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'twilio'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-3">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-4">
                   <span class="crayon-c">// Create a new REST API client to make authenticated requests against the</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-5">
                   <span class="crayon-c">// twilio back end</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-6">
                   <span class="crayon-t">var</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">client</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-r">new</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-e">twilio</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">accountSid</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">authToken</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-7">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-8">
                   <span class="crayon-c">// Pass in parameters to the REST API using an object literal notation. The</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-9">
                   <span class="crayon-c">// REST client will handle authentication and response serialzation for you.</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-10">
                   <span class="crayon-v">client</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-v">messages</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">create</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-11">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-st">to</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'+16512223344'</span>
                   <span class="crayon-sy">,</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-12">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">from</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'TWILIO_NUMBER'</span>
                   <span class="crayon-sy">,</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-13">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">body</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'ahoy hoy! Testing Twilio and node.js'</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-14">
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-t">function</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">error</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">message</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-15">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// The HTTP request to Twilio will run asynchronously. This callback</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-16">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// function will be called when a response is received from Twilio</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-17">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// The "error" variable will contain error information, if any.</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-18">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// If the request was successful, this value will be "falsy"</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-19">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-st">if</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-o">!</span>
                   <span class="crayon-v">error</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-20">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// The second argument to the callback will contain the information</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-21">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// sent back by Twilio for the request. In this case, it is the</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-22">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// information about the text messsage you just sent:</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-23">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'Success! The SID for this SMS message is:'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-24">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">message</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-v">sid</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-25">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-26">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'Message sent on:'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-27">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">message</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-v">dateCreated</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-28">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-sy">}</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-st">else</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-29">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'Oops! There was an error.'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0ef290481457-30">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-sy">}</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0ef290481457-31">
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                 </div></td> 
               </tr> 
              </tbody>
             </table> 
            </div> 
           </div> 
           <!-- [Format Time: 0.0046 seconds] --> 
           <p>To run this code, return to the terminal and run:</p> 
           <pre class="crayon:false terminal">node ahoy.js</pre> 
           <p>After a second or so, you should see information about the text message you just sent printed out to the console.<br> Since the REST API is the most commonly used feature of the module, weve tried to tighten up the API as much as possible for common functionality. In this example, we initialize a REST client with a single line of code, and use the sendSms function, which is a shorter alias for sms.messages.create:</p>
           <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
           <div id="crayon-59a4303dba0fd119784507" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover expand" style=" margin-top: 12px; margin-bottom: 12px; font-size: 16px !important; line-height: 24px !important;"> 
            <div class="crayon-toolbar" data-settings=" show" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
             <span class="crayon-title"></span> 
             <div class="crayon-tools" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
              <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-expand-button" title="Expand Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-copy-button" title="Copy">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
               <div class="crayon-button-icon"></div>
              </div>
              <span class="crayon-language">JavaScript</span>
             </div>
            </div> 
            <div class="crayon-info" style="min-height: 22.4px !important; line-height: 22.4px !important;"></div> 
            <div class="crayon-plain-wrap">
             <textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2; font-size: 16px !important; line-height: 24px !important;">
//Initialize a REST client in a single line:
var client = require('twilio')('TWILIO_ACCOUNT_SID', 'TWILIO_AUTH_TOKEN');
 
// Use this convenient shorthand to send an SMS:
client.sendSms({
    to:'YOUR_PHONE',
    from:'TWILIO_NUMBER',
    body:'ahoy hoy! Testing Twilio and node.js'
}, function(error, message) {
    if (!error) {
        console.log('Success! The SID for this SMS message is:');
        console.log(message.sid);
        console.log('Message sent on:');
        console.log(message.dateCreated);
    } else {
        console.log('Oops! There was an error.');
    }
});</textarea>
            </div> 
            <div class="crayon-main" style=""> 
             <table class="crayon-table"> 
              <tbody>
               <tr class="crayon-row"> 
                <td class="crayon-nums " data-settings="show"> 
                 <div class="crayon-nums-content" style="font-size: 16px !important; line-height: 24px !important;">
                  <div class="crayon-num" data-line="crayon-59a4303dba0fd119784507-1">
                   1
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0fd119784507-2">
                   2
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0fd119784507-3">
                   3
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0fd119784507-4">
                   4
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0fd119784507-5">
                   5
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0fd119784507-6">
                   6
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0fd119784507-7">
                   7
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0fd119784507-8">
                   8
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0fd119784507-9">
                   9
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0fd119784507-10">
                   10
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0fd119784507-11">
                   11
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0fd119784507-12">
                   12
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0fd119784507-13">
                   13
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0fd119784507-14">
                   14
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0fd119784507-15">
                   15
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0fd119784507-16">
                   16
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba0fd119784507-17">
                   17
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba0fd119784507-18">
                   18
                  </div>
                 </div> </td> 
                <td class="crayon-code">
                 <div class="crayon-pre" style="font-size: 16px !important; line-height: 24px !important; -moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2;">
                  <div class="crayon-line" id="crayon-59a4303dba0fd119784507-1">
                   <span class="crayon-c">//Initialize a REST client in a single line:</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0fd119784507-2">
                   <span class="crayon-t">var</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">client</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-e">require</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'twilio'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'TWILIO_ACCOUNT_SID'</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-s">'TWILIO_AUTH_TOKEN'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0fd119784507-3">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0fd119784507-4">
                   <span class="crayon-c">// Use this convenient shorthand to send an SMS:</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0fd119784507-5">
                   <span class="crayon-v">client</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">sendSms</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0fd119784507-6">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-st">to</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'YOUR_PHONE'</span>
                   <span class="crayon-sy">,</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0fd119784507-7">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">from</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'TWILIO_NUMBER'</span>
                   <span class="crayon-sy">,</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0fd119784507-8">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">body</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'ahoy hoy! Testing Twilio and node.js'</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0fd119784507-9">
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-t">function</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">error</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">message</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0fd119784507-10">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-st">if</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-o">!</span>
                   <span class="crayon-v">error</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0fd119784507-11">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'Success! The SID for this SMS message is:'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0fd119784507-12">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">message</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-v">sid</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0fd119784507-13">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'Message sent on:'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0fd119784507-14">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">message</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-v">dateCreated</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0fd119784507-15">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-sy">}</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-st">else</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0fd119784507-16">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'Oops! There was an error.'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba0fd119784507-17">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-sy">}</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba0fd119784507-18">
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                 </div></td> 
               </tr> 
              </tbody>
             </table> 
            </div> 
           </div> 
           <!-- [Format Time: 0.0048 seconds] --> 
           <p>In a production environment, you will not want to have your account SID and auth token stored directly in your source code, where they might be checked into version control by mistake. One solution is to configure your account SID and auth token as system environment variables, and access them from there. The node.js module automatically looks for this configuration in process.env.TWILIO_ACCOUNT_SID and process.env.TWILIO_AUTH_TOKEN, so if those variables are set, the following would be sufficient to initialize a REST client:</p>
           <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
           <div id="crayon-59a4303dba101057085145" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover expand" style=" margin-top: 12px; margin-bottom: 12px; font-size: 16px !important; line-height: 24px !important;"> 
            <div class="crayon-toolbar" data-settings=" show" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
             <span class="crayon-title"></span> 
             <div class="crayon-tools" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
              <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-expand-button" title="Expand Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-copy-button" title="Copy">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
               <div class="crayon-button-icon"></div>
              </div>
              <span class="crayon-language">JavaScript</span>
             </div>
            </div> 
            <div class="crayon-info" style="min-height: 22.4px !important; line-height: 22.4px !important;"></div> 
            <div class="crayon-plain-wrap">
             <textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2; font-size: 16px !important; line-height: 24px !important;">
var client = require('twilio')();</textarea>
            </div> 
            <div class="crayon-main" style=""> 
             <table class="crayon-table"> 
              <tbody>
               <tr class="crayon-row"> 
                <td class="crayon-nums " data-settings="show"> 
                 <div class="crayon-nums-content" style="font-size: 16px !important; line-height: 24px !important;">
                  <div class="crayon-num" data-line="crayon-59a4303dba101057085145-1">
                   1
                  </div>
                 </div> </td> 
                <td class="crayon-code">
                 <div class="crayon-pre" style="font-size: 16px !important; line-height: 24px !important; -moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2;">
                  <div class="crayon-line" id="crayon-59a4303dba101057085145-1">
                   <span class="crayon-t">var</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">client</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-e">require</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'twilio'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                 </div></td> 
               </tr> 
              </tbody>
             </table> 
            </div> 
           </div> 
           <!-- [Format Time: 0.0007 seconds] --> 
           <p></p> 
           <h3>Generating TwiML to handle inbound calls and SMS</h3> 
           <p>As experienced Twilio hackers know, when you receive an inbound call or text message to your Twilio number, Twilio makes an HTTP request to a URL controlled by the developer. This URL must return a <a href="https://www.twilio.com/docs/api/twiml" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://www.twilio.com/docs/api/twiml', 'special set of XML instructions called TwiML');">special set of XML instructions called TwiML</a>, which tells Twilio how to handle the call or SMS.</p> 
           <p>While you are free to generate TwiML using a template language or other utility, the Twilio node.js module provides a utility library which makes it very easy to create and output one of these documents. Lets create a simple application which responds to any HTTP request with a simple set of TwiML instructions. In the terminal, create a new file called inbound.js and paste in the following example code:</p>
           <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
           <div id="crayon-59a4303dba105881592380" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover expand" style=" margin-top: 12px; margin-bottom: 12px; font-size: 16px !important; line-height: 24px !important;"> 
            <div class="crayon-toolbar" data-settings=" show" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
             <span class="crayon-title"></span> 
             <div class="crayon-tools" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
              <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-expand-button" title="Expand Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-copy-button" title="Copy">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
               <div class="crayon-button-icon"></div>
              </div>
              <span class="crayon-language">JavaScript</span>
             </div>
            </div> 
            <div class="crayon-info" style="min-height: 22.4px !important; line-height: 22.4px !important;"></div> 
            <div class="crayon-plain-wrap">
             <textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2; font-size: 16px !important; line-height: 24px !important;">
// Require the twilio and HTTP modules
var twilio = require('twilio'),
    http = require('http');
 
// Create an HTTP server, listening on port 1337, that
// will respond with a TwiML XML document
http.createServer(function (req, res) {
    // Create a TwiML response
    var resp = new twilio.twiml.VoiceResponse();

    // The TwiML response object will have functions on it that correspond
    // to TwiML "verbs" and "nouns". This example uses the "Say" verb.
    // Passing in a string argument sets the content of the XML tag.
    // Passing in an object literal sets attributes on the XML tag.
    resp.say({voice:'woman'}, 'ahoy hoy! Testing Twilio and node.js');
 
    //Render the TwiML document using "toString"
    res.writeHead(200, {
        'Content-Type':'text/xml'
    });
    res.end(resp.toString());
 
}).listen(1337);
 
console.log('Visit http://localhost:1337/ in your browser to see your TwiML document!');</textarea>
            </div> 
            <div class="crayon-main" style=""> 
             <table class="crayon-table"> 
              <tbody>
               <tr class="crayon-row"> 
                <td class="crayon-nums " data-settings="show"> 
                 <div class="crayon-nums-content" style="font-size: 16px !important; line-height: 24px !important;">
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-1">
                   1
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-2">
                   2
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-3">
                   3
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-4">
                   4
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-5">
                   5
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-6">
                   6
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-7">
                   7
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-8">
                   8
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-9">
                   9
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-10">
                   10
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-11">
                   11
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-12">
                   12
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-13">
                   13
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-14">
                   14
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-15">
                   15
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-16">
                   16
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-17">
                   17
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-18">
                   18
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-19">
                   19
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-20">
                   20
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-21">
                   21
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-22">
                   22
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-23">
                   23
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba105881592380-24">
                   24
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba105881592380-25">
                   25
                  </div>
                 </div> </td> 
                <td class="crayon-code">
                 <div class="crayon-pre" style="font-size: 16px !important; line-height: 24px !important; -moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2;">
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-1">
                   <span class="crayon-c">// Require the twilio and HTTP modules</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-2">
                   <span class="crayon-t">var</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">twilio</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-e">require</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'twilio'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">,</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-3">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">http</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-e">require</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'http'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-4">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-5">
                   <span class="crayon-c">// Create an HTTP server, listening on port 1337, that</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-6">
                   <span class="crayon-c">// will respond with a TwiML XML document</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-7">
                   <span class="crayon-v">http</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">createServer</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-t">function</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">req</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">res</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-8">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// Create a TwiML response</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-9">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-t">var</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">resp</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-r">new</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">twilio</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-v">twiml</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">VoiceResponse</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-10">
                   &nbsp;
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-11">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// The TwiML response object will have functions on it that correspond</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-12">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// to TwiML "verbs" and "nouns". This example uses the "Say" verb.</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-13">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// Passing in a string argument sets the content of the XML tag.</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-14">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// Passing in an object literal sets attributes on the XML tag.</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-15">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">resp</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">say</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">{</span>
                   <span class="crayon-v">voice</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'woman'</span>
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-s">'ahoy hoy! Testing Twilio and node.js'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-16">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-17">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">//Render the TwiML document using "toString"</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-18">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">res</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">writeHead</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-cn">200</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-19">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-s">'Content-Type'</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'text/xml'</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-20">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-21">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">res</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-st">end</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">resp</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">toString</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-22">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-23">
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">listen</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-cn">1337</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba105881592380-24">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba105881592380-25">
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'Visit http://localhost:1337/ in your browser to see your TwiML document!'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                 </div></td> 
               </tr> 
              </tbody>
             </table> 
            </div> 
           </div> 
           <!-- [Format Time: 0.0032 seconds] --> 
           <p>Run this code in the terminal using the command node inbound.js  this will cause an HTTP server process to be created. After the server is started, visit <a href="http://localhost:1337/" onclick="__gaTracker('send', 'event', 'outbound-article', 'http://localhost:1337/', 'http://localhost:1337/');">http://localhost:1337/</a> in your browser and you should see an XML document that looks like this:</p>
           <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
           <div id="crayon-59a4303dba109165935818" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover expand" style=" margin-top: 12px; margin-bottom: 12px; font-size: 16px !important; line-height: 24px !important;"> 
            <div class="crayon-toolbar" data-settings=" show" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
             <span class="crayon-title"></span> 
             <div class="crayon-tools" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
              <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-expand-button" title="Expand Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-copy-button" title="Copy">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
               <div class="crayon-button-icon"></div>
              </div>
              <span class="crayon-language">XHTML</span>
             </div>
            </div> 
            <div class="crayon-info" style="min-height: 22.4px !important; line-height: 22.4px !important;"></div> 
            <div class="crayon-plain-wrap">
             <textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2; font-size: 16px !important; line-height: 24px !important;">
&lt;!--?xml version="1.0" encoding="UTF-8"?--&gt;

    ahoy hoy! Testing Twilio and node.js</textarea>
            </div> 
            <div class="crayon-main" style=""> 
             <table class="crayon-table"> 
              <tbody>
               <tr class="crayon-row"> 
                <td class="crayon-nums " data-settings="show"> 
                 <div class="crayon-nums-content" style="font-size: 16px !important; line-height: 24px !important;">
                  <div class="crayon-num" data-line="crayon-59a4303dba109165935818-1">
                   1
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba109165935818-2">
                   2
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba109165935818-3">
                   3
                  </div>
                 </div> </td> 
                <td class="crayon-code">
                 <div class="crayon-pre" style="font-size: 16px !important; line-height: 24px !important; -moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2;">
                  <div class="crayon-line" id="crayon-59a4303dba109165935818-1">
                   <span class="crayon-c">&lt;!--?xml version="1.0" encoding="UTF-8"?--&gt;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba109165935818-2">
                   &nbsp;
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba109165935818-3">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>ahoy
                   <span class="crayon-h"> </span>hoy
                   <span class="crayon-o">!</span>
                   <span class="crayon-h"> </span>Testing
                   <span class="crayon-h"> </span>Twilio
                   <span class="crayon-h"> </span>and
                   <span class="crayon-h"> </span>node
                   <span class="crayon-sy">.</span>js
                  </div>
                 </div></td> 
               </tr> 
              </tbody>
             </table> 
            </div> 
           </div> 
           <!-- [Format Time: 0.0005 seconds] --> 
           <p>When you are finished testing, kill the HTTP server process in the terminal by pressing Control-C.</p> 
           <h3>Nesting TwiML</h3> 
           <p>Several TwiML verbs allow for nested nouns and verbs. One example is <a href="https://www.twilio.com/docs/api/twiml/gather" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://www.twilio.com/docs/api/twiml/gather', 'the tag');">the tag</a>, which collects input from a voice user via <a href="http://en.wikipedia.org/wiki/Dual-tone_multi-frequency_signaling" onclick="__gaTracker('send', 'event', 'outbound-article', 'http://en.wikipedia.org/wiki/Dual-tone_multi-frequency_signaling', 'DTMF tones');">DTMF tones</a> (the numeric buttons on a standard phone, plus * and #). To create a nested TwiML document, you will pass a function as an argument to a parent tag, as in the following example. Replace the contents of twiml.js with the following code, which will prompt the user for input:</p>
           <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
           <div id="crayon-59a4303dba10c419662474" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover expand" style=" margin-top: 12px; margin-bottom: 12px; font-size: 16px !important; line-height: 24px !important;"> 
            <div class="crayon-toolbar" data-settings=" show" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
             <span class="crayon-title"></span> 
             <div class="crayon-tools" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
              <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-expand-button" title="Expand Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-copy-button" title="Copy">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
               <div class="crayon-button-icon"></div>
              </div>
              <span class="crayon-language">JavaScript</span>
             </div>
            </div> 
            <div class="crayon-info" style="min-height: 22.4px !important; line-height: 22.4px !important;"></div> 
            <div class="crayon-plain-wrap">
             <textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2; font-size: 16px !important; line-height: 24px !important;">
// Require the twilio and HTTP modules
var twilio = require('twilio'),
    http = require('http');
 
// Create an HTTP server, listening on port 1337
http.createServer(function (req, res) {
    // Create a TwiML response and a greeting
    var resp = new twilio.twiml.VoiceResponse();
    resp.say({voice:'woman'}, 'Welcome to Acme Corporation!');
 
    // The  verb requires nested TwiML, so we pass in a function
    // to generate the child nodes of the XML document
    resp.gather({ timeout:30 }, function() {
 
        // In the context of the callback, "this" refers to the parent TwiML
        // node. The parent node has functions on it for all allowed child
        // nodes. For , these are  and .
        this.say('For sales, press 1. For support, press 2.');
 
    });
 
    //Render the TwiML document using "toString"
    res.writeHead(200, {
        'Content-Type':'text/xml'
    });
    res.end(resp.toString());
 
}).listen(1337);
 
console.log('Visit http://localhost:1337/ in your browser to see your TwiML document!');</textarea>
            </div> 
            <div class="crayon-main" style=""> 
             <table class="crayon-table"> 
              <tbody>
               <tr class="crayon-row"> 
                <td class="crayon-nums " data-settings="show"> 
                 <div class="crayon-nums-content" style="font-size: 16px !important; line-height: 24px !important;">
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-1">
                   1
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-2">
                   2
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-3">
                   3
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-4">
                   4
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-5">
                   5
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-6">
                   6
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-7">
                   7
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-8">
                   8
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-9">
                   9
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-10">
                   10
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-11">
                   11
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-12">
                   12
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-13">
                   13
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-14">
                   14
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-15">
                   15
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-16">
                   16
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-17">
                   17
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-18">
                   18
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-19">
                   19
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-20">
                   20
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-21">
                   21
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-22">
                   22
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-23">
                   23
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-24">
                   24
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-25">
                   25
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-26">
                   26
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-27">
                   27
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-28">
                   28
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba10c419662474-29">
                   29
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba10c419662474-30">
                   30
                  </div>
                 </div> </td> 
                <td class="crayon-code">
                 <div class="crayon-pre" style="font-size: 16px !important; line-height: 24px !important; -moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2;">
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-1">
                   <span class="crayon-c">// Require the twilio and HTTP modules</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-2">
                   <span class="crayon-t">var</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">twilio</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-e">require</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'twilio'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">,</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-3">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">http</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-e">require</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'http'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-4">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-5">
                   <span class="crayon-c">// Create an HTTP server, listening on port 1337</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-6">
                   <span class="crayon-v">http</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">createServer</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-t">function</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">req</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">res</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-7">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// Create a TwiML response and a greeting</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-8">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-t">var</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">resp</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-o">=</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-r">new</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">twilio</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-v">twiml</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">VoiceResponse</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-9">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">resp</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">say</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">{</span>
                   <span class="crayon-v">voice</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'woman'</span>
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-s">'Welcome to Acme Corporation!'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-10">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-11">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// The&nbsp;&nbsp;verb requires nested TwiML, so we pass in a function</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-12">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// to generate the child nodes of the XML document</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-13">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">resp</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">gather</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">{</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-v">timeout</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-cn">30</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-t">function</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-14">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-15">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// In the context of the callback, "this" refers to the parent TwiML</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-16">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// node. The parent node has functions on it for all allowed child</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-17">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">// nodes. For , these are&nbsp;&nbsp;and .</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-18">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-r">this</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">say</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'For sales, press 1. For support, press 2.'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-19">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-20">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-21">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-22">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-c">//Render the TwiML document using "toString"</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-23">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">res</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">writeHead</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-cn">200</span>
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>
                   <span class="crayon-sy">{</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-24">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-s">'Content-Type'</span>
                   <span class="crayon-o">:</span>
                   <span class="crayon-s">'text/xml'</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-25">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-26">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   <span class="crayon-v">res</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-st">end</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-v">resp</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">toString</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-27">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-28">
                   <span class="crayon-sy">}</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">listen</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-cn">1337</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba10c419662474-29">
                   <span class="crayon-h"> </span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba10c419662474-30">
                   <span class="crayon-v">console</span>
                   <span class="crayon-sy">.</span>
                   <span class="crayon-e">log</span>
                   <span class="crayon-sy">(</span>
                   <span class="crayon-s">'Visit http://localhost:1337/ in your browser to see your TwiML document!'</span>
                   <span class="crayon-sy">)</span>
                   <span class="crayon-sy">;</span>
                  </div>
                 </div></td> 
               </tr> 
              </tbody>
             </table> 
            </div> 
           </div> 
           <!-- [Format Time: 0.0040 seconds] --> 
           <p>Restart the HTTP server by running node inbound.js. When you visit <a href="http://localhost:1337/" onclick="__gaTracker('send', 'event', 'outbound-article', 'http://localhost:1337/', 'http://localhost:1337/');">http://localhost:1337/</a> you should now see an XML document that looks like the following:</p>
           <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
           <div id="crayon-59a4303dba110877640815" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover expand" style=" margin-top: 12px; margin-bottom: 12px; font-size: 16px !important; line-height: 24px !important;"> 
            <div class="crayon-toolbar" data-settings=" show" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
             <span class="crayon-title"></span> 
             <div class="crayon-tools" style="font-size: 16px !important;height: 24px !important; line-height: 24px !important;">
              <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-expand-button" title="Expand Code">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-copy-button" title="Copy">
               <div class="crayon-button-icon"></div>
              </div>
              <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
               <div class="crayon-button-icon"></div>
              </div>
              <span class="crayon-language">XHTML</span>
             </div>
            </div> 
            <div class="crayon-info" style="min-height: 22.4px !important; line-height: 22.4px !important;"></div> 
            <div class="crayon-plain-wrap">
             <textarea wrap="soft" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2; font-size: 16px !important; line-height: 24px !important;">
&lt;!--?xml version="1.0" encoding="UTF-8"?--&gt;

    Welcome to Acme Corporation!
    
        For sales, press 1. For support, press 2.</textarea>
            </div> 
            <div class="crayon-main" style=""> 
             <table class="crayon-table"> 
              <tbody>
               <tr class="crayon-row"> 
                <td class="crayon-nums " data-settings="show"> 
                 <div class="crayon-nums-content" style="font-size: 16px !important; line-height: 24px !important;">
                  <div class="crayon-num" data-line="crayon-59a4303dba110877640815-1">
                   1
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba110877640815-2">
                   2
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba110877640815-3">
                   3
                  </div>
                  <div class="crayon-num crayon-striped-num" data-line="crayon-59a4303dba110877640815-4">
                   4
                  </div>
                  <div class="crayon-num" data-line="crayon-59a4303dba110877640815-5">
                   5
                  </div>
                 </div> </td> 
                <td class="crayon-code">
                 <div class="crayon-pre" style="font-size: 16px !important; line-height: 24px !important; -moz-tab-size:2; -o-tab-size:2; -webkit-tab-size:2; tab-size:2;">
                  <div class="crayon-line" id="crayon-59a4303dba110877640815-1">
                   <span class="crayon-c">&lt;!--?xml version="1.0" encoding="UTF-8"?--&gt;</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba110877640815-2">
                   &nbsp;
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba110877640815-3">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>Welcome
                   <span class="crayon-h"> </span>to
                   <span class="crayon-h"> </span>Acme
                   <span class="crayon-h"> </span>Corporation
                   <span class="crayon-o">!</span>
                  </div>
                  <div class="crayon-line crayon-striped-line" id="crayon-59a4303dba110877640815-4">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                  </div>
                  <div class="crayon-line" id="crayon-59a4303dba110877640815-5">
                   <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>For
                   <span class="crayon-h"> </span>sales
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>press
                   <span class="crayon-h"> </span>1
                   <span class="crayon-sy">.</span>
                   <span class="crayon-h"> </span>For
                   <span class="crayon-h"> </span>support
                   <span class="crayon-sy">,</span>
                   <span class="crayon-h"> </span>press
                   <span class="crayon-h"> </span>2
                   <span class="crayon-sy">.</span>
                  </div>
                 </div></td> 
               </tr> 
              </tbody>
             </table> 
            </div> 
           </div> 
           <!-- [Format Time: 0.0007 seconds] --> 
           <p></p> 
           <h3>Conclusion</h3> 
           <p>With the Twilio module for node.js, you can develop a wide range of communications applications using the top server-side JavaScript platform. Today, we covered how to set up the module, use the REST API, and generate TwiML. Next week, well explore VoIP in the browser with Twilio Client  be sure to stop back then!</p> 
           <p>If you have any questions or comments, please let us know (help at twilio.com). Or better still, <a href="https://github.com/twilio/twilio-node" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://github.com/twilio/twilio-node', 'fork the repo');">fork the repo</a> or <a href="https://github.com/twilio/twilio-node/issues" onclick="__gaTracker('send', 'event', 'outbound-article', 'https://github.com/twilio/twilio-node/issues', 'submit an issue');">submit an issue</a> to let us know how we can make the module even better.</p> 
          </div> 
         </div> 
        </div>
        <!-- .entry-content --> 
        <footer class="entry-footer col-md-12"> 
         <div class="entry-meta"> 
          <div class="social-buttons"> 
           <div class="fb-like" data-href="https://www.twilio.com/blog/2013/03/introducing-the-twilio-module-for-node-js.html" data-layout="button" data-action="like" data-show-faces="false" data-share="false"></div> 
           <a href="https://twitter.com/share" class="twitter-share-button" data-via="twilio" data-count="none" data-url="https://www.twilio.com/blog/2013/03/introducing-the-twilio-module-for-node-js.html" data-text="Introducing The Twilio Module For Node.js ">Tweet</a> 
           <a href="https://twitter.com/twilio" class="twitter-follow-button" data-show-count="false">Follow @twilio</a> 
          </div> 
          <span class="author-avatar"><img alt="" src="https://secure.gravatar.com/avatar/4786cf28e0f5886c4b006f7487333845?s=20&amp;d=mm&amp;r=g" srcset="https://secure.gravatar.com/avatar/4786cf28e0f5886c4b006f7487333845?s=40&amp;d=mm&amp;r=g 2x" class="avatar avatar-20 photo" height="20" width="20"></span>
          <span class="byline"> by <span class="author vcard"><a class="url fn n" href="https://www.twilio.com/blog/author/kevinwhinnery">Kevin Whinnery</a></span></span> 
          <span class="author-meta author-email"><a href="mailto:kwhinnery@twilio.com">kwhinnery@twilio.com</a></span>
          <span class="author-meta author-twitter"><a href="http://twitter.com/kevinwhinnery">@kevinwhinnery</a><a></a></span> 
         </div> 
        </footer>
        <!-- .entry-footer --> 
        <div class="build-more">
         <h3>Build More With JavaScript</h3> 
         <a href="https://www.twilio.com/docs/tutorials/walkthrough/server-notifications/node/express" onclick="__gaTracker('send', 'event', 'buildmore-widget', 'https://www.twilio.com/docs/tutorials/walkthrough/server-notifications/node/express', '');"> <h5>SMS and MMS Notifications with Node.js</h5> </a> 
         <a href="https://www.twilio.com/blog/2015/09/using-ember-data-with-firebase.html" rel="bookmark" title="Permanent Link to Using Ember Data With Firebase" onclick="__gaTracker('send', 'event', 'buildmore-widget', 'https://www.twilio.com/blog/2015/09/using-ember-data-with-firebase.html', '');"> <h5>Using Ember Data With Firebase</h5></a>
         <h4><a href="https://www.twilio.com/blog/2015/09/using-ember-data-with-firebase.html" rel="bookmark" title="Permanent Link to Using Ember Data With Firebase" onclick="__gaTracker('send', 'event', 'buildmore-widget', 'https://www.twilio.com/blog/2015/09/using-ember-data-with-firebase.html', '');"> </a> <a href="https://www.twilio.com/blog/2015/09/build-your-own-ivr-with-aws-lambda-amazon-api-gateway-and-twilio.html" rel="bookmark" title="Permanent Link to Build Your Own IVR with AWS Lambda, Amazon API Gateway and Twilio" onclick="__gaTracker('send', 'event', 'buildmore-widget', 'https://www.twilio.com/blog/2015/09/build-your-own-ivr-with-aws-lambda-amazon-api-gateway-and-twilio.html', '');"> <h5>Build Your Own IVR with AWS Lambda, Amazon API Gateway and Twilio</h5></a><h4><a href="https://www.twilio.com/blog/2015/09/build-your-own-ivr-with-aws-lambda-amazon-api-gateway-and-twilio.html" rel="bookmark" title="Permanent Link to Build Your Own IVR with AWS Lambda, Amazon API Gateway and Twilio" onclick="__gaTracker('send', 'event', 'buildmore-widget', 'https://www.twilio.com/blog/2015/09/build-your-own-ivr-with-aws-lambda-amazon-api-gateway-and-twilio.html', '');"> </a> <a href="https://www.twilio.com/blog/2015/09/monitoring-call-progress-events-with-node-js-and-express.html" rel="bookmark" title="Permanent Link to Call Monitoring with Node.js, Express and Twilio Call Progress Events" onclick="__gaTracker('send', 'event', 'buildmore-widget', 'https://www.twilio.com/blog/2015/09/monitoring-call-progress-events-with-node-js-and-express.html', '');"> <h5>Call Monitoring with Node.js, Express and Twilio Call Progress Events</h5></a><h4><a href="https://www.twilio.com/blog/2015/09/monitoring-call-progress-events-with-node-js-and-express.html" rel="bookmark" title="Permanent Link to Call Monitoring with Node.js, Express and Twilio Call Progress Events" onclick="__gaTracker('send', 'event', 'buildmore-widget', 'https://www.twilio.com/blog/2015/09/monitoring-call-progress-events-with-node-js-and-express.html', '');"> </a> </h4></h4></h4>
        </div> 
       </article>
       <!-- #post-## --> 
       <div id="disqus_thread"> 
        <div id="dsq-content"> 
         <ul id="dsq-comments"> 
          <li class="comment even thread-even depth-1" id="dsq-comment-1851"> 
           <div id="dsq-comment-header-1851" class="dsq-comment-header"> 
            <cite id="dsq-cite-1851"> <span id="dsq-author-user-1851">Lyle Pratt</span> </cite> 
           </div> 
           <div id="dsq-comment-body-1851" class="dsq-comment-body"> 
            <div id="dsq-comment-message-1851" class="dsq-comment-message">
             <p>Great work Kevin! Was also very nice to meet you at Javelina during SXSW.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
          <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-2133"> 
           <div id="dsq-comment-header-2133" class="dsq-comment-header"> 
            <cite id="dsq-cite-2133"> <span id="dsq-author-user-2133">Matt Harrison</span> </cite> 
           </div> 
           <div id="dsq-comment-body-2133" class="dsq-comment-body"> 
            <div id="dsq-comment-message-2133" class="dsq-comment-message">
             <p>How do I configure this to work with an http proxy?</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-2" id="dsq-comment-2152"> 
             <div id="dsq-comment-header-2152" class="dsq-comment-header"> 
              <cite id="dsq-cite-2152"> <span id="dsq-author-user-2152">kevinwhinnery</span> </cite> 
             </div> 
             <div id="dsq-comment-body-2152" class="dsq-comment-body"> 
              <div id="dsq-comment-message-2152" class="dsq-comment-message">
               <p>Hey Matt,</p> 
               <p>Sorry for the tardy reply here. Im using the request module under the covers, which should work transparently with HTTP proxies. If this is not the case for you, could you open an issue on the GitHub repository so we can explore further?</p> 
               <p><a href="https://github.com/twilio/twilio-node/issues" onclick="__gaTracker('send', 'event', 'outbound-comment', 'https://github.com/twilio/twilio-node/issues', 'https://github.com/twilio/twilio-node/issues');" rel="nofollow">https://github.com/twilio/twilio-node/issues</a></p> 
               <p>Thanks!</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment odd alt thread-even depth-1" id="dsq-comment-2517"> 
           <div id="dsq-comment-header-2517" class="dsq-comment-header"> 
            <cite id="dsq-cite-2517"> <span id="dsq-author-user-2517">c0nrad</span> </cite> 
           </div> 
           <div id="dsq-comment-body-2517" class="dsq-comment-body"> 
            <div id="dsq-comment-message-2517" class="dsq-comment-message">
             <p>Awesome tutorial, thanks!</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
          <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-2590"> 
           <div id="dsq-comment-header-2590" class="dsq-comment-header"> 
            <cite id="dsq-cite-2590"> <span id="dsq-author-user-2590">Charlotte Spencer</span> </cite> 
           </div> 
           <div id="dsq-comment-body-2590" class="dsq-comment-body"> 
            <div id="dsq-comment-message-2590" class="dsq-comment-message">
             <p>You say replace twiml.js when going on to talk about Nesting Twiml. Though we have not worked with that file. I assumed you meant inbound.js?</p> 
             <p>Anyway, great tutorial!</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-2" id="dsq-comment-2592"> 
             <div id="dsq-comment-header-2592" class="dsq-comment-header"> 
              <cite id="dsq-cite-2592"> <span id="dsq-author-user-2592">kevinwhinnery</span> </cite> 
             </div> 
             <div id="dsq-comment-body-2592" class="dsq-comment-body"> 
              <div id="dsq-comment-message-2592" class="dsq-comment-message">
               <p>Youre right :(  I will change it in the tutorial. Thanks!</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment even thread-even depth-1" id="dsq-comment-2741"> 
           <div id="dsq-comment-header-2741" class="dsq-comment-header"> 
            <cite id="dsq-cite-2741"> <span id="dsq-author-user-2741">Istvan Fenesi</span> </cite> 
           </div> 
           <div id="dsq-comment-body-2741" class="dsq-comment-body"> 
            <div id="dsq-comment-message-2741" class="dsq-comment-message">
             <p>Can calls be done from a regular SIP webphone, such as the mizu webphone, to/from Twilio?</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-2" id="dsq-comment-2742"> 
             <div id="dsq-comment-header-2742" class="dsq-comment-header"> 
              <cite id="dsq-cite-2742"> <span id="dsq-author-user-2742">kevinwhinnery</span> </cite> 
             </div> 
             <div id="dsq-comment-body-2742" class="dsq-comment-body"> 
              <div id="dsq-comment-message-2742" class="dsq-comment-message">
               <p>I think so, though wed need to know more about your specific use case. The relevant documentation for working with SIP is located here:</p> 
               <p><a href="https://www.twilio.com/docs/sip" onclick="__gaTracker('send', 'event', 'outbound-comment', 'https://www.twilio.com/docs/sip', 'https://www.twilio.com/docs/sip');" rel="nofollow">https://www.twilio.com/docs/sip</a></p> 
               <p>If you cant find what youre looking for in the SIP docs, please reach out to <a href="mailto:help@twilio.com">help@twilio.com</a> with more precise information on what youre looking to accomplish.</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment even depth-3" id="dsq-comment-2744"> 
               <div id="dsq-comment-header-2744" class="dsq-comment-header"> 
                <cite id="dsq-cite-2744"> <span id="dsq-author-user-2744">Istvan Fenesi</span> </cite> 
               </div> 
               <div id="dsq-comment-body-2744" class="dsq-comment-body"> 
                <div id="dsq-comment-message-2744" class="dsq-comment-message">
                 <p>Thank you, it looks doable. This is the sip client i am trying to use: <a href="http://www.mizu-voip.com/Software/WebPhone.aspx" onclick="__gaTracker('send', 'event', 'outbound-comment', 'http://www.mizu-voip.com/Software/WebPhone.aspx', 'http://www.mizu-voip.com/Software/WebPhone.aspx');" rel="nofollow">http://www.mizu-voip.com/Software/WebPhone.aspx</a>. The only drawback I see that i will not be able to use opus codec, which seems to have very good quality with this webphone.</p> 
                </div> 
               </div> 
               <ul class="children"> 
                <li class="comment odd alt depth-4" id="dsq-comment-2745"> 
                 <div id="dsq-comment-header-2745" class="dsq-comment-header"> 
                  <cite id="dsq-cite-2745"> <span id="dsq-author-user-2745">Istvan Fenesi</span> </cite> 
                 </div> 
                 <div id="dsq-comment-body-2745" class="dsq-comment-body"> 
                  <div id="dsq-comment-message-2745" class="dsq-comment-message">
                   <p>Actually it is not a big problem, since most of my calls have to go to pstn. So anyway it is converted to narrow-band.</p> 
                  </div> 
                 </div> </li>
                <!-- #comment-## --> 
               </ul>
               <!-- .children --> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-3192"> 
           <div id="dsq-comment-header-3192" class="dsq-comment-header"> 
            <cite id="dsq-cite-3192"> <a id="dsq-author-user-3192" href="http://isaiahjturner.com" target="_blank" rel="nofollow">Isaiah Turner</a> </cite> 
           </div> 
           <div id="dsq-comment-body-3192" class="dsq-comment-body"> 
            <div id="dsq-comment-message-3192" class="dsq-comment-message">
             <p>If the request was successful, this value will be falsy</p> 
             <p>umm who decided on falsy? False would make much more sense.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
          <li class="comment odd alt thread-even depth-1" id="dsq-comment-3324"> 
           <div id="dsq-comment-header-3324" class="dsq-comment-header"> 
            <cite id="dsq-cite-3324"> <span id="dsq-author-user-3324">Renz</span> </cite> 
           </div> 
           <div id="dsq-comment-body-3324" class="dsq-comment-body"> 
            <div id="dsq-comment-message-3324" class="dsq-comment-message">
             <p>Whenever I run node ahoy.js it always return Oops! There was an error. Do you know how I can fix this?</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-2" id="dsq-comment-3325"> 
             <div id="dsq-comment-header-3325" class="dsq-comment-header"> 
              <cite id="dsq-cite-3325"> <a id="dsq-author-user-3325" href="http://www.twilio.com" target="_blank" rel="nofollow">Twilio</a> </cite> 
             </div> 
             <div id="dsq-comment-body-3325" class="dsq-comment-body"> 
              <div id="dsq-comment-message-3325" class="dsq-comment-message">
               <p>Can we get evangelists@ added to this<br> Would help for the crew to get visibility on comments to their posts.</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
            <li class="comment odd alt depth-2" id="dsq-comment-3399"> 
             <div id="dsq-comment-header-3399" class="dsq-comment-header"> 
              <cite id="dsq-cite-3399"> <span id="dsq-author-user-3399">kevinwhinnery</span> </cite> 
             </div> 
             <div id="dsq-comment-body-3399" class="dsq-comment-body"> 
              <div id="dsq-comment-message-3399" class="dsq-comment-message">
               <p>Sorry for the late reply, but I would console.log the error object and see what your error says. For further (and quicker) support, send a note to <a href="mailto:help@twilio.com">help@twilio.com</a></p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-3397"> 
           <div id="dsq-comment-header-3397" class="dsq-comment-header"> 
            <cite id="dsq-cite-3397"> <span id="dsq-author-user-3397">ning</span> </cite> 
           </div> 
           <div id="dsq-comment-body-3397" class="dsq-comment-body"> 
            <div id="dsq-comment-message-3397" class="dsq-comment-message">
             <p>it is not possible for me to send sms to different numbers</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-2" id="dsq-comment-3398"> 
             <div id="dsq-comment-header-3398" class="dsq-comment-header"> 
              <cite id="dsq-cite-3398"> <span id="dsq-author-user-3398">kevinwhinnery</span> </cite> 
             </div> 
             <div id="dsq-comment-body-3398" class="dsq-comment-body"> 
              <div id="dsq-comment-message-3398" class="dsq-comment-message">
               <p>Hi there  the code for sending messages should be pretty much the same today, although sendMessage would be the preferred shortcut today. If youre still having problems, I would recommend sending as much information about the error as you can to <a href="mailto:help@twilio.com">help@twilio.com</a>  you might also check the international message permissions for your account  those can be at play when messages are not sent: <a href="https://www.twilio.com/user/account/settings/international/sms" onclick="__gaTracker('send', 'event', 'outbound-comment', 'https://www.twilio.com/user/account/settings/international/sms', 'https://www.twilio.com/user/account/settings/international/sms');" rel="nofollow">https://www.twilio.com/user/account/settings/international/sms</a></p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment even depth-3" id="dsq-comment-3816"> 
               <div id="dsq-comment-header-3816" class="dsq-comment-header"> 
                <cite id="dsq-cite-3816"> <span id="dsq-author-user-3816">atish</span> </cite> 
               </div> 
               <div id="dsq-comment-body-3816" class="dsq-comment-body"> 
                <div id="dsq-comment-message-3816" class="dsq-comment-message">
                 <p>hey kevinwhinnery, am node js developer uses twilio , i have problem on vedio call supported by twilio .can u help me out of this . my id <a href="mailto:atishmahalle9@gmail.com">atishmahalle9@gmail.com</a><br> and thanks for u nr valuable contributions..</p> 
                </div> 
               </div> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment odd alt thread-even depth-1" id="dsq-comment-4242"> 
           <div id="dsq-comment-header-4242" class="dsq-comment-header"> 
            <cite id="dsq-cite-4242"> <span id="dsq-author-user-4242">usman</span> </cite> 
           </div> 
           <div id="dsq-comment-body-4242" class="dsq-comment-body"> 
            <div id="dsq-comment-message-4242" class="dsq-comment-message">
             <p>is browser to browser call is possible using same account with out using two numbers.?</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-2" id="dsq-comment-4244"> 
             <div id="dsq-comment-header-4244" class="dsq-comment-header"> 
              <cite id="dsq-cite-4244"> <a id="dsq-author-user-4244" href="http://twitter.com/philnash" target="_blank" rel="nofollow">philnash</a> </cite> 
             </div> 
             <div id="dsq-comment-body-4244" class="dsq-comment-body"> 
              <div id="dsq-comment-message-4244" class="dsq-comment-message">
               <p>Hey Usman, when making calls from browser to browser, you dont need a caller ID at all, you can just provide the client name. So you can make browser to browser calls without using any Twilio numbers. Check out the documentation on making calls and the parameters you need: <a href="https://www.twilio.com/docs/api/rest/making-calls#post-parameters-required" onclick="__gaTracker('send', 'event', 'outbound-comment', 'https://www.twilio.com/docs/api/rest/making-calls#post-parameters-required', 'https://www.twilio.com/docs/api/rest/making-calls#post-parameters-required');" rel="nofollow">https://www.twilio.com/docs/api/rest/making-calls#post-parameters-required</a></p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-5035"> 
           <div id="dsq-comment-header-5035" class="dsq-comment-header"> 
            <cite id="dsq-cite-5035"> <span id="dsq-author-user-5035">Sean Letendre</span> </cite> 
           </div> 
           <div id="dsq-comment-body-5035" class="dsq-comment-body"> 
            <div id="dsq-comment-message-5035" class="dsq-comment-message">
             <p>it says: TypeError: twilio.RestClient is not a constructor</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-2" id="dsq-comment-5037"> 
             <div id="dsq-comment-header-5037" class="dsq-comment-header"> 
              <cite id="dsq-cite-5037"> <a id="dsq-author-user-5037" href="http://twitter.com/philnash" target="_blank" rel="nofollow">philnash</a> </cite> 
             </div> 
             <div id="dsq-comment-body-5037" class="dsq-comment-body"> 
              <div id="dsq-comment-message-5037" class="dsq-comment-message">
               <p>Hey Sean,</p> 
               <p>This blog post actually refers to version 2 of the Twilio Node library. We have recently released version 3 which included some breaking changes. You can read the upgrade notes here: <a href="https://www.twilio.com/docs/libraries/node/migration-guide" onclick="__gaTracker('send', 'event', 'outbound-comment', 'https://www.twilio.com/docs/libraries/node/migration-guide', 'https://www.twilio.com/docs/libraries/node/migration-guide');" rel="nofollow">https://www.twilio.com/docs/libraries/node/migration-guide</a>.</p> 
               <p>For your particular issue, you no longer need to create a <code>twilio.RestClient</code>, you just instantiate a single client, like this:</p> 
               <p>const twilio = require(twilio);<br> const client = new twilio(ACCOUNT_SID, AUTH_TOKEN)</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul> 
        </div> 
       </div> 
       <script type="text/javascript">
var disqus_url = 'https://www.twilio.com/blog/2013/03/introducing-the-twilio-module-for-node-js.html';
var disqus_identifier = '11864 http://www.twilioblog.com/?p=11864';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'twilioblog';
var disqus_title = "Introducing The Twilio Module For Node.js";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=11864';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script> 
      </main>
      <!-- #main --> 
     </div>
     <!-- #primary --> 
     <div id="secondary" class="widget-area col-md-3 hide-xs" role="complementary"> 
      <aside id="search-2" class="widget widget_search">
       <form role="search" method="get" class="search-form" action="https://www.twilio.com/blog/"> 
        <label> <span class="screen-reader-text">Search for:</span> <input type="search" class="search-field" placeholder="Search " value="" name="s"> </label> 
        <input type="submit" class="search-submit" value="Search"> 
       </form>
      </aside>
      <aside id="text-2" class="widget widget_text"> 
       <div class="textwidget">
        <p>Power modern communications. Build the next generation of voice and SMS applications.</p> 
        <a href="http://twilio.com/try-twilio" onclick="__gaTracker('send', 'event', 'outbound-widget', 'http://twilio.com/try-twilio', 'Start Building For Free');" class="btn">Start Building For Free</a>
       </div> 
      </aside>
      <style scoped type="text/css">.utcw-8ngloje {word-wrap:break-word}.utcw-8ngloje span,.utcw-8ngloje a{border-style:solid;border-width:1px}.utcw-8ngloje span:hover,.utcw-8ngloje a:hover{border-style:solid;border-width:1px}</style>
      <aside id="utcw-2" class="widget widget_utcw widget_tag_cloud">
       <h1 class="widget-title">Posts By Stack</h1>
       <div class="utcw-8ngloje tagcloud">
        <a class="tag-link-22 utcw-tag utcw-tag-net" href="https://www.twilio.com/blog/tag/net" style="font-size:16px" title="44 topics">.NET</a> 
        <a class="tag-link-98 utcw-tag utcw-tag-arduino" href="https://www.twilio.com/blog/tag/arduino" style="font-size:16px" title="22 topics">Arduino</a> 
        <a class="tag-link-598 utcw-tag utcw-tag-java" href="https://www.twilio.com/blog/tag/java" style="font-size:16px" title="17 topics">Java</a> 
        <a class="tag-link-600 utcw-tag utcw-tag-javascript" href="https://www.twilio.com/blog/tag/javascript" style="font-size:16px" title="109 topics">JavaScript</a> 
        <a class="tag-link-847 utcw-tag utcw-tag-php" href="https://www.twilio.com/blog/tag/php" style="font-size:16px" title="62 topics">PHP</a> 
        <a class="tag-link-891 utcw-tag utcw-tag-python" href="https://www.twilio.com/blog/tag/python" style="font-size:16px" title="88 topics">Python</a> 
        <a class="tag-link-969 utcw-tag utcw-tag-ruby" href="https://www.twilio.com/blog/tag/ruby" style="font-size:16px" title="78 topics">Ruby</a> 
        <a class="tag-link-2856 utcw-tag utcw-tag-swift" href="https://www.twilio.com/blog/tag/swift" style="font-size:16px" title="26 topics">Swift</a>
       </div>
      </aside>
      <style scoped type="text/css">.utcw-5dkhj5o {word-wrap:break-word}.utcw-5dkhj5o span,.utcw-5dkhj5o a{border-style:solid;border-width:1px}.utcw-5dkhj5o span:hover,.utcw-5dkhj5o a:hover{border-style:solid;border-width:1px}</style>
      <aside id="utcw-3" class="widget widget_utcw widget_tag_cloud">
       <h1 class="widget-title">Posts By Product</h1>
       <div class="utcw-5dkhj5o tagcloud">
        <a class="tag-link-2043 utcw-tag utcw-tag-mms" href="https://www.twilio.com/blog/tag/mms" style="font-size:16px" title="53 topics">MMS</a> 
        <a class="tag-link-3513 utcw-tag utcw-tag-programmable-chat" href="https://www.twilio.com/blog/tag/programmable-chat" style="font-size:16px" title="12 topics">Programmable Chat</a> 
        <a class="tag-link-1537 utcw-tag utcw-tag-sip" href="https://www.twilio.com/blog/tag/sip" style="font-size:16px" title="16 topics">SIP</a> 
        <a class="tag-link-1031 utcw-tag utcw-tag-sms" href="https://www.twilio.com/blog/tag/sms" style="font-size:16px" title="403 topics">SMS</a> 
        <a class="tag-link-2871 utcw-tag utcw-tag-taskrouter" href="https://www.twilio.com/blog/tag/taskrouter" style="font-size:16px" title="8 topics">Task Router</a> 
        <a class="tag-link-1199 utcw-tag utcw-tag-twilio-client" href="https://www.twilio.com/blog/tag/twilio-client" style="font-size:16px" title="32 topics">Twilio Client</a> 
        <a class="tag-link-3032 utcw-tag utcw-tag-twilio-video" href="https://www.twilio.com/blog/tag/twilio-video" style="font-size:16px" title="9 topics">Twilio Video</a> 
        <a class="tag-link-1277 utcw-tag utcw-tag-voice" href="https://www.twilio.com/blog/tag/voice" style="font-size:16px" title="186 topics">Voice</a>
       </div>
      </aside>
      <aside id="text-5" class="widget widget_text"> 
       <div class="textwidget">
        <a href="http://www.twilio.com/docs/tutorials" onclick="__gaTracker('send', 'event', 'outbound-widget', 'http://www.twilio.com/docs/tutorials', '');"><img src="https://www.twilio.com/blog/wp-content/uploads/2016/07/tutorials.png" style="width: 255px"></a>
       </div> 
      </aside>
      <aside id="categories-3" class="widget widget_categories">
       <h1 class="widget-title">Categories</h1> 
       <ul> 
        <li class="cat-item cat-item-13"><a href="https://www.twilio.com/blog/all-things-code">Code, Tutorials and Hacks</a> </li> 
        <li class="cat-item cat-item-5"><a href="https://www.twilio.com/blog/customer-highlights">Customer Highlights</a> </li> 
        <li class="cat-item cat-item-7"><a href="https://www.twilio.com/blog/developers-drawing-the-owl">Developers Drawing The Owl</a> </li> 
        <li class="cat-item cat-item-3"><a href="https://www.twilio.com/blog/news">News</a> </li> 
        <li class="cat-item cat-item-4"><a href="https://www.twilio.com/blog/stories-from-the-road">Stories From The Road</a> </li> 
        <li class="cat-item cat-item-8"><a href="https://www.twilio.com/blog/inside-twilio">The Owls Nest: Inside Twilio</a> </li> 
       </ul> 
      </aside>
      <aside id="text-4" class="widget widget_text"> 
       <div class="textwidget">
        <div class="tagcloud ">
         <a href="http://www.twilio.com/blog/feed" onclick="__gaTracker('send', 'event', 'outbound-widget', 'http://www.twilio.com/blog/feed', 'RSS Feed');">RSS Feed</a>
        </div>
       </div> 
      </aside>
     </div>
     <!-- #secondary --> 
    </div>
    <!-- .row --> 
   </div>
   <!-- #content.container --> 
   <div class="" id="footer"> 
    <div class="container"> 
     <header> 
      <div class="banner"></div> 
      <div class="border"></div> 
      <div class="stitching"></div> 
     </header> 
     <div class="row sitemap"> 
      <div class="row"> 
       <div class="col-md-2 col-md-offset-1"> 
        <h4><a href="http://www.twilio.com/company">Company</a></h4> 
        <ul> 
         <li><a href="http://www.twilio.com/company">About Twilio</a></li> 
         <li><a href="http://www.twilio.com/company/nine-values">Our Nine Values</a></li> 
         <li><a href="http://www.twilio.com/company/leadership-principles">Our Leadership Principles</a></li> 
         <li><a href="http://www.twilio.com/company/management">The Team</a></li> 
         <li><a href="http://www.twilio.com/press">Press &amp; Media</a></li> 
         <li><a href="http://www.twilio.org/">Twilio.org</a></li> 
         <li><a href="http://www.twilio.com/company/jobs">Careers</a></li> 
        </ul> 
       </div> 
       <div class="col-md-2"> 
        <h4><a href="http://www.twilio.com/products">Products</a></h4> 
        <ul> 
         <li><a href="http://www.twilio.com/voice">Voice</a></li> 
         <li><a href="http://www.twilio.com/video">Video</a></li> 
         <li><a href="http://www.twilio.com/sms">SMS (Text Messaging)</a></li> 
         <li><a href="http://www.twilio.com/mms">MMS (Picture Messaging)</a></li> 
         <li><a href="http://www.twilio.com/sms/toll-free">Toll-Free SMS</a></li> 
         <li><a href="http://www.twilio.com/sip-trunking">SIP Trunking</a></li> 
         <li><a href="http://www.twilio.com/client/mobile">Client Mobile</a></li> 
         <li><a href="http://www.twilio.com/webrtc">Client WebRTC</a></li> 
         <li><a href="http://www.twilio.com/stun-turn">Network Traversal Service</a></li> 
         <li><a href="http://www.twilio.com/taskrouter">TaskRouter</a></li> 
         <li><a href="http://www.twilio.com/sms/phone-numbers">Phone Numbers</a></li> 
         <li><a href="http://www.twilio.com/sms/shortcodes">Short Codes</a></li> 
         <li><a href="http://www.twilio.com/support-plans">Support Plans</a></li> 
         <li><a href="http://www.twilio.com/platform">Platform</a></li> 
         <li><a href="http://www.twilio.com/lookup">Lookup</a></li> 
         <li><a href="http://www.twilio.com/monitor">Monitor</a></li> 
         <li><a href="http://www.twilio.com/copilot">Messaging Copilot</a></li> 
         <li><a href="http://www.twilio.com/voice/conference">Global Conference</a></li> 
         <li><a href="http://www.twilio.com/authy">Authy</a></li> 
        </ul> 
       </div> 
       <div class="col-md-2"> 
        <h4><a href="http://www.twilio.com/pricing">Pricing</a></h4> 
        <ul> 
         <li><a href="http://www.twilio.com/voice/pricing">Voice Pricing</a></li> 
         <li><a href="http://www.twilio.com/sms/pricing">Messaging Pricing</a></li> 
         <li><a href="http://www.twilio.com/sip-trunking/pricing">SIP Trunking Pricing</a></li> 
         <li><a href="http://www.twilio.com/client/pricing">Client Pricing</a></li> 
         <li><a href="http://www.twilio.com/stun-turn/pricing">Network Traversal Pricing</a></li> 
         <li><a href="http://www.twilio.com/taskrouter/pricing">TaskRouter</a></li> 
         <li><a href="http://www.twilio.com/lookup#pricing">Lookup</a></li> 
         <li><a href="http://www.twilio.com/international">International Coverage</a></li> 
        </ul> 
       </div> 
       <div class="col-md-2"> 
        <h4><a href="http://www.twilio.com/use-cases">Use Cases</a></h4> 
        <ul> 
         <li><a href="http://www.twilio.com/customers">Customer Stories</a></li> 
         <li><a href="http://www.twilio.com/showcase">Showcase</a></li> 
         <li><a href="http://www.twilio.com/use-cases/two-factor-authentication">Two-Factor Authentication</a></li> 
         <li><a href="http://www.twilio.com/use-cases/appointment-reminders">Appointment Reminders</a></li> 
         <li><a href="http://www.twilio.com/use-cases/dispatch-notifications">Dispatch Notifications</a></li> 
         <li><a href="http://www.twilio.com/use-cases/eta-alerts">ETA Alerts</a></li> 
         <li><a href="http://www.twilio.com/use-cases/automated-surveys">Automated Surveys</a></li> 
         <li><a href="http://www.twilio.com/use-cases/masked-phone-numbers">Masked Phone Numbers</a></li> 
         <li><a href="http://www.twilio.com/use-cases/visual-estimates">Visual Estimates</a></li> 
         <li><a href="http://www.twilio.com/doers">Developer Network</a></li> 
         <li><a href="http://www.twilio.com/webinars">Webinars</a></li> 
         <li><a href="http://www.twilio.com/white-papers">White Papers</a></li> 
        </ul> 
       </div> 
       <div class="col-md-2"> 
        <h4><a href="http://www.twilio.com/api">Api &amp; Docs</a></h4> 
        <ul> 
         <li><a href="http://www.twilio.com/docs/api">API Documentation</a></li> 
         <li><a href="http://www.twilio.com/docs/quickstart">Quickstarts</a></li> 
         <li><a href="http://www.twilio.com/docs/howto">How Tos</a></li> 
         <li><a href="http://www.twilio.com/docs/libraries">Helper Libraries</a></li> 
         <li><a href="http://www.twilio.com/docs/security">Security</a></li> 
        </ul> 
       </div> 
      </div> 
      <div class="row clear"> 
       <footer>
        <span>© 2017 Twilio. All rights reserved. 
         <aside>
          |
         </aside><a href="http://www.twilio.com/legal/tos">Terms of Service</a>
         <aside>
          |
         </aside><a href="http://www.twilio.com/legal/privacy">Privacy Policy</a></span> 
       </footer> 
      </div> 
     </div> 
    </div> 
   </div>
   <!-- #page --> 
   <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'twilioblog';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1 && nodes[i].parentNode.tagName == 'A') {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script');
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script> 
   <script type="text/javascript" src="https://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201735"></script> 
   <script type="text/javascript" defer src="https://www.twilio.com/blog/wp-content/cache/autoptimize/js/autoptimize_8ac27744dd6a2b43231a1d3e936aa462.js"></script>  
  </div>
 </body>
</html>