<!doctype html>
<!--[if IE 9]>
<html class="no-js lt-ie10" lang="en-US" prefix="og: http://ogp.me/ns#">
<![endif]-->
<!-- If user is on IE8 or older, redirect to this url -->
<!--[if lte IE 8]> 
<meta http-equiv="refresh" content="1;url=/does-not-support-your-browser/">
<![endif]-->
<html itemscope itemtype="http://schema.org/Organization">
 <head> 
  <meta charset="UTF-8">
  <script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var o=n[t]={exports:{}};e[t][0].call(o.exports,function(n){var o=e[t][1][n];return r(o||n)},o,o.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<t.length;o++)r(t[o]);return r}({1:[function(e,n,t){function r(){}function o(e,n,t){return function(){return i(e,[c.now()].concat(u(arguments)),n?null:this,t),n?void 0:this}}var i=e("handle"),a=e(2),u=e(3),f=e("ee").get("tracer"),c=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],d="api-",l=d+"ixn-";a(p,function(e,n){s[n]=o(d+n,!0,"api")}),s.addPageAction=o(d+"addPageAction",!0),s.setCurrentRouteName=o(d+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,o="function"==typeof n;return i(l+"tracer",[c.now(),e,t],r),function(){if(f.emit((o?"":"no-")+"fn-start",[c.now(),r,o],t),o)try{return n.apply(this,arguments)}finally{f.emit("fn-end",[c.now()],t)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=o(l+n)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,c.now()])}},{}],2:[function(e,n,t){function r(e,n){var t=[],r="",i=0;for(r in e)o.call(e,r)&&(t[i]=n(r,e[r]),i+=1);return t}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],3:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,o=t-n||0,i=Array(o<0?0:o);++r<o;)i[r]=e[n+r];return i}n.exports=r},{}],4:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function o(e){function n(e){return e&&e instanceof r?e:e?f(e,u,i):i()}function t(t,r,o,i){if(!d.aborted||i){e&&e(t,r,o);for(var a=n(o),u=m(t),f=u.length,c=0;c<f;c++)u[c].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function l(e,n){v[e]=m(e).concat(n)}function m(e){return v[e]||[]}function w(e){return p[e]=p[e]||o(t)}function g(e,n){c(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var v={},y={},b={on:l,emit:t,get:w,listeners:m,context:n,buffer:g,abort:a,aborted:!1};return b}function i(){return new r}function a(){(s.api||s.feature)&&(d.aborted=!0,s=d.backlog={})}var u="nr@context",f=e("gos"),c=e(2),s={},p={},d=n.exports=o();d.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(o.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){o.buffer([e],r),o.emit(e,n,t)}var o=e("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!x++){var e=h.info=NREUM.info,n=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();c(y,function(n,t){e[n]||(e[n]=t)}),f("mark",["onload",a()+h.offset],null,"api");var t=d.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function o(){"complete"===d.readyState&&i()}function i(){f("mark",["domContent",a()+h.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(u=Math.max((new Date).getTime(),u))-h.offset}var u=(new Date).getTime(),f=e("handle"),c=e(2),s=e("ee"),p=window,d=p.document,l="addEventListener",m="attachEvent",w=p.XMLHttpRequest,g=w&&w.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:w,REQ:p.Request,EV:p.Event,PR:p.Promise,MO:p.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1026.min.js"},b=w&&g&&g[l]&&!/CriOS/.test(navigator.userAgent),h=n.exports={offset:u,now:a,origin:v,features:{},xhrWrappable:b};e(1),d[l]?(d[l]("DOMContentLoaded",i,!1),p[l]("load",r,!1)):(d[m]("onreadystatechange",o),p[m]("onload",r)),f("mark",["firstbyte",u],null,"api");var x=0,E=e(4)},{}]},{},["loader"]);</script> 
  <title>ReactJS Form Validation Approaches - Modus Create</title> 
  <!-- This site is optimized with the Yoast SEO plugin v3.0.6 - https://yoast.com/wordpress/plugins/seo/ --> 
  <link rel="canonical" href="https://moduscreate.com/reactjs-form-validation-approaches/"> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="ReactJS Form Validation Approaches - Modus Create"> 
  <meta property="og:description" content="As a web developer who is relatively new to ReactJS, I take for granted the built-in support for form validation that I’ve enjoyed in other JavaScript frameworks, like Angular and..."> 
  <meta property="og:url" content="https://moduscreate.com/reactjs-form-validation-approaches/"> 
  <meta property="og:site_name" content="Modus Create"> 
  <meta property="article:tag" content="JavaScript"> 
  <meta property="article:tag" content="react"> 
  <meta property="article:tag" content="reactjs"> 
  <meta property="article:section" content="Front End Development"> 
  <meta property="article:published_time" content="2017-01-19T13:55:09+00:00"> 
  <meta property="article:modified_time" content="2017-01-20T16:55:45+00:00"> 
  <meta property="og:updated_time" content="2017-01-20T16:55:45+00:00"> 
  <meta property="og:image" content="https://moduscreate.com/wp-content/uploads/2017/01/reactjs_form_validation_featured.jpg"> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:description" content="As a web developer who is relatively new to ReactJS, I take for granted the built-in support for form validation that I’ve enjoyed in other JavaScript frameworks, like Angular and..."> 
  <meta name="twitter:title" content="ReactJS Form Validation Approaches - Modus Create"> 
  <meta name="twitter:image" content="https://moduscreate.com/wp-content/uploads/2017/01/reactjs_form_validation_featured.jpg"> 
  <!-- / Yoast SEO plugin. --> 
  <link rel="alternate" type="application/rss+xml" title="Modus Create » ReactJS Form Validation Approaches Comments Feed" href="https://moduscreate.com/reactjs-form-validation-approaches/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"https:\/\/moduscreate.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.3.1"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <script type="text/javascript" src="https://moduscreate.com/wp-includes/js/jquery/jquery.js?ver=1.11.3"></script> 
  <script type="text/javascript" src="https://moduscreate.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1"></script> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://moduscreate.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://moduscreate.com/wp-includes/wlwmanifest.xml"> 
  <meta name="generator" content="WordPress 4.3.1"> 
  <link rel="shortlink" href="https://moduscreate.com/?p=10817"> 
  <!-- Schema.org markup for Google+ --> 
  <meta itemprop="name" content="ReactJS Form Validation Approaches - Modus Create"> 
  <meta itemprop="description" content="As a web developer who is relatively new to ReactJS, I take for granted the built-in support for form validation that I’ve enjoyed in other JavaScript frameworks, like Angular and..."> 
  <!-- Twitter Card data --> 
  <meta name="twitter:card" content="summary_large_image"> 
  <meta name="twitter:site" content="@moduscreate"> 
  <meta name="twitter:title" content="ReactJS Form Validation Approaches - Modus Create"> 
  <meta name="twitter:description" content="As a web developer who is relatively new to ReactJS, I take for granted the built-in support for form validation that I’ve enjoyed in other JavaScript frameworks, like Angular and..."> 
  <!-- Other meta data --> 
  <meta name="keywords" content="JavaScript, react, reactjs"> 
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"> 
  <meta name="apple-mobile-web-app-capable" content="yes"> 
  <!-- <meta name="google-site-verification" content="502a3wJ6IXn1tzDg8HNdfFFBUs5_zrX4uVByO4QxuDE" /> --> 
  <meta name="google-site-verification" content="S1W6v58E7e-M8fh2s6PdjHL1sv83k5Q7tw88tCIYbJ4"> 
  <!-- FAVICON OVERLOAD --> 
  <link rel="apple-touch-icon-precomposed" sizes="57x57" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/apple-touch-icon-57x57.png"> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/apple-touch-icon-114x114.png"> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/apple-touch-icon-72x72.png"> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/apple-touch-icon-144x144.png"> 
  <link rel="apple-touch-icon-precomposed" sizes="60x60" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/apple-touch-icon-60x60.png"> 
  <link rel="apple-touch-icon-precomposed" sizes="120x120" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/apple-touch-icon-120x120.png"> 
  <link rel="apple-touch-icon-precomposed" sizes="76x76" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/apple-touch-icon-76x76.png"> 
  <link rel="apple-touch-icon-precomposed" sizes="152x152" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/apple-touch-icon-152x152.png"> 
  <link rel="icon" type="image/png" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/favicon-196x196.png" sizes="196x196"> 
  <link rel="icon" type="image/png" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/favicon-96x96.png" sizes="96x96"> 
  <link rel="icon" type="image/png" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/favicon-32x32.png" sizes="32x32"> 
  <link rel="icon" type="image/png" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/favicon-16x16.png" sizes="16x16"> 
  <link rel="icon" type="image/png" href="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/favicon-128.png" sizes="128x128"> 
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css"> 
  <meta name="application-name" content="We help large organizations bring innovative products to market. Specializing in Sencha frameworks, we offer training and consulting services to help your organization succeed with HTML5."> 
  <meta name="msapplication-TileColor" content="#363734"> 
  <meta name="msapplication-TileImage" content="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/mstile-144x144.png"> 
  <meta name="msapplication-square70x70logo" content="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/mstile-70x70.png"> 
  <meta name="msapplication-square150x150logo" content="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/mstile-150x150.png"> 
  <meta name="msapplication-wide310x150logo" content="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/mstile-310x150.png"> 
  <meta name="msapplication-square310x310logo" content="https://moduscreate.com/wp-content/themes/moduscreate-web/images/favicon/mstile-310x310.png"> 
  <link rel="stylesheet" href="https://moduscreate.com/wp-content/themes/moduscreate-web/css/style.min.css"> 
  <!--[if IE 8]>
    <script src="https://moduscreate.com/wp-content/themes/moduscreate-web/bower_components/modernizr/modernizr.js"></script>
    <![endif]--> 
  <!--[if lt IE 9]>
    <link rel="stylesheet" href="https://moduscreate.com/wp-content/themes/moduscreate-web/css/ie8.css">
    <![endif]--> 
 </head> 
 <body> 
  <div class="off-canvas-wrap"> 
   <aside class="right-off-canvas-menu mobile-menu-hide"> 
    <ul class="off-canvas-list"> 
     <li><a class="main" href="/services">Services</a></li> 
     <li><a class="main" href="/about">About</a></li> 
     <li><a class="main" href="/community">Community</a></li> 
     <li><a class="main" href="/worldcue">Case Studies</a></li> 
     <li><a class="main" href="/blog">Blog</a></li> 
     <li><a class="main" href="/contact">Contact</a></li> 
     <li><a class="main" href="/careers">Careers</a></li> 
     <!-- <li><a href="http://labs.moduscreate.com" class="thin">Labs</a></li> --> 
    </ul> 
   </aside> 
   <div class="inner-wrap"> 
    <header> 
     <div class="contain-to-grid"> 
      <nav class="top-bar" data-topbar> 
       <ul class="title-area"> 
        <li class="name"> <a href="/"> 
          <!-- svg logo --> 
          <div class="modus-logo-spin" style="transition : all .2s ease;"> 
           <svg version="1.1" id="logo" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="105px" height="75px" viewbox="0 -45 575 475" xml:space="preserve"> 
            <g> 
             <defs> 
              <path id="SVGID_1_" d="M332.7,193.3c23.3-71.3,83-83.2,99.9-85.8c0,0,1.7-25.8-9.5-48.8c0,0-53.7,5.2-93.1,53.6
        c0,0-34.3,34.8-34.3,99.5c0,32.3,10.6,58.7,28.7,85.7c17.9,26.7,62.9,63.1,118.9,63.1c0.7,0,1.4,0,2,0v-26.3
        c0,0-54.4-8.4-81.3-32.2C325.5,268.1,328.8,205.1,332.7,193.3z" /> 
             </defs> 
             <clippath clip-rule="evenodd" id="SVGID_2_"> 
              <use xlink:href="#SVGID_1_" overflow="visible" /> 
             </clippath> 
             <path clip-path="url(#SVGID_2_)" fill="#FFFFFF" id="rightfill" d="M-34-190v644h644v-644H-34z M440.7,116.3c-0.3,18.3-3.8,36.1-10.3,52.9
      c-5.6,14.5-13.6,28.4-23.6,41.1c-15.8,20-36.9,37.1-56.7,45.9c-24.1,10.7-48.2,16.1-71.8,16.1c-22.6,0-44.6-5-65.4-14.7
      c-19.7-9.3-34.2-21.1-42.8-29.2c-27.8-26.4-40.9-63.2-41.7-65.3c-10.1-28.3-9.3-55.8-6.7-73.9c2.7-19.6,7.9-32.5,8.1-33.1l2.4-6.1
      l6.4,1c27,3.9,45.3,13.9,46.1,14.4l6.4,3.5l-2.7,6.8c-14.5,36.9-8.4,88.2,38.2,119.4c4,2.7,25.5,16.1,54.5,16.1
      c14.6,0,28.9-3.4,42.6-10.2c19.6-9.7,34.5-24,44.4-42.6c7.5-14,9.1-25.4,9.1-25.5l0.4-3.5l2.9-2.1c0.9-0.6,22.1-15.8,50.8-19.3
      l9.4-1.1L440.7,116.3z" /> 
            </g> 
            <g> 
             <defs> 
              <path id="SVGID_3_" d="M327.5,208.2c-16.4,8.1-32.2,11-46.3,11c-29.6,0-52.1-12.8-59.1-17.5c-47.7-32-58.1-86.7-41.2-129.4
        c0,0-17.4-9.6-43.3-13.4c0,0-19.8,49.4-1.2,101.2c0,0,12.7,36.6,39.6,62.1c19.3,18.4,54.9,41.7,102.5,41.7
        c20.7,0,43.6-4.4,68.5-15.4c29.7-13.2,84.4-58.5,85.6-132.4c-26.9,3.3-47,17.9-47,17.9S379.1,182.7,327.5,208.2z" /> 
             </defs> 
             <clippath id="SVGID_4_"> 
              <use xlink:href="#SVGID_3_" overflow="visible" /> 
             </clippath> 
             <path clip-path="url(#SVGID_4_)" fill="#FFFFFF" id="topfill" d="M-34-190v644h644v-644H-34z M274.7,212.2c-1.9,40.5-12.5,63.7-30.1,90
      c-10.8,16.1-28.3,32.2-47.8,44c-24.6,14.9-51.5,22.8-78.1,22.8c-0.8,0-1.5,0-2.2,0l-8.2-0.1v-8.2v-26.3v-8l8-0.3
      c0.4,0,44-1.7,70.3-21.9c50.7-39.1,39.1-90,35.3-106.7c-0.3-1-0.4-1.7-0.6-2.4c-2.3-10.9-15.6-39.8-42.2-59.5l-2.6-1.9l-0.6-3.1
      c-0.3-1.3-6.5-32.6,5.7-57.9l3.7-7.7l7.5,4c0.4,0.3,11.3,5.9,24.7,17.2c12.3,10.4,29.4,27.8,40.5,51.5
      C259.6,140.8,276.3,174.4,274.7,212.2z" /> 
            </g> 
            <path fill="#FFFFFF" id="leftfill" d="M189,76.3c-11.2,23-5.1,52.6-5.1,52.6c29,21.4,42.9,52.3,45.4,64.4c2.6,12.1,20.2,72.7-37.8,117.4
    c-28.5,21.9-74.9,23.5-74.9,23.5v26.3c0.7,0,1.4,0,2,0c56,0,101.1-36.4,118.9-63.1c18.1-27,27-48.7,28.7-85.7s-15.7-70.4-15.7-70.4
    C230.3,97.8,189,76.3,189,76.3z" /> 
           </svg> 
          </div> 
          <div class="modus-text-svg" style="transition : all .2s ease;"> 
           <svg viewbox="0 0 454 55" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"> 
            <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage"> 
             <g id="Imported-Layers" sketch:type="MSLayerGroup" transform="translate(-0.089844, 0.503906)" fill="#FFFFFF"> 
              <path d="M4.57065139,1.0182629 L14.7442556,1.0182629 L25.0001494,26.9135287 C26.1825223,30.0102196 27.6594057,34.588125 27.6594057,34.588125 L27.8066609,34.588125 C27.8066609,34.588125 29.2055856,30.0102196 30.3836275,26.9135287 L40.6438524,1.0182629 L50.8217876,1.0182629 L55.0272238,53.3978154 L45.5855648,53.3978154 L43.3680742,24.1070172 C43.1471914,20.6421882 43.2944466,15.9949863 43.2944466,15.9949863 L43.1471914,15.9949863 C43.1471914,15.9949863 41.5966804,21.0882849 40.3493419,24.1070172 L31.8605109,44.3979221 L23.5275971,44.3979221 L15.1167247,24.1070172 C13.8650552,21.0882849 12.2409166,15.9213587 12.2409166,15.9213587 L12.0936614,15.9213587 C12.0936614,15.9213587 12.2409166,20.6421882 12.0200338,24.1070172 L9.80254319,53.3978154 L0.287256523,53.3978154 L4.57065139,1.0182629" id="Fill-1" sketch:type="MSShapeGroup"></path> 
              <path d="M78.5144335,14.886241 C90.0263279,14.886241 99.2514351,23.0805616 99.2514351,34.588125 C99.2514351,46.1693159 90.0263279,54.2900089 78.5923921,54.2900089 C67.0848288,54.2900089 57.8640526,46.1693159 57.8640526,34.588125 C57.8640526,23.0805616 67.0848288,14.886241 78.5144335,14.886241 C78.5144335,14.886241 67.0848288,14.886241 78.5144335,14.886241 L78.5144335,14.886241 L78.5144335,14.886241 Z M78.5923921,46.3209022 C84.6428498,46.3209022 89.7318174,41.5914106 89.7318174,34.588125 C89.7318174,27.6498049 84.6428498,22.8553477 78.5923921,22.8553477 C72.4683069,22.8553477 67.3793393,27.6498049 67.3793393,34.588125 C67.3793393,41.5914106 72.4683069,46.3209022 78.5923921,46.3209022 L78.5923921,46.3209022 Z M78.5923921,46.3209022" id="Fill-2" sketch:type="MSShapeGroup"></path> 
              <path d="M120.850313,14.886241 C129.11393,14.886241 131.695228,19.6806982 131.695228,19.6806982 L131.846814,19.6806982 C131.846814,19.6806982 131.773186,18.7278702 131.773186,17.5411662 L131.773186,1.0182629 L141.145549,1.0182629 L141.145549,53.3978154 L132.28858,53.3978154 L132.28858,50.2967935 C132.28858,48.9021998 132.435835,47.8670821 132.435835,47.8670821 L132.28858,47.8670821 C132.28858,47.8670821 129.11393,54.2900089 120.482175,54.2900089 C110.30424,54.2900089 103.812016,46.2429435 103.812016,34.588125 C103.812016,22.6344649 110.893261,14.886241 120.850313,14.886241 C120.850313,14.886241 110.893261,14.886241 120.850313,14.886241 L120.850313,14.886241 L120.850313,14.886241 Z M122.621707,46.3858677 C127.489792,46.3858677 132.067697,42.8517422 132.067697,34.5101663 C132.067697,28.6805915 128.966675,22.9289753 122.695334,22.9289753 C117.532739,22.9289753 113.249344,27.1344116 113.249344,34.588125 C113.249344,41.7429969 117.090973,46.3858677 122.621707,46.3858677 L122.621707,46.3858677 Z M122.621707,46.3858677" id="Fill-3" sketch:type="MSShapeGroup"></path> 
              <path d="M147.54682,15.7741034 L156.910521,15.7741034 L156.910521,38.052954 C156.910521,42.6221972 158.097225,45.7275502 162.740096,45.7275502 C169.526829,45.7275502 173.2905,39.7463892 173.2905,33.0332829 L173.2905,15.7741034 L182.662862,15.7741034 L182.662862,53.3978154 L173.662969,53.3978154 L173.662969,49.1187516 C173.662969,47.6461993 173.805893,46.4638264 173.805893,46.4638264 L173.662969,46.4638264 C171.817948,50.3704211 167.019159,54.2900089 160.604895,54.2900089 C152.56216,54.2900089 147.54682,50.2274969 147.54682,39.971603 L147.54682,15.7741034" id="Fill-4" sketch:type="MSShapeGroup"></path> 
              <path d="M192.199804,42.1847626 C192.199804,42.1847626 196.327282,46.3209022 202.460029,46.3209022 C205.110623,46.3209022 207.39308,45.1341983 207.39308,42.9210387 C207.39308,37.3166778 189.103113,38.052954 189.103113,25.9563697 C189.103113,18.944422 195.374454,14.886241 203.486485,14.886241 C211.970985,14.886241 216.107124,19.1653048 216.107124,19.1653048 L212.637964,26.1036249 C212.637964,26.1036249 209.168804,22.8553477 203.417188,22.8553477 C200.983146,22.8553477 198.622731,23.8861344 198.622731,26.2465491 C198.622731,31.5607306 216.917028,30.8980821 216.917028,42.9946663 C216.917028,49.2616758 211.455592,54.2900089 202.529326,54.2900089 C193.156963,54.2900089 187.92074,48.7462825 187.92074,48.7462825 L192.199804,42.1847626" id="Fill-5" sketch:type="MSShapeGroup"></path> 
              <path d="M263.367392,0.134731501 C276.130956,0.134731501 282.696807,7.28960341 282.696807,7.28960341 L278.127564,14.3708477 C278.127564,14.3708477 272.146403,8.84011439 263.813489,8.84011439 C252.74336,8.84011439 246.255468,17.1037316 246.255468,26.8442321 C246.255468,36.8012845 252.964243,45.575964 263.882785,45.575964 C272.960637,45.575964 279.084723,38.9408164 279.084723,38.9408164 L284.100063,45.8055089 C284.100063,45.8055089 276.867232,54.2900089 263.518978,54.2900089 C247.507137,54.2900089 236.44134,42.4056454 236.44134,26.9871563 C236.44134,11.7895501 247.953234,0.134731501 263.367392,0.134731501" id="Fill-6" sketch:type="MSShapeGroup"></path> 
              <path d="M289.124065,15.7741034 L298.123958,15.7741034 L298.123958,22.2619958 C298.123958,23.6652515 297.981034,24.916921 297.981034,24.916921 L298.123958,24.916921 C299.826055,19.537774 304.326002,15.2587101 310.077618,15.2587101 C310.965481,15.2587101 311.779716,15.4059654 311.779716,15.4059654 L311.779716,24.6267416 C311.779716,24.6267416 310.822556,24.4794863 309.562225,24.4794863 C305.577672,24.4794863 301.086387,26.7619424 299.310662,32.3706344 C298.71731,34.2156558 298.496427,36.2858912 298.496427,38.4947197 L298.496427,53.3978154 L289.124065,53.3978154 L289.124065,15.7741034" id="Fill-7" sketch:type="MSShapeGroup"></path> 
              <path d="M333.443559,14.886241 C344.279812,14.886241 350.105055,22.7817201 350.105055,32.7431035 C350.105055,33.8518488 349.884173,36.3551878 349.884173,36.3551878 L323.915279,36.3551878 C324.508631,42.9210387 329.60193,46.3209022 335.210622,46.3209022 C341.256748,46.3209022 346.055536,42.1847626 346.055536,42.1847626 L349.667621,48.9021998 C349.667621,48.9021998 343.916005,54.2900089 334.539311,54.2900089 C322.074589,54.2900089 314.335027,45.2857845 314.335027,34.588125 C314.335027,23.002603 322.226175,14.886241 333.443559,14.886241 C333.443559,14.886241 322.226175,14.886241 333.443559,14.886241 L333.443559,14.886241 L333.443559,14.886241 Z M340.667727,29.9409231 C340.520472,24.8519554 337.350154,22.1190716 333.214014,22.1190716 C328.419557,22.1190716 325.101983,25.0685073 324.214121,29.9409231 L340.667727,29.9409231 L340.667727,29.9409231 Z M340.667727,29.9409231" id="Fill-8" sketch:type="MSShapeGroup"></path> 
              <path d="M376.961811,29.7893368 L378.213481,29.7893368 L378.213481,29.2739435 C378.213481,24.3279001 375.112459,22.6344649 370.984981,22.6344649 C365.592841,22.6344649 360.65546,26.2465491 360.65546,26.2465491 L357.117003,19.537774 C357.117003,19.537774 362.937916,14.886241 371.872844,14.886241 C381.751937,14.886241 387.512216,20.3520088 387.512216,29.8629644 L387.512216,53.3978154 L378.876129,53.3978154 L378.876129,50.2967935 C378.876129,48.8242412 379.019053,47.6461993 379.019053,47.6461993 L378.876129,47.6461993 C378.954088,47.6461993 376.000321,54.2900089 367.446525,54.2900089 C360.729087,54.2900089 354.674299,50.0759106 354.674299,42.5572317 C354.674299,30.6035716 370.837726,29.7893368 376.961811,29.7893368 C376.961811,29.7893368 370.837726,29.7893368 376.961811,29.7893368 L376.961811,29.7893368 L376.961811,29.7893368 Z M369.806939,46.9792197 C374.748652,46.9792197 378.282777,41.6693693 378.282777,37.095795 L378.282777,36.2122636 L376.667301,36.2122636 C371.872844,36.2122636 364.12462,36.8705811 364.12462,42.1068039 C364.12462,44.6188049 365.96531,46.9792197 369.806939,46.9792197 L369.806939,46.9792197 Z M369.806939,46.9792197" id="Fill-9" sketch:type="MSShapeGroup"></path> 
              <path d="M396.377847,23.8081757 L391.505431,23.8081757 L391.505431,16.3674554 L396.59873,16.3674554 L396.59873,5.52254061 L405.750209,5.52254061 L405.750209,16.3674554 L414.308337,16.3674554 L414.308337,23.8081757 L405.750209,23.8081757 L405.750209,38.4210921 C405.750209,44.6188049 410.613963,45.5066674 413.203923,45.5066674 C414.234709,45.5066674 414.893027,45.3550811 414.893027,45.3550811 L414.893027,53.5450707 C414.893027,53.5450707 413.784282,53.7746156 412.017219,53.7746156 C406.772334,53.7746156 396.377847,52.2154425 396.377847,39.603465 L396.377847,23.8081757" id="Fill-10" sketch:type="MSShapeGroup"></path> 
              <path d="M437.414415,14.886241 C448.254999,14.886241 454.084574,22.7817201 454.084574,32.7431035 C454.084574,33.8518488 453.855029,36.3551878 453.855029,36.3551878 L427.894798,36.3551878 C428.479488,42.9210387 433.572786,46.3209022 439.181478,46.3209022 C445.227605,46.3209022 450.026393,42.1847626 450.026393,42.1847626 L453.638477,48.9021998 C453.638477,48.9021998 447.88253,54.2900089 438.510168,54.2900089 C426.041114,54.2900089 418.301552,45.2857845 418.301552,34.588125 C418.301552,23.002603 426.197031,14.886241 437.414415,14.886241 C437.414415,14.886241 426.197031,14.886241 437.414415,14.886241 L437.414415,14.886241 L437.414415,14.886241 Z M444.634253,29.9409231 C444.491329,24.8519554 441.32101,22.1190716 437.193533,22.1190716 C432.386082,22.1190716 429.07284,25.0685073 428.193639,29.9409231 L444.634253,29.9409231 L444.634253,29.9409231 Z M444.634253,29.9409231" id="Fill-11" sketch:type="MSShapeGroup"></path> 
             </g> 
            </g> 
           </svg> 
          </div> </a> </li> 
        <li> <a href="#" class="show-for-small right-off-canvas-toggle mobile-menu"> <i class="icon-reorder"></i> </a> </li> 
       </ul> 
       <div class="top-bar-section"> 
        <ul class="right"> 
         <li> <a href="/services"> 
           <div class="hover-box"> 
            <span>Services</span> 
           </div> </a> </li> 
         <li> <a href="/about"> 
           <div class="hover-box"> 
            <span>About</span> 
           </div> </a> </li> 
         <li> <a href="/community"> 
           <div class="hover-box"> 
            <span>Community</span> 
           </div> </a> </li> 
         <li> <a href="/blog"> 
           <div class="hover-box"> 
            <span>Blog</span> 
           </div> </a> </li> 
         <li> <a href="tel:18556638727" class="thin"> 
           <div class="hover-box"> 
            <img src="/wp-content/themes/moduscreate-web/images/MC_Phone_Icon.svg" alt="Call us at:"> 1-855-663-8727 
           </div> </a> </li> 
         <li> <a href="/contact" class="thin"> 
           <div class="hover-box"> 
            <img src="/wp-content/themes/moduscreate-web/images/MC_Contact_Icon.svg" alt="You can contact us here:"> Contact Us 
           </div> </a> </li> 
        </ul> 
       </div> 
      </nav> 
     </div> 
    </header> 
    <div class="banner empty"> 
     <p></p> 
    </div> 
    <section class="post-content" role="main"> 
     <div class="row"> 
      <div class="small-12 large-9 medium-10 medium-centered large-uncentered columns"> 
       <div class="centering"> 
        <h1 class="blog-title">ReactJS Form Validation Approaches</h1> 
        <div class="author">
         <a href="https://moduscreate.com/author/jasonmalfatto/" title="Posts by Jason Malfatto" class="url fn" rel="author">Jason Malfatto</a>
        </div>
        <br> 
        <div class="author-desc">
         January 19, 2017
        </div> 
        <div class="image"> 
         <img width="640" height="338" src="https://moduscreate.com/wp-content/uploads/2017/01/reactjs_form_validation_featured.jpg" class="attachment-post-thumbnail wp-post-image" alt="ReactJS Form Validation"> 
        </div> 
       </div> 
       <article class="article-single"> 
        <p>As a web developer who is relatively new to ReactJS, I take for granted the built-in support for form validation that I’ve enjoyed in other JavaScript frameworks, like Angular and Sencha. What follows is an elaboration on this problem, as well as a discussion of two approaches to solving it in React, on which I experimented for the same basic form design.</p> 
        <p>So what do I mean by “support for form validation”? Angular 1, for example, affords us a form model with properties, like <code>$valid</code>, <code>$invalid</code>, <code>$pristine</code>, and <code>$dirty</code>, out of the box. These occur at two levels: at the level of form inputs and at the level of the entire form that contains them. They facilitate validation logic at both levels and displaying feedback to users. Although the framework leaves many UI decisions to designers and developers, such as how and where to use these properties, it also provides us with specific input-type validators, like date and email. Sencha’s classic ExtJS toolkit affords us even more support than Angular 1. Not only does it provide input-type validators, but also display themes that we can customize or replace with another design theme.</p> 
        <p>React alone is relatively bare-bones when it comes to supporting form validation. Of course, we can always fall back on whatever HTML5 “constraint validation” support the browser provides. For example, using the <code>type</code>, <code>required</code>, and <code>pattern</code> attributes on <code>input[type="text"]</code> elements and the <code>:valid</code> and <code>:invalid</code> CSS pseudo-classes. But we may very well want more control over validation than browser API’s alone afford us. This is especially so in single-page applications, where we don’t normally submit forms in the standard way (that is, the way to trigger localized error messages in the browser) and in legacy browsers. Typically, we add <code>novalidate</code> attribute to the form, cancel submit events via <code>e.preventDefault()</code>, and rely on JS to extend native browser capability. (See <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Data_form_validation">here</a> for more on browser support and its limitations.)</p> 
        <p>Whereas the aforementioned frameworks come fully baked with this extension, whether we want it or not, React leaves us with the 3 options:</p> 
        <ul> 
         <li>Rely on browser API’s</li> 
         <li>Code a JS solution from scratch</li> 
         <li>Install another JS library – ideally one that plays nicely with React </li> 
        </ul> 
        <p>I decided to experiment with two of these approaches when developing the same form component in React, both of which are available in public code pens (see links below) and appear like so:</p> 
        <p><br></p> 
        <div align="center">
         <a href="https://moduscreate.com/wp-content/uploads/2017/01/reactjs_form_validation_simple_form_animation.gif"><img src="https://moduscreate.com/wp-content/uploads/2017/01/reactjs_form_validation_simple_form_animation.gif" alt="ReactJS Form Validation: Simple Form Animation" width="487" height="306" class="aligncenter size-full wp-image-10835"></a>
        </div> 
        <p><br></p> 
        <p>The <a href="https://codepen.io/jmalfatto/pen/YGjmaJ">first approach</a> relies on the browser’s constraint validation API and actually provides a lot of control via the ValidityState object and setCustomValidity method, which occur in modern browsers on each input element. The custom showInputError and showFormErrors functions require more coding than we might be accustomed to, but the standard API has already taken care of most of the validation logic for us, so we’re simply checking that the passwords match and deciding what error messages to show based on the standard API.</p> 
        <pre class="prettyprint">
if (isPasswordConfirm) {
  if (this.refs.password.value !== this.refs.passwordConfirm.value) {
    this.refs.passwordConfirm.setCustomValidity('Passwords do not match');
  } else {
    this.refs.passwordConfirm.setCustomValidity('');
  }
}
        
if (!validity.valid) {
  if (validity.valueMissing) {
    error.textContent = `${label} is a required field`; 
  } else if (validity.typeMismatch) {
    error.textContent = `${label} should be a valid email address`; 
  } else if (isPassword &amp;&amp; validity.patternMismatch) {
    error.textContent = `${label} should be longer than 4 chars`; 
  } else if (isPasswordConfirm &amp;&amp; validity.customError) {
    error.textContent = 'Passwords do not match';
  }
  return false;
}
</pre> 
        <p>The <a href="http://codepen.io/jmalfatto/pen/VKGYzd">second approach</a> relies on <a href="https://davidkpiano.github.io/react-redux-form/">react-redux-form</a>, a third-party library that integrates form data from React components into a Redux store. This approach has a steeper learning curve than the previous one and relies less on web standards (in the W3C sense) than on conventional practices within the React community. That said, it bears some similarities to the Angular form model, such as <code>pristine</code>, <code>touched</code>, and <code>valid</code> properties on a <code>$form</code> object and on each field object. It also allows us to set validators and error messages within JSX markup, which is reminiscent of Angular directives.</p> 
        <pre class="prettyprint">
&lt;div className="form-group"&gt;
  &lt;label&gt;Username&lt;/label&gt;
  &lt;Control.text 
    model=".username"
    component={MyTextInput}
    validators={{
      required: val =&gt; val &amp;&amp; val.length,
      validEmail: validator.isEmail
    }}
  /&gt;
  &lt;Errors
    className="errors"
    model="user.username"
    show={showErrors}
    messages={{
      required: 'Username is required',
      validEmail: 'Username should be a valid email address',
    }}
  /&gt;
&lt;/div&gt;
</pre> 
        <p>If one is already comfortable with Redux concepts, like actions and reducers, there is only the matter of getting comfortable with the specific react-redux-form API. Admittedly, this was not as easy to use as I had hoped, based on its clean and elegant documentation. Once I properly connected my UserForm component to my Redux store, I was able to listen for changes to data state (e.g. on the <code>rrf/setSubmitFailed</code> action) in my lower-level components (e.g. <code>MyTextInput</code>) and thereby achieve more control over changes in the view state. As a bonus, I added the redux-logger, so that I’m able to view all changes to data state in the browser console, including the form model that’s now part of my Redux store.</p> 
        <p><br></p> 
        <div align="center">
         <a href="https://moduscreate.com/wp-content/uploads/2017/01/reactjs_form_validation_redux_logger_console.png"><img src="https://moduscreate.com/wp-content/uploads/2017/01/reactjs_form_validation_redux_logger_console.png" alt="ReactJS Form Validation: Redux Logger Console" width="450" height="514" class="aligncenter size-full wp-image-10836"></a>
        </div> 
        <p><br></p> 
        <p>Both of these approaches are completely valid (no pun intended!) and each has its own strengths and weaknesses. In summary, <strong>the first approach benefits from its simple reliance on the “constraint validation” API, which is already a standard in modern browsers</strong>. Web standards like these have much slower churn rates, relative to trendy frameworks and libraries, which can translate into reduced fatigue for us developers. While that API was sufficient for the purposes of this demo, it may prove to be limited for some projects, such as those that require support for legacy browsers. Meanwhile, <strong>the second approach benefits from having leveraged the powers of Redux and Angular-like properties</strong>, but also probably isn’t worth the trouble of setting up on smaller projects, where Redux alone would seem like overkill. Even if an application is already configured for Redux, a form model arguably belongs where forms live – in a view component – and not in a data store at the level of the entire application.</p> 
        <hr>
        <div class="single-avatar">
         <img width="300" height="300" src="https://moduscreate.com/wp-content/uploads/2014/11/jasonM_350x350-300x300.jpg" class="attachment-medium wp-post-image" alt="jasonM_350x350">
        </div>
        <div class="author-desc">
         Jason Malfatto has been doing professional web development for nearly 20 years with backgrounds in graphic design, computer information systems, and human-computer interaction. While he enjoys coding, he also likes to stay close to the front end, where design and development meet.
        </div> 
        <hr> 
        <div class="share-buttons"> 
         <ul> 
          <li> <a href="http://www.facebook.com/sharer.php?u=https://moduscreate.com/reactjs-form-validation-approaches/" data-href="https://moduscreate.com/reactjs-form-validation-approaches/" data-send="false" data-layout="button_count" data-width="300" data-show-faces="false" rel="nofollow" target="_blank"> 
            <div class="facebook-share share"> 
             <i class="icon-facebook"></i> 
             <span>Share</span> 
            </div> </a> </li> 
          <li> <a href="http://twitter.com/share" data-text="ReactJS Form Validation Approaches" data-url="https://moduscreate.com/reactjs-form-validation-approaches/" data-count="horizontal" rel="nofollow" target="_blank"> 
            <div class="twitter-share share"> 
             <i class="icon-twitter"></i> 
             <span>Tweet</span> 
            </div> </a> </li> 
          <li> <a href="https://plusone.google.com/_/+1/confirm?hl=en&amp;url=https://moduscreate.com/reactjs-form-validation-approaches/" data-size="medium" data-href="https://moduscreate.com/reactjs-form-validation-approaches/" rel="nofollow" target="_blank"> 
            <div class="googleplus-one share"> 
             <i class="icon-google-plus"></i> 
             <span>Share</span> 
            </div> </a> </li> 
          <li> <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://moduscreate.com/reactjs-form-validation-approaches/&amp;title=ReactJS Form Validation Approaches&amp;summary=As a web developer who is relatively new to ReactJS, I take for granted the built-in support for form validation that I’ve enjoyed in other JavaScript frameworks, like Angular and...&amp;source=https://moduscreate.com/reactjs-form-validation-approaches/" rel="nofollow" target="_blank"> 
            <div class="linkedin-share share"> 
             <i class="icon-linkedin"></i> 
             <span>Share</span> 
            </div> </a> </li> 
         </ul> 
        </div> 
        <div class="comments"> 
         <div id="disqus_thread"> 
          <div id="dsq-content"> 
           <ul id="dsq-comments"> 
            <li class="comment even thread-even depth-1" id="dsq-comment-2592"> 
             <div id="dsq-comment-header-2592" class="dsq-comment-header"> 
              <cite id="dsq-cite-2592"> <span id="dsq-author-user-2592">David K</span> </cite> 
             </div> 
             <div id="dsq-comment-body-2592" class="dsq-comment-body"> 
              <div id="dsq-comment-message-2592" class="dsq-comment-message">
               <p>Hey Jason, just wanted to point out that you can use the constraint validation API as well in React-Redux-Form – it works just as well! Also, you can use for local-state forms so you can keep your form state local, instead of in global app state.</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
            <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-2608"> 
             <div id="dsq-comment-header-2608" class="dsq-comment-header"> 
              <cite id="dsq-cite-2608"> <span id="dsq-author-user-2608">RGBplace</span> </cite> 
             </div> 
             <div id="dsq-comment-body-2608" class="dsq-comment-body"> 
              <div id="dsq-comment-message-2608" class="dsq-comment-message">
               <p>Thank you ! I really appreciate.</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
            <li class="comment even thread-even depth-1" id="dsq-comment-2669"> 
             <div id="dsq-comment-header-2669" class="dsq-comment-header"> 
              <cite id="dsq-cite-2669"> <span id="dsq-author-user-2669">Tanguy Krotoff</span> </cite> 
             </div> 
             <div id="dsq-comment-body-2669" class="dsq-comment-body"> 
              <div id="dsq-comment-message-2669" class="dsq-comment-message">
               <p>Thanks for this nice article!</p> 
               <p>I’ve created a npm package that improves your “first approach”<br> =&gt; <a href="https://github.com/tkrotoff/ReactFormWithConstraints" rel="nofollow">https://github.com/tkrotoff/ReactFormWithConstraints</a></p> 
               <p>Here your “first approach” demo adapted with ReactFormWithConstraints: <a href="https://codepen.io/tkrotoff/pen/oWQeQR" rel="nofollow">https://codepen.io/tkrotoff/pen/oWQeQR</a></p> 
               <p>As you can see the code becomes generic, more powerful, easier to read and shorter by 40% (142 lines vs 101)</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul> 
          </div> 
         </div> 
         <script type="text/javascript">
var disqus_url = 'https://moduscreate.com/reactjs-form-validation-approaches/';
var disqus_identifier = '10817 https://moduscreate.com/?p=10817';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'moduscreate';
var disqus_title = "ReactJS Form Validation Approaches";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=10817';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script> 
        </div> 
       </article> 
      </div> 
      <div class="large-3 medium-10 medium-centered large-uncentered columns blog-sidebar single-sidebar"> 
       <div class="related-posts"> 
        <h3 class="accent-blue">Related Posts</h3> 
        <ul> 
         <li class="related-post"><a href="https://moduscreate.com/creating-progressive-web-apps-using-angular/">Creating Progressive Web Apps Using Angular</a></li> 
         <li class="related-post"><a href="https://moduscreate.com/chain-react-conference-recap/">Chain React Conference Recap</a></li> 
         <li class="related-post"><a href="https://moduscreate.com/key-concepts-to-help-learn-reactjs/">4 Key Concepts to Learning ReactJS</a></li> 
         <li class="related-post"><a href="https://moduscreate.com/aws-lambda-and-slack-promoting-new-blog-entries/">Promoting New Blog Entries with AWS Lambda and Slack</a></li> 
        </ul> 
       </div> 
       <!--   --> 
       <!--    --> 
       <br>
       <div class="blog-services"> 
        <h3 class="accent-blue">What We Do</h3> 
        <p>We’ll work closely with your team to instill Lean practices for ideation, strategy, design and delivery — practices that are adaptable to every part of your business.</p> 
        <p>See what Modus can do for you.</p> 
        <a href="/services">
         <div class="button">
          LET'S GET STARTED
         </div></a> 
       </div> 
       <div class="blog-careers"> 
        <h3 class="accent-blue">We're Hiring!</h3> 
        <p>Join our awesome team of dedicated engineers.</p> 
        <div id="open-jobs-sidebar"> 
         <p>Loading...</p> 
        </div> 
        <a href="/careers">
         <div class="button">
          APPLY NOW
         </div></a> 
       </div> 
      </div> 
     </div> 
    </section> 
    <script src="https://moduscreate.com/wp-content/themes/moduscreate-web/javascripts/prettyprint/prettify.js"></script> 
    <script>prettyPrint();</script> 
    <footer> 
     <section class="footer-black"> 
      <div class="row"> 
       <div class="small-12 columns"> 
        <div class="medium-4 large-4 columns"> 
         <div class="section"> 
          <h2>Careers</h2> 
          <div class="small-list"> 
           <div id="open-jobs"> 
            <span class="replace">Loading...</span> 
           </div> 
           <div>
            <a href="/careers">
             <div class="button">
              APPLY NOW
             </div></a>
           </div> 
          </div> 
         </div> 
        </div> 
        <div class="medium-4 large-4 columns"> 
         <h2>Contact Us</h2> 
         <div class="section"> 
          <ul class="email-phone"> 
           <li><a href="mailto:contact@moduscreate.com">contact@moduscreate.com</a></li> 
           <li><a href="tel:18556638727">1-855-663-8727</a></li> 
          </ul> 
         </div> 
         <div class="section"> 
          <ul> 
           <li> <a target="_blank" href="https://www.google.com/maps/place/11480+Commerce+Park+Dr,+Reston,+VA"> <img src="/wp-content/themes/moduscreate-web/images/MC_VA_Marker_Icon.svg" alt="Modus Create VA location" class="map-pin"> <strong>Modus HQ</strong><br> 11480 Commerce Park Dr<br> #350<br> Reston, VA 20191<br><br> </a> </li> 
           <!--             <li>
              <a target="_blank"href="https://www.google.com/maps/place/Strada+Pite?ti+18,+Cluj-Napoca+400000">
                <img src="/wp-content/themes/moduscreate-web/images/MC_NY_Marker_Icon.svg" alt="Modus Create NYC location" class="map-pin" />
                <strong>Romania Office</strong><br>
                Pitesti St Number 18<br>
                Cluj Napoca, Cluj, Romania, 400000
              </a>
            </li> --> 
          </ul> 
         </div> 
        </div> 
        <div class="medium-4 large-4 columns"> 
         <div class="section newsletter"> 
          <h2>Our Newsletter</h2> 
          <!--[if lte IE 8]>
          <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2-legacy.js"></script>
          <![endif]--> 
          <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script> 
          <script>
            hbspt.forms.create({ 
              css: '',
              portalId: '1907998',
              formId: '9b5864c2-1462-415f-ba7c-0b55bed12e8e',
              submitButtonClass: 'hs-button'
            });
          </script> 
          <!-- <form id="emmaForm" name="emmaForm" method="POST" action="<'?php echo get_template_directory_uri(); ?>/partials/emmaNewsletter.php">
            <input type="text" id="emma_first" name="emma_first" placeholder="First name" required>
            <input type="text" id="emma_last"  name="emma_last" placeholder="Last name" required>
            <input type="text" id="emma_email"  name="emma_email" placeholder="Email" required>
            <div id="emmaResponse"></div>
            <button type="submit">SUBSCRIBE NOW</button>
          </form> --> 
         </div> 
        </div> 
       </div> 
      </div> 
     </section> 
     <section class="footer-social"> 
      <div class="row"> 
       <a href="http://www.facebook.com/moduscreate" target="_blank"> 
        <div class="footer-icon"> 
         <i class="fa fa-facebook"></i> 
        </div> </a> 
       <a href="http://www.twitter.com/moduscreate" target="_blank"> 
        <div class="footer-icon"> 
         <i class="fa fa-twitter"></i> 
        </div> </a> 
       <a href="https://github.com/moduscreateorg" target="_blank"> 
        <div class="footer-icon"> 
         <i class="fa fa-github-alt"></i> 
        </div> </a> 
       <a href="https://www.linkedin.com/company/modus-create-inc" target="_blank"> 
        <div class="footer-icon"> 
         <i class="fa fa-linkedin"></i> 
        </div> </a> 
       <a href="https://www.instagram.com/moduscreate" target="_blank"> 
        <div class="footer-icon"> 
         <i class="fa fa-instagram"></i> 
        </div> </a> 
       <a href="https://plus.google.com/+ModusCreate" target="_blank"> 
        <div class="footer-icon"> 
         <i class="fa fa-google-plus"></i> 
        </div> </a> 
       <h6 class="copyright"> © 2017 Modus Create </h6> 
      </div> 
     </section> 
    </footer> 
    <!-- close the off-canvas menu --> 
    <a class="exit-off-canvas"></a> 
   </div> 
  </div> 
  <script src="/wp-content/themes/moduscreate-web/javascripts/dist/scripts.min.js"></script> 
  <!-- Start of Async Google Analytics Code --> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-27963224-1', 'auto');
  ga('send', 'pageview');

</script> 
  <!-- End of Async Google Analytics Code --> 
  <!-- Start of Async HubSpot Analytics Code --> 
  <script type="text/javascript">
(function(d,s,i,r) {
    if (d.getElementById(i)){return;}
        var n=d.createElement(s),e=d.getElementsByTagName(s)[0];
    n.id=i;n.src='//js.hs-analytics.net/analytics/'+(Math.ceil(new Date()/r)*r)+'/1907998.js';
    e.parentNode.insertBefore(n, e);
})(document,"script","hs-analytics",300000);
</script> 
  <!-- End of Async HubSpot Analytics Code --> 
  <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'moduscreate';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); 
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script> 
  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"2fb8f21bf5","applicationID":"1138776","transactionName":"YFFUZUcFChAHV0FcX1kbd1JBDQsNSUdcW1dbUQ==","queueTime":0,"applicationTime":392,"atts":"TBZXEw8fGR4=","errorBeacon":"bam.nr-data.net","agent":""}</script>  
  <!--
    __  ___          __              ______                __
   /  |/  /___  ____/ /_  _______   / ____/_______  ____ _/ /____
  / /|_/ / __ \/ __  / / / / ___/  / /   / ___/ _ \/ __ `/ __/ _ \
 / /  / / /_/ / /_/ / /_/ (__  )  / /___/ /  /  __/ /_/ / /_/  __/
/_/  /_/\____/\____/\____/____/   \____/_/   \___/\____/\__/\___/


Interested in joining the Modus team?
Send your name, github profile, your personal site, your best work, and why you'd be a great fit for our team.
No resumes. No cover letters. No bull.

Send it all to jobs@moduscreate.com and let us know you found this little easter egg.

--> 
 </body>
</html>