<!doctype html>
<html class="">
 <head> 
  <title>forceNetwork function | R Documentation</title> 
  <base href="https://www.rdocumentation.org"> 
  <!-- Viewport mobile tag for sensible mobile support --> 
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"> 
  <meta http-equiv="Content-Type" content="text/html;" charset="UTF-8"> 
  <meta name="description" content="<p>Create a D3 JavaScript force directed network graph.</p>"> 
  <link href="/packages/networkD3/versions/0.4/topics/forceNetwork" rel="canonical"> 
  <!--STYLES--> 
  <link rel="stylesheet" href="/min/production.min.5a826dea391b28589edeb547fe93211f.css"> 
  <!--STYLES END--> 
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic" rel="stylesheet" type="text/css"> 
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css"> 
  <link rel="stylesheet" href="/css/nv.d3.min.css"> 
  <link rel="stylesheet" href="/css/bootstrap-treeview.css"> 
  <link rel="stylesheet" href="/css/bootstrap-glyphicons.css"> 
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.7.1/jquery.modal.min.css"> 
  <link href="https://code.jquery.com/ui/1.12.0-rc.2/themes/smoothness/jquery-ui.css" rel="stylesheet"> 
  <script src="https://www.google.com/recaptcha/api.js" async defer></script> 
  <!-- Google Tag Manager --> 
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-WB38P87');</script> 
  <!-- End Google Tag Manager --> 
 </head> 
 <body> 
  <!-- Google Tag Manager (noscript) --> 
  <noscript>
   <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-WB38P87" height="0" width="0" style="display:none;visibility:hidden"></iframe>
  </noscript> 
  <!-- End Google Tag Manager (noscript) --> 
  <div id="content"> 
   <div class="page-wrap"> 
    <section class="navbar navbar-color navbar-fixed-top"> 
     <nav class="clearfix"> 
      <div class="navbar--title"> 
       <a href="/"> 
        <div class="logo"></div> 
        <div class="logo-title">
         <span>RDocumentation</span>
        </div> </a> 
      </div> 
      <ul class="navbar--navigation largescreen"> 
       <li><a href="https://github.com/datacamp/Rdocumentation" class="btn btn-secondary">R package</a></li> 
       <li><a href="/trends" class="btn btn-secondary">Leaderboard</a></li> 
       <li><a href="/login?rdr=%2Fpackages%2FnetworkD3%2Fversions%2F0.4%2Ftopics%2FforceNetwork" class="btn btn-primary">Sign in</a></li> 
      </ul> 
      <div class="navbar--search"> 
       <form class="search" action="/search" method="get"> 
        <input name="q" id="searchbar" type="text" placeholder="Search for packages, functions, etc" autocomplete="off"> 
        <input name="latest" id="hidden_latest" type="hidden"> 
        <div class="search--results"></div> 
       </form> 
      </div> 
     </nav> 
    </section> 
    <section class="topic packageData" data-package-name="networkD3" data-latest-version="0.4" data-dcl="false"> 
     <header class="topic-header"> 
      <div class="container"> 
       <div class="th--flex-position"> 
        <div> 
         <!-- Do not remove this div, needed for th-flex-position --> 
         <h1>forceNetwork</h1> 
        </div> 
        <div> 
         <!-- Do not remove this div, needed for th-flex-position --> 
         <div class="th--pkg-info"> 
          <div class="th--origin"> 
           <span>From <a href="/packages/networkD3/versions/0.4">networkD3 v0.4</a></span> 
           <span>by <a href="/collaborators/name/Christopher Gandrud">Christopher Gandrud</a></span> 
          </div> 
          <div class="th--percentile"> 
           <div class="percentile-widget percentile-task" data-url="/api/packages/networkD3/percentile"> 
            <span class="percentile-th"> <span class="percentile">0th</span> </span> 
            <p>Percentile</p> 
           </div> 
          </div> 
         </div> 
        </div> 
       </div> 
      </div> 
     </header> 
     <div class="container"> 
      <section> 
       <h5>Create a D3 JavaScript force directed network graph.</h5> 
       <p></p>
       <p>Create a D3 JavaScript force directed network graph.</p>
       <p></p> 
      </section> 
      <section id="usage"> 
       <div class="anchor" id="l_usage"></div> 
       <h5 class="topic--title">Usage</h5> 
       <pre><code class="R">forceNetwork(Links, Nodes, Source, Target, Value, NodeID, Nodesize, Group,
  height = NULL, width = NULL,
  colourScale = JS("d3.scaleOrdinal(d3.schemeCategory20);"), fontSize = 7,
  fontFamily = "serif", linkDistance = 50,
  linkWidth = JS("function(d) { return Math.sqrt(d.value); }"),
  radiusCalculation = JS(" Math.sqrt(d.nodesize)+6"), charge = -30,
  linkColour = "#666", opacity = 0.6, zoom = FALSE, legend = FALSE,
  arrows = FALSE, bounded = FALSE, opacityNoHover = 0,
  clickAction = NULL)</code></pre> 
      </section> 
      <section class="topic--arguments"> 
       <div class="anchor" id="l_arguments"></div> 
       <h5 class="topic--title">Arguments</h5> 
       <dl> 
        <dt>
         Links
        </dt> 
        <dd>
         <p>a data frame object with the links between the nodes. It should include the <code>Source</code> and <code>Target</code> for each link. These should be numbered starting from 0. An optional <code>Value</code> variable can be included to specify how close the nodes are to one another.</p>
        </dd> 
        <dt>
         Nodes
        </dt> 
        <dd>
         <p>a data frame containing the node id and properties of the nodes. If no ID is specified then the nodes must be in the same order as the Source variable column in the <code>Links</code> data frame. Currently only a grouping variable is allowed.</p>
        </dd> 
        <dt>
         Source
        </dt> 
        <dd>
         <p>character string naming the network source variable in the <code>Links</code> data frame.</p>
        </dd> 
        <dt>
         Target
        </dt> 
        <dd>
         <p>character string naming the network target variable in the <code>Links</code> data frame.</p>
        </dd> 
        <dt>
         Value
        </dt> 
        <dd>
         <p>character string naming the variable in the <code>Links</code> data frame for how wide the links are.</p>
        </dd> 
        <dt>
         NodeID
        </dt> 
        <dd>
         <p>character string specifying the node IDs in the <code>Nodes</code> data frame.</p>
        </dd> 
        <dt>
         Nodesize
        </dt> 
        <dd>
         <p>character string specifying the a column in the <code>Nodes</code> data frame with some value to vary the node radius's with. See also <code>radiusCalculation</code>.</p>
        </dd> 
        <dt>
         Group
        </dt> 
        <dd>
         <p>character string specifying the group of each node in the <code>Nodes</code> data frame.</p>
        </dd> 
        <dt>
         height
        </dt> 
        <dd>
         <p>numeric height for the network graph's frame area in pixels.</p>
        </dd> 
        <dt>
         width
        </dt> 
        <dd>
         <p>numeric width for the network graph's frame area in pixels.</p>
        </dd> 
        <dt>
         colourScale
        </dt> 
        <dd>
         <p>character string specifying the categorical colour scale for the nodes. See <a href="https://github.com/d3/d3/blob/master/API.md#ordinal-scales">https://github.com/d3/d3/blob/master/API.md#ordinal-scales</a>.</p>
        </dd> 
        <dt>
         fontSize
        </dt> 
        <dd>
         <p>numeric font size in pixels for the node text labels.</p>
        </dd> 
        <dt>
         fontFamily
        </dt> 
        <dd>
         <p>font family for the node text labels.</p>
        </dd> 
        <dt>
         linkDistance
        </dt> 
        <dd>
         <p>numeric or character string. Either numberic fixed distance between the links in pixels (actually arbitrary relative to the diagram's size). Or a JavaScript function, possibly to weight by <code>Value</code>. For example: <code>linkDistance = JS("function(d){return d.value * 10}")</code>.</p>
        </dd> 
        <dt>
         linkWidth
        </dt> 
        <dd>
         <p>numeric or character string. Can be a numeric fixed width in pixels (arbitrary relative to the diagram's size). Or a JavaScript function, possibly to weight by <code>Value</code>. The default is <code>linkWidth = JS("function(d) { return Math.sqrt(d.value); }")</code>.</p>
        </dd> 
        <dt>
         radiusCalculation
        </dt> 
        <dd>
         <p>character string. A javascript mathematical expression, to weight the radius by <code>Nodesize</code>. The default value is <code>radiusCalculation = JS("Math.sqrt(d.nodesize)+6")</code>.</p>
        </dd> 
        <dt>
         charge
        </dt> 
        <dd>
         <p>numeric value indicating either the strength of the node repulsion (negative value) or attraction (positive value).</p>
        </dd> 
        <dt>
         linkColour
        </dt> 
        <dd>
         <p>character vector specifying the colour(s) you want the link lines to be. Multiple formats supported (e.g. hexadecimal).</p>
        </dd> 
        <dt>
         opacity
        </dt> 
        <dd>
         <p>numeric value of the proportion opaque you would like the graph elements to be.</p>
        </dd> 
        <dt>
         zoom
        </dt> 
        <dd>
         <p>logical value to enable (<code>TRUE</code>) or disable (<code>FALSE</code>) zooming.</p>
        </dd> 
        <dt>
         legend
        </dt> 
        <dd>
         <p>logical value to enable node colour legends.</p>
        </dd> 
        <dt>
         arrows
        </dt> 
        <dd>
         <p>logical value to enable directional link arrows.</p>
        </dd> 
        <dt>
         bounded
        </dt> 
        <dd>
         <p>logical value to enable (<code>TRUE</code>) or disable (<code>FALSE</code>) the bounding box limiting the graph's extent. See <a href="http://bl.ocks.org/mbostock/1129492">http://bl.ocks.org/mbostock/1129492</a>.</p>
        </dd> 
        <dt>
         opacityNoHover
        </dt> 
        <dd>
         <p>numeric value of the opacity proportion for node labels text when the mouse is not hovering over them.</p>
        </dd> 
        <dt>
         clickAction
        </dt> 
        <dd>
         <p>character string with a JavaScript expression to evaluate when a node is clicked.</p>
        </dd> 
       </dl> 
      </section> 
      <!-- Other info --> 
      <div class="anchor" id="l_sections"></div> 
      <section> 
       <div class="anchor" id="l_seealso"></div> 
       <h5 class="topic--title">See Also</h5> 
       <p></p>
       <p><code><a rd-options="" href="/link/JS?package=networkD3&amp;version=0.4" data-mini-rdoc="networkD3::JS">JS</a></code>.</p>
       <p></p> 
      </section> 
      <section style="display: none;"> 
       <div class="anchor" id="alss"></div> 
       <h5 class="topic--title">Aliases</h5> 
       <ul class="topic--aliases"> 
        <li>forceNetwork</li> 
       </ul> 
      </section> 
      <section> 
       <div class="anchor" id="l_examples"></div> 
       <h5 class="topic--title">Examples</h5> 
       <pre><code class="R" data-package-name="networkD3"># NOT RUN {
# Load data
data(MisLinks)
data(MisNodes)
# Create graph
forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
             Target = "target", Value = "value", NodeID = "name",
             Group = "group", opacity = 0.4, zoom = TRUE)

# Create graph with legend and varying node radius
forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
             Target = "target", Value = "value", NodeID = "name",
             Nodesize = "size",
             radiusCalculation = "Math.sqrt(d.nodesize)+6",
             Group = "group", opacity = 0.4, legend = TRUE)

# Create graph directed arrows
forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
             Target = "target", Value = "value", NodeID = "name",
             Group = "group", opacity = 0.4, arrows = TRUE)

# }
# NOT RUN {
#### JSON Data Example
# Load data JSON formated data into two R data frames
# Create URL. paste0 used purely to keep within line width.
URL &lt;- paste0("https://cdn.rawgit.com/christophergandrud/networkD3/",
              "master/JSONdata/miserables.json")

MisJson &lt;- jsonlite::fromJSON(URL)

# Create graph
forceNetwork(Links = MisJson$links, Nodes = MisJson$nodes, Source = "source",
             Target = "target", Value = "value", NodeID = "name",
             Group = "group", opacity = 0.4)

# Create graph with zooming
forceNetwork(Links = MisJson$links, Nodes = MisJson$nodes, Source = "source",
             Target = "target", Value = "value", NodeID = "name",
             Group = "group", opacity = 0.4, zoom = TRUE)


# Create a bounded graph
forceNetwork(Links = MisJson$links, Nodes = MisJson$nodes, Source = "source",
             Target = "target", Value = "value", NodeID = "name",
             Group = "group", opacity = 0.4, bounded = TRUE)

# Create graph with node text faintly visible when no hovering
forceNetwork(Links = MisJson$links, Nodes = MisJson$nodes, Source = "source",
             Target = "target", Value = "value", NodeID = "name",
             Group = "group", opacity = 0.4, bounded = TRUE,
             opacityNoHover = TRUE)

## Specify colours for specific edges
# Find links to Valjean (11)
which(MisNodes == "Valjean", arr = TRUE)[1] - 1
ValjeanInds = which(MisLinks == 11, arr = TRUE)[, 1]

# Create a colour vector
ValjeanCols = ifelse(1:nrow(MisLinks) %in% ValjeanInds, "#bf3eff", "#666")

forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
             Target = "target", Value = "value", NodeID = "name",
             Group = "group", opacity = 0.8, linkColour = ValjeanCols)


## Create graph with alert pop-up when a node is clicked.  You're
# unlikely to want to do exactly this, but you might use
# Shiny.onInputChange() to allocate d.XXX to an element of input
# for use in a Shiny app.

MyClickScript &lt;- 'alert("You clicked " + d.name + " which is in row " +
       (d.index + 1) +  " of your original R data frame");'

forceNetwork(Links = MisLinks, Nodes = MisNodes, Source = "source",
             Target = "target", Value = "value", NodeID = "name",
             Group = "group", opacity = 1, zoom = FALSE,
             bounded = TRUE, clickAction = MyClickScript)
# }
# NOT RUN {
# }
</code></pre> 
      </section> 
      <small> <i> Documentation reproduced from package <span itemprop="name">networkD3</span>, version <span itemprop="version">0.4</span>, License: GPL (&gt;= 3) </i> </small> 
      <div class="user-examples" id="postExample"> 
       <h3>Community examples</h3> 
       <div class="example-content"> 
        <div class="example--placeholder">
         Looks like there are no examples yet.
        </div> 
       </div> 
       <div class="example--form"> 
        <div class="example--form-body"> 
         <form method="post" action="/api/topics/7566111/examples"> 
          <fieldset class="example--form-text"> 
           <label for="text"><h3 id="postExampleTitle">Post a new example:</h3></label> 
           <textarea name="text" rows="4" id="postExampleText"></textarea> 
          </fieldset> 
          <fieldset> 
           <a id="openModalExample" href="/modalLogin" rel="modal:open"><button class="btn btn-primary pull-right" type="button">Submit your example</button></a> 
          </fieldset> 
         </form> 
        </div> 
       </div> 
      </div> 
     </div> 
    </section> 
   </div> 
   <div class="footer"> 
    <a class="navbar--title apidoc btn btn-default js-external" target="_blank" href="/docs"> <i class="fa fa-cogs"></i> API documentation </a> 
    <div class="navbar--title footer-largescreen pull-right"> 
     <a href="https://github.com/datacamp/rdocumentation" class="js-external"> 
      <div class="github"></div> 
      <div class="logo-title">
       R package
      </div> </a> 
    </div> 
    <div class="navbar--title footer-largescreen pull-right"> 
     <a href="https://github.com/datacamp/rdocumentation-app" class="js-external"> 
      <div class="github"></div> 
      <div class="logo-title">
       Rdocumentation.org
      </div> </a> 
    </div> 
    <div class="footer--credits--title"> 
     <p class="footer--credits">Created by <a href="https://www.datacamp.com" class="js-external">DataCamp.com</a></p> 
    </div> 
   </div> 
  </div> 
  <div class="dc-footer"> 
   <span class="dc-footer--text"> Learn R by doing at DataCamp </span> 
   <a class="dc-footer--link btn btn-secondary" href="https://www.datacamp.com">Free Trial</a> 
   <span class="dc-footer--cross"><i class="fa fa-times" aria-hidden="true"></i></span> 
  </div> 
  <!--TEMPLATES--> 
  <!--TEMPLATES END--> 
  <script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"></script> 
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.27.2/js/jquery.tablesorter.min.js"> </script> 
  <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script> 
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.17/d3.min.js"> </script> 
  <script src="https://cdnjs.cloudflare.com/ajax/libs/nvd3/1.8.3/nv.d3.min.js"> </script> 
  <script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.6.0/clipboard.min.js"></script> 
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.7.1/jquery.modal.min.js"></script> 
  <script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script> 
  <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        messageStyle: "none",
        jax: ["input/TeX","output/CommonHTML"],
        extensions: ["tex2jax.js","MathMenu.js","MathZoom.js"],
        TeX: {
          extensions: ["AMSmath.js","AMSsymbols.js","noErrors.js","noUndefined.js"]
        },
        tex2jax: {
          inlineMath: [ ['$','$'], ['\\(','\\)']  ],
          displayMath: [ ['$$','$$'] ],
          processEscapes: true,
          preview: 'none'
        }
      });
    </script> 
  <script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js"></script> 
  <script src="https://cdn.datacamp.com/datacamp-light-latest.min.js"></script> 
  <script type="text/javascript">
      var $jq = jQuery.noConflict();
    </script> 
  <!--SCRIPTS--> 
  <script src="/min/production.min.65577498babccfe5100284b56c38f6f7.js"></script> 
  <!--SCRIPTS END--> 
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-41577880-1', 'rdocumentation.org');
      ga('send', 'pageview');
    </script>   
 </body>
</html>