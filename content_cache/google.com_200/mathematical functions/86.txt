<!doctype html>
<html>
 <head> 
  <title>Vanilla JS</title> 
  <style type="text/css">
@font-face {
  font-family: cursive2;
  src: url(assets/cursive.ttf);
}

body {
  font-family: sans-serif;
  background-color: #cccccc;
  margin: 0;
}

#content {
  margin: 0 auto;
  padding: 15px;
  width: 750px;
  background-color: #ffffff;
  box-shadow: 0 0 5px 5px #999999;
  position: relative;
}
#skyscraper {
  position: absolute;
  left: 100%;
  top: 0;
  margin-left: 50px;
  margin-top: 50px;
}

.vanillajs {
  font-family: cursive2;
  color: #9e946e;
  font-size: 120%;
  padding-right: .1em;
}
.code {
  font-family: monospace;
  white-space: pre;
}

h1 {
  margin: 0;
  position: relative;
  height: 200px;
  line-height: 180px;
  text-align: center;
  font-size: 30pt;
  text-shadow: 0 0 2px #333333, 0 0 4px #333333;
  color: #F3E5AB;
  font-weight: 100;
  font-family: cursive2;
}
h1 span {
  position: relative;
  z-index: 1;
}
h1 img {
  vertical-align: middle;
  opacity: .1;
  position: absolute;
  left: 50%;
  top: 50%;
  margin-left: -100px;
  margin-top: -100px;
}

h2 {
  margin: 1em 0 0 0;
  font-size: 25pt;
  color: #aaaaaa;
  font-weight: normal;
}

h3 {
  margin: 5px;
  font-size: 15pt;
  color: #666666;
  font-weight: normal;
}

p a {
  color: #999999;
}
p a:hover {
  color: #666666;
  text-shadow: 0 0 8px #F3E5AB, 0 0 4px #F3E5AB;
}

blockquote:before {
  content: '"';
  font-size: 20pt;
  padding-right: .1em;
  text-shadow: 0 0 2px #333333, 0 0 4px #333333;
  color: #F3E5AB;
  font-weight: 100;
  font-family: cursive2;
}
blockquote {
  font-family: cursive2;
  color: #9e946e;
  font-size: 120%;
  padding-right: .1em;
  min-height: 4em;
}
blockquote:after {
  content: '"';
  font-size: 20pt;
  text-shadow: 0 0 2px #333333, 0 0 4px #333333;
  color: #F3E5AB;
  font-weight: 100;
  font-family: cursive2;
}

h3 a {
  color: inherit;
  text-decoration: none;
}
h3 a:hover {
  text-decoration: underline;
}

.tagline {
  font-size: 16pt;
  color: #666666;
  text-align: center;
  margin-bottom: 1em;
}

ul.flatlist {
  list-style-type: none;
  padding: 0;
  display: table;
  width: 100%;
}
ul.flatlist li {
  display: table-cell;
  text-align: center;
  color: #999999;
}

ol.sourcecode {
  background-color: #999999;
  color: #ffffff;
  font-family: monospace;
  padding: 2px 2px 2px 3em;
}
ol.sourcecode li {
}
ol.sourcecode li div {
  padding-left: 1em;
  background-color: #ffffff;
  color: #000000;
}

#customizer {}
#customizer-options label {
  display: inline-block;
  border-radius: 5px;
  padding: 1px;
  margin: 0 2px 2px 0;
  width: 45%;
  background-color: #cccccc;
}
#customizer-options label:hover {
  background-color: #dddddd;
}
#customizer-options label.selected {
  background-color: #F3E5AB;
  color: #666666;
}
#customizer-options label input {
  margin-right: 8px;
}
#customizer-estimate span.throbber {
  display: inline-block;
  vertical-align: middle;
  width: 16px;
  height: 16px;
  background-image: url(assets/throbber.gif);
}
#customizer-estimate label {
  font-size: smaller;
  display: inline-block;
  background-color: #dddddd;
  padding: 1px .75em 1px .5em;
  border-radius: 1em;
  color: #666666;
}
#customizer-estimate label:hover {
  background-color: #eeeeee;
  color: #999999;
}
#customizer-estimate label input {
  vertical-align: bottom;
}

table {
  border-collapse: collapse;
  margin-bottom: 2em;
  width: 100%;
}
table th {
  white-space: nowrap;
}
table th, table td {
  border: 1px solid #cccccc;
  padding: 2px;
}

table.comparison td {
  white-space: nowrap;
}
table.comparison td.corner {
  border-left: none;
  border-top: none;
}
table.comparison td.ops {
  padding: 0;
  line-height: 1.5em;
  width: 100%;
}
table.comparison td.ops .container {
  position: relative;
  width: 100%;
  height: 100%;
}
table.comparison td.ops .label {
  position: relative;
  display: block;
  padding: 2px;
  z-index: 1;
  text-align: right;
  font-family: monospace;
}
table.comparison td.ops .bar {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  background-color: #cccccc;
}
</style> 
  <script type="text/javascript">
var customizer_update_t1 = null;
var customizer_update_t2 = null;
var customizer_use_hrsize = false;

var options = [
  "DOM (Traversal / Selectors)",
  "Prototype-based Object System",
  "AJAX",
  "Animations",
  "Event System",
  "Regular Expressions",
  "Functions as first-class objects",
  "Closures",
  "Math Library",
  "Array Library",
  "String Library",
  ["Options"],
  "Minify Source Code",
  "Produce UTF8 Output",
  "Use \"CRLF\" line breaks (Windows)",
];

var testimonial_cur;
var testimonials = [
  "Vanilla JS is the lowest-overhead, most comprehensive framework I've ever used.",
  "Vanilla JS makes everything an object, which is very convenient for OO JS applications.",
  "Native support for HTML5 and other cutting-edge technologies makes me keep coming back to Vanilla JS, time after time.",
];

var dom = {optdiv:null, uncomp:null, gzipped:null, testimonial:null};

window.onload = function() {
  dom.optdiv = document.getElementById("customizer-options");
  dom.uncomp = document.getElementById("customizer-estimate-uncompressed");
  dom.gzipped = document.getElementById("customizer-estimate-gzipped");
  dom.testimonial = document.getElementById("testimonial");

  for (var i=0; i<options.length; i++) { (function(){
    if (typeof options[i] !== 'string') {
      var spacer = document.createElement("h3");
      spacer.appendChild(document.createTextNode(options[i][0]));
      dom.optdiv.appendChild(spacer);
      return;
    }

    var label = document.createElement("label");
    var input = document.createElement("input");
    input.type = "checkbox";
    input.onchange = function(){
      label.className = input.checked ? "selected" : "";
      customizer_update();
    };
    label.appendChild(input);
    label.appendChild(document.createTextNode(options[i]));
    dom.optdiv.appendChild(label);
  })(); }

  testimonial_cur = Math.floor(Math.random() * testimonials.length);
  while (dom.testimonial.childNodes.length) dom.testimonial.removeChild(dom.testimonial.firstChild);
  dom.testimonial.appendChild(document.createTextNode(testimonials[testimonial_cur]));
  setInterval(function(){
    testimonial_cur = (testimonial_cur+1) % testimonials.length;
    while (dom.testimonial.childNodes.length) dom.testimonial.removeChild(dom.testimonial.firstChild);
    dom.testimonial.appendChild(document.createTextNode(testimonials[testimonial_cur]));
  }, 5000);
};

function customizer_update() {
  var t1 = Math.random()/3 + .1;
  var t2 = t1 + Math.random()/3 + .05;

  dom.uncomp.innerHTML = "";
  dom.uncomp.className = "throbber";

  dom.gzipped.innerHTML = "";
  dom.gzipped.className = "throbber";

  clearTimeout(customizer_update_t1);
  clearTimeout(customizer_update_t2);

  customizer_update_t1 = setTimeout(function(){
    customizer_showestimate(dom.uncomp);
  },t1*1000);
  customizer_update_t2 = setTimeout(function(){
    customizer_showestimate(dom.gzipped, true);
  },t2*1000);
}
function customizer_showestimate(el, zip) {
  el.innerHTML = customizer_use_hrsize ? (zip ? "0.02 KBytes" : "0.00 KBytes") : (zip ? "25 bytes" : "0 bytes");
  el.className = "";
}
function customizer_hrsize(use_hrsize) {
  customizer_use_hrsize = use_hrsize;

  clearTimeout(customizer_update_t1);
  clearTimeout(customizer_update_t2);

  customizer_showestimate(dom.uncomp);
  customizer_showestimate(dom.gzipped, true);
}
</script> 
 </head> 
 <body> 
  <div id="content"> 
   <h1><span>Vanilla JS</span><img src="assets/vanillin-chemstruct.png" alt="Vanillin"></h1> 
   <div class="tagline">
    <span class="vanillajs">Vanilla JS</span> is a fast, lightweight, cross-platform framework
    <br>for building incredible, powerful JavaScript applications.
   </div> 
   <h2>Introduction</h2> 
   <p><a target="_blank" href="http://twitter.com/ericwastl">The <span class="vanillajs">Vanilla JS</span> team</a> maintains every byte of code in the framework and works hard each day to make sure it is small and intuitive. Who's using <span class="vanillajs">Vanilla JS</span>? Glad you asked! Here are a few:</p> 
   <ul class="flatlist">
    <li>Facebook</li>
    <li>Google</li>
    <li>YouTube</li>
    <li>Yahoo</li>
    <li>Wikipedia</li>
    <li>Windows Live</li>
    <li>Twitter</li>
    <li>Amazon</li>
    <li>LinkedIn</li>
    <li>MSN</li>
   </ul> 
   <ul class="flatlist">
    <li>eBay</li>
    <li>Microsoft</li>
    <li>Tumblr</li>
    <li>Apple</li>
    <li>Pinterest</li>
    <li>PayPal</li>
    <li>Reddit</li>
    <li>Netflix</li>
    <li>Stack Overflow</li>
   </ul> 
   <p>In fact, <span class="vanillajs">Vanilla JS</span> is already used on more websites than jQuery, Prototype JS, MooTools, YUI, and Google Web Toolkit - <em>combined</em>.</p> 
   <h2>Download</h2> 
   <p>Ready to try <span class="vanillajs">Vanilla JS</span>? Choose exactly what you need!</p> 
   <div id="customizer"> 
    <div id="customizer-options">
     <label class="selected"><input type="checkbox" name="core" checked disabled> Core Functionality</label>
    </div> 
    <div id="customizer-estimate">
     <strong>Final size:</strong> 
     <span id="customizer-estimate-uncompressed">0 bytes</span> uncompressed, 
     <span id="customizer-estimate-gzipped">25 bytes</span> gzipped. 
     <label><input type="checkbox" onchange="customizer_hrsize(this.checked);"> Show human-readable sizes</label>
    </div> 
    <div id="customizer-download">
     <form action="/?download" method="post">
      <input type="submit" value="Download">
     </form>
    </div> 
   </div> 
   <h2>Testimonials</h2> 
   <blockquote id="testimonial"></blockquote> 
   <h2>Getting Started</h2> 
   <p>The <span class="vanillajs">Vanilla JS</span> team takes pride in the fact that it is the <strong>most lightweight framework available anywhere</strong>; using our production-quality deployment strategy, your users' browsers will have <span class="vanillajs">Vanilla JS</span> loaded into memory before it even requests your site.</p> 
   <p>To use <span class="vanillajs">Vanilla JS</span>, just put the following code anywhere in your application's HTML:</p> 
   <ol class="sourcecode">
    <li>
     <div>
      &lt;script src="path/to/vanilla.js"&gt;&lt;/script&gt;
     </div></li>
   </ol> 
   <p>When you're ready to move your application to a production deployment, switch to the much faster method:</p> 
   <ol class="sourcecode">
    <li>
     <div>
      &nbsp;
     </div></li>
   </ol> 
   <p>That's right - no code at all. <span class="vanillajs">Vanilla JS</span> is <em>so popular</em> that browsers have been automatically loading it for over a decade.</p> 
   <h2>Speed Comparison</h2> 
   <p>Here are a few examples of just how fast <span class="vanillajs">Vanilla JS</span> really is:</p> 
   <h3><a target="_blank" href="http://jsperf.com/jq-vn-get-id/3">Retrieve DOM element by ID</a></h3> 
   <table class="comparison"> 
    <tbody>
     <tr>
      <td class="corner"></td>
      <th>Code</th>
      <th>ops / sec</th>
     </tr> 
     <tr>
      <th><span class="vanillajs">Vanilla JS</span></th>
      <td class="code">document.getElementById('test-table');</td>
      <td class="ops">
       <div class="container">
        <span class="label">12,137,211 </span>
        <div class="bar" style="width:100.00%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>Dojo</th>
      <td class="code">dojo.byId('test-table');</td>
      <td class="ops">
       <div class="container">
        <span class="label">5,443,343 </span>
        <div class="bar" style="width:44.85%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>Prototype JS</th>
      <td class="code">$('test-table')</td>
      <td class="ops">
       <div class="container">
        <span class="label">2,940,734 </span>
        <div class="bar" style="width:24.23%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>Ext JS</th>
      <td class="code">delete Ext.elCache['test-table']; Ext.get('test-table');</td>
      <td class="ops">
       <div class="container">
        <span class="label">997,562 </span>
        <div class="bar" style="width:8.22%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>jQuery</th>
      <td class="code">$jq('#test-table');</td>
      <td class="ops">
       <div class="container">
        <span class="label">350,557 </span>
        <div class="bar" style="width:2.89%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>YUI</th>
      <td class="code">YAHOO.util.Dom.get('test-table');</td>
      <td class="ops">
       <div class="container">
        <span class="label">326,534 </span>
        <div class="bar" style="width:2.69%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>MooTools</th>
      <td class="code">document.id('test-table');</td>
      <td class="ops">
       <div class="container">
        <span class="label">78,802 </span>
        <div class="bar" style="width:0.65%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
    </tbody>
   </table> 
   <h3><a target="_blank" href="http://jsperf.com/vanillajs-by-tag">Retrieve DOM elements by tag name</a></h3> 
   <table class="comparison"> 
    <tbody>
     <tr>
      <td class="corner"></td>
      <th>Code</th>
      <th>ops / sec</th>
     </tr> 
     <tr>
      <th><span class="vanillajs">Vanilla JS</span></th>
      <td class="code">document.getElementsByTagName("span");</td>
      <td class="ops">
       <div class="container">
        <span class="label">8,280,893</span>
        <div class="bar" style="width:100.00%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>Prototype JS</th>
      <td class="code">Prototype.Selector.select('span', document);</td>
      <td class="ops">
       <div class="container">
        <span class="label">62,872</span>
        <div class="bar" style="width:0.76%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>YUI</th>
      <td class="code">YAHOO.util.Dom.getElementsBy(function(){return true;},'span');</td>
      <td class="ops">
       <div class="container">
        <span class="label">48,545</span>
        <div class="bar" style="width:0.59%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>Ext JS</th>
      <td class="code">Ext.query('span');</td>
      <td class="ops">
       <div class="container">
        <span class="label">46,915</span>
        <div class="bar" style="width:0.57%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>jQuery</th>
      <td class="code">$jq('span');</td>
      <td class="ops">
       <div class="container">
        <span class="label">19,449</span>
        <div class="bar" style="width:0.23%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>Dojo</th>
      <td class="code">dojo.query('span');</td>
      <td class="ops">
       <div class="container">
        <span class="label">10,335</span>
        <div class="bar" style="width:0.12%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
     <tr>
      <th>MooTools</th>
      <td class="code">Slick.search(document, 'span', new Elements);</td>
      <td class="ops">
       <div class="container">
        <span class="label">5,457</span>
        <div class="bar" style="width:0.07%;">
         &nbsp;
        </div>
       </div></td>
     </tr> 
    </tbody>
   </table> 
   <h2>Code Examples</h2> 
   <p>Here are some examples of common tasks in <span class="vanillajs">Vanilla JS</span> and other frameworks:</p> 
   <h3>Fade an element out and then remove it</h3> 
   <table> 
    <tbody>
     <tr> 
      <th><span class="vanillajs">Vanilla JS</span></th>
      <td class="code">var s = document.getElementById('thing').style; s.opacity = 1; (function fade(){(s.opacity-=.1)&lt;0?s.display="none":setTimeout(fade,40)})(); </td>
     </tr> 
     <tr>
      <th>jQuery</th>
      <td class="code">&lt;script src="//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"&gt;&lt;/script&gt; &lt;script&gt; $('#thing').fadeOut(); &lt;/script&gt; </td>
     </tr> 
    </tbody>
   </table> 
   <h3>Make an AJAX call</h3> 
   <table> 
    <tbody>
     <tr> 
      <th><span class="vanillajs">Vanilla JS</span></th>
      <td class="code">var r = new XMLHttpRequest(); r.open("POST", "path/to/api", true); r.onreadystatechange = function () { if (r.readyState != 4 || r.status != 200) return; alert("Success: " + r.responseText); }; r.send("banana=yellow"); </td>
     </tr> 
     <tr>
      <th>jQuery</th>
      <td class="code">&lt;script src="//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"&gt;&lt;/script&gt; &lt;script&gt; $.ajax({ type: 'POST', url: "path/to/api", data: "banana=yellow", success: function (data) { alert("Success: " + data); }, }); &lt;/script&gt; </td>
     </tr> 
    </tbody>
   </table> 
   <h2>Further Reading</h2> 
   <p>For more information about <span class="vanillajs">Vanilla JS</span>:</p> 
   <ul> 
    <li>check out the <span class="vanillajs">Vanilla JS</span> <a target="_blank" href="https://developer.mozilla.org/en-US/docs/JavaScript">documentation</a></li> 
    <li>read some <a target="_blank" href="http://www.amazon.com/s?field-keywords=javascript">books</a> on <span class="vanillajs">Vanilla JS</span></li> 
    <li>or try out one of the many <span class="vanillajs">Vanilla JS</span> <a target="_blank" href="http://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks">plugins</a>.</li> 
   </ul> 
   <p>When powering your applications with <span class="vanillajs">Vanilla JS</span>, feel free to use this handy button! <img src="assets/button.png"></p> 
   <div id="skyscraper"> 
    <script type="text/javascript"><!--
google_ad_client = "ca-pub-9420604735624631";
/* Vanilla JS Wide Skyscraper */
google_ad_slot = "6035719811";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script> 
    <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script> 
   </div> 
  </div>
  <!--/content-->   
 </body>
</html>