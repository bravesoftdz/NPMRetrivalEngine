<html>
 <head> 
  <title> Documentation for math.js Package </title> 
 </head> 
 <body> 
  <center> 
   <h3> Documentation for the math.js library </h3> 
  </center> 
  <hr> 
  <b>Include files:</b> you must include the javascript library "math.js" in the html file, e.g. by 
  <p> &lt;head&gt; <br> &lt;script <br> language="JavaScript" <br> src="http://www.math.tamu.edu/~mpilant/math489/examples/Math-Examples/math.js" &gt; <br> &lt;/script&gt; <br> &lt;/head&gt; </p>
  <p> </p>
  <hr> 
  <b> Internal variables: </b> 
  <ol> 
   <li> <b>var</b> window1; (variable assigned to popup window) </li>
   <li> <b>var</b> popup_window; (if this variable is equal to 1, output is sent to popup window automagically. The default value is 0, that is all html code is sent to document which calls the javascript functions). </li>
  </ol> 
  <hr> 
  <b> Routines: </b> The last argument, "scale", (if present) scales the graphics and or brackets/braces/parentheses by a factor &gt;= 1.0. 
  <br> Note: Javascript is case sensitive... 
  <ol> 
   <li> <b>function</b> Popup() - no arguments. defines window1, writes initial html, and sets popup_window=1. </li>
   <li> <b>function</b> Finish() - writes wrapup html and closes document or window (depending on value of popup_window). </li>
   <li> <b>function</b> Write(str) - writes string str to output (window or document) </li>
   <li> <b>function</b> Superscript(val1,val2) - adds superscript val2 to expression val1 (both must be strings), returns a string. </li>
   <li> <b>function</b> Subscript(val1,val2) - adds subscript val2 to expression val1 (both must be strings), returns a string. </li>
   <li> <b>function</b> Add(expr1, expr2) - returns expr1+expr2 as a string (with explicit addition sign) </li>
   <li> <b>function</b> Combine(expr1, expr2) - returns the expression [expr1 | expr2] as a table (string). </li>
   <li> <b>function</b> Frac(num,denom) - returns the fraction num/denom as a table (string). </li>
   <li> <b>function</b> Exp(val) - returns e<sup>val</sup> as a table (string). </li>
   <li> <b>function</b> LeftBracket(scale) - returns the left bracket "[" as a scaled transparent gif image (inside table element) as a string. </li>
   <li> <b>function</b> LeftBrace(scale) - returns the left bracket "{" as a scaled transparent gif image (inside table element) as a string. </li>
   <li> <b>function</b> LeftParen(scale) - returns the left bracket "(" as a scaled transparent gif image (inside table element) as a string. </li>
   <li> <b>function</b> RightBracket(scale) - returns the left bracket "]" as a scaled transparent gif image (inside table element) as a string. </li>
   <li> <b>function</b> RightBrace(scale) - returns the left bracket "}" as a scaled transparent gif image (inside table element) as a string. </li>
   <li> <b>function</b> RightParen(scale) - returns the left bracket ")" as a scaled transparent gif image (inside table element) as a string. </li>
   <li> <b>function</b> Sum(val,lower,upper,scale) - returns the sum of val (string). </li>
   <li> <b>function</b> LimitSum(val,lower,upper,scale) - returns the sum of val (string) with lower index "lower" and upper index "upper" [scaled]. </li>
   <li> <b>function</b> Integral(val,lower,upper,scale) - returns the integral of val (string) [scaled]. </li>
   <li> <b>function</b> LimitIntegral(val,lower,upper,scale) - returns the integral of val (string) with lower limit "lower" and upper limit "upper" [scaled]. </li>
   <li> <b>function</b> Sqrt(val,scale) - returns the square root of val (string) as a table (string) [scaled] </li>
   <li> <b>function</b> Sin(val,scale) - returns sin of val (string) as a table (string) [scaled]. </li>
   <li> <b>function</b> Cos(val,scale) - returns cos of val (string) as a table (string) [scaled]. </li>
   <li> <b>function</b> Tan(val,scale) - returns tan of val (string) as a table (string) [scaled]. </li>
   <li> <b>function</b> Sec(val,scale) - returns sec of val (string) as a table (string) [scaled]. </li>
   <li> <b>function</b> Csc(val,scale) - returns csc of val (string) as a table (string) [scaled]. </li>
   <li> <b>function</b> Cot(val,scale) - returns cot of val (string) as a table (string) [scaled]. 
    <ol> 
     <hr>   
    </ol></li>
  </ol>
 </body>
</html>