<!doctype html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="https://www.facebook.com/2008/fbml" itemscope itemtype="http://schema.org/Product" ng-app="hub">
 <head prefix="og: http://ogp.me/ns# nodejsexpressdemo: http://ogp.me/ns/apps/nodejsexpressdemo#">
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="readme-deploy" content="cc6c0184baf8865c9d7f25ae372295984ae888da">
  <title>Recurly.js Overview · Recurly Developer Hub</title>
  <meta http-equiv="Content-type" content="text/html;charset=UTF-8">
  <meta name="description" content="Recurly Developer Hub">
  <link href="https://files.readme.io/kcLSvd7SMGU3jWII8FOg_Recurly_R_Logomark_Purple@2x.png" rel="shortcut icon" type="image/x-icon">
  <meta property="og:title" content="Recurly.js Overview · Recurly Developer Hub">
  <meta property="og:description" content="Recurly Developer Hub">
  <!-- Removed due to XSS-->
  <!--meta(property="og:url", content=og('url'))-->
  <meta property="og:image" content="https://files.readme.io/UktqeRwqSoKeDZtxK7gm_recurly_developers_logo.png">
  <meta property="og:site_name" content="Recurly Developer Hub">
  <meta id="config-proxy-url" content="https://proxy.readme.io/proxy">
  <link rel="canonical" href="https://dev.recurly.com/docs/recurlyjs">
  <link rel="alternate" type="application/rss+xml" title="RSS Feed for Recurly Developer Hub" href="/blog.rss">
  <!-- Application styles-->
  <link rel="stylesheet" href="https://d2sl9eawlu179j.cloudfront.net/css/bundle-hub.css?1506643237790">
  <!--if lt IE 9script(src="http://html5shim.googlecode.com/svn/trunk/html5.js")
-->
  <script>var is_hub = true;
var is_hub_edit = false;
var is_hub2 = false;

</script>
  <script src="https://d2sl9eawlu179j.cloudfront.net/js/bundle-hub1.js?1506643237790"></script>
  <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-52479696-1', 'auto');
ga('send', 'pageview');
</script>
  <script>ga('create', 'UA-10003220-13', 'auto', {'name': 'custom'});
ga('custom.send', 'pageview');
</script>
  <!-- Google Tag Manager --> 
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-P8SKV3B');</script> 
  <!-- End Google Tag Manager --> 
  <meta name="google-site-verification" content="sG8AdEuNVeHvLg7vOG9fRj2mIGw0jWHLa5MzHQHUgGo"> 
  <!-- Fullstory Tracking Code --> 
  <script>
window['_fs_debug'] = false;
window['_fs_host'] = 'www.fullstory.com';
window['_fs_org'] = '2DJNH';
window['_fs_namespace'] = 'FS';
(function(m,n,e,t,l,o,g,y){
    if (e in m && m.console && m.console.log) { m.console.log('FullStory namespace conflict. Please set window["_fs_namespace"].'); return;}
    g=m[e]=function(a,b){g.q?g.q.push([a,b]):g._api(a,b);};g.q=[];
    o=n.createElement(t);o.async=1;o.src='https://'+_fs_host+'/s/fs.js';
    y=n.getElementsByTagName(t)[0];y.parentNode.insertBefore(o,y);
    g.identify=function(i,v){g(l,{uid:i});if(v)g(l,v)};g.setUserVars=function(v){g(l,v)};
    g.identifyAccount=function(i,v){o='account';v=v||{};v.acctId=i;g(o,v)};
    g.clearUserCookie=function(c,d,i){if(!c || document.cookie.match('fs_uid=[`;`]*`[`;`]*`[`;`]*`')){
    d=n.domain;while(1){n.cookie='fs_uid=;domain='+d+
    ';path=/;expires='+new Date(0).toUTCString();i=d.indexOf('.');if(i<0)break;d=d.slice(i+1)}}};
})(window,document,window['_fs_namespace'],'script','user');
</script>
  <script src="//use.typekit.net/bxl7htv.js"></script>
  <script>try{Typekit.load();}catch(e){}
</script>
  <style>.theme-line header {  border-bottom-color: #38383a;}.theme-line header a.btn {  background-color: #38383a;}.theme-line header a.btn:hover {  background-color: #060606;}.theme-line header .navbar-nav a:hover ,.theme-line header .navbar-nav .open > a {  color: #38383a;}.theme-line header .navbar-nav .tt-cursor {  background-color: #38383a;}.theme-line .navbar-nav .active a {  font-weight: bold;  color: #723080;}.theme-line .navbar-nav .active a:hover {  color: #301436;}.theme-line .main-links .links a:hover {  color: #723080;}.theme-line .main-content a {  color: #723080;}.theme-line .main-content a:hover {  color: #301436;}.theme-line .sidebar-nav ul li a.active:before {  background-color: #723080;}.theme-line .sidebar-nav ul li a.active {  color: #723080;}.theme-line .sidebar-nav ul li a:hover,.theme-line .sidebar-nav ul li a.active:hover {  color: #301436;}.theme-line .btn-primary {  background-color: #723080;}.theme-line .btn-primary:hover {  background-color: #301436;}.theme-line .main-content .nav-horizontal a.active {  border-color: #723080;  color: #723080;}.theme-line .main-content .nav-horizontal a:hover {  color: #301436;}.theme-line .main-content .nav-horizontal a.active:hover {  border-color: #301436;}.theme-line header .navbar-nav a.active ,.theme-line #versions-list li a:hover strong,.theme-line #versions-list li a.active .current,.theme-line #versions-list li a:active .current {  color: #723080;}.theme-line.body-threes .section-right .threes-nav .btn-default:hover,.theme-line.page-docs.body-threes .section-right .threes-nav .pull-right a:hover {  color: #723080;  border-color: #723080;}.theme-solid header {  background-color: #38383a;}.theme-solid.header-custom header a.btn {  background-color: #060606;}.theme-solid.header-custom header a.btn:hover {  background-color: #000000;}.theme-solid header .navbar-nav .dropdown-menu a:hover {  color: #723080;}.theme-line.lumosity-light header .navbar-nav a:hover,.theme-line.lumosity-light header .navbar-nav .open > a {  color: #723080;}.theme-line.lumosity-light header a.btn {  background-color: #723080;}.theme-line.lumosity-light header a.btn:hover {  background-color: #301436;}.theme-solid .main-links .links a:hover {  color: #723080;}.theme-solid .main-content a {  color: #723080;}.theme-solid .main-content a:hover {  color: #301436;}.theme-solid .sidebar-nav ul li a.active:before {  background-color: #723080;}.theme-solid .sidebar-nav ul li a.active {  color: #723080;}.theme-solid .sidebar-nav ul li a:hover,.theme-solid .sidebar-nav ul li a.active:hover {  color: #301436;}.theme-solid .btn-primary {  background-color: #723080;}.theme-solid .btn-primary:hover {  background-color: #301436;}.theme-solid .main-content .nav-horizontal a.active {  border-color: #723080;  color: #723080;}.theme-solid .main-content .nav-horizontal a:hover {  color: #301436;}.theme-solid .main-content .nav-horizontal a.active:hover {  border-color: #301436;}.theme-solid header .navbar-nav a.active ,.theme-solid #versions-list li a:hover strong,.theme-solid #versions-list li a.active .current,.theme-solid #versions-list li a:active .current {  color: #723080;}.theme-solid.body-threes .section-right .threes-nav .btn-default:hover,.theme-solid.page-docs.body-threes .section-right .threes-nav .pull-right a:hover {  color: #723080;  border-color: #723080;}.theme-solid.header-gradient header {  background: -moz-linear-gradient(top, #38383a, #121213);  background: -webkit-gradient(linear, left top, #38383a, #121213);  background: -webkit-linear-gradient(top, #38383a, #121213);  background: linear-gradient(to bottom, #38383a, #121213);}.theme-solid.header-custom .header {  background-image: url("https://files.readme.io/LAU3A8AuT1iIVif5T9Ga_dev_bg_iso2.png");  background-position: center center;}body {  font-family:proxima-nova;}h1, h2, h3, h4, h5, h6 {  font-family:proxima-nova;}.submit-vote.submit-vote-parent.voted a.submit-vote-button,.submit-vote.submit-vote-parent a.submit-vote-button:hover {  background-color: #723080;}div.submit-vote.submit-vote-parent.voted a.submit-vote-button:hover {  background-color: #301436;}a,.link .title {  color: #723080;}a:hover,.link:hover .title {  color: #301436;}.header h1.navbar-brand a {  background-image: url("https://files.readme.io/E74lzOrSYur6tzd9AX5g_recurly_developers_logo.png")}.header h1.navbar-brand {  width: 166px;}
</style>
  <style>/* DEFAULT Readme.io CSS: */

h3 {
  font-weight: 400;
}

hr {
  border-top: 0;
}

.page-docs.body-threes .section-right .docs-page .docs-content h1 {
  font-weight: 600;
}

.header h1.navbar-brand {
  width: 186px;
  height: 45px;
  margin-top: 7px;
  margin-right: 20px;
}

.header h1.navbar-brand a {
  background-position: center left;
}

.header .searchbox {
  margin-left: 15px;
}

.nav {
  padding: 4px 0 0 0;
}

.navbar-nav a {
  color: rgba(255,255,255,0.7);
  transition: color 0.3s;

}

.navbar-nav > li {
  text-transform: uppercase;
  font-size: 14px;
  font-weight: 600;
}

.sidebar-nav {
    overflow: auto;
}

.header #jumbotron {
  margin: 100px 0px 100px;
  text-align: left;
}

.header #jumbotron h2 {
  font-size: 50px;
  font-weight: 500;
}

.header #jumbotron p {
  font-size: 1.3em;
  line-height: 1.5em;
  color: #ffffff;
}

.header #jumbotron .col-sm-offset-2
{
  margin-left: 0;
}

.header #jumbotron .btn {
  text-transform: uppercase;
  background-color: #723080;
  padding: 1.6rem 3rem 1.4rem;
  font-weight: 600;
  border-radius: 3px;
}

.header #jumbotron .btn:hover {
  background-color: #51225b;
}

.container #category-columns
{
  margin: 50px 0 0;
}

.block-display-api-header h2 {
  margin-top: 70px;
}

.btn {
  transition: background-color .25s;
}

.page-docs.body-threes .section-right .threes-nav .pull-right a {
  text-decoration: none;
}

.docs-content a {
  text-decoration: underline;
}


body.layout.page-home .pg-type
{
  display: none;
}

body.layout.page-home.body-threes.theme-solid #category-columns h4
{
  text-transform: uppercase;
  font-weight: 600;
  font-size: 18px;
  color: #545457;
}

body.layout.page-home.body-threes.theme-solid #category-columns ul li a
{
  font-size: 14px;
}

body.layout.page-home.body-threes.theme-solid #category-columns ul
{
  margin-bottom: 30px;
}

/* Tag Colors*/

.pg-type.type-get {
  background-color: #3da07b;
}

.pg-type.type-post {
  background-color: #2676a5;
}

.pg-type.type-put {
  background-color: #8e5999;
}

.pg-type.type-delete {
  background-color: #e87477;
}

/* end tag colors */

#category-columns a {
  color: #545457;
}

#category-columns a:hover {
  color: #723080;
}

/* Right Nav Source Code Section */

.page-docs.body-threes .section-right {
  background-color: #2a2a2b;
}


/* end source code section */
.block-show-code .code-tabs .tab, .magic-block-code .code-tabs .tab {
    margin-left: 5px;
    margin-bottom: 4px;
    padding-top: 3px;
}

.tab.on {
    background-color: #4a4a4a;
    border-radius: 3px;
}

.tab.off {
    background-color: #2a2a2b;
  	border-radius: 3px;
}

.block-show-code .code-tabs .tab.off a, .magic-block-code .code-tabs .tab.off a {
    color: #fff;
}

.cm-s-neo .cm-node, .cm-s-neo .cm-tag {
    color: #E35256;
}

.cm-s-neo span.cm-attribute {
    color: #62B395;
}

.cm-s-neo .cm-variable, .cm-s-neo .cm-qualifier {
    color: #62B395;
}

.cm-s-neo .cm-string {
    color: #E9A723;
}

.cm-s-neo .cm-keyword, .cm-s-neo .cm-property {
    color: #5191B7;
}

.cm-s-neo .cm-atom, .cm-s-neo .cm-number {
    color: #75438a;
}

.cm-s-neo .cm-atom, .cm-s-neo .cm-number {
    color: #B896BE;
}

.block-show-code .code-tabs .tab.on a, .magic-block-code .code-tabs .tab.on a {
    color: #fff;
    text-decoration: none;
}

.block-show-code .code-tabs .tab.off a, .magic-block-code .code-tabs .tab.off a {
    text-decoration: none;
}</style>
 </head>
 <body ng-controller="Root" class="layout page-docs body-threes theme-solid header-custom header-bg-size-cover header-bg-pos-tc header-overlay-triangles lumosity-normal undefined theme-threes">
  <div class="wrapper">
   <header id="header" class="header">
    <div class="container">
     <h1 class="navbar-brand"><a href="https://recurly.com">Recurly Developer Hub</a></h1>
     <div class="navbar-collapse collapse">
      <div id="project-info">
       {"id":"555fbba928249c1900618a82","name":"Recurly Developer Hub","subdomain":"recurly","versions":[{"_id":"555fbba928249c1900618a85","releaseDate":"2015-05-22T23:28:41.830Z","is_deprecated":false,"is_hidden":true,"is_beta":false,"is_stable":false,"codename":"","version_clean":"1.0.0","version":"1.0"},{"_id":"55c8bb66229b981900ed5f29","releaseDate":"2015-08-10T14:55:34.510Z","is_deprecated":false,"is_hidden":true,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.0.0-aug10","version":"2.0-aug10"},{"_id":"55a94c1d02becf2d007aac7b","releaseDate":"2015-07-17T18:40:29.953Z","is_deprecated":false,"is_hidden":true,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.0.0-july17","version":"2.0-july17"},{"_id":"56130c94d2b2370d0096b8a7","releaseDate":"2015-10-05T23:49:40.584Z","is_deprecated":false,"is_hidden":true,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.0.0-oct5","version":"2.0-oct5"},{"_id":"5595cb29d4c23b0d00adf6e3","releaseDate":"2015-07-02T23:37:13.529Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.0.0","version":"2.0"},{"_id":"5788211e14b5952200e432a7","releaseDate":"2016-07-14T23:32:46.498Z","is_deprecated":false,"is_hidden":true,"is_beta":false,"is_stable":false,"codename":"2016-07-14","version_clean":"2.1.0-2016-07-14","version":"2.1-2016-07-14"},{"_id":"56fd7e6b5a08190e00084f45","releaseDate":"2016-03-31T19:45:47.017Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.1.0","version":"2.1"},{"_id":"578820ce14b5952200e4321a","releaseDate":"2016-07-14T23:31:26.298Z","is_deprecated":false,"is_hidden":true,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.2.0-2016-07-14","version":"2.2-2016-07-14"},{"_id":"57803084827bd50e006b0457","releaseDate":"2016-07-08T23:00:20.243Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.2.0","version":"2.2"},{"_id":"57a22c2dd778850e0047e310","releaseDate":"2016-08-03T17:38:53.421Z","is_deprecated":false,"is_hidden":true,"is_beta":false,"is_stable":false,"codename":"2016-08-03","version_clean":"2.3.0-2016-08-03","version":"2.3-2016-08-03"},{"_id":"578e7c59b434c30e0035bf25","releaseDate":"2016-07-19T19:15:37.356Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.3.0","version":"2.3"},{"_id":"57a22c4bcd51b22d00f623a5","releaseDate":"2016-08-03T17:39:23.456Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.4.0","version":"2.4"},{"_id":"5859a01eb32b9419009a9d5d","releaseDate":"2016-12-20T21:18:22.764Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.5.0","version":"2.5"},{"_id":"5919d93785b2570f00e41c39","releaseDate":"2017-05-15T16:37:11.228Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":false,"codename":"","version_clean":"2.6.0","version":"2.6"},{"_id":"59557419c0a2ba001bf5e1a3","releaseDate":"2017-06-29T21:41:45.458Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"2.7.0","version":"2.7"}],"doc_slug":"","current_version":{"version_clean":"2.7.0","version":"2.7"},"oauth":{"enabled":false},"api":{"name":"","url":"https://:subdomain.recurly.com/v2","contenttype":"form","auth":"basic","explorer":false,"proxyEnabled":true,"jwt":false,"authextra":[],"headers":[{"_id":"55942ccc5c9eaa2300a862ac","value":"application/xml; charset=utf-8","key":"Content-Type"},{"_id":"55942ccc5c9eaa2300a862ab","value":"application/xml","key":"Accept"},{"_id":"578e7bdb7d6eeb0e004fb788","value":"2.4","key":"X-Api-Version"}],"object_definitions":[]},"apiAlt":[{"_id":"558209c4b806360d00244610","object_definitions":[],"headers":[],"authextra":[],"jwt":false,"proxyEnabled":true,"explorer":true,"auth":"","contenttype":"form","url":"","name":"New API Settings"}],"plan_details":{"name":"Business","is_active":true,"cost":199,"versions":10000,"custom_domain":true,"custom_pages":true,"whitelabel":true,"errors":true,"password":true,"landing_page":true,"themebuilder":true,"stylesheet":true,"javascript":true,"html":true,"extra_html":true,"admins":true,"apps":true},"apps":{"enabled":false},"intercom":"","intercom_secure_emailonly":false,"flags":{"allow_hub2":false,"hub2":false,"migrationRun":true,"oauth":false,"swagger":true,"correctnewlines":false,"speedyRender":true,"allowXFrame":true,"jwt":false,"hideGoogleAnalytics":false,"stripe":false,"migrationSwaggerRun":true,"ssl":true},"asset_base_url":""}
      </div>
      <ul class="nav navbar-nav">
       <li><a id="versions" href="" data-toggle="dropdown"> v2.7 
         <div class="fa fa-caret-down"></div></a>
        <ul role="menu" aria-labelledby="versions" class="dropdown-menu">
         <li role="presentation" ng-repeat="v in project.versions | filter:(!u.user.is_admin ? {is_hidden: false} : {}) | limitTo: 10"><a role="menuitem" tabindex="-1" href="{{url('v' + v.version)}}" ng-class="{active: v.version_clean == project.current_version.version_clean}">v{{v.version}}<span ng-show="v.is_stable" class="stable">latest</span><span ng-show="v.is_beta" class="beta">beta</span><span ng-show="v.is_hidden" class="private">private</span><span ng-show="v.is_deprecated" class="deprecated">deprecated</span></a></li>
         <li role="presentation" class="divider"></li>
         <li role="presentation"><a href="/versions">View all versions</a></li>
        </ul></li>
      </ul>
      <ul class="nav navbar-nav pull-right">
       <li class="active"><a href="/docs" title="Documentation">Developer Hub</a></li>
       <li><a href="https://docs.recurly.com">Documentation</a></li>
       <li><a href="https://support.recurly.com">Support</a></li>
       <li><a href="https://recurly.com/contact-form/">Contact</a></li>
       <li><a href="https://recurly.com/jobs/">Jobs</a></li>
       <li>
        <div class="searchbox">
         <div class="fa fa-search"></div>
         <input type="text" placeholder="Search" class="typeahead">
        </div></li>
      </ul>
     </div>
    </div>
   </header>
   <div class="container body-container">
    <div class="main-content">
     <div class="main-head">
      <div id="sidebar">
       <div sticky="0" class="sidebar-nav">
        <div class="sidebar-inside">
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="getting-started">
            <div class="fa fa-caret-right fa-right"></div>Overview</a></h4>
          <ul>
           <li><a href="/docs/getting-started" data-sidebar="getting-started" class="sidebar-link"><span>Authentication</span></a></li>
           <li><a href="/docs/versioning" data-sidebar="versioning" class="sidebar-link"><span>API Versioning</span></a></li>
           <li><a href="/docs/pagination" data-sidebar="pagination" class="sidebar-link"><span>Pagination</span></a></li>
           <li><a href="/docs/rate-limits" data-sidebar="rate-limits" class="sidebar-link"><span>Rate Limits</span></a></li>
           <li><a href="/docs/welcome" data-sidebar="welcome" class="sidebar-link"><span>HTTP Status Codes</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="integrations">
            <div class="fa fa-caret-right fa-right"></div>Integrations</a></h4>
          <ul>
           <li><a href="/docs/integrations" data-sidebar="integrations" class="sidebar-link"><span>Integrations</span></a></li>
           <li><a href="https://dev.recurly.com/page/webhooks" data-sidebar="webhooks-api" target="_blank" class="sidebar-link"><span>Webhooks API</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://dev.recurly.com/page/customer-imports" data-sidebar="customer-imports" target="_blank" class="sidebar-link"><span>Customer Imports</span>
             <div class="fa fa-external-link-square external"></div></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="client-libraries">
            <div class="fa fa-caret-right fa-right"></div>Client Libraries</a></h4>
          <ul>
           <li><a href="/docs/client-libraries" data-sidebar="client-libraries" class="sidebar-link"><span>Client Libraries</span></a></li>
           <li><a href="https://dev.recurly.com/page/php" data-sidebar="php" target="_blank" class="sidebar-link"><span>PHP</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://dev.recurly.com/page/ruby" data-sidebar="ruby" target="_blank" class="sidebar-link"><span>Ruby</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://dev.recurly.com/page/python" data-sidebar="python" target="_blank" class="sidebar-link"><span>Python</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://dev.recurly.com/page/net" data-sidebar="net" target="_blank" class="sidebar-link"><span>.NET</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="http://cocoadocs.org/docsets/RecurlySDK" data-sidebar="ios" target="_blank" class="sidebar-link"><span>iOS</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://github.com/recurly/recurly-client-android" data-sidebar="andriod" target="_blank" class="sidebar-link"><span>Android</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://github.com/killbilling/recurly-java-library" data-sidebar="java-unofficial" target="_blank" class="sidebar-link"><span>Java</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://github.com/blacklightcms/go-recurly" data-sidebar="go-unofficial" target="_blank" class="sidebar-link"><span>Go (Unofficial)</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://github.com/cgerrior/node-recurly" data-sidebar="nodejs-unofficial" target="_self" class="sidebar-link"><span>Node.js (Unofficial)</span>
             <div class="fa fa-external-link-square external"></div></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="recurlyjs">
            <div class="fa fa-caret-right fa-right"></div>Recurly.JS</a></h4>
          <ul>
           <li><a href="/docs/recurlyjs" data-sidebar="recurlyjs" class="active sidebar-link"><span>Recurly.js Overview</span></a></li>
           <li><a href="/docs/how-it-works" data-sidebar="how-it-works" class="sidebar-link"><span>How it Works</span></a></li>
           <li><a href="/docs/getting-started-1" data-sidebar="getting-started-1" class="sidebar-link"><span>Getting Started</span></a></li>
           <li><a href="/docs/getting-a-token" data-sidebar="getting-a-token" class="sidebar-link"><span>Getting a Token</span></a></li>
           <li><a href="/docs/using-a-token" data-sidebar="using-a-token" class="sidebar-link"><span>Using a Token</span></a></li>
           <li><a href="/docs/events" data-sidebar="events" class="sidebar-link"><span>Events</span></a></li>
           <li><a href="/docs/paypal" data-sidebar="paypal" class="sidebar-link"><span>PayPal</span></a></li>
           <li><a href="/docs/pricing" data-sidebar="pricing" class="sidebar-link"><span>Pricing</span></a></li>
           <li><a href="/docs/validation" data-sidebar="validation" class="sidebar-link"><span>Validation</span></a></li>
           <li><a href="/docs/errors-1" data-sidebar="errors-1" class="sidebar-link"><span>Errors</span></a></li>
           <li><a href="/docs/examples" data-sidebar="examples" class="sidebar-link"><span>Examples</span></a></li>
           <li><a href="/docs/support" data-sidebar="support" class="sidebar-link"><span>Support</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="account-object">
            <div class="fa fa-caret-right fa-right"></div>Accounts</a></h4>
          <ul>
           <li><a href="/docs/account-object" data-sidebar="account-object" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Account Object</span></a></li>
           <li><a href="/docs/list-accounts" data-sidebar="list-accounts" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Accounts</span></a></li>
           <li><a href="/docs/create-an-account" data-sidebar="create-an-account" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Account</span></a></li>
           <li><a href="/docs/get-account" data-sidebar="get-account" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Account</span></a></li>
           <li><a href="/docs/update-account" data-sidebar="update-account" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Account</span></a></li>
           <li><a href="/docs/close-account" data-sidebar="close-account" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Close Account</span></a></li>
           <li><a href="/docs/reopen-account" data-sidebar="reopen-account" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Reopen Account</span></a></li>
           <li><a href="/docs/lookup-account-balance" data-sidebar="lookup-account-balance" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Account Balance</span></a></li>
           <li><a href="/docs/list-account-notes" data-sidebar="list-account-notes" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Account Notes</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="list-accounts-shipping-address">
            <div class="fa fa-caret-right fa-right"></div>Shipping Addresses</a></h4>
          <ul>
           <li><a href="/docs/list-accounts-shipping-address" data-sidebar="list-accounts-shipping-address" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Account's Shipping Address</span></a></li>
           <li><a href="/docs/lookup-shipping-address" data-sidebar="lookup-shipping-address" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Shipping Address</span></a></li>
           <li><a href="/docs/create-shipping-address-on-an-account" data-sidebar="create-shipping-address-on-an-account" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Shipping Address</span></a></li>
           <li><a href="/docs/edit-shipping-address-on-an-existing-account" data-sidebar="edit-shipping-address-on-an-existing-account" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Shipping Address</span></a></li>
           <li><a href="/docs/delete-shipping-address-on-an-existing-account" data-sidebar="delete-shipping-address-on-an-existing-account" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Delete Shipping Address</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="create-account-acquisition">
            <div class="fa fa-caret-right fa-right"></div>Account Acquisition</a></h4>
          <ul>
           <li><a href="/docs/create-account-acquisition" data-sidebar="create-account-acquisition" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Account Acquisition</span></a></li>
           <li><a href="/docs/lookup-account-acquisition" data-sidebar="lookup-account-acquisition" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Account Acquisition</span></a></li>
           <li><a href="/docs/update-account-acquisition" data-sidebar="update-account-acquisition" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Account Acquisition</span></a></li>
           <li><a href="/docs/clear-account-acquisition" data-sidebar="clear-account-acquisition" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Clear Account Acquisition</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="adjustment-object">
            <div class="fa fa-caret-right fa-right"></div>Adjustments</a></h4>
          <ul>
           <li><a href="/docs/adjustment-object" data-sidebar="adjustment-object" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Adjustment Object</span></a></li>
           <li><a href="/docs/list-an-accounts-adjustments" data-sidebar="list-an-accounts-adjustments" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Account's Adjustments</span></a></li>
           <li><a href="/docs/create-a-charge" data-sidebar="create-a-charge" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Charge</span></a></li>
           <li><a href="/docs/create-a-credit" data-sidebar="create-a-credit" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Credit</span></a></li>
           <li><a href="/docs/get-an-adjustment" data-sidebar="get-an-adjustment" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Adjustment</span></a></li>
           <li><a href="/docs/delete-an-adjustment" data-sidebar="delete-an-adjustment" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Delete Adjustment</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="create-an-accounts-billing-info-token">
            <div class="fa fa-caret-right fa-right"></div>Billing Info</a></h4>
          <ul>
           <li><a href="/docs/create-an-accounts-billing-info-token" data-sidebar="create-an-accounts-billing-info-token" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Account's Billing Info (Token)</span></a></li>
           <li><a href="/docs/create-an-accounts-billing-info-credit-card" data-sidebar="create-an-accounts-billing-info-credit-card" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Account's Billing Info (Credit Card)</span></a></li>
           <li><a href="/docs/create-an-accounts-billing-info-bank-account" data-sidebar="create-an-accounts-billing-info-bank-account" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Account's Billing Info (Bank Account)</span></a></li>
           <li><a href="/docs/create-an-accounts-billing-info-using-external-token" data-sidebar="create-an-accounts-billing-info-using-external-token" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Account's Billing Info (External Token)</span></a></li>
           <li><a href="/docs/lookup-an-accounts-billing-info" data-sidebar="lookup-an-accounts-billing-info" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Account's Billing Info</span></a></li>
           <li><a href="/docs/update-an-accounts-billing-info-token" data-sidebar="update-an-accounts-billing-info-token" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Account's Billing Info (Token)</span></a></li>
           <li><a href="/docs/update-an-accounts-billing-info-credit-card" data-sidebar="update-an-accounts-billing-info-credit-card" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Account's Billing Info (Credit Card)</span></a></li>
           <li><a href="/docs/update-an-accounts-billing-info-bank-account" data-sidebar="update-an-accounts-billing-info-bank-account" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Account's Billing Info (Bank Account)</span></a></li>
           <li><a href="/docs/update-an-accounts-billing-info-using-external-token" data-sidebar="update-an-accounts-billing-info-using-external-token" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Account's Billing Info (using external token)</span></a></li>
           <li><a href="/docs/clear-an-accounts-billing-info" data-sidebar="clear-an-accounts-billing-info" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Clear Account's Billing Info</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="list-active-coupons">
            <div class="fa fa-caret-right fa-right"></div>Coupons</a></h4>
          <ul>
           <li><a href="/docs/list-active-coupons" data-sidebar="list-active-coupons" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Coupons</span></a></li>
           <li><a href="/docs/create-coupon" data-sidebar="create-coupon" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Coupon</span></a></li>
           <li><a href="/docs/lookup-a-coupon" data-sidebar="lookup-a-coupon" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Coupon</span></a></li>
           <li><a href="/docs/generate-unique-codes" data-sidebar="generate-unique-codes" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Generate Unique Codes</span></a></li>
           <li><a href="/docs/deactivate-coupon" data-sidebar="deactivate-coupon" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Expire Coupon</span></a></li>
           <li><a href="/docs/edit-coupon" data-sidebar="edit-coupon" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Edit Coupon</span></a></li>
           <li><a href="/docs/restore-coupon" data-sidebar="restore-coupon" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Restore Coupon</span></a></li>
           <li><a href="/docs/list-unique-coupon-codes" data-sidebar="list-unique-coupon-codes" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Unique Coupon Codes</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="coupon-redemption-object">
            <div class="fa fa-caret-right fa-right"></div>Coupon Redemptions</a></h4>
          <ul>
           <li><a href="/docs/coupon-redemption-object" data-sidebar="coupon-redemption-object" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Coupon Redemption Object</span></a></li>
           <li><a href="/docs/lookup-a-coupon-redemption-on-an-account" data-sidebar="lookup-a-coupon-redemption-on-an-account" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Account's Coupon Redemptions</span></a></li>
           <li><a href="/docs/lookup-a-coupon-redemption-on-an-invoice" data-sidebar="lookup-a-coupon-redemption-on-an-invoice" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Invoice's Coupon Redemptions</span></a></li>
           <li><a href="/docs/lookup-a-coupon-redemption-on-a-subscription" data-sidebar="lookup-a-coupon-redemption-on-a-subscription" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Subscription's Coupon Redemption</span></a></li>
           <li><a href="/docs/redeem-a-coupon-before-or-after-a-subscription" data-sidebar="redeem-a-coupon-before-or-after-a-subscription" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Redeem Coupon on Account</span></a></li>
           <li><a href="/docs/remove-a-coupon-from-an-account" data-sidebar="remove-a-coupon-from-an-account" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Remove Coupon Redemption from Account</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="gift-card-object">
            <div class="fa fa-caret-right fa-right"></div>Gift Cards</a></h4>
          <ul>
           <li><a href="/docs/gift-card-object" data-sidebar="gift-card-object" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Gift Card Object</span></a></li>
           <li><a href="/docs/list-gift-cards" data-sidebar="list-gift-cards" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Gift Cards</span></a></li>
           <li><a href="/docs/preview-gift-card" data-sidebar="preview-gift-card" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Preview Gift Card</span></a></li>
           <li><a href="/docs/create-gift-card" data-sidebar="create-gift-card" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Gift Card</span></a></li>
           <li><a href="/docs/lookup-a-gift-card" data-sidebar="lookup-a-gift-card" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Gift Card</span></a></li>
           <li><a href="/docs/redeem-gift-card" data-sidebar="redeem-gift-card" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Redeem Gift Card on Account</span></a></li>
           <li><a href="/docs/preview-subscription-with-gift-card-redemption" data-sidebar="preview-subscription-with-gift-card-redemption" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Preview Subscription with Gift Card Redemption</span></a></li>
           <li><a href="/docs/redeem-gift-card-with-subscription" data-sidebar="redeem-gift-card-with-subscription" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Subscription with Gift Card Redemption</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="list-invoices">
            <div class="fa fa-caret-right fa-right"></div>Invoices</a></h4>
          <ul>
           <li><a href="/docs/list-invoices" data-sidebar="list-invoices" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Invoices</span></a></li>
           <li><a href="/docs/list-an-accounts-invoices" data-sidebar="list-an-accounts-invoices" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Account's Invoices</span></a></li>
           <li><a href="/docs/preview-an-invoice" data-sidebar="preview-an-invoice" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Preview Invoice</span></a></li>
           <li><a href="/docs/post-an-invoice-invoice-pending-charges-on-an-acco" data-sidebar="post-an-invoice-invoice-pending-charges-on-an-acco" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Post Invoice: Invoice Pending Charges on Account</span></a></li>
           <li><a href="/docs/lookup-invoice-details" data-sidebar="lookup-invoice-details" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Invoice</span></a></li>
           <li><a href="/docs/retrieve-a-pdf-invoice" data-sidebar="retrieve-a-pdf-invoice" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Retrieve PDF Invoice</span></a></li>
           <li><a href="/docs/mark-an-invoice-as-paid-successfully" data-sidebar="mark-an-invoice-as-paid-successfully" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Mark Invoice as Paid Successfully</span></a></li>
           <li><a href="/docs/mark-an-invoice-as-failed-collection" data-sidebar="mark-an-invoice-as-failed-collection" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Mark Invoice as Failed Collection</span></a></li>
           <li><a href="/docs/line-item-refunds" data-sidebar="line-item-refunds" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Refund/Void Line Items</span></a></li>
           <li><a href="/docs/open-amount-refunds" data-sidebar="open-amount-refunds" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Refund/Void Open Amount</span></a></li>
           <li><a href="/docs/enter-an-offline-payment-for-a-manual-invoice" data-sidebar="enter-an-offline-payment-for-a-manual-invoice" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Enter Offline Payment for Manual Invoice</span></a></li>
           <li><a href="/docs/collect-an-invoice" data-sidebar="collect-an-invoice" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Collect an Invoice</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="list-plans">
            <div class="fa fa-caret-right fa-right"></div>Plans</a></h4>
          <ul>
           <li><a href="/docs/list-plans" data-sidebar="list-plans" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Plans</span></a></li>
           <li><a href="/docs/create-plan" data-sidebar="create-plan" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Plan</span></a></li>
           <li><a href="/docs/lookup-plan-details" data-sidebar="lookup-plan-details" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Plan</span></a></li>
           <li><a href="/docs/update-plan" data-sidebar="update-plan" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Plan</span></a></li>
           <li><a href="/docs/delete-plan" data-sidebar="delete-plan" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Delete Plan</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="plan-add-ons-object">
            <div class="fa fa-caret-right fa-right"></div>Plan Add-Ons</a></h4>
          <ul>
           <li><a href="/docs/plan-add-ons-object" data-sidebar="plan-add-ons-object" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Plan Add-On Object</span></a></li>
           <li><a href="/docs/list-add-ons-for-a-plan" data-sidebar="list-add-ons-for-a-plan" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Plan's Add-Ons</span></a></li>
           <li><a href="/docs/create-an-add-on" data-sidebar="create-an-add-on" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Plan Add-On</span></a></li>
           <li><a href="/docs/lookup-an-add-on" data-sidebar="lookup-an-add-on" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Plan Add-On</span></a></li>
           <li><a href="/docs/update-an-add-on" data-sidebar="update-an-add-on" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Plan Add-On</span></a></li>
           <li><a href="/docs/delete-an-add-on" data-sidebar="delete-an-add-on" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Delete Plan Add-On</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="measured-unit-object">
            <div class="fa fa-caret-right fa-right"></div>Measured Units</a></h4>
          <ul>
           <li><a href="/docs/measured-unit-object" data-sidebar="measured-unit-object" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Measured Unit Object</span></a></li>
           <li><a href="/docs/list-measured-units" data-sidebar="list-measured-units" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Measured Units</span></a></li>
           <li><a href="/docs/create-measured-unit" data-sidebar="create-measured-unit" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Measured Unit</span></a></li>
           <li><a href="/docs/lookup-measured-unit" data-sidebar="lookup-measured-unit" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Measured Unit</span></a></li>
           <li><a href="/docs/update-measured-unit" data-sidebar="update-measured-unit" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Measured Unit</span></a></li>
           <li><a href="/docs/delete-measured-unit" data-sidebar="delete-measured-unit" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Delete Measured Unit</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="list-subscriptions">
            <div class="fa fa-caret-right fa-right"></div>Subscriptions</a></h4>
          <ul>
           <li><a href="/docs/list-subscriptions" data-sidebar="list-subscriptions" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Subscriptions</span></a></li>
           <li><a href="/docs/list-accounts-subscriptions" data-sidebar="list-accounts-subscriptions" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Account's Subscriptions</span></a></li>
           <li><a href="/docs/preview-subscription" data-sidebar="preview-subscription" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Preview Subscription</span></a></li>
           <li><a href="/docs/create-subscription" data-sidebar="create-subscription" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Subscription</span></a></li>
           <li><a href="/docs/subscription-add-ons" data-sidebar="subscription-add-ons" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Subscription with Add-Ons</span></a></li>
           <li><a href="/docs/lookup-subscription-details" data-sidebar="lookup-subscription-details" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Subscription</span></a></li>
           <li><a href="/docs/preview-subscription-change" data-sidebar="preview-subscription-change" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Preview Subscription Change</span></a></li>
           <li><a href="/docs/update-subscription" data-sidebar="update-subscription" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Subscription</span></a></li>
           <li><a href="/docs/update-subscription-with-add-ons" data-sidebar="update-subscription-with-add-ons" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Subscription with Add-Ons</span></a></li>
           <li><a href="/docs/update-subscription-notes" data-sidebar="update-subscription-notes" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Subscription Notes</span></a></li>
           <li><a href="/docs/cancel-subscription" data-sidebar="cancel-subscription" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Cancel Subscription</span></a></li>
           <li><a href="/docs/reactivate-canceled-subscription" data-sidebar="reactivate-canceled-subscription" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Reactivate Canceled Subscription</span></a></li>
           <li><a href="/docs/terminate-subscription" data-sidebar="terminate-subscription" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Terminate Subscription</span></a></li>
           <li><a href="/docs/postpone-subscription" data-sidebar="postpone-subscription" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Postpone Subscription or Extend Trial</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="usage-record-object">
            <div class="fa fa-caret-right fa-right"></div>Subscription Usage Records</a></h4>
          <ul>
           <li><a href="/docs/usage-record-object" data-sidebar="usage-record-object" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Usage Record Object</span></a></li>
           <li><a href="/docs/list-add-ons-usage" data-sidebar="list-add-ons-usage" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Subscription Add-On's Usage</span></a></li>
           <li><a href="/docs/log-usage" data-sidebar="log-usage" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Log Usage</span></a></li>
           <li><a href="/docs/lookup-usage-record" data-sidebar="lookup-usage-record" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Usage Record</span></a></li>
           <li><a href="/docs/update-usage" data-sidebar="update-usage" class="sidebar-link"><span title="put" class="pg-type type-put">put</span><span>Update Usage Record</span></a></li>
           <li><a href="/docs/delete-a-usage-record" data-sidebar="delete-a-usage-record" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Delete Usage Record</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="transaction-object">
            <div class="fa fa-caret-right fa-right"></div>Transactions</a></h4>
          <ul>
           <li><a href="/docs/transaction-object" data-sidebar="transaction-object" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Transaction Object</span></a></li>
           <li><a href="/docs/list-transactions" data-sidebar="list-transactions" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Transactions</span></a></li>
           <li><a href="/docs/list-accounts-transactions" data-sidebar="list-accounts-transactions" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Account's Transactions</span></a></li>
           <li><a href="/docs/create-transaction" data-sidebar="create-transaction" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Transaction</span></a></li>
           <li><a href="/docs/lookup-transaction" data-sidebar="lookup-transaction" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Lookup Transaction</span></a></li>
           <li><a href="/docs/refund-transaction" data-sidebar="refund-transaction" class="sidebar-link"><span title="delete" class="pg-type type-delete">delete</span><span>Refund Transaction (Deprecated)</span></a></li>
           <li><a href="https://recurly.readme.io/v2.0/page/transaction-errors" data-sidebar="errors" target="_blank" class="sidebar-link"><span>Transaction Errors</span>
             <div class="fa fa-external-link-square external"></div></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="list-export-dates">
            <div class="fa fa-caret-right fa-right"></div>Automated Exports</a></h4>
          <ul>
           <li><a href="/docs/list-export-dates" data-sidebar="list-export-dates" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Export Dates</span></a></li>
           <li><a href="/docs/list-export-files" data-sidebar="list-export-files" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>List Date's Export Files</span></a></li>
           <li><a href="/docs/download-export-file" data-sidebar="download-export-file" class="sidebar-link"><span title="get" class="pg-type type-get">get</span><span>Download Export File</span></a></li>
          </ul>
         </div>
         <div class="sidebar-category">
          <h4><a href="" data-sidebar="create-purchase">
            <div class="fa fa-caret-right fa-right"></div>Purchases</a></h4>
          <ul>
           <li><a href="/docs/create-purchase" data-sidebar="create-purchase" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Create Purchase</span></a></li>
           <li><a href="/docs/preview-purchase" data-sidebar="preview-purchase" class="sidebar-link"><span title="post" class="pg-type type-post">post</span><span>Preview Purchase</span></a></li>
          </ul>
         </div>
        </div>
       </div>
      </div>
      <div class="section-right-parent">
       <div sidebarize=".sidebar-nav" class="section-right">
        <div ng-controller="ShowPage" data-page="getting-started" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"59557419c0a2ba001bf5e1b9","category":"59557419c0a2ba001bf5e1a4","user":"5564a0073a61a72f0067cb22","project":"555fbba928249c1900618a82","parentDoc":null,"version":"59557419c0a2ba001bf5e1a3","updates":["5595c7e9f44370190028891c","562aa244ed4bea0d00c11d8b","56bb4e10dabd992100b674f7","56f19a949791b22d0077ba0f"],"next":{"pages":[],"description":""},"createdAt":"2015-06-10T22:06:37.745Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"language":"json","status":200,"name":"","code":"{}"},{"code":"{}","language":"json","status":400,"name":""}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":0,"body":"[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"API Authentication (HTTP Basic)\"\n}\n[/block]\nRecurly uses HTTP Basic Authenticationyour [Private API key](https://app.recurly.com/go/developer/api_access) is securely encrypted by the SSL channel.\n\nIf you are testing the API calls via the command line with cURL, try:\n\n```\ncurl -H 'Accept: application/xml' \\\n     -H 'X-Api-Version: 2.7' \\\n     -H 'Content-Type: application/xml; charset=utf-8' \\\n     -u '[apikey]' \\\n    https://[subdomain].recurly.com/v2/accounts\n```\n\nReplace `[apikey]` and `[subdomain]` with the appropriate values for your site.\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Calculating your own authorization header\"\n}\n[/block]\nMost programming languages encode the authorization header automatically. With HTTP Basic Authentication, the `Authorization` header is a string containing a Base-64 encoded username and password. In the case of Recurlys API, you need only specify the username as your API key. If your library requires a password, set it to an empty string.\n\n```\n\"Authorization\": \"Basic \" + base64_encode(API Key)\n```\n\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Additional Request Headers\"\n}\n[/block]\n## Accept Header\nRecurly API v2 returns results as XML. Your requests should always include the header requesting the results as XML:\n\n```\nAccept: application/xml\n```\n\n## Content-Type Header\nWhen sending data to Recurly in a POST or PUT request, your request must specify the content type of your request:\n\n```\nContent-Type: application/xml; charset=utf-8\n```\n\n## X-Api-Version Header\nWhen sending data to Recurly, your request should specify the API version you're attempting to interact with:\n```\nX-Api-Version: 2.7\n```\nYou learn more about the different versions in the [API Versioning](doc:versioning) section.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Acceptable API versions\",\n  \"body\": \"Recurly supports the following API versions: **[2.0](https://dev.recurly.com/v2.0/docs)**, **[2.1](https://dev.recurly.com/v2.1/docs)**, **[2.2](https://dev.recurly.com/v2.2/docs)**, **[2.3](https://dev.recurly.com/v2.3/docs)**, **[2.4](https://dev.recurly.com/v2.4/docs)**, **[2.5](https://dev.recurly.com/v2.5/docs)**, **[2.6](https://dev.recurly.com/v2.6/docs)**, **[2.7](https://dev.recurly.com/v2.7/docs)**\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Public API Key\"\n}\n[/block]\nRecurly uses two types of API keys: public and private. The Public API key is used by [Recurly.js](doc:recurlyjs) to identify its requests as belonging to your Recurly site. This key can be safely included in Javascript code.\n\nRecurly provides each site with one Public Key. The Public API Key can be regenerated on the [API Credentials](https://app.recurly.com/go/developer/api_access) page.\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Private API Keys\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Treat your Private API Keys like passwords!\",\n  \"body\": \"The API key allows access to your site's data. Do not include it in Javascript code exposed to browsers.\"\n}\n[/block]\nRecurly supports the use of multiple Private API keys, which can be used to integrate third party services using unique, controlled credentials.\n\n## Limits &amp; Pricing\nMerchants on the Core or grandfathered Recurly plans or merchants in sandbox mode will be granted 5 private API keys. Merchants on Recurlys Professional plan will be granted 10 private API keys.\n\n## Default Key\nYour default private API key should be used to integrate Recurly with your backend systems. There will be at least one key active at all times.\n\n## Additional Keys\nAdditional private API keys should be used to connect your Recurly data to additional sources, like analytics software, accounting packages, or email tools. Recurly recommends clearly labeling the name of each key to identify the associated vendor.\n\n## Regenerating Private API Keys\nYour API key can be regenerated by clicking on the Regenerate button on the [API credentials](https://app.recurly.com/go/developer/api_access) page. When you generate a private API key, you have two options:\n\n1. Block the old key immediately. This is primarily recommended when the security of a key has been compromised.\n2. Allow the old key access for 12 hours. This is primarily used when updating systems and a smooth transition between keys is needed.\n\n*If a private API key is changed, an email alert will be sent to your Recurly Site Technical Contact.*\n\n## Read-Only Keys\nWhen creating a private key, you will have the option to set the key to read-only. This means the API key may make GET requests but cannot not PUT, POST or DELETE requests.","excerpt":"","slug":"getting-started","type":"basic","title":"Authentication","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Authentication</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-api-authentication-http-basic" class="anchor waypoint"></div>API Authentication (HTTP Basic)<a href="#section-api-authentication-http-basic" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Recurly uses HTTP Basic Authenticationyour <a href="https://app.recurly.com/go/developer/api_access">Private API key</a> is securely encrypted by the SSL channel.</p> 
                 <p>If you are testing the API calls via the command line with cURL, try:</p> 
                 <pre><code>curl -H 'Accept: application/xml' \
     -H 'X-Api-Version: 2.7' \
     -H 'Content-Type: application/xml; charset=utf-8' \
     -u '[apikey]' \
    https://[subdomain].recurly.com/v2/accounts
</code></pre>
                 <p>Replace <code>[apikey]</code> and <code>[subdomain]</code> with the appropriate values for your site.</p> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-calculating-your-own-authorization-header" class="anchor waypoint"></div>Calculating your own authorization header<a href="#section-calculating-your-own-authorization-header" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Most programming languages encode the authorization header automatically. With HTTP Basic Authentication, the <code>Authorization</code> header is a string containing a Base-64 encoded username and password. In the case of Recurlys API, you need only specify the username as your API key. If your library requires a password, set it to an empty string.</p> 
                 <pre><code>"Authorization": "Basic " + base64_encode(API Key)
</code></pre>
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-additional-request-headers" class="anchor waypoint"></div>Additional Request Headers<a href="#section-additional-request-headers" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-accept-header"></div>Accept Header<a class="fa fa-anchor" href="#section-accept-header"></a></h2> 
                 <p>Recurly API v2 returns results as XML. Your requests should always include the header requesting the results as XML:</p> 
                 <pre><code>Accept: application/xml
</code></pre>
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-content-type-header"></div>Content-Type Header<a class="fa fa-anchor" href="#section-content-type-header"></a></h2> 
                 <p>When sending data to Recurly in a POST or PUT request, your request must specify the content type of your request:</p> 
                 <pre><code>Content-Type: application/xml; charset=utf-8
</code></pre>
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-x-api-version-header"></div>X-Api-Version Header<a class="fa fa-anchor" href="#section-x-api-version-header"></a></h2> 
                 <p>When sending data to Recurly, your request should specify the API version you're attempting to interact with:</p> 
                 <pre><code>X-Api-Version: 2.7
</code></pre>
                 <p>You learn more about the different versions in the <a href="/v2.7/docs/versioning" class="doc-link" data-sidebar="versioning">API Versioning</a> section.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-info "> 
                <h3><i title="Info" class="fa fa-info-circle on"></i><span>Acceptable API versions</span> </h3>
                <p>Recurly supports the following API versions: <strong><a href="https://dev.recurly.com/v2.0/docs">2.0</a></strong>, <strong><a href="https://dev.recurly.com/v2.1/docs">2.1</a></strong>, <strong><a href="https://dev.recurly.com/v2.2/docs">2.2</a></strong>, <strong><a href="https://dev.recurly.com/v2.3/docs">2.3</a></strong>, <strong><a href="https://dev.recurly.com/v2.4/docs">2.4</a></strong>, <strong><a href="https://dev.recurly.com/v2.5/docs">2.5</a></strong>, <strong><a href="https://dev.recurly.com/v2.6/docs">2.6</a></strong>, <strong><a href="https://dev.recurly.com/v2.7/docs">2.7</a></strong></p> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-public-api-key" class="anchor waypoint"></div>Public API Key<a href="#section-public-api-key" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Recurly uses two types of API keys: public and private. The Public API key is used by <a href="/v2.7/docs/recurlyjs" class="doc-link" data-sidebar="recurlyjs">Recurly.js</a> to identify its requests as belonging to your Recurly site. This key can be safely included in Javascript code.</p> 
                 <p>Recurly provides each site with one Public Key. The Public API Key can be regenerated on the <a href="https://app.recurly.com/go/developer/api_access">API Credentials</a> page.</p> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-private-api-keys" class="anchor waypoint"></div>Private API Keys<a href="#section-private-api-keys" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div class="magic-block-callout type-danger "> 
                <h3><i title="Danger" class="fa fa-exclamation-triangle on"></i><span>Treat your Private API Keys like passwords!</span> </h3>
                <p>The API key allows access to your site's data. Do not include it in Javascript code exposed to browsers.</p> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Recurly supports the use of multiple Private API keys, which can be used to integrate third party services using unique, controlled credentials.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-limits-pricing"></div>Limits &amp; Pricing<a class="fa fa-anchor" href="#section-limits-pricing"></a></h2> 
                 <p>Merchants on the Core or grandfathered Recurly plans or merchants in sandbox mode will be granted 5 private API keys. Merchants on Recurlys Professional plan will be granted 10 private API keys.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-default-key"></div>Default Key<a class="fa fa-anchor" href="#section-default-key"></a></h2> 
                 <p>Your default private API key should be used to integrate Recurly with your backend systems. There will be at least one key active at all times.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-additional-keys"></div>Additional Keys<a class="fa fa-anchor" href="#section-additional-keys"></a></h2> 
                 <p>Additional private API keys should be used to connect your Recurly data to additional sources, like analytics software, accounting packages, or email tools. Recurly recommends clearly labeling the name of each key to identify the associated vendor.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-regenerating-private-api-keys"></div>Regenerating Private API Keys<a class="fa fa-anchor" href="#section-regenerating-private-api-keys"></a></h2> 
                 <p>Your API key can be regenerated by clicking on the Regenerate button on the <a href="https://app.recurly.com/go/developer/api_access">API credentials</a> page. When you generate a private API key, you have two options:</p> 
                 <ol> 
                  <li>Block the old key immediately. This is primarily recommended when the security of a key has been compromised.</li>
                  <li>Allow the old key access for 12 hours. This is primarily used when updating systems and a smooth transition between keys is needed.</li>
                 </ol> 
                 <p><em>If a private API key is changed, an email alert will be sent to your Recurly Site Technical Contact.</em></p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-read-only-keys"></div>Read-Only Keys<a class="fa fa-anchor" href="#section-read-only-keys"></a></h2> 
                 <p>When creating a private key, you will have the option to set the key to read-only. This means the API key may make GET requests but cannot not PUT, POST or DELETE requests.</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/getting-started" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/getting-started/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <!-- h3 Endpoints // Put this back when we can detect if there's any pages with endpoints...-->
           <div id="endpoints">
            <div ng-show="0 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/account-object" data-sidebar="account-object" title="Account Object"><span title="get" class="pg-type type-get">get</span><span>/accounts</span></a>
            </div>
            <div ng-show="1 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-accounts" data-sidebar="list-accounts" title="List Accounts"><span title="get" class="pg-type type-get">get</span><span>/accounts</span></a>
            </div>
            <div ng-show="2 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-an-account" data-sidebar="create-an-account" title="Create Account"><span title="post" class="pg-type type-post">post</span><span>/accounts</span></a>
            </div>
            <div ng-show="3 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/get-account" data-sidebar="get-account" title="Lookup Account"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code</span></a>
            </div>
            <div ng-show="4 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-account" data-sidebar="update-account" title="Update Account"><span title="put" class="pg-type type-put">put</span><span>/accounts/:account_code</span></a>
            </div>
            <div ng-show="5 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/close-account" data-sidebar="close-account" title="Close Account"><span title="delete" class="pg-type type-delete">delete</span><span>/accounts/:account_code</span></a>
            </div>
            <div ng-show="6 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/reopen-account" data-sidebar="reopen-account" title="Reopen Account"><span title="put" class="pg-type type-put">put</span><span>/accounts/:account_code/reopen</span></a>
            </div>
            <div ng-show="7 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-account-balance" data-sidebar="lookup-account-balance" title="Lookup Account Balance"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/balance</span></a>
            </div>
            <div ng-show="8 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-account-notes" data-sidebar="list-account-notes" title="List Account Notes"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/notes</span></a>
            </div>
            <div ng-show="9 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-accounts-shipping-address" data-sidebar="list-accounts-shipping-address" title="List Account's Shipping Address"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/shipping_addresses</span></a>
            </div>
            <div ng-show="10 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-shipping-address" data-sidebar="lookup-shipping-address" title="Lookup Shipping Address"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/shipping_addresses/:shipping_address_id</span></a>
            </div>
            <div ng-show="11 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-shipping-address-on-an-account" data-sidebar="create-shipping-address-on-an-account" title="Create Shipping Address"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/shipping_addresses</span></a>
            </div>
            <div ng-show="12 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/edit-shipping-address-on-an-existing-account" data-sidebar="edit-shipping-address-on-an-existing-account" title="Update Shipping Address"><span title="put" class="pg-type type-put">put</span><span>/accounts/:account_code/shipping_addresses/:shipping_address_id</span></a>
            </div>
            <div ng-show="13 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/delete-shipping-address-on-an-existing-account" data-sidebar="delete-shipping-address-on-an-existing-account" title="Delete Shipping Address"><span title="delete" class="pg-type type-delete">delete</span><span>/accounts/:account_code/shipping_addresses/:shipping_address_id</span></a>
            </div>
            <div ng-show="14 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-account-acquisition" data-sidebar="create-account-acquisition" title="Create Account Acquisition"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/acquisition</span></a>
            </div>
            <div ng-show="15 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-account-acquisition" data-sidebar="lookup-account-acquisition" title="Lookup Account Acquisition"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/acquisition</span></a>
            </div>
            <div ng-show="16 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-account-acquisition" data-sidebar="update-account-acquisition" title="Update Account Acquisition"><span title="put" class="pg-type type-put">put</span><span>/accounts/:account_code/acquisition</span></a>
            </div>
            <div ng-show="17 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/clear-account-acquisition" data-sidebar="clear-account-acquisition" title="Clear Account Acquisition"><span title="delete" class="pg-type type-delete">delete</span><span>/accounts/:account_code/acquisition</span></a>
            </div>
            <div ng-show="18 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/adjustment-object" data-sidebar="adjustment-object" title="Adjustment Object"><span title="get" class="pg-type type-get">get</span><span>/adjustments</span></a>
            </div>
            <div ng-show="19 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-an-accounts-adjustments" data-sidebar="list-an-accounts-adjustments" title="List Account's Adjustments"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/adjustments</span></a>
            </div>
            <div ng-show="20 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-a-charge" data-sidebar="create-a-charge" title="Create Charge"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/adjustments</span></a>
            </div>
            <div ng-show="21 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-a-credit" data-sidebar="create-a-credit" title="Create Credit"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/adjustments</span></a>
            </div>
            <div ng-show="22 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/get-an-adjustment" data-sidebar="get-an-adjustment" title="Lookup Adjustment"><span title="get" class="pg-type type-get">get</span><span>/adjustments/:uuid</span></a>
            </div>
            <div ng-show="23 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/delete-an-adjustment" data-sidebar="delete-an-adjustment" title="Delete Adjustment"><span title="delete" class="pg-type type-delete">delete</span><span>/adjustments/:uuid</span></a>
            </div>
            <div ng-show="24 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-an-accounts-billing-info-token" data-sidebar="create-an-accounts-billing-info-token" title="Create Account's Billing Info (Token)"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="25 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-an-accounts-billing-info-credit-card" data-sidebar="create-an-accounts-billing-info-credit-card" title="Create Account's Billing Info (Credit Card)"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="26 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-an-accounts-billing-info-bank-account" data-sidebar="create-an-accounts-billing-info-bank-account" title="Create Account's Billing Info (Bank Account)"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="27 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-an-accounts-billing-info-using-external-token" data-sidebar="create-an-accounts-billing-info-using-external-token" title="Create Account's Billing Info (External Token)"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="28 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-an-accounts-billing-info" data-sidebar="lookup-an-accounts-billing-info" title="Lookup Account's Billing Info"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="29 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-an-accounts-billing-info-token" data-sidebar="update-an-accounts-billing-info-token" title="Update Account's Billing Info (Token)"><span title="put" class="pg-type type-put">put</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="30 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-an-accounts-billing-info-credit-card" data-sidebar="update-an-accounts-billing-info-credit-card" title="Update Account's Billing Info (Credit Card)"><span title="put" class="pg-type type-put">put</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="31 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-an-accounts-billing-info-bank-account" data-sidebar="update-an-accounts-billing-info-bank-account" title="Update Account's Billing Info (Bank Account)"><span title="put" class="pg-type type-put">put</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="32 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-an-accounts-billing-info-using-external-token" data-sidebar="update-an-accounts-billing-info-using-external-token" title="Update Account's Billing Info (using external token)"><span title="put" class="pg-type type-put">put</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="33 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/clear-an-accounts-billing-info" data-sidebar="clear-an-accounts-billing-info" title="Clear Account's Billing Info"><span title="delete" class="pg-type type-delete">delete</span><span>/accounts/:account_code/billing_info</span></a>
            </div>
            <div ng-show="34 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-active-coupons" data-sidebar="list-active-coupons" title="List Coupons"><span title="get" class="pg-type type-get">get</span><span>/coupons</span></a>
            </div>
            <div ng-show="35 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-coupon" data-sidebar="create-coupon" title="Create Coupon"><span title="post" class="pg-type type-post">post</span><span>/coupons</span></a>
            </div>
            <div ng-show="36 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-a-coupon" data-sidebar="lookup-a-coupon" title="Lookup Coupon"><span title="get" class="pg-type type-get">get</span><span>/coupons/:coupon_code</span></a>
            </div>
            <div ng-show="37 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/generate-unique-codes" data-sidebar="generate-unique-codes" title="Generate Unique Codes"><span title="post" class="pg-type type-post">post</span><span>/coupons/:coupon_code/generate</span></a>
            </div>
            <div ng-show="38 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/deactivate-coupon" data-sidebar="deactivate-coupon" title="Expire Coupon"><span title="delete" class="pg-type type-delete">delete</span><span>/coupons/:coupon_code</span></a>
            </div>
            <div ng-show="39 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/edit-coupon" data-sidebar="edit-coupon" title="Edit Coupon"><span title="put" class="pg-type type-put">put</span><span>/coupons/:coupon_code</span></a>
            </div>
            <div ng-show="40 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/restore-coupon" data-sidebar="restore-coupon" title="Restore Coupon"><span title="put" class="pg-type type-put">put</span><span>/coupons/:coupon_code/restore</span></a>
            </div>
            <div ng-show="41 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-unique-coupon-codes" data-sidebar="list-unique-coupon-codes" title="List Unique Coupon Codes"><span title="get" class="pg-type type-get">get</span><span>/coupons/:coupon_code/unique_coupon_codes</span></a>
            </div>
            <div ng-show="42 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/coupon-redemption-object" data-sidebar="coupon-redemption-object" title="Coupon Redemption Object"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/redemptions/:redemption_uuid</span></a>
            </div>
            <div ng-show="43 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-a-coupon-redemption-on-an-account" data-sidebar="lookup-a-coupon-redemption-on-an-account" title="List Account's Coupon Redemptions"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/redemptions</span></a>
            </div>
            <div ng-show="44 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-a-coupon-redemption-on-an-invoice" data-sidebar="lookup-a-coupon-redemption-on-an-invoice" title="List Invoice's Coupon Redemptions"><span title="get" class="pg-type type-get">get</span><span>/invoices/:invoice_number/redemptions</span></a>
            </div>
            <div ng-show="45 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-a-coupon-redemption-on-a-subscription" data-sidebar="lookup-a-coupon-redemption-on-a-subscription" title="List Subscription's Coupon Redemption"><span title="get" class="pg-type type-get">get</span><span>/subscriptions/:uuid/redemptions</span></a>
            </div>
            <div ng-show="46 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/redeem-a-coupon-before-or-after-a-subscription" data-sidebar="redeem-a-coupon-before-or-after-a-subscription" title="Redeem Coupon on Account"><span title="post" class="pg-type type-post">post</span><span>/coupons/:coupon_code/redeem</span></a>
            </div>
            <div ng-show="47 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/remove-a-coupon-from-an-account" data-sidebar="remove-a-coupon-from-an-account" title="Remove Coupon Redemption from Account"><span title="delete" class="pg-type type-delete">delete</span><span>/accounts/:account_code/redemptions/:uuid</span></a>
            </div>
            <div ng-show="48 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/gift-card-object" data-sidebar="gift-card-object" title="Gift Card Object"><span title="get" class="pg-type type-get">get</span><span>/gift_cards</span></a>
            </div>
            <div ng-show="49 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-gift-cards" data-sidebar="list-gift-cards" title="List Gift Cards"><span title="get" class="pg-type type-get">get</span><span>/gift_cards</span></a>
            </div>
            <div ng-show="50 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/preview-gift-card" data-sidebar="preview-gift-card" title="Preview Gift Card"><span title="post" class="pg-type type-post">post</span><span>/gift_cards/preview</span></a>
            </div>
            <div ng-show="51 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-gift-card" data-sidebar="create-gift-card" title="Create Gift Card"><span title="post" class="pg-type type-post">post</span><span>/gift_cards</span></a>
            </div>
            <div ng-show="52 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-a-gift-card" data-sidebar="lookup-a-gift-card" title="Lookup Gift Card"><span title="get" class="pg-type type-get">get</span><span>/gift_cards/:id</span></a>
            </div>
            <div ng-show="53 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/redeem-gift-card" data-sidebar="redeem-gift-card" title="Redeem Gift Card on Account"><span title="post" class="pg-type type-post">post</span><span>/gift_cards/:redemption_code/redeem</span></a>
            </div>
            <div ng-show="54 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/preview-subscription-with-gift-card-redemption" data-sidebar="preview-subscription-with-gift-card-redemption" title="Preview Subscription with Gift Card Redemption"><span title="post" class="pg-type type-post">post</span><span>/subscriptions/preview</span></a>
            </div>
            <div ng-show="55 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/redeem-gift-card-with-subscription" data-sidebar="redeem-gift-card-with-subscription" title="Create Subscription with Gift Card Redemption"><span title="post" class="pg-type type-post">post</span><span>/subscriptions</span></a>
            </div>
            <div ng-show="56 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-invoices" data-sidebar="list-invoices" title="List Invoices"><span title="get" class="pg-type type-get">get</span><span>/invoices</span></a>
            </div>
            <div ng-show="57 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-an-accounts-invoices" data-sidebar="list-an-accounts-invoices" title="List Account's Invoices"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/invoices</span></a>
            </div>
            <div ng-show="58 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/preview-an-invoice" data-sidebar="preview-an-invoice" title="Preview Invoice"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/invoices/preview</span></a>
            </div>
            <div ng-show="59 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/post-an-invoice-invoice-pending-charges-on-an-acco" data-sidebar="post-an-invoice-invoice-pending-charges-on-an-acco" title="Post Invoice: Invoice Pending Charges on Account"><span title="post" class="pg-type type-post">post</span><span>/accounts/:account_code/invoices</span></a>
            </div>
            <div ng-show="60 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-invoice-details" data-sidebar="lookup-invoice-details" title="Lookup Invoice"><span title="get" class="pg-type type-get">get</span><span>/invoices/:invoice_number</span></a>
            </div>
            <div ng-show="61 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/retrieve-a-pdf-invoice" data-sidebar="retrieve-a-pdf-invoice" title="Retrieve PDF Invoice"><span title="get" class="pg-type type-get">get</span><span>/invoices/:invoice_number</span></a>
            </div>
            <div ng-show="62 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/mark-an-invoice-as-paid-successfully" data-sidebar="mark-an-invoice-as-paid-successfully" title="Mark Invoice as Paid Successfully"><span title="put" class="pg-type type-put">put</span><span>/invoices/:invoice_number/mark_successful</span></a>
            </div>
            <div ng-show="63 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/mark-an-invoice-as-failed-collection" data-sidebar="mark-an-invoice-as-failed-collection" title="Mark Invoice as Failed Collection"><span title="put" class="pg-type type-put">put</span><span>/invoices/:invoice_number/mark_failed</span></a>
            </div>
            <div ng-show="64 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/line-item-refunds" data-sidebar="line-item-refunds" title="Refund/Void Line Items"><span title="post" class="pg-type type-post">post</span><span>/invoices/:invoice_number/refund</span></a>
            </div>
            <div ng-show="65 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/open-amount-refunds" data-sidebar="open-amount-refunds" title="Refund/Void Open Amount"><span title="post" class="pg-type type-post">post</span><span>/invoices/:invoice_number/refund</span></a>
            </div>
            <div ng-show="66 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/enter-an-offline-payment-for-a-manual-invoice" data-sidebar="enter-an-offline-payment-for-a-manual-invoice" title="Enter Offline Payment for Manual Invoice"><span title="post" class="pg-type type-post">post</span><span>/invoices/:invoice_number/transactions</span></a>
            </div>
            <div ng-show="67 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/collect-an-invoice" data-sidebar="collect-an-invoice" title="Collect an Invoice"><span title="put" class="pg-type type-put">put</span><span>/invoices/:invoice_number/collect</span></a>
            </div>
            <div ng-show="68 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-plans" data-sidebar="list-plans" title="List Plans"><span title="get" class="pg-type type-get">get</span><span>/plans</span></a>
            </div>
            <div ng-show="69 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-plan" data-sidebar="create-plan" title="Create Plan"><span title="post" class="pg-type type-post">post</span><span>/plans</span></a>
            </div>
            <div ng-show="70 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-plan-details" data-sidebar="lookup-plan-details" title="Lookup Plan"><span title="get" class="pg-type type-get">get</span><span>/plans/:plan_code</span></a>
            </div>
            <div ng-show="71 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-plan" data-sidebar="update-plan" title="Update Plan"><span title="put" class="pg-type type-put">put</span><span>/plans/:plan_code</span></a>
            </div>
            <div ng-show="72 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/delete-plan" data-sidebar="delete-plan" title="Delete Plan"><span title="delete" class="pg-type type-delete">delete</span><span>/plans/:plan_code</span></a>
            </div>
            <div ng-show="73 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/plan-add-ons-object" data-sidebar="plan-add-ons-object" title="Plan Add-On Object"><span title="get" class="pg-type type-get">get</span><span>/plans/:plan_code/add_ons</span></a>
            </div>
            <div ng-show="74 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-add-ons-for-a-plan" data-sidebar="list-add-ons-for-a-plan" title="List Plan's Add-Ons"><span title="get" class="pg-type type-get">get</span><span>/plans/:plan_code/add_ons</span></a>
            </div>
            <div ng-show="75 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-an-add-on" data-sidebar="create-an-add-on" title="Create Plan Add-On"><span title="post" class="pg-type type-post">post</span><span>/plans/:plan_code/add_ons</span></a>
            </div>
            <div ng-show="76 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-an-add-on" data-sidebar="lookup-an-add-on" title="Lookup Plan Add-On"><span title="get" class="pg-type type-get">get</span><span>/plans/:plan_code/add_ons/:add_on_code</span></a>
            </div>
            <div ng-show="77 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-an-add-on" data-sidebar="update-an-add-on" title="Update Plan Add-On"><span title="put" class="pg-type type-put">put</span><span>/plans/:plan_code/add_ons/:add_on_code</span></a>
            </div>
            <div ng-show="78 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/delete-an-add-on" data-sidebar="delete-an-add-on" title="Delete Plan Add-On"><span title="delete" class="pg-type type-delete">delete</span><span>/plans/:plan_code/add_ons/:add_on_code</span></a>
            </div>
            <div ng-show="79 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/measured-unit-object" data-sidebar="measured-unit-object" title="Measured Unit Object"><span title="get" class="pg-type type-get">get</span><span>/measured_units</span></a>
            </div>
            <div ng-show="80 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-measured-units" data-sidebar="list-measured-units" title="List Measured Units"><span title="get" class="pg-type type-get">get</span><span>/measured_units</span></a>
            </div>
            <div ng-show="81 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-measured-unit" data-sidebar="create-measured-unit" title="Create Measured Unit"><span title="post" class="pg-type type-post">post</span><span>/measured_units</span></a>
            </div>
            <div ng-show="82 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-measured-unit" data-sidebar="lookup-measured-unit" title="Lookup Measured Unit"><span title="get" class="pg-type type-get">get</span><span>/measured_units/:measured_unit_id</span></a>
            </div>
            <div ng-show="83 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-measured-unit" data-sidebar="update-measured-unit" title="Update Measured Unit"><span title="put" class="pg-type type-put">put</span><span>/measured_units/:measured_unit_id</span></a>
            </div>
            <div ng-show="84 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/delete-measured-unit" data-sidebar="delete-measured-unit" title="Delete Measured Unit"><span title="delete" class="pg-type type-delete">delete</span><span>/measured_units/:measured_units_id</span></a>
            </div>
            <div ng-show="85 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-subscriptions" data-sidebar="list-subscriptions" title="List Subscriptions"><span title="get" class="pg-type type-get">get</span><span>/subscriptions</span></a>
            </div>
            <div ng-show="86 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-accounts-subscriptions" data-sidebar="list-accounts-subscriptions" title="List Account's Subscriptions"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/subscriptions</span></a>
            </div>
            <div ng-show="87 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/preview-subscription" data-sidebar="preview-subscription" title="Preview Subscription"><span title="post" class="pg-type type-post">post</span><span>/subscriptions/preview</span></a>
            </div>
            <div ng-show="88 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-subscription" data-sidebar="create-subscription" title="Create Subscription"><span title="post" class="pg-type type-post">post</span><span>/subscriptions</span></a>
            </div>
            <div ng-show="89 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/subscription-add-ons" data-sidebar="subscription-add-ons" title="Create Subscription with Add-Ons"><span title="post" class="pg-type type-post">post</span><span>/subscriptions</span></a>
            </div>
            <div ng-show="90 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-subscription-details" data-sidebar="lookup-subscription-details" title="Lookup Subscription"><span title="get" class="pg-type type-get">get</span><span>/subscriptions/:uuid</span></a>
            </div>
            <div ng-show="91 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/preview-subscription-change" data-sidebar="preview-subscription-change" title="Preview Subscription Change"><span title="post" class="pg-type type-post">post</span><span>/subscriptions/:uuid/preview</span></a>
            </div>
            <div ng-show="92 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-subscription" data-sidebar="update-subscription" title="Update Subscription"><span title="put" class="pg-type type-put">put</span><span>/subscriptions/:uuid</span></a>
            </div>
            <div ng-show="93 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-subscription-with-add-ons" data-sidebar="update-subscription-with-add-ons" title="Update Subscription with Add-Ons"><span title="put" class="pg-type type-put">put</span><span>/subscriptions/:uuid</span></a>
            </div>
            <div ng-show="94 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-subscription-notes" data-sidebar="update-subscription-notes" title="Update Subscription Notes"><span title="put" class="pg-type type-put">put</span><span>/subscriptions/:uuid/notes</span></a>
            </div>
            <div ng-show="95 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/cancel-subscription" data-sidebar="cancel-subscription" title="Cancel Subscription"><span title="put" class="pg-type type-put">put</span><span>/subscriptions/:uuid/cancel</span></a>
            </div>
            <div ng-show="96 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/reactivate-canceled-subscription" data-sidebar="reactivate-canceled-subscription" title="Reactivate Canceled Subscription"><span title="put" class="pg-type type-put">put</span><span>/subscriptions/:uuid/reactivate</span></a>
            </div>
            <div ng-show="97 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/terminate-subscription" data-sidebar="terminate-subscription" title="Terminate Subscription"><span title="put" class="pg-type type-put">put</span><span>/subscriptions/:uuid/terminate?refund=:refund_type&amp;charge=:boolean</span></a>
            </div>
            <div ng-show="98 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/postpone-subscription" data-sidebar="postpone-subscription" title="Postpone Subscription or Extend Trial"><span title="put" class="pg-type type-put">put</span><span>/subscriptions/:uuid/postpone?next_renewal_date=:next_renewal_date&amp;bulk=:bulk</span></a>
            </div>
            <div ng-show="99 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/usage-record-object" data-sidebar="usage-record-object" title="Usage Record Object"><span title="get" class="pg-type type-get">get</span><span>/subscriptions/:subscription_uuid/add_ons/:add_on_code/usage</span></a>
            </div>
            <div ng-show="100 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-add-ons-usage" data-sidebar="list-add-ons-usage" title="List Subscription Add-On's Usage"><span title="get" class="pg-type type-get">get</span><span>/subscriptions/:subscription_uuid/add_ons/:add_on_code/usage?:query_param=:value</span></a>
            </div>
            <div ng-show="101 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/log-usage" data-sidebar="log-usage" title="Log Usage"><span title="post" class="pg-type type-post">post</span><span>/subscriptions/:subscription_uuid/add_ons/:add_on_code/usage</span></a>
            </div>
            <div ng-show="102 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-usage-record" data-sidebar="lookup-usage-record" title="Lookup Usage Record"><span title="get" class="pg-type type-get">get</span><span>/subscriptions/:subscription_uuid/add_ons/:add_on_code/usage/:usage_id</span></a>
            </div>
            <div ng-show="103 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/update-usage" data-sidebar="update-usage" title="Update Usage Record"><span title="put" class="pg-type type-put">put</span><span>/subscriptions/:subscription_uuid/add_ons/:add_on_code/usage/:usage_id</span></a>
            </div>
            <div ng-show="104 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/delete-a-usage-record" data-sidebar="delete-a-usage-record" title="Delete Usage Record"><span title="delete" class="pg-type type-delete">delete</span><span>/subscriptions/:subscription_uuid/add_ons/:add_on_code/usage/:usage_id</span></a>
            </div>
            <div ng-show="105 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/transaction-object" data-sidebar="transaction-object" title="Transaction Object"><span title="get" class="pg-type type-get">get</span><span>/transactions/:uuid</span></a>
            </div>
            <div ng-show="106 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-transactions" data-sidebar="list-transactions" title="List Transactions"><span title="get" class="pg-type type-get">get</span><span>/transactions</span></a>
            </div>
            <div ng-show="107 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-accounts-transactions" data-sidebar="list-accounts-transactions" title="List Account's Transactions"><span title="get" class="pg-type type-get">get</span><span>/accounts/:account_code/transactions</span></a>
            </div>
            <div ng-show="108 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-transaction" data-sidebar="create-transaction" title="Create Transaction"><span title="post" class="pg-type type-post">post</span><span>/transactions</span></a>
            </div>
            <div ng-show="109 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/lookup-transaction" data-sidebar="lookup-transaction" title="Lookup Transaction"><span title="get" class="pg-type type-get">get</span><span>/transactions/:uuid</span></a>
            </div>
            <div ng-show="110 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/refund-transaction" data-sidebar="refund-transaction" title="Refund Transaction (Deprecated)"><span title="delete" class="pg-type type-delete">delete</span><span>/transactions/:uuid</span></a>
            </div>
            <div ng-show="111 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-export-dates" data-sidebar="list-export-dates" title="List Export Dates"><span title="get" class="pg-type type-get">get</span><span>/export_dates</span></a>
            </div>
            <div ng-show="112 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/list-export-files" data-sidebar="list-export-files" title="List Date's Export Files"><span title="get" class="pg-type type-get">get</span><span>/export_dates/:date/export_files</span></a>
            </div>
            <div ng-show="113 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/download-export-file" data-sidebar="download-export-file" title="Download Export File"><span title="get" class="pg-type type-get">get</span><span>/export_dates/:date/export_files/:file_name</span></a>
            </div>
            <div ng-show="114 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/create-purchase" data-sidebar="create-purchase" title="Create Purchase"><span title="post" class="pg-type type-post">post</span><span>/purchases</span></a>
            </div>
            <div ng-show="115 <= 10 || all_endpoints == true" ng-cloak>
             <a href="/docs/preview-purchase" data-sidebar="preview-purchase" title="Preview Purchase"><span title="post" class="pg-type type-post">post</span><span>/purchases/preview</span></a>
            </div>
            <a href="" ng-click="all_endpoints=true" ng-cloak ng-show="116 > 10 &amp;&amp; !all_endpoints"><strong>View all 116 endpoints</strong></a>
           </div>
          </div> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="versioning" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"59557419c0a2ba001bf5e1ba","category":"59557419c0a2ba001bf5e1a4","user":"559d85d26b21311700fb0b7b","parentDoc":null,"project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-07-18T22:26:12.882Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":1,"body":"Recurly strives to provide developers with stable APIs to integrate against while still being able to provide new and expanded functionality. To balance these two goals we provide different API versions and only add new features to the latest version of the API. This allows you to choose the best time to update your integration and take advantage of new features.\n\nRecurly offers the following API versions:  [2.7](https://dev.recurly.com/v2.7/docs), [2.6](https://dev.recurly.com/v2.6/docs), [2.5](https://dev.recurly.com/v2.5/docs), [2.4](https://dev.recurly.com/v2.4/docs), [2.3](https://dev.recurly.com/v2.3/docs), [2.2](https://dev.recurly.com/v2.2/docs), [2.1](https://dev.recurly.com/v2.1/docs), [2.0](https://dev.recurly.com/v2.0/docs).\n\n## Requesting A Version\n\nWhen making requests to Recurly, your request should specify the desired API version using the `X-Api-Version` header:\n```\nX-Api-Version: 2.7\n```\nFor backwards compatibility, if no version is specified the default is 2.0.\n\n## Deprecation\n\nTo signal that an API version is deprecated and will be removed in the future, Recurly will respond the following headers:\n```\nRecurly-Deprecated: TRUE\nRecurly-Sunset-Date: 2018-06-01T00:00:00+00:00\n```\nThe sunset date is an ISO 8601 date time when the version will no longer be accessible.\n\nYour integration should check for those headers so you can make updates in a timely fashion.\n\n## Changes in v2.7\n\nRequest and Response Changes:\n\n- Changed `POST /v2/purchases` request:\n  - Added `coupon_codes`\n    - path: `&lt;coupon_codes type=\"array\"&gt;&lt;coupon_code&gt;COUPON1234&lt;/coupon_code&gt;&lt;/coupon_codes&gt;`\n    - description: A list of coupon codes to apply to this purchase.\n  - Added `subscriptions`\n    - path: `&lt;subscriptions type=\"array\"&gt;&lt;subscription/&gt;&lt;/subscriptions&gt;`\n    - description: A list of Subscriptions to invoice in this purchase (currently only one subscription is allowed).\n  - Added `gift_card`\n    - path: `&lt;gift_card&gt;&lt;redemption_code&gt;ABCD1234&lt;/redemption_code&gt;&lt;/gift_card&gt;`\n    - description: A gift card with a redemption code to apply to this purchase.\n\nA complete list of changes for all versions is available on the [API Release Notes](https://dev.recurly.com/page/api-release-notes) page.","excerpt":"","slug":"versioning","type":"basic","title":"API Versioning","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>API Versioning</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Recurly strives to provide developers with stable APIs to integrate against while still being able to provide new and expanded functionality. To balance these two goals we provide different API versions and only add new features to the latest version of the API. This allows you to choose the best time to update your integration and take advantage of new features.</p> 
                 <p>Recurly offers the following API versions: <a href="https://dev.recurly.com/v2.7/docs">2.7</a>, <a href="https://dev.recurly.com/v2.6/docs">2.6</a>, <a href="https://dev.recurly.com/v2.5/docs">2.5</a>, <a href="https://dev.recurly.com/v2.4/docs">2.4</a>, <a href="https://dev.recurly.com/v2.3/docs">2.3</a>, <a href="https://dev.recurly.com/v2.2/docs">2.2</a>, <a href="https://dev.recurly.com/v2.1/docs">2.1</a>, <a href="https://dev.recurly.com/v2.0/docs">2.0</a>.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-requesting-a-version"></div>Requesting A Version<a class="fa fa-anchor" href="#section-requesting-a-version"></a></h2> 
                 <p>When making requests to Recurly, your request should specify the desired API version using the <code>X-Api-Version</code> header:</p> 
                 <pre><code>X-Api-Version: 2.7
</code></pre>
                 <p>For backwards compatibility, if no version is specified the default is 2.0.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-deprecation"></div>Deprecation<a class="fa fa-anchor" href="#section-deprecation"></a></h2> 
                 <p>To signal that an API version is deprecated and will be removed in the future, Recurly will respond the following headers:</p> 
                 <pre><code>Recurly-Deprecated: TRUE
Recurly-Sunset-Date: 2018-06-01T00:00:00+00:00
</code></pre>
                 <p>The sunset date is an ISO 8601 date time when the version will no longer be accessible.</p> 
                 <p>Your integration should check for those headers so you can make updates in a timely fashion.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-changes-in-v2-7"></div>Changes in v2.7<a class="fa fa-anchor" href="#section-changes-in-v2-7"></a></h2> 
                 <p>Request and Response Changes:</p> 
                 <ul> 
                  <li>Changed <code>POST /v2/purchases</code> request:
                   <ul> 
                    <li>Added <code>coupon_codes</code>
                     <ul> 
                      <li>path: <code>&lt;coupon_codes type="array"&gt;&lt;coupon_code&gt;COUPON1234&lt;/coupon_code&gt;&lt;/coupon_codes&gt;</code></li>
                      <li>description: A list of coupon codes to apply to this purchase.</li>
                     </ul> </li>
                    <li>Added <code>subscriptions</code>
                     <ul> 
                      <li>path: <code>&lt;subscriptions type="array"&gt;&lt;subscription/&gt;&lt;/subscriptions&gt;</code></li>
                      <li>description: A list of Subscriptions to invoice in this purchase (currently only one subscription is allowed).</li>
                     </ul> </li>
                    <li>Added <code>gift_card</code>
                     <ul> 
                      <li>path: <code>&lt;gift_card&gt;&lt;redemption_code&gt;ABCD1234&lt;/redemption_code&gt;&lt;/gift_card&gt;</code></li>
                      <li>description: A gift card with a redemption code to apply to this purchase.</li>
                     </ul> </li>
                   </ul> </li>
                 </ul> 
                 <p>A complete list of changes for all versions is available on the <a href="https://dev.recurly.com/page/api-release-notes">API Release Notes</a> page.</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/versioning" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/versioning/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="pagination" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"59557419c0a2ba001bf5e1bb","category":"59557419c0a2ba001bf5e1a4","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T22:48:39.567Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"language":"json","status":400,"name":"","code":"{}"}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":2,"body":"[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Next Link\"\n}\n[/block]\nThe amount of records returns within a single API request defaults to 50. It may be changed to a maximum of 200 using a `per_page` query parameter, e.g. to return 200 accounts at a time:\n\n```\nhttps://your-subdomain.recurly.com/v2/accounts?per_page=200\n```\n\nWhen there are more records remaining than fit in the current response, the `Link` header is specified with the URI to the next page of results.\n\n```\nStatus: 200 OK \nLink: &lt;https://your-subdomain.recurly.com/v2/accounts?cursor=1972702718353176814%3A1465932489&gt;; rel=\"next\" \nETag: \"a4b0568a2278bc591ceb64b31547eb78\" \n```\n\nThe `cursor` parameter is a time-based pointer indicating where to resume the results. By using a cursor instead of page numbers, the API avoids returning duplicate records in the case where additional resources are added between pagination requests.\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Sorting and Filtering\"\n}\n[/block]\n Many endpoints support these advanced pagination parameters:\n\n* `sort` : String: The attribute that will be used to order records: `created_at`, `updated_at`. Defaults to `created_at`.\n* `order` : String : The order in which products will be returned: `asc` for ascending order, `desc` for descending order. Defaults to `desc`.\n* `begin_time` : Datetime : Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.\n* `end_time` : Datetime : Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes less than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.\n\nReview the parameters on each endpoint for more details.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"An account that was updated on `2016-01-19` and then again on `2016-03-23` would not be returned in a request for `sort=updated_at&amp;end_time=2016-03-01`.\",\n  \"title\": \"Updated at really means last updated at\"\n}\n[/block]\n\n[block:api-header]\n{\n  \"title\": \"Counting Records\"\n}\n[/block]\nStarting with API version 2.6, you must explicitly make a `HEAD` request to get the server count. Endpoints that return a list of resources will respond to this request and include a header indicating the total number of records available. They will not contain the xml body. The server count is specified with the `X-Records` header. E.g., for an endpoint with 14 records:\n\n```\nX-Records: 14\n```\n\nYou can pass filtering parameters (described above) to narrow down the resources you wish to count. Consider the example of counting all `collected` invoices in `2016`. You can send a `HEAD` request to this endpoint then parse the count from the X-Records response header:\n\n```\nhttps://your-subdomain.recurly.com/v2/invoices?begin_time=2016-01-01T00:00:00&amp;end_time=2017-01-01T00:00:00&amp;state=collected\n```\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Examples\"\n}\n[/block]\nThis will return accounts that were created on or before 2016-01-01 0:00 UTC in descending order of creation date:\n```\nhttps://your-subdomain.recurly.com/v2/accounts?sort=created_at&amp;order=desc&amp;end_time=2016-01-01\n```\n\nThis will return accounts that were last updated on or after 2016-07-01 10:30:01 Mountain Daylight Time in ascending order of updated date:\n\n```\nhttps://your-subdomain.recurly.com/v2/accounts?sort=updated_at&amp;order=asc&amp;begin_time=2016-07-01T10:30:01-06:00\n```\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"It's important to be aware that when paging through records sorted by their `updated_at` value, the order will change if they are modified:\\n* In ascending order, changes to records in previous pages will cause them to move back the end of the list, meaning you may see them multiple times. This can be avoided by using the time the pagination starts as the `end_time`.\\n* In descending order, changes to records in later pages will cause them to move up to the beginning of the list, meaning you would miss results.\",\n  \"title\": \"Beware of changes to records when sorting by updated_at\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"&lt;?php\\n// When accessing a sub resource with a many-to-one relation\\n// to the parent model, the attribute returns a Recurly_Stub.\\n// For example, take Account -&gt; Invoices\\n\\n$account = Recurly_Account::get('my_account_code');\\n\\n// Calling -&gt;invoices returns a Stub which allows lazily loading the list\\n$invoices = $account-&gt;invoices;\\n\\nprint $invoices;\\n// =&gt; &lt;Recurly_Stub[invoices] href=https://api.recurly.com/v2/accounts/my_account_code/invoices&gt;\\n\\n/**\\n * Prior to 2.5.0 calling -&gt;get() would only return the first page\\n * of results. With 2.5.0 and later, all results will be returned.\\n */\\nforeach ($invoices-&gt;get() as $inv) {\\n   print $inv-&gt;invoice_number . \\\"\\\\n\\\";\\n}\\n\\n/**\\n * Creating a List object directly will also allow you to iterate\\n * through all pages\\n */\\n$invoices = Recurly_InvoiceList::getForAccount('my_account_code');\\n\\n// Prints all invoices on the account\\nforeach ($invoices as $inv) {\\n   print $inv-&gt;invoice_number . \\\"\\\\n\\\";\\n}\\n\",\n      \"language\": \"php\",\n      \"gist\": \"44632c432dce4f56a0fa\"\n    },\n    {\n      \"code\": \"# Pagination in the ruby client is done using\\n# the Recurly::Pager class.\\n\\n# You can also create a Pager directly from any resource\\nRecurly::Invoice.paginate.class\\n#=&gt; Recurly::Resource::Pager\\n\\n# paginate optionally takes the sorting and filtering params\\n# if you want to specify them\\nopts = {\\n  begin_time: DateTime.new(2016,1,1),\\n  end_time: DateTime.new(2017,1,1),\\n  state: :collected,\\n  per_page: 10\\n}\\n\\n# find_each will fetch the pages for you\\n# until there are none left. It presents\\n# all the invoices on the server as a single enumerable\\nRecurly::Invoice.paginate(opts).find_each do |invoice|\\n  puts invoice.invoice_number\\nend\\n\\n# You can also use #find_each directly on the resource\\nRecurly::Invoice.find_each do |invoice|\\n  puts invoice.invoice_number\\nend\\n\\n# When accessing a sub resource with a many-to-one relation \\n# to the parent model, the attribute returns a Recurly::Resource::Pager. \\n# For example, take Account -&gt; Invoices\\naccount = Recurly::Account.find('my_account_code')\\n\\naccount.invoices.class\\n#=&gt; Recurly::Resource::Pager\\n\\n# Pager#each can be used to iterate through the only the given page\\naccount.invoices.each do |invoice|\\n  puts invoice.invoice_number\\nend\\n\\n# The default page size is 50 items, if you wish to page through more\\n# you can use Pager#find_each, find_each continues to fetch pages until\\n# there are none left\\naccount.invoices.find_each do |invoice|\\n  puts invoice.invoice_number\\nend\",\n      \"language\": \"ruby\"\n    },\n    {\n      \"code\": \"# When accessing a sub resource with a many-to-one relation\\n# to the parent model, the attribute returns a `relatiator` function.\\n# When called it returns a recurly.resource.Page.\\n# For example, take Account -&gt; Invoices\\n\\naccount = recurly.Account.get('tester')\\n\\nprint account.invoices\\n# =&gt; &lt;function relatitator at 0x1023628c0&gt;\\n\\nprint account.invoices().__class__\\n# =&gt; &lt;class 'recurly.resource.Page'&gt;\\n\\n# To page through every invoice on the account\\nfor invoice in account.invoices():\\n    print invoice.invoice_number\\n\\n# You can also call the all() method on\\n# a resource to page through every resource\\n# on your site. For instance, to page through\\n# every invoice:\\nfor invoice in recurly.Invoice.all():\\n    print invoice.invoice_number\",\n      \"language\": \"python\",\n      \"name\": null\n    },\n    {\n      \"code\": \"using System.Linq;\\n\\nvar accounts = Accounts.List();\\nwhile (accounts.Any())\\n{\\n    foreach (var account in accounts)\\n        Console.WriteLine(account);\\n    accounts = accounts.Next;\\n}\",\n      \"language\": \"csharp\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"The PHP `Recurly_Pager` class sets up an iterator across all the relevant records. It does not provide pagination functionality by default.\",\n  \"title\": \"PHP Pagination\"\n}\n[/block]","excerpt":"","slug":"pagination","type":"basic","title":"Pagination","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Pagination</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-next-link" class="anchor waypoint"></div>Next Link<a href="#section-next-link" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p>The amount of records returns within a single API request defaults to 50. It may be changed to a maximum of 200 using a <code>per_page</code> query parameter, e.g. to return 200 accounts at a time:</p> 
                 <pre><code>https://your-subdomain.recurly.com/v2/accounts?per_page=200
</code></pre>
                 <p>When there are more records remaining than fit in the current response, the <code>Link</code> header is specified with the URI to the next page of results.</p> 
                 <pre><code>Status: 200 OK 
Link: &lt;https://your-subdomain.recurly.com/v2/accounts?cursor=1972702718353176814%3A1465932489&gt;; rel="next" 
ETag: "a4b0568a2278bc591ceb64b31547eb78"
</code></pre>
                 <p>The <code>cursor</code> parameter is a time-based pointer indicating where to resume the results. By using a cursor instead of page numbers, the API avoids returning duplicate records in the case where additional resources are added between pagination requests.</p> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-sorting-and-filtering" class="anchor waypoint"></div>Sorting and Filtering<a href="#section-sorting-and-filtering" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p> Many endpoints support these advanced pagination parameters:</p> 
                 <ul> 
                  <li><code>sort</code> : String: The attribute that will be used to order records: <code>created_at</code>, <code>updated_at</code>. Defaults to <code>created_at</code>.</li>
                  <li><code>order</code> : String : The order in which products will be returned: <code>asc</code> for ascending order, <code>desc</code> for descending order. Defaults to <code>desc</code>.</li>
                  <li><code>begin_time</code> : Datetime : Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.</li>
                  <li><code>end_time</code> : Datetime : Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes less than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.</li>
                 </ul> 
                 <p>Review the parameters on each endpoint for more details.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-info "> 
                <h3><i title="Info" class="fa fa-info-circle on"></i><span>Updated at really means last updated at</span> </h3>
                <p>An account that was updated on <code>2016-01-19</code> and then again on <code>2016-03-23</code> would not be returned in a request for <code>sort=updated_at&amp;end_time=2016-03-01</code>.</p> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-counting-records" class="anchor waypoint"></div>Counting Records<a href="#section-counting-records" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Starting with API version 2.6, you must explicitly make a <code>HEAD</code> request to get the server count. Endpoints that return a list of resources will respond to this request and include a header indicating the total number of records available. They will not contain the xml body. The server count is specified with the <code>X-Records</code> header. E.g., for an endpoint with 14 records:</p> 
                 <pre><code>X-Records: 14
</code></pre>
                 <p>You can pass filtering parameters (described above) to narrow down the resources you wish to count. Consider the example of counting all <code>collected</code> invoices in <code>2016</code>. You can send a <code>HEAD</code> request to this endpoint then parse the count from the X-Records response header:</p> 
                 <pre><code>https://your-subdomain.recurly.com/v2/invoices?begin_time=2016-01-01T00:00:00&amp;end_time=2017-01-01T00:00:00&amp;state=collected
</code></pre>
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-examples" class="anchor waypoint"></div>Examples<a href="#section-examples" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p>This will return accounts that were created on or before 2016-01-01 0:00 UTC in descending order of creation date:</p> 
                 <pre><code>https://your-subdomain.recurly.com/v2/accounts?sort=created_at&amp;order=desc&amp;end_time=2016-01-01
</code></pre>
                 <p>This will return accounts that were last updated on or after 2016-07-01 10:30:01 Mountain Daylight Time in ascending order of updated date:</p> 
                 <pre><code>https://your-subdomain.recurly.com/v2/accounts?sort=updated_at&amp;order=asc&amp;begin_time=2016-07-01T10:30:01-06:00
</code></pre>
                </div> 
               </div> 
               <div class="magic-block-callout type-warning "> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i><span>Beware of changes to records when sorting by updated_at</span> </h3>
                <p>It's important to be aware that when paging through records sorted by their <code>updated_at</code> value, the order will change if they are modified:</p> 
                <ul> 
                 <li>In ascending order, changes to records in previous pages will cause them to move back the end of the list, meaning you may see them multiple times. This can be avoided by using the time the pagination starts as the <code>end_time</code>.</li>
                 <li>In descending order, changes to records in later pages will cause them to move up to the beginning of the list, meaning you would miss results.</li>
                </ul> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
                 </div> 
                 <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
                  <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
                 </div> 
                 <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
                  <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
                 </div> 
                 <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
                  <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-comment">// When accessing a sub resource with a many-to-one relation</span> <span class="cm-comment">// to the parent model, the attribute returns a Recurly_Stub.</span> <span class="cm-comment">// For example, take Account -&gt; Invoices</span> <span class="cm-variable-2">$account</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_Account</span>::<span class="cm-variable">get</span>(<span class="cm-string">'my_account_code'</span>); <span class="cm-comment">// Calling -&gt;invoices returns a Stub which allows lazily loading the list</span> <span class="cm-variable-2">$invoices</span> <span class="cm-operator">=</span> <span class="cm-variable-2">$account</span><span class="cm-operator">-&gt;</span><span class="cm-variable">invoices</span>; <span class="cm-keyword">print</span> <span class="cm-variable-2">$invoices</span>; <span class="cm-comment">// =&gt; &lt;Recurly_Stub[invoices] href=https://api.recurly.com/v2/accounts/my_account_code/invoices&gt;</span> <span class="cm-comment">/**</span> <span class="cm-comment">* Prior to 2.5.0 calling -&gt;get() would only return the first page</span> <span class="cm-comment">* of results. With 2.5.0 and later, all results will be returned.</span> <span class="cm-comment">*/</span> <span class="cm-keyword">foreach</span> (<span class="cm-variable-2">$invoices</span><span class="cm-operator">-&gt;</span><span class="cm-variable">get</span>() <span class="cm-keyword">as</span> <span class="cm-variable-2">$inv</span>) { <span class="cm-keyword">print</span> <span class="cm-variable-2">$inv</span><span class="cm-operator">-&gt;</span><span class="cm-variable">invoice_number</span> . <span class="cm-string">"\n"</span>; } <span class="cm-comment">/**</span> <span class="cm-comment">* Creating a List object directly will also allow you to iterate</span> <span class="cm-comment">* through all pages</span> <span class="cm-comment">*/</span> <span class="cm-variable-2">$invoices</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_InvoiceList</span>::<span class="cm-variable">getForAccount</span>(<span class="cm-string">'my_account_code'</span>); <span class="cm-comment">// Prints all invoices on the account</span> <span class="cm-keyword">foreach</span> (<span class="cm-variable-2">$invoices</span> <span class="cm-keyword">as</span> <span class="cm-variable-2">$inv</span>) { <span class="cm-keyword">print</span> <span class="cm-variable-2">$inv</span><span class="cm-operator">-&gt;</span><span class="cm-variable">invoice_number</span> . <span class="cm-string">"\n"</span>; } </span></code></pre> 
                 <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-comment"># Pagination in the ruby client is done using</span> <span class="cm-comment"># the Recurly::Pager class.</span> <span class="cm-comment"># You can also create a Pager directly from any resource</span> <span class="cm-atom">Recurly::Invoice</span><span class="cm-operator">.</span><span class="cm-property">paginate</span><span class="cm-operator">.</span><span class="cm-property">class</span> <span class="cm-comment">#=&gt; Recurly::Resource::Pager</span> <span class="cm-comment"># paginate optionally takes the sorting and filtering params</span> <span class="cm-comment"># if you want to specify them</span> <span class="cm-variable">opts</span> <span class="cm-operator">=</span> { <span class="cm-atom">begin_time:</span> <span class="cm-tag">DateTime</span><span class="cm-operator">.</span><span class="cm-property">new</span>(<span class="cm-number">2016</span>,<span class="cm-number">1</span>,<span class="cm-number">1</span>), <span class="cm-atom">end_time:</span> <span class="cm-tag">DateTime</span><span class="cm-operator">.</span><span class="cm-property">new</span>(<span class="cm-number">2017</span>,<span class="cm-number">1</span>,<span class="cm-number">1</span>), <span class="cm-atom">state:</span> <span class="cm-atom">:collected</span>, <span class="cm-atom">per_page:</span> <span class="cm-number">10</span> } <span class="cm-comment"># find_each will fetch the pages for you</span> <span class="cm-comment"># until there are none left. It presents</span> <span class="cm-comment"># all the invoices on the server as a single enumerable</span> <span class="cm-atom">Recurly::Invoice</span><span class="cm-operator">.</span><span class="cm-property">paginate</span>(<span class="cm-variable">opts</span>)<span class="cm-operator">.</span><span class="cm-property">find_each</span> <span class="cm-keyword">do</span> |<span class="cm-def">invoice</span>| <span class="cm-variable">puts</span> <span class="cm-variable">invoice</span><span class="cm-operator">.</span><span class="cm-property">invoice_number</span> <span class="cm-keyword">end</span> <span class="cm-comment"># You can also use #find_each directly on the resource</span> <span class="cm-atom">Recurly::Invoice</span><span class="cm-operator">.</span><span class="cm-property">find_each</span> <span class="cm-keyword">do</span> |<span class="cm-def">invoice</span>| <span class="cm-variable">puts</span> <span class="cm-variable">invoice</span><span class="cm-operator">.</span><span class="cm-property">invoice_number</span> <span class="cm-keyword">end</span> <span class="cm-comment"># When accessing a sub resource with a many-to-one relation </span> <span class="cm-comment"># to the parent model, the attribute returns a Recurly::Resource::Pager. </span> <span class="cm-comment"># For example, take Account -&gt; Invoices</span> <span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'my_account_code'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">invoices</span><span class="cm-operator">.</span><span class="cm-property">class</span> <span class="cm-comment">#=&gt; Recurly::Resource::Pager</span> <span class="cm-comment"># Pager#each can be used to iterate through the only the given page</span> <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">invoices</span><span class="cm-operator">.</span><span class="cm-property">each</span> <span class="cm-keyword">do</span> |<span class="cm-def">invoice</span>| <span class="cm-variable">puts</span> <span class="cm-variable">invoice</span><span class="cm-operator">.</span><span class="cm-property">invoice_number</span> <span class="cm-keyword">end</span> <span class="cm-comment"># The default page size is 50 items, if you wish to page through more</span> <span class="cm-comment"># you can use Pager#find_each, find_each continues to fetch pages until</span> <span class="cm-comment"># there are none left</span> <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">invoices</span><span class="cm-operator">.</span><span class="cm-property">find_each</span> <span class="cm-keyword">do</span> |<span class="cm-def">invoice</span>| <span class="cm-variable">puts</span> <span class="cm-variable">invoice</span><span class="cm-operator">.</span><span class="cm-property">invoice_number</span> <span class="cm-keyword">end</span></span></code></pre> 
                 <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-comment"># When accessing a sub resource with a many-to-one relation</span> <span class="cm-comment"># to the parent model, the attribute returns a `relatiator` function.</span> <span class="cm-comment"># When called it returns a recurly.resource.Page.</span> <span class="cm-comment"># For example, take Account -&gt; Invoices</span> <span class="cm-variable">account</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'tester'</span>) <span class="cm-keyword">print</span> <span class="cm-variable">account</span>.<span class="cm-variable">invoices</span> <span class="cm-comment"># =&gt; &lt;function relatitator at 0x1023628c0&gt;</span> <span class="cm-keyword">print</span> <span class="cm-variable">account</span>.<span class="cm-variable">invoices</span>().<span class="cm-variable">__class__</span> <span class="cm-comment"># =&gt; &lt;class 'recurly.resource.Page'&gt;</span> <span class="cm-comment"># To page through every invoice on the account</span> <span class="cm-keyword">for</span> <span class="cm-variable">invoice</span> <span class="cm-keyword">in</span> <span class="cm-variable">account</span>.<span class="cm-variable">invoices</span>(): <span class="cm-keyword">print</span> <span class="cm-variable">invoice</span>.<span class="cm-variable">invoice_number</span> <span class="cm-comment"># You can also call the all() method on</span> <span class="cm-comment"># a resource to page through every resource</span> <span class="cm-comment"># on your site. For instance, to page through</span> <span class="cm-comment"># every invoice:</span> <span class="cm-keyword">for</span> <span class="cm-variable">invoice</span> <span class="cm-keyword">in</span> <span class="cm-variable">recurly</span>.<span class="cm-variable">Invoice</span>.<span class="cm-builtin">all</span>(): <span class="cm-keyword">print</span> <span class="cm-variable">invoice</span>.<span class="cm-variable">invoice_number</span></span></code></pre> 
                 <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">using</span> <span class="cm-variable">System</span>.<span class="cm-variable">Linq</span>; <span class="cm-keyword">var</span> <span class="cm-def">accounts</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">List</span>(); <span class="cm-keyword">while</span> (<span class="cm-variable">accounts</span>.<span class="cm-variable">Any</span>()) { <span class="cm-keyword">foreach</span> (<span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-keyword">in</span> <span class="cm-variable">accounts</span>) <span class="cm-variable">Console</span>.<span class="cm-variable">WriteLine</span>(<span class="cm-variable">account</span>); <span class="cm-variable">accounts</span> <span class="cm-operator">=</span> <span class="cm-variable">accounts</span>.<span class="cm-variable">Next</span>; }</span></code></pre> 
                </div> 
               </div> 
               <div class="magic-block-callout type-warning "> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i><span>PHP Pagination</span> </h3>
                <p>The PHP <code>Recurly_Pager</code> class sets up an iterator across all the relevant records. It does not provide pagination functionality by default.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/pagination" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/pagination/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="rate-limits" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"59557419c0a2ba001bf5e1bc","category":"59557419c0a2ba001bf5e1a4","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T22:49:59.038Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":3,"body":"In order to provide a fast response time to all our customers, we may rate limit excessive requests. By default, new Recurly sites have the following API rate limits:\n\n* Sandbox sites: 400 requests/min. All requests count towards the rate limit.\n* Production sites: 1,000 requests/min. Only GET and HEAD requests count towards the rate limit.\n\nOnce your site moves into production mode, Recurly will only rate limit GET and HEAD requests. New subscriptions, account modifications, and other requests using POST, PUT, or DELETE methods will not count against your rate limit.\n\nThe rate limit is calculated over a sliding 5 minute window. This means a production site could make 4,000 requests within one minute and not hit the rate limit so long as the site made less than 1,000 requests during the prior 4 minutes.\n\nWhen your site reaches its rate limit, your site technical contact will receive an email alerting them of the issue. This email will be sent not more than once every three hours. Our support team will also be notified. Please reach out to Recurly support if you need assistance in resolving this issue.\n\nIf an API request exceeds the rate limit, the API returns a 429 status code indicating `Too Many Requests`. If your business needs a higher limit, please contact support.\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"HTTP Headers\"\n}\n[/block]\nEvery authenticated API request returns headers with your current rate limit information. Your requests rate limit headers may look like:\n\n```\nX-RateLimit-Limit: 5000\nX-RateLimit-Remaining: 4999\nX-RateLimit-Reset: 1414622019\n```\n\nThe `X-RateLimit-Limit` is your total request limit during the 5 minute window (e.g. requests/min * 5 min). The `X-RateLimit-Remaining` indicates the number of requests remaining until your requests will be denied. Finally, the `X-RateLimit-Reset` header contains a timestamp for when the current window will completely reset assuming no further API requests are made.","excerpt":"","slug":"rate-limits","type":"basic","title":"Rate Limits","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Rate Limits</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>In order to provide a fast response time to all our customers, we may rate limit excessive requests. By default, new Recurly sites have the following API rate limits:</p> 
                 <ul> 
                  <li>Sandbox sites: 400 requests/min. All requests count towards the rate limit.</li>
                  <li>Production sites: 1,000 requests/min. Only GET and HEAD requests count towards the rate limit.</li>
                 </ul> 
                 <p>Once your site moves into production mode, Recurly will only rate limit GET and HEAD requests. New subscriptions, account modifications, and other requests using POST, PUT, or DELETE methods will not count against your rate limit.</p> 
                 <p>The rate limit is calculated over a sliding 5 minute window. This means a production site could make 4,000 requests within one minute and not hit the rate limit so long as the site made less than 1,000 requests during the prior 4 minutes.</p> 
                 <p>When your site reaches its rate limit, your site technical contact will receive an email alerting them of the issue. This email will be sent not more than once every three hours. Our support team will also be notified. Please reach out to Recurly support if you need assistance in resolving this issue.</p> 
                 <p>If an API request exceeds the rate limit, the API returns a 429 status code indicating <code>Too Many Requests</code>. If your business needs a higher limit, please contact support.</p> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-http-headers" class="anchor waypoint"></div>HTTP Headers<a href="#section-http-headers" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Every authenticated API request returns headers with your current rate limit information. Your requests rate limit headers may look like:</p> 
                 <pre><code>X-RateLimit-Limit: 5000
X-RateLimit-Remaining: 4999
X-RateLimit-Reset: 1414622019
</code></pre>
                 <p>The <code>X-RateLimit-Limit</code> is your total request limit during the 5 minute window (e.g. requests/min * 5 min). The <code>X-RateLimit-Remaining</code> indicates the number of requests remaining until your requests will be denied. Finally, the <code>X-RateLimit-Reset</code> header contains a timestamp for when the current window will completely reset assuming no further API requests are made.</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/rate-limits" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/rate-limits/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="welcome" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"59557419c0a2ba001bf5e1bd","category":"59557419c0a2ba001bf5e1a4","parentDoc":null,"user":"5564a0073a61a72f0067cb22","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":["56cd46e949abf10b0036a1e6","59b1583ffff23e00100d1937"],"next":{"pages":[],"description":""},"createdAt":"2015-06-10T22:06:26.211Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":4,"body":"## SUCCESSFUL STATUS CODES (2XX)\n`200 OK`\nThe request was successful.\n`201 Created`\nThe resource was successfully created. Confirms a success when creating a new account, credit, subscription, etc.\n`204 No Content`\nThe request was successful and there is no response body.\n\n## CLIENT ERROR STATUS CODES (4XX)\n`400 Bad Request`\nThe request was invalid or could not be understood by the server. Resubmitting the request will likely result in the same error. This commonly occurs when your XML is invalid, e.g. ampersands are not correctly encoded in the text of your request. Please inspect the body of the response for more details regarding the error.\n`401 Unauthorized`\nYour API key is missing or invalid.\n`402 Payment Required`\nYour Recurly account is in production mode but is not in good standing. Please pay any outstanding invoices.\n`403 Forbidden`\nThe login is attempting to perform an action it does not have privileges to access. Verify your login credentials are for the appropriate account.\n`404 Not Found`\nThe resource was not found with the given identifier. The response body will explain which resource was not found.\n`405 Method Not Allowed`\nThe requested method is not valid at the given URL.\n`406 Not Acceptable`\nThe request's Accept header is not set to application/xml.\n`412 Precondition Failed`\nThe request was unsuccessful because a condition was not met. For example, this message may be returned if you attempt to cancel a subscription for an account that has no subscription.\n`422 Unprocessable Entity`\nCould not process a POST or PUT request because the request is invalid. See the response body for more details.\n`429 Too many Requests`\nYou have made too many API requests in the last hour. Future API requests will be ignored until the beginning of the next hour.\n\n## SERVER ERROR STATUS CODES (5XX)\n`500 Internal Server Error`\nThe server encountered an error while processing your request and failed.\n`502 Gateway Error`\nThe load balancer or web server has trouble connecting to the Recurly app. Please try the request again.\n`503 Service Unavailable`\nThe service is temporarily unavailable. Please try the request again.\n\n##FUTURE COMPATIBILITY\nFor future compatibility, please interpret the following status code ranges:\n\n**200299** as success,\n**400499** as client request errors,\n**500599** as server errors\n\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"404 Not Found Responses\"\n}\n[/block]\nWhen a lookup, update, or delete request is requested on an object that does not exist, the server returns `404 Not Found`:\n\n```\nStatus: 404 Not Found\nContent-Type: application/xml; charset=utf-8\n```\n\n```\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;error&gt;\n  &lt;symbol&gt;not_found&lt;/symbol&gt;\n  &lt;description&gt;The record could not be located.&lt;/description&gt;\n&lt;/error&gt;\n```\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"422 Unprocessable Entity Responses\"\n}\n[/block]\nIf the requested create, update, or delete cannot be performed due to validation errors, the server returns a `422 Unprocessable Entity` response with either an array of the validation errors or a single error:\n\n```\nStatus: 422 Unprocessable Entity\nContent-Type: application/xml; charset=utf-8\n```\n\n```\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;errors&gt;\n  &lt;error field=\"model_name.field_name\" symbol=\"not_a_number\" lang=\"en-US\"&gt;is not a number&lt;/error&gt;\n&lt;/errors&gt;\n```\n\n```\n&lt;error&gt;\n  &lt;symbol&gt;simultaneous_request&lt;/symbol&gt;\n  &lt;description&gt;\n    A change for subscription 3cf89f0c3fcda0b15c50134f63856d4e is already in progress.\n  &lt;/description&gt;\n&lt;/error&gt;\n```","excerpt":"Every request includes an HTTP status code with the result. The status code should examined before the response. In most error cases, the response body will contain an errors XML document with more details.","slug":"welcome","type":"basic","title":"HTTP Status Codes","__v":1,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>HTTP Status Codes</h1>
           <div marked>
            Every request includes an HTTP status code with the result. The status code should examined before the response. In most error cases, the response body will contain an errors XML document with more details.
           </div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-successful-status-codes-2xx-"></div>SUCCESSFUL STATUS CODES (2XX)<a class="fa fa-anchor" href="#section-successful-status-codes-2xx-"></a></h2> 
                 <p><code>200 OK</code><br>The request was successful.<br><code>201 Created</code><br>The resource was successfully created. Confirms a success when creating a new account, credit, subscription, etc.<br><code>204 No Content</code><br>The request was successful and there is no response body.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-client-error-status-codes-4xx-"></div>CLIENT ERROR STATUS CODES (4XX)<a class="fa fa-anchor" href="#section-client-error-status-codes-4xx-"></a></h2> 
                 <p><code>400 Bad Request</code><br>The request was invalid or could not be understood by the server. Resubmitting the request will likely result in the same error. This commonly occurs when your XML is invalid, e.g. ampersands are not correctly encoded in the text of your request. Please inspect the body of the response for more details regarding the error.<br><code>401 Unauthorized</code><br>Your API key is missing or invalid.<br><code>402 Payment Required</code><br>Your Recurly account is in production mode but is not in good standing. Please pay any outstanding invoices.<br><code>403 Forbidden</code><br>The login is attempting to perform an action it does not have privileges to access. Verify your login credentials are for the appropriate account.<br><code>404 Not Found</code><br>The resource was not found with the given identifier. The response body will explain which resource was not found.<br><code>405 Method Not Allowed</code><br>The requested method is not valid at the given URL.<br><code>406 Not Acceptable</code><br>The request's Accept header is not set to application/xml.<br><code>412 Precondition Failed</code><br>The request was unsuccessful because a condition was not met. For example, this message may be returned if you attempt to cancel a subscription for an account that has no subscription.<br><code>422 Unprocessable Entity</code><br>Could not process a POST or PUT request because the request is invalid. See the response body for more details.<br><code>429 Too many Requests</code><br>You have made too many API requests in the last hour. Future API requests will be ignored until the beginning of the next hour.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-server-error-status-codes-5xx-"></div>SERVER ERROR STATUS CODES (5XX)<a class="fa fa-anchor" href="#section-server-error-status-codes-5xx-"></a></h2> 
                 <p><code>500 Internal Server Error</code><br>The server encountered an error while processing your request and failed.<br><code>502 Gateway Error</code><br>The load balancer or web server has trouble connecting to the Recurly app. Please try the request again.<br><code>503 Service Unavailable</code><br>The service is temporarily unavailable. Please try the request again.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-future-compatibility"></div>FUTURE COMPATIBILITY<a class="fa fa-anchor" href="#section-future-compatibility"></a></h2> 
                 <p>For future compatibility, please interpret the following status code ranges:</p> 
                 <p><strong>200299</strong> as success,<br><strong>400499</strong> as client request errors,<br><strong>500599</strong> as server errors</p> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-404-not-found-responses" class="anchor waypoint"></div>404 Not Found Responses<a href="#section-404-not-found-responses" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p>When a lookup, update, or delete request is requested on an object that does not exist, the server returns <code>404 Not Found</code>:</p> 
                 <pre><code>Status: 404 Not Found
Content-Type: application/xml; charset=utf-8
</code></pre>
                 <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;error&gt;
  &lt;symbol&gt;not_found&lt;/symbol&gt;
  &lt;description&gt;The record could not be located.&lt;/description&gt;
&lt;/error&gt;
</code></pre>
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-422-unprocessable-entity-responses" class="anchor waypoint"></div>422 Unprocessable Entity Responses<a href="#section-422-unprocessable-entity-responses" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <p>If the requested create, update, or delete cannot be performed due to validation errors, the server returns a <code>422 Unprocessable Entity</code> response with either an array of the validation errors or a single error:</p> 
                 <pre><code>Status: 422 Unprocessable Entity
Content-Type: application/xml; charset=utf-8
</code></pre>
                 <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;errors&gt;
  &lt;error field="model_name.field_name" symbol="not_a_number" lang="en-US"&gt;is not a number&lt;/error&gt;
&lt;/errors&gt;
</code></pre>
                 <pre><code>&lt;error&gt;
  &lt;symbol&gt;simultaneous_request&lt;/symbol&gt;
  &lt;description&gt;
    A change for subscription 3cf89f0c3fcda0b15c50134f63856d4e is already in progress.
  &lt;/description&gt;
&lt;/error&gt;
</code></pre>
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/welcome" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/welcome/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="integrations" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e228","category":"59557419c0a2ba001bf5e1a5","parentDoc":null,"user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-26T18:21:30.595Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":0,"body":"Recurly has a variety of integrations you should check out!\n\n[Webhooks API](https://dev.recurly.com/page/webhooks)\n\n[Customer Imports](https://dev.recurly.com/page/customer-imports)","excerpt":"","slug":"integrations","type":"basic","title":"Integrations","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Integrations</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Recurly has a variety of integrations you should check out!</p> 
                 <p><a href="https://dev.recurly.com/page/webhooks">Webhooks API</a></p> 
                 <p><a href="https://dev.recurly.com/page/customer-imports">Customer Imports</a></p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/integrations" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/integrations/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="client-libraries" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741ac0a2ba001bf5e1db","category":"59557419c0a2ba001bf5e1a6","user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","parentDoc":null,"version":"59557419c0a2ba001bf5e1a3","updates":["55940e20fd29b92300c262bf","55b2bfc0a74a380d00e290a6","55b2c0466862a10d00887adf","55bbb926a8400c2d00873f2a","565f689e413e06170093df6a","58d2b9a19c99c92f00646f8e","5977a75032f043002002f6d9","59b738dba50f750030f42a78","59ccac98e30e6c00300cef7d"],"next":{"pages":[],"description":""},"createdAt":"2015-06-26T18:25:56.960Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"code":"{}","language":"json","status":400,"name":""}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":0,"body":"Recurly has a variety of official client libraries you should check out!\n\n[PHP](https://dev.recurly.com/page/php)\n[Ruby](https://dev.recurly.com/page/ruby)\n[Python](https://dev.recurly.com/page/python)\n[Java](https://github.com/killbilling/recurly-java-library)\n[.Net](https://dev.recurly.com/page/net)\niOS  [Github](https://github.com/recurly/recurly-client-ios) | [Documentation](http://cocoadocs.org/docsets/RecurlySDK/)\n[Android](https://github.com/recurly/recurly-client-android)\n\nThere are also some unofficial libraries created by our users:\n\n[GO](https://github.com/blacklightcms/recurly)\n[Node.js](https://github.com/cgerrior/node-recurly)\n[Elixir](https://github.com/bhelx/recurly-client-elixir)","excerpt":"","slug":"client-libraries","type":"basic","title":"Client Libraries","__v":3,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Client Libraries</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Recurly has a variety of official client libraries you should check out!</p> 
                 <p><a href="https://dev.recurly.com/page/php">PHP</a><br><a href="https://dev.recurly.com/page/ruby">Ruby</a><br><a href="https://dev.recurly.com/page/python">Python</a><br><a href="https://github.com/killbilling/recurly-java-library">Java</a><br><a href="https://dev.recurly.com/page/net">.Net</a><br>iOS  <a href="https://github.com/recurly/recurly-client-ios">Github</a> | <a href="http://cocoadocs.org/docsets/RecurlySDK/">Documentation</a><br><a href="https://github.com/recurly/recurly-client-android">Android</a></p> 
                 <p>There are also some unofficial libraries created by our users:</p> 
                 <p><a href="https://github.com/blacklightcms/recurly">GO</a><br><a href="https://github.com/cgerrior/node-recurly">Node.js</a><br><a href="https://github.com/bhelx/recurly-client-elixir">Elixir</a></p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/client-libraries" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/client-libraries/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="recurlyjs" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e22f","category":"59557419c0a2ba001bf5e1a7","parentDoc":null,"project":"555fbba928249c1900618a82","user":"5564a0073a61a72f0067cb22","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-03-04T22:51:11.649Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"language":"json","status":400,"name":"","code":"{}"}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":0,"body":"&lt;img src=\"https://files.readme.io/kBrV8yRSzOKtvARQyP46_RecurlyJS_Logo-594.png\" alt=\"Recurly.js Logo\" width=\"300\"&gt;\n\n&lt;h3&gt;Customize Your Checkout Process and Accept Payments Securely&lt;/h3&gt;\n\nSecurely accept sensitive payment details within your checkout process with a fully customizable user experience. The Recurly.js JavaScript library secures your checkout forms. Create subscriptions, process one-time transactions, and update customer billing information worry-free.\n\n&lt;h3&gt;PCI Compliance through Hosted Fields&lt;/h3&gt;\n\nRecurly provides transparent iframes that allow you to deliver a customized customer checkout experience, while ensuring you meet the latest PCI DSS SAQ A compliance requirements.","excerpt":"","slug":"recurlyjs","type":"basic","title":"Recurly.js Overview","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Recurly.js Overview</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p><img src="https://files.readme.io/kBrV8yRSzOKtvARQyP46_RecurlyJS_Logo-594.png" alt="Recurly.js Logo" width="300"></p> 
                 <p></p>
                 <h3>Customize Your Checkout Process and Accept Payments Securely</h3> 
                 <p></p> 
                 <p>Securely accept sensitive payment details within your checkout process with a fully customizable user experience. The Recurly.js JavaScript library secures your checkout forms. Create subscriptions, process one-time transactions, and update customer billing information worry-free.</p> 
                 <p></p>
                 <h3>PCI Compliance through Hosted Fields</h3> 
                 <p></p> 
                 <p>Recurly provides transparent iframes that allow you to deliver a customized customer checkout experience, while ensuring you meet the latest PCI DSS SAQ A compliance requirements.</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/recurlyjs" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/recurlyjs/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="how-it-works" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e230","category":"59557419c0a2ba001bf5e1a7","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":["570eb5f23160d10e0041df28"],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T03:19:34.724Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"settings":"","results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[],"url":""},"isReference":false,"order":1,"body":"When a customer submits your payment form, Recurly.js sends customer payment information to be encrypted and stored at Recurly and gives you an authorization key to complete the subscription process using our API.\n\nWith this authorization key (or *token*), you can do anything with our API that requires payment information. Because you never handle any sensitive payment information, your PCI scope is drastically reduced.","excerpt":"","slug":"how-it-works","type":"basic","title":"How it Works","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>How it Works</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>When a customer submits your payment form, Recurly.js sends customer payment information to be encrypted and stored at Recurly and gives you an authorization key to complete the subscription process using our API.</p> 
                 <p>With this authorization key (or <em>token</em>), you can do anything with our API that requires payment information. Because you never handle any sensitive payment information, your PCI scope is drastically reduced.</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/how-it-works" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/how-it-works/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="getting-started-1" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e231","category":"59557419c0a2ba001bf5e1a7","project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","parentDoc":null,"version":"59557419c0a2ba001bf5e1a3","updates":["57180cd7602b9c0e000dab2c","59095020269f1f2300349125"],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T03:21:56.345Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"settings":"","results":{"codes":[{"language":"json","status":200,"name":"","code":"{}"},{"name":"","code":"{}","language":"json","status":400}]},"auth":"required","params":[],"url":""},"isReference":false,"order":2,"body":"## Include\n\n`&lt;script src=\"https://js.recurly.com/v4/recurly.js\"&gt;&lt;/script&gt;`\n\nTo begin, you'll include the Recurly.js script on your page.\n\nThis exposes a single global object, `recurly`.\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Self-Hosting Recurly.js\",\n  \"body\": \"The Recurly-hosted version of recurly.js is designed and updated to maintain compatibility with system update deployments that take place from time-to-time. Locally hosted versions of recurly.js run the risk of encountering issues with system interaction and incompatibility which may result in avoidable service interruptions on your client page. It is for this reason, we highly recommend against and do not support locally hosted copies of recurly.js.\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"JS Framework Support\",\n  \"body\": \"Due to the complexities of PCI requirements for the DSS v3.2 SAQ A, Recurly does not provide native support for reactive frameworks like React and Angular.\"\n}\n[/block]\n## Configure\n\n`recurly.configure('sc-ABCDEFGHI123456789');`\n\nSimply call `recurly.configure` anywhere on your page, passing your public key. This identifies your site to Recurly servers. You can find your public key in the [API Access section](https://app.recurly.com/go/developer/api_access) of your admin app.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Be sure to replace `sc-ABCDEFGHI123456789` with your own public key.\",\n  \"title\": \"Use Your Site's Public Key\"\n}\n[/block]\n`recurly.configure` accepts other options not detailed here. You may refer to the [source](https://github.com/recurly/recurly-js/blob/master/lib/recurly.js#L76-L88) for more detail.\n\n## Build a Card form\n\nBuild a form however you like. Use the data-recurly attribute to identify input field targets to Recurly.js. To identify where Recurly.js will inject card data fields, we recommend using simple div elements.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"&lt;form&gt;\\n  &lt;input type=\\\"text\\\" data-recurly=\\\"first_name\\\"&gt;\\n  &lt;input type=\\\"text\\\" data-recurly=\\\"last_name\\\"&gt;\\n  &lt;div data-recurly=\\\"number\\\"&gt;&lt;/div&gt;\\n  &lt;div data-recurly=\\\"month\\\"&gt;&lt;/div&gt;\\n  &lt;div data-recurly=\\\"year\\\"&gt;&lt;/div&gt;\\n  &lt;div data-recurly=\\\"cvv\\\"&gt;&lt;/div&gt;\\n  &lt;input type=\\\"hidden\\\" name=\\\"recurly-token\\\" data-recurly=\\\"token\\\"&gt;\\n  &lt;button&gt;submit&lt;/button&gt;\\n&lt;/form&gt;\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nTo collect card payment information from your customers, you'll create a form similar to this one. Recurly.js uses the `data-recurly` attributes on the input tags to gather customer information before sending it to our servers.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"In order for recurly.js to inject the card payment hosted fields into your form, the target elements must be present in the document at the time you make the `recurly.configure` call.\"\n}\n[/block]\n**Note** that card data is not present in the form, but merely given a placeholder element. This is because Recurly.js must inject those fields onto the page within iframes to ensure strict security of customer card data. To further customize your checkout experience, you will be able to pick and use any color for the placeholder text.\n\nThis particular form contains the minimum required input fields, and **the table below demonstrates all possible input fields.**\n\n### Card data\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field Name\",\n    \"h-1\": \"Example\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"number\",\n    \"1-0\": \"month\",\n    \"2-0\": \"year\",\n    \"3-0\": \"first_name\",\n    \"4-0\": \"last_name\",\n    \"5-0\": \"cvv\",\n    \"0-1\": \"`4111-1111-1111-1111`\",\n    \"1-1\": \"`8` or `02`\",\n    \"2-1\": \"`18` or `2018`\",\n    \"3-1\": \"`Pat`\",\n    \"4-1\": \"`Smith`\",\n    \"5-1\": \"`123`\",\n    \"0-2\": \"Credit card number. **Required**\",\n    \"1-2\": \"Card expiration month as a number. **Required**\",\n    \"2-2\": \"Card expiration year as a number. **Required**\",\n    \"3-2\": \"Cardholder first name. **Required**\",\n    \"4-2\": \"Cardholder last name. **Required**\",\n    \"5-2\": \"Card security code.\"\n  },\n  \"cols\": 3,\n  \"rows\": 6\n}\n[/block]\nDepending on how you've configured your [billing address requirements](http://docs.recurly.com/site-settings#address_requirements), some of the following fields may be required.\n\n### Billing address\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field Name\",\n    \"h-1\": \"Example\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"address1\",\n    \"0-1\": \"`1313 Main St.`\",\n    \"0-2\": \"First line of a street address.\",\n    \"1-0\": \"address2\",\n    \"1-1\": \"`Unit 1`\",\n    \"1-2\": \"Second line of a street address.\",\n    \"2-0\": \"city\",\n    \"2-1\": \"`Hope`\",\n    \"2-2\": \"Town or locality.\",\n    \"3-0\": \"state\",\n    \"3-1\": \"`WA`\",\n    \"3-2\": \"Province or region.\",\n    \"4-0\": \"postal_code\",\n    \"4-1\": \"`98552`\",\n    \"4-2\": \"Postal code.\",\n    \"5-0\": \"country\",\n    \"5-1\": \"`US`\",\n    \"5-2\": \"[ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.\",\n    \"6-0\": \"phone\",\n    \"6-1\": \"`555-867-5309`\",\n    \"6-2\": \"Phone number.\",\n    \"7-0\": \"vat_number\",\n    \"7-1\": \"`SE0000`\",\n    \"7-2\": \"Customer VAT number. Used for VAT exclusion.\"\n  },\n  \"cols\": 3,\n  \"rows\": 8\n}\n[/block]\n## Styling card fields\n\nSince card fields must be injected within iframes, any font style information must be passed to recurly.configure\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"recurly.configure({\\n  // ...\\n  fields: {\\n    all: {\\n      style: {\\n        fontFamily: 'Droid Sans',\\n        fontSize: '14px',\\n        fontColor: 'green',\\n        fontSmoothing: 'antialiased',\\n        fontWeight: 'bold',\\n        fontVariant: 'small-caps',\\n        fontStyle: 'italic',\\n        lineHeight: '1em',\\n        placeholder: {\\n          color: 'gray !important',\\n          fontWeight: 'bold'\\n        }\\n      }\\n    },\\n    number: {\\n      selector: '#recurly-number',\\n      style: {\\n        fontColor: '#000000',\\n        placeholder: {\\n          content: 'Credit Card Number'\\n        }\\n      }\\n    },\\n    month: {\\n      selector: '#recurly-month',\\n      style: {\\n        fontColor: 'rgba(20, 200, 10, 0.5)',\\n        placeholder: {\\n          content: 'Month (mm)'\\n        }\\n      }\\n    },\\n    year: {\\n      selector: '#recurly-year',\\n      style: {\\n        placeholder: {\\n          content: 'Year (yy)'\\n        }\\n      }\\n    },\\n    cvv: {\\n      selector: '#recurly-cvv',\\n      style: {\\n        fontSize: '12px',\\n        placeholder: {\\n          content: 'Security Code',\\n          color: 'red !important'\\n        }\\n      }\\n    }\\n  }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nSince Recurly.js must inject card data fields into iframes, the default browser appearance for those fields will likely not match the appearance of the other fields in your payment form. We provide the following CSS classes to achieve a look and feel similar to your form. Using these classes, you may specify field size, colors, and a full range of appearance customization to make the injected card fields blend into your payment form.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Class Name\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"recurly-hosted-field\",\n    \"1-0\": \"recurly-hosted-field-focus\",\n    \"2-0\": \"recurly-hosted-field-number\",\n    \"3-0\": \"recurly-hosted-field-month\",\n    \"4-0\": \"recurly-hosted-field-year\",\n    \"5-0\": \"recurly-hosted-field-cvv | Default styles for the div surrounding the cvv field iframe\",\n    \"3-1\": \"Default styles for the div surrounding the month field iframe.\",\n    \"4-1\": \"Default styles for the div surrounding the year field iframe.\",\n    \"2-1\": \"Default styles for the div surrounding the month field iframe.\",\n    \"1-1\": \"Applied when the user focuses on a field.\",\n    \"0-1\": \"Default styles for the div surrounding each field iframe.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n### Fonts\n\nYou may specify font and placeholder text for card fields through `recurly.configure`. The example call above demonstrates all available style attributes you may send to `recurly.configure`.\n\nCustom fonts are sourced from [Google Web Fonts](https://www.google.com/fonts). Simply use the name of the font as it appears on the Google Web Fonts site.\n\n### Responsive styles\n\nAll of the built in field classes will support and respond to media queries. You may call `recurly.configure` again to change style properties -- thus you may change any property if the window size changes.\n\n## Working with bank accounts\n\nJust like a card form, use the data-recurly attribute to identify fields to Recurly.js. Since Recurly.js does not need to inject fields for bank accounts, all fields may be displayed as inputs on your payment form.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"&lt;form&gt;\\n  &lt;input type=\\\"text\\\" data-recurly=\\\"routing_number\\\"&gt;\\n  &lt;input type=\\\"text\\\" data-recurly=\\\"account_number\\\"&gt;\\n  &lt;input type=\\\"text\\\" data-recurly=\\\"account_number_confirmation\\\"&gt;\\n  &lt;input type=\\\"text\\\" data-recurly=\\\"account_type\\\"&gt;\\n  &lt;input type=\\\"text\\\" data-recurly=\\\"name_on_account\\\"&gt;\\n  &lt;input type=\\\"hidden\\\" name=\\\"recurly-token\\\" data-recurly=\\\"token\\\"&gt;\\n  &lt;button&gt;submit&lt;/button&gt;\\n&lt;/form&gt;\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nAs you would a card form, you collect bank account payment information from your customers, identifying them with the `data-recurly` attributes on the input tags. This form demonstrates the minimum required input fields, and __the table below highlights all possible input fields.__\n\n### Bank Account data\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field Name\",\n    \"h-1\": \"Example\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"routing_number\",\n    \"0-1\": \"`123456789`\",\n    \"0-2\": \"Routing number. **Required**\",\n    \"1-0\": \"account_number\",\n    \"2-0\": \"account_number_confirmation\",\n    \"3-0\": \"account_type\",\n    \"4-0\": \"name_on_account\",\n    \"4-1\": \"`Pat Smith`\",\n    \"3-1\": \"`checking` or `savings`\",\n    \"2-1\": \"`987654321`\",\n    \"1-1\": \"`987654321`\",\n    \"1-2\": \"Account number. **Required**\",\n    \"2-2\": \"Account number confirmation. **Required**\",\n    \"3-2\": \"Account type. **Required**\",\n    \"4-2\": \"Full name on account. **Required**\"\n  },\n  \"cols\": 3,\n  \"rows\": 5\n}\n[/block]\n### Billing address\n\n[See card billing address]","excerpt":"","slug":"getting-started-1","type":"basic","title":"Getting Started","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Getting Started</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-include"></div>Include<a class="fa fa-anchor" href="#section-include"></a></h2> 
                 <p><code>&lt;script src="https://js.recurly.com/v4/recurly.js"&gt;&lt;/script&gt;</code></p> 
                 <p>To begin, you'll include the Recurly.js script on your page.</p> 
                 <p>This exposes a single global object, <code>recurly</code>.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-danger "> 
                <h3><i title="Danger" class="fa fa-exclamation-triangle on"></i><span>Self-Hosting Recurly.js</span> </h3>
                <p>The Recurly-hosted version of recurly.js is designed and updated to maintain compatibility with system update deployments that take place from time-to-time. Locally hosted versions of recurly.js run the risk of encountering issues with system interaction and incompatibility which may result in avoidable service interruptions on your client page. It is for this reason, we highly recommend against and do not support locally hosted copies of recurly.js.</p> 
               </div> 
               <div class="magic-block-callout type-warning "> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i><span>JS Framework Support</span> </h3>
                <p>Due to the complexities of PCI requirements for the DSS v3.2 SAQ A, Recurly does not provide native support for reactive frameworks like React and Angular.</p> 
               </div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-configure"></div>Configure<a class="fa fa-anchor" href="#section-configure"></a></h2> 
                 <p><code>recurly.configure('sc-ABCDEFGHI123456789');</code></p> 
                 <p>Simply call <code>recurly.configure</code> anywhere on your page, passing your public key. This identifies your site to Recurly servers. You can find your public key in the <a href="https://app.recurly.com/go/developer/api_access">API Access section</a> of your admin app.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-info "> 
                <h3><i title="Info" class="fa fa-info-circle on"></i><span>Use Your Site's Public Key</span> </h3>
                <p>Be sure to replace <code>sc-ABCDEFGHI123456789</code> with your own public key.</p> 
               </div> 
               <div> 
                <div class="marked">
                 <p><code>recurly.configure</code> accepts other options not detailed here. You may refer to the <a href="https://github.com/recurly/recurly-js/blob/master/lib/recurly.js#L76-L88">source</a> for more detail.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-build-a-card-form"></div>Build a Card form<a class="fa fa-anchor" href="#section-build-a-card-form"></a></h2> 
                 <p>Build a form however you like. Use the data-recurly attribute to identify input field targets to Recurly.js. To identify where Recurly.js will inject card data fields, we recommend using simple div elements.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">HTML</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">form</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"text"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"first_name"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"text"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"last_name"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">div</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"number"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">div</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">div</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"month"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">div</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">div</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"year"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">div</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">div</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"cvv"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">div</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"hidden"</span> <span class="cm-attribute">name</span>=<span class="cm-string">"recurly-token"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"token"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">button</span><span class="cm-tag cm-bracket">&gt;</span>submit<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">button</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">form</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>To collect card payment information from your customers, you'll create a form similar to this one. Recurly.js uses the <code>data-recurly</code> attributes on the input tags to gather customer information before sending it to our servers.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-info no-title"> 
                <h3><i title="Info" class="fa fa-info-circle on"></i> </h3>
                <p>In order for recurly.js to inject the card payment hosted fields into your form, the target elements must be present in the document at the time you make the <code>recurly.configure</code> call.</p> 
               </div> 
               <div> 
                <div class="marked">
                 <p><strong>Note</strong> that card data is not present in the form, but merely given a placeholder element. This is because Recurly.js must inject those fields onto the page within iframes to ensure strict security of customer card data. To further customize your checkout experience, you will be able to pick and use any color for the placeholder text.</p> 
                 <p>This particular form contains the minimum required input fields, and <strong>the table below demonstrates all possible input fields.</strong></p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-card-data"></div>Card data<a class="fa fa-anchor" href="#section-card-data"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Field Name
                  </div> 
                  <div class="th">
                   Example
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>number</p> 
                  </div> 
                  <div class="td">
                   <p><code>4111-1111-1111-1111</code></p> 
                  </div> 
                  <div class="td">
                   <p>Credit card number. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>month</p> 
                  </div> 
                  <div class="td">
                   <p><code>8</code> or <code>02</code></p> 
                  </div> 
                  <div class="td">
                   <p>Card expiration month as a number. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>year</p> 
                  </div> 
                  <div class="td">
                   <p><code>18</code> or <code>2018</code></p> 
                  </div> 
                  <div class="td">
                   <p>Card expiration year as a number. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>first_name</p> 
                  </div> 
                  <div class="td">
                   <p><code>Pat</code></p> 
                  </div> 
                  <div class="td">
                   <p>Cardholder first name. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>last_name</p> 
                  </div> 
                  <div class="td">
                   <p><code>Smith</code></p> 
                  </div> 
                  <div class="td">
                   <p>Cardholder last name. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>cvv</p> 
                  </div> 
                  <div class="td">
                   <p><code>123</code></p> 
                  </div> 
                  <div class="td">
                   <p>Card security code.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Depending on how you've configured your <a href="http://docs.recurly.com/site-settings#address_requirements">billing address requirements</a>, some of the following fields may be required.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-billing-address"></div>Billing address<a class="fa fa-anchor" href="#section-billing-address"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Field Name
                  </div> 
                  <div class="th">
                   Example
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>address1</p> 
                  </div> 
                  <div class="td">
                   <p><code>1313 Main St.</code></p> 
                  </div> 
                  <div class="td">
                   <p>First line of a street address.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>address2</p> 
                  </div> 
                  <div class="td">
                   <p><code>Unit 1</code></p> 
                  </div> 
                  <div class="td">
                   <p>Second line of a street address.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>city</p> 
                  </div> 
                  <div class="td">
                   <p><code>Hope</code></p> 
                  </div> 
                  <div class="td">
                   <p>Town or locality.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>state</p> 
                  </div> 
                  <div class="td">
                   <p><code>WA</code></p> 
                  </div> 
                  <div class="td">
                   <p>Province or region.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>postal_code</p> 
                  </div> 
                  <div class="td">
                   <p><code>98552</code></p> 
                  </div> 
                  <div class="td">
                   <p>Postal code.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>country</p> 
                  </div> 
                  <div class="td">
                   <p><code>US</code></p> 
                  </div> 
                  <div class="td">
                   <p><a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2</a> country code.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>phone</p> 
                  </div> 
                  <div class="td">
                   <p><code>555-867-5309</code></p> 
                  </div> 
                  <div class="td">
                   <p>Phone number.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>vat_number</p> 
                  </div> 
                  <div class="td">
                   <p><code>SE0000</code></p> 
                  </div> 
                  <div class="td">
                   <p>Customer VAT number. Used for VAT exclusion.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-styling-card-fields"></div>Styling card fields<a class="fa fa-anchor" href="#section-styling-card-fields"></a></h2> 
                 <p>Since card fields must be injected within iframes, any font style information must be passed to recurly.configure</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-variable">recurly</span>.<span class="cm-property">configure</span>({ <span class="cm-comment">// ...</span> <span class="cm-property">fields</span>: { <span class="cm-property">all</span>: { <span class="cm-property">style</span>: { <span class="cm-property">fontFamily</span>: <span class="cm-string">'Droid Sans'</span>, <span class="cm-property">fontSize</span>: <span class="cm-string">'14px'</span>, <span class="cm-property">fontColor</span>: <span class="cm-string">'green'</span>, <span class="cm-property">fontSmoothing</span>: <span class="cm-string">'antialiased'</span>, <span class="cm-property">fontWeight</span>: <span class="cm-string">'bold'</span>, <span class="cm-property">fontVariant</span>: <span class="cm-string">'small-caps'</span>, <span class="cm-property">fontStyle</span>: <span class="cm-string">'italic'</span>, <span class="cm-property">lineHeight</span>: <span class="cm-string">'1em'</span>, <span class="cm-property">placeholder</span>: { <span class="cm-property">color</span>: <span class="cm-string">'gray !important'</span>, <span class="cm-property">fontWeight</span>: <span class="cm-string">'bold'</span> } } }, <span class="cm-property">number</span>: { <span class="cm-property">selector</span>: <span class="cm-string">'#recurly-number'</span>, <span class="cm-property">style</span>: { <span class="cm-property">fontColor</span>: <span class="cm-string">'#000000'</span>, <span class="cm-property">placeholder</span>: { <span class="cm-property">content</span>: <span class="cm-string">'Credit Card Number'</span> } } }, <span class="cm-property">month</span>: { <span class="cm-property">selector</span>: <span class="cm-string">'#recurly-month'</span>, <span class="cm-property">style</span>: { <span class="cm-property">fontColor</span>: <span class="cm-string">'rgba(20, 200, 10, 0.5)'</span>, <span class="cm-property">placeholder</span>: { <span class="cm-property">content</span>: <span class="cm-string">'Month (mm)'</span> } } }, <span class="cm-property">year</span>: { <span class="cm-property">selector</span>: <span class="cm-string">'#recurly-year'</span>, <span class="cm-property">style</span>: { <span class="cm-property">placeholder</span>: { <span class="cm-property">content</span>: <span class="cm-string">'Year (yy)'</span> } } }, <span class="cm-property">cvv</span>: { <span class="cm-property">selector</span>: <span class="cm-string">'#recurly-cvv'</span>, <span class="cm-property">style</span>: { <span class="cm-property">fontSize</span>: <span class="cm-string">'12px'</span>, <span class="cm-property">placeholder</span>: { <span class="cm-property">content</span>: <span class="cm-string">'Security Code'</span>, <span class="cm-property">color</span>: <span class="cm-string">'red !important'</span> } } } } });</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Since Recurly.js must inject card data fields into iframes, the default browser appearance for those fields will likely not match the appearance of the other fields in your payment form. We provide the following CSS classes to achieve a look and feel similar to your form. Using these classes, you may specify field size, colors, and a full range of appearance customization to make the injected card fields blend into your payment form.</p> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Class Name
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>recurly-hosted-field</p> 
                  </div> 
                  <div class="td">
                   <p>Default styles for the div surrounding each field iframe.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>recurly-hosted-field-focus</p> 
                  </div> 
                  <div class="td">
                   <p>Applied when the user focuses on a field.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>recurly-hosted-field-number</p> 
                  </div> 
                  <div class="td">
                   <p>Default styles for the div surrounding the month field iframe.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>recurly-hosted-field-month</p> 
                  </div> 
                  <div class="td">
                   <p>Default styles for the div surrounding the month field iframe.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>recurly-hosted-field-year</p> 
                  </div> 
                  <div class="td">
                   <p>Default styles for the div surrounding the year field iframe.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-fonts"></div>Fonts<a class="fa fa-anchor" href="#section-fonts"></a></h3> 
                 <p>You may specify font and placeholder text for card fields through <code>recurly.configure</code>. The example call above demonstrates all available style attributes you may send to <code>recurly.configure</code>.</p> 
                 <p>Custom fonts are sourced from <a href="https://www.google.com/fonts">Google Web Fonts</a>. Simply use the name of the font as it appears on the Google Web Fonts site.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-responsive-styles"></div>Responsive styles<a class="fa fa-anchor" href="#section-responsive-styles"></a></h3> 
                 <p>All of the built in field classes will support and respond to media queries. You may call <code>recurly.configure</code> again to change style properties -- thus you may change any property if the window size changes.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-working-with-bank-accounts"></div>Working with bank accounts<a class="fa fa-anchor" href="#section-working-with-bank-accounts"></a></h2> 
                 <p>Just like a card form, use the data-recurly attribute to identify fields to Recurly.js. Since Recurly.js does not need to inject fields for bank accounts, all fields may be displayed as inputs on your payment form.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">HTML</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">form</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"text"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"routing_number"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"text"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"account_number"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"text"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"account_number_confirmation"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"text"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"account_type"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"text"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"name_on_account"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"hidden"</span> <span class="cm-attribute">name</span>=<span class="cm-string">"recurly-token"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"token"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">button</span><span class="cm-tag cm-bracket">&gt;</span>submit<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">button</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">form</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>As you would a card form, you collect bank account payment information from your customers, identifying them with the <code>data-recurly</code> attributes on the input tags. This form demonstrates the minimum required input fields, and <strong>the table below highlights all possible input fields.</strong></p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-bank-account-data"></div>Bank Account data<a class="fa fa-anchor" href="#section-bank-account-data"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Field Name
                  </div> 
                  <div class="th">
                   Example
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>routing_number</p> 
                  </div> 
                  <div class="td">
                   <p><code>123456789</code></p> 
                  </div> 
                  <div class="td">
                   <p>Routing number. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>account_number</p> 
                  </div> 
                  <div class="td">
                   <p><code>987654321</code></p> 
                  </div> 
                  <div class="td">
                   <p>Account number. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>account_number_confirmation</p> 
                  </div> 
                  <div class="td">
                   <p><code>987654321</code></p> 
                  </div> 
                  <div class="td">
                   <p>Account number confirmation. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>account_type</p> 
                  </div> 
                  <div class="td">
                   <p><code>checking</code> or <code>savings</code></p> 
                  </div> 
                  <div class="td">
                   <p>Account type. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>name_on_account</p> 
                  </div> 
                  <div class="td">
                   <p><code>Pat Smith</code></p> 
                  </div> 
                  <div class="td">
                   <p>Full name on account. <strong>Required</strong></p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-billing-address"></div>Billing address<a class="fa fa-anchor" href="#section-billing-address"></a></h3> 
                 <p>[See card billing address]</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/getting-started-1" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/getting-started-1/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="getting-a-token" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e232","category":"59557419c0a2ba001bf5e1a7","user":"55648cf93b87582b003ab8b1","parentDoc":null,"project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":["583606faf50e460f009179cd"],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T04:39:30.344Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":3,"body":"Interrupt the form submit to send billing info to Recurly and get a secure token in exchange. Once you have the token, submit the form to your server.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"$('form').on('submit', function (event) {\\n  var form = this;\\n  event.preventDefault();\\n  recurly.token(form, function (err, token) {\\n    if (err) {\\n      // handle error using err.code and err.fields\\n    } else {\\n      // recurly.js has filled in the 'token' field, so now we can submit the\\n      // form to your server; alternatively, you can access token.id and do\\n      // any processing you wish\\n      form.submit();\\n    }\\n  });\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nRecurly.js works with tokens, which represent secure and temporary storage for your customer's sensitive billing information. They are stored directly on Recurly servers to reduce your PCI exposure.\n\nWhen your customers submit your billing form, you'll need to interrupt the submit and ask Recurly.js to create a token from the form. You may have noticed an additional hidden field in the form above, `token`. When you ask Recurly.js for a token during submit, it will automatically populate this field for you. After you get the token, you will submit it to your servers and use it there to talk to any endpoint in our API that accepts a `billing_info`.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"This example demonstrates jQuery as an event-binding and DOM library; however, you may use any library you choose, or interact directly with the DOM (hard mode).\"\n}\n[/block]\n## recurly.token (API)\n\nYou must call recurly.token with your form element.\n\n`recurly.token(document.querySelector('form'), tokenHandler);`\n\nUsing a handler function like this one:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"function tokenHandler (err, token) {\\n  if (err) {\\n    // handle error using err.code and err.fields\\n  } else {\\n    // handle success using token.id\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nSends billing information to Recurly to store as a token, sending that token id back to you.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Param\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"form\",\n    \"0-1\": \"`HTMLFormElement`\",\n    \"0-2\": \"Parent form containing `data-recurly` fields.\",\n    \"1-0\": \"callback\",\n    \"1-1\": \"`Function`\",\n    \"1-2\": \"Callback function to accept the returned token.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\nA callback is always required\n\n### Callback Arguments\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Param\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"err\",\n    \"1-0\": \"token\",\n    \"2-0\": \"id\",\n    \"0-1\": \"`RecurlyError` or `null`\",\n    \"0-2\": \"A [`RecurlyError`](#errors) if an error occurred; otherwise `null`.\",\n    \"1-1\": \"`Object`\",\n    \"1-2\": \"An object containing a token id.\",\n    \"2-1\": \"`String`\",\n    \"2-2\": \"A token id.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n### Returns\n\nNothing.\n\n## recurly.bankAccount.token(API)\n\nYou may call recurly.bankAccount.token with a form element\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"recurly.bankAccount.token(document.querySelector('form'), tokenHandler);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nOr with an Object\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// alternatively..\\nvar billingInfo = {\\n  // required attributes\\n  routing_number: '123456780',\\n  account_number: '111111111',\\n  account_number_confirmation: '111111111',\\n  account_type: 'checking',\\n  name_on_account: 'Pat Smith',\\n\\n  // optional attributes\\n  address1: '123 Main St.',\\n  address2: 'Unit 1',\\n  city: 'Hope',\\n  state: 'WA',\\n  postal_code: '98552',\\n  country: 'US',\\n  vat_number: 'SE0000'\\n};\\n\\nrecurly.bankAccount.token(billingInfo, tokenHandler);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nBoth methods require using a handler function like this one\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"function tokenHandler (err, token) {\\n  if (err) {\\n    // handle error using err.code and err.fields\\n  } else {\\n    // handle success using token.id\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nSends bank account billing information to Recurly to store as a token, sending that token id back to you. Just as with card tokenization, there are two ways to call `recurly.bankAccount.token`: with a form, and with an object.\n\nThe simplest is to pass it a form element containing form fields with their corresponding `data-recurly` attributes.\n\n### Arguments (form)\n[block:parameters]\n{\n  \"data\": {\n    \"1-0\": \"callback\",\n    \"0-0\": \"form\",\n    \"h-0\": \"Param\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\",\n    \"0-1\": \"`HTMLFormElement`\",\n    \"0-2\": \"Parent form containing `data-recurly` fields.\",\n    \"1-1\": \"`Function`\",\n    \"1-2\": \"Callback function to accept the returned token.\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\nAlternatively, you can call `recurly.bankAccount.token` with a plain JavaScript object. This allows a more direct interface to the payment flow, eliminating any need to use the DOM.\n\n### Arguments (object)\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"options\",\n    \"1-0\": \"callback\",\n    \"0-1\": \"`Object`\",\n    \"0-2\": \"An object with billing information properties matching those [outlined above].\",\n    \"1-1\": \"`Function`\",\n    \"1-2\": \"Callback function to accept the returned token.\",\n    \"h-0\": \"Param\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\nA callback is always required\n\n### Callback Arguments\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Param\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"err\",\n    \"1-0\": \"token\",\n    \"2-0\": \"id\",\n    \"2-1\": \"`String`\",\n    \"2-2\": \"A token id.\",\n    \"0-1\": \"`RecurlyError` or `null`\",\n    \"0-2\": \"A [`RecurlyError`](#errors) if an error occurred; otherwise `null`.\",\n    \"1-1\": \"`Object`\",\n    \"1-2\": \"An object containing a token id.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n### Returns\n\nNothing.","excerpt":"","slug":"getting-a-token","type":"basic","title":"Getting a Token","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Getting a Token</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Interrupt the form submit to send billing info to Recurly and get a secure token in exchange. Once you have the token, submit the form to your server.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-variable">$</span>(<span class="cm-string">'form'</span>).<span class="cm-property">on</span>(<span class="cm-string">'submit'</span>, <span class="cm-keyword">function</span> (<span class="cm-def">event</span>) { <span class="cm-keyword">var</span> <span class="cm-def">form</span> <span class="cm-operator">=</span> <span class="cm-keyword">this</span>; <span class="cm-variable-2">event</span>.<span class="cm-property">preventDefault</span>(); <span class="cm-variable">recurly</span>.<span class="cm-property">token</span>(<span class="cm-variable-2">form</span>, <span class="cm-keyword">function</span> (<span class="cm-def">err</span>, <span class="cm-def">token</span>) { <span class="cm-keyword">if</span> (<span class="cm-variable-2">err</span>) { <span class="cm-comment">// handle error using err.code and err.fields</span> } <span class="cm-keyword">else</span> { <span class="cm-comment">// recurly.js has filled in the 'token' field, so now we can submit the</span> <span class="cm-comment">// form to your server; alternatively, you can access token.id and do</span> <span class="cm-comment">// any processing you wish</span> <span class="cm-variable-2">form</span>.<span class="cm-property">submit</span>(); } }); });</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Recurly.js works with tokens, which represent secure and temporary storage for your customer's sensitive billing information. They are stored directly on Recurly servers to reduce your PCI exposure.</p> 
                 <p>When your customers submit your billing form, you'll need to interrupt the submit and ask Recurly.js to create a token from the form. You may have noticed an additional hidden field in the form above, <code>token</code>. When you ask Recurly.js for a token during submit, it will automatically populate this field for you. After you get the token, you will submit it to your servers and use it there to talk to any endpoint in our API that accepts a <code>billing_info</code>.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-info no-title"> 
                <h3><i title="Info" class="fa fa-info-circle on"></i> </h3>
                <p>This example demonstrates jQuery as an event-binding and DOM library; however, you may use any library you choose, or interact directly with the DOM (hard mode).</p> 
               </div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-recurly-token-api-"></div>recurly.token (API)<a class="fa fa-anchor" href="#section-recurly-token-api-"></a></h2> 
                 <p>You must call recurly.token with your form element.</p> 
                 <p><code>recurly.token(document.querySelector('form'), tokenHandler);</code></p> 
                 <p>Using a handler function like this one:</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">function</span> <span class="cm-variable">tokenHandler</span> (<span class="cm-def">err</span>, <span class="cm-def">token</span>) { <span class="cm-keyword">if</span> (<span class="cm-variable-2">err</span>) { <span class="cm-comment">// handle error using err.code and err.fields</span> } <span class="cm-keyword">else</span> { <span class="cm-comment">// handle success using token.id</span> } }</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Sends billing information to Recurly to store as a token, sending that token id back to you.</p> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Param
                  </div> 
                  <div class="th">
                   Type
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>form</p> 
                  </div> 
                  <div class="td">
                   <p><code>HTMLFormElement</code></p> 
                  </div> 
                  <div class="td">
                   <p>Parent form containing <code>data-recurly</code> fields.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>callback</p> 
                  </div> 
                  <div class="td">
                   <p><code>Function</code></p> 
                  </div> 
                  <div class="td">
                   <p>Callback function to accept the returned token.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>A callback is always required</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-callback-arguments"></div>Callback Arguments<a class="fa fa-anchor" href="#section-callback-arguments"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Param
                  </div> 
                  <div class="th">
                   Type
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>err</p> 
                  </div> 
                  <div class="td">
                   <p><code>RecurlyError</code> or <code>null</code></p> 
                  </div> 
                  <div class="td">
                   <p>A <a href="#errors"><code>RecurlyError</code></a> if an error occurred; otherwise <code>null</code>.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>token</p> 
                  </div> 
                  <div class="td">
                   <p><code>Object</code></p> 
                  </div> 
                  <div class="td">
                   <p>An object containing a token id.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>id</p> 
                  </div> 
                  <div class="td">
                   <p><code>String</code></p> 
                  </div> 
                  <div class="td">
                   <p>A token id.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-returns"></div>Returns<a class="fa fa-anchor" href="#section-returns"></a></h3> 
                 <p>Nothing.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-recurly-bankaccount-token-api-"></div>recurly.bankAccount.token(API)<a class="fa fa-anchor" href="#section-recurly-bankaccount-token-api-"></a></h2> 
                 <p>You may call recurly.bankAccount.token with a form element</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-variable">recurly</span>.<span class="cm-property">bankAccount</span>.<span class="cm-property">token</span>(<span class="cm-variable">document</span>.<span class="cm-property">querySelector</span>(<span class="cm-string">'form'</span>), <span class="cm-variable">tokenHandler</span>);</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Or with an Object</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-comment">// alternatively..</span> <span class="cm-keyword">var</span> <span class="cm-variable">billingInfo</span> <span class="cm-operator">=</span> { <span class="cm-comment">// required attributes</span> <span class="cm-property">routing_number</span>: <span class="cm-string">'123456780'</span>, <span class="cm-property">account_number</span>: <span class="cm-string">'111111111'</span>, <span class="cm-property">account_number_confirmation</span>: <span class="cm-string">'111111111'</span>, <span class="cm-property">account_type</span>: <span class="cm-string">'checking'</span>, <span class="cm-property">name_on_account</span>: <span class="cm-string">'Pat Smith'</span>, <span class="cm-comment">// optional attributes</span> <span class="cm-property">address1</span>: <span class="cm-string">'123 Main St.'</span>, <span class="cm-property">address2</span>: <span class="cm-string">'Unit 1'</span>, <span class="cm-property">city</span>: <span class="cm-string">'Hope'</span>, <span class="cm-property">state</span>: <span class="cm-string">'WA'</span>, <span class="cm-property">postal_code</span>: <span class="cm-string">'98552'</span>, <span class="cm-property">country</span>: <span class="cm-string">'US'</span>, <span class="cm-property">vat_number</span>: <span class="cm-string">'SE0000'</span> }; <span class="cm-variable">recurly</span>.<span class="cm-property">bankAccount</span>.<span class="cm-property">token</span>(<span class="cm-variable">billingInfo</span>, <span class="cm-variable">tokenHandler</span>);</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Both methods require using a handler function like this one</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">function</span> <span class="cm-variable">tokenHandler</span> (<span class="cm-def">err</span>, <span class="cm-def">token</span>) { <span class="cm-keyword">if</span> (<span class="cm-variable-2">err</span>) { <span class="cm-comment">// handle error using err.code and err.fields</span> } <span class="cm-keyword">else</span> { <span class="cm-comment">// handle success using token.id</span> } }</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Sends bank account billing information to Recurly to store as a token, sending that token id back to you. Just as with card tokenization, there are two ways to call <code>recurly.bankAccount.token</code>: with a form, and with an object.</p> 
                 <p>The simplest is to pass it a form element containing form fields with their corresponding <code>data-recurly</code> attributes.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-arguments-form-"></div>Arguments (form)<a class="fa fa-anchor" href="#section-arguments-form-"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Param
                  </div> 
                  <div class="th">
                   Type
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>form</p> 
                  </div> 
                  <div class="td">
                   <p><code>HTMLFormElement</code></p> 
                  </div> 
                  <div class="td">
                   <p>Parent form containing <code>data-recurly</code> fields.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>callback</p> 
                  </div> 
                  <div class="td">
                   <p><code>Function</code></p> 
                  </div> 
                  <div class="td">
                   <p>Callback function to accept the returned token.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Alternatively, you can call <code>recurly.bankAccount.token</code> with a plain JavaScript object. This allows a more direct interface to the payment flow, eliminating any need to use the DOM.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-arguments-object-"></div>Arguments (object)<a class="fa fa-anchor" href="#section-arguments-object-"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Param
                  </div> 
                  <div class="th">
                   Type
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>options</p> 
                  </div> 
                  <div class="td">
                   <p><code>Object</code></p> 
                  </div> 
                  <div class="td">
                   <p>An object with billing information properties matching those [outlined above].</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>callback</p> 
                  </div> 
                  <div class="td">
                   <p><code>Function</code></p> 
                  </div> 
                  <div class="td">
                   <p>Callback function to accept the returned token.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>A callback is always required</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-callback-arguments"></div>Callback Arguments<a class="fa fa-anchor" href="#section-callback-arguments"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Param
                  </div> 
                  <div class="th">
                   Type
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>err</p> 
                  </div> 
                  <div class="td">
                   <p><code>RecurlyError</code> or <code>null</code></p> 
                  </div> 
                  <div class="td">
                   <p>A <a href="#errors"><code>RecurlyError</code></a> if an error occurred; otherwise <code>null</code>.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>token</p> 
                  </div> 
                  <div class="td">
                   <p><code>Object</code></p> 
                  </div> 
                  <div class="td">
                   <p>An object containing a token id.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>id</p> 
                  </div> 
                  <div class="td">
                   <p><code>String</code></p> 
                  </div> 
                  <div class="td">
                   <p>A token id.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-returns"></div>Returns<a class="fa fa-anchor" href="#section-returns"></a></h3> 
                 <p>Nothing.</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/getting-a-token" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/getting-a-token/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="using-a-token" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e233","category":"59557419c0a2ba001bf5e1a7","parentDoc":null,"user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":["5718f243459f6f0e0075070c"],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T04:28:39.561Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":4,"body":"Create a new subscription with a token using one of our [client libraries](http://dev.recurly.com/client-libraries) or [API v2](https://dev.recurly.com).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"$subscription = new Recurly_Subscription();\\n$subscription-&gt;plan_code = 'monthly_subscription';\\n$subscription-&gt;currency = 'EUR';\\n\\n$subscription-&gt;account = new Recurly_Account();\\n$subscription-&gt;account-&gt;account_code = 'pat_smith';\\n$subscription-&gt;account-&gt;first_name = 'Pat';\\n$subscription-&gt;account-&gt;last_name = 'Smith';\\n$subscription-&gt;account-&gt;email = 'pat@enterpriseexecutive.com';\\n\\n$subscription-&gt;account-&gt;billing_info = new Recurly_BillingInfo();\\n$subscription-&gt;account-&gt;billing_info-&gt;token_id = 'TOKEN_ID';\\n\\n$subscription-&gt;create();\",\n      \"language\": \"php\"\n    },\n    {\n      \"code\": \"Recurly::Subscription.create! plan_code: :monthly_subscription,\\n  account: {\\n    account_code: 'pat_smith',\\n    currency: 'USD',\\n    billing_info: { token_id: 'TOKEN_ID' }\\n  }\",\n      \"language\": \"ruby\"\n    },\n    {\n      \"code\": \"subscription = recurly.Subscription(\\n  subscription.plan_code = 'monthly_subscription',\\n  subscription.currency = 'EUR',\\n  account = recurly.Account(\\n    account_code = 'pat_smith',\\n    billing_info = recurly.BillingInfo(token_id = 'TOKEN_ID')\\n  )\\n)\\nsubscription.save()\",\n      \"language\": \"python\"\n    },\n    {\n      \"code\": \"var plan = Plans.Get(\\\"monthly_subscription\\\");\\nvar account = new Account(\\\"pat_smith\\\");\\nvar billingInfo = new BillingInfo(account) { TokenId = \\\"TOKEN_ID\\\" };\\nvar subscription = new Subscription(account, plan, \\\"USD\\\");\\n\\nsubscription.Create();\",\n      \"language\": \"csharp\"\n    },\n    {\n      \"code\": \"$ curl https://:subdomain.recurly.com/v2/subscriptions \\\\\\n    -u API_KEY \\\\\\n    -X POST \\\\\\n    -d '&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?&gt; \\\\\\n&lt;subscription&gt; \\\\\\n  &lt;plan_code&gt;monthly_subscription&lt;/plan_code&gt; \\\\\\n  &lt;currency&gt;USD&lt;/currency&gt; \\\\\\n  &lt;account&gt; \\\\\\n    &lt;account_code&gt;pat_smith&lt;/account_code&gt; \\\\\\n    &lt;email&gt;pat@enterpriseexecutive.com&lt;/email&gt; \\\\\\n    &lt;first_name&gt;Pat&lt;/first_name&gt; \\\\\\n    &lt;last_name&gt;Smith&lt;/last_name&gt; \\\\\\n    &lt;billing_info&gt; \\\\\\n      &lt;token_id&gt;TOKEN_ID&lt;/token_id&gt; \\\\\\n    &lt;/billing_info&gt; \\\\\\n  &lt;/account&gt; \\\\\\n&lt;/subscription&gt;'\\n\",\n      \"language\": \"curl\"\n    }\n  ]\n}\n[/block]\nOnce Recurly.js has stored your customer's sensitive data and given you a token reference, you will have 20 minutes to use it in our [API](https://dev.recurly.com). Expired tokens are permanently removed from the Recurly servers. Since tokens may be used to create charges in Recurly, be sure to keep them safe and only transmit them over a secure connection.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Tokens expire after 20 minutes.\"\n}\n[/block]\nTokens can be used to populate any account Billing Info data through our API. Simply assign it to the Billing Info's `token_id` property and we'll do the rest.\n\n### These endpoints accept tokens within Billing Info.\n\n- Subscription [`create`](https://dev.recurly.com/docs/create-subscription)\n- Account [`create`](https://dev.recurly.com/docs/create-an-account), [`update`](https://dev.recurly.com/docs/update-account)\n- Billing Info [`update`](https://dev.recurly.com/docs/update-an-accounts-billing-info-token)\n- Transaction [`create`](https://dev.recurly.com/docs/create-transaction)\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"If you use a token, no other attributes will be allowed on that Billing Info\\n  for that request.\"\n}\n[/block]","excerpt":"","slug":"using-a-token","type":"basic","title":"Using a Token","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Using a Token</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Create a new subscription with a token using one of our <a href="http://dev.recurly.com/client-libraries">client libraries</a> or <a href="https://dev.recurly.com">API v2</a>.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
                 </div> 
                 <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
                  <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
                 </div> 
                 <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
                  <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
                 </div> 
                 <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
                  <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
                 </div> 
                 <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
                  <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">cURL</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo">$subscription = new Recurly_Subscription(); $subscription-&gt;plan_code = 'monthly_subscription'; $subscription-&gt;currency = 'EUR'; $subscription-&gt;account = new Recurly_Account(); $subscription-&gt;account-&gt;account_code = 'pat_smith'; $subscription-&gt;account-&gt;first_name = 'Pat'; $subscription-&gt;account-&gt;last_name = 'Smith'; $subscription-&gt;account-&gt;email = 'pat@enterpriseexecutive.com'; $subscription-&gt;account-&gt;billing_info = new Recurly_BillingInfo(); $subscription-&gt;account-&gt;billing_info-&gt;token_id = 'TOKEN_ID'; $subscription-&gt;create();</span></code></pre> 
                 <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-atom">Recurly::Subscription</span><span class="cm-operator">.</span><span class="cm-property">create!</span> <span class="cm-atom">plan_code:</span> <span class="cm-atom">:monthly_subscription</span>, <span class="cm-atom">account:</span> { <span class="cm-atom">account_code:</span> <span class="cm-string">'pat_smith'</span>, <span class="cm-atom">currency:</span> <span class="cm-string">'USD'</span>, <span class="cm-atom">billing_info:</span> { <span class="cm-atom">token_id:</span> <span class="cm-string">'TOKEN_ID'</span> } }</span></code></pre> 
                 <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">subscription</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">Subscription</span>( <span class="cm-variable">subscription</span>.<span class="cm-variable">plan_code</span> = <span class="cm-string">'monthly_subscription'</span>, <span class="cm-variable">subscription</span>.<span class="cm-variable">currency</span> = <span class="cm-string">'EUR'</span>, <span class="cm-variable">account</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">Account</span>( <span class="cm-variable">account_code</span> = <span class="cm-string">'pat_smith'</span>, <span class="cm-variable">billing_info</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">BillingInfo</span>(<span class="cm-variable">token_id</span> = <span class="cm-string">'TOKEN_ID'</span>) ) ) <span class="cm-variable">subscription</span>.<span class="cm-variable">save</span>()</span></code></pre> 
                 <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">plan</span> <span class="cm-operator">=</span> <span class="cm-variable">Plans</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"monthly_subscription"</span>); <span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Account</span>(<span class="cm-string">"pat_smith"</span>); <span class="cm-keyword">var</span> <span class="cm-def">billingInfo</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">BillingInfo</span>(<span class="cm-variable">account</span>) { <span class="cm-variable">TokenId</span> <span class="cm-operator">=</span> <span class="cm-string">"TOKEN_ID"</span> }; <span class="cm-keyword">var</span> <span class="cm-def">subscription</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Subscription</span>(<span class="cm-variable">account</span>, <span class="cm-variable">plan</span>, <span class="cm-string">"USD"</span>); <span class="cm-variable">subscription</span>.<span class="cm-variable">Create</span>();</span></code></pre> 
                 <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-def">$ curl</span> https://:subdomain.recurly.com/v2/subscriptions \ <span class="cm-attribute">-u</span> API_KEY \ <span class="cm-attribute">-X</span> POST \ <span class="cm-attribute">-d</span> <span class="cm-string">'&lt;?xml version="1.0" encoding="UTF-8"?&gt; \</span> <span class="cm-string">&lt;subscription&gt; \</span> <span class="cm-string"> &lt;plan_code&gt;monthly_subscription&lt;/plan_code&gt; \</span> <span class="cm-string"> &lt;currency&gt;USD&lt;/currency&gt; \</span> <span class="cm-string"> &lt;account&gt; \</span> <span class="cm-string"> &lt;account_code&gt;pat_smith&lt;/account_code&gt; \</span> <span class="cm-string"> &lt;email&gt;pat@enterpriseexecutive.com&lt;/email&gt; \</span> <span class="cm-string"> &lt;first_name&gt;Pat&lt;/first_name&gt; \</span> <span class="cm-string"> &lt;last_name&gt;Smith&lt;/last_name&gt; \</span> <span class="cm-string"> &lt;billing_info&gt; \</span> <span class="cm-string"> &lt;token_id&gt;TOKEN_ID&lt;/token_id&gt; \</span> <span class="cm-string"> &lt;/billing_info&gt; \</span> <span class="cm-string"> &lt;/account&gt; \</span> <span class="cm-string">&lt;/subscription&gt;'</span> </span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Once Recurly.js has stored your customer's sensitive data and given you a token reference, you will have 20 minutes to use it in our <a href="https://dev.recurly.com">API</a>. Expired tokens are permanently removed from the Recurly servers. Since tokens may be used to create charges in Recurly, be sure to keep them safe and only transmit them over a secure connection.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-info no-title"> 
                <h3><i title="Info" class="fa fa-info-circle on"></i> </h3>
                <p>Tokens expire after 20 minutes.</p> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Tokens can be used to populate any account Billing Info data through our API. Simply assign it to the Billing Info's <code>token_id</code> property and we'll do the rest.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-these-endpoints-accept-tokens-within-billing-info-"></div>These endpoints accept tokens within Billing Info.<a class="fa fa-anchor" href="#section-these-endpoints-accept-tokens-within-billing-info-"></a></h3> 
                 <ul> 
                  <li>Subscription <a href="https://dev.recurly.com/docs/create-subscription"><code>create</code></a></li>
                  <li>Account <a href="https://dev.recurly.com/docs/create-an-account"><code>create</code></a>, <a href="https://dev.recurly.com/docs/update-account"><code>update</code></a></li>
                  <li>Billing Info <a href="https://dev.recurly.com/docs/update-an-accounts-billing-info-token"><code>update</code></a></li>
                  <li>Transaction <a href="https://dev.recurly.com/docs/create-transaction"><code>create</code></a></li>
                 </ul> 
                </div> 
               </div> 
               <div class="magic-block-callout type-info no-title"> 
                <h3><i title="Info" class="fa fa-info-circle on"></i> </h3>
                <p>If you use a token, no other attributes will be allowed on that Billing Info<br> for that request.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/using-a-token" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/using-a-token/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="events" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e234","category":"59557419c0a2ba001bf5e1a7","project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","parentDoc":null,"version":"59557419c0a2ba001bf5e1a3","updates":["59095077651f500f001dd3f6"],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T18:53:08.841Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":5,"body":"Listen to events using Emitter methods\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// Listen to the 'change' event\\nrecurly.on('change', changeHandler);\\n\\n// But we're feeling indecisive today. Let's detach this event\\nrecurly.off('change', changeHandler);\\n\\n// .once will listen for one event then detach itself\\nrecurly.once('field:submit', function () {\\n  $('#my-payment-form').submit();\\n});\\n\\nfunction changeHandler (state) {\\n  // state.fields\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nExample RecurlyState object\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var recurlyState = {\\n  fields: {\\n    number: {\\n      valid: false,\\n      firstSix: '',\\n      lastFour: '',\\n      brand: 'unknown',\\n      empty: true,\\n      length: 0,\\n      focus: false\\n    },\\n    month: {\\n      valid: false,\\n      empty: true,\\n      length: 0,\\n      focus: false\\n    },\\n    year: {\\n      // same as month\\n    },\\n    cvv: {\\n      // same as month\\n    }\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nA `Recurly` instance is an event emitter, and will emit events throughout the lifecycle of your customer's interaction with your payment form. Events can be attached using the `recurly.on` method and removed using `recurly.off`. The example to the right shows the various ways that you can attach and remove events.\n\n### `change`\n\nThis event is emitted whenever a customer changes the state of hosted card fields, those that you may not otherwise observe directly with DOM events. For example, if your customer types '4' into the number field, then the state of the number field will change, and the `change` event will emit.\n\nThe `change` event emits a `RecurlyState` object, whose values are demonstrated to the right. This will give you useful insight into the entire state of the recurly-controlled components of your payment form.\n\n### `field:submit`\n\nThis event is emitted when a user presses the `enter` key while they are focused on a hosted field. Since this action typically submits a form, we recommend performing a payment form submission when this event is emitted.\n\nNote that you can detect the brand of the credit card entered using the \"brand\" field in the state object above.","excerpt":"","slug":"events","type":"basic","title":"Events","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Events</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Listen to events using Emitter methods</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-comment">// Listen to the 'change' event</span> <span class="cm-variable">recurly</span>.<span class="cm-property">on</span>(<span class="cm-string">'change'</span>, <span class="cm-variable">changeHandler</span>); <span class="cm-comment">// But we're feeling indecisive today. Let's detach this event</span> <span class="cm-variable">recurly</span>.<span class="cm-property">off</span>(<span class="cm-string">'change'</span>, <span class="cm-variable">changeHandler</span>); <span class="cm-comment">// .once will listen for one event then detach itself</span> <span class="cm-variable">recurly</span>.<span class="cm-property">once</span>(<span class="cm-string">'field:submit'</span>, <span class="cm-keyword">function</span> () { <span class="cm-variable">$</span>(<span class="cm-string">'#my-payment-form'</span>).<span class="cm-property">submit</span>(); }); <span class="cm-keyword">function</span> <span class="cm-variable">changeHandler</span> (<span class="cm-def">state</span>) { <span class="cm-comment">// state.fields</span> }</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Example RecurlyState object</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-variable">recurlyState</span> <span class="cm-operator">=</span> { <span class="cm-property">fields</span>: { <span class="cm-property">number</span>: { <span class="cm-property">valid</span>: <span class="cm-atom">false</span>, <span class="cm-property">firstSix</span>: <span class="cm-string">''</span>, <span class="cm-property">lastFour</span>: <span class="cm-string">''</span>, <span class="cm-property">brand</span>: <span class="cm-string">'unknown'</span>, <span class="cm-property">empty</span>: <span class="cm-atom">true</span>, <span class="cm-property">length</span>: <span class="cm-number">0</span>, <span class="cm-property">focus</span>: <span class="cm-atom">false</span> }, <span class="cm-property">month</span>: { <span class="cm-property">valid</span>: <span class="cm-atom">false</span>, <span class="cm-property">empty</span>: <span class="cm-atom">true</span>, <span class="cm-property">length</span>: <span class="cm-number">0</span>, <span class="cm-property">focus</span>: <span class="cm-atom">false</span> }, <span class="cm-property">year</span>: { <span class="cm-comment">// same as month</span> }, <span class="cm-property">cvv</span>: { <span class="cm-comment">// same as month</span> } } }</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>A <code>Recurly</code> instance is an event emitter, and will emit events throughout the lifecycle of your customer's interaction with your payment form. Events can be attached using the <code>recurly.on</code> method and removed using <code>recurly.off</code>. The example to the right shows the various ways that you can attach and remove events.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section--change-"></div><code>change</code><a class="fa fa-anchor" href="#section--change-"></a></h3> 
                 <p>This event is emitted whenever a customer changes the state of hosted card fields, those that you may not otherwise observe directly with DOM events. For example, if your customer types '4' into the number field, then the state of the number field will change, and the <code>change</code> event will emit.</p> 
                 <p>The <code>change</code> event emits a <code>RecurlyState</code> object, whose values are demonstrated to the right. This will give you useful insight into the entire state of the recurly-controlled components of your payment form.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section--field-submit-"></div><code>field:submit</code><a class="fa fa-anchor" href="#section--field-submit-"></a></h3> 
                 <p>This event is emitted when a user presses the <code>enter</code> key while they are focused on a hosted field. Since this action typically submits a form, we recommend performing a payment form submission when this event is emitted.</p> 
                 <p>Note that you can detect the brand of the credit card entered using the "brand" field in the state object above.</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/events" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/events/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="paypal" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e235","category":"59557419c0a2ba001bf5e1a7","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":["59403323f84a32001ba5a47a"],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T18:54:55.886Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":6,"body":"A PayPal transaction is handled entirely within the PayPal checkout flow in a new window. Your customer will authorize a transaction within PayPal. Recurly will then record the authorization and return a Recurly token to you as it does for other payment methods. You will need to use the token within our API before it expires, and expired tokens cannot be retrieved.\n\nFirst, place a button on your page specifically for checking out with PayPal.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"&lt;button&gt;Checkout with PayPal&lt;/button&gt;\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nNext, create a new `recurly.PayPal` instance.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var paypal = recurly.PayPal({\\n  display: { displayName: ' My product ' }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n**if you're processing PayPal transactions with Braintree**, you'll pass a [client authorization](https://developers.braintreepayments.com/guides/authorization/tokenization-key/javascript/v2#obtaining-a-tokenization-key) during instantiation:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var paypal = recurly.PayPal({\\n  braintree: { clientAuthorization: MY_CLIENT_AUTHORIZATION }\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nYour instance must then be set up to handle error scenarios and start the checkout flow.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"paypal.on('error', function (err) {\\n  // err.code\\n  // err.message\\n  // [err.cause] if there is an embedded error\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nNext we must bind a listener to a user action on the button and have it trigger the `start` function on your `recurly.PayPal` instance. This will open the PayPal checkout flow.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"As with the rest of Recurly.js, there are no external dependencies. The example uses jQuery to demonstrate binding events, but this can be done any way you wish.\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"$('#paypal-button').on('click', function () {\\n  paypal.start();\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"the `start` function must be called within a user-initiated event like 'click' or 'touchend'\"\n}\n[/block]\nFinally, add a function to receive the token once your customer completes the checkout flow. At this point you will send the token id to your server to be used in the Recurly API to create a billing info for an account.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"paypal.on('token', function (token) {\\n  // token.id\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n\n[block:api-header]\n{\n  \"type\": \"fn\",\n  \"title\": \"recurly.PayPal\"\n}\n[/block]\n### Arguments\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Param\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"options\",\n    \"0-1\": \"Object\",\n    \"0-2\": \"Optional.\",\n    \"1-0\": \"options.braintree\",\n    \"1-1\": \"Object\",\n    \"1-2\": \"Optional. Braintree configuration.\",\n    \"2-0\": \"options.braintree.clientAuthorization\",\n    \"2-1\": \"String\",\n    \"2-2\": \"If using Braintree to proces PayPal transactions, provide your client authorization code here.\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[/block]\n### Returns\n\nA new `recurly.PayPal` instance\n[block:api-header]\n{\n  \"type\": \"fn\",\n  \"title\": \"paypal.start\"\n}\n[/block]\n### Arguments\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"options\",\n    \"0-1\": \"Object\",\n    \"0-2\": \"Optional\",\n    \"1-0\": \"options.description\",\n    \"1-1\": \"String\",\n    \"1-2\": \"Optional. In legacy PayPal flows, this description will be displayed during the checkout flow.\",\n    \"h-0\": \"Param\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]\n### Returns\n\nNothing.\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Events\"\n}\n[/block]\n### `error`\n\nThis event is emitted when any error is encountered, whether during setup of the PayPal flow, or during the checkout process. It will be useful to display errors to your customer if a problem occurs during PayPal checkout.\n\n*Signature* \n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"error\",\n    \"0-1\": \"RecurlyError\",\n    \"0-2\": \"An error describing the issue that occurred\",\n    \"h-0\": \"Param\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\"\n  },\n  \"cols\": 3,\n  \"rows\": 1\n}\n[/block]\n### `cancel`\n\nThis event is emitted when the customer has canceled the PayPal checkout flow before completion. You may wish to reset parts of your checkout experience if this occurs.\n\n*Signature*\n\nNone.\n\n### `token`\n\nThis event is fired when the customer has completed the PayPal checkout flow. Recurly has received the payment details, and generated this token to be used in our API.\n\n### Signature\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"token\",\n    \"0-1\": \"Object\",\n    \"1-0\": \"token.id\",\n    \"1-1\": \"String\",\n    \"1-2\": \"Token identifier to be sent to the API\"\n  },\n  \"cols\": 3,\n  \"rows\": 2\n}\n[/block]","excerpt":"Use Recurly to process PayPal transactions using PayPal Business or Braintree.","slug":"paypal","type":"basic","title":"PayPal","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>PayPal</h1>
           <div marked>
            Use Recurly to process PayPal transactions using PayPal Business or Braintree.
           </div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>A PayPal transaction is handled entirely within the PayPal checkout flow in a new window. Your customer will authorize a transaction within PayPal. Recurly will then record the authorization and return a Recurly token to you as it does for other payment methods. You will need to use the token within our API before it expires, and expired tokens cannot be retrieved.</p> 
                 <p>First, place a button on your page specifically for checking out with PayPal.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">HTML</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">button</span><span class="cm-tag cm-bracket">&gt;</span>Checkout with PayPal<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">button</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Next, create a new <code>recurly.PayPal</code> instance.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-variable">paypal</span> <span class="cm-operator">=</span> <span class="cm-variable">recurly</span>.<span class="cm-property">PayPal</span>({ <span class="cm-property">display</span>: { <span class="cm-property">displayName</span>: <span class="cm-string">' My product '</span> } });</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p><strong>if you're processing PayPal transactions with Braintree</strong>, you'll pass a <a href="https://developers.braintreepayments.com/guides/authorization/tokenization-key/javascript/v2#obtaining-a-tokenization-key">client authorization</a> during instantiation:</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-variable">paypal</span> <span class="cm-operator">=</span> <span class="cm-variable">recurly</span>.<span class="cm-property">PayPal</span>({ <span class="cm-property">braintree</span>: { <span class="cm-property">clientAuthorization</span>: <span class="cm-variable">MY_CLIENT_AUTHORIZATION</span> } });</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Your instance must then be set up to handle error scenarios and start the checkout flow.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-variable">paypal</span>.<span class="cm-property">on</span>(<span class="cm-string">'error'</span>, <span class="cm-keyword">function</span> (<span class="cm-def">err</span>) { <span class="cm-comment">// err.code</span> <span class="cm-comment">// err.message</span> <span class="cm-comment">// [err.cause] if there is an embedded error</span> });</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Next we must bind a listener to a user action on the button and have it trigger the <code>start</code> function on your <code>recurly.PayPal</code> instance. This will open the PayPal checkout flow.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-info no-title"> 
                <h3><i title="Info" class="fa fa-info-circle on"></i> </h3>
                <p>As with the rest of Recurly.js, there are no external dependencies. The example uses jQuery to demonstrate binding events, but this can be done any way you wish.</p> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-variable">$</span>(<span class="cm-string">'#paypal-button'</span>).<span class="cm-property">on</span>(<span class="cm-string">'click'</span>, <span class="cm-keyword">function</span> () { <span class="cm-variable">paypal</span>.<span class="cm-property">start</span>(); });</span></code></pre> 
                </div> 
               </div> 
               <div class="magic-block-callout type-warning no-title"> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i> </h3>
                <p>the <code>start</code> function must be called within a user-initiated event like 'click' or 'touchend'</p> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Finally, add a function to receive the token once your customer completes the checkout flow. At this point you will send the token id to your server to be used in the Recurly API to create a billing info for an account.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-variable">paypal</span>.<span class="cm-property">on</span>(<span class="cm-string">'token'</span>, <span class="cm-keyword">function</span> (<span class="cm-def">token</span>) { <span class="cm-comment">// token.id</span> });</span></code></pre> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-recurlypaypal" class="anchor waypoint"></div><span class="pg-type-big pg-type type-fn">fn</span>recurly.PayPal<a href="#section-recurlypaypal" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-arguments"></div>Arguments<a class="fa fa-anchor" href="#section-arguments"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Param
                  </div> 
                  <div class="th">
                   Type
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>options</p> 
                  </div> 
                  <div class="td">
                   <p>Object</p> 
                  </div> 
                  <div class="td">
                   <p>Optional.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>options.braintree</p> 
                  </div> 
                  <div class="td">
                   <p>Object</p> 
                  </div> 
                  <div class="td">
                   <p>Optional. Braintree configuration.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>options.braintree.clientAuthorization</p> 
                  </div> 
                  <div class="td">
                   <p>String</p> 
                  </div> 
                  <div class="td">
                   <p>If using Braintree to proces PayPal transactions, provide your client authorization code here.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-returns"></div>Returns<a class="fa fa-anchor" href="#section-returns"></a></h3> 
                 <p>A new <code>recurly.PayPal</code> instance</p> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-paypalstart" class="anchor waypoint"></div><span class="pg-type-big pg-type type-fn">fn</span>paypal.start<a href="#section-paypalstart" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-arguments"></div>Arguments<a class="fa fa-anchor" href="#section-arguments"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Param
                  </div> 
                  <div class="th">
                   Type
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>options</p> 
                  </div> 
                  <div class="td">
                   <p>Object</p> 
                  </div> 
                  <div class="td">
                   <p>Optional</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>options.description</p> 
                  </div> 
                  <div class="td">
                   <p>String</p> 
                  </div> 
                  <div class="td">
                   <p>Optional. In legacy PayPal flows, this description will be displayed during the checkout flow.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-returns"></div>Returns<a class="fa fa-anchor" href="#section-returns"></a></h3> 
                 <p>Nothing.</p> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-events" class="anchor waypoint"></div>Events<a href="#section-events" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section--error-"></div><code>error</code><a class="fa fa-anchor" href="#section--error-"></a></h3> 
                 <p>This event is emitted when any error is encountered, whether during setup of the PayPal flow, or during the checkout process. It will be useful to display errors to your customer if a problem occurs during PayPal checkout.</p> 
                 <p><em>Signature</em> </p> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Param
                  </div> 
                  <div class="th">
                   Type
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>error</p> 
                  </div> 
                  <div class="td">
                   <p>RecurlyError</p> 
                  </div> 
                  <div class="td">
                   <p>An error describing the issue that occurred</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section--cancel-"></div><code>cancel</code><a class="fa fa-anchor" href="#section--cancel-"></a></h3> 
                 <p>This event is emitted when the customer has canceled the PayPal checkout flow before completion. You may wish to reset parts of your checkout experience if this occurs.</p> 
                 <p><em>Signature</em></p> 
                 <p>None.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section--token-"></div><code>token</code><a class="fa fa-anchor" href="#section--token-"></a></h3> 
                 <p>This event is fired when the customer has completed the PayPal checkout flow. Recurly has received the payment details, and generated this token to be used in our API.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-signature"></div>Signature<a class="fa fa-anchor" href="#section-signature"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="td">
                   <p>token</p> 
                  </div> 
                  <div class="td">
                   <p>Object</p> 
                  </div> 
                  <div class="td"></div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>token.id</p> 
                  </div> 
                  <div class="td">
                   <p>String</p> 
                  </div> 
                  <div class="td">
                   <p>Token identifier to be sent to the API</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/paypal" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/paypal/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="pricing" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e236","category":"59557419c0a2ba001bf5e1a7","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":["59094f4fb662a10f00aeed9e"],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T18:58:37.649Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":7,"body":"Recurly automates complicated subscriptions, with many factors influencing total subscription price. With this in mind, Recurly.js provides a robust pricing module designed to make determining actual subscription costs as simple and flexible as possible.\n\nA Recurly.js pricing module can be attached to the form we created above, or to any other section of your page meant to display subscription pricing. Let's get to the specifics!\n[block:api-header]\n{\n  \"type\": \"fn\",\n  \"title\": \"recurly.Pricing\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var pricing = recurly.Pricing();\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nCreates a `Pricing` instance.\n\n### No Arguments\n\n### Returns\n\nA new `recurly.Pricing` instance.\n[block:api-header]\n{\n  \"type\": \"fn\",\n  \"title\": \"pricing.attach\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"&lt;section id=\\\"pricing\\\"&gt;\\n  &lt;select data-recurly=\\\"plan\\\"&gt;\\n    &lt;option value=\\\"basic\\\"&gt;Basic&lt;/option&gt;\\n    &lt;option value=\\\"notbasic\\\"&gt;Not Basic&lt;/option&gt;\\n  &lt;/select&gt;\\n  &lt;input type=\\\"text\\\" data-recurly=\\\"coupon\\\"&gt;\\n&lt;/section&gt;\",\n      \"language\": \"html\"\n    }\n  ]\n}\n[/block]\nUse pricing.attach to bind the &lt;section&gt; to the pricing calculator.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var pricing = recurly.Pricing();\\n\\npricing.attach(document.querySelector('#pricing'));\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThis is the simplest way to use the pricing module. Simply pass a container element, and the pricing module with use all elements with a valid `data-recurly` attribute to determine price. When a value changes, the pricing module will automatically update its values. This allows your customers to manipulate a pricing form at will, and you will be able to react dynamically in any number of ways.\n\n### Arguments\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"container\",\n    \"0-1\": \"`HTMLElement`\",\n    \"0-2\": \"Parent element containing all `data-recurly` elements\",\n    \"h-0\": \"Param\",\n    \"h-1\": \"Type\",\n    \"h-2\": \"Description\"\n  },\n  \"cols\": 3,\n  \"rows\": 1\n}\n[/block]\n### Returns\n\nNothing.\n\n### Elements\n\nElements bound to a pricing module may be for either input or output.\n\nInput elements should be user-manipulable elements like `input` or `select`. If you want to input a value but not let a customer manipulate it, use an `&lt;input type=\"hidden\"&gt;`.\n\n### Input Elements\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field Name\",\n    \"h-1\": \"Example Value\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"plan\",\n    \"0-1\": \"`basic`\",\n    \"1-0\": \"plan_quantity\",\n    \"2-0\": \"coupon\",\n    \"3-0\": \"addon\",\n    \"4-0\": \"currency\",\n    \"5-0\": \"country\",\n    \"6-0\": \"postal_code\",\n    \"7-0\": \"tax_code\",\n    \"8-0\": \"vat_number\",\n    \"1-1\": \"`1`\",\n    \"2-1\": \"`15_off`\",\n    \"3-1\": \"`1`\",\n    \"4-1\": \"`USD`\",\n    \"5-1\": \"`US`\",\n    \"5-2\": \"[ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.\",\n    \"4-2\": \"[ISO-4217 currency code](http://docs.recurly.com/currencies).\",\n    \"3-2\": \"Addon quantity. To identify the addon being modified, use the `data-recurly-addon` attribute to set the addon code.\",\n    \"2-2\": \"Coupon code.\",\n    \"1-2\": \"Play quantity. Defaults to 1 if not specified.\",\n    \"0-2\": \"Plan code.\",\n    \"6-2\": \"Customer postal code. Used primarily to compute taxes.\",\n    \"7-2\": \"Product tax code.\",\n    \"8-2\": \"Customer VAT number. Used for VAT exclusion.\",\n    \"6-1\": \"`90210`\",\n    \"7-1\": \"`digital`\",\n    \"8-1\": \"`SE0000`\",\n    \"9-0\": \"gift_card\",\n    \"9-1\": \"`518822D87268C142`\",\n    \"9-2\": \"Gift card's redemption code.\"\n  },\n  \"cols\": 3,\n  \"rows\": 10\n}\n[/block]\nOutput elements should be plain text elements like `output`, `span`, or `div`.\n\n### Output Elements\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field Name\",\n    \"h-1\": \"Example Output\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"total_now\",\n    \"1-0\": \"subtotal_now\",\n    \"2-0\": \"addons_now\",\n    \"3-0\": \"discount_now\",\n    \"4-0\": \"setup_fee_now\",\n    \"5-0\": \"tax_now\",\n    \"6-0\": \"currency_code\",\n    \"7-0\": \"currency_symbol\",\n    \"7-1\": \"`$`, ``\",\n    \"7-2\": \"Symbolic representation of `currency_code`.\",\n    \"6-1\": \"`USD`, `EUR`\",\n    \"6-2\": \"ISO-4217 currency code.\",\n    \"5-1\": \"`15.00`\",\n    \"5-2\": \"Total subscription taxation.\",\n    \"4-1\": \"`5.00`\",\n    \"4-2\": \"Subscription setup fee total.\",\n    \"3-1\": \"`5.00`\",\n    \"3-2\": \"Amount discounted with coupon use.\",\n    \"2-2\": \"Total addon cost.\",\n    \"2-1\": \"`10.00`\",\n    \"1-1\": \"`90.00`\",\n    \"1-2\": \"Subtotal of the following pricing components.\",\n    \"0-1\": \"`100.00`\",\n    \"0-2\": \"Total subscription cost due now.\",\n    \"8-0\": \"gift_card_now\",\n    \"9-0\": \"gift_card_next\",\n    \"8-1\": \"`75.00`\",\n    \"9-1\": \"`25.00`\",\n    \"8-2\": \"The gift card amount that will be applied to the purchase today.\",\n    \"9-2\": \"The remainder gift card amount that will be applied to the next renewal.\"\n  },\n  \"cols\": 3,\n  \"rows\": 10\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"success\",\n  \"body\": \"`data-recurly` values ending in `_now` like `subtotal_now` have counterparts ending in `_next`. As you might expect, these correspond to the next billing cycle cost. These values are especially useful for plans with trial periods.\"\n}\n[/block]\n## Events\n\nExample price object emitted by the `change` event.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var pricingState = {\\n  now: {\\n    subtotal: '25.00',\\n    addons: '0.00',\\n    discount: '0.00',\\n    setup_fee: '25.00',\\n    tax: '0.00',\\n    total: '25.00'\\n  },\\n  next: {\\n    subtotal: '10.00',\\n    addons: '0.00',\\n    discount: '0.00',\\n    tax: '0.00',\\n    total: '10.00'\\n  },\\n  base: {\\n    plan: {\\n      setup_fee: '25.00',\\n      unit: '10.00'\\n    },\\n    addons: {\\n      thing1: '14.00', // cost of one 'thing1' addon\\n      thing2: '8.00'\\n    },\\n  },\\n  currency: {\\n    code: 'USD',\\n    symbol: '$'\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nPricing instances emit events when various values are set or the price changes.\n\nA `Pricing` instance itself behaves as an event emitter, where events can be attached using the `pricing.on` method and removed using `pricing.off`, similarly to how events are managed on `recurly`.\n\n### `Change`\n\nThis event is emitted whenever a pricing module has updated any of its pricing values. You can use this event to update your pricing display, compute total shopping costs, aggregate to analytics, etc.\n\nChange emits a price object, shown in detail to the right.\n\n### `set.*`\n\n`set.*` events are emitted when specific pricing objects change on a pricing module. For example, when a customer changes their plan, the pricing module will send `set.plan`. This is especially useful for updating checkout previews based on what the customer has selected as one example.\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"`set.plan`\",\n    \"1-0\": \"`set.price`\",\n    \"2-0\": \"`set.addon`\",\n    \"5-0\": \"`set.currency`\",\n    \"4-0\": \"`set.address`\",\n    \"3-0\": \"`set.coupon`\",\n    \"0-1\": \"Plan object.\",\n    \"1-1\": \"Price object.\",\n    \"2-1\": \"Addon object.\",\n    \"3-1\": \"Coupon object.\",\n    \"4-1\": \"Address object.\",\n    \"5-1\": \"Currency code.\",\n    \"6-0\": \"`set.tax`\",\n    \"6-1\": \"Tax object.\",\n    \"7-0\": \"`set.gift_card`\",\n    \"7-1\": \"Gift card object.\"\n  },\n  \"cols\": 2,\n  \"rows\": 8\n}\n[/block]\n## Pricing API\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var pricing = recurly.Pricing();\\n\\npricing\\n  .plan('basic', { quantity: 1 })\\n  .currency('USD')\\n  .addon('addon1', { quantity: 2 })\\n  .coupon('coop')\\n\\t.giftcard('518822D87268C142')\\n  .address({\\n    country: 'US',\\n    postal_code: '90210'\\n  })\\n  .tax({\\n    tax_code: 'digital',\\n    vat_number: ''\\n  })\\n  .catch(function (err) {\\n    // err.code\\n  })\\n  .done(function (price) {\\n    // price object as emitted by 'change' event\\n  });\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe pricing module can be manipulated with a set of direct method calls. This is useful if you would like to set up a complex pricing schema for your customers, or would just like to use a more programmatic method of determining subscription price. Events fire just as they normally would when using `pricing.attach`.\n\nNote that Recurly.js's DOM binding is one-way. Thus if you use the Pricing API on a pricing instance already attached to a container, the elements within _will not_ update with your Pricing API calls. If you would like two-way DOM binding, we suggest using a framework such as [AngularJS](https://angularjs.org/) and using the Pricing API without attaching it to a container.\n[block:callout]\n{\n  \"type\": \"success\",\n  \"body\": \"The example to the right demonstrates all the ways that a pricing module can be manipulated directly.\"\n}\n[/block]\n### PricingPromise\n\nEach Pricing API method will return a `PricingPromise`. This allows you to chain many asynchronous calls together without having to manage a complex chain of callbacks.\n\nYou don't need to worry much about the internals of a `PricingPromise`, as it is designed to stay out of your way and facilitate asynchronous calls for you.\n\nThe `catch` method, as shown in the example, is used to handle error scenarios, such as when an addon cannot be applied to the selected plan.\n[block:callout]\n{\n  \"type\": \"success\",\n  \"body\": \"At the end of a chain of pricing method calls, be sure to call `.done()` as this tells the pricing module to begin calculating, and gives you the subscription price.\"\n}\n[/block]","excerpt":"","slug":"pricing","type":"basic","title":"Pricing","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Pricing</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Recurly automates complicated subscriptions, with many factors influencing total subscription price. With this in mind, Recurly.js provides a robust pricing module designed to make determining actual subscription costs as simple and flexible as possible.</p> 
                 <p>A Recurly.js pricing module can be attached to the form we created above, or to any other section of your page meant to display subscription pricing. Let's get to the specifics!</p> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-recurlypricing" class="anchor waypoint"></div><span class="pg-type-big pg-type type-fn">fn</span>recurly.Pricing<a href="#section-recurlypricing" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-variable">pricing</span> <span class="cm-operator">=</span> <span class="cm-variable">recurly</span>.<span class="cm-property">Pricing</span>();</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Creates a <code>Pricing</code> instance.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-no-arguments"></div>No Arguments<a class="fa fa-anchor" href="#section-no-arguments"></a></h3> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-returns"></div>Returns<a class="fa fa-anchor" href="#section-returns"></a></h3> 
                 <p>A new <code>recurly.Pricing</code> instance.</p> 
                </div> 
               </div> 
               <div class="magic-block-api-header"> 
                <h2 class="header-scroll is-api-header"> 
                 <div id="section-pricingattach" class="anchor waypoint"></div><span class="pg-type-big pg-type type-fn">fn</span>pricing.attach<a href="#section-pricingattach" class="fa fa-anchor"></a> 
                 <hr> </h2> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">HTML</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">section</span> <span class="cm-attribute">id</span>=<span class="cm-string">"pricing"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">select</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"plan"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">option</span> <span class="cm-attribute">value</span>=<span class="cm-string">"basic"</span><span class="cm-tag cm-bracket">&gt;</span>Basic<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">option</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">option</span> <span class="cm-attribute">value</span>=<span class="cm-string">"notbasic"</span><span class="cm-tag cm-bracket">&gt;</span>Not Basic<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">option</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">select</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">input</span> <span class="cm-attribute">type</span>=<span class="cm-string">"text"</span> <span class="cm-attribute">data-recurly</span>=<span class="cm-string">"coupon"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">section</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Use pricing.attach to bind the </p>
                 <section>
                   to the pricing calculator.
                  <p></p> 
                 </section>
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-variable">pricing</span> <span class="cm-operator">=</span> <span class="cm-variable">recurly</span>.<span class="cm-property">Pricing</span>(); <span class="cm-variable">pricing</span>.<span class="cm-property">attach</span>(<span class="cm-variable">document</span>.<span class="cm-property">querySelector</span>(<span class="cm-string">'#pricing'</span>));</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>This is the simplest way to use the pricing module. Simply pass a container element, and the pricing module with use all elements with a valid <code>data-recurly</code> attribute to determine price. When a value changes, the pricing module will automatically update its values. This allows your customers to manipulate a pricing form at will, and you will be able to react dynamically in any number of ways.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-arguments"></div>Arguments<a class="fa fa-anchor" href="#section-arguments"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Param
                  </div> 
                  <div class="th">
                   Type
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>container</p> 
                  </div> 
                  <div class="td">
                   <p><code>HTMLElement</code></p> 
                  </div> 
                  <div class="td">
                   <p>Parent element containing all <code>data-recurly</code> elements</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-returns"></div>Returns<a class="fa fa-anchor" href="#section-returns"></a></h3> 
                 <p>Nothing.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-elements"></div>Elements<a class="fa fa-anchor" href="#section-elements"></a></h3> 
                 <p>Elements bound to a pricing module may be for either input or output.</p> 
                 <p>Input elements should be user-manipulable elements like <code>input</code> or <code>select</code>. If you want to input a value but not let a customer manipulate it, use an <code>&lt;input type="hidden"&gt;</code>.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-input-elements"></div>Input Elements<a class="fa fa-anchor" href="#section-input-elements"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Field Name
                  </div> 
                  <div class="th">
                   Example Value
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>plan</p> 
                  </div> 
                  <div class="td">
                   <p><code>basic</code></p> 
                  </div> 
                  <div class="td">
                   <p>Plan code.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>plan_quantity</p> 
                  </div> 
                  <div class="td">
                   <p><code>1</code></p> 
                  </div> 
                  <div class="td">
                   <p>Play quantity. Defaults to 1 if not specified.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>coupon</p> 
                  </div> 
                  <div class="td">
                   <p><code>15_off</code></p> 
                  </div> 
                  <div class="td">
                   <p>Coupon code.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>addon</p> 
                  </div> 
                  <div class="td">
                   <p><code>1</code></p> 
                  </div> 
                  <div class="td">
                   <p>Addon quantity. To identify the addon being modified, use the <code>data-recurly-addon</code> attribute to set the addon code.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>currency</p> 
                  </div> 
                  <div class="td">
                   <p><code>USD</code></p> 
                  </div> 
                  <div class="td">
                   <p><a href="http://docs.recurly.com/currencies">ISO-4217 currency code</a>.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>country</p> 
                  </div> 
                  <div class="td">
                   <p><code>US</code></p> 
                  </div> 
                  <div class="td">
                   <p><a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2</a> country code.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>postal_code</p> 
                  </div> 
                  <div class="td">
                   <p><code>90210</code></p> 
                  </div> 
                  <div class="td">
                   <p>Customer postal code. Used primarily to compute taxes.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>tax_code</p> 
                  </div> 
                  <div class="td">
                   <p><code>digital</code></p> 
                  </div> 
                  <div class="td">
                   <p>Product tax code.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>vat_number</p> 
                  </div> 
                  <div class="td">
                   <p><code>SE0000</code></p> 
                  </div> 
                  <div class="td">
                   <p>Customer VAT number. Used for VAT exclusion.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>gift_card</p> 
                  </div> 
                  <div class="td">
                   <p><code>518822D87268C142</code></p> 
                  </div> 
                  <div class="td">
                   <p>Gift card's redemption code.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Output elements should be plain text elements like <code>output</code>, <code>span</code>, or <code>div</code>.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-output-elements"></div>Output Elements<a class="fa fa-anchor" href="#section-output-elements"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Field Name
                  </div> 
                  <div class="th">
                   Example Output
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>total_now</p> 
                  </div> 
                  <div class="td">
                   <p><code>100.00</code></p> 
                  </div> 
                  <div class="td">
                   <p>Total subscription cost due now.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>subtotal_now</p> 
                  </div> 
                  <div class="td">
                   <p><code>90.00</code></p> 
                  </div> 
                  <div class="td">
                   <p>Subtotal of the following pricing components.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>addons_now</p> 
                  </div> 
                  <div class="td">
                   <p><code>10.00</code></p> 
                  </div> 
                  <div class="td">
                   <p>Total addon cost.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>discount_now</p> 
                  </div> 
                  <div class="td">
                   <p><code>5.00</code></p> 
                  </div> 
                  <div class="td">
                   <p>Amount discounted with coupon use.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>setup_fee_now</p> 
                  </div> 
                  <div class="td">
                   <p><code>5.00</code></p> 
                  </div> 
                  <div class="td">
                   <p>Subscription setup fee total.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>tax_now</p> 
                  </div> 
                  <div class="td">
                   <p><code>15.00</code></p> 
                  </div> 
                  <div class="td">
                   <p>Total subscription taxation.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>currency_code</p> 
                  </div> 
                  <div class="td">
                   <p><code>USD</code>, <code>EUR</code></p> 
                  </div> 
                  <div class="td">
                   <p>ISO-4217 currency code.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>currency_symbol</p> 
                  </div> 
                  <div class="td">
                   <p><code>$</code>, <code></code></p> 
                  </div> 
                  <div class="td">
                   <p>Symbolic representation of <code>currency_code</code>.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>gift_card_now</p> 
                  </div> 
                  <div class="td">
                   <p><code>75.00</code></p> 
                  </div> 
                  <div class="td">
                   <p>The gift card amount that will be applied to the purchase today.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>gift_card_next</p> 
                  </div> 
                  <div class="td">
                   <p><code>25.00</code></p> 
                  </div> 
                  <div class="td">
                   <p>The remainder gift card amount that will be applied to the next renewal.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div class="magic-block-callout type-success no-title"> 
                <h3><i title="Success" class="fa fa-check-square on"></i> </h3>
                <p><code>data-recurly</code> values ending in <code>_now</code> like <code>subtotal_now</code> have counterparts ending in <code>_next</code>. As you might expect, these correspond to the next billing cycle cost. These values are especially useful for plans with trial periods.</p> 
               </div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-events"></div>Events<a class="fa fa-anchor" href="#section-events"></a></h2> 
                 <p>Example price object emitted by the <code>change</code> event.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-variable">pricingState</span> <span class="cm-operator">=</span> { <span class="cm-property">now</span>: { <span class="cm-property">subtotal</span>: <span class="cm-string">'25.00'</span>, <span class="cm-property">addons</span>: <span class="cm-string">'0.00'</span>, <span class="cm-property">discount</span>: <span class="cm-string">'0.00'</span>, <span class="cm-property">setup_fee</span>: <span class="cm-string">'25.00'</span>, <span class="cm-property">tax</span>: <span class="cm-string">'0.00'</span>, <span class="cm-property">total</span>: <span class="cm-string">'25.00'</span> }, <span class="cm-property">next</span>: { <span class="cm-property">subtotal</span>: <span class="cm-string">'10.00'</span>, <span class="cm-property">addons</span>: <span class="cm-string">'0.00'</span>, <span class="cm-property">discount</span>: <span class="cm-string">'0.00'</span>, <span class="cm-property">tax</span>: <span class="cm-string">'0.00'</span>, <span class="cm-property">total</span>: <span class="cm-string">'10.00'</span> }, <span class="cm-property">base</span>: { <span class="cm-property">plan</span>: { <span class="cm-property">setup_fee</span>: <span class="cm-string">'25.00'</span>, <span class="cm-property">unit</span>: <span class="cm-string">'10.00'</span> }, <span class="cm-property">addons</span>: { <span class="cm-property">thing1</span>: <span class="cm-string">'14.00'</span>, <span class="cm-comment">// cost of one 'thing1' addon</span> <span class="cm-property">thing2</span>: <span class="cm-string">'8.00'</span> }, }, <span class="cm-property">currency</span>: { <span class="cm-property">code</span>: <span class="cm-string">'USD'</span>, <span class="cm-property">symbol</span>: <span class="cm-string">'$'</span> } }</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Pricing instances emit events when various values are set or the price changes.</p> 
                 <p>A <code>Pricing</code> instance itself behaves as an event emitter, where events can be attached using the <code>pricing.on</code> method and removed using <code>pricing.off</code>, similarly to how events are managed on <code>recurly</code>.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section--change-"></div><code>Change</code><a class="fa fa-anchor" href="#section--change-"></a></h3> 
                 <p>This event is emitted whenever a pricing module has updated any of its pricing values. You can use this event to update your pricing display, compute total shopping costs, aggregate to analytics, etc.</p> 
                 <p>Change emits a price object, shown in detail to the right.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section--set-"></div><code>set.*</code><a class="fa fa-anchor" href="#section--set-"></a></h3> 
                 <p><code>set.*</code> events are emitted when specific pricing objects change on a pricing module. For example, when a customer changes their plan, the pricing module will send <code>set.plan</code>. This is especially useful for updating checkout previews based on what the customer has selected as one example.</p> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>set.plan</code></p> 
                  </div> 
                  <div class="td">
                   <p>Plan object.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>set.price</code></p> 
                  </div> 
                  <div class="td">
                   <p>Price object.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>set.addon</code></p> 
                  </div> 
                  <div class="td">
                   <p>Addon object.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>set.coupon</code></p> 
                  </div> 
                  <div class="td">
                   <p>Coupon object.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>set.address</code></p> 
                  </div> 
                  <div class="td">
                   <p>Address object.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>set.currency</code></p> 
                  </div> 
                  <div class="td">
                   <p>Currency code.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>set.tax</code></p> 
                  </div> 
                  <div class="td">
                   <p>Tax object.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>set.gift_card</code></p> 
                  </div> 
                  <div class="td">
                   <p>Gift card object.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-pricing-api"></div>Pricing API<a class="fa fa-anchor" href="#section-pricing-api"></a></h2> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-variable">pricing</span> <span class="cm-operator">=</span> <span class="cm-variable">recurly</span>.<span class="cm-property">Pricing</span>(); <span class="cm-variable">pricing</span> .<span class="cm-property">plan</span>(<span class="cm-string">'basic'</span>, { <span class="cm-property">quantity</span>: <span class="cm-number">1</span> }) .<span class="cm-property">currency</span>(<span class="cm-string">'USD'</span>) .<span class="cm-property">addon</span>(<span class="cm-string">'addon1'</span>, { <span class="cm-property">quantity</span>: <span class="cm-number">2</span> }) .<span class="cm-property">coupon</span>(<span class="cm-string">'coop'</span>) .<span class="cm-property">giftcard</span>(<span class="cm-string">'518822D87268C142'</span>) .<span class="cm-property">address</span>({ <span class="cm-property">country</span>: <span class="cm-string">'US'</span>, <span class="cm-property">postal_code</span>: <span class="cm-string">'90210'</span> }) .<span class="cm-property">tax</span>({ <span class="cm-property">tax_code</span>: <span class="cm-string">'digital'</span>, <span class="cm-property">vat_number</span>: <span class="cm-string">''</span> }) .<span class="cm-property">catch</span>(<span class="cm-keyword">function</span> (<span class="cm-def">err</span>) { <span class="cm-comment">// err.code</span> }) .<span class="cm-property">done</span>(<span class="cm-keyword">function</span> (<span class="cm-def">price</span>) { <span class="cm-comment">// price object as emitted by 'change' event</span> });</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>The pricing module can be manipulated with a set of direct method calls. This is useful if you would like to set up a complex pricing schema for your customers, or would just like to use a more programmatic method of determining subscription price. Events fire just as they normally would when using <code>pricing.attach</code>.</p> 
                 <p>Note that Recurly.js's DOM binding is one-way. Thus if you use the Pricing API on a pricing instance already attached to a container, the elements within <em>will not</em> update with your Pricing API calls. If you would like two-way DOM binding, we suggest using a framework such as <a href="https://angularjs.org/">AngularJS</a> and using the Pricing API without attaching it to a container.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-success no-title"> 
                <h3><i title="Success" class="fa fa-check-square on"></i> </h3>
                <p>The example to the right demonstrates all the ways that a pricing module can be manipulated directly.</p> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-pricingpromise"></div>PricingPromise<a class="fa fa-anchor" href="#section-pricingpromise"></a></h3> 
                 <p>Each Pricing API method will return a <code>PricingPromise</code>. This allows you to chain many asynchronous calls together without having to manage a complex chain of callbacks.</p> 
                 <p>You don't need to worry much about the internals of a <code>PricingPromise</code>, as it is designed to stay out of your way and facilitate asynchronous calls for you.</p> 
                 <p>The <code>catch</code> method, as shown in the example, is used to handle error scenarios, such as when an addon cannot be applied to the selected plan.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-success no-title"> 
                <h3><i title="Success" class="fa fa-check-square on"></i> </h3>
                <p>At the end of a chain of pricing method calls, be sure to call <code>.done()</code> as this tells the pricing module to begin calculating, and gives you the subscription price.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/pricing" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/pricing/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="validation" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e237","category":"59557419c0a2ba001bf5e1a7","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T19:17:35.326Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"code":"{}","language":"json","status":200,"name":""},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":8,"body":"Recurly.js bundles a few helpful methods for validating payment information prior to processing. These methods are used when generating tokens, but you can also use them to enhance your form validations and checkout flow.\n\n## recurly.bankAccount.bankInfo (API)\n\nGet additional bank account info\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"var lookupData = {\\n  routingNumber: '123456780'\\n};\\nrecurly.bankAccount.bankInfo(lookupData, infoHandler);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThe bankInfo method requires a handler like this one\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"function infoHandler (err, bankInfo) {\\n  if (err) {\\n    // handle error\\n  } else {\\n    // handle success using bankInfo\\n  }\\n}\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nLooks up additional bank information based from a given routing number. If the routing number supplied is invalid, `invalid-routing-number` will be the error code returned.\n\n### Lookup data\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field Name\",\n    \"h-1\": \"Example\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"routingNumber\",\n    \"0-1\": \"`123456780`\",\n    \"0-2\": \"The routing number for a bank\"\n  },\n  \"cols\": 3,\n  \"rows\": 1\n}\n[/block]\n### Bank info data\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Field Name\",\n    \"h-1\": \"Example\",\n    \"h-2\": \"Description\",\n    \"0-0\": \"bank_name\",\n    \"0-1\": \"`Bank of Recurly`\",\n    \"0-2\": \"The name for the found bank\"\n  },\n  \"cols\": 3,\n  \"rows\": 1\n}\n[/block]","excerpt":"","slug":"validation","type":"basic","title":"Validation","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Validation</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Recurly.js bundles a few helpful methods for validating payment information prior to processing. These methods are used when generating tokens, but you can also use them to enhance your form validations and checkout flow.</p> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-recurly-bankaccount-bankinfo-api-"></div>recurly.bankAccount.bankInfo (API)<a class="fa fa-anchor" href="#section-recurly-bankaccount-bankinfo-api-"></a></h2> 
                 <p>Get additional bank account info</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-variable">lookupData</span> <span class="cm-operator">=</span> { <span class="cm-property">routingNumber</span>: <span class="cm-string">'123456780'</span> }; <span class="cm-variable">recurly</span>.<span class="cm-property">bankAccount</span>.<span class="cm-property">bankInfo</span>(<span class="cm-variable">lookupData</span>, <span class="cm-variable">infoHandler</span>);</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>The bankInfo method requires a handler like this one</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JavaScript</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-keyword">function</span> <span class="cm-variable">infoHandler</span> (<span class="cm-def">err</span>, <span class="cm-def">bankInfo</span>) { <span class="cm-keyword">if</span> (<span class="cm-variable-2">err</span>) { <span class="cm-comment">// handle error</span> } <span class="cm-keyword">else</span> { <span class="cm-comment">// handle success using bankInfo</span> } }</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Looks up additional bank information based from a given routing number. If the routing number supplied is invalid, <code>invalid-routing-number</code> will be the error code returned.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-lookup-data"></div>Lookup data<a class="fa fa-anchor" href="#section-lookup-data"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Field Name
                  </div> 
                  <div class="th">
                   Example
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>routingNumber</p> 
                  </div> 
                  <div class="td">
                   <p><code>123456780</code></p> 
                  </div> 
                  <div class="td">
                   <p>The routing number for a bank</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-bank-info-data"></div>Bank info data<a class="fa fa-anchor" href="#section-bank-info-data"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Field Name
                  </div> 
                  <div class="th">
                   Example
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>bank_name</p> 
                  </div> 
                  <div class="td">
                   <p><code>Bank of Recurly</code></p> 
                  </div> 
                  <div class="td">
                   <p>The name for the found bank</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/validation" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/validation/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="errors-1" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e238","category":"59557419c0a2ba001bf5e1a7","parentDoc":null,"user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T19:19:09.515Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":9,"body":"Example RecurlyError object.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  name: 'validation',\\n  code: 'validation',\\n  message: 'There was an error validating your request.',\\n  fields: [\\n    'number',\\n    'year'\\n  ]\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\nErrors are encapsulated by a `RecurlyError`, which contains a few standard properties to help you diagnose error cases and inform your customers accordingly.\n\nErrors will be thrown if the exception will prevent proper execution. If an error can be recovered, it will be passed to the proper error handling event listener, callback, or `PricingPromise` handler for you to inspect.\n\n### Best Practices\n\nThe `message` property contains diagnostic information intended to help you diagnose problems with the form, and we do not recommend displaying its contents to your customers.\n\nTo provide the best customer experience, we recommend that you provide your own error text to be displayed, based on the error code you receive.\n\n### Error Codes\n\n## Configuration\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Code\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"not-configured\",\n    \"1-0\": \"missing-public-key\",\n    \"2-0\": \"invalid-public-key\",\n    \"3-0\": \"already-configured\",\n    \"4-0\": \"missing-hosted-field-target\",\n    \"5-0\": \"\",\n    \"0-1\": \"This error appears when you try to perform an operation without first calling [`recurly.configure`](#configure).\",\n    \"2-1\": \"Check the `publicKey` to ensure it matches that of your admin app's [API Access section](https://app.recurly.com/go/developer/api_access).\",\n    \"1-1\": \"When you call [`recurly.configure`](#configure), you must do so with a `publicKey` property.\",\n    \"3-1\": \"A recurly instance may only be configured once. Doing so more than once is excessive.\",\n    \"4-1\": \"This is thrown when the target element for a hosted payment field cannot be found on the page. Check the error message to check the selector being used, then check your page to ensure the element is present when `recurly.configure` is called.\",\n    \"5-1\": \"\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n## Tokenization\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Code\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"validation\",\n    \"1-0\": \"invalid-parameter\",\n    \"2-0\": \"api-error\",\n    \"3-0\": \"\",\n    \"1-1\": \"Occurs when a tokenization parameter does not pass our internal validations. Check the `fields` property to determine which fields caused the error.\",\n    \"2-1\": \"A request to the Recurly API has encountered an issue. This too can indicate many possible issues, and we recommend inspecting the `message` and `fields` properties for more information.\",\n    \"3-1\": \"\",\n    \"0-1\": \"A request validation error has occurred. This can indicate many possible issues, and you should check the `fields` property to determine which fields caused the error.\"\n  },\n  \"cols\": 2,\n  \"rows\": 3\n}\n[/block]\n## Pricing\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"Code\",\n    \"h-1\": \"Description\",\n    \"0-0\": \"not-found\",\n    \"1-0\": \"missing-plan\",\n    \"2-0\": \"invalid-addon\",\n    \"3-0\": \"invalid-currency\",\n    \"5-0\": \"\",\n    \"5-1\": \"\",\n    \"3-1\": \"Similarly, if a currency is requested which is not valid for the selected plan.\",\n    \"2-1\": \"Occurs when an addon is added to a [`Pricing`](#pricing) instance but is not valid for the instance's selected plan.\",\n    \"1-1\": \"A [`Pricing`](#pricing) instance will emit this if a plan has not been specified before trying to set a proeprty that depends on a plan, such as a coupon or addon.\",\n    \"0-1\": \"This happens when a nonexistent plan is requested.\",\n    \"4-0\": \"gift-card-currency-mismatch\",\n    \"4-1\": \"Occurs when a gift card is redeemed with a currency that doesn't match the instance's configured currency.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n## PayPal\n[block:parameters]\n{\n  \"data\": {\n    \"0-0\": \"paypal-not-configured\",\n    \"0-1\": \"In order to perform a PayPal transaction, your site must be configured to accept PayPal reference\",\n    \"1-1\": \"The customer canceled the PayPal agreement flow.\",\n    \"2-1\": \"A generic PayPal error has occurred. Inspect `message` to learn more.\",\n    \"3-1\": \"The bank routing number is not valid\",\n    \"3-0\": \"invalid-routing-number\",\n    \"2-0\": \"paypal-error\",\n    \"1-0\": \"paypal-canceled\",\n    \"h-0\": \"Code\",\n    \"h-1\": \"Description\"\n  },\n  \"cols\": 2,\n  \"rows\": 4\n}\n[/block]","excerpt":"","slug":"errors-1","type":"basic","title":"Errors","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Errors</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Example RecurlyError object.</p> 
                </div> 
               </div> 
               <div class="magic-block-code"> 
                <div class="code-tabs"> 
                 <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
                  <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">JSON</a>
                 </div> 
                </div> 
                <div class="block-code-code"> 
                 <pre ng-if="tab == 0"><code><span class="cm-s-neo">{ <span class="cm-property">name</span>: <span class="cm-string">'validation'</span>, <span class="cm-property">code</span>: <span class="cm-string">'validation'</span>, <span class="cm-property">message</span>: <span class="cm-string">'There was an error validating your request.'</span>, <span class="cm-property">fields</span>: [ <span class="cm-string">'number'</span>, <span class="cm-string">'year'</span> ] }</span></code></pre> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <p>Errors are encapsulated by a <code>RecurlyError</code>, which contains a few standard properties to help you diagnose error cases and inform your customers accordingly.</p> 
                 <p>Errors will be thrown if the exception will prevent proper execution. If an error can be recovered, it will be passed to the proper error handling event listener, callback, or <code>PricingPromise</code> handler for you to inspect.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-best-practices"></div>Best Practices<a class="fa fa-anchor" href="#section-best-practices"></a></h3> 
                 <p>The <code>message</code> property contains diagnostic information intended to help you diagnose problems with the form, and we do not recommend displaying its contents to your customers.</p> 
                 <p>To provide the best customer experience, we recommend that you provide your own error text to be displayed, based on the error code you receive.</p> 
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-error-codes"></div>Error Codes<a class="fa fa-anchor" href="#section-error-codes"></a></h3> 
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-configuration"></div>Configuration<a class="fa fa-anchor" href="#section-configuration"></a></h2> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Code
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>not-configured</p> 
                  </div> 
                  <div class="td">
                   <p>This error appears when you try to perform an operation without first calling <a href="#configure"><code>recurly.configure</code></a>.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>missing-public-key</p> 
                  </div> 
                  <div class="td">
                   <p>When you call <a href="#configure"><code>recurly.configure</code></a>, you must do so with a <code>publicKey</code> property.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>invalid-public-key</p> 
                  </div> 
                  <div class="td">
                   <p>Check the <code>publicKey</code> to ensure it matches that of your admin app's <a href="https://app.recurly.com/go/developer/api_access">API Access section</a>.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>already-configured</p> 
                  </div> 
                  <div class="td">
                   <p>A recurly instance may only be configured once. Doing so more than once is excessive.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>missing-hosted-field-target</p> 
                  </div> 
                  <div class="td">
                   <p>This is thrown when the target element for a hosted payment field cannot be found on the page. Check the error message to check the selector being used, then check your page to ensure the element is present when <code>recurly.configure</code> is called.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-tokenization"></div>Tokenization<a class="fa fa-anchor" href="#section-tokenization"></a></h2> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Code
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>validation</p> 
                  </div> 
                  <div class="td">
                   <p>A request validation error has occurred. This can indicate many possible issues, and you should check the <code>fields</code> property to determine which fields caused the error.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>invalid-parameter</p> 
                  </div> 
                  <div class="td">
                   <p>Occurs when a tokenization parameter does not pass our internal validations. Check the <code>fields</code> property to determine which fields caused the error.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>api-error</p> 
                  </div> 
                  <div class="td">
                   <p>A request to the Recurly API has encountered an issue. This too can indicate many possible issues, and we recommend inspecting the <code>message</code> and <code>fields</code> properties for more information.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-pricing"></div>Pricing<a class="fa fa-anchor" href="#section-pricing"></a></h2> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Code
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>not-found</p> 
                  </div> 
                  <div class="td">
                   <p>This happens when a nonexistent plan is requested.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>missing-plan</p> 
                  </div> 
                  <div class="td">
                   <p>A <a href="#pricing"><code>Pricing</code></a> instance will emit this if a plan has not been specified before trying to set a proeprty that depends on a plan, such as a coupon or addon.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>invalid-addon</p> 
                  </div> 
                  <div class="td">
                   <p>Occurs when an addon is added to a <a href="#pricing"><code>Pricing</code></a> instance but is not valid for the instance's selected plan.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>invalid-currency</p> 
                  </div> 
                  <div class="td">
                   <p>Similarly, if a currency is requested which is not valid for the selected plan.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>gift-card-currency-mismatch</p> 
                  </div> 
                  <div class="td">
                   <p>Occurs when a gift card is redeemed with a currency that doesn't match the instance's configured currency.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div> 
                <div class="marked">
                 <h2 class="header-scroll">
                  <div class="anchor waypoint" id="section-paypal"></div>PayPal<a class="fa fa-anchor" href="#section-paypal"></a></h2> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   Code
                  </div> 
                  <div class="th">
                   Description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>paypal-not-configured</p> 
                  </div> 
                  <div class="td">
                   <p>In order to perform a PayPal transaction, your site must be configured to accept PayPal reference</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>paypal-canceled</p> 
                  </div> 
                  <div class="td">
                   <p>The customer canceled the PayPal agreement flow.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>paypal-error</p> 
                  </div> 
                  <div class="td">
                   <p>A generic PayPal error has occurred. Inspect <code>message</code> to learn more.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p>invalid-routing-number</p> 
                  </div> 
                  <div class="td">
                   <p>The bank routing number is not valid</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/errors-1" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/errors-1/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="examples" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e239","category":"59557419c0a2ba001bf5e1a7","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":["582136261142c82700b03347"],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T19:35:36.709Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"{}","language":"json","status":200},{"language":"json","status":400,"name":"","code":"{}"}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":10,"body":"### Integration examples\n\nWe've prepared a full suite of example integrations for *Ruby*, *Node.js*, *Python*, and *PHP* using popular web frameworks for each language. These examples demonstrate the simplest method of integration, with a no-frills UI.\n\n[Code on GitHub](https://github.com/recurly/recurly-js-examples)","excerpt":"","slug":"examples","type":"basic","title":"Examples","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Examples</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-integration-examples"></div>Integration examples<a class="fa fa-anchor" href="#section-integration-examples"></a></h3> 
                 <p>We've prepared a full suite of example integrations for <em>Ruby</em>, <em>Node.js</em>, <em>Python</em>, and <em>PHP</em> using popular web frameworks for each language. These examples demonstrate the simplest method of integration, with a no-frills UI.</p> 
                 <p><a href="https://github.com/recurly/recurly-js-examples">Code on GitHub</a></p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/examples" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/examples/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="support" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e23a","category":"59557419c0a2ba001bf5e1a7","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-03-01T19:37:11.437Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"status":200,"name":"","code":"{}","language":"json"},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[],"url":""},"isReference":false,"order":11,"body":"Recurly.js supports Chrome, Firefox, Safari, iOS, and IE 10+.\n\nWe're also here to lend a hand on any Recurly.js integration questions! You can get help from us in a handful of ways:\n\n* Find us and other fellow developers in [#recurly](irc://chat.freenode.net:+6697/recurly) on freenode to chat in real-time.\n* Browse and post questions on [Stackoverflow](http://stackoverflow.com/questions/tagged/recurly). We check these regularly.\n* Take a look at the code on [GitHub](https://github.com/recurly/recurly-js). We welcome bug reports through Issues and contributions through Pull Requests.\n\nFor other Recurly related questions, please contact [support@recurly.com](https://support.recurly.com) for help with your account or other general questions.\n\nFor copies of documentation for previous versions of Recurly.js, please contact support.","excerpt":"","slug":"support","type":"basic","title":"Support","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1>Support</h1>
           <div marked></div>
           <hr>
          </div>
          <div class="docs-body"> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Recurly.js supports Chrome, Firefox, Safari, iOS, and IE 10+.</p> 
                 <p>We're also here to lend a hand on any Recurly.js integration questions! You can get help from us in a handful of ways:</p> 
                 <ul> 
                  <li>Find us and other fellow developers in <a href="irc://chat.freenode.net:+6697/recurly">#recurly</a> on freenode to chat in real-time.</li>
                  <li>Browse and post questions on <a href="http://stackoverflow.com/questions/tagged/recurly">Stackoverflow</a>. We check these regularly.</li>
                  <li>Take a look at the code on <a href="https://github.com/recurly/recurly-js">GitHub</a>. We welcome bug reports through Issues and contributions through Pull Requests.</li>
                 </ul> 
                 <p>For other Recurly related questions, please contact <a href="https://support.recurly.com">support@recurly.com</a> for help with your account or other general questions.</p> 
                 <p>For copies of documentation for previous versions of Recurly.js, please contact support.</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/support" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/support/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right is-empty"> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="account-object" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741bc0a2ba001bf5e1f8","category":"59557419c0a2ba001bf5e1a8","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":["56cec52444c5700b0095c02b"],"next":{"pages":[],"description":""},"createdAt":"2015-08-31T20:16:33.273Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"","language":"text"}]},"method":"get","results":{"codes":[{"language":"xml","code":"&lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n  &lt;adjustments href=\"https://your-subdomain.recurly.com/v2/accounts/1/adjustments\"/&gt;\n  &lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\"/&gt;\n  &lt;invoices href=\"https://your-subdomain.recurly.com/v2/accounts/1/invoices\"/&gt;\n  &lt;redemptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/redemptions\"/&gt;\n  &lt;subscriptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions\"/&gt;\n  &lt;transactions href=\"https://your-subdomain.recurly.com/v2/accounts/1/transactions\"/&gt;\n  &lt;account_code&gt;1&lt;/account_code&gt;\n  &lt;state&gt;active&lt;/state&gt;\n  &lt;username&gt;verena1234&lt;/username&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;cc_emails&gt;bob@example.com,susan@example.com&lt;/cc_emails&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company_name&gt;New Company Name&lt;/company_name&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n  &lt;address&gt;\n    &lt;address1&gt;123 Main St.&lt;/address1&gt;\n    &lt;address2 nil=\"nil\"/&gt;\n    &lt;city&gt;San Francisco&lt;/city&gt;\n    &lt;state&gt;CA&lt;/state&gt;\n    &lt;zip&gt;94105&lt;/zip&gt;\n    &lt;country&gt;US&lt;/country&gt;\n    &lt;phone nil=\"nil\"/&gt;\n  &lt;/address&gt;\n  &lt;accept_language nil=\"nil\"/&gt;\n  &lt;has_live_subscription type=\"boolean\"&gt;true&lt;/has_live_subscription&gt;\n  &lt;has_active_subscription type=\"boolean\"&gt;true&lt;/has_active_subscription&gt;\n  &lt;has_future_subscription type=\"boolean\"&gt;false&lt;/has_future_subscription&gt;\n  &lt;has_canceled_subscription type=\"boolean\"&gt;false&lt;/has_canceled_subscription&gt;\n  &lt;has_past_due_invoice type=\"boolean\"&gt;false&lt;/has_past_due_invoice&gt;\n  &lt;hosted_login_token&gt;96e74bd5e14d18e6da463a0d638a2621&lt;/hosted_login_token&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-07-08T20:59:43Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-07-11T17:56:24Z&lt;/updated_at&gt;\n  &lt;closed_at nil=\"nil\"/&gt;\n&lt;/account&gt;","name":"","status":200}]},"settings":"","auth":"required","params":[{"_id":"557f45d07eafa719001d1c2b","ref":"","in":"body","required":false,"desc":"The URL of adjustments for the specified account.","default":"","type":"string","name":"adjustments"},{"_id":"57a21cf65220910e002a1764","ref":"","in":"body","required":false,"desc":"The URL of the account balance for the specified account.","default":"","type":"string","name":"account_balance"},{"_id":"557f45d07eafa719001d1c2a","ref":"","in":"body","required":false,"desc":"The URL of billing info for the specified account.","default":"","type":"string","name":"billing_info"},{"_id":"557f45d07eafa719001d1c29","ref":"","in":"body","required":false,"desc":"The URL of invoices for the specified account.","default":"","type":"string","name":"invoices"},{"_id":"55e4aa556f190c1900a40881","ref":"","in":"body","required":false,"desc":"The URL of the coupon redemption for the specified account.","default":"","type":"string","name":"redemption"},{"_id":"55e4aa556f190c1900a40880","ref":"","in":"body","required":false,"desc":"The URL of subscriptions for the specified account.","default":"","type":"string","name":"subscriptions"},{"_id":"55e4aa556f190c1900a4087f","ref":"","in":"body","required":false,"desc":"The URL of transactions for the specified account.","default":"","type":"string","name":"transactions"},{"_id":"55e4aa556f190c1900a4087e","ref":"","in":"body","required":false,"desc":"The unique identifier of the account.","default":"","type":"string","name":"account_code"},{"_id":"55e4aa556f190c1900a4087d","ref":"","in":"body","required":false,"desc":"The state of accounts to return: `active` or `closed`.","default":"","type":"string","name":"state"},{"_id":"55e4aa556f190c1900a4087c","ref":"","in":"body","required":false,"desc":"The username of the account.","default":"","type":"string","name":"username"},{"_id":"55e4aa556f190c1900a4087b","ref":"","in":"body","required":false,"desc":"The email address of the account.","default":"","type":"string","name":"email"},{"_id":"560b18973bcbd80d0077d0c0","ref":"","in":"body","required":false,"desc":"Additional email address that should receive account correspondence. These should be separated only by commas. These CC emails will receive all emails that the `email` field also receives.","default":"","type":"array_string","name":"cc_emails"},{"_id":"55e4aa556f190c1900a4087a","ref":"","in":"body","required":false,"desc":"The first name of the account.","default":"","type":"string","name":"first_name"},{"_id":"55e4aa556f190c1900a40879","ref":"","in":"body","required":false,"desc":"The last name of the account.","default":"","type":"string","name":"last_name"},{"_id":"55e4aa556f190c1900a40878","ref":"","in":"body","required":false,"desc":"The company name of the account.","default":"","type":"string","name":"company_name"},{"_id":"55e4aa556f190c1900a40877","ref":"","in":"body","required":false,"desc":"The VAT number of the account (to avoid having the VAT applied).","default":"","type":"string","name":"vat_number"},{"_id":"55e4aa556f190c1900a40876","ref":"","in":"body","required":false,"desc":"The tax status of the account. `true` exempts tax on the account, `false` applies tax on the account.","default":"","type":"boolean","name":"tax_exempt"},{"_id":"55e4aa556f190c1900a40875","ref":"","in":"body","required":false,"desc":"The nested address information of the account: `address1`, `address2`, `city`, `state`, `zip`, `country`, `phone`.","default":"","type":"object","name":"address"},{"_id":"57fffdd8c7609a0f0063caaf","ref":"","in":"body","required":false,"desc":"The nested shipping address information of the account: `first_name`, `last_name`, `company_name`, `email`, `phone`, `vat_number`,  `address1`, `address2`, `city`, `state`, `zip`, `country`, `nickname`. You can pass in up to 20 account shipping addresses along with the request to create a new account. When providing a shipping address, the following are required: first_name, last_name, address1, city, state, zip, and country.","default":"","type":"object","name":"shipping_address"},{"_id":"55e4aa556f190c1900a40874","ref":"","in":"body","required":false,"desc":"The ISO 639-1 language code from the user's browser, indicating their preferred language and locale.","default":"","type":"string","name":"accept_language"},{"_id":"55e4aa556f190c1900a40873","ref":"","in":"body","required":false,"desc":"The unique token for automatically logging the account in to the hosted management pages. You may automatically log the user into their hosted management pages by directing the user to: `https://:subdomain.recurly.com/account/:hosted_login_token`.","default":"","type":"string","name":"hosted_login_token"},{"_id":"55e4aa556f190c1900a40872","ref":"","in":"body","required":false,"desc":"The date and time the account was created in Recurly.","default":"","type":"datetime","name":"created_at"},{"_id":"5783dc55359cd219005453ec","ref":"","in":"body","required":false,"desc":"The date and time the account or its billing info was last updated.","default":"","type":"datetime","name":"updated_at"},{"_id":"5783dcff359cd219005453ee","ref":"","in":"body","required":false,"desc":"For closed accounts, the date and time it was closed.","default":"","type":"datetime","name":"closed_at"},{"_id":"58c8255f5cb4fe1b00ec5679","ref":"","in":"body","required":false,"desc":"True if the account has at least one live subscription.","default":"","type":"boolean","name":"has_live_subscription"},{"_id":"58c8255f5cb4fe1b00ec5678","ref":"","in":"body","required":false,"desc":"True if the account has at least one active subscription.","default":"","type":"boolean","name":"has_active_subscription"},{"_id":"58c8255f5cb4fe1b00ec5677","ref":"","in":"body","required":false,"desc":"True if the account has at least one future subscription.","default":"","type":"boolean","name":"has_future_subscription"},{"_id":"58c8255f5cb4fe1b00ec5676","ref":"","in":"body","required":false,"desc":"True if the account has at least one canceled subscription.","default":"","type":"boolean","name":"has_canceled_subscription"},{"_id":"58c8255f5cb4fe1b00ec5675","ref":"","in":"body","required":false,"desc":"True if the account has at least one past due invoice.","default":"","type":"boolean","name":"has_past_due_invoice"}],"url":"/accounts"},"isReference":true,"order":0,"body":"","excerpt":"Accounts are core to managing your customers inside of Recurly. The account object stores the entire Recurly history of your customer and acts as the entry point for working with a customer's billing information, subscription data, transactions, invoices and more.","slug":"account-object","type":"get","title":"Account Object","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>Account Object</h1>
           <div marked>
            Accounts are core to managing your customers inside of Recurly. The account object stores the entire Recurly history of your customer and acts as the entry point for working with a customer's billing information, subscription data, transactions, invoices and more.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>adjustments<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The URL of adjustments for the specified account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>account_balance<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The URL of the account balance for the specified account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>billing_info<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The URL of billing info for the specified account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>invoices<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The URL of invoices for the specified account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>redemption<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The URL of the coupon redemption for the specified account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>subscriptions<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The URL of subscriptions for the specified account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>transactions<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The URL of transactions for the specified account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The unique identifier of the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>state<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The state of accounts to return: `active` or `closed`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>username<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The username of the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>email<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The email address of the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>cc_emails<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">array of strings</strong>
                <div marked>
                 Additional email address that should receive account correspondence. These should be separated only by commas. These CC emails will receive all emails that the `email` field also receives.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>first_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The first name of the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>last_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The last name of the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>company_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The company name of the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>vat_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The VAT number of the account (to avoid having the VAT applied).
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_exempt<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 The tax status of the account. `true` exempts tax on the account, `false` applies tax on the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">object</strong>
                <div marked>
                 The nested address information of the account: `address1`, `address2`, `city`, `state`, `zip`, `country`, `phone`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>shipping_address<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">object</strong>
                <div marked>
                 The nested shipping address information of the account: `first_name`, `last_name`, `company_name`, `email`, `phone`, `vat_number`, `address1`, `address2`, `city`, `state`, `zip`, `country`, `nickname`. You can pass in up to 20 account shipping addresses along with the request to create a new account. When providing a shipping address, the following are required: first_name, last_name, address1, city, state, zip, and country.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>accept_language<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The ISO 639-1 language code from the user's browser, indicating their preferred language and locale.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>hosted_login_token<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The unique token for automatically logging the account in to the hosted management pages. You may automatically log the user into their hosted management pages by directing the user to: `https://:subdomain.recurly.com/account/:hosted_login_token`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>created_at<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 The date and time the account was created in Recurly.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>updated_at<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 The date and time the account or its billing info was last updated.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>closed_at<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 For closed accounts, the date and time it was closed.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>has_live_subscription<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 True if the account has at least one live subscription.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>has_active_subscription<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 True if the account has at least one active subscription.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>has_future_subscription<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 True if the account has at least one future subscription.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>has_canceled_subscription<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 True if the account has at least one canceled subscription.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>has_past_due_invoice<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 True if the account has at least one past due invoice.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/account-object" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/account-object/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustments</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/adjustments"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">invoices</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/invoices"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">redemptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/redemptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subscriptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">transactions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/transactions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>active<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span>verena1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span>bob@example.com,susan@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span>New Company Name<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accept_language</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">has_live_subscription</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>true<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">has_live_subscription</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">has_active_subscription</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>true<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">has_active_subscription</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">has_future_subscription</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">has_future_subscription</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">has_canceled_subscription</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">has_canceled_subscription</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">has_past_due_invoice</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">has_past_due_invoice</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span>96e74bd5e14d18e6da463a0d638a2621<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-07-08T20:59:43Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-07-11T17:56:24Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">closed_at</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="list-accounts" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741bc0a2ba001bf5e1f9","category":"59557419c0a2ba001bf5e1a8","parentDoc":null,"user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":["55f1f9abd4d3160d00439b6c"],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T21:38:24.720Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","status":200,"language":"xml","code":"&lt;accounts type=\"array\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n    &lt;adjustments href=\"https://your-subdomain.recurly.com/v2/accounts/1/adjustments\"/&gt;\n    &lt;account_balance href=\"https://your-subdomain.recurly.com/v2/accounts/1/balance\"/&gt;\n    &lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\"/&gt;\n    &lt;invoices href=\"https://your-subdomain.recurly.com/v2/accounts/1/invoices\"/&gt;\n    &lt;redemptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/redemptions\"/&gt;\n    &lt;subscriptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions\"/&gt;\n    &lt;transactions href=\"https://your-subdomain.recurly.com/v2/accounts/1/transactions\"/&gt;\n    &lt;account_code&gt;1&lt;/account_code&gt;\n    &lt;state&gt;active&lt;/state&gt;\n    &lt;username&gt;verena1234&lt;/username&gt;\n    &lt;email&gt;verena@example.com&lt;/email&gt;\n    &lt;cc_emails&gt;bob@example.com,susan@example.com&lt;/cc_emails&gt;\n    &lt;first_name&gt;Verena&lt;/first_name&gt;\n    &lt;last_name&gt;Example&lt;/last_name&gt;\n    &lt;company_name&gt;Recurly Inc&lt;/company_name&gt;\n    &lt;vat_number nil=\"nil\"/&gt;\n    &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n    &lt;address&gt;\n      &lt;address1&gt;123 Main St.&lt;/address1&gt;\n      &lt;address2 nil=\"nil\"/&gt;\n      &lt;city&gt;San Francisco&lt;/city&gt;\n      &lt;state&gt;CA&lt;/state&gt;\n      &lt;zip&gt;94105&lt;/zip&gt;\n      &lt;country&gt;US&lt;/country&gt;\n      &lt;phone nil=\"nil\"/&gt;\n    &lt;/address&gt;\n    &lt;accept_language nil=\"nil\"/&gt;\n    &lt;hosted_login_token&gt;71c122cb16fc90252ff845eacf5d7814&lt;/hosted_login_token&gt;\n    &lt;created_at type=\"datetime\"&gt;2016-08-03T15:44:05Z&lt;/created_at&gt;\n    &lt;updated_at type=\"datetime\"&gt;2016-08-03T16:26:26Z&lt;/updated_at&gt;\n    &lt;closed_at nil=\"nil\"/&gt;\n  &lt;/account&gt;\n&lt;/accounts&gt;"}]},"settings":"","examples":{"codes":[{"language":"php","code":"&lt;?php\n\n$accounts = Recurly_AccountList::getActive();\nforeach ($accounts as $account) {\n  print \"Account: $account\\n\";\n}\n","name":""},{"language":"ruby","code":"Recurly::Account.find_each do |account|\n  puts \"Account: #{account.inspect}\"\nend"},{"language":"python","code":"#client version 2.1.6+\nfor account in Account.all():\n    print 'Account: %s' % account\n\n#client version &lt;= 2.1.5\naccounts = Account.all()\nwhile accounts:\n    for account in accounts:\n        print 'Account: %s' % account\n    try:\n        accounts = accounts.next_page()\n    except PageError:\n        accounts = ()"},{"code":"using System.Linq;\n\nvar accounts = Accounts.List();\nwhile (accounts.Any())\n{\n\tforeach (var account in accounts)\n\t\tConsole.WriteLine(account);\n\taccounts = accounts.Next;\n}","name":null,"language":"csharp"}]},"method":"get","auth":"required","params":[{"_id":"56465088054d8f0d00bc76aa","ref":"","in":"query","required":false,"desc":"The state of accounts to return: `active`, `closed`, `subscriber`, `non_subscriber`, `past_due`.","default":"","type":"string","name":"state"},{"_id":"578ea5b0c93aac0e00ec8899","ref":"","in":"query","required":false,"desc":"The attribute that will be used to order records: `created_at`, `updated_at`.","default":"created_at","type":"string","name":"sort"},{"_id":"578ea5b0c93aac0e00ec8898","ref":"","in":"query","required":false,"desc":"The order in which products will be returned: `asc` for ascending order, `desc` for descending order.","default":"desc","type":"string","name":"order"},{"_id":"578ea5b0c93aac0e00ec8897","ref":"","in":"query","required":false,"desc":"Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.","default":"","type":"datetime","name":"begin_time"},{"_id":"578ea5b0c93aac0e00ec8896","ref":"","in":"query","required":false,"desc":"Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes less than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.","default":"","type":"datetime","name":"end_time"},{"_id":"56d8bace7ce7550b00c81d77","ref":"","in":"query","required":false,"desc":"Number of records to return per page, up to a maximum of 200.","default":"50","type":"int","name":"per_page"},{"_id":"56d8bace7ce7550b00c81d78","ref":"","in":"query","required":false,"desc":"Splits records across pages. Leave blank to return the first page. Follow the URI in the first page's Link header to fetch the next page.","default":"","type":"int","name":"cursor"}],"url":"/accounts"},"isReference":true,"order":1,"body":"###Account Query States\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"state\",\n    \"h-1\": \"description\",\n    \"0-0\": \"`active`\",\n    \"1-0\": \"`closed`\",\n    \"0-1\": \"Open accounts.\",\n    \"1-1\": \"Accounts that are not open.\",\n    \"2-0\": \"`subscriber`\",\n    \"2-1\": \"Accounts with subscriptions that are valid for the current time. This includes subscriptions in a trial period.\",\n    \"3-0\": \"`non_subscriber`\",\n    \"3-1\": \"Accounts without subscriptions that are valid for the current time.\",\n    \"4-0\": \"`past_due`\",\n    \"4-1\": \"Accounts with invoices that have failed initial collection but still have collection attempts remaining.\"\n  },\n  \"cols\": 2,\n  \"rows\": 5\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Please note: a queried state and the base state of a returned account may differ. For example, querying for `past_due` account will not result in a list of accounts with a `past_due` state (they will either be `active` or `closed`). Only base states (`active`, `closed`) will be present in the returned account records.\"\n}\n[/block]","excerpt":"Returns a list of accounts on your site. Results are ordered by the time created, sorted by newest first.","slug":"list-accounts","type":"get","title":"List Accounts","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>List Accounts</h1>
           <div marked>
            Returns a list of accounts on your site. Results are ordered by the time created, sorted by newest first.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Query Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>state<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The state of accounts to return: `active`, `closed`, `subscriber`, `non_subscriber`, `past_due`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>sort<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <span class="param-default text-muted">created_at</span>
                <div marked>
                 The attribute that will be used to order records: `created_at`, `updated_at`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>order<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <span class="param-default text-muted">desc</span>
                <div marked>
                 The order in which products will be returned: `asc` for ascending order, `desc` for descending order.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>begin_time<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>end_time<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes less than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>per_page<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <span class="param-default text-muted">50</span>
                <div marked>
                 Number of records to return per page, up to a maximum of 200.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>cursor<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Splits records across pages. Leave blank to return the first page. Follow the URI in the first page's Link header to fetch the next page.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <h3 class="header-scroll">
                  <div class="anchor waypoint" id="section-account-query-states"></div>Account Query States<a class="fa fa-anchor" href="#section-account-query-states"></a></h3> 
                </div> 
               </div> 
               <div> 
                <div class="table"> 
                 <div class="tr"> 
                  <div class="th">
                   state
                  </div> 
                  <div class="th">
                   description
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>active</code></p> 
                  </div> 
                  <div class="td">
                   <p>Open accounts.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>closed</code></p> 
                  </div> 
                  <div class="td">
                   <p>Accounts that are not open.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>subscriber</code></p> 
                  </div> 
                  <div class="td">
                   <p>Accounts with subscriptions that are valid for the current time. This includes subscriptions in a trial period.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>non_subscriber</code></p> 
                  </div> 
                  <div class="td">
                   <p>Accounts without subscriptions that are valid for the current time.</p> 
                  </div> 
                 </div> 
                 <div class="tr"> 
                  <div class="td">
                   <p><code>past_due</code></p> 
                  </div> 
                  <div class="td">
                   <p>Accounts with invoices that have failed initial collection but still have collection attempts remaining.</p> 
                  </div> 
                 </div> 
                </div> 
               </div> 
               <div class="magic-block-callout type-warning no-title"> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i> </h3>
                <p>Please note: a queried state and the base state of a returned account may differ. For example, querying for <code>past_due</code> account will not result in a list of accounts with a <code>past_due</code> state (they will either be <code>active</code> or <code>closed</code>). Only base states (<code>active</code>, <code>closed</code>) will be present in the returned account records.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/list-accounts" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/list-accounts/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-variable-2">$accounts</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_AccountList</span>::<span class="cm-variable">getActive</span>(); <span class="cm-keyword">foreach</span> (<span class="cm-variable-2">$accounts</span> <span class="cm-keyword">as</span> <span class="cm-variable-2">$account</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Account: </span><span class="cm-variable-2">$account</span><span class="cm-string">\n"</span>; } </span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find_each</span> <span class="cm-keyword">do</span> |<span class="cm-def">account</span>| <span class="cm-variable">puts</span> <span class="cm-string">"Account: #{</span><span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">inspect</span><span class="cm-string">}"</span> <span class="cm-keyword">end</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-comment">#client version 2.1.6+</span> <span class="cm-keyword">for</span> <span class="cm-variable">account</span> <span class="cm-keyword">in</span> <span class="cm-variable">Account</span>.<span class="cm-builtin">all</span>(): <span class="cm-keyword">print</span> <span class="cm-string">'Account: %s'</span> <span class="cm-operator">%</span> <span class="cm-variable">account</span> <span class="cm-comment">#client version &lt;= 2.1.5</span> <span class="cm-variable">accounts</span> = <span class="cm-variable">Account</span>.<span class="cm-builtin">all</span>() <span class="cm-keyword">while</span> <span class="cm-variable">accounts</span>: <span class="cm-keyword">for</span> <span class="cm-variable">account</span> <span class="cm-keyword">in</span> <span class="cm-variable">accounts</span>: <span class="cm-keyword">print</span> <span class="cm-string">'Account: %s'</span> <span class="cm-operator">%</span> <span class="cm-variable">account</span> <span class="cm-keyword">try</span>: <span class="cm-variable">accounts</span> = <span class="cm-variable">accounts</span>.<span class="cm-variable">next_page</span>() <span class="cm-keyword">except</span> <span class="cm-variable">PageError</span>: <span class="cm-variable">accounts</span> = ()</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">using</span> <span class="cm-variable">System</span>.<span class="cm-variable">Linq</span>; <span class="cm-keyword">var</span> <span class="cm-def">accounts</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">List</span>(); <span class="cm-keyword">while</span> (<span class="cm-variable">accounts</span>.<span class="cm-variable">Any</span>()) { <span class="cm-keyword">foreach</span> (<span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-keyword">in</span> <span class="cm-variable">accounts</span>) <span class="cm-variable">Console</span>.<span class="cm-variable">WriteLine</span>(<span class="cm-variable">account</span>); <span class="cm-variable">accounts</span> <span class="cm-operator">=</span> <span class="cm-variable">accounts</span>.<span class="cm-variable">Next</span>; }</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accounts</span> <span class="cm-attribute">type</span>=<span class="cm-string">"array"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustments</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/adjustments"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_balance</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/balance"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">invoices</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/invoices"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">redemptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/redemptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subscriptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">transactions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/transactions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>active<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span>verena1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span>bob@example.com,susan@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accept_language</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span>71c122cb16fc90252ff845eacf5d7814<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T15:44:05Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:26:26Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">closed_at</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">accounts</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="create-an-account" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741bc0a2ba001bf5e1fa","category":"59557419c0a2ba001bf5e1a8","project":"555fbba928249c1900618a82","parentDoc":null,"user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":["562908002c0fd9190067da26"],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T20:12:03.880Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"php","code":"&lt;?php\n  \ntry {\n  $account = new Recurly_Account('b6f5783');\n  $account-&gt;email = 'verena@example.com';\n  $account-&gt;first_name = 'Verena';\n  $account-&gt;last_name = 'Example';\n  $account-&gt;create();\n\n  print \"Account: $account\\n\";\n\n} catch (Recurly_ValidationError $e) {\n  print \"Invalid Account: $e\";\n}","name":""},{"language":"ruby","code":"account = Recurly::Account.create(\n  :account_code =&gt; '1',\n  :email        =&gt; 'verena@example.com',\n  :first_name   =&gt; 'Verena',\n  :last_name    =&gt; 'Example',\n    :shipping_addresses =&gt; [\n      {\n          :nickname =&gt; 'Work',\n            :first_name =&gt; 'Verena',\n            :last_name =&gt; 'Example',\n            :company =&gt; 'Recurly Inc',\n            :phone =&gt; '555-222-1212',\n            :email =&gt; 'verena@example.com',\n            :address1 =&gt; '123 Main St.',\n            :address2 =&gt; 'Suite 101',\n            :city =&gt; 'San Francisco',\n            :state =&gt; 'CA',\n            :zip =&gt; '94105',\n            :country =&gt; 'US'\n        },\n        {\n          :nickname =&gt; 'Home',\n            :first_name =&gt; 'Verena',\n            :last_name =&gt; 'Example',\n            :phone =&gt; '555-867-5309',\n            :email =&gt; 'verena@example.com',\n            :address1 =&gt; '123 Fourth St.',\n            :address2 =&gt; 'Apt. 101',\n            :city =&gt; 'San Francisco',\n            :state =&gt; 'CA',\n            :zip =&gt; '94105',\n            :country =&gt; 'US'\n        }\n    ]\n)"},{"language":"python","code":"account = recurly.Account(account_code='1')\naccount.email = 'verena@example.com'\naccount.first_name = 'Verena'\naccount.last_name = 'Example'\naccount.save()"},{"language":"csharp","code":"var account = new Account(\"1\")\n{\n  Email = \"verena@example.com\",\n  FirstName = \"Verena\",\n  LastName = \"Example\"\n};\naccount.Create();"},{"code":"&lt;account&gt;\n  &lt;account_code&gt;1&lt;/account_code&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;username&gt;verena1234&lt;/username&gt;\n  &lt;cc_emails&gt;bob@example.com,susan@example.com&lt;/cc_emails&gt;\n  &lt;company_name&gt;Recurly Inc&lt;/company_name&gt;\n  &lt;address&gt;\n    &lt;address1&gt;123 Main St.&lt;/address1&gt;\n    &lt;city&gt;San Francisco&lt;/city&gt;\n    &lt;state&gt;CA&lt;/state&gt;\n    &lt;zip&gt;94105&lt;/zip&gt;\n    &lt;country&gt;US&lt;/country&gt;\n  &lt;/address&gt;\n  &lt;shipping_addresses&gt;\n    &lt;shipping_address&gt;\n      &lt;nickname&gt;Work&lt;/nickname&gt;\n      &lt;first_name&gt;Verena&lt;/first_name&gt;\n      &lt;last_name&gt;Example&lt;/last_name&gt;\n      &lt;company&gt;Recurly Inc&lt;/company&gt;\n      &lt;phone&gt;555-222-1212&lt;/phone&gt;\n      &lt;email&gt;verena@example.com&lt;/email&gt;\n      &lt;address1&gt;123 Main St.&lt;/address1&gt;\n      &lt;address2&gt;Suite 101&lt;/address2&gt;\n      &lt;city&gt;San Francisco&lt;/city&gt;\n      &lt;state&gt;CA&lt;/state&gt;\n      &lt;zip&gt;94105&lt;/zip&gt;\n      &lt;country&gt;US&lt;/country&gt;\n    &lt;/shipping_address&gt;\n    &lt;shipping_address&gt;\n      &lt;nickname&gt;Home&lt;/nickname&gt;\n      &lt;first_name&gt;Verena&lt;/first_name&gt;\n      &lt;last_name&gt;Example&lt;/last_name&gt;\n      &lt;phone&gt;555-867-5309&lt;/phone&gt;\n      &lt;email&gt;verena@example.com&lt;/email&gt;\n      &lt;address1&gt;123 Fourth St.&lt;/address1&gt;\n      &lt;address2&gt;Apt. 101&lt;/address2&gt;\n      &lt;city&gt;San Francisco&lt;/city&gt;\n      &lt;state&gt;CA&lt;/state&gt;\n      &lt;zip&gt;94105&lt;/zip&gt;\n      &lt;country&gt;US&lt;/country&gt;\n    &lt;/shipping_address&gt;\n  &lt;/shipping_addresses&gt;\n&lt;/account&gt;","language":"xml"}]},"method":"post","results":{"codes":[{"status":201,"language":"xml","code":"&lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n  &lt;adjustments href=\"https://your-subdomain.recurly.com/v2/accounts/1/adjustments\"/&gt;\n  &lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\"/&gt;\n  &lt;invoices href=\"https://your-subdomain.recurly.com/v2/accounts/1/invoices\"/&gt;\n  &lt;redemption href=\"https://your-subdomain.recurly.com/v2/accounts/1/redemption\"/&gt;\n  &lt;shipping_addresses href=\"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses\"/&gt;\n  &lt;subscriptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions\"/&gt;\n  &lt;transactions href=\"https://your-subdomain.recurly.com/v2/accounts/1/transactions\"/&gt;\n  &lt;account_code&gt;1&lt;/account_code&gt;\n  &lt;state&gt;active&lt;/state&gt;\n  &lt;username&gt;verena1234&lt;/username&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;cc_emails&gt;bob@example.com,susan@example.com&lt;/cc_emails&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company_name&gt;Recurly Inc&lt;/company_name&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;address&gt;\n    &lt;address1&gt;123 Main St.&lt;/address1&gt;\n    &lt;address2 nil=\"nil\"/&gt;\n    &lt;city&gt;San Francisco&lt;/city&gt;\n    &lt;state&gt;CA&lt;/state&gt;\n    &lt;zip&gt;94105&lt;/zip&gt;\n    &lt;country&gt;US&lt;/country&gt;\n    &lt;phone nil=\"nil\"/&gt;\n  &lt;/address&gt;\n  &lt;accept_language nil=\"nil\"/&gt;\n  &lt;hosted_login_token&gt;3ed66441313a90bd7e8039b31985dee8&lt;/hosted_login_token&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-06-14T16:08:41Z&lt;/created_at&gt;\n  &lt;closed_at nil=\"nil\"/&gt;\n&lt;/account&gt;","name":""}]},"settings":"","auth":"required","params":[{"_id":"557f3209e211d20d00601425","ref":"","in":"body","required":true,"desc":"A unique identifier used by your application to identify the account. This code may only contain the following characters: [a-z 0-9 @ - _ .] but it may not begin with a dot or hyphen character. Max of 50 characters.","default":"","type":"string","name":"account_code"},{"_id":"557f3209e211d20d00601424","ref":"","in":"body","required":false,"desc":"The username for the account, ignore if you do not use usernames. Max of 255 characters.","default":"","type":"string","name":"username"},{"_id":"557f3209e211d20d00601423","ref":"","in":"body","required":false,"desc":"The email address for the account.","default":"","type":"string","name":"email"},{"_id":"557f32d1e211d20d00601430","ref":"","in":"body","required":false,"desc":"The first name for the account. Max of 255 characters.","default":"","type":"string","name":"first_name"},{"_id":"557f32d1e211d20d0060142f","ref":"","in":"body","required":false,"desc":"The last name for the account.  Max of 255 characters.","default":"","type":"string","name":"last_name"},{"_id":"557f32d1e211d20d0060142e","ref":"","in":"body","required":false,"desc":"The company name for the account. Max of 50 characters.","default":"","type":"string","name":"company_name"},{"_id":"557f32d1e211d20d0060142d","ref":"","in":"body","required":false,"desc":"The VAT number to avoid having the VAT applied (if applicable).","default":"","type":"string","name":"vat_number"},{"_id":"557f32d1e211d20d0060142c","ref":"","in":"body","required":false,"desc":"The tax status for the account.","default":"","type":"boolean","name":"tax_exempt"},{"_id":"557f32d1e211d20d0060142b","ref":"","in":"body","required":false,"desc":"The Avalara AvaTax value that can be passed to identify the customer type for tax purposes. The range of values can be A - R (more info at Avalara). Value is case-sensitive.","default":"","type":"string","name":"entity_use_code"},{"_id":"58cffafa2cb80d1b005486a8","ref":"","in":"body","required":false,"desc":"The nested account acquisition information: `cost_in_cents`, `currency`, `channel`, `subchannel`, `campaign`","default":"","type":"object","name":"account_acquisition"},{"_id":"557f32d1e211d20d0060142a","ref":"","in":"body","required":false,"desc":"The nested billing information. If present, the account will only be created after the billing information is validated.","default":"","type":"object","name":"billing_info"},{"_id":"557f32d1e211d20d00601429","ref":"","in":"body","required":false,"desc":"The nested address information for the account: `address1`, `address2`, `city`, `state`, `zip`, `country`, `phone`.","default":"","type":"object","name":"address"},{"_id":"58010a4657be4b1900eaf2a6","ref":"","in":"body","required":false,"desc":"The nested shipping address information of the account: `first_name`, `last_name`, `company_name`, `email`, `phone`, `vat_number`,  `address1`, `address2`, `city`, `state`, `zip`, `country`, `nickname`. You can pass in up to 20 account shipping addresses along with the request to create a new account. When providing a shipping address, the following are required: first_name, last_name, address1, city, state, zip, and country.","default":"","type":"object","name":"shipping_address"},{"_id":"557f32d1e211d20d00601428","ref":"","in":"body","required":false,"desc":"The ISO 639-1 language code from the user's browser, indicating their preferred language and locale.","default":"","type":"string","name":"accept_language"},{"_id":"561c362cd308ee0d00749370","ref":"","in":"body","required":false,"desc":"Additional email address that should receive account correspondence. These should be separated only by commas. These CC emails will receive all emails that the `email` field also receives.","default":"","type":"array_string","name":"cc_emails"}],"url":"/accounts"},"isReference":true,"order":2,"body":"","excerpt":"Creates a new account. You may optionally include billing information.","slug":"create-an-account","type":"post","title":"Create Account","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-post">post</span>Create Account</h1>
           <div marked>
            Creates a new account. You may optionally include billing information.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 A unique identifier used by your application to identify the account. This code may only contain the following characters: [a-z 0-9 @ - _ .] but it may not begin with a dot or hyphen character. Max of 50 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>username<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The username for the account, ignore if you do not use usernames. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>email<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The email address for the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>first_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The first name for the account. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>last_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The last name for the account. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>company_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The company name for the account. Max of 50 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>vat_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The VAT number to avoid having the VAT applied (if applicable).
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_exempt<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 The tax status for the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>entity_use_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The Avalara AvaTax value that can be passed to identify the customer type for tax purposes. The range of values can be A - R (more info at Avalara). Value is case-sensitive.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>account_acquisition<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">object</strong>
                <div marked>
                 The nested account acquisition information: `cost_in_cents`, `currency`, `channel`, `subchannel`, `campaign`
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>billing_info<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">object</strong>
                <div marked>
                 The nested billing information. If present, the account will only be created after the billing information is validated.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">object</strong>
                <div marked>
                 The nested address information for the account: `address1`, `address2`, `city`, `state`, `zip`, `country`, `phone`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>shipping_address<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">object</strong>
                <div marked>
                 The nested shipping address information of the account: `first_name`, `last_name`, `company_name`, `email`, `phone`, `vat_number`, `address1`, `address2`, `city`, `state`, `zip`, `country`, `nickname`. You can pass in up to 20 account shipping addresses along with the request to create a new account. When providing a shipping address, the following are required: first_name, last_name, address1, city, state, zip, and country.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>accept_language<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The ISO 639-1 language code from the user's browser, indicating their preferred language and locale.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>cc_emails<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">array of strings</strong>
                <div marked>
                 Additional email address that should receive account correspondence. These should be separated only by commas. These CC emails will receive all emails that the `email` field also receives.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/create-an-account" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/create-an-account/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
              <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
               <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">XML</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$account</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Recurly_Account</span>(<span class="cm-string">'b6f5783'</span>); <span class="cm-variable-2">$account</span><span class="cm-operator">-&gt;</span><span class="cm-variable">email</span> <span class="cm-operator">=</span> <span class="cm-string">'verena@example.com'</span>; <span class="cm-variable-2">$account</span><span class="cm-operator">-&gt;</span><span class="cm-variable">first_name</span> <span class="cm-operator">=</span> <span class="cm-string">'Verena'</span>; <span class="cm-variable-2">$account</span><span class="cm-operator">-&gt;</span><span class="cm-variable">last_name</span> <span class="cm-operator">=</span> <span class="cm-string">'Example'</span>; <span class="cm-variable-2">$account</span><span class="cm-operator">-&gt;</span><span class="cm-variable">create</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Account: </span><span class="cm-variable-2">$account</span><span class="cm-string">\n"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_ValidationError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Invalid Account: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">create</span>( <span class="cm-atom">:account_code</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'1'</span>, <span class="cm-atom">:email</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'verena@example.com'</span>, <span class="cm-atom">:first_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Verena'</span>, <span class="cm-atom">:last_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Example'</span>, <span class="cm-atom">:shipping_addresses</span> <span class="cm-operator">=&gt;</span> [ { <span class="cm-atom">:nickname</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Work'</span>, <span class="cm-atom">:first_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Verena'</span>, <span class="cm-atom">:last_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Example'</span>, <span class="cm-atom">:company</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Recurly Inc'</span>, <span class="cm-atom">:phone</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'555-222-1212'</span>, <span class="cm-atom">:email</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'verena@example.com'</span>, <span class="cm-atom">:address1</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'123 Main St.'</span>, <span class="cm-atom">:address2</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Suite 101'</span>, <span class="cm-atom">:city</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'San Francisco'</span>, <span class="cm-atom">:state</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'CA'</span>, <span class="cm-atom">:zip</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'94105'</span>, <span class="cm-atom">:country</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'US'</span> }, { <span class="cm-atom">:nickname</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Home'</span>, <span class="cm-atom">:first_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Verena'</span>, <span class="cm-atom">:last_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Example'</span>, <span class="cm-atom">:phone</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'555-867-5309'</span>, <span class="cm-atom">:email</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'verena@example.com'</span>, <span class="cm-atom">:address1</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'123 Fourth St.'</span>, <span class="cm-atom">:address2</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Apt. 101'</span>, <span class="cm-atom">:city</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'San Francisco'</span>, <span class="cm-atom">:state</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'CA'</span>, <span class="cm-atom">:zip</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'94105'</span>, <span class="cm-atom">:country</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'US'</span> } ] )</span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">Account</span>(<span class="cm-variable">account_code</span>=<span class="cm-string">'1'</span>) <span class="cm-variable">account</span>.<span class="cm-variable">email</span> = <span class="cm-string">'verena@example.com'</span> <span class="cm-variable">account</span>.<span class="cm-variable">first_name</span> = <span class="cm-string">'Verena'</span> <span class="cm-variable">account</span>.<span class="cm-variable">last_name</span> = <span class="cm-string">'Example'</span> <span class="cm-variable">account</span>.<span class="cm-variable">save</span>()</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Account</span>(<span class="cm-string">"1"</span>) { <span class="cm-variable">Email</span> <span class="cm-operator">=</span> <span class="cm-string">"verena@example.com"</span>, <span class="cm-variable">FirstName</span> <span class="cm-operator">=</span> <span class="cm-string">"Verena"</span>, <span class="cm-variable">LastName</span> <span class="cm-operator">=</span> <span class="cm-string">"Example"</span> }; <span class="cm-variable">account</span>.<span class="cm-variable">Create</span>();</span></code></pre>
              <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span>verena1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span>bob@example.com,susan@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_addresses</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span>Work<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-222-1212<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span>Suite 101<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span>Home<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-867-5309<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Fourth St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span>Apt. 101<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">shipping_addresses</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>201<span> </span><em>Created</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustments</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/adjustments"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">invoices</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/invoices"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">redemption</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/redemption"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_addresses</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subscriptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">transactions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/transactions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>active<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span>verena1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span>bob@example.com,susan@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accept_language</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span>3ed66441313a90bd7e8039b31985dee8<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">closed_at</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="get-account" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741bc0a2ba001bf5e1fb","category":"59557419c0a2ba001bf5e1a8","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":["55bbdd4e1067fc1700510eed"],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T21:45:49.420Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"&lt;?php\n\ntry {\n  $account = Recurly_Account::get('1');\n  print \"Account: $account\\n\";\n} catch (Recurly_NotFoundError $e) {\n  print \"Account not found.\\n\";\n}","language":"php","name":""},{"code":"begin\n  account = Recurly::Account.find '1'\n  puts \"Account: #{account.inspect}\"\nrescue Recurly::Resource::NotFound =&gt; e\n  puts e.message\nend","language":"ruby"},{"code":"try:\n  account = recurly.Account.get('1')\n  print \"Account: %s\" % account\nexcept NotFoundError:\n  print \"Account not found.\\n\"","language":"python"},{"code":"try\n{\n\tvar account = Accounts.Get(\"1\");\n\tConsole.WriteLine(\"Account \" + account);\n}\ncatch (NotFoundException e)\n{\n\tConsole.WriteLine(\"Account not found.\");\n}","language":"csharp"}]},"method":"get","results":{"codes":[{"name":"","code":"&lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n  &lt;adjustments href=\"https://your-subdomain.recurly.com/v2/accounts/1/adjustments\"/&gt;\n  &lt;account_balance href=\"https://your-subdomain.recurly.com/v2/accounts/1/balance\"/&gt;\n  &lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\"/&gt;\n  &lt;invoices href=\"https://your-subdomain.recurly.com/v2/accounts/1/invoices\"/&gt;\n  &lt;redemptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/redemptions\"/&gt;\n  &lt;subscriptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions\"/&gt;\n  &lt;transactions href=\"https://your-subdomain.recurly.com/v2/accounts/1/transactions\"/&gt;\n  &lt;account_code&gt;1&lt;/account_code&gt;\n  &lt;state&gt;active&lt;/state&gt;\n  &lt;username&gt;verena1234&lt;/username&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;cc_emails&gt;bob@example.com,susan@example.com&lt;/cc_emails&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company_name&gt;Recurly Inc&lt;/company_name&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n  &lt;address&gt;\n    &lt;address1&gt;123 Main St.&lt;/address1&gt;\n    &lt;address2 nil=\"nil\"/&gt;\n    &lt;city&gt;San Francisco&lt;/city&gt;\n    &lt;state&gt;CA&lt;/state&gt;\n    &lt;zip&gt;94105&lt;/zip&gt;\n    &lt;country&gt;US&lt;/country&gt;\n    &lt;phone nil=\"nil\"/&gt;\n  &lt;/address&gt;\n  &lt;accept_language nil=\"nil\"/&gt;\n  &lt;hosted_login_token&gt;71c122cb16fc90252ff845eacf5d7814&lt;/hosted_login_token&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-03T15:44:05Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-03T16:26:26Z&lt;/updated_at&gt;\n  &lt;closed_at nil=\"nil\"/&gt;\n&lt;/account&gt;","language":"xml","status":200}]},"settings":"","auth":"required","params":[{"_id":"557f478deb75d80d00af4086","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"}],"url":"/accounts/:account_code"},"isReference":true,"order":3,"body":"","excerpt":"Returns information about a single account.","slug":"get-account","type":"get","title":"Lookup Account","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>Lookup Account</h1>
           <div marked>
            Returns information about a single account.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/get-account" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/get-account/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$account</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_Account</span>::<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>); <span class="cm-keyword">print</span> <span class="cm-string">"Account: </span><span class="cm-variable-2">$account</span><span class="cm-string">\n"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Account not found.\n"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-keyword">begin</span> <span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span> <span class="cm-string">'1'</span> <span class="cm-variable">puts</span> <span class="cm-string">"Account: #{</span><span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">inspect</span><span class="cm-string">}"</span> <span class="cm-keyword">rescue</span> <span class="cm-atom">Recurly::Resource::</span><span class="cm-tag">NotFound</span> <span class="cm-operator">=&gt;</span> <span class="cm-variable">e</span> <span class="cm-variable">puts</span> <span class="cm-variable">e</span><span class="cm-operator">.</span><span class="cm-property">message</span> <span class="cm-keyword">end</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-keyword">try</span>: <span class="cm-variable">account</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-keyword">print</span> <span class="cm-string">"Account: %s"</span> <span class="cm-operator">%</span> <span class="cm-variable">account</span> <span class="cm-keyword">except</span> <span class="cm-variable">NotFoundError</span>: <span class="cm-keyword">print</span> <span class="cm-string">"Account not found.\n"</span></span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">try</span> { <span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-variable">Console</span>.<span class="cm-variable">WriteLine</span>(<span class="cm-string">"Account "</span> <span class="cm-operator">+</span> <span class="cm-variable">account</span>); } <span class="cm-keyword">catch</span> (<span class="cm-variable">NotFoundException</span> <span class="cm-variable">e</span>) { <span class="cm-variable">Console</span>.<span class="cm-variable">WriteLine</span>(<span class="cm-string">"Account not found."</span>); }</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustments</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/adjustments"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_balance</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/balance"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">invoices</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/invoices"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">redemptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/redemptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subscriptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">transactions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/transactions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>active<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span>verena1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span>bob@example.com,susan@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accept_language</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span>71c122cb16fc90252ff845eacf5d7814<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T15:44:05Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:26:26Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">closed_at</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="update-account" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741bc0a2ba001bf5e1fc","category":"59557419c0a2ba001bf5e1a8","parentDoc":null,"user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":["568ffb69769f210d00132584"],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T21:57:38.556Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"name":"","code":"&lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n  &lt;adjustments href=\"https://your-subdomain.recurly.com/v2/accounts/1/adjustments\"/&gt;\n  &lt;account_balance href=\"https://your-subdomain.recurly.com/v2/accounts/1/balance\"/&gt;\n  &lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\"/&gt;\n  &lt;invoices href=\"https://your-subdomain.recurly.com/v2/accounts/1/invoices\"/&gt;\n  &lt;redemptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/redemptions\"/&gt;\n  &lt;subscriptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions\"/&gt;\n  &lt;transactions href=\"https://your-subdomain.recurly.com/v2/accounts/1/transactions\"/&gt;\n  &lt;account_code&gt;1&lt;/account_code&gt;\n  &lt;state&gt;active&lt;/state&gt;\n  &lt;username&gt;verena1234&lt;/username&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;cc_emails&gt;bob@example.com,susan@example.com&lt;/cc_emails&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company_name&gt;New Company Name&lt;/company_name&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n  &lt;address&gt;\n    &lt;address1&gt;123 Main St.&lt;/address1&gt;\n    &lt;address2 nil=\"nil\"/&gt;\n    &lt;city&gt;San Francisco&lt;/city&gt;\n    &lt;state&gt;CA&lt;/state&gt;\n    &lt;zip&gt;94105&lt;/zip&gt;\n    &lt;country&gt;US&lt;/country&gt;\n    &lt;phone nil=\"nil\"/&gt;\n  &lt;/address&gt;\n  &lt;accept_language nil=\"nil\"/&gt;\n  &lt;hosted_login_token&gt;71c122cb16fc90252ff845eacf5d7814&lt;/hosted_login_token&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-03T15:44:05Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-03T16:30:50Z&lt;/updated_at&gt;\n  &lt;closed_at nil=\"nil\"/&gt;\n&lt;/account&gt;","language":"xml","status":200}]},"settings":"","examples":{"codes":[{"code":"&lt;?php\n\ntry {\n  $account = Recurly_Account::get('b6f5783');\n  $account-&gt;company_name = 'New Company Name';\n  $account-&gt;update();\n\n  print \"Account: $account\\n\";\n} catch (Recurly_NotFoundError $e) {\n  print \"Invalid account code: $e\";\n}","name":"","language":"php"},{"language":"ruby","code":"account = Recurly::Account.find('account_1')\naccount.company_name = 'New Company Name'\naccount.save"},{"language":"python","code":"account = recurly.Account.get('account_1')\naccount.company_name = 'New Company Name'\naccount.save()"},{"language":"csharp","code":"var account = Account.Get(\"account_1\");\naccount.CompanyName = 'New Company Name'\naccount.Update();"},{"language":"xml","code":"&lt;account&gt;\n  &lt;company_name&gt;New Company Name&lt;/company_name&gt;\n&lt;/account&gt;"}]},"method":"put","auth":"required","params":[{"_id":"557f4a527eafa719001d1c43","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"557f4a527eafa719001d1c42","ref":"","in":"body","required":false,"desc":"The username for the account, ignore if you do not use usernames. Max of 255 characters.","default":"","type":"string","name":"username"},{"_id":"557f4a527eafa719001d1c41","ref":"","in":"body","required":false,"desc":"The email address for the account.","default":"","type":"string","name":"email"},{"_id":"557f4a527eafa719001d1c40","ref":"","in":"body","required":false,"desc":"The first name for the account. Max of 255 characters.","default":"","type":"string","name":"first_name"},{"_id":"557f4a527eafa719001d1c3f","ref":"","in":"body","required":false,"desc":"The last name for the account. Max of 255 characters.","default":"","type":"string","name":"last_name"},{"_id":"557f4a527eafa719001d1c3e","ref":"","in":"body","required":false,"desc":"The company name for the account. Max of 50 characters.","default":"","type":"string","name":"company_name"},{"_id":"557f4a527eafa719001d1c3d","ref":"","in":"body","required":false,"desc":"The VAT number to avoid having the VAT applied (if applicable).","default":"","type":"string","name":"vat_number"},{"_id":"557f4a527eafa719001d1c3c","ref":"","in":"body","required":false,"desc":"The tax status of the account. `true` exempts tax on the account, `false` applies tax on the account.","default":"","type":"boolean","name":"tax_exempt"},{"_id":"557f4a527eafa719001d1c3b","ref":"","in":"body","required":false,"desc":"The Avalara AvaTax value that can be passed to identify the customer type for tax purposes. The range of values can be A - R (more info at Avalara). Value is case-sensitive.","default":"","type":"string","name":"entity_use_code"},{"_id":"58cffb3be865c00f00f93dfb","ref":"","in":"body","required":false,"desc":"The nested account acquisition information: `cost_in_cents`, currency`, `channel`, `subchannel`, `campaign`","default":"","type":"object","name":"account_acquisition"},{"_id":"557f4a527eafa719001d1c3a","ref":"","in":"body","required":false,"desc":"The nested billing information. If present, the account will only be created after the billing information is validated.","default":"","type":"object","name":"billing_info"},{"_id":"557f4a527eafa719001d1c39","ref":"","in":"body","required":false,"desc":"The nested address information for the account: `address1`, `address2`, `city`, `state`, `zip`, `country`, `phone`.","default":"","type":"object","name":"address"},{"_id":"557f4a527eafa719001d1c38","ref":"","in":"body","required":false,"desc":"The ISO 639-1 language code from the user's browser, indicating their preferred language and locale.","default":"","type":"string","name":"accept_language"},{"_id":"561c3606d468a60d00f51ebe","ref":"","in":"body","required":false,"desc":"Additional email address that should receive account correspondence. These should be separated only by commas. These CC emails will receive all emails that the `email` field also receives.","default":"","type":"array_string","name":"cc_emails"}],"url":"/accounts/:account_code"},"isReference":true,"order":4,"body":"[block:callout]\n{\n  \"type\": \"success\",\n  \"title\": \"Please note\",\n  \"body\": \"You may optionally include billing information when updating an account. If the billing information is provided, the billing information will be validated. The account will only be updated if the billing information is valid.\"\n}\n[/block]","excerpt":"Updates an existing account.","slug":"update-account","type":"put","title":"Update Account","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-put">put</span>Update Account</h1>
           <div marked>
            Updates an existing account.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>username<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The username for the account, ignore if you do not use usernames. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>email<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The email address for the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>first_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The first name for the account. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>last_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The last name for the account. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>company_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The company name for the account. Max of 50 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>vat_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The VAT number to avoid having the VAT applied (if applicable).
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_exempt<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 The tax status of the account. `true` exempts tax on the account, `false` applies tax on the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>entity_use_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The Avalara AvaTax value that can be passed to identify the customer type for tax purposes. The range of values can be A - R (more info at Avalara). Value is case-sensitive.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>account_acquisition<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">object</strong>
                <div marked>
                 The nested account acquisition information: `cost_in_cents`, currency`, `channel`, `subchannel`, `campaign`
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>billing_info<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">object</strong>
                <div marked>
                 The nested billing information. If present, the account will only be created after the billing information is validated.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">object</strong>
                <div marked>
                 The nested address information for the account: `address1`, `address2`, `city`, `state`, `zip`, `country`, `phone`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>accept_language<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The ISO 639-1 language code from the user's browser, indicating their preferred language and locale.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>cc_emails<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">array of strings</strong>
                <div marked>
                 Additional email address that should receive account correspondence. These should be separated only by commas. These CC emails will receive all emails that the `email` field also receives.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div class="magic-block-callout type-success "> 
                <h3><i title="Success" class="fa fa-check-square on"></i><span>Please note</span> </h3>
                <p>You may optionally include billing information when updating an account. If the billing information is provided, the billing information will be validated. The account will only be updated if the billing information is valid.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/update-account" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/update-account/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
              <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
               <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">XML</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$account</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_Account</span>::<span class="cm-variable">get</span>(<span class="cm-string">'b6f5783'</span>); <span class="cm-variable-2">$account</span><span class="cm-operator">-&gt;</span><span class="cm-variable">company_name</span> <span class="cm-operator">=</span> <span class="cm-string">'New Company Name'</span>; <span class="cm-variable-2">$account</span><span class="cm-operator">-&gt;</span><span class="cm-variable">update</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Account: </span><span class="cm-variable-2">$account</span><span class="cm-string">\n"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Invalid account code: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'account_1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">company_name</span> <span class="cm-operator">=</span> <span class="cm-string">'New Company Name'</span> <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">save</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'account_1'</span>) <span class="cm-variable">account</span>.<span class="cm-variable">company_name</span> = <span class="cm-string">'New Company Name'</span> <span class="cm-variable">account</span>.<span class="cm-variable">save</span>()</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Account</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"account_1"</span>); <span class="cm-variable">account</span>.<span class="cm-variable">CompanyName</span> <span class="cm-operator">=</span> <span class="cm-string">'New Company Name'</span> <span class="cm-variable">account</span>.<span class="cm-variable">Update</span>();</span></code></pre>
              <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span>New Company Name<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustments</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/adjustments"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_balance</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/balance"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">invoices</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/invoices"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">redemptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/redemptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subscriptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">transactions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/transactions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>active<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span>verena1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span>bob@example.com,susan@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span>New Company Name<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accept_language</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span>71c122cb16fc90252ff845eacf5d7814<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T15:44:05Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:30:50Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">closed_at</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="close-account" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741bc0a2ba001bf5e1fd","category":"59557419c0a2ba001bf5e1a8","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T22:00:42.004Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"name":"","code":"&lt;?php\n\ntry {\n  $account = Recurly_Account::get('b6f5783');\n  $account-&gt;close();\n\n  print \"Account: $account\";\n} catch (Recurly_NotFoundError $e) {\n  print \"Invalid account code: $e\";\n}","language":"php"},{"language":"ruby","code":"account = Recurly::Account.find('1')\naccount.destroy"},{"code":"account = recurly.Account.get('1')\naccount.delete()","language":"python"},{"code":"var account = Accounts.Get(\"1\");\naccount.Close();","language":"csharp"}]},"method":"delete","results":{"codes":[{"name":"","code":"","language":"xml","status":200}]},"settings":"","auth":"required","params":[{"_id":"55944ebb5c9eaa2300a86337","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"}],"url":"/accounts/:account_code"},"isReference":true,"order":5,"body":"[block:callout]\n{\n  \"type\": \"success\",\n  \"title\": \"Please note\",\n  \"body\": \"Closing an account permanently deletes its billing information and cancels any active subscriptions (canceled subscriptions will remain active until the end of the current billing cycle before expiring).\"\n}\n[/block]","excerpt":"Marks an account as closed and cancels any active subscriptions.","slug":"close-account","type":"delete","title":"Close Account","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-delete">delete</span>Close Account</h1>
           <div marked>
            Marks an account as closed and cancels any active subscriptions.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div class="magic-block-callout type-success "> 
                <h3><i title="Success" class="fa fa-check-square on"></i><span>Please note</span> </h3>
                <p>Closing an account permanently deletes its billing information and cancels any active subscriptions (canceled subscriptions will remain active until the end of the current billing cycle before expiring).</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/close-account" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/close-account/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$account</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_Account</span>::<span class="cm-variable">get</span>(<span class="cm-string">'b6f5783'</span>); <span class="cm-variable-2">$account</span><span class="cm-operator">-&gt;</span><span class="cm-variable">close</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Account: </span><span class="cm-variable-2">$account</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Invalid account code: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">destroy</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span>.<span class="cm-variable">delete</span>()</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-variable">account</span>.<span class="cm-variable">Close</span>();</span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="reopen-account" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741bc0a2ba001bf5e1fe","category":"59557419c0a2ba001bf5e1a8","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T22:03:14.174Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"php","name":"","code":"&lt;?php\n\ntry {\n  $account = Recurly_Account::get('b6f5783');\n  $account-&gt;reopen();\n\n  // Or to fetch and reopen in one call\n  // $account = Recurly_Account::reopenAccount('b6f5783');\n\n  print \"Account: $account\";\n} catch (Recurly_NotFoundError $e) {\n  print \"Invalid account code: $e\";\n} catch (Recurly_ValidationError $e) {\n  print \"Account already open: $e\";\n}"},{"code":"account = Recurly::Account.find '1'\naccount.reopen","language":"ruby"},{"code":"account = recurly.Account.get('1')\naccount.reopen() ","language":"python"},{"code":"var account = Accounts.Get(\"1\");\naccount.Reopen();","language":"csharp"}]},"method":"put","results":{"codes":[{"name":"","status":200,"language":"xml","code":"&lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n  &lt;adjustments href=\"https://your-subdomain.recurly.com/v2/accounts/1/adjustments\"/&gt;\n  &lt;account_balance href=\"https://your-subdomain.recurly.com/v2/accounts/1/balance\"/&gt;\n  &lt;invoices href=\"https://your-subdomain.recurly.com/v2/accounts/1/invoices\"/&gt;\n  &lt;redemptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/redemptions\"/&gt;\n  &lt;subscriptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions\"/&gt;\n  &lt;transactions href=\"https://your-subdomain.recurly.com/v2/accounts/1/transactions\"/&gt;\n  &lt;account_code&gt;1&lt;/account_code&gt;\n  &lt;state&gt;active&lt;/state&gt;\n  &lt;username&gt;verena1234&lt;/username&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;cc_emails&gt;bob@example.com,susan@example.com&lt;/cc_emails&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company_name&gt;New Company Name&lt;/company_name&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n  &lt;address&gt;\n    &lt;address1&gt;123 Main St.&lt;/address1&gt;\n    &lt;address2 nil=\"nil\"/&gt;\n    &lt;city&gt;San Francisco&lt;/city&gt;\n    &lt;state&gt;CA&lt;/state&gt;\n    &lt;zip&gt;94105&lt;/zip&gt;\n    &lt;country&gt;US&lt;/country&gt;\n    &lt;phone nil=\"nil\"/&gt;\n  &lt;/address&gt;\n  &lt;accept_language nil=\"nil\"/&gt;\n  &lt;hosted_login_token&gt;71c122cb16fc90252ff845eacf5d7814&lt;/hosted_login_token&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-03T15:44:05Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-03T16:31:25Z&lt;/updated_at&gt;\n  &lt;closed_at nil=\"nil\"/&gt;\n&lt;/account&gt;"}]},"settings":"","auth":"required","params":[{"_id":"55944ed45c9eaa2300a86339","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"}],"url":"/accounts/:account_code/reopen"},"isReference":true,"order":6,"body":"[block:callout]\n{\n  \"type\": \"success\",\n  \"title\": \"Please note\",\n  \"body\": \"Editing an account, creating an account with the same `account_code` as the deleted account, or creating a new transaction or subscription will also reopen an account. Reopening an account will restore its history. Reopening an account does not modify any previously canceled or expired subscriptions and billing information will need to be provided by the customer to continue billing.\"\n}\n[/block]","excerpt":"Transitions a closed account back to active.","slug":"reopen-account","type":"put","title":"Reopen Account","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-put">put</span>Reopen Account</h1>
           <div marked>
            Transitions a closed account back to active.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div class="magic-block-callout type-success "> 
                <h3><i title="Success" class="fa fa-check-square on"></i><span>Please note</span> </h3>
                <p>Editing an account, creating an account with the same <code>account_code</code> as the deleted account, or creating a new transaction or subscription will also reopen an account. Reopening an account will restore its history. Reopening an account does not modify any previously canceled or expired subscriptions and billing information will need to be provided by the customer to continue billing.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/reopen-account" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/reopen-account/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$account</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_Account</span>::<span class="cm-variable">get</span>(<span class="cm-string">'b6f5783'</span>); <span class="cm-variable-2">$account</span><span class="cm-operator">-&gt;</span><span class="cm-variable">reopen</span>(); <span class="cm-comment">// Or to fetch and reopen in one call</span> <span class="cm-comment">// $account = Recurly_Account::reopenAccount('b6f5783');</span> <span class="cm-keyword">print</span> <span class="cm-string">"Account: </span><span class="cm-variable-2">$account</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Invalid account code: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_ValidationError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Account already open: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span> <span class="cm-string">'1'</span> <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">reopen</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span>.<span class="cm-variable">reopen</span>() </span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-variable">account</span>.<span class="cm-variable">Reopen</span>();</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustments</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/adjustments"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_balance</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/balance"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">invoices</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/invoices"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">redemptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/redemptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subscriptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/subscriptions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">transactions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/transactions"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>active<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span>verena1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">username</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span>bob@example.com,susan@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cc_emails</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span>New Company Name<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accept_language</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span>71c122cb16fc90252ff845eacf5d7814<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">hosted_login_token</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T15:44:05Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:31:25Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">closed_at</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="lookup-account-balance" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741bc0a2ba001bf5e1ff","category":"59557419c0a2ba001bf5e1a8","user":"559d85d26b21311700fb0b7b","parentDoc":null,"project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-07-19T19:51:58.991Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"method":"get","results":{"codes":[{"code":"&lt;account_balance href=\"https://your-subdomain.recurly.com/v2/accounts/1/balance\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;past_due type=\"boolean\"&gt;false&lt;/past_due&gt;\n  &lt;balance_in_cents&gt;\n    &lt;USD type=\"integer\"&gt;3000&lt;/USD&gt;\n    &lt;EUR type=\"integer\"&gt;0&lt;/EUR&gt;\n  &lt;/balance_in_cents&gt;\n&lt;/account_balance&gt;","name":"","status":200,"language":"xml"},{"language":"json","code":"&lt;error&gt;\n  &lt;symbol&gt;unavailable_in_api_version&lt;/symbol&gt;\n  &lt;description&gt;This request cannot be completed using this version of the API. It was added in version '2.3'.&lt;/description&gt;\n&lt;/error&gt;","name":"","status":400},{"code":"&lt;error&gt;\n  &lt;symbol&gt;not_found&lt;/symbol&gt;\n  &lt;description lang=\"en-US\"&gt;Couldn't find Account with account_code = not-1&lt;/description&gt;\n&lt;/error&gt;","status":404,"language":"text"}]},"settings":"","auth":"required","params":[{"_id":"578e888a36baeb17003fd5fb","ref":"","in":"query","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"}],"url":"/accounts/:account_code/balance"},"isReference":true,"order":7,"body":"","excerpt":"Returns the account's past due status and balance in each of the site's supported currencies.","slug":"lookup-account-balance","type":"get","title":"Lookup Account Balance","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>Lookup Account Balance</h1>
           <div marked>
            Returns the account's past due status and balance in each of the site's supported currencies.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Query Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/lookup-account-balance" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/lookup-account-balance/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}"><span class="status-icon status-icon-error"></span>400<span> </span><em>Bad Request</em></a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}"><span class="status-icon status-icon-error"></span>404<span> </span><em>Not Found</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_balance</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/balance"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">past_due</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">past_due</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">balance_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">USD</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>3000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">USD</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">EUR</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">EUR</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">balance_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_balance</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-operator">&lt;</span><span class="cm-variable">error</span><span class="cm-operator">&gt;</span> <span class="cm-operator">&lt;</span><span class="cm-variable">symbol</span><span class="cm-operator">&gt;</span><span class="cm-variable">unavailable_in_api_version</span><span class="cm-operator">&lt;</span><span class="cm-string-2">/symbol&gt;</span> <span class="cm-operator">&lt;</span><span class="cm-variable">description</span><span class="cm-operator">&gt;</span><span class="cm-variable">This</span> <span class="cm-variable">request</span> <span class="cm-variable">cannot</span> <span class="cm-variable">be</span> <span class="cm-variable">completed</span> <span class="cm-variable">using</span> <span class="cm-keyword">this</span> <span class="cm-variable">version</span> <span class="cm-variable">of</span> <span class="cm-variable">the</span> <span class="cm-variable">API</span>. <span class="cm-property">It</span> <span class="cm-variable">was</span> <span class="cm-variable">added</span> <span class="cm-keyword">in</span> <span class="cm-variable">version</span> <span class="cm-string">'2.3'</span>.<span class="cm-operator">&lt;</span><span class="cm-string-2">/description&gt;</span> <span class="cm-operator">&lt;</span><span class="cm-string-2">/error&gt;</span></span></code></pre>
              <pre ng-if="tab == 2"><code>&lt;error&gt;
  &lt;symbol&gt;not_found&lt;/symbol&gt;
  &lt;description lang="en-US"&gt;Couldn't find Account with account_code = not-1&lt;/description&gt;
&lt;/error&gt;</code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="list-account-notes" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741bc0a2ba001bf5e200","category":"59557419c0a2ba001bf5e1a8","user":"55648cf93b87582b003ab8b1","parentDoc":null,"project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T22:04:40.352Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"name":"","code":"&lt;?php\n\ntry {\n  $notes = Recurly_NoteList::get('b6f5783');\n  foreach ($notes as $note) {\n    print \"Note: {$note-&gt;message}\\n\";\n  }\n} catch (Recurly_NotFoundError $e) {\n  print \"Invalid account code: $e\";\n}","language":"php"},{"code":"try:\n  account = recurly.Account.get('1')\n  for note in account.notes():\n   print \"Note: %s\" % note.message\nexcept NotFoundError:\n  print \"Account not found.\\n\"","language":"python"},{"code":"using System.Linq;\n\nvar account = Accounts.Get(\"1\");\nvar notes = account.GetNotes();\nwhile (notes.Any())\n{\n\tforeach (var note in notes)\n\t\tConsole.WriteLine(\"Note: \" + note.Message);\n\tnotes = notes.Next;\n}","language":"csharp"}]},"method":"get","results":{"codes":[{"name":"","code":"&lt;notes type=\"array\"&gt;\n  &lt;note&gt;\n    &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n    &lt;message&gt;This is my second note&lt;/message&gt;\n    &lt;created_at type=\"datetime\"&gt;2015-06-14T16:08:41Z&lt;/created_at&gt;\n  &lt;/note&gt;\n  &lt;note&gt;\n    &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n    &lt;message&gt;This is my first note&lt;/message&gt;\n    &lt;created_at type=\"datetime\"&gt;2016-06-13T16:06:21Z&lt;/created_at&gt;\n  &lt;/note&gt;\n  &lt;!-- Continued... --&gt;\n&lt;/notes&gt;","language":"xml","status":200}]},"settings":"","auth":"required","params":[{"_id":"55944eddccc3052300569882","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"5783c946ce802f0e0087d4bb","ref":"","in":"query","required":false,"desc":"Splits records across pages. Leave blank to return the first page. Follow the URI in the first page's Link header to fetch the next page.","default":"","type":"string","name":"cursor"},{"_id":"578ea620c93aac0e00ec889d","ref":"","in":"query","required":false,"desc":"The attribute that will be used to order records: `created_at`, `updated_at`.","default":"created_at","type":"string","name":"sort"},{"_id":"578ea620c93aac0e00ec889c","ref":"","in":"query","required":false,"desc":"The order in which products will be returned: `asc` for ascending order, `desc` for descending order.","default":"desc","type":"string","name":"order"},{"_id":"578ea620c93aac0e00ec889b","ref":"","in":"query","required":false,"desc":"Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.","default":"","type":"datetime","name":"begin_time"},{"_id":"578ea620c93aac0e00ec889a","ref":"","in":"query","required":false,"desc":"","default":"","type":"datetime","name":"end_time"},{"_id":"5783c946ce802f0e0087d4ba","ref":"","in":"query","required":false,"desc":"Number of records to return per page, up to a maximum of 200.","default":"50","type":"int","name":"per_page"}],"url":"/accounts/:account_code/notes"},"isReference":true,"order":8,"body":"","excerpt":"Returns a list of the notes on an account sorted in descending order (most recently created first).","slug":"list-account-notes","type":"get","title":"List Account Notes","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>List Account Notes</h1>
           <div marked>
            Returns a list of the notes on an account sorted in descending order (most recently created first).
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Query Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>cursor<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Splits records across pages. Leave blank to return the first page. Follow the URI in the first page's Link header to fetch the next page.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>sort<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <span class="param-default text-muted">created_at</span>
                <div marked>
                 The attribute that will be used to order records: `created_at`, `updated_at`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>order<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <span class="param-default text-muted">desc</span>
                <div marked>
                 The order in which products will be returned: `asc` for ascending order, `desc` for descending order.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>begin_time<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>end_time<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked></div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>per_page<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <span class="param-default text-muted">50</span>
                <div marked>
                 Number of records to return per page, up to a maximum of 200.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/list-account-notes" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/list-account-notes/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">C#</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$notes</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_NoteList</span>::<span class="cm-variable">get</span>(<span class="cm-string">'b6f5783'</span>); <span class="cm-keyword">foreach</span> (<span class="cm-variable-2">$notes</span> <span class="cm-keyword">as</span> <span class="cm-variable-2">$note</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Note: </span>{<span class="cm-variable-2">$note</span><span class="cm-operator">-&gt;</span><span class="cm-variable">message</span>}<span class="cm-string">\n"</span>; } } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Invalid account code: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-keyword">try</span>: <span class="cm-variable">account</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-keyword">for</span> <span class="cm-variable">note</span> <span class="cm-keyword">in</span> <span class="cm-variable">account</span>.<span class="cm-variable">notes</span>(): <span class="cm-keyword cm-error">print</span> <span class="cm-string">"Note: %s"</span> <span class="cm-operator">%</span> <span class="cm-variable">note</span>.<span class="cm-variable">message</span> <span class="cm-keyword">except</span> <span class="cm-variable">NotFoundError</span>: <span class="cm-keyword">print</span> <span class="cm-string">"Account not found.\n"</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-keyword">using</span> <span class="cm-variable">System</span>.<span class="cm-variable">Linq</span>; <span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">notes</span> <span class="cm-operator">=</span> <span class="cm-variable">account</span>.<span class="cm-variable">GetNotes</span>(); <span class="cm-keyword">while</span> (<span class="cm-variable">notes</span>.<span class="cm-variable">Any</span>()) { <span class="cm-keyword">foreach</span> (<span class="cm-keyword">var</span> <span class="cm-def">note</span> <span class="cm-keyword">in</span> <span class="cm-variable">notes</span>) <span class="cm-variable">Console</span>.<span class="cm-variable">WriteLine</span>(<span class="cm-string">"Note: "</span> <span class="cm-operator">+</span> <span class="cm-variable">note</span>.<span class="cm-variable">Message</span>); <span class="cm-variable">notes</span> <span class="cm-operator">=</span> <span class="cm-variable">notes</span>.<span class="cm-variable">Next</span>; }</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">notes</span> <span class="cm-attribute">type</span>=<span class="cm-string">"array"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">note</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">message</span><span class="cm-tag cm-bracket">&gt;</span>This is my second note<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">message</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2015-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">note</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">note</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">message</span><span class="cm-tag cm-bracket">&gt;</span>This is my first note<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">message</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-13T16:06:21Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">note</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-comment">&lt;!-- Continued... --&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">notes</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="list-accounts-shipping-address" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e23b","category":"59557419c0a2ba001bf5e1a9","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55ad15f7f93f0c0d005b88a2","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-10-14T17:02:21.737Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"method":"get","results":{"codes":[{"language":"xml","status":200,"name":"","code":"&lt;shipping_addresses type=\"array\"&gt;\n  &lt;shipping_address href=\"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1\"&gt;\n    &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n    &lt;subscriptions href=\"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1/subscriptions\"&gt;\n    &lt;id&gt;1&lt;/id&gt;\n    &lt;nickname&gt;Work&lt;/nickname&gt;\n    &lt;first_name&gt;Verena&lt;/first_name&gt;\n    &lt;last_name&gt;Example&lt;/last_name&gt;\n    &lt;company&gt;Recurly Inc&lt;/company&gt;\n    &lt;phone&gt;555-222-1212&lt;/phone&gt;\n    &lt;email&gt;verena@example.com&lt;/email&gt;\n    &lt;address1&gt;123 Main St.&lt;/address1&gt;\n    &lt;address2&gt;Suite 101&lt;/address2&gt;\n    &lt;city&gt;San Francisco&lt;/city&gt;\n    &lt;state&gt;CA&lt;/state&gt;\n    &lt;zip&gt;94105&lt;/zip&gt;\n    &lt;country&gt;US&lt;/country&gt;\n    &lt;created_at type=\"datetime\"&gt;2016-06-14T16:08:41Z&lt;/created_at&gt;\n    &lt;updated_at type=\"datetime\"&gt;2016-06-14T16:08:41Z&lt;/updated_at&gt;\n  &lt;/shipping_address&gt;\n  &lt;shipping_address href=\"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/2\"&gt;\n    &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n    &lt;shipping_address_id&gt;2&lt;/shipping_address_id&gt;\n    &lt;nickname&gt;Home&lt;/nickname&gt;\n    &lt;first_name&gt;Verena&lt;/first_name&gt;\n    &lt;last_name&gt;Example&lt;/last_name&gt;\n    &lt;phone&gt;555-867-5309&lt;/phone&gt;\n    &lt;email&gt;verena@example.com&lt;/email&gt;\n    &lt;address1&gt;123 Fourth St.&lt;/address1&gt;\n    &lt;address2&gt;Apt. 101&lt;/address2&gt;\n    &lt;city&gt;San Francisco&lt;/city&gt;\n    &lt;state&gt;CA&lt;/state&gt;\n    &lt;zip&gt;94105&lt;/zip&gt;\n    &lt;country&gt;US&lt;/country&gt;\n    &lt;created_at type=\"datetime\"&gt;2016-06-14T16:08:42Z&lt;/created_at&gt;\n    &lt;updated_at type=\"datetime\"&gt;2016-06-14T16:08:42Z&lt;/updated_at&gt;\n  &lt;/shipping_address&gt;\n&lt;/shipping_addresses&gt;"}]},"settings":"","examples":{"codes":[{"language":"ruby","code":"# First get an account\naccount = Recurly::Account.find('1')\n\n# Get all shipping addresses\nshipping_addresses = account.shipping_addresses\n\n# If you want to pass sorting/filtering params:\nshipping_addresses = account.shipping_addresses.all(sort: :updated_at, order: :asc)"},{"language":"python","code":"# first we need any account object\naccount = Account.get('1')\n\n# the shipping_addresses method fetches the shipping addresses\n# associated with this account\nshipping_addresses = account.shipping_addresses()"}]},"auth":"required","params":[{"_id":"578d1aa09a98a41900717d95","ref":"","in":"path","required":true,"desc":"Unique account identifier.","default":"","type":"string","name":"account_code"},{"_id":"55821a9e5b7fa60d0068b420","ref":"","in":"query","required":false,"desc":"Splits records across pages. Leave blank to return the first page. Follow the URI in the first page's Link header to fetch the next page.","default":"","type":"string","name":"cursor"},{"_id":"578ea7d5426c561700db8694","ref":"","in":"query","required":false,"desc":"The attribute that will be used to order records: `created_at`, `updated_at`.","default":"created_at","type":"string","name":"sort"},{"_id":"578ea7d5426c561700db8693","ref":"","in":"query","required":false,"desc":"The order in which products will be returned: `asc` for ascending order, `desc` for descending order.","default":"desc","type":"string","name":"order"},{"_id":"578ea7d5426c561700db8692","ref":"","in":"query","required":false,"desc":"Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.","default":"","type":"datetime","name":"begin_time"},{"_id":"578ea7d5426c561700db8691","ref":"","in":"query","required":false,"desc":"Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes less than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.","default":"","type":"datetime","name":"end_time"},{"_id":"55821a9e5b7fa60d0068b41f","ref":"","in":"query","required":false,"desc":"Number of records to return per page, up to a maximum of 200.","default":"50","type":"int","name":"per_page"}],"url":"/accounts/:account_code/shipping_addresses"},"isReference":true,"order":0,"body":"","excerpt":"Returns a list of shipping addresses for an account.","slug":"list-accounts-shipping-address","type":"get","title":"List Account's Shipping Address","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>List Account's Shipping Address</h1>
           <div marked>
            Returns a list of shipping addresses for an account.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Unique account identifier.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Query Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>cursor<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Splits records across pages. Leave blank to return the first page. Follow the URI in the first page's Link header to fetch the next page.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>sort<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <span class="param-default text-muted">created_at</span>
                <div marked>
                 The attribute that will be used to order records: `created_at`, `updated_at`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>order<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <span class="param-default text-muted">desc</span>
                <div marked>
                 The order in which products will be returned: `asc` for ascending order, `desc` for descending order.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>begin_time<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>end_time<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes less than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>per_page<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <span class="param-default text-muted">50</span>
                <div marked>
                 Number of records to return per page, up to a maximum of 200.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/list-accounts-shipping-address" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/list-accounts-shipping-address/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Python</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-comment"># First get an account</span> <span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-comment"># Get all shipping addresses</span> <span class="cm-variable">shipping_addresses</span> <span class="cm-operator">=</span> <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">shipping_addresses</span> <span class="cm-comment"># If you want to pass sorting/filtering params:</span> <span class="cm-variable">shipping_addresses</span> <span class="cm-operator">=</span> <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">shipping_addresses</span><span class="cm-operator">.</span><span class="cm-property">all</span>(<span class="cm-atom">sort:</span> <span class="cm-atom">:updated_at</span>, <span class="cm-atom">order:</span> <span class="cm-atom">:asc</span>)</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-comment"># first we need any account object</span> <span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-comment"># the shipping_addresses method fetches the shipping addresses</span> <span class="cm-comment"># associated with this account</span> <span class="cm-variable">shipping_addresses</span> = <span class="cm-variable">account</span>.<span class="cm-variable">shipping_addresses</span>()</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_addresses</span> <span class="cm-attribute">type</span>=<span class="cm-string">"array"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subscriptions</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1/subscriptions"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">id</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">id</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span>Work<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-222-1212<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span>Suite 101<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag cm-error">shipping_address</span><span class="cm-tag cm-bracket cm-error">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/2"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address_id</span><span class="cm-tag cm-bracket">&gt;</span>2<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">shipping_address_id</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span>Home<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-867-5309<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Fourth St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span>Apt. 101<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:42Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:42Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag cm-error">shipping_address</span><span class="cm-tag cm-bracket cm-error">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag cm-error">shipping_addresses</span><span class="cm-tag cm-bracket cm-error">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="lookup-shipping-address" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e23c","category":"59557419c0a2ba001bf5e1a9","project":"555fbba928249c1900618a82","parentDoc":null,"user":"55ad15f7f93f0c0d005b88a2","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-10-14T17:07:57.182Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[]},"method":"get","results":{"codes":[{"status":200,"language":"xml","code":"&lt;shipping_address href=\"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n  &lt;id&gt;1&lt;/id&gt;\n  &lt;nickname&gt;Verena Example&lt;/nickname&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company&gt;Recurly Inc&lt;/company&gt;\n  &lt;phone&gt;555-222-124&lt;/phone&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"/&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-06-14T16:08:41Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-06-14T16:08:41Z&lt;/updated_at&gt;\n&lt;/shipping_address&gt;","name":""}]},"settings":"","auth":"required","params":[{"_id":"58011177d19a512d00a7ca56","ref":"","in":"path","required":true,"desc":"Unique account identifier.","default":"","type":"string","name":"account_code"},{"_id":"5783cda85cbce30e0074e228","ref":"","in":"path","required":true,"desc":"Shipping address unique identifier.","default":"","type":"string","name":"shipping_address_id"}],"url":"/accounts/:account_code/shipping_addresses/:shipping_address_id"},"isReference":true,"order":1,"body":"","excerpt":"Lookup the details of an account's shipping address.","slug":"lookup-shipping-address","type":"get","title":"Lookup Shipping Address","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>Lookup Shipping Address</h1>
           <div marked>
            Lookup the details of an account's shipping address.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Unique account identifier.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>shipping_address_id<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Shipping address unique identifier.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/lookup-shipping-address" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/lookup-shipping-address/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">id</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">id</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span>Verena Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-222-124<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag cm-error">shipping_address</span><span class="cm-tag cm-bracket cm-error">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="create-shipping-address-on-an-account" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e23d","category":"59557419c0a2ba001bf5e1a9","project":"555fbba928249c1900618a82","user":"55ad15f7f93f0c0d005b88a2","parentDoc":null,"version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-10-14T17:14:41.338Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"settings":"","examples":{"codes":[{"code":"# Shipping addresses can be created in 3 ways:\n#   1. Embed 1 to many shipping address on an account creation\n#   2. Embed 1 shipping address on subscription creation\n#   3. Create a shipping address on an existing account\n# For 1 and 2, see account and subscription creation respectively\n# This code example shows case #3\n\n# Fetch an existing account\naccount = Recurly::Account.find('1')\n\n# Call create on the shipping_addresses association\nshipping_address = account.shipping_addresses.create(\n  nickname: \"Work\",\n  first_name: \"Verena\",\n  last_name: \"Example\",\n  company: \"Recurly Inc.\",\n  phone: \"555-555-5555\",\n  email: \"verena@example.com\",\n  address1: \"400 Alabama St.\",\n  city: \"San Francisco\",\n  state: \"CA\",\n  zip: \"94110\",\n  country: \"US\"\n)\n","language":"ruby"},{"language":"xml","code":"&lt;shipping_address&gt;\n  &lt;nickname&gt;Work&lt;/nickname&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company&gt;Recurly Inc&lt;/company&gt;\n  &lt;phone&gt;555-222-1212&lt;/phone&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2&gt;Suite 101&lt;/address2&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n&lt;/shipping_address&gt;"},{"code":"# Shipping addresses can be created in 3 ways:\n#   1. Embed 1 to many shipping address on an account creation\n#   2. Embed 1 shipping address on subscription creation\n#   3. Create a shipping address on an existing account\n# For 1 and 2, see account and subscription creation respectively\n# This code example shows case #3\n\n# First find an existing account\naccount = Account.get('1')\n\n# Create your shipping address object\nshad = ShippingAddress()\nshad.nickname = \"Work\"\nshad.first_name = \"Verena\"\nshad.last_name = \"Example\"\nshad.company = \"Recurly Inc.\"\nshad.phone = \"555-555-5555\"\nshad.email = \"verena@example.com\"\nshad.address1 = \"123 Main St.\"\nshad.city = \"San Francisco\"\nshad.state = \"CA\"\nshad.zip = \"94110\"\nshad.country = \"US\"\n\n# Persist the shipping address and link to the account\naccount.create_shipping_address(shad)","language":"python"}]},"method":"post","results":{"codes":[{"status":201,"language":"xml","code":"&lt;shipping_address href=\"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n  &lt;id&gt;1&lt;/id&gt;\n  &lt;nickname&gt;Work&lt;/nickname&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company&gt;Recurly Inc&lt;/company&gt;\n  &lt;phone&gt;555-222-1212&lt;/phone&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2&gt;Suite 101&lt;/address2&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-06-14T16:08:41Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-06-14T16:08:41Z&lt;/updated_at&gt;\n&lt;/shipping_address&gt;","name":""}]},"auth":"required","params":[{"_id":"5801189ed1c26f0f00ac53b9","ref":"","in":"path","required":true,"desc":"Unique account identifier.","default":"","type":"string","name":"account_code"},{"_id":"5898d9b4372db21b008cb0e5","ref":"","in":"body","required":false,"desc":"A nickname for the shipping address. Defaults to \"first_name last_name\". Max of 255 characters.","default":"","type":"string","name":"nickname"},{"_id":"557f32d1e211d20d00601430","ref":"","in":"body","required":true,"desc":"The first name for the account. Max of 255 characters.","default":"","type":"string","name":"first_name"},{"_id":"557f32d1e211d20d0060142f","ref":"","in":"body","required":true,"desc":"The last name for the account.  Max of 255 characters.","default":"","type":"string","name":"last_name"},{"_id":"557f32d1e211d20d0060142e","ref":"","in":"body","required":false,"desc":"The company name for the shipping address. Max of 50 characters.","default":"","type":"string","name":"company"},{"_id":"5898d9b4372db21b008cb0e4","ref":"","in":"body","required":false,"desc":"The phone number for the shipping address.","default":"","type":"string","name":"phone"},{"_id":"557f3209e211d20d00601423","ref":"","in":"body","required":false,"desc":"The email address for the shipping address.","default":"","type":"string","name":"email"},{"_id":"557f32d1e211d20d00601429","ref":"","in":"body","required":true,"desc":"Address line 1.","default":"","type":"string","name":"address1"},{"_id":"5898d9b4372db21b008cb0e3","ref":"","in":"body","required":true,"desc":"Address line 2.","default":"","type":"string","name":"address2"},{"_id":"5898d9b4372db21b008cb0e2","ref":"","in":"body","required":true,"desc":"City","default":"","type":"string","name":"city"},{"_id":"5898d9b4372db21b008cb0e1","ref":"","in":"body","required":true,"desc":"State or region","default":"","type":"string","name":"state"},{"_id":"5898d9b4372db21b008cb0e0","ref":"","in":"body","required":true,"desc":"Zip or postal code","default":"","type":"string","name":"zip"},{"_id":"5898d9b4372db21b008cb0df","ref":"","in":"body","required":true,"desc":"Country,  [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements).","default":"","type":"string","name":"country"},{"_id":"557f32d1e211d20d0060142d","ref":"","in":"body","required":false,"desc":"Customer's VAT number (to avoid having VAT applied, if applicable).","default":"","type":"string","name":"vat_number"}],"url":"/accounts/:account_code/shipping_addresses"},"isReference":true,"order":2,"body":"","excerpt":"Creates a new shipping address on an existing account.","slug":"create-shipping-address-on-an-account","type":"post","title":"Create Shipping Address","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-post">post</span>Create Shipping Address</h1>
           <div marked>
            Creates a new shipping address on an existing account.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Unique account identifier.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>nickname<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 A nickname for the shipping address. Defaults to "first_name last_name". Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>first_name<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The first name for the account. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>last_name<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The last name for the account. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>company<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The company name for the shipping address. Max of 50 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>phone<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The phone number for the shipping address.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>email<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The email address for the shipping address.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address1<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 1.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address2<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 2.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>city<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 City
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>state<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 State or region
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>zip<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Zip or postal code
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>country<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements).
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>vat_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Customer's VAT number (to avoid having VAT applied, if applicable).
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/create-shipping-address-on-an-account" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/create-shipping-address-on-an-account/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">XML</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-comment"># Shipping addresses can be created in 3 ways:</span> <span class="cm-comment"># 1. Embed 1 to many shipping address on an account creation</span> <span class="cm-comment"># 2. Embed 1 shipping address on subscription creation</span> <span class="cm-comment"># 3. Create a shipping address on an existing account</span> <span class="cm-comment"># For 1 and 2, see account and subscription creation respectively</span> <span class="cm-comment"># This code example shows case #3</span> <span class="cm-comment"># Fetch an existing account</span> <span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-comment"># Call create on the shipping_addresses association</span> <span class="cm-variable">shipping_address</span> <span class="cm-operator">=</span> <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">shipping_addresses</span><span class="cm-operator">.</span><span class="cm-property">create</span>( <span class="cm-atom">nickname:</span> <span class="cm-string">"Work"</span>, <span class="cm-atom">first_name:</span> <span class="cm-string">"Verena"</span>, <span class="cm-atom">last_name:</span> <span class="cm-string">"Example"</span>, <span class="cm-atom">company:</span> <span class="cm-string">"Recurly Inc."</span>, <span class="cm-atom">phone:</span> <span class="cm-string">"555-555-5555"</span>, <span class="cm-atom">email:</span> <span class="cm-string">"verena@example.com"</span>, <span class="cm-atom">address1:</span> <span class="cm-string">"400 Alabama St."</span>, <span class="cm-atom">city:</span> <span class="cm-string">"San Francisco"</span>, <span class="cm-atom">state:</span> <span class="cm-string">"CA"</span>, <span class="cm-atom">zip:</span> <span class="cm-string">"94110"</span>, <span class="cm-atom">country:</span> <span class="cm-string">"US"</span> ) </span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span>Work<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-222-1212<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span>Suite 101<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-comment"># Shipping addresses can be created in 3 ways:</span> <span class="cm-comment"># 1. Embed 1 to many shipping address on an account creation</span> <span class="cm-comment"># 2. Embed 1 shipping address on subscription creation</span> <span class="cm-comment"># 3. Create a shipping address on an existing account</span> <span class="cm-comment"># For 1 and 2, see account and subscription creation respectively</span> <span class="cm-comment"># This code example shows case #3</span> <span class="cm-comment"># First find an existing account</span> <span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-comment"># Create your shipping address object</span> <span class="cm-variable">shad</span> = <span class="cm-variable">ShippingAddress</span>() <span class="cm-variable">shad</span>.<span class="cm-variable">nickname</span> = <span class="cm-string">"Work"</span> <span class="cm-variable">shad</span>.<span class="cm-variable">first_name</span> = <span class="cm-string">"Verena"</span> <span class="cm-variable">shad</span>.<span class="cm-variable">last_name</span> = <span class="cm-string">"Example"</span> <span class="cm-variable">shad</span>.<span class="cm-variable">company</span> = <span class="cm-string">"Recurly Inc."</span> <span class="cm-variable">shad</span>.<span class="cm-variable">phone</span> = <span class="cm-string">"555-555-5555"</span> <span class="cm-variable">shad</span>.<span class="cm-variable">email</span> = <span class="cm-string">"verena@example.com"</span> <span class="cm-variable">shad</span>.<span class="cm-variable">address1</span> = <span class="cm-string">"123 Main St."</span> <span class="cm-variable">shad</span>.<span class="cm-variable">city</span> = <span class="cm-string">"San Francisco"</span> <span class="cm-variable">shad</span>.<span class="cm-variable">state</span> = <span class="cm-string">"CA"</span> <span class="cm-variable">shad</span>.<span class="cm-builtin">zip</span> = <span class="cm-string">"94110"</span> <span class="cm-variable">shad</span>.<span class="cm-variable">country</span> = <span class="cm-string">"US"</span> <span class="cm-comment"># Persist the shipping address and link to the account</span> <span class="cm-variable">account</span>.<span class="cm-variable">create_shipping_address</span>(<span class="cm-variable">shad</span>)</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>201<span> </span><em>Created</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">id</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">id</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span>Work<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-222-1212<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span>Suite 101<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag cm-error">shipping_address</span><span class="cm-tag cm-bracket cm-error">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="edit-shipping-address-on-an-existing-account" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e23e","category":"59557419c0a2ba001bf5e1a9","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55ad15f7f93f0c0d005b88a2","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-10-14T17:54:09.840Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"method":"put","results":{"codes":[{"language":"xml","code":"&lt;shipping_address href=\"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"&gt;\n  &lt;id&gt;1&lt;/id&gt;\n  &lt;nickname&gt;newnick&lt;/nickname&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company&gt;Recurly Inc&lt;/company&gt;\n  &lt;phone&gt;555-222-1234&lt;/phone&gt;\n  &lt;email&gt;verena@example.com&lt;/email&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"/&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-06-14T16:08:41Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-06-14T16:08:41Z&lt;/updated_at&gt;\n&lt;/shipping_address&gt;","name":"","status":201}]},"settings":"","examples":{"codes":[{"language":"ruby","code":"# Call update_attributes on any shipping_address object\nshipping_address.update_attributes(\n  nickname: 'newnick',\n  phone: '555-222-1234'\n)"},{"code":"&lt;shipping_address&gt;\n  &lt;nickname&gt;&lt;/nickname&gt;\n  &lt;phone&gt;555-222-1234&lt;/phone&gt;\n  &lt;address2&gt;&lt;/address2&gt;\n&lt;/shipping_address&gt;","language":"xml"},{"code":"# mutate the properties of any shipping address object\nshipping_address.nickname = 'newnickname'\nshipping_address.phone = '555-555-1234'\n\n# then call save\nshipping_address.save()","language":"python"}]},"auth":"required","params":[{"_id":"5801189ed1c26f0f00ac53b9","ref":"","in":"path","required":true,"desc":"Unique account identifier.","default":"","type":"string","name":"account_code"},{"_id":"58011c36d19a512d00a7ca6a","ref":"","in":"path","required":true,"desc":"Shipping address unique identifier.","default":"","type":"string","name":"shipping_address_id"},{"_id":"5898dbfbec49fb0f004c25e4","ref":"","in":"body","required":false,"desc":"A nickname for the shipping address. Defaults to \"first_name last_name\". Max of 255 characters.","default":"","type":"string","name":"nickname"},{"_id":"557f32d1e211d20d00601430","ref":"","in":"body","required":false,"desc":"The first name for the account. Max of 255 characters.","default":"","type":"string","name":"first_name"},{"_id":"557f32d1e211d20d0060142f","ref":"","in":"body","required":false,"desc":"The last name for the account.  Max of 255 characters.","default":"","type":"string","name":"last_name"},{"_id":"557f32d1e211d20d0060142e","ref":"","in":"body","required":false,"desc":"The company name for the account. Max of 50 characters.","default":"","type":"string","name":"company"},{"_id":"5898dbfbec49fb0f004c25e3","ref":"","in":"body","required":false,"desc":"The phone number for the shipping address.","default":"","type":"string","name":"phone"},{"_id":"557f3209e211d20d00601423","ref":"","in":"body","required":false,"desc":"The email address for the account.","default":"","type":"string","name":"email"},{"_id":"5898dbfbec49fb0f004c25e2","ref":"","in":"body","required":false,"desc":"Address line 1.","default":"","type":"string","name":"address1"},{"_id":"5898dbfbec49fb0f004c25e1","ref":"","in":"body","required":false,"desc":"Address line 2.","default":"","type":"string","name":"address2"},{"_id":"5898dbfbec49fb0f004c25e0","ref":"","in":"body","required":false,"desc":"City","default":"","type":"string","name":"city"},{"_id":"5898dbfbec49fb0f004c25df","ref":"","in":"body","required":false,"desc":"State or region","default":"","type":"string","name":"state"},{"_id":"5898dbfbec49fb0f004c25de","ref":"","in":"body","required":false,"desc":"Zip or postal code","default":"","type":"string","name":"zip"},{"_id":"5898dbfbec49fb0f004c25dd","ref":"","in":"body","required":false,"desc":"Country,  [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements).","default":"","type":"string","name":"country"},{"_id":"557f32d1e211d20d0060142d","ref":"","in":"body","required":false,"desc":"The VAT number to avoid having the VAT applied (if applicable).","default":"","type":"string","name":"vat_number"}],"url":"/accounts/:account_code/shipping_addresses/:shipping_address_id"},"isReference":true,"order":3,"body":"","excerpt":"Updates an existing shipping address on an existing account.","slug":"edit-shipping-address-on-an-existing-account","type":"put","title":"Update Shipping Address","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-put">put</span>Update Shipping Address</h1>
           <div marked>
            Updates an existing shipping address on an existing account.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Unique account identifier.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>shipping_address_id<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Shipping address unique identifier.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>nickname<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 A nickname for the shipping address. Defaults to "first_name last_name". Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>first_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The first name for the account. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>last_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The last name for the account. Max of 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>company<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The company name for the account. Max of 50 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>phone<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The phone number for the shipping address.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>email<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The email address for the account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address1<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 1.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address2<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 2.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>city<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 City
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>state<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 State or region
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>zip<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Zip or postal code
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>country<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements).
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>vat_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The VAT number to avoid having the VAT applied (if applicable).
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/edit-shipping-address-on-an-existing-account" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/edit-shipping-address-on-an-existing-account/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">XML</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-comment"># Call update_attributes on any shipping_address object</span> <span class="cm-variable">shipping_address</span><span class="cm-operator">.</span><span class="cm-property">update_attributes</span>( <span class="cm-atom">nickname:</span> <span class="cm-string">'newnick'</span>, <span class="cm-atom">phone:</span> <span class="cm-string">'555-222-1234'</span> )</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-222-1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-comment"># mutate the properties of any shipping address object</span> <span class="cm-variable">shipping_address</span>.<span class="cm-variable">nickname</span> = <span class="cm-string">'newnickname'</span> <span class="cm-variable">shipping_address</span>.<span class="cm-variable">phone</span> = <span class="cm-string">'555-555-1234'</span> <span class="cm-comment"># then call save</span> <span class="cm-variable">shipping_address</span>.<span class="cm-variable">save</span>()</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>201<span> </span><em>Created</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/shipping_addresses/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">id</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">id</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span>newnick<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span>Recurly Inc<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-222-1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-06-14T16:08:41Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag cm-error">shipping_address</span><span class="cm-tag cm-bracket cm-error">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="delete-shipping-address-on-an-existing-account" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e23f","category":"59557419c0a2ba001bf5e1a9","project":"555fbba928249c1900618a82","parentDoc":null,"user":"55ad15f7f93f0c0d005b88a2","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-10-15T00:27:13.096Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"ruby","code":"# call destroy on any shipping address object\nshipping_address.destroy"},{"language":"xml","code":"&lt;shipping_address&gt;\n  &lt;nickname&gt;&lt;/nickname&gt;\n  &lt;phone&gt;555-222-1234&lt;/phone&gt;\n  &lt;address2&gt;&lt;/address2&gt;\n&lt;/shipping_address&gt;"},{"code":"# call delete() on any shipping address object\nshipping_address.delete()","language":"python"}]},"method":"delete","results":{"codes":[{"status":204,"language":"xml","code":"Status: 204 No Content","name":""}]},"settings":"","auth":"required","params":[{"_id":"5801189ed1c26f0f00ac53b9","ref":"","in":"path","required":true,"desc":"Unique account identifier.","default":"","type":"string","name":"account_code"},{"_id":"58011c36d19a512d00a7ca6a","ref":"","in":"path","required":true,"desc":"Shipping address unique identifier.","default":"","type":"string","name":"shipping_address_id"}],"url":"/accounts/:account_code/shipping_addresses/:shipping_address_id"},"isReference":true,"order":4,"body":"","excerpt":"Deletes an existing shipping address from an existing account.","slug":"delete-shipping-address-on-an-existing-account","type":"delete","title":"Delete Shipping Address","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-delete">delete</span>Delete Shipping Address</h1>
           <div marked>
            Deletes an existing shipping address from an existing account.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Unique account identifier.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>shipping_address_id<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Shipping address unique identifier.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/delete-shipping-address-on-an-existing-account" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/delete-shipping-address-on-an-existing-account/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">XML</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-comment"># call destroy on any shipping address object</span> <span class="cm-variable">shipping_address</span><span class="cm-operator">.</span><span class="cm-property">destroy</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">nickname</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span>555-222-1234<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">shipping_address</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-comment"># call delete() on any shipping address object</span> <span class="cm-variable">shipping_address</span>.<span class="cm-variable">delete</span>()</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>204<span> </span><em>No Content</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo">Status: 204 No Content</span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="create-account-acquisition" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e206","category":"59557419c0a2ba001bf5e1aa","project":"555fbba928249c1900618a82","parentDoc":null,"user":"559d85d26b21311700fb0b7b","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-08-12T19:37:00.632Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"xml","code":"&lt;account_acquisition&gt;\n  &lt;cost_in_cents type=\"integer\"&gt;199&lt;/cost_in_cents&gt;\n  &lt;currency&gt;USD&lt;/currency&gt;\n  &lt;channel&gt;blog&lt;/channel&gt;\n  &lt;subchannel&gt;Whitepaper Blog Post&lt;/subchannel&gt;\n  &lt;campaign&gt;mailchimp67a904de95.0914d8f4b4&lt;/campaign&gt;\n&lt;/account_acquisition&gt;"},{"language":"php","code":"$acquisition = new Recurly_AccountAcquisition();\n$acquisition-&gt;account_code = '1';\n$acquisition-&gt;cost_in_cents = 142;\n$acquisition-&gt;currency = 'USD';\n$acquisition-&gt;channel = 'paid_search';\n$acquisition-&gt;subchannel = 'Google Ads';\n$acquisition-&gt;campaign = 'JSE-2345';\n$acquisition-&gt;create();"}]},"method":"post","results":{"codes":[{"name":"","code":"&lt;account_acquisition href=\"https://your-subdomain.recurly.com/v2/accounts/1/acquisition\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;cost_in_cents type=\"integer\"&gt;199&lt;/cost_in_cents&gt;\n  &lt;currency&gt;USD&lt;/currency&gt;\n  &lt;channel&gt;blog&lt;/channel&gt;\n  &lt;subchannel&gt;Whitepaper Blog Post&lt;/subchannel&gt;\n  &lt;campaign&gt;mailchimp67a904de95.0914d8f4b4&lt;/campaign&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-12T19:45:14Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-12T19:45:14Z&lt;/updated_at&gt;\n&lt;/account_acquisition&gt;","language":"xml","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[{"_id":"57ae255c9af3430e00e17672","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"57ae27581a95170e000f2233","ref":"","in":"body","required":false,"desc":"Total cost of marketing activities to acquire the customer.","default":"","type":"int","name":"cost_in_cents"},{"_id":"57ae27581a95170e000f2232","ref":"","in":"body","required":false,"desc":"Currency, 3-letter ISO code.","default":"","type":"string","name":"currency"},{"_id":"57ae27581a95170e000f2231","ref":"","in":"body","required":false,"desc":"The method by which the customer was acquired. Allowed values: `referral`, `social_media`, `email`, `paid_search`, `organic_search`, `direct_traffic`, `marketing_content`, `blog`, `events`, `outbound_sales`, `advertising`, `public_relations`, `other`.","default":"","type":"string","name":"channel"},{"_id":"57ae27581a95170e000f2230","ref":"","in":"body","required":false,"desc":"A free-form field to provide additional detail on the acquisition channel.","default":"","type":"string","name":"subchannel"},{"_id":"57ae27581a95170e000f222f","ref":"","in":"body","required":false,"desc":"Identifier for the marketing campaign used to convert this account.","default":"","type":"string","name":"campaign"}],"url":"/accounts/:account_code/acquisition"},"isReference":true,"order":0,"body":"","excerpt":"Create or update an account's acquisition data.","slug":"create-account-acquisition","type":"post","title":"Create Account Acquisition","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-post">post</span>Create Account Acquisition</h1>
           <div marked>
            Create or update an account's acquisition data.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>cost_in_cents<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Total cost of marketing activities to acquire the customer.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>currency<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Currency, 3-letter ISO code.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>channel<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The method by which the customer was acquired. Allowed values: `referral`, `social_media`, `email`, `paid_search`, `organic_search`, `direct_traffic`, `marketing_content`, `blog`, `events`, `outbound_sales`, `advertising`, `public_relations`, `other`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>subchannel<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 A free-form field to provide additional detail on the acquisition channel.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>campaign<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Identifier for the marketing campaign used to convert this account.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/create-account-acquisition" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/create-account-acquisition/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">XML</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">PHP</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_acquisition</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cost_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>199<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cost_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>USD<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">channel</span><span class="cm-tag cm-bracket">&gt;</span>blog<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">channel</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subchannel</span><span class="cm-tag cm-bracket">&gt;</span>Whitepaper Blog Post<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">subchannel</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">campaign</span><span class="cm-tag cm-bracket">&gt;</span>mailchimp67a904de95.0914d8f4b4<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">campaign</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_acquisition</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo">$acquisition = new Recurly_AccountAcquisition(); $acquisition-&gt;account_code = '1'; $acquisition-&gt;cost_in_cents = 142; $acquisition-&gt;currency = 'USD'; $acquisition-&gt;channel = 'paid_search'; $acquisition-&gt;subchannel = 'Google Ads'; $acquisition-&gt;campaign = 'JSE-2345'; $acquisition-&gt;create();</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}"><span class="status-icon status-icon-error"></span>400<span> </span><em>Bad Request</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_acquisition</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/acquisition"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cost_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>199<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cost_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>USD<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">channel</span><span class="cm-tag cm-bracket">&gt;</span>blog<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">channel</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subchannel</span><span class="cm-tag cm-bracket">&gt;</span>Whitepaper Blog Post<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">subchannel</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">campaign</span><span class="cm-tag cm-bracket">&gt;</span>mailchimp67a904de95.0914d8f4b4<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">campaign</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-12T19:45:14Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-12T19:45:14Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_acquisition</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo">{}</span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="lookup-account-acquisition" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e207","category":"59557419c0a2ba001bf5e1aa","parentDoc":null,"project":"555fbba928249c1900618a82","user":"559d85d26b21311700fb0b7b","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-08-12T19:37:45.157Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"php","code":"Recurly_AccountAcquisition::get('1');"}]},"method":"get","results":{"codes":[{"name":"","code":"&lt;account_acquisition href=\"https://your-subdomain.recurly.com/v2/accounts/1/acquisition\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;cost_in_cents type=\"integer\"&gt;199&lt;/cost_in_cents&gt;\n  &lt;currency&gt;USD&lt;/currency&gt;\n  &lt;channel&gt;blog&lt;/channel&gt;\n  &lt;subchannel&gt;Whitepaper Blog Post&lt;/subchannel&gt;\n  &lt;campaign&gt;mailchimp67a904de95.0914d8f4b4&lt;/campaign&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-12T19:45:14Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-12T19:45:14Z&lt;/updated_at&gt;\n&lt;/account_acquisition&gt;","language":"xml","status":200},{"name":"","code":"&lt;error&gt;\n  &lt;symbol&gt;not_found&lt;/symbol&gt;\n  &lt;description lang=\"en-US\"&gt;Couldn't find AccountAcquisition with account_code = 1&lt;/description&gt;\n&lt;/error&gt;","language":"xml","status":404}]},"settings":"","auth":"required","params":[{"_id":"57ae255c9af3430e00e17672","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"}],"url":"/accounts/:account_code/acquisition"},"isReference":true,"order":1,"body":"","excerpt":"Returns an account's acquisition data.","slug":"lookup-account-acquisition","type":"get","title":"Lookup Account Acquisition","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>Lookup Account Acquisition</h1>
           <div marked>
            Returns an account's acquisition data.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/lookup-account-acquisition" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/lookup-account-acquisition/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo">Recurly_AccountAcquisition::get('1');</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}"><span class="status-icon status-icon-error"></span>404<span> </span><em>Not Found</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_acquisition</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/acquisition"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cost_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>199<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cost_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>USD<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">channel</span><span class="cm-tag cm-bracket">&gt;</span>blog<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">channel</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subchannel</span><span class="cm-tag cm-bracket">&gt;</span>Whitepaper Blog Post<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">subchannel</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">campaign</span><span class="cm-tag cm-bracket">&gt;</span>mailchimp67a904de95.0914d8f4b4<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">campaign</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-12T19:45:14Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-12T19:45:14Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_acquisition</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">error</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">symbol</span><span class="cm-tag cm-bracket">&gt;</span>not_found<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">symbol</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span> <span class="cm-attribute">lang</span>=<span class="cm-string">"en-US"</span><span class="cm-tag cm-bracket">&gt;</span>Couldn't find AccountAcquisition with account_code = 1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">error</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="update-account-acquisition" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e208","category":"59557419c0a2ba001bf5e1aa","parentDoc":null,"user":"559d85d26b21311700fb0b7b","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-08-12T19:48:43.370Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"&lt;account_acquisition&gt;\n  &lt;cost_in_cents type=\"integer\"&gt;150&lt;/cost_in_cents&gt;\n  &lt;currency&gt;EUR&lt;/currency&gt;\n&lt;/account_acquisition&gt;","language":"xml"},{"code":"$acquisition = Recurly_AccountAcquisition::get($account_code);\n$acquisition-&gt;currency = 'EUR';\n$acquisition-&gt;cost_in_cents = 150;\n$acquisition-&gt;update();","language":"php"}]},"method":"put","results":{"codes":[{"name":"","code":"&lt;account_acquisition href=\"https://your-subdomain.recurly.com/v2/accounts/1/acquisition\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;cost_in_cents type=\"integer\"&gt;150&lt;/cost_in_cents&gt;\n  &lt;currency&gt;EUR&lt;/currency&gt;\n  &lt;channel&gt;blog&lt;/channel&gt;\n  &lt;subchannel&gt;Whitepaper Blog Post&lt;/subchannel&gt;\n  &lt;campaign&gt;mailchimp67a904de95.0914d8f4b4&lt;/campaign&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-12T19:49:43Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-12T19:49:55Z&lt;/updated_at&gt;\n&lt;/account_acquisition&gt;","language":"xml","status":200},{"name":"","code":"{}","language":"json","status":400}]},"settings":"","auth":"required","params":[{"_id":"57ae255c9af3430e00e17672","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"57ae27581a95170e000f2233","ref":"","in":"body","required":false,"desc":"Total cost of marketing activities to acquire the customer.","default":"","type":"int","name":"cost_in_cents"},{"_id":"57ae27581a95170e000f2232","ref":"","in":"body","required":false,"desc":"Currency, 3-letter ISO code.","default":"","type":"string","name":"currency"},{"_id":"57ae27581a95170e000f2231","ref":"","in":"body","required":false,"desc":"The method by which the customer was acquired. Allowed values: `referral`, `social_media`, `email`, `paid_search`, `organic_search`, `direct_traffic`, `marketing_content`, `blog`, `events`, `outbound_sales`, `advertising`, `public_relations`, `other`.","default":"","type":"string","name":"channel"},{"_id":"57ae27581a95170e000f2230","ref":"","in":"body","required":false,"desc":"A free-form field to provide additional detail on the acquisition channel.","default":"","type":"string","name":"subchannel"},{"_id":"57ae27581a95170e000f222f","ref":"","in":"body","required":false,"desc":"Identifier for the marketing campaign used to convert this account.","default":"","type":"string","name":"campaign"}],"url":"/accounts/:account_code/acquisition"},"isReference":true,"order":2,"body":"","excerpt":"Create or update an account's acquisition data.","slug":"update-account-acquisition","type":"put","title":"Update Account Acquisition","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-put">put</span>Update Account Acquisition</h1>
           <div marked>
            Create or update an account's acquisition data.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>cost_in_cents<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Total cost of marketing activities to acquire the customer.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>currency<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Currency, 3-letter ISO code.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>channel<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The method by which the customer was acquired. Allowed values: `referral`, `social_media`, `email`, `paid_search`, `organic_search`, `direct_traffic`, `marketing_content`, `blog`, `events`, `outbound_sales`, `advertising`, `public_relations`, `other`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>subchannel<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 A free-form field to provide additional detail on the acquisition channel.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>campaign<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Identifier for the marketing campaign used to convert this account.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/update-account-acquisition" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/update-account-acquisition/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">XML</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">PHP</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_acquisition</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cost_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>150<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cost_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>EUR<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_acquisition</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo">$acquisition = Recurly_AccountAcquisition::get($account_code); $acquisition-&gt;currency = 'EUR'; $acquisition-&gt;cost_in_cents = 150; $acquisition-&gt;update();</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}"><span class="status-icon status-icon-error"></span>400<span> </span><em>Bad Request</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_acquisition</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/acquisition"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cost_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>150<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">cost_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>EUR<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">channel</span><span class="cm-tag cm-bracket">&gt;</span>blog<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">channel</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subchannel</span><span class="cm-tag cm-bracket">&gt;</span>Whitepaper Blog Post<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">subchannel</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">campaign</span><span class="cm-tag cm-bracket">&gt;</span>mailchimp67a904de95.0914d8f4b4<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">campaign</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-12T19:49:43Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-12T19:49:55Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_acquisition</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo">{}</span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="clear-account-acquisition" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e209","category":"59557419c0a2ba001bf5e1aa","parentDoc":null,"project":"555fbba928249c1900618a82","user":"559d85d26b21311700fb0b7b","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-08-12T19:48:02.744Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"method":"delete","results":{"codes":[{"name":"","code":"","language":"xml","status":204},{"name":"","code":"&lt;error&gt;\n  &lt;symbol&gt;not_found&lt;/symbol&gt;\n  &lt;description lang=\"en-US\"&gt;Couldn't find AccountAcquisition with account_code = 1&lt;/description&gt;\n&lt;/error&gt;","language":"xml","status":404}]},"settings":"","examples":{"codes":[{"code":"Recurly_AccountAcquisition::deleteForAccount('1');","language":"php"}]},"auth":"required","params":[{"_id":"57ae255c9af3430e00e17672","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"}],"url":"/accounts/:account_code/acquisition"},"isReference":true,"order":3,"body":"","excerpt":"Remove an account's acquisition data.","slug":"clear-account-acquisition","type":"delete","title":"Clear Account Acquisition","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-delete">delete</span>Clear Account Acquisition</h1>
           <div marked>
            Remove an account's acquisition data.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/clear-account-acquisition" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/clear-account-acquisition/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo">Recurly_AccountAcquisition::deleteForAccount('1');</span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="adjustment-object" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e249","category":"59557419c0a2ba001bf5e1ab","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-09-15T21:26:29.282Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"settings":"","examples":{"codes":[]},"method":"get","results":{"codes":[{"name":"","status":200,"language":"xml","code":"&lt;adjustment href=\"https://your-subdomain.recurly.com/v2/adjustments/37bff9dd3ec90471cf62bd4f6f80db3d\" type=\"charge\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;invoice href=\"https://your-subdomain.recurly.com/v2/invoices/1006\"/&gt;\n  &lt;subscription href=\"https://your-subdomain.recurly.com/v2/subscriptions/37bfef7a8e44cfc3817b7a43eba8a6e6\"/&gt;\n  &lt;uuid&gt;37bff9dd3ec90471cf62bd4f6f80db3d&lt;/uuid&gt;\n  &lt;state&gt;invoiced&lt;/state&gt;\n  &lt;description&gt;Refund for Setup fee: Gold plan&lt;/description&gt;\n  &lt;accounting_code nil=\"nil\"/&gt;\n  &lt;product_code&gt;gold&lt;/product_code&gt;\n  &lt;origin&gt;setup_fee&lt;/origin&gt;\n  &lt;unit_amount_in_cents type=\"integer\"&gt;800&lt;/unit_amount_in_cents&gt;\n  &lt;quantity type=\"integer\"&gt;-1&lt;/quantity&gt;\n  &lt;quantity_remaining type=\"integer\"&gt;0&lt;/quantity_remaining&gt;\n  &lt;original_adjustment_uuid&gt;37bfef7af3cd23ee89d77a435aa1838d&lt;/original_adjustment_uuid&gt;\n  &lt;discount_in_cents type=\"integer\"&gt;0&lt;/discount_in_cents&gt;\n  &lt;tax_in_cents type=\"integer\"&gt;-70&lt;/tax_in_cents&gt;\n  &lt;total_in_cents type=\"integer\"&gt;-870&lt;/total_in_cents&gt;\n  &lt;currency&gt;EUR&lt;/currency&gt;\n  &lt;taxable type=\"boolean\"&gt;false&lt;/taxable&gt;\n  &lt;tax_type&gt;usst&lt;/tax_type&gt;\n  &lt;tax_region&gt;CA&lt;/tax_region&gt;\n  &lt;tax_rate type=\"float\"&gt;0.0875&lt;/tax_rate&gt;\n  &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n  &lt;tax_code nil=\"nil\"/&gt;\n  &lt;tax_details type=\"array\"&gt;\n    &lt;tax_detail&gt;\n      &lt;name nil=\"nil\"/&gt;\n      &lt;type&gt;state&lt;/type&gt;\n      &lt;tax_rate type=\"float\"&gt;0.065&lt;/tax_rate&gt;\n      &lt;tax_in_cents type=\"integer\"&gt;-52&lt;/tax_in_cents&gt;\n    &lt;/tax_detail&gt;\n    &lt;tax_detail&gt;\n      &lt;name nil=\"nil\"/&gt;\n      &lt;type&gt;county&lt;/type&gt;\n      &lt;tax_rate type=\"float\"&gt;0.01&lt;/tax_rate&gt;\n      &lt;tax_in_cents type=\"integer\"&gt;-8&lt;/tax_in_cents&gt;\n    &lt;/tax_detail&gt;\n    &lt;tax_detail&gt;\n      &lt;name nil=\"nil\"/&gt;\n      &lt;type&gt;city&lt;/type&gt;\n      &lt;tax_rate type=\"float\"&gt;0.0&lt;/tax_rate&gt;\n      &lt;tax_in_cents type=\"integer\"&gt;0&lt;/tax_in_cents&gt;\n    &lt;/tax_detail&gt;\n    &lt;tax_detail&gt;\n      &lt;name nil=\"nil\"/&gt;\n      &lt;type&gt;special&lt;/type&gt;\n      &lt;tax_rate type=\"float\"&gt;0.0125&lt;/tax_rate&gt;\n      &lt;tax_in_cents type=\"integer\"&gt;-10&lt;/tax_in_cents&gt;\n    &lt;/tax_detail&gt;\n  &lt;/tax_details&gt;\n  &lt;start_date type=\"datetime\"&gt;2016-08-03T16:02:24Z&lt;/start_date&gt;\n  &lt;end_date nil=\"nil\"/&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-03T16:13:44Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-03T16:13:44Z&lt;/updated_at&gt;\n  &lt;revenue_schedule_type&gt;evenly&lt;/revenue_schedule_type&gt;\n&lt;/adjustment&gt;"}]},"auth":"required","params":[{"_id":"55f88d0560cc850d008a7bae","ref":"","in":"body","required":false,"desc":"The URL of the account for the specified adjustment.","default":"","type":"string","name":"account"},{"_id":"55f88d0560cc850d008a7bad","ref":"","in":"body","required":false,"desc":"The URL of the invoice for the specified adjustment.","default":"","type":"string","name":"invoice"},{"_id":"55f8905559eace0d0087dc69","ref":"","in":"body","required":false,"desc":"The type of adjustment to return: `charge` or `credit`.","default":"","type":"string","name":"type"},{"_id":"55f88d0560cc850d008a7bac","ref":"","in":"body","required":false,"desc":"The unique identifier of the adjustment.","default":"","type":"string","name":"uuid"},{"_id":"55f88d0560cc850d008a7bab","ref":"","in":"body","required":false,"desc":"The state of the adjustments to return: `pending` or `invoiced`.","default":"","type":"string","name":"state"},{"_id":"55f88d0560cc850d008a7baa","ref":"","in":"body","required":false,"desc":"Description of the adjustment for the adjustment. Max 255 characters.","default":"","type":"string","name":"description"},{"_id":"55f88d0560cc850d008a7ba9","ref":"","in":"body","required":false,"desc":"Accounting code. Max of 20 characters.","default":"","type":"string","name":"accounting_code"},{"_id":"55f88d0560cc850d008a7ba8","ref":"","in":"body","required":false,"desc":"The origin of the adjustment to return: `plan`, `plan_trial`, `setup_fee`, `add_on`, `add_on_trial`, `one_time`, `debit`, `credit`, `coupon`, or `carryforward`.","default":"","type":"string","name":"origin"},{"_id":"55f88d0560cc850d008a7ba7","ref":"","in":"body","required":false,"desc":"Positive amount for a charge, negative amount for a credit. Max 10000000.","default":"","type":"int","name":"unit_amount_in_cents"},{"_id":"55f88d0560cc850d008a7ba6","ref":"","in":"body","required":false,"desc":"Quantity.","default":"1","type":"string","name":"quantity"},{"_id":"55f88d0560cc850d008a7ba5","ref":"","in":"body","required":false,"desc":"Only shows if adjustment is a credit created from another credit.","default":"","type":"string","name":"original_adjustment_uuid"},{"_id":"55f88d0560cc850d008a7ba4","ref":"","in":"body","required":false,"desc":"The discount on the adjustment, in cents.","default":"","type":"int","name":"discount_in_cents"},{"_id":"55f88d0560cc850d008a7ba3","ref":"","in":"body","required":false,"desc":"The tax on the adjustment, in cents.","default":"","type":"int","name":"tax_in_cents"},{"_id":"55f88d0560cc850d008a7ba2","ref":"","in":"body","required":false,"desc":"The total amount of the adjustment, in cents.","default":"","type":"int","name":"total_in_cents"},{"_id":"55f88d0560cc850d008a7ba1","ref":"","in":"body","required":false,"desc":"Currency, 3-letter ISO code.","default":"","type":"string","name":"currency"},{"_id":"55f88d0560cc850d008a7ba0","ref":"","in":"body","required":false,"desc":"`true` if the current adjustment is taxable, `false` if it is not.","default":"","type":"boolean","name":"taxable"},{"_id":"55f88d0560cc850d008a7b9f","ref":"","in":"body","required":false,"desc":"The tax type of the adjustment.","default":"","type":"string","name":"tax_type"},{"_id":"55f88d0560cc850d008a7b9e","ref":"","in":"body","required":false,"desc":"The tax region of the adjustment.","default":"","type":"string","name":"tax_region"},{"_id":"55f88d0560cc850d008a7b9d","ref":"","in":"body","required":false,"desc":"The tax rate of the adjustment.","default":"","type":"string","name":"tax_rate"},{"_id":"55f88d0560cc850d008a7b9c","ref":"","in":"body","required":false,"desc":"`true` exempts tax on the charge, `false` applies tax on the charge. If not defined, then defaults to the Plan and Site settings. This attribute does not work for credits (negative adjustments). Credits are always post-tax. Pre-tax discounts should use the Coupons feature.","default":"","type":"boolean","name":"tax_exempt"},{"_id":"55f88d0560cc850d008a7b9b","ref":"","in":"body","required":false,"desc":"The nested address information of the adjustment: `name `, `type`, `tax_rate`, `tax_in_cents`.","default":"","type":"array_mixed","name":"tax_details"},{"_id":"55f88d2bb089b71700a8363c","ref":"","in":"body","required":false,"desc":"Optional field for EU VAT merchants and Avalara AvaTax Pro merchants. If you are using Recurly's EU VAT feature, you can use values of `unknown`, `physical`, or `digital`. If you have your own AvaTax account configured, you can use Avalara tax codes to assign custom tax rules.","default":"","type":"string","name":"tax_code"},{"_id":"55f88d0560cc850d008a7b9a","ref":"","in":"body","required":false,"desc":"A timestamp associated with when the adjustment began.","default":"Today","type":"datetime","name":"start_date"},{"_id":"55f88d0560cc850d008a7b99","ref":"","in":"body","required":false,"desc":"A timestamp associated with when the adjustment ended.","default":"","type":"datetime","name":"end_date"},{"_id":"55f88d0560cc850d008a7b98","ref":"","in":"body","required":false,"desc":"A timestamp associated with when the adjustment was created.","default":"","type":"datetime","name":"created_at"},{"_id":"58c821b8580c540f00af78a9","ref":"","in":"body","required":false,"desc":"For plan related line items this will be the plan's code, for add-on related line items it will be the add-on's code.","default":"","type":"string","name":"product_code"}],"url":"/adjustments"},"isReference":true,"order":0,"body":"","excerpt":"The history of your customer's Recurly account can be tracked through adjustments, made up of credits and charges.","slug":"adjustment-object","type":"get","title":"Adjustment Object","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>Adjustment Object</h1>
           <div marked>
            The history of your customer's Recurly account can be tracked through adjustments, made up of credits and charges.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The URL of the account for the specified adjustment.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>invoice<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The URL of the invoice for the specified adjustment.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>type<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The type of adjustment to return: `charge` or `credit`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>uuid<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The unique identifier of the adjustment.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>state<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The state of the adjustments to return: `pending` or `invoiced`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>description<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Description of the adjustment for the adjustment. Max 255 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>accounting_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Accounting code. Max of 20 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>origin<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The origin of the adjustment to return: `plan`, `plan_trial`, `setup_fee`, `add_on`, `add_on_trial`, `one_time`, `debit`, `credit`, `coupon`, or `carryforward`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>unit_amount_in_cents<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Positive amount for a charge, negative amount for a credit. Max 10000000.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>quantity<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <span class="param-default text-muted">1</span>
                <div marked>
                 Quantity.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>original_adjustment_uuid<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Only shows if adjustment is a credit created from another credit.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>discount_in_cents<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 The discount on the adjustment, in cents.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_in_cents<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 The tax on the adjustment, in cents.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>total_in_cents<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 The total amount of the adjustment, in cents.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>currency<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Currency, 3-letter ISO code.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>taxable<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 `true` if the current adjustment is taxable, `false` if it is not.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_type<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The tax type of the adjustment.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_region<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The tax region of the adjustment.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_rate<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The tax rate of the adjustment.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_exempt<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 `true` exempts tax on the charge, `false` applies tax on the charge. If not defined, then defaults to the Plan and Site settings. This attribute does not work for credits (negative adjustments). Credits are always post-tax. Pre-tax discounts should use the Coupons feature.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_details<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">array of mixed</strong>
                <div marked>
                 The nested address information of the adjustment: `name `, `type`, `tax_rate`, `tax_in_cents`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Optional field for EU VAT merchants and Avalara AvaTax Pro merchants. If you are using Recurly's EU VAT feature, you can use values of `unknown`, `physical`, or `digital`. If you have your own AvaTax account configured, you can use Avalara tax codes to assign custom tax rules.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>start_date<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <span class="param-default text-muted">Today</span>
                <div marked>
                 A timestamp associated with when the adjustment began.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>end_date<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 A timestamp associated with when the adjustment ended.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>created_at<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 A timestamp associated with when the adjustment was created.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>product_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 For plan related line items this will be the plan's code, for add-on related line items it will be the add-on's code.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/adjustment-object" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/adjustment-object/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustment</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/adjustments/37bff9dd3ec90471cf62bd4f6f80db3d"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"charge"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">invoice</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/invoices/1006"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subscription</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/subscriptions/37bfef7a8e44cfc3817b7a43eba8a6e6"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span>37bff9dd3ec90471cf62bd4f6f80db3d<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>invoiced<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span>Refund for Setup fee: Gold plan<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accounting_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">product_code</span><span class="cm-tag cm-bracket">&gt;</span>gold<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">product_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span>setup_fee<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">unit_amount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>800<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">unit_amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">quantity</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">quantity</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">quantity_remaining</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">quantity_remaining</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">original_adjustment_uuid</span><span class="cm-tag cm-bracket">&gt;</span>37bfef7af3cd23ee89d77a435aa1838d<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">original_adjustment_uuid</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">discount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">discount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-70<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">total_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-870<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">total_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>EUR<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">taxable</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">taxable</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_type</span><span class="cm-tag cm-bracket">&gt;</span>usst<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_region</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_region</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.0875<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_details</span> <span class="cm-attribute">type</span>=<span class="cm-string">"array"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span>state<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.065<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-52<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span>county<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.01<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-8<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span>city<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span>special<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.0125<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-10<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_details</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">start_date</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:02:24Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">start_date</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">end_date</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:13:44Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:13:44Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span>evenly<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">adjustment</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="list-an-accounts-adjustments" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e24a","category":"59557419c0a2ba001bf5e1ab","parentDoc":null,"user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T22:21:48.674Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"settings":"","examples":{"codes":[{"code":"&lt;?php\n\ntry {\n  $adjustments = Recurly_AdjustmentList::get('b6f5783');\n  foreach ($adjustments as $adjustment) {\n    print \"Adjustment: $adjustment\\n\";\n  }\n} catch (Recurly_NotFoundError $e) {\n  print \"Invalid account code: $e\";\n}","language":"php","name":""},{"code":"account = Recurly::Account.find('1')\naccount.adjustments.find_each do |adjustment|\n  puts \"Adjustment: #{adjustment.inspect}\"\nend","language":"ruby"},{"language":"python","code":"#client version 2.1.6+\naccount = Account.get('1')\nfor adjustment in account.adjustments():\n    print 'Adjustment: %s' % adjustment\n\n#client version &lt;= 2.1.5\naccount = Account.get('1')\nadjustments = account.adjustments()\nwhile adjustments:\n    for adjustment in adjustments:\n        print 'Adjustment: %s' % adjustment\n    try:\n        adjustments = adjustments.next_page()\n    except PageError:\n        adjustments = ()"},{"code":"using System.Linq;\n\nvar account = Accounts.Get(\"1\");\nvar adjustments = account.GetAdjustments();\nwhile (adjustments.Any())\n{\n\tforeach (var adjustment in adjustments)\n\t\tConsole.WriteLine(\"Adjustment: \" + adjustment);\n\tadjustments = adjustments.Next;\n}","language":"csharp"}]},"method":"get","results":{"codes":[{"name":"","code":"&lt;adjustments type=\"array\"&gt;\n  &lt;adjustment href=\"https://your-subdomain.recurly.com/v2/adjustments/37c0038fe1ffc9405019db4a11a99aa8\" type=\"credit\"&gt;\n    &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n    &lt;uuid&gt;37c0038fe1ffc9405019db4a11a99aa8&lt;/uuid&gt;\n    &lt;state&gt;pending&lt;/state&gt;\n    &lt;description&gt;Bonus for being a great customer&lt;/description&gt;\n    &lt;accounting_code nil=\"nil\"/&gt;\n    &lt;product_code nil=\"nil\"/&gt;\n    &lt;origin&gt;credit&lt;/origin&gt;\n    &lt;unit_amount_in_cents type=\"integer\"&gt;-2000&lt;/unit_amount_in_cents&gt;\n    &lt;quantity type=\"integer\"&gt;1&lt;/quantity&gt;\n    &lt;discount_in_cents type=\"integer\"&gt;0&lt;/discount_in_cents&gt;\n    &lt;tax_in_cents type=\"integer\"&gt;0&lt;/tax_in_cents&gt;\n    &lt;total_in_cents type=\"integer\"&gt;-2000&lt;/total_in_cents&gt;\n    &lt;currency&gt;USD&lt;/currency&gt;\n    &lt;taxable type=\"boolean\"&gt;false&lt;/taxable&gt;\n    &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n    &lt;tax_code nil=\"nil\"/&gt;\n    &lt;start_date type=\"datetime\"&gt;2016-08-03T16:24:20Z&lt;/start_date&gt;\n    &lt;end_date nil=\"nil\"/&gt;\n    &lt;created_at type=\"datetime\"&gt;2016-08-03T16:24:20Z&lt;/created_at&gt;\n    &lt;updated_at type=\"datetime\"&gt;2016-08-03T16:24:20Z&lt;/updated_at&gt;\n    &lt;revenue_schedule_type&gt;at_invoice&lt;/revenue_schedule_type&gt;\n  &lt;/adjustment&gt;\n  &lt;!-- Continued... --&gt;\n&lt;/adjustments&gt;","language":"xml","status":200}]},"auth":"required","params":[{"_id":"5783c9a7192dcf0e0099828e","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"578ea67ec93aac0e00ec88a5","ref":"","in":"query","required":false,"desc":"The attribute that will be used to order records: `created_at`, `updated_at`.","default":"created_at","type":"string","name":"sort"},{"_id":"578ea67ec93aac0e00ec88a4","ref":"","in":"query","required":false,"desc":"The order in which products will be returned: `asc` for ascending order, `desc` for descending order.","default":"desc","type":"string","name":"order"},{"_id":"578ea67ec93aac0e00ec88a3","ref":"","in":"query","required":false,"desc":"Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.","default":"","type":"datetime","name":"begin_time"},{"_id":"578ea67ec93aac0e00ec88a2","ref":"","in":"query","required":false,"desc":"Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes less than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.","default":"","type":"datetime","name":"end_time"},{"_id":"5783c9a7192dcf0e0099828c","ref":"","in":"query","required":false,"desc":"Number of records to return per page, up to a maximum of 200.","default":"50","type":"int","name":"per_page"},{"_id":"5783c9a7192dcf0e0099828d","ref":"","in":"query","required":false,"desc":"Splits records across pages. Leave blank to return the first page. Follow the URI in the first page's Link header to fetch the next page.","default":"","type":"string","name":"cursor"}],"url":"/accounts/:account_code/adjustments"},"isReference":true,"order":1,"body":"","excerpt":"Returns a list of adjustments for a given account. Results are ordered by the time created, sorted by newest first.","slug":"list-an-accounts-adjustments","type":"get","title":"List Account's Adjustments","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>List Account's Adjustments</h1>
           <div marked>
            Returns a list of adjustments for a given account. Results are ordered by the time created, sorted by newest first.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Query Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>sort<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <span class="param-default text-muted">created_at</span>
                <div marked>
                 The attribute that will be used to order records: `created_at`, `updated_at`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>order<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <span class="param-default text-muted">desc</span>
                <div marked>
                 The order in which products will be returned: `asc` for ascending order, `desc` for descending order.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>begin_time<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes greater than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>end_time<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 Operates on the attribute specified by the sort parameter. Filters records to only include those with datetimes less than or equal to the supplied datetime. Accepts an ISO 8601 date or date and time.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>per_page<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <span class="param-default text-muted">50</span>
                <div marked>
                 Number of records to return per page, up to a maximum of 200.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>cursor<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Splits records across pages. Leave blank to return the first page. Follow the URI in the first page's Link header to fetch the next page.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/list-an-accounts-adjustments" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/list-an-accounts-adjustments/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$adjustments</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_AdjustmentList</span>::<span class="cm-variable">get</span>(<span class="cm-string">'b6f5783'</span>); <span class="cm-keyword">foreach</span> (<span class="cm-variable-2">$adjustments</span> <span class="cm-keyword">as</span> <span class="cm-variable-2">$adjustment</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Adjustment: </span><span class="cm-variable-2">$adjustment</span><span class="cm-string">\n"</span>; } } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Invalid account code: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">adjustments</span><span class="cm-operator">.</span><span class="cm-property">find_each</span> <span class="cm-keyword">do</span> |<span class="cm-def">adjustment</span>| <span class="cm-variable">puts</span> <span class="cm-string">"Adjustment: #{</span><span class="cm-variable">adjustment</span><span class="cm-operator">.</span><span class="cm-property">inspect</span><span class="cm-string">}"</span> <span class="cm-keyword">end</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-comment">#client version 2.1.6+</span> <span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-keyword">for</span> <span class="cm-variable">adjustment</span> <span class="cm-keyword">in</span> <span class="cm-variable">account</span>.<span class="cm-variable">adjustments</span>(): <span class="cm-keyword">print</span> <span class="cm-string">'Adjustment: %s'</span> <span class="cm-operator">%</span> <span class="cm-variable">adjustment</span> <span class="cm-comment">#client version &lt;= 2.1.5</span> <span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">adjustments</span> = <span class="cm-variable">account</span>.<span class="cm-variable">adjustments</span>() <span class="cm-keyword">while</span> <span class="cm-variable">adjustments</span>: <span class="cm-keyword">for</span> <span class="cm-variable">adjustment</span> <span class="cm-keyword">in</span> <span class="cm-variable">adjustments</span>: <span class="cm-keyword">print</span> <span class="cm-string">'Adjustment: %s'</span> <span class="cm-operator">%</span> <span class="cm-variable">adjustment</span> <span class="cm-keyword">try</span>: <span class="cm-variable">adjustments</span> = <span class="cm-variable">adjustments</span>.<span class="cm-variable">next_page</span>() <span class="cm-keyword">except</span> <span class="cm-variable">PageError</span>: <span class="cm-variable">adjustments</span> = ()</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">using</span> <span class="cm-variable">System</span>.<span class="cm-variable">Linq</span>; <span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">adjustments</span> <span class="cm-operator">=</span> <span class="cm-variable">account</span>.<span class="cm-variable">GetAdjustments</span>(); <span class="cm-keyword">while</span> (<span class="cm-variable">adjustments</span>.<span class="cm-variable">Any</span>()) { <span class="cm-keyword">foreach</span> (<span class="cm-keyword">var</span> <span class="cm-def">adjustment</span> <span class="cm-keyword">in</span> <span class="cm-variable">adjustments</span>) <span class="cm-variable">Console</span>.<span class="cm-variable">WriteLine</span>(<span class="cm-string">"Adjustment: "</span> <span class="cm-operator">+</span> <span class="cm-variable">adjustment</span>); <span class="cm-variable">adjustments</span> <span class="cm-operator">=</span> <span class="cm-variable">adjustments</span>.<span class="cm-variable">Next</span>; }</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustments</span> <span class="cm-attribute">type</span>=<span class="cm-string">"array"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustment</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/adjustments/37c0038fe1ffc9405019db4a11a99aa8"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"credit"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span>37c0038fe1ffc9405019db4a11a99aa8<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>pending<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span>Bonus for being a great customer<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accounting_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">product_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span>credit<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">unit_amount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-2000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">unit_amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">quantity</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">quantity</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">discount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">discount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">total_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-2000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">total_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>USD<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">taxable</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">taxable</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">start_date</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:24:20Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">start_date</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">end_date</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:24:20Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:24:20Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span>at_invoice<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">adjustment</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-comment">&lt;!-- Continued... --&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">adjustments</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="create-a-charge" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e24b","category":"59557419c0a2ba001bf5e1ab","parentDoc":null,"user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":["55b2f1b5a96deb1900990c6f","565dc7d277f0090d0058196c"],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T22:28:24.162Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"name":"","code":"&lt;?php\n\ntry {\n  $charge = new Recurly_Adjustment();\n  $charge-&gt;account_code = 'b6f5783';\n  $charge-&gt;description = 'Charge for extra bandwidth';\n  $charge-&gt;unit_amount_in_cents = 5000; // $50.00\n  $charge-&gt;currency = 'USD';\n  $charge-&gt;quantity = 1;\n  $charge-&gt;accounting_code = 'bandwidth';\n  $charge-&gt;tax_exempt = false;\n  $charge-&gt;create();\n\n  print \"Charge: $charge\";\n} catch (Recurly_NotFoundError $e) {\n  print \"Account not found: $e\";\n}","language":"php"},{"code":"account = Recurly::Account.find('1')\naccount.adjustments.create(\n  :description          =&gt; 'Charge for extra bandwidth',\n  :unit_amount_in_cents =&gt; 50_00,\n  :currency             =&gt; 'USD',\n  :quantity             =&gt; 1,\n  :accounting_code      =&gt; 'bandwidth',\n  :tax_exempt           =&gt; false\n)","language":"ruby"},{"code":"account = Account.get('1')\ncharge = Adjustment(\n  description='Charge for extra bandwidth',\n  unit_amount_in_cents=5000,\n  currency='USD',\n  quantity=1,\n  accounting_code='bandwidth',\n  tax_exempt=False\n)\naccount.charge(charge)","language":"python"},{"code":"var account = Accounts.Get(\"1\");\nvar adjustment = account.NewAdjustment(\n\t\"USD\",                        // currency\n\t5000,                         // unit_amount_in_cents\n\t\"Charge for extra bandwidth\", // description\n\t1,                            // quantity\n\t\"bandwidth\",                  // accounting_code\n\tfalse);                       // tax_exempt\nadjustment.Create();","language":"csharp"},{"code":"&lt;adjustment&gt;\n  &lt;description&gt;Charge for extra bandwidth&lt;/description&gt;\n  &lt;unit_amount_in_cents&gt;5000&lt;/unit_amount_in_cents&gt;\n  &lt;currency&gt;USD&lt;/currency&gt;\n  &lt;quantity&gt;1&lt;/quantity&gt;\n  &lt;accounting_code&gt;bandwidth&lt;/accounting_code&gt;\n  &lt;tax_exempt&gt;false&lt;/tax_exempt&gt;\n  &lt;revenue_schedule_type&gt;at_invoice&lt;/revenue_schedule_type&gt;\n&lt;/adjustment&gt;","language":"xml"}]},"method":"post","results":{"codes":[{"name":"","code":"&lt;adjustment href=\"https://your-subdomain.recurly.com/v2/adjustments/37c0031340577f993ff30b41738f52ff\" type=\"charge\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;uuid&gt;37c0031340577f993ff30b41738f52ff&lt;/uuid&gt;\n  &lt;state&gt;pending&lt;/state&gt;\n  &lt;description&gt;Charge for extra bandwidth&lt;/description&gt;\n  &lt;accounting_code&gt;bandwidth&lt;/accounting_code&gt;\n  &lt;product_code nil=\"nil\"/&gt;\n  &lt;origin&gt;debit&lt;/origin&gt;\n  &lt;unit_amount_in_cents type=\"integer\"&gt;5000&lt;/unit_amount_in_cents&gt;\n  &lt;quantity type=\"integer\"&gt;1&lt;/quantity&gt;\n  &lt;discount_in_cents type=\"integer\"&gt;0&lt;/discount_in_cents&gt;\n  &lt;tax_in_cents type=\"integer\"&gt;0&lt;/tax_in_cents&gt;\n  &lt;total_in_cents type=\"integer\"&gt;5000&lt;/total_in_cents&gt;\n  &lt;currency&gt;USD&lt;/currency&gt;\n  &lt;taxable type=\"boolean\"&gt;false&lt;/taxable&gt;\n  &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n  &lt;tax_code nil=\"nil\"/&gt;\n  &lt;start_date type=\"datetime\"&gt;2016-08-03T16:23:48Z&lt;/start_date&gt;\n  &lt;end_date nil=\"nil\"/&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-03T16:23:48Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-03T16:23:48Z&lt;/updated_at&gt;\n  &lt;revenue_schedule_type&gt;at_invoice&lt;/revenue_schedule_type&gt;\n&lt;/adjustment&gt;","language":"xml","status":201}]},"settings":"","auth":"required","params":[{"_id":"557f5188eb75d80d00af40a6","ref":"","in":"body","required":true,"desc":"Currency, 3-letter ISO code.","default":"","type":"string","name":"currency"},{"_id":"557f5188eb75d80d00af40a5","ref":"","in":"body","required":true,"desc":"Positive amount for a charge, negative amount for a credit. Max 10000000.","default":"","type":"string","name":"unit_amount_in_cents"},{"_id":"557f5188eb75d80d00af40a7","ref":"","in":"path","required":true,"desc":"Your unique account identifier.","default":"","type":"string","name":"account_code"},{"_id":"557f5188eb75d80d00af40a3","ref":"","in":"body","required":false,"desc":"Quantity.","default":"1","type":"int","name":"quantity"},{"_id":"557f5188eb75d80d00af40a4","ref":"","in":"body","required":false,"desc":"Description of the adjustment for the invoice.","default":"","type":"string","name":"description"},{"_id":"557f5188eb75d80d00af40a2","ref":"","in":"body","required":false,"desc":"Accounting code. Max of 20 characters.","default":"","type":"string","name":"accounting_code"},{"_id":"578f782bdbb58b0e00bbdf86","ref":"","in":"body","required":false,"desc":"Optional field for setting a revenue schedule type. This will determine how revenue for the associated Charge should be recognized. Available schedule types are `never`, `at_range_start`, `at_invoice`, andif `end_date` is set`evenly` and `at_range_end`.","default":"","type":"string","name":"revenue_schedule_type"},{"_id":"557f5188eb75d80d00af40a1","ref":"","in":"body","required":false,"desc":"`true` exempts tax on the charge, `false` applies tax on the charge. If not defined, then defaults to the Plan and Site settings. This attribute does not work for credits (negative adjustments). Credits are always post-tax. Pre-tax discounts should use the Coupons feature.","default":"","type":"boolean","name":"tax_exempt"},{"_id":"557f5188eb75d80d00af40a0","ref":"","in":"body","required":false,"desc":"Optional field for EU VAT merchants and Avalara AvaTax Pro merchants. If you are using Recurly's EU VAT feature, you can use values of `unknown`, `physical`, or `digital`. If you have your own AvaTax account configured, you can use Avalara tax codes to assign custom tax rules.","default":"","type":"string","name":"tax_code"},{"_id":"55e09fbfa44fae0d0021473e","ref":"","in":"body","required":false,"desc":"A timestamp associated with when the charge began.","default":"now","type":"timestamp","name":"start_date"},{"_id":"55e09fbfa44fae0d0021473d","ref":"","in":"body","required":false,"desc":"A timestamp associated with when the charge ended.","default":"","type":"timestamp","name":"end_date"},{"_id":"58a732d9e13fc22300154cf2","ref":"","in":"body","required":false,"desc":"The product code or SKU of the line item. Max of 50 characters. Useful for later reporting on product purchases.","default":"","type":"string","name":"product_code"}],"url":"/accounts/:account_code/adjustments"},"isReference":true,"order":2,"body":"","excerpt":"Creates a one-time charge on an account. Charges are not invoiced or collected immediately. Non-invoiced charges will automatically be invoices when the account's subscription renews, or you trigger a collection by posting an invoice. Charges may be removed from an account if they have not been invoiced.","slug":"create-a-charge","type":"post","title":"Create Charge","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-post">post</span>Create Charge</h1>
           <div marked>
            Creates a one-time charge on an account. Charges are not invoiced or collected immediately. Non-invoiced charges will automatically be invoices when the account's subscription renews, or you trigger a collection by posting an invoice. Charges may be removed from an account if they have not been invoiced.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Your unique account identifier.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>currency<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Currency, 3-letter ISO code.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>unit_amount_in_cents<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Positive amount for a charge, negative amount for a credit. Max 10000000.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>quantity<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <span class="param-default text-muted">1</span>
                <div marked>
                 Quantity.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>description<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Description of the adjustment for the invoice.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>accounting_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Accounting code. Max of 20 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>revenue_schedule_type<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Optional field for setting a revenue schedule type. This will determine how revenue for the associated Charge should be recognized. Available schedule types are `never`, `at_range_start`, `at_invoice`, andif `end_date` is set`evenly` and `at_range_end`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_exempt<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">boolean</strong>
                <div marked>
                 `true` exempts tax on the charge, `false` applies tax on the charge. If not defined, then defaults to the Plan and Site settings. This attribute does not work for credits (negative adjustments). Credits are always post-tax. Pre-tax discounts should use the Coupons feature.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>tax_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Optional field for EU VAT merchants and Avalara AvaTax Pro merchants. If you are using Recurly's EU VAT feature, you can use values of `unknown`, `physical`, or `digital`. If you have your own AvaTax account configured, you can use Avalara tax codes to assign custom tax rules.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>start_date<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">timestamp</strong>
                <span class="param-default text-muted">now</span>
                <div marked>
                 A timestamp associated with when the charge began.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>end_date<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">timestamp</strong>
                <div marked>
                 A timestamp associated with when the charge ended.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>product_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The product code or SKU of the line item. Max of 50 characters. Useful for later reporting on product purchases.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/create-a-charge" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/create-a-charge/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
              <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
               <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">XML</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$charge</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Recurly_Adjustment</span>(); <span class="cm-variable-2">$charge</span><span class="cm-operator">-&gt;</span><span class="cm-variable">account_code</span> <span class="cm-operator">=</span> <span class="cm-string">'b6f5783'</span>; <span class="cm-variable-2">$charge</span><span class="cm-operator">-&gt;</span><span class="cm-variable">description</span> <span class="cm-operator">=</span> <span class="cm-string">'Charge for extra bandwidth'</span>; <span class="cm-variable-2">$charge</span><span class="cm-operator">-&gt;</span><span class="cm-variable">unit_amount_in_cents</span> <span class="cm-operator">=</span> <span class="cm-number">5000</span>; <span class="cm-comment">// $50.00</span> <span class="cm-variable-2">$charge</span><span class="cm-operator">-&gt;</span><span class="cm-variable">currency</span> <span class="cm-operator">=</span> <span class="cm-string">'USD'</span>; <span class="cm-variable-2">$charge</span><span class="cm-operator">-&gt;</span><span class="cm-variable">quantity</span> <span class="cm-operator">=</span> <span class="cm-number">1</span>; <span class="cm-variable-2">$charge</span><span class="cm-operator">-&gt;</span><span class="cm-variable">accounting_code</span> <span class="cm-operator">=</span> <span class="cm-string">'bandwidth'</span>; <span class="cm-variable-2">$charge</span><span class="cm-operator">-&gt;</span><span class="cm-variable">tax_exempt</span> <span class="cm-operator">=</span> <span class="cm-atom">false</span>; <span class="cm-variable-2">$charge</span><span class="cm-operator">-&gt;</span><span class="cm-variable">create</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Charge: </span><span class="cm-variable-2">$charge</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Account not found: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">adjustments</span><span class="cm-operator">.</span><span class="cm-property">create</span>( <span class="cm-atom">:description</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Charge for extra bandwidth'</span>, <span class="cm-atom">:unit_amount_in_cents</span> <span class="cm-operator">=&gt;</span> <span class="cm-number">50_00</span>, <span class="cm-atom">:currency</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'USD'</span>, <span class="cm-atom">:quantity</span> <span class="cm-operator">=&gt;</span> <span class="cm-number">1</span>, <span class="cm-atom">:accounting_code</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'bandwidth'</span>, <span class="cm-atom">:tax_exempt</span> <span class="cm-operator">=&gt;</span> <span class="cm-keyword">false</span> )</span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">charge</span> = <span class="cm-variable">Adjustment</span>( <span class="cm-variable">description</span>=<span class="cm-string">'Charge for extra bandwidth'</span>, <span class="cm-variable">unit_amount_in_cents</span>=<span class="cm-number">5000</span>, <span class="cm-variable">currency</span>=<span class="cm-string">'USD'</span>, <span class="cm-variable">quantity</span>=<span class="cm-number">1</span>, <span class="cm-variable">accounting_code</span>=<span class="cm-string">'bandwidth'</span>, <span class="cm-variable">tax_exempt</span>=<span class="cm-builtin">False</span> ) <span class="cm-variable">account</span>.<span class="cm-variable">charge</span>(<span class="cm-variable">charge</span>)</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">adjustment</span> <span class="cm-operator">=</span> <span class="cm-variable">account</span>.<span class="cm-variable">NewAdjustment</span>( <span class="cm-string">"USD"</span>, <span class="cm-comment">// currency</span> <span class="cm-number">5000</span>, <span class="cm-comment">// unit_amount_in_cents</span> <span class="cm-string">"Charge for extra bandwidth"</span>, <span class="cm-comment">// description</span> <span class="cm-number">1</span>, <span class="cm-comment">// quantity</span> <span class="cm-string">"bandwidth"</span>, <span class="cm-comment">// accounting_code</span> <span class="cm-atom">false</span>); <span class="cm-comment">// tax_exempt</span> <span class="cm-variable">adjustment</span>.<span class="cm-variable">Create</span>();</span></code></pre>
              <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustment</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span>Charge for extra bandwidth<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">unit_amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span>5000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">unit_amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>USD<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">quantity</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">quantity</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accounting_code</span><span class="cm-tag cm-bracket">&gt;</span>bandwidth<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">accounting_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span>at_invoice<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">adjustment</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>201<span> </span><em>Created</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustment</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/adjustments/37c0031340577f993ff30b41738f52ff"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"charge"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span>37c0031340577f993ff30b41738f52ff<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>pending<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span>Charge for extra bandwidth<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accounting_code</span><span class="cm-tag cm-bracket">&gt;</span>bandwidth<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">accounting_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">product_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span>debit<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">unit_amount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>5000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">unit_amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">quantity</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">quantity</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">discount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">discount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">total_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>5000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">total_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>USD<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">taxable</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">taxable</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">start_date</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:23:48Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">start_date</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">end_date</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:23:48Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:23:48Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span>at_invoice<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">adjustment</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="create-a-credit" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e24c","category":"59557419c0a2ba001bf5e1ab","user":"55648cf93b87582b003ab8b1","parentDoc":null,"project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":["563ce057913e650d00b65f47"],"next":{"pages":[],"description":""},"createdAt":"2015-08-07T19:15:36.088Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"php","code":"&lt;?php\n\n$credit = new Recurly_Adjustment();\n$credit-&gt;account_code = '1';\n$credit-&gt;description = 'Bonus for being a great customer';\n$credit-&gt;unit_amount_in_cents = -2000; // Negative $20.00.\n$credit-&gt;currency = 'USD';\n$credit-&gt;quantity = 1;\n$credit-&gt;create();","name":""},{"language":"ruby","code":"account = Recurly::Account.find('1')\naccount.adjustments.create(\n  :description          =&gt; 'Bonus for being a great customer',\n  :unit_amount_in_cents =&gt; -20_00,\n  :currency             =&gt; 'USD',\n  :quantity             =&gt; 1\n)"},{"language":"python","code":"account = Account.get('1')\ncredit = Adjustment(\n  description='Bonus for being a great customer',\n  unit_amount_in_cents=-2000,\n  currency='USD',\n  quantity=1\n)\naccount.charge(credit)"},{"language":"csharp","code":"var account = Accounts.Get(\"1\");\nvar adjustment = account.NewAdjustment(\n\t\"USD\",                               // currency\n\t-2000,                               // unit_amount_in_cents\n\t\"Bonus for being a great customer\", // description\n\t1);                                  // quantity (default is 1)\nadjustment.Create();"},{"language":"xml","code":"&lt;adjustment&gt;\n  &lt;description&gt;Bonus for being a great customer&lt;/description&gt;\n  &lt;unit_amount_in_cents&gt;-2000&lt;/unit_amount_in_cents&gt;\n  &lt;currency&gt;USD&lt;/currency&gt;\n  &lt;quantity&gt;1&lt;/quantity&gt;\n  &lt;revenue_schedule_type&gt;at_invoice&lt;/revenue_schedule_type&gt;\n&lt;/adjustment&gt;"}]},"method":"post","results":{"codes":[{"status":201,"language":"xml","code":"&lt;adjustment href=\"https://your-subdomain.recurly.com/v2/adjustments/37c0038fe1ffc9405019db4a11a99aa8\" type=\"credit\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;uuid&gt;37c0038fe1ffc9405019db4a11a99aa8&lt;/uuid&gt;\n  &lt;state&gt;pending&lt;/state&gt;\n  &lt;description&gt;Bonus for being a great customer&lt;/description&gt;\n  &lt;accounting_code nil=\"nil\"/&gt;\n  &lt;product_code nil=\"nil\"/&gt;\n  &lt;origin&gt;credit&lt;/origin&gt;\n  &lt;unit_amount_in_cents type=\"integer\"&gt;-2000&lt;/unit_amount_in_cents&gt;\n  &lt;quantity type=\"integer\"&gt;1&lt;/quantity&gt;\n  &lt;discount_in_cents type=\"integer\"&gt;0&lt;/discount_in_cents&gt;\n  &lt;tax_in_cents type=\"integer\"&gt;0&lt;/tax_in_cents&gt;\n  &lt;total_in_cents type=\"integer\"&gt;-2000&lt;/total_in_cents&gt;\n  &lt;currency&gt;USD&lt;/currency&gt;\n  &lt;taxable type=\"boolean\"&gt;false&lt;/taxable&gt;\n  &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n  &lt;tax_code nil=\"nil\"/&gt;\n  &lt;start_date type=\"datetime\"&gt;2016-08-03T16:24:20Z&lt;/start_date&gt;\n  &lt;end_date nil=\"nil\"/&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-03T16:24:20Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-03T16:24:20Z&lt;/updated_at&gt;\n  &lt;revenue_schedule_type&gt;at_invoice&lt;/revenue_schedule_type&gt;\n&lt;/adjustment&gt;","name":""}]},"settings":"","auth":"required","params":[{"_id":"557f5188eb75d80d00af40a6","ref":"","in":"body","required":true,"desc":"Currency, 3-letter ISO code.","default":"","type":"string","name":"currency"},{"_id":"557f5188eb75d80d00af40a7","ref":"","in":"path","required":true,"desc":"Your unique account identifier.","default":"","type":"string","name":"account_code"},{"_id":"557f5188eb75d80d00af40a5","ref":"","in":"body","required":true,"desc":"Positive amount for a charge, negative amount for a credit. Max 10000000.","default":"","type":"string","name":"unit_amount_in_cents"},{"_id":"557f5188eb75d80d00af40a3","ref":"","in":"body","required":false,"desc":"Quantity.","default":"1","type":"int","name":"quantity"},{"_id":"557f5188eb75d80d00af40a4","ref":"","in":"body","required":false,"desc":"Description of the adjustment for the invoice.","default":"","type":"string","name":"description"},{"_id":"557f5188eb75d80d00af40a2","ref":"","in":"body","required":false,"desc":"Accounting code. Max of 20 characters.","default":"","type":"string","name":"accounting_code"},{"_id":"578f7836dbb58b0e00bbdf87","ref":"","in":"body","required":false,"desc":"Optional field for setting a revenue schedule type. This will determine how revenue for the associated Credit should be recognized. Available schedule types are `never`, `at_range_start`, `at_invoice`, andif `end_date` is set`evenly` and `at_range_end`.","default":"","type":"string","name":"revenue_schedule_type"},{"_id":"55e0dcbda44fae0d0021491f","ref":"","in":"body","required":false,"desc":"A timestamp associated with when the credit began.","default":"now","type":"timestamp","name":"start_date"},{"_id":"55e0dcbda44fae0d0021491e","ref":"","in":"body","required":false,"desc":"A timestamp associated with when the credit ended.","default":"","type":"timestamp","name":"end_date"},{"_id":"57b50abbdc26980e00d04c9c","ref":"","in":"body","required":false,"desc":"Only allowed if the Gift Cards feature is enabled on your site and `unit_amount_in_cents` is negative. Can only have a value of `external_gift_card`. Sets the origin of the credit to `external_gift_card` in order to track gift card credits from external gift cards, like InComm, and triggers the logic to not require billing information from gift credit redeemers.","default":"","type":"string","name":"origin"},{"_id":"58a732f1e29fd525004c9b85","ref":"","in":"body","required":false,"desc":"The product code or SKU of the line item. Max of 50 characters. Useful for later reporting on product purchases.","default":"","type":"string","name":"product_code"}],"url":"/accounts/:account_code/adjustments"},"isReference":true,"order":3,"body":"[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"No Tax on Custom Credits\",\n  \"body\": \"Custom credit adjustments will not calculate tax. If the credit you want to create reflects a charge previously billed with tax, we recommend that you refund the invoice instead of making a credit.\"\n}\n[/block]","excerpt":"Creates a one-time charge on an account. Charges are not invoiced or collected immediately. Non-invoiced charges will automatically be invoices when the account's subscription renews, or you trigger a collection by posting an invoice. Charges may be removed from an account if they have not been invoiced.","slug":"create-a-credit","type":"post","title":"Create Credit","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-post">post</span>Create Credit</h1>
           <div marked>
            Creates a one-time charge on an account. Charges are not invoiced or collected immediately. Non-invoiced charges will automatically be invoices when the account's subscription renews, or you trigger a collection by posting an invoice. Charges may be removed from an account if they have not been invoiced.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Your unique account identifier.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>currency<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Currency, 3-letter ISO code.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>unit_amount_in_cents<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Positive amount for a charge, negative amount for a credit. Max 10000000.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>quantity<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <span class="param-default text-muted">1</span>
                <div marked>
                 Quantity.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>description<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Description of the adjustment for the invoice.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>accounting_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Accounting code. Max of 20 characters.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>revenue_schedule_type<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Optional field for setting a revenue schedule type. This will determine how revenue for the associated Credit should be recognized. Available schedule types are `never`, `at_range_start`, `at_invoice`, andif `end_date` is set`evenly` and `at_range_end`.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>start_date<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">timestamp</strong>
                <span class="param-default text-muted">now</span>
                <div marked>
                 A timestamp associated with when the credit began.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>end_date<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">timestamp</strong>
                <div marked>
                 A timestamp associated with when the credit ended.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>origin<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Only allowed if the Gift Cards feature is enabled on your site and `unit_amount_in_cents` is negative. Can only have a value of `external_gift_card`. Sets the origin of the credit to `external_gift_card` in order to track gift card credits from external gift cards, like InComm, and triggers the logic to not require billing information from gift credit redeemers.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>product_code<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The product code or SKU of the line item. Max of 50 characters. Useful for later reporting on product purchases.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div class="magic-block-callout type-warning "> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i><span>No Tax on Custom Credits</span> </h3>
                <p>Custom credit adjustments will not calculate tax. If the credit you want to create reflects a charge previously billed with tax, we recommend that you refund the invoice instead of making a credit.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/create-a-credit" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/create-a-credit/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
              <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
               <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">XML</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-variable-2">$credit</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Recurly_Adjustment</span>(); <span class="cm-variable-2">$credit</span><span class="cm-operator">-&gt;</span><span class="cm-variable">account_code</span> <span class="cm-operator">=</span> <span class="cm-string">'1'</span>; <span class="cm-variable-2">$credit</span><span class="cm-operator">-&gt;</span><span class="cm-variable">description</span> <span class="cm-operator">=</span> <span class="cm-string">'Bonus for being a great customer'</span>; <span class="cm-variable-2">$credit</span><span class="cm-operator">-&gt;</span><span class="cm-variable">unit_amount_in_cents</span> <span class="cm-operator">=</span> <span class="cm-operator">-</span><span class="cm-number">2000</span>; <span class="cm-comment">// Negative $20.00.</span> <span class="cm-variable-2">$credit</span><span class="cm-operator">-&gt;</span><span class="cm-variable">currency</span> <span class="cm-operator">=</span> <span class="cm-string">'USD'</span>; <span class="cm-variable-2">$credit</span><span class="cm-operator">-&gt;</span><span class="cm-variable">quantity</span> <span class="cm-operator">=</span> <span class="cm-number">1</span>; <span class="cm-variable-2">$credit</span><span class="cm-operator">-&gt;</span><span class="cm-variable">create</span>();</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">adjustments</span><span class="cm-operator">.</span><span class="cm-property">create</span>( <span class="cm-atom">:description</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Bonus for being a great customer'</span>, <span class="cm-atom">:unit_amount_in_cents</span> <span class="cm-operator">=&gt;</span> <span class="cm-operator">-</span><span class="cm-number">20_00</span>, <span class="cm-atom">:currency</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'USD'</span>, <span class="cm-atom">:quantity</span> <span class="cm-operator">=&gt;</span> <span class="cm-number">1</span> )</span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">credit</span> = <span class="cm-variable">Adjustment</span>( <span class="cm-variable">description</span>=<span class="cm-string">'Bonus for being a great customer'</span>, <span class="cm-variable">unit_amount_in_cents</span>=<span class="cm-operator">-</span><span class="cm-number">2000</span>, <span class="cm-variable">currency</span>=<span class="cm-string">'USD'</span>, <span class="cm-variable">quantity</span>=<span class="cm-number">1</span> ) <span class="cm-variable">account</span>.<span class="cm-variable">charge</span>(<span class="cm-variable">credit</span>)</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">adjustment</span> <span class="cm-operator">=</span> <span class="cm-variable">account</span>.<span class="cm-variable">NewAdjustment</span>( <span class="cm-string">"USD"</span>, <span class="cm-comment">// currency</span> <span class="cm-operator">-</span><span class="cm-number">2000</span>, <span class="cm-comment">// unit_amount_in_cents</span> <span class="cm-string">"Bonus for being a great customer"</span>, <span class="cm-comment">// description</span> <span class="cm-number">1</span>); <span class="cm-comment">// quantity (default is 1)</span> <span class="cm-variable">adjustment</span>.<span class="cm-variable">Create</span>();</span></code></pre>
              <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustment</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span>Bonus for being a great customer<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">unit_amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span>-2000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">unit_amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>USD<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">quantity</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">quantity</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span>at_invoice<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">adjustment</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>201<span> </span><em>Created</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustment</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/adjustments/37c0038fe1ffc9405019db4a11a99aa8"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"credit"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span>37c0038fe1ffc9405019db4a11a99aa8<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>pending<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span>Bonus for being a great customer<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accounting_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">product_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span>credit<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">unit_amount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-2000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">unit_amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">quantity</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">quantity</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">discount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">discount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">total_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>-2000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">total_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>USD<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">taxable</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">taxable</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">start_date</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:24:20Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">start_date</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">end_date</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:24:20Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:24:20Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span>at_invoice<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">adjustment</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="get-an-adjustment" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e24d","category":"59557419c0a2ba001bf5e1ab","project":"555fbba928249c1900618a82","parentDoc":null,"user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":["55b79c68aea7c8190058b98e"],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T22:24:48.657Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"name":"","code":"&lt;?php\n\ntry {\n  $adjustment = Recurly_Adjustment::get('2fded6a3e36e8b56b37007432f8c1b0d');\n  print \"Adjustment: $adjustment\";\n} catch (Recurly_NotFoundError $e) {\n  print \"Invalid adjustment uuid: $e\";\n}","language":"php"},{"code":"adjustment = Recurly::Adjustment.find('30498bb2d52bb9037b4d62480eb98b8f')\n","language":"ruby"},{"code":"adjustment = Adjustment.get('30498bb2d52bb9037b4d62480eb98b8f')\n","language":"python"},{"code":"var adjustment = Adjustments.Get(\"30498bb2d52bb9037b4d62480eb98b8f\");\nConsole.WriteLine(\"Adjustment: \" + adjustment);","language":"csharp"}]},"method":"get","results":{"codes":[{"name":"","code":"&lt;adjustment href=\"https://your-subdomain.recurly.com/v2/adjustments/37c0057d2bc64f2dd6a1c944dc87fbb5\" type=\"charge\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;invoice href=\"https://your-subdomain.recurly.com/v2/invoices/1007\"/&gt;\n  &lt;subscription href=\"https://your-subdomain.recurly.com/v2/subscriptions/37c0057cb105f67b6b8a1146f7b59c41\"/&gt;\n  &lt;uuid&gt;37c0057d2bc64f2dd6a1c944dc87fbb5&lt;/uuid&gt;\n  &lt;state&gt;invoiced&lt;/state&gt;\n  &lt;description&gt;Gold plan&lt;/description&gt;\n  &lt;accounting_code nil=\"nil\"/&gt;\n  &lt;product_code&gt;gold&lt;/product_code&gt;\n  &lt;origin&gt;plan&lt;/origin&gt;\n  &lt;unit_amount_in_cents type=\"integer\"&gt;4500&lt;/unit_amount_in_cents&gt;\n  &lt;quantity type=\"integer\"&gt;1&lt;/quantity&gt;\n  &lt;discount_in_cents type=\"integer\"&gt;450&lt;/discount_in_cents&gt;\n  &lt;tax_in_cents type=\"integer\"&gt;354&lt;/tax_in_cents&gt;\n  &lt;total_in_cents type=\"integer\"&gt;4404&lt;/total_in_cents&gt;\n  &lt;currency&gt;EUR&lt;/currency&gt;\n  &lt;taxable type=\"boolean\"&gt;false&lt;/taxable&gt;\n  &lt;tax_type&gt;usst&lt;/tax_type&gt;\n  &lt;tax_region&gt;CA&lt;/tax_region&gt;\n  &lt;tax_rate type=\"float\"&gt;0.0875&lt;/tax_rate&gt;\n  &lt;tax_exempt type=\"boolean\"&gt;false&lt;/tax_exempt&gt;\n  &lt;tax_code nil=\"nil\"/&gt;\n  &lt;tax_details type=\"array\"&gt;\n    &lt;tax_detail&gt;\n      &lt;name nil=\"nil\"/&gt;\n      &lt;type&gt;state&lt;/type&gt;\n      &lt;tax_rate type=\"float\"&gt;0.065&lt;/tax_rate&gt;\n      &lt;tax_in_cents type=\"integer\"&gt;263&lt;/tax_in_cents&gt;\n    &lt;/tax_detail&gt;\n    &lt;tax_detail&gt;\n      &lt;name nil=\"nil\"/&gt;\n      &lt;type&gt;county&lt;/type&gt;\n      &lt;tax_rate type=\"float\"&gt;0.01&lt;/tax_rate&gt;\n      &lt;tax_in_cents type=\"integer\"&gt;41&lt;/tax_in_cents&gt;\n    &lt;/tax_detail&gt;\n    &lt;tax_detail&gt;\n      &lt;name nil=\"nil\"/&gt;\n      &lt;type&gt;city&lt;/type&gt;\n      &lt;tax_rate type=\"float\"&gt;0.0&lt;/tax_rate&gt;\n      &lt;tax_in_cents type=\"integer\"&gt;0&lt;/tax_in_cents&gt;\n    &lt;/tax_detail&gt;\n    &lt;tax_detail&gt;\n      &lt;name nil=\"nil\"/&gt;\n      &lt;type&gt;special&lt;/type&gt;\n      &lt;tax_rate type=\"float\"&gt;0.0125&lt;/tax_rate&gt;\n      &lt;tax_in_cents type=\"integer\"&gt;51&lt;/tax_in_cents&gt;\n    &lt;/tax_detail&gt;\n  &lt;/tax_details&gt;\n  &lt;start_date type=\"datetime\"&gt;2016-08-03T16:26:26Z&lt;/start_date&gt;\n  &lt;end_date type=\"datetime\"&gt;2016-09-03T16:26:26Z&lt;/end_date&gt;\n  &lt;created_at type=\"datetime\"&gt;2016-08-03T16:26:26Z&lt;/created_at&gt;\n  &lt;updated_at type=\"datetime\"&gt;2016-08-03T16:26:26Z&lt;/updated_at&gt;\n  &lt;revenue_schedule_type&gt;evenly&lt;/revenue_schedule_type&gt;\n&lt;/adjustment&gt;","language":"xml","status":200}]},"settings":"","auth":"required","params":[{"_id":"55944f4fccc3052300569883","ref":"","in":"path","required":true,"desc":"The unique identifier for the adjustment","default":"","type":"string","name":"uuid"}],"url":"/adjustments/:uuid"},"isReference":true,"order":4,"body":"","excerpt":"Returns information about a single adjustment.","slug":"get-an-adjustment","type":"get","title":"Lookup Adjustment","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>Lookup Adjustment</h1>
           <div marked>
            Returns information about a single adjustment.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>uuid<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The unique identifier for the adjustment
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/get-an-adjustment" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/get-an-adjustment/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$adjustment</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_Adjustment</span>::<span class="cm-variable">get</span>(<span class="cm-string">'2fded6a3e36e8b56b37007432f8c1b0d'</span>); <span class="cm-keyword">print</span> <span class="cm-string">"Adjustment: </span><span class="cm-variable-2">$adjustment</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-keyword">print</span> <span class="cm-string">"Invalid adjustment uuid: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">adjustment</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Adjustment</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'30498bb2d52bb9037b4d62480eb98b8f'</span>) </span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">adjustment</span> = <span class="cm-variable">Adjustment</span>.<span class="cm-variable">get</span>(<span class="cm-string">'30498bb2d52bb9037b4d62480eb98b8f'</span>) </span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">adjustment</span> <span class="cm-operator">=</span> <span class="cm-variable">Adjustments</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"30498bb2d52bb9037b4d62480eb98b8f"</span>); <span class="cm-variable">Console</span>.<span class="cm-variable">WriteLine</span>(<span class="cm-string">"Adjustment: "</span> <span class="cm-operator">+</span> <span class="cm-variable">adjustment</span>);</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">adjustment</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/adjustments/37c0057d2bc64f2dd6a1c944dc87fbb5"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"charge"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">invoice</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/invoices/1007"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">subscription</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/subscriptions/37c0057cb105f67b6b8a1146f7b59c41"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span>37c0057d2bc64f2dd6a1c944dc87fbb5<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>invoiced<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span>Gold plan<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">accounting_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">product_code</span><span class="cm-tag cm-bracket">&gt;</span>gold<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">product_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span>plan<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">origin</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">unit_amount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>4500<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">unit_amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">quantity</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">quantity</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">discount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>450<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">discount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>354<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">total_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>4404<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">total_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>EUR<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">taxable</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">taxable</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_type</span><span class="cm-tag cm-bracket">&gt;</span>usst<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_region</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_region</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.0875<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_exempt</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_exempt</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_details</span> <span class="cm-attribute">type</span>=<span class="cm-string">"array"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span>state<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.065<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>263<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span>county<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.01<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>41<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span>city<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span>special<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_rate</span> <span class="cm-attribute">type</span>=<span class="cm-string">"float"</span><span class="cm-tag cm-bracket">&gt;</span>0.0125<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_rate</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>51<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_detail</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_details</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">start_date</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:26:26Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">start_date</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">end_date</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-09-03T16:26:26Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">end_date</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:26:26Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2016-08-03T16:26:26Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span>evenly<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">revenue_schedule_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">adjustment</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="delete-an-adjustment" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741dc0a2ba001bf5e24e","category":"59557419c0a2ba001bf5e1ab","parentDoc":null,"user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-15T23:21:38.993Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"results":{"codes":[{"code":"Status: 204 No Content","language":"xml","status":204}]},"settings":"","examples":{"codes":[{"name":"","code":"&lt;?php\n\ntry {\n  $adjustment = Recurly_Adjustment::get('626db120a84102b1809909071c701c60');\n  $adjustment-&gt;delete();\n\n  print \"Adjustment: $adjustment\";\n} catch (Recurly_NotFoundError $e) {\n  // NotFoundError if invalid uuid or already deleted\n  print \"Invalid adjustment uuid: $e\";\n}\n","language":"php"},{"language":"ruby","code":"adjustment = Recurly::Adjustment.find('945a4cb9afd64300b97b138407a51aef')\nadjustment.destroy"},{"code":"adjustment = Adjustment.get('945a4cb9afd64300b97b138407a51aef')\nadjustment.delete()","language":"python"},{"code":"var adjustment = Adjustments.Get(\"945a4cb9afd64300b97b138407a51aef\");\nadjustment.Delete(","language":"csharp"}]},"method":"delete","auth":"required","params":[{"_id":"55944f6a0c33bd0d0005964a","ref":"","in":"path","required":true,"desc":"The unique identifier for the adjustment","default":"","type":"string","name":"uuid"}],"url":"/adjustments/:uuid"},"isReference":true,"order":5,"body":"[block:callout]\n{\n  \"type\": \"success\",\n  \"title\": \"Please note\",\n  \"body\": \"An adjustment may only be deleted if it has not been invoiced.\"\n}\n[/block]","excerpt":"Delete an adjustment from an account. Only non-invoiced adjustments can be deleted.","slug":"delete-an-adjustment","type":"delete","title":"Delete Adjustment","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-delete">delete</span>Delete Adjustment</h1>
           <div marked>
            Delete an adjustment from an account. Only non-invoiced adjustments can be deleted.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>uuid<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The unique identifier for the adjustment
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div class="magic-block-callout type-success "> 
                <h3><i title="Success" class="fa fa-check-square on"></i><span>Please note</span> </h3>
                <p>An adjustment may only be deleted if it has not been invoiced.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/delete-an-adjustment" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/delete-an-adjustment/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$adjustment</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_Adjustment</span>::<span class="cm-variable">get</span>(<span class="cm-string">'626db120a84102b1809909071c701c60'</span>); <span class="cm-variable-2">$adjustment</span><span class="cm-operator">-&gt;</span><span class="cm-variable">delete</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Adjustment: </span><span class="cm-variable-2">$adjustment</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// NotFoundError if invalid uuid or already deleted</span> <span class="cm-keyword">print</span> <span class="cm-string">"Invalid adjustment uuid: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; } </span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">adjustment</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Adjustment</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'945a4cb9afd64300b97b138407a51aef'</span>) <span class="cm-variable">adjustment</span><span class="cm-operator">.</span><span class="cm-property">destroy</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">adjustment</span> = <span class="cm-variable">Adjustment</span>.<span class="cm-variable">get</span>(<span class="cm-string">'945a4cb9afd64300b97b138407a51aef'</span>) <span class="cm-variable">adjustment</span>.<span class="cm-variable">delete</span>()</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">adjustment</span> <span class="cm-operator">=</span> <span class="cm-variable">Adjustments</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"945a4cb9afd64300b97b138407a51aef"</span>); <span class="cm-variable">adjustment</span>.<span class="cm-variable">Delete</span>(</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>204<span> </span><em>No Content</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo">Status: 204 No Content</span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="create-an-accounts-billing-info-token" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e210","category":"59557419c0a2ba001bf5e1ac","parentDoc":null,"project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":["56799b95239fac0d00c7e019"],"next":{"pages":[],"description":""},"createdAt":"2015-06-17T19:47:32.787Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"name":"","code":"&lt;?php\n\ntry {\n  $billing_info = new Recurly_BillingInfo();\n  $billing_info-&gt;account_code = 'b6f5783';\n  $billing_info-&gt;token_id = '7z6furn4jvb9'; // From Recurly.js\n  $billing_info-&gt;create();\n\n  print \"Billing Info: $billing_info\";\n} catch (Recurly_NotFoundError $e) {\n  // Could not find account or token is invalid or expired\n  print \"Not Found: $e\";\n}","language":"php"},{"language":"ruby","code":"account = Recurly::Account.find('1')\naccount.billing_info = {\n  token_id: 'TOKEN_ID'\n}\naccount.billing_info.save!"},{"code":"account = Account.get('1')\nbilling_info = account.billing_info\nbilling_info.token_id = 'TOKEN_ID'\naccount.update_billing_info(billing_info)","language":"python"},{"code":"var account = Accounts.Get(\"1\");\nvar info = new BillingInfo(account);\ninfo.TokenId = \"TOKEN_ID\";\ninfo.Create();","language":"csharp"},{"language":"xml","code":"&lt;billing_info&gt;\n  &lt;token_id&gt;TOKEN_ID&lt;/token_id&gt;\n&lt;/billing_info&gt;"}]},"method":"post","results":{"codes":[{"language":"xml","status":201,"name":"","code":"&lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\" type=\"credit_card\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company nil=\"nil\"&gt;&lt;/company&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"&gt;&lt;/address2&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;phone nil=\"nil\"&gt;&lt;/phone&gt;\n  &lt;vat_number&gt;US1234567890&lt;/vat_number&gt;\n  &lt;ip_address&gt;127.0.0.1&lt;/ip_address&gt;\n  &lt;ip_address_country&gt;US&lt;/ip_address_country&gt;\n  &lt;card_type&gt;Visa&lt;/card_type&gt;\n  &lt;year type=\"integer\"&gt;2019&lt;/year&gt;\n  &lt;month type=\"integer\"&gt;11&lt;/month&gt;\n  &lt;first_six&gt;411111&lt;/first_six&gt;\n  &lt;last_four&gt;1111&lt;/last_four&gt;\n  &lt;updated_at type=\"datetime\"&gt;2017-02-17T15:38:53Z&lt;/updated_at&gt;\n&lt;/billing_info&gt;"},{"status":404,"language":"xml","code":"&lt;error&gt;\n  &lt;symbol&gt;token_invalid&lt;/symbol&gt;\n  &lt;description&gt;Token is either invalid or expired&lt;/description&gt;\n&lt;/error&gt;"}]},"settings":"","auth":"required","params":[{"_id":"55944f99ccc3052300569885","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"5581ced4a5474a0d00d946a5","ref":"","in":"body","required":true,"desc":"A token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token)","default":"","type":"string","name":"token_id"},{"_id":"56d0e86f40d36e1d00bc14c9","ref":"","in":"body","required":false,"desc":"Currency in which invoices will be posted. Only applicable if this account is enrolled in a plan has a different currency than your site's default.","default":"","type":"string","name":"currency"}],"url":"/accounts/:account_code/billing_info"},"isReference":true,"order":0,"body":"","excerpt":"Creates an account's Billing Information using a [token generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token). Returns the account's created Billing Information.","slug":"create-an-accounts-billing-info-token","type":"post","title":"Create Account's Billing Info (Token)","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-post">post</span>Create Account's Billing Info (Token)</h1>
           <div marked>
            Creates an account's Billing Information using a [token generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token). Returns the account's created Billing Information.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>token_id<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 A token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token)
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>currency<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Currency in which invoices will be posted. Only applicable if this account is enrolled in a plan has a different currency than your site's default.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/create-an-accounts-billing-info-token" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/create-an-accounts-billing-info-token/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
              <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
               <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">XML</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$billing_info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Recurly_BillingInfo</span>(); <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">account_code</span> <span class="cm-operator">=</span> <span class="cm-string">'b6f5783'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">token_id</span> <span class="cm-operator">=</span> <span class="cm-string">'7z6furn4jvb9'</span>; <span class="cm-comment">// From Recurly.js</span> <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">create</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Billing Info: </span><span class="cm-variable-2">$billing_info</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// Could not find account or token is invalid or expired</span> <span class="cm-keyword">print</span> <span class="cm-string">"Not Found: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span> <span class="cm-operator">=</span> { <span class="cm-atom">token_id:</span> <span class="cm-string">'TOKEN_ID'</span> } <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span><span class="cm-operator">.</span><span class="cm-property">save!</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">billing_info</span> = <span class="cm-variable">account</span>.<span class="cm-variable">billing_info</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">token_id</span> = <span class="cm-string">'TOKEN_ID'</span> <span class="cm-variable">account</span>.<span class="cm-variable">update_billing_info</span>(<span class="cm-variable">billing_info</span>)</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">BillingInfo</span>(<span class="cm-variable">account</span>); <span class="cm-variable">info</span>.<span class="cm-variable">TokenId</span> <span class="cm-operator">=</span> <span class="cm-string">"TOKEN_ID"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">Create</span>();</span></code></pre>
              <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">token_id</span><span class="cm-tag cm-bracket">&gt;</span>TOKEN_ID<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">token_id</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>201<span> </span><em>Created</em></a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}"><span class="status-icon status-icon-error"></span>404<span> </span><em>Not Found</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"credit_card"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span><span class="cm-tag cm-bracket">&gt;</span>US1234567890<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">vat_number</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span>127.0.0.1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address_country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address_country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">card_type</span><span class="cm-tag cm-bracket">&gt;</span>Visa<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">card_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">year</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>2019<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">year</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">month</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>11<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">month</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_six</span><span class="cm-tag cm-bracket">&gt;</span>411111<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_six</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span>1111<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2017-02-17T15:38:53Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">error</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">symbol</span><span class="cm-tag cm-bracket">&gt;</span>token_invalid<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">symbol</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span>Token is either invalid or expired<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">error</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="create-an-accounts-billing-info-credit-card" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e211","category":"59557419c0a2ba001bf5e1ac","parentDoc":null,"user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":["55d336260168850d0073f054","562944f61a92870d0002c301","56bb59bae59a312b00a15bac","57ed6ed3c4f64e17004e535d"],"next":{"pages":[],"description":""},"createdAt":"2015-06-17T19:55:06.712Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"code":"&lt;?php\n\ntry {\n  $billing_info = new Recurly_BillingInfo();\n  $billing_info-&gt;account_code = 'b6f5783';\n  $billing_info-&gt;first_name = 'Verena';\n  $billing_info-&gt;last_name = 'Example';\n  $billing_info-&gt;number = '4111-1111-1111-1111';\n  $billing_info-&gt;verification_value = '123';\n  $billing_info-&gt;month = 11;\n  $billing_info-&gt;year = 2017;\n  $billing_info-&gt;create();\n\n  print \"Billing Info: $billing_info\";\n} catch (Recurly_ValidationError $e) {\n  // The data or card are invalid\n  print \"Invalid data or card: $e\";\n} catch (Recurly_NotFoundError $e) {\n  // Could not find account\n  print \"Not Found: $e\";\n}","language":"php","name":""},{"code":"account = Recurly::Account.find('1')\naccount.billing_info = {\n  :first_name         =&gt; 'Verena',\n  :last_name          =&gt; 'Example',\n  :number             =&gt; '4111-1111-1111-1111',\n  :verification_value =&gt; '123',\n  :month              =&gt; 11,\n  :year               =&gt; 2015\n}\naccount.billing_info.save!","language":"ruby"},{"code":"account = Account.get('1')\nbilling_info = account.billing_info\nbilling_info.first_name = 'Verena'\nbilling_info.last_name = 'Example'\nbilling_info.number = '4111-1111-1111-1111'\nbilling_info.verification_value = '123'\nbilling_info.month = 11\nbilling_info.year = 2015\naccount.update_billing_info(billing_info)","language":"python"},{"code":"var account = Accounts.Get(\"1\");\nvar info = new BillingInfo(account);\ninfo.FirstName = \"Verana\";\ninfo.LastName = \"Example\";\ninfo.CreditCardNumber = \"4111-1111-1111-1111\";\ninfo.VerificationValue = \"123\";\ninfo.ExpirationMonth = 11;\ninfo.ExpirationYear = 2015;\ninfo.Create();","language":"csharp"},{"code":"&lt;billing_info&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"&gt;&lt;/address2&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;number&gt;4111-1111-1111-1111&lt;/number&gt;\n  &lt;verification_value&gt;123&lt;/verification_value&gt;\n  &lt;month&gt;11&lt;/month&gt;\n  &lt;year&gt;2019&lt;/year&gt;\n  &lt;ip_address&gt;127.0.0.1&lt;/ip_address&gt;\n&lt;/billing_info&gt;","language":"xml"}]},"method":"post","results":{"codes":[{"name":"","code":"&lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\" type=\"credit_card\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company nil=\"nil\"/&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"/&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;phone nil=\"nil\"/&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;ip_address&gt;127.0.0.1&lt;/ip_address&gt;\n  &lt;ip_address_country nil=\"nil\"/&gt;\n  &lt;card_type&gt;Visa&lt;/card_type&gt;\n  &lt;year type=\"integer\"&gt;2019&lt;/year&gt;\n  &lt;month type=\"integer\"&gt;11&lt;/month&gt;\n  &lt;first_six&gt;411111&lt;/first_six&gt;\n  &lt;last_four&gt;1111&lt;/last_four&gt;\n  &lt;updated_at type=\"datetime\"&gt;2017-02-17T15:38:53Z&lt;/updated_at&gt;\n&lt;/billing_info&gt;","language":"xml","status":201},{"status":422,"language":"xml","code":"&lt;errors&gt;\n  &lt;transaction_error&gt;\n    &lt;error_code&gt;declined&lt;/error_code&gt;\n    &lt;error_category&gt;soft&lt;/error_category&gt;\n    &lt;merchant_message&gt;The customer's bank has declined their card. The customer will need to contact their bank to learn the cause.&lt;/merchant_message&gt;\n    &lt;customer_message&gt;Your transaction was declined. Please use a different card or contact your bank.&lt;/customer_message&gt;\n    &lt;gateway_error_code nil=\"nil\"/&gt;\n  &lt;/transaction_error&gt;\n  &lt;error field=\"billing_info.base\" symbol=\"declined\"&gt;Your transaction was declined. Please use a different card or contact your bank.&lt;/error&gt;\n  &lt;transaction href=\"https://your-subdomain.recurly.com/v2/transactions/3c4293ccd7f7bce494f85e4d48beb22e\" type=\"credit_card\"&gt;\n    &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n    &lt;uuid&gt;3c4293ccd7f7bce494f85e4d48beb22e&lt;/uuid&gt;\n    &lt;action&gt;verify&lt;/action&gt;\n    &lt;amount_in_cents type=\"integer\"&gt;0&lt;/amount_in_cents&gt;\n    &lt;tax_in_cents type=\"integer\"&gt;0&lt;/tax_in_cents&gt;\n    &lt;currency&gt;USD&lt;/currency&gt;\n    &lt;status&gt;declined&lt;/status&gt;\n    &lt;payment_method&gt;credit_card&lt;/payment_method&gt;\n    &lt;reference&gt;676848&lt;/reference&gt;\n    &lt;source&gt;billing_info&lt;/source&gt;\n    &lt;recurring type=\"boolean\"&gt;false&lt;/recurring&gt;\n    &lt;test type=\"boolean\"&gt;true&lt;/test&gt;\n    &lt;voidable type=\"boolean\"&gt;false&lt;/voidable&gt;\n    &lt;refundable type=\"boolean\"&gt;false&lt;/refundable&gt;\n    &lt;ip_address&gt;127.0.0.1&lt;/ip_address&gt;\n    &lt;transaction_error&gt;\n      &lt;error_code&gt;declined&lt;/error_code&gt;\n      &lt;error_category&gt;soft&lt;/error_category&gt;\n      &lt;merchant_message&gt;The customer's bank has declined their card. The customer will need to contact their bank to learn the cause.&lt;/merchant_message&gt;\n      &lt;customer_message&gt;Your transaction was declined. Please use a different card or contact your bank.&lt;/customer_message&gt;\n      &lt;gateway_error_code nil=\"nil\"/&gt;\n    &lt;/transaction_error&gt;\n    &lt;cvv_result code=\"\" nil=\"nil\"/&gt;\n    &lt;avs_result code=\"\" nil=\"nil\"/&gt;\n    &lt;avs_result_street nil=\"nil\"/&gt;\n    &lt;avs_result_postal nil=\"nil\"/&gt;\n    &lt;created_at type=\"datetime\"&gt;2017-03-15T21:03:40Z&lt;/created_at&gt;\n    &lt;updated_at type=\"datetime\"&gt;2017-03-15T21:03:40Z&lt;/updated_at&gt;\n    &lt;details&gt;\n      &lt;account&gt;\n        &lt;account_code&gt;1&lt;/account_code&gt;\n        &lt;first_name&gt;Verena&lt;/first_name&gt;\n        &lt;last_name&gt;Example&lt;/last_name&gt;\n        &lt;company&gt;New Company Name&lt;/company&gt;\n        &lt;email&gt;verena@example.com&lt;/email&gt;\n        &lt;billing_info type=\"credit_card\"&gt;\n          &lt;first_name&gt;Verena&lt;/first_name&gt;\n          &lt;last_name&gt;Example&lt;/last_name&gt;\n          &lt;address1&gt;123 Main St.&lt;/address1&gt;\n          &lt;address2 nil=\"nil\"/&gt;\n          &lt;city&gt;San Francisco&lt;/city&gt;\n          &lt;state&gt;CA&lt;/state&gt;\n          &lt;zip&gt;94105&lt;/zip&gt;\n          &lt;country&gt;US&lt;/country&gt;\n          &lt;phone nil=\"nil\"/&gt;\n          &lt;vat_number nil=\"nil\"/&gt;\n          &lt;card_type&gt;Visa&lt;/card_type&gt;\n          &lt;year type=\"integer\"&gt;2019&lt;/year&gt;\n          &lt;month type=\"integer\"&gt;11&lt;/month&gt;\n          &lt;first_six&gt;400000&lt;/first_six&gt;\n          &lt;last_four&gt;0002&lt;/last_four&gt;\n        &lt;/billing_info&gt;\n      &lt;/account&gt;\n    &lt;/details&gt;\n  &lt;/transaction&gt;\n&lt;/errors&gt;"}]},"settings":"","auth":"required","params":[{"_id":"55944fab5c9eaa2300a8633c","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"5581d09a8625220d00429e4d","ref":"","in":"body","required":true,"desc":"First name","default":"","type":"string","name":"first_name"},{"_id":"5581d09a8625220d00429e4c","ref":"","in":"body","required":true,"desc":"Last name","default":"","type":"string","name":"last_name"},{"_id":"5581d09a8625220d00429e42","ref":"","in":"body","required":true,"desc":"Credit card number, spaces and dashes are accepted","default":"","type":"string","name":"number"},{"_id":"5581d09a8625220d00429e41","ref":"","in":"body","required":true,"desc":"Expiration month","default":"","type":"string","name":"month"},{"_id":"5581d09a8625220d00429e40","ref":"","in":"body","required":true,"desc":"Expiration year","default":"","type":"string","name":"year"},{"_id":"5581d09a8625220d00429e4b","ref":"","in":"body","required":false,"desc":"Address line 1, recommended for address validation","default":"","type":"string","name":"address1"},{"_id":"5581d09a8625220d00429e4a","ref":"","in":"body","required":false,"desc":"Address line 2.","default":"","type":"string","name":"address2"},{"_id":"5581d09a8625220d00429e49","ref":"","in":"body","required":false,"desc":"City","default":"","type":"string","name":"city"},{"_id":"5581d09a8625220d00429e48","ref":"","in":"body","required":false,"desc":"State","default":"","type":"string","name":"state"},{"_id":"5581d09a8625220d00429e47","ref":"","in":"body","required":false,"desc":"Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements) **STRONGLY RECOMMENDED**","default":"","type":"string","name":"country"},{"_id":"5581d09a8625220d00429e46","ref":"","in":"body","required":false,"desc":"Zip or postal code, recommended for address validation","default":"","type":"string","name":"zip"},{"_id":"5581d09a8625220d00429e45","ref":"","in":"body","required":false,"desc":"Phone number","default":"","type":"string","name":"phone"},{"_id":"5581d09a8625220d00429e44","ref":"","in":"body","required":false,"desc":"Customer's VAT Number","default":"","type":"string","name":"vat_number"},{"_id":"56c3c1ce70187b17005f4395","ref":"","in":"body","required":false,"desc":"Currency in which invoices will be posted. Only applicable if this account is enrolled in a plan has a different currency than your site's default.","default":"","type":"string","name":"currency"},{"_id":"5581d09a8625220d00429e3f","ref":"","in":"body","required":false,"desc":"Security code or CVV, 3-4 digits **STRONGLY RECOMMENDED**","default":"","type":"string","name":"verification_value"},{"_id":"5581d09a8625220d00429e43","ref":"","in":"body","required":false,"desc":"Customer's IPv4 address when updating their Billing Information **STRONGLY RECOMMENDED**","default":"","type":"string","name":"ip_address"}],"url":"/accounts/:account_code/billing_info"},"isReference":true,"order":1,"body":"Instead of using a token generated by Recurly.js, you can instead submit full credit card and address information when creating Billing Information.\n\nWhen Billing Information is submitted, it is only saved if valid. If the account has a past due invoice, the outstanding balance will be collected to validate the Billing Information.\n\nIf you want to create an account at the same time, you should use the [Account API end-point](https://docs.recurly.com/api/accounts#create-account) instead and include Billing Information with your request.\n\nThe required address fields will correspond to the **address requirements** configured for your site.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Recurly strongly recommends using a token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token) rather than directly handling your customer's credit card details.\",\n  \"title\": \"Please note\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"This API end-point may be used to import Billing Information without security codes (CVV). Recurly recommends requiring CVV from your customers when collecting new or updated Billing Information.\",\n  \"title\": \"Please note\"\n}\n[/block]","excerpt":"Creates the account's Billing Information.","slug":"create-an-accounts-billing-info-credit-card","type":"post","title":"Create Account's Billing Info (Credit Card)","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-post">post</span>Create Account's Billing Info (Credit Card)</h1>
           <div marked>
            Creates the account's Billing Information.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>first_name<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 First name
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>last_name<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Last name
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>number<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Credit card number, spaces and dashes are accepted
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>month<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Expiration month
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>year<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Expiration year
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address1<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 1, recommended for address validation
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address2<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 2.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>city<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 City
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>state<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 State
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>country<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements) **STRONGLY RECOMMENDED**
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>zip<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Zip or postal code, recommended for address validation
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>phone<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Phone number
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>vat_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Customer's VAT Number
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>currency<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Currency in which invoices will be posted. Only applicable if this account is enrolled in a plan has a different currency than your site's default.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>verification_value<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Security code or CVV, 3-4 digits **STRONGLY RECOMMENDED**
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>ip_address<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Customer's IPv4 address when updating their Billing Information **STRONGLY RECOMMENDED**
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Instead of using a token generated by Recurly.js, you can instead submit full credit card and address information when creating Billing Information.</p> 
                 <p>When Billing Information is submitted, it is only saved if valid. If the account has a past due invoice, the outstanding balance will be collected to validate the Billing Information.</p> 
                 <p>If you want to create an account at the same time, you should use the <a href="https://docs.recurly.com/api/accounts#create-account">Account API end-point</a> instead and include Billing Information with your request.</p> 
                 <p>The required address fields will correspond to the <strong>address requirements</strong> configured for your site.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-warning "> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i><span>Please note</span> </h3>
                <p>Recurly strongly recommends using a token <a href="https://docs.recurly.com/js/#getting-a-token">generated by Recurly.js</a> rather than directly handling your customer's credit card details.</p> 
               </div> 
               <div class="magic-block-callout type-warning "> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i><span>Please note</span> </h3>
                <p>This API end-point may be used to import Billing Information without security codes (CVV). Recurly recommends requiring CVV from your customers when collecting new or updated Billing Information.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/create-an-accounts-billing-info-credit-card" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/create-an-accounts-billing-info-credit-card/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
              <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
               <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">XML</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$billing_info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Recurly_BillingInfo</span>(); <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">account_code</span> <span class="cm-operator">=</span> <span class="cm-string">'b6f5783'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">first_name</span> <span class="cm-operator">=</span> <span class="cm-string">'Verena'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">last_name</span> <span class="cm-operator">=</span> <span class="cm-string">'Example'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">number</span> <span class="cm-operator">=</span> <span class="cm-string">'4111-1111-1111-1111'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">verification_value</span> <span class="cm-operator">=</span> <span class="cm-string">'123'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">month</span> <span class="cm-operator">=</span> <span class="cm-number">11</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">year</span> <span class="cm-operator">=</span> <span class="cm-number">2017</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">create</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Billing Info: </span><span class="cm-variable-2">$billing_info</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_ValidationError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// The data or card are invalid</span> <span class="cm-keyword">print</span> <span class="cm-string">"Invalid data or card: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// Could not find account</span> <span class="cm-keyword">print</span> <span class="cm-string">"Not Found: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span> <span class="cm-operator">=</span> { <span class="cm-atom">:first_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Verena'</span>, <span class="cm-atom">:last_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Example'</span>, <span class="cm-atom">:number</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'4111-1111-1111-1111'</span>, <span class="cm-atom">:verification_value</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'123'</span>, <span class="cm-atom">:month</span> <span class="cm-operator">=&gt;</span> <span class="cm-number">11</span>, <span class="cm-atom">:year</span> <span class="cm-operator">=&gt;</span> <span class="cm-number">2015</span> } <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span><span class="cm-operator">.</span><span class="cm-property">save!</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">billing_info</span> = <span class="cm-variable">account</span>.<span class="cm-variable">billing_info</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">first_name</span> = <span class="cm-string">'Verena'</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">last_name</span> = <span class="cm-string">'Example'</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">number</span> = <span class="cm-string">'4111-1111-1111-1111'</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">verification_value</span> = <span class="cm-string">'123'</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">month</span> = <span class="cm-number">11</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">year</span> = <span class="cm-number">2015</span> <span class="cm-variable">account</span>.<span class="cm-variable">update_billing_info</span>(<span class="cm-variable">billing_info</span>)</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">BillingInfo</span>(<span class="cm-variable">account</span>); <span class="cm-variable">info</span>.<span class="cm-variable">FirstName</span> <span class="cm-operator">=</span> <span class="cm-string">"Verana"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">LastName</span> <span class="cm-operator">=</span> <span class="cm-string">"Example"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">CreditCardNumber</span> <span class="cm-operator">=</span> <span class="cm-string">"4111-1111-1111-1111"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">VerificationValue</span> <span class="cm-operator">=</span> <span class="cm-string">"123"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">ExpirationMonth</span> <span class="cm-operator">=</span> <span class="cm-number">11</span>; <span class="cm-variable">info</span>.<span class="cm-variable">ExpirationYear</span> <span class="cm-operator">=</span> <span class="cm-number">2015</span>; <span class="cm-variable">info</span>.<span class="cm-variable">Create</span>();</span></code></pre>
              <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">number</span><span class="cm-tag cm-bracket">&gt;</span>4111-1111-1111-1111<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">number</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">verification_value</span><span class="cm-tag cm-bracket">&gt;</span>123<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">verification_value</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">month</span><span class="cm-tag cm-bracket">&gt;</span>11<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">month</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">year</span><span class="cm-tag cm-bracket">&gt;</span>2019<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">year</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span>127.0.0.1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>201<span> </span><em>Created</em></a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}"><span class="status-icon status-icon-error"></span>422<span> </span><em>Unprocessable Entity</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"credit_card"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span>127.0.0.1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address_country</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">card_type</span><span class="cm-tag cm-bracket">&gt;</span>Visa<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">card_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">year</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>2019<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">year</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">month</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>11<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">month</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_six</span><span class="cm-tag cm-bracket">&gt;</span>411111<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_six</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span>1111<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2017-02-17T15:38:53Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">errors</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">transaction_error</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">error_code</span><span class="cm-tag cm-bracket">&gt;</span>declined<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">error_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">error_category</span><span class="cm-tag cm-bracket">&gt;</span>soft<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">error_category</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">merchant_message</span><span class="cm-tag cm-bracket">&gt;</span>The customer's bank has declined their card. The customer will need to contact their bank to learn the cause.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">merchant_message</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">customer_message</span><span class="cm-tag cm-bracket">&gt;</span>Your transaction was declined. Please use a different card or contact your bank.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">customer_message</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">gateway_error_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">transaction_error</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">error</span> <span class="cm-attribute">field</span>=<span class="cm-string">"billing_info.base"</span> <span class="cm-attribute">symbol</span>=<span class="cm-string">"declined"</span><span class="cm-tag cm-bracket">&gt;</span>Your transaction was declined. Please use a different card or contact your bank.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">error</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">transaction</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/transactions/3c4293ccd7f7bce494f85e4d48beb22e"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"credit_card"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span>3c4293ccd7f7bce494f85e4d48beb22e<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">uuid</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">action</span><span class="cm-tag cm-bracket">&gt;</span>verify<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">action</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">amount_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">amount_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">tax_in_cents</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>0<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">tax_in_cents</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span>USD<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">currency</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">status</span><span class="cm-tag cm-bracket">&gt;</span>declined<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">status</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">payment_method</span><span class="cm-tag cm-bracket">&gt;</span>credit_card<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">payment_method</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">reference</span><span class="cm-tag cm-bracket">&gt;</span>676848<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">reference</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">source</span><span class="cm-tag cm-bracket">&gt;</span>billing_info<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">source</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">recurring</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">recurring</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">test</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>true<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">test</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">voidable</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">voidable</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">refundable</span> <span class="cm-attribute">type</span>=<span class="cm-string">"boolean"</span><span class="cm-tag cm-bracket">&gt;</span>false<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">refundable</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span>127.0.0.1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">transaction_error</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">error_code</span><span class="cm-tag cm-bracket">&gt;</span>declined<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">error_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">error_category</span><span class="cm-tag cm-bracket">&gt;</span>soft<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">error_category</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">merchant_message</span><span class="cm-tag cm-bracket">&gt;</span>The customer's bank has declined their card. The customer will need to contact their bank to learn the cause.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">merchant_message</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">customer_message</span><span class="cm-tag cm-bracket">&gt;</span>Your transaction was declined. Please use a different card or contact your bank.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">customer_message</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">gateway_error_code</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">transaction_error</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">cvv_result</span> <span class="cm-attribute">code</span>=<span class="cm-string">""</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">avs_result</span> <span class="cm-attribute">code</span>=<span class="cm-string">""</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">avs_result_street</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">avs_result_postal</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">created_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2017-03-15T21:03:40Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">created_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2017-03-15T21:03:40Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">details</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span>1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_code</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span>New Company Name<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span>verena@example.com<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">email</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">type</span>=<span class="cm-string">"credit_card"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">card_type</span><span class="cm-tag cm-bracket">&gt;</span>Visa<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">card_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">year</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>2019<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">year</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">month</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>11<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">month</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_six</span><span class="cm-tag cm-bracket">&gt;</span>400000<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_six</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span>0002<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">details</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">transaction</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">errors</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="create-an-accounts-billing-info-bank-account" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e212","category":"59557419c0a2ba001bf5e1ac","user":"55648cf93b87582b003ab8b1","project":"555fbba928249c1900618a82","parentDoc":null,"version":"59557419c0a2ba001bf5e1a3","updates":["56ec2580df213e1700f77836"],"next":{"pages":[],"description":""},"createdAt":"2015-06-17T20:00:48.689Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"language":"php","code":"&lt;?php\n\ntry {\n  $billing_info = new Recurly_BillingInfo();\n  $billing_info-&gt;account_code = 'b6f5783';\n  $billing_info-&gt;name_on_account = 'Acme Inc.';\n  $billing_info-&gt;routing_number = '065400137';\n  $billing_info-&gt;account_number = '4444000000005555';\n  $billing_info-&gt;account_type = 'checking';\n  $billing_info-&gt;address1 = '123 Main St.';\n  $billing_info-&gt;city = 'San Francisco';\n  $billing_info-&gt;state ='CA';\n  $billing_info-&gt;country = 'US';\n  $billing_info-&gt;zip = '94105';\n  $billing_info-&gt;create();\n\n  print \"Billing Info: $billing_info\";\n} catch (Recurly_ValidationError $e) {\n  // The data or bank account are invalid\n  print \"Invalid data or card: $e\";\n} catch (Recurly_NotFoundError $e) {\n  // Could not find account\n  print \"Account Not Found: $e\";\n}","name":""},{"language":"ruby","code":"account = Recurly::Account.find('1')\naccount.billing_info = {\n  name_on_account: 'Acme, Inc.',\n  routing_number: '065400137',\n  account_number: '4444000000005555',\n  address1: '123 Main St.',\n  city: 'San Francisco',\n  state: 'CA',\n  country: 'US',\n  zip: '94105'\n}\naccount.billing_info.save!"},{"language":"python","code":"account = Account.get('1')\nbilling_info = recurly.BillingInfo(\n  name_on_account = 'Acme, Inc.',\n  routing_number = '065400137',\n  account_number = '4444000000005555',\n  account_type = 'checking',\n  address1 = '123 Main St.',\n  city = 'San Francisco',\n  state ='CA',\n  country = 'US',\n  zip = '94105'\n  )\naccount.update_billing_info(billing_info)"},{"language":"csharp","code":"var account = Accounts.Get(\"1\");\nvar info = new BillingInfo(account);\ninfo.NameOnAccount = \"Acme, Inc.\";\ninfo.RoutingNumber = \"065400137\";\ninfo.AccountNumber = \"4444000000005555\";\ninfo.AccountType = BillingInfo.BankAccountType.Checking;\ninfo.Address1 = \"123 Main St.\";\ninfo.City = \"San Francisco\";\ninfo.State = \"CA\";\ninfo.Country = \"US\";\ninfo.PostalCode = \"94105\";\ninfo.Create();"},{"language":"xml","code":"&lt;billing_info&gt;\n  &lt;name_on_account&gt;Acme, Inc.&lt;/name_on_account&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"&gt;&lt;/address2&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;routing_number&gt;065400137&lt;/routing_number&gt;\n  &lt;account_number&gt;4444000000005555&lt;/account_number&gt;\n  &lt;account_type&gt;checking&lt;/account_type&gt;\n  &lt;ip_address&gt;127.0.0.1&lt;/ip_address&gt;\n&lt;/billing_info&gt;"}]},"method":"post","results":{"codes":[{"code":"&lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\" type=\"bank_account\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;name_on_account&gt;Acme, Inc.&lt;/name_on_account&gt;\n  &lt;first_name nil=\"nil\"&gt;&lt;/first_name&gt;\n  &lt;last_name nil=\"nil\"&gt;&lt;/last_name&gt;\n  &lt;company nil=\"nil\"&gt;&lt;/company&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"&gt;&lt;/address2&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;phone&gt;&lt;/phone&gt;\n  &lt;vat_number&gt;&lt;/vat_number&gt;\n  &lt;ip_address&gt;127.0.0.1&lt;/ip_address&gt;\n  &lt;ip_address_country&gt;US&lt;/ip_address_country&gt;\n  &lt;account_type&gt;checking&lt;/account_type&gt;\n  &lt;last_four&gt;5555&lt;/last_four&gt;\n  &lt;routing_number&gt;065400137&lt;/routing_number&gt;\n  &lt;updated_at type=\"datetime\"&gt;2017-02-17T15:38:53Z&lt;/updated_at&gt;\n&lt;/billing_info&gt;","name":"","status":201,"language":"xml"},{"status":422,"language":"xml","code":"&lt;errors&gt;\n  &lt;error field=\"billing_info.routing_number\" symbol=\"invalid\"&gt;is invalid&lt;/error&gt;\n&lt;/errors&gt;"}]},"settings":"","auth":"required","params":[{"_id":"55944fbb0c33bd0d0005964b","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"5581d1f08625220d00429e6d","ref":"","in":"body","required":true,"desc":"The name associated with the account. This may be a person's full name or a business name. This field must be 1 to 50 characters and can include: letters digits space . ' &amp; , -","default":"","type":"string","name":"name_on_account"},{"_id":"5581d1f08625220d00429e63","ref":"","in":"body","required":true,"desc":"Must be a real U.S. bank account routing number. All routing numbers are 9 digits.","default":"","type":"int","name":"routing_number"},{"_id":"5581d1f08625220d00429e62","ref":"","in":"body","required":true,"desc":"Bank account number between 4 and 17 digits. We do not validate this number until the first transaction, so we recommend you have the customer confirm their account number.","default":"","type":"int","name":"account_number"},{"_id":"5581d1f08625220d00429e61","ref":"","in":"body","required":true,"desc":"Either 'checking' or 'savings'","default":"","type":"string","name":"account_type"},{"_id":"5581d1f08625220d00429e6c","ref":"","in":"body","required":false,"desc":"Address line 1, recommended for address validation. This field has a 50 character max and can include: letters digits space . # / , -","default":"","type":"string","name":"address1"},{"_id":"5581d1f08625220d00429e6b","ref":"","in":"body","required":false,"desc":"Address line 2, this field has a 50 character max and can include: letters digits space . # / , -","default":"","type":"string","name":"address2"},{"_id":"5581d1f08625220d00429e6a","ref":"","in":"body","required":false,"desc":"City, this field has a 50 character max and can include: letters digits space . , -","default":"","type":"string","name":"city"},{"_id":"5581d1f08625220d00429e69","ref":"","in":"body","required":false,"desc":"State, this field has a 2 character max and can be lowercase or uppercase.","default":"","type":"string","name":"state"},{"_id":"5581d1f08625220d00429e68","ref":"","in":"body","required":false,"desc":"Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements). **STRONGLY RECOMMENDED**","default":"","type":"string","name":"country"},{"_id":"5581d1f08625220d00429e67","ref":"","in":"body","required":false,"desc":"Zip or postal code, recommended for address validation. This field can be just 5 digits or can have an optional additional 4 digits separated by a hyphen (e.g. 12345-6789).","default":"","type":"string","name":"zip"},{"_id":"5581d1f08625220d00429e66","ref":"","in":"body","required":false,"desc":"Phone number, this field can be 10 digits.","default":"","type":"string","name":"phone"},{"_id":"5581d1f08625220d00429e65","ref":"","in":"body","required":false,"desc":"Customer's VAT Number","default":"","type":"string","name":"vat_number"},{"_id":"5581d1f08625220d00429e64","ref":"","in":"body","required":false,"desc":"Customer's IPv4 address when updating their Billing Information **STRONGLY RECOMMENDED**","default":"","type":"string","name":"ip_address"}],"url":"/accounts/:account_code/billing_info"},"isReference":true,"order":2,"body":"Instead of using a token generated by Recurly.js, you can instead submit full bank account and address information when creating Billing Information.\n\nWhen Billing Information is submitted, it is only saved if the required fields are provided and they meet the field validation requirements. If the account has a past due invoice, the outstanding balance will be collected when the Billing Information is updated.\n\nIf you want to create an account at the same time, you should use the [Account API end-point](https://docs.recurly.com/api/accounts#create-account) instead and include Billing Information with your request.\n\nThe required address fields will correspond to the **address requirements** configured for your site.\nIf you need to set a back dated subscription authorziation date for the NACHA three year re-authorization rule, do so on the Create Subscription call using the \"bank_account_authorized_at\" attribute.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"Please note\",\n  \"body\": \"Recurly strongly recommends using a token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token) rather than directly handling your customer's bank account details.\"\n}\n[/block]","excerpt":"Creates the account's Billing Information with Bank Account details. You will need to have the ACH feature on your site for this call to work.","slug":"create-an-accounts-billing-info-bank-account","type":"post","title":"Create Account's Billing Info (Bank Account)","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-post">post</span>Create Account's Billing Info (Bank Account)</h1>
           <div marked>
            Creates the account's Billing Information with Bank Account details. You will need to have the ACH feature on your site for this call to work.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>name_on_account<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The name associated with the account. This may be a person's full name or a business name. This field must be 1 to 50 characters and can include: letters digits space . ' &amp; , -
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>routing_number<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Must be a real U.S. bank account routing number. All routing numbers are 9 digits.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>account_number<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Bank account number between 4 and 17 digits. We do not validate this number until the first transaction, so we recommend you have the customer confirm their account number.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>account_type<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Either 'checking' or 'savings'
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address1<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 1, recommended for address validation. This field has a 50 character max and can include: letters digits space . # / , -
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address2<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 2, this field has a 50 character max and can include: letters digits space . # / , -
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>city<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 City, this field has a 50 character max and can include: letters digits space . , -
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>state<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 State, this field has a 2 character max and can be lowercase or uppercase.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>country<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements). **STRONGLY RECOMMENDED**
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>zip<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Zip or postal code, recommended for address validation. This field can be just 5 digits or can have an optional additional 4 digits separated by a hyphen (e.g. 12345-6789).
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>phone<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Phone number, this field can be 10 digits.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>vat_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Customer's VAT Number
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>ip_address<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Customer's IPv4 address when updating their Billing Information **STRONGLY RECOMMENDED**
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Instead of using a token generated by Recurly.js, you can instead submit full bank account and address information when creating Billing Information.</p> 
                 <p>When Billing Information is submitted, it is only saved if the required fields are provided and they meet the field validation requirements. If the account has a past due invoice, the outstanding balance will be collected when the Billing Information is updated.</p> 
                 <p>If you want to create an account at the same time, you should use the <a href="https://docs.recurly.com/api/accounts#create-account">Account API end-point</a> instead and include Billing Information with your request.</p> 
                 <p>The required address fields will correspond to the <strong>address requirements</strong> configured for your site.<br>If you need to set a back dated subscription authorziation date for the NACHA three year re-authorization rule, do so on the Create Subscription call using the "bank_account_authorized_at" attribute.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-warning "> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i><span>Please note</span> </h3>
                <p>Recurly strongly recommends using a token <a href="https://docs.recurly.com/js/#getting-a-token">generated by Recurly.js</a> rather than directly handling your customer's bank account details.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/create-an-accounts-billing-info-bank-account" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/create-an-accounts-billing-info-bank-account/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
              <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
               <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">XML</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$billing_info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Recurly_BillingInfo</span>(); <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">account_code</span> <span class="cm-operator">=</span> <span class="cm-string">'b6f5783'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">name_on_account</span> <span class="cm-operator">=</span> <span class="cm-string">'Acme Inc.'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">routing_number</span> <span class="cm-operator">=</span> <span class="cm-string">'065400137'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">account_number</span> <span class="cm-operator">=</span> <span class="cm-string">'4444000000005555'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">account_type</span> <span class="cm-operator">=</span> <span class="cm-string">'checking'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">address1</span> <span class="cm-operator">=</span> <span class="cm-string">'123 Main St.'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">city</span> <span class="cm-operator">=</span> <span class="cm-string">'San Francisco'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">state</span> <span class="cm-operator">=</span><span class="cm-string">'CA'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">country</span> <span class="cm-operator">=</span> <span class="cm-string">'US'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">zip</span> <span class="cm-operator">=</span> <span class="cm-string">'94105'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">create</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Billing Info: </span><span class="cm-variable-2">$billing_info</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_ValidationError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// The data or bank account are invalid</span> <span class="cm-keyword">print</span> <span class="cm-string">"Invalid data or card: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// Could not find account</span> <span class="cm-keyword">print</span> <span class="cm-string">"Account Not Found: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span> <span class="cm-operator">=</span> { <span class="cm-atom">name_on_account:</span> <span class="cm-string">'Acme, Inc.'</span>, <span class="cm-atom">routing_number:</span> <span class="cm-string">'065400137'</span>, <span class="cm-atom">account_number:</span> <span class="cm-string">'4444000000005555'</span>, <span class="cm-atom">address1:</span> <span class="cm-string">'123 Main St.'</span>, <span class="cm-atom">city:</span> <span class="cm-string">'San Francisco'</span>, <span class="cm-atom">state:</span> <span class="cm-string">'CA'</span>, <span class="cm-atom">country:</span> <span class="cm-string">'US'</span>, <span class="cm-atom">zip:</span> <span class="cm-string">'94105'</span> } <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span><span class="cm-operator">.</span><span class="cm-property">save!</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">billing_info</span> = <span class="cm-variable">recurly</span>.<span class="cm-variable">BillingInfo</span>( <span class="cm-variable">name_on_account</span> = <span class="cm-string">'Acme, Inc.'</span>, <span class="cm-variable">routing_number</span> = <span class="cm-string">'065400137'</span>, <span class="cm-variable">account_number</span> = <span class="cm-string">'4444000000005555'</span>, <span class="cm-variable">account_type</span> = <span class="cm-string">'checking'</span>, <span class="cm-variable">address1</span> = <span class="cm-string">'123 Main St.'</span>, <span class="cm-variable">city</span> = <span class="cm-string">'San Francisco'</span>, <span class="cm-variable">state</span> =<span class="cm-string">'CA'</span>, <span class="cm-variable">country</span> = <span class="cm-string">'US'</span>, <span class="cm-builtin">zip</span> = <span class="cm-string">'94105'</span> ) <span class="cm-variable">account</span>.<span class="cm-variable">update_billing_info</span>(<span class="cm-variable">billing_info</span>)</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">BillingInfo</span>(<span class="cm-variable">account</span>); <span class="cm-variable">info</span>.<span class="cm-variable">NameOnAccount</span> <span class="cm-operator">=</span> <span class="cm-string">"Acme, Inc."</span>; <span class="cm-variable">info</span>.<span class="cm-variable">RoutingNumber</span> <span class="cm-operator">=</span> <span class="cm-string">"065400137"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">AccountNumber</span> <span class="cm-operator">=</span> <span class="cm-string">"4444000000005555"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">AccountType</span> <span class="cm-operator">=</span> <span class="cm-variable">BillingInfo</span>.<span class="cm-variable">BankAccountType</span>.<span class="cm-variable">Checking</span>; <span class="cm-variable">info</span>.<span class="cm-variable">Address1</span> <span class="cm-operator">=</span> <span class="cm-string">"123 Main St."</span>; <span class="cm-variable">info</span>.<span class="cm-variable">City</span> <span class="cm-operator">=</span> <span class="cm-string">"San Francisco"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">State</span> <span class="cm-operator">=</span> <span class="cm-string">"CA"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">Country</span> <span class="cm-operator">=</span> <span class="cm-string">"US"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">PostalCode</span> <span class="cm-operator">=</span> <span class="cm-string">"94105"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">Create</span>();</span></code></pre>
              <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name_on_account</span><span class="cm-tag cm-bracket">&gt;</span>Acme, Inc.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">name_on_account</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">routing_number</span><span class="cm-tag cm-bracket">&gt;</span>065400137<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">routing_number</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_number</span><span class="cm-tag cm-bracket">&gt;</span>4444000000005555<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_number</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_type</span><span class="cm-tag cm-bracket">&gt;</span>checking<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span>127.0.0.1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>201<span> </span><em>Created</em></a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}"><span class="status-icon status-icon-error"></span>422<span> </span><em>Unprocessable Entity</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"bank_account"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">name_on_account</span><span class="cm-tag cm-bracket">&gt;</span>Acme, Inc.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">name_on_account</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">vat_number</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span>127.0.0.1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address_country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address_country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account_type</span><span class="cm-tag cm-bracket">&gt;</span>checking<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">account_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span>5555<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">routing_number</span><span class="cm-tag cm-bracket">&gt;</span>065400137<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">routing_number</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2017-02-17T15:38:53Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">errors</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">error</span> <span class="cm-attribute">field</span>=<span class="cm-string">"billing_info.routing_number"</span> <span class="cm-attribute">symbol</span>=<span class="cm-string">"invalid"</span><span class="cm-tag cm-bracket">&gt;</span>is invalid<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">error</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">errors</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="create-an-accounts-billing-info-using-external-token" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e213","category":"59557419c0a2ba001bf5e1ac","user":"56c3c01334df460d00c2beb3","parentDoc":null,"project":"555fbba928249c1900618a82","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2016-04-29T21:58:10.697Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"name":"","code":"&lt;?php\n\ntry {\n  $billing_info = new Recurly_BillingInfo();\n  $billing_info-&gt;account_code = 'b6f5783';\n  $billing_info-&gt;first_name = 'Verena';\n  $billing_info-&gt;last_name = 'Example';\n  $billing_info-&gt;paypal_billing_agreement_id = 'BA-0HS87238YB688345C';\n  $billing_info-&gt;create();\n\n  print \"Billing Info: $billing_info\";\n} catch (Recurly_ValidationError $e) {\n  // The paypal billing agreement provided is invalid\n  print \"Invalid paypal billing agreement: $e\";\n} catch (Recurly_NotFoundError $e) {\n  // Could not find account\n  print \"Not Found: $e\";\n}","language":"php"},{"code":"account = Recurly::Account.find('1')\naccount.billing_info = {\n  :first_name         =&gt; 'Verena',\n  :last_name          =&gt; 'Example',\n  :paypal_billing_agreement_id             =&gt; 'BA-0HS87238YB688345C'\n}\naccount.billing_info.save!","language":"ruby"},{"code":"account = Account.get('1')\nbilling_info = account.billing_info\nbilling_info.first_name = 'Verena'\nbilling_info.last_name = 'Example'\nbilling_info.paypal_billing_agreement_id = 'BA-0HS87238YB688345C'\naccount.update_billing_info(billing_info)","language":"python"},{"code":"var account = Accounts.Get(\"1\");\nvar info = new BillingInfo(account);\ninfo.FirstName = \"Verana\";\ninfo.LastName = \"Example\";\ninfo.PaypalBillingAgreementId = \"BA-0HS87238YB688345C\";\ninfo.Create();","language":"csharp"},{"code":"&lt;billing_info&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"&gt;&lt;/address2&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;paypal_billing_agreement_id&gt;BA-0HS87238YB688345C&lt;/paypal_billing_agreement_id&gt;\n  &lt;ip_address&gt;127.0.0.1&lt;/ip_address&gt;\n&lt;/billing_info&gt;","language":"xml"}]},"method":"post","results":{"codes":[{"name":"","code":"&lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\" type=\"credit_card\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company nil=\"nil\"&gt;&lt;/company&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"&gt;&lt;/address2&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;phone nil=\"nil\"&gt;&lt;/phone&gt;\n  &lt;paypal_billing_agreement_id&gt;BA-0HS87238YB688345C&lt;/paypal_billing_agreement_id&gt;\n  &lt;updated_at type=\"datetime\"&gt;2017-02-17T15:38:53Z&lt;/updated_at&gt;\n&lt;/billing_info&gt;","language":"xml","status":201}]},"settings":"","auth":"required","params":[{"_id":"55944fab5c9eaa2300a8633c","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"5581d09a8625220d00429e4d","ref":"","in":"body","required":true,"desc":"First name","default":"","type":"string","name":"first_name"},{"_id":"5581d09a8625220d00429e4c","ref":"","in":"body","required":false,"desc":"Last name","default":"","type":"string","name":"last_name"},{"_id":"5581d09a8625220d00429e4b","ref":"","in":"body","required":false,"desc":"Address line 1, recommended for address validation","default":"","type":"string","name":"address1"},{"_id":"5581d09a8625220d00429e4a","ref":"","in":"body","required":false,"desc":"Address line 2.","default":"","type":"string","name":"address2"},{"_id":"5581d09a8625220d00429e49","ref":"","in":"body","required":false,"desc":"City","default":"","type":"string","name":"city"},{"_id":"5581d09a8625220d00429e48","ref":"","in":"body","required":false,"desc":"State","default":"","type":"string","name":"state"},{"_id":"5581d09a8625220d00429e47","ref":"","in":"body","required":false,"desc":"Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements) **STRONGLY RECOMMENDED**","default":"","type":"string","name":"country"},{"_id":"5581d09a8625220d00429e46","ref":"","in":"body","required":false,"desc":"Zip or postal code, recommended for address validation","default":"","type":"string","name":"zip"},{"_id":"5581d09a8625220d00429e45","ref":"","in":"body","required":false,"desc":"Phone number","default":"","type":"string","name":"phone"},{"_id":"58ac88c71909810f00fda9a2","ref":"","in":"body","required":false,"desc":"Amazon's billing agreement","default":"","type":"string","name":"amazon_billing_agreement_id"},{"_id":"58b4adc1ed60c11900989b38","ref":"","in":"body","required":false,"desc":"Braintree's payment method nonce representing the Paypal billing agreement id. This is required when processing Paypal transactions through Braintree.","default":"","type":"string","name":"braintree_payment_nonce"},{"_id":"5723d8f2110e570e00486c2f","ref":"","in":"body","required":false,"desc":"Paypal's billing agreement","default":"","type":"string","name":"paypal_billing_agreement_id"},{"_id":"585886cd59b00a0f007f1b44","ref":"","in":"body","required":false,"desc":"Roku's CIB if billing through Roku","default":"","type":"string","name":"roku_billing_agreement_id"},{"_id":"5581d09a8625220d00429e44","ref":"","in":"body","required":false,"desc":"Customer's VAT Number","default":"","type":"string","name":"vat_number"},{"_id":"56c3c1ce70187b17005f4395","ref":"","in":"body","required":false,"desc":"Currency in which invoices will be posted. Only applicable if this account is enrolled in a plan has a different currency than your site's default.","default":"","type":"string","name":"currency"},{"_id":"5581d09a8625220d00429e43","ref":"","in":"body","required":false,"desc":"Customer's IPv4 address when updating their Billing Information **STRONGLY RECOMMENDED**","default":"","type":"string","name":"ip_address"}],"url":"/accounts/:account_code/billing_info"},"isReference":true,"order":3,"body":"Instead of using a token generated by Recurly.js, you can instead submit full credit card and address information when creating Billing Information.\n\nWhen Billing Information is submitted, it is only saved if valid. If the account has a past due invoice, the outstanding balance will be collected to validate the Billing Information.\n\nIf you want to create an account at the same time, you should use the [Account API end-point](https://docs.recurly.com/api/accounts#create-account) instead and include Billing Information with your request.\n\nThe required address fields will correspond to the **address requirements** configured for your site.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"Recurly strongly recommends using a token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token) rather than directly handling your customer's credit card details.\",\n  \"title\": \"Please note\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"This API end-point may be used to import Billing Information without security codes (CVV). Recurly recommends requiring CVV from your customers when collecting new or updated Billing Information.\",\n  \"title\": \"Please note\"\n}\n[/block]","excerpt":"Creates the account's Billing Information using external token for example: Paypal billing agreement","slug":"create-an-accounts-billing-info-using-external-token","type":"post","title":"Create Account's Billing Info (External Token)","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-post">post</span>Create Account's Billing Info (External Token)</h1>
           <div marked>
            Creates the account's Billing Information using external token for example: Paypal billing agreement
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>first_name<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 First name
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>last_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Last name
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address1<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 1, recommended for address validation
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address2<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 2.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>city<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 City
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>state<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 State
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>country<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements) **STRONGLY RECOMMENDED**
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>zip<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Zip or postal code, recommended for address validation
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>phone<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Phone number
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>amazon_billing_agreement_id<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Amazon's billing agreement
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>braintree_payment_nonce<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Braintree's payment method nonce representing the Paypal billing agreement id. This is required when processing Paypal transactions through Braintree.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>paypal_billing_agreement_id<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Paypal's billing agreement
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>roku_billing_agreement_id<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Roku's CIB if billing through Roku
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>vat_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Customer's VAT Number
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>currency<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Currency in which invoices will be posted. Only applicable if this account is enrolled in a plan has a different currency than your site's default.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>ip_address<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Customer's IPv4 address when updating their Billing Information **STRONGLY RECOMMENDED**
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p>Instead of using a token generated by Recurly.js, you can instead submit full credit card and address information when creating Billing Information.</p> 
                 <p>When Billing Information is submitted, it is only saved if valid. If the account has a past due invoice, the outstanding balance will be collected to validate the Billing Information.</p> 
                 <p>If you want to create an account at the same time, you should use the <a href="https://docs.recurly.com/api/accounts#create-account">Account API end-point</a> instead and include Billing Information with your request.</p> 
                 <p>The required address fields will correspond to the <strong>address requirements</strong> configured for your site.</p> 
                </div> 
               </div> 
               <div class="magic-block-callout type-warning "> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i><span>Please note</span> </h3>
                <p>Recurly strongly recommends using a token <a href="https://docs.recurly.com/js/#getting-a-token">generated by Recurly.js</a> rather than directly handling your customer's credit card details.</p> 
               </div> 
               <div class="magic-block-callout type-warning "> 
                <h3><i title="Warning" class="fa fa-exclamation-circle on"></i><span>Please note</span> </h3>
                <p>This API end-point may be used to import Billing Information without security codes (CVV). Recurly recommends requiring CVV from your customers when collecting new or updated Billing Information.</p> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/create-an-accounts-billing-info-using-external-token" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/create-an-accounts-billing-info-using-external-token/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
              <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
               <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">XML</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$billing_info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Recurly_BillingInfo</span>(); <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">account_code</span> <span class="cm-operator">=</span> <span class="cm-string">'b6f5783'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">first_name</span> <span class="cm-operator">=</span> <span class="cm-string">'Verena'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">last_name</span> <span class="cm-operator">=</span> <span class="cm-string">'Example'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">paypal_billing_agreement_id</span> <span class="cm-operator">=</span> <span class="cm-string">'BA-0HS87238YB688345C'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">create</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Billing Info: </span><span class="cm-variable-2">$billing_info</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_ValidationError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// The paypal billing agreement provided is invalid</span> <span class="cm-keyword">print</span> <span class="cm-string">"Invalid paypal billing agreement: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// Could not find account</span> <span class="cm-keyword">print</span> <span class="cm-string">"Not Found: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span> <span class="cm-operator">=</span> { <span class="cm-atom">:first_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Verena'</span>, <span class="cm-atom">:last_name</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'Example'</span>, <span class="cm-atom">:paypal_billing_agreement_id</span> <span class="cm-operator">=&gt;</span> <span class="cm-string">'BA-0HS87238YB688345C'</span> } <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span><span class="cm-operator">.</span><span class="cm-property">save!</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">billing_info</span> = <span class="cm-variable">account</span>.<span class="cm-variable">billing_info</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">first_name</span> = <span class="cm-string">'Verena'</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">last_name</span> = <span class="cm-string">'Example'</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">paypal_billing_agreement_id</span> = <span class="cm-string">'BA-0HS87238YB688345C'</span> <span class="cm-variable">account</span>.<span class="cm-variable">update_billing_info</span>(<span class="cm-variable">billing_info</span>)</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">BillingInfo</span>(<span class="cm-variable">account</span>); <span class="cm-variable">info</span>.<span class="cm-variable">FirstName</span> <span class="cm-operator">=</span> <span class="cm-string">"Verana"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">LastName</span> <span class="cm-operator">=</span> <span class="cm-string">"Example"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">PaypalBillingAgreementId</span> <span class="cm-operator">=</span> <span class="cm-string">"BA-0HS87238YB688345C"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">Create</span>();</span></code></pre>
              <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">paypal_billing_agreement_id</span><span class="cm-tag cm-bracket">&gt;</span>BA-0HS87238YB688345C<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">paypal_billing_agreement_id</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span>127.0.0.1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>201<span> </span><em>Created</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"credit_card"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">phone</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">paypal_billing_agreement_id</span><span class="cm-tag cm-bracket">&gt;</span>BA-0HS87238YB688345C<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">paypal_billing_agreement_id</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2017-02-17T15:38:53Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="lookup-an-accounts-billing-info" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e214","category":"59557419c0a2ba001bf5e1ac","project":"555fbba928249c1900618a82","parentDoc":null,"user":"55648cf93b87582b003ab8b1","version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-17T19:44:14.605Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"examples":{"codes":[{"name":"","code":"&lt;?php\n\ntry {\n  $billing_info = Recurly_BillingInfo::get('b6f5783');\n  print \"Billing Info: $billing_info\";\n} catch (Recurly_NotFoundError $e) {\n  // Could not find account or account\n  // doesn't have billing info\n  print \"Not found: $e\";\n}","language":"php"},{"language":"ruby","code":"account = Recurly::Account.find('1')\nbilling_info = account.billing_info"},{"code":"account = Account.get('1')\nbilling_info = account.billing_info","language":"python"},{"code":"var account = Accounts.Get(\"1\");\nvar info = account.BillingInfo;","language":"csharp"}]},"method":"get","results":{"codes":[{"name":"","code":"&lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\" type=\"credit_card\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company nil=\"nil\"/&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"/&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;phone nil=\"nil\"/&gt;\n  &lt;vat_number nil=\"nil\"/&gt;\n  &lt;ip_address&gt;127.0.0.1&lt;/ip_address&gt;\n  &lt;ip_address_country nil=\"nil\"/&gt;\n  &lt;card_type&gt;Visa&lt;/card_type&gt;\n  &lt;year type=\"integer\"&gt;2019&lt;/year&gt;\n  &lt;month type=\"integer\"&gt;11&lt;/month&gt;\n  &lt;first_six&gt;411111&lt;/first_six&gt;\n  &lt;last_four&gt;1111&lt;/last_four&gt;\n  &lt;updated_at type=\"datetime\"&gt;2017-02-17T15:38:53Z&lt;/updated_at&gt;\n&lt;/billing_info&gt;","language":"xml","status":200},{"status":404,"language":"xml","code":"&lt;error&gt;\n  &lt;symbol&gt;not_found&lt;/symbol&gt;\n  &lt;description lang=\"en-US\"&gt;Couldn't find BillingInfo with account_code = 1&lt;/description&gt;\n&lt;/error&gt;"}]},"settings":"","auth":"required","params":[{"_id":"55944f815c9eaa2300a8633a","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"5581ce0ea5474a0d00d946a1","ref":"","in":"body","required":false,"desc":"First name","default":"","type":"string","name":"first_name"},{"_id":"5581ce0ea5474a0d00d946a0","ref":"","in":"body","required":false,"desc":"Last name","default":"","type":"string","name":"last_name"},{"_id":"5646783bc7687d0d00739f3f","ref":"","in":"body","required":false,"desc":"Company name","default":"","type":"string","name":"company"},{"_id":"5581ce0ea5474a0d00d9469f","ref":"","in":"body","required":false,"desc":"Address line 1","default":"","type":"string","name":"address1"},{"_id":"5581ce0ea5474a0d00d9469e","ref":"","in":"body","required":false,"desc":"Address line 2","default":"","type":"string","name":"address2"},{"_id":"5581ce0ea5474a0d00d9469d","ref":"","in":"body","required":false,"desc":"City","default":"","type":"string","name":"city"},{"_id":"5581ce0ea5474a0d00d94695","ref":"","in":"body","required":false,"desc":"Credit card number, last four digits","default":"","type":"int","name":"last_four"},{"_id":"5581ce0ea5474a0d00d9469c","ref":"","in":"body","required":false,"desc":"State","default":"","type":"string","name":"state"},{"_id":"5581ce0ea5474a0d00d9469b","ref":"","in":"body","required":false,"desc":"Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements)","default":"","type":"string","name":"country"},{"_id":"5581ce0ea5474a0d00d9469a","ref":"","in":"body","required":false,"desc":"Zip or postal code","default":"","type":"string","name":"zip"},{"_id":"5581ce0ea5474a0d00d94699","ref":"","in":"body","required":false,"desc":"Customer's VAT number","default":"","type":"string","name":"vat_number"},{"_id":"5581ce0ea5474a0d00d94698","ref":"","in":"body","required":false,"desc":"Customer's IPv4 address when updating their billing information","default":"","type":"string","name":"ip_address"},{"_id":"5581ce0ea5474a0d00d94697","ref":"","in":"body","required":false,"desc":"Country of IP address, if known by Recurly","default":"","type":"string","name":"ip_address_country"},{"_id":"5581ce0ea5474a0d00d94696","ref":"","in":"body","required":false,"desc":"Credit card number, first six digits","default":"","type":"int","name":"first_six"},{"_id":"5581ce0ea5474a0d00d94694","ref":"","in":"body","required":false,"desc":"Visa, MasterCard, American Express, Discover, JCB, etc","default":"","type":"string","name":"card_type"},{"_id":"5581ce0ea5474a0d00d94693","ref":"","in":"body","required":false,"desc":"Expiration month","default":"","type":"int","name":"month"},{"_id":"5581ce0ea5474a0d00d94692","ref":"","in":"body","required":false,"desc":"Expiration year","default":"","type":"int","name":"year"},{"_id":"5581ce0ea5474a0d00d94690","ref":"","in":"body","required":false,"desc":"Amazon Billing Agreement ID","default":"","type":"string","name":"amazon_billing_agreement_id"},{"_id":"58b5b5b36bf3a42500583bc5","ref":"","in":"body","required":false,"desc":"Braintree's payment method nonce representing the payment method.","default":"","type":"string","name":"braintree_payment_nonce"},{"_id":"5581ce0ea5474a0d00d94691","ref":"","in":"body","required":false,"desc":"PayPal Billing Agreement ID","default":"","type":"string","name":"paypal_billing_agreement_id"},{"_id":"58b5b5b36bf3a42500583bc4","ref":"","in":"body","required":false,"desc":"Roku's CIB if billing through Roku","default":"","type":"string","name":"roku_billing_agreement_id"},{"_id":"5581ce0ea5474a0d00d9468f","ref":"","in":"body","required":false,"desc":"The name associated with the account. This may be a person's full name or a business name. name_on_account is used instead of first_name and last_name if the payment method is Bank Account.","default":"","type":"string","name":"name_on_account"},{"_id":"5581ce0ea5474a0d00d9468e","ref":"","in":"body","required":false,"desc":"U.S. bank account routing number","default":"","type":"int","name":"routing_number"},{"_id":"5581ce0ea5474a0d00d9468d","ref":"","in":"body","required":false,"desc":"Bank account number","default":"","type":"int","name":"account_number"},{"_id":"5581ce0ea5474a0d00d9468c","ref":"","in":"body","required":false,"desc":"Either 'checking' or 'savings'","default":"","type":"string","name":"account_type"},{"_id":"58c82f966dc7140f003c4052","ref":"","in":"body","required":false,"desc":"Timestamp representing the last update of this billing info","default":"","type":"datetime","name":"updated_at"}],"url":"/accounts/:account_code/billing_info"},"isReference":true,"order":4,"body":"","excerpt":"Returns only the account's current billing information.","slug":"lookup-an-accounts-billing-info","type":"get","title":"Lookup Account's Billing Info","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-get">get</span>Lookup Account's Billing Info</h1>
           <div marked>
            Returns only the account's current billing information.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>first_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 First name
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>last_name<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Last name
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>company<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Company name
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address1<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 1
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>address2<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Address line 2
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>city<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 City
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>last_four<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Credit card number, last four digits
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>state<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 State
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>country<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Country, [2-letter ISO code](http://www.iso.org/iso/country_names_and_code_elements)
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>zip<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Zip or postal code
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>vat_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Customer's VAT number
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>ip_address<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Customer's IPv4 address when updating their billing information
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>ip_address_country<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Country of IP address, if known by Recurly
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>first_six<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Credit card number, first six digits
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>card_type<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Visa, MasterCard, American Express, Discover, JCB, etc
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>month<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Expiration month
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>year<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Expiration year
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>amazon_billing_agreement_id<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Amazon Billing Agreement ID
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>braintree_payment_nonce<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Braintree's payment method nonce representing the payment method.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>paypal_billing_agreement_id<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 PayPal Billing Agreement ID
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>roku_billing_agreement_id<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Roku's CIB if billing through Roku
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>name_on_account<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 The name associated with the account. This may be a person's full name or a business name. name_on_account is used instead of first_name and last_name if the payment method is Bank Account.
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>routing_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 U.S. bank account routing number
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>account_number<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">integer</strong>
                <div marked>
                 Bank account number
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>account_type<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Either 'checking' or 'savings'
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>updated_at<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">datetime</strong>
                <div marked>
                 Timestamp representing the last update of this billing info
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/lookup-an-accounts-billing-info" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/lookup-an-accounts-billing-info/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$billing_info</span> <span class="cm-operator">=</span> <span class="cm-variable">Recurly_BillingInfo</span>::<span class="cm-variable">get</span>(<span class="cm-string">'b6f5783'</span>); <span class="cm-keyword">print</span> <span class="cm-string">"Billing Info: </span><span class="cm-variable-2">$billing_info</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// Could not find account or account</span> <span class="cm-comment">// doesn't have billing info</span> <span class="cm-keyword">print</span> <span class="cm-string">"Not found: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">billing_info</span> <span class="cm-operator">=</span> <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">billing_info</span> = <span class="cm-variable">account</span>.<span class="cm-variable">billing_info</span></span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">info</span> <span class="cm-operator">=</span> <span class="cm-variable">account</span>.<span class="cm-variable">BillingInfo</span>;</span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}"><span class="status-icon status-icon-error"></span>404<span> </span><em>Not Found</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"credit_card"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span>US<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">country</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">phone</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">vat_number</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span>127.0.0.1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">ip_address</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">ip_address_country</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">card_type</span><span class="cm-tag cm-bracket">&gt;</span>Visa<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">card_type</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">year</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>2019<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">year</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">month</span> <span class="cm-attribute">type</span>=<span class="cm-string">"integer"</span><span class="cm-tag cm-bracket">&gt;</span>11<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">month</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_six</span><span class="cm-tag cm-bracket">&gt;</span>411111<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_six</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span>1111<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_four</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">updated_at</span> <span class="cm-attribute">type</span>=<span class="cm-string">"datetime"</span><span class="cm-tag cm-bracket">&gt;</span>2017-02-17T15:38:53Z<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">updated_at</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">error</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">symbol</span><span class="cm-tag cm-bracket">&gt;</span>not_found<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">symbol</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">description</span> <span class="cm-attribute">lang</span>=<span class="cm-string">"en-US"</span><span class="cm-tag cm-bracket">&gt;</span>Couldn't find BillingInfo with account_code = 1<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">description</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">error</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
          <br>
          <br> 
          <div class="content block-content ready"> 
           <div class="blocks-parent"> 
            <div class="block section"> 
             <div> 
             </div> 
            </div> 
           </div> 
          </div>
         </div>
        </div>
        <div ng-controller="ShowPage" data-page="update-an-accounts-billing-info-token" class="docs-page">
         <div scope-scoop>
          <pre var="page" ng-non-bindable>{"_id":"5955741cc0a2ba001bf5e215","category":"59557419c0a2ba001bf5e1ac","project":"555fbba928249c1900618a82","user":"55648cf93b87582b003ab8b1","parentDoc":null,"version":"59557419c0a2ba001bf5e1a3","updates":[],"next":{"pages":[],"description":""},"createdAt":"2015-06-17T20:05:12.621Z","link_external":false,"link_url":"","githubsync":"","sync_unique":"","hidden":false,"api":{"method":"put","results":{"codes":[{"language":"xml","status":200,"name":"","code":"&lt;billing_info href=\"https://your-subdomain.recurly.com/v2/accounts/1/billing_info\" type=\"credit_card\"&gt;\n  &lt;account href=\"https://your-subdomain.recurly.com/v2/accounts/1\"/&gt;\n  &lt;first_name&gt;Verena&lt;/first_name&gt;\n  &lt;last_name&gt;Example&lt;/last_name&gt;\n  &lt;company nil=\"nil\"&gt;&lt;/company&gt;\n  &lt;address1&gt;123 Main St.&lt;/address1&gt;\n  &lt;address2 nil=\"nil\"&gt;&lt;/address2&gt;\n  &lt;city&gt;San Francisco&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;zip&gt;94105&lt;/zip&gt;\n  &lt;country&gt;US&lt;/country&gt;\n  &lt;phone nil=\"nil\"&gt;&lt;/phone&gt;\n  &lt;card_type&gt;Visa&lt;/card_type&gt;\n  &lt;year type=\"integer\"&gt;2019&lt;/year&gt;\n  &lt;month type=\"integer\"&gt;11&lt;/month&gt;\n  &lt;first_six&gt;411111&lt;/first_six&gt;\n  &lt;last_four&gt;1111&lt;/last_four&gt;\n  &lt;updated_at type=\"datetime\"&gt;2017-02-17T15:38:53Z&lt;/updated_at&gt;\n&lt;/billing_info&gt;"},{"status":404,"language":"xml","code":"&lt;error&gt;\n  &lt;symbol&gt;token_invalid&lt;/symbol&gt;\n  &lt;description&gt;Token is either invalid or expired&lt;/description&gt;\n&lt;/error&gt;"}]},"settings":"","examples":{"codes":[{"name":"","code":"&lt;?php\n\ntry {\n  $billing_info = new Recurly_BillingInfo();\n  $billing_info-&gt;account_code = 'b6f5783';\n  $billing_info-&gt;token_id = '7z6furn4jvb9'; // From Recurly.js\n  $billing_info-&gt;update();\n\n  print \"Billing Info: $billing_info\";\n} catch (Recurly_NotFoundError $e) {\n  // Could not find account or token is invalid or expired\n  print \"Not Found: $e\";\n}","language":"php"},{"language":"ruby","code":"account = Recurly::Account.find('1')\naccount.billing_info.token_id = 'TOKEN_ID'\naccount.billing_info.save!"},{"code":"account = Account.get('1')\nbilling_info = account.billing_info\nbilling_info.token_id = 'TOKEN_ID'\naccount.update_billing_info(billing_info)","language":"python"},{"code":"var account = Accounts.Get(\"1\");\nvar info = new BillingInfo(account);\ninfo.TokenId = \"TOKEN_ID\";\ninfo.Update();","language":"csharp"},{"code":"&lt;billing_info&gt;\n  &lt;token_id&gt;TOKEN_ID&lt;/token_id&gt;\n&lt;/billing_info&gt;","language":"xml"}]},"auth":"required","params":[{"_id":"55944fca5c9eaa2300a8633e","ref":"","in":"path","required":true,"desc":"Account's unique code.","default":"","type":"string","name":"account_code"},{"_id":"5581d2f8a5474a0d00d946bc","ref":"","in":"body","required":true,"desc":"A token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token).","default":"","type":"string","name":"token_id"},{"_id":"56d0e7b07c2e100b000afa25","ref":"","in":"body","required":false,"desc":"Currency in which invoices will be posted. Only applicable if this account is enrolled in a plan has a different currency than your site's default.","default":"","type":"string","name":"currency"}],"url":"/accounts/:account_code/billing_info"},"isReference":true,"order":5,"body":"[Recurly.js](https://js.recurly.com/) allows you to collect customer Billing Information and tokenize it, preventing your servers from having to handle credit card information. When you send these tokens to Recurly through our API, we unpack the token and update Billing Information accordingly.\n\nWhen Billing Information is updated, it is only saved if valid. If the account has a past due invoice, the outstanding balance will be collected to validate the Billing Information.\n\nIf you want to create an account at the same time, you should use the [Account API end-point](https://docs.recurly.com/api/accounts#create-account) instead and include billing info with your request.","excerpt":"Updates an account's Billing Information using a token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token). Returns the account's current Billing Information.","slug":"update-an-accounts-billing-info-token","type":"put","title":"Update Account's Billing Info (Token)","__v":0,"childrenPages":[]}</pre>
         </div>
         <div class="docs-content">
          <div class="docs-header">
           <h1><span class="pg-type-big pg-type type-put">put</span>Update Account's Billing Info (Token)</h1>
           <div marked>
            Updates an account's Billing Information using a token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token). Returns the account's current Billing Information.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <div class="api-manager">
            <div class="param-table">
             <div class="table">
              <h4 class="paramGroupTitle">Path Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>account_code<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Account's unique code.
                </div>
               </div>
              </div>
              <h4 class="paramGroupTitle">Body Params</h4>
              <div class="tr">
               <div class="td param">
                <strong>token_id<span class="colon">:</span></strong>
                <div class="required">
                 required
                </div>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 A token [generated by Recurly.js](https://docs.recurly.com/js/#getting-a-token).
                </div>
               </div>
              </div>
              <div class="tr">
               <div class="td param">
                <strong>currency<span class="colon">:</span></strong>
               </div>
               <div class="td">
                <strong class="param-type">string</strong>
                <div marked>
                 Currency in which invoices will be posted. Only applicable if this account is enrolled in a plan has a different currency than your site's default.
                </div>
               </div>
              </div>
             </div>
            </div>
           </div> 
           <div class="content block-content ready"> 
            <div class="blocks-parent"> 
             <div class="block section"> 
              <div> 
               <div> 
                <div class="marked">
                 <p><a href="https://js.recurly.com/">Recurly.js</a> allows you to collect customer Billing Information and tokenize it, preventing your servers from having to handle credit card information. When you send these tokens to Recurly through our API, we unpack the token and update Billing Information accordingly.</p> 
                 <p>When Billing Information is updated, it is only saved if valid. If the account has a past due invoice, the outstanding balance will be collected to validate the Billing Information.</p> 
                 <p>If you want to create an account at the same time, you should use the <a href="https://docs.recurly.com/api/accounts#create-account">Account API end-point</a> instead and include billing info with your request.</p> 
                </div> 
               </div> 
              </div> 
             </div> 
            </div> 
           </div>
           <div class="threes-nav">
            <nav class="pull-right">
             <a href="https://dash.readme.io/project/recurly/v2.7/docs/update-an-accounts-billing-info-token" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
              <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
             <a href="/docs/update-an-accounts-billing-info-token/edit" require-login ng-hide="u.user.is_admin" class="suggest">
              <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
            </nav>
           </div>
          </div>
         </div>
         <div class="docs-right">
          <div class="api-manager">
           <h3>Definition</h3>
           <div ng-cloak class="api-definition">
            <span class="definition-url">{{ api_url }}</span>
            <span class="definition-path">{{ page_api_url }}</span>
           </div>
          </div>
          <div class="api-manager">
           <hr class="bottom">
           <h3>Examples</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}">PHP</a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}">Ruby</a>
              </div>
              <div ng-class="{on: 2 == tab, off: 2 != tab}" class="tab">
               <a href="" ng-click="showCode(2)" ng-class="{active: (2 == tab)}">Python</a>
              </div>
              <div ng-class="{on: 3 == tab, off: 3 != tab}" class="tab">
               <a href="" ng-click="showCode(3)" ng-class="{active: (3 == tab)}">C#</a>
              </div>
              <div ng-class="{on: 4 == tab, off: 4 != tab}" class="tab">
               <a href="" ng-click="showCode(4)" ng-class="{active: (4 == tab)}">XML</a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-meta">&lt;?php</span> <span class="cm-keyword">try</span> { <span class="cm-variable-2">$billing_info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Recurly_BillingInfo</span>(); <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">account_code</span> <span class="cm-operator">=</span> <span class="cm-string">'b6f5783'</span>; <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">token_id</span> <span class="cm-operator">=</span> <span class="cm-string">'7z6furn4jvb9'</span>; <span class="cm-comment">// From Recurly.js</span> <span class="cm-variable-2">$billing_info</span><span class="cm-operator">-&gt;</span><span class="cm-variable">update</span>(); <span class="cm-keyword">print</span> <span class="cm-string">"Billing Info: </span><span class="cm-variable-2">$billing_info</span><span class="cm-string">"</span>; } <span class="cm-keyword">catch</span> (<span class="cm-variable">Recurly_NotFoundError</span> <span class="cm-variable-2">$e</span>) { <span class="cm-comment">// Could not find account or token is invalid or expired</span> <span class="cm-keyword">print</span> <span class="cm-string">"Not Found: </span><span class="cm-variable-2">$e</span><span class="cm-string">"</span>; }</span></code></pre>
              <pre ng-if="tab == 1"><code><span class="cm-s-neo"><span class="cm-variable">account</span> <span class="cm-operator">=</span> <span class="cm-atom">Recurly::Account</span><span class="cm-operator">.</span><span class="cm-property">find</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span><span class="cm-operator">.</span><span class="cm-property">token_id</span> <span class="cm-operator">=</span> <span class="cm-string">'TOKEN_ID'</span> <span class="cm-variable">account</span><span class="cm-operator">.</span><span class="cm-property">billing_info</span><span class="cm-operator">.</span><span class="cm-property">save!</span></span></code></pre>
              <pre ng-if="tab == 2"><code><span class="cm-s-neo"><span class="cm-variable">account</span> = <span class="cm-variable">Account</span>.<span class="cm-variable">get</span>(<span class="cm-string">'1'</span>) <span class="cm-variable">billing_info</span> = <span class="cm-variable">account</span>.<span class="cm-variable">billing_info</span> <span class="cm-variable">billing_info</span>.<span class="cm-variable">token_id</span> = <span class="cm-string">'TOKEN_ID'</span> <span class="cm-variable">account</span>.<span class="cm-variable">update_billing_info</span>(<span class="cm-variable">billing_info</span>)</span></code></pre>
              <pre ng-if="tab == 3"><code><span class="cm-s-neo"><span class="cm-keyword">var</span> <span class="cm-def">account</span> <span class="cm-operator">=</span> <span class="cm-variable">Accounts</span>.<span class="cm-variable">Get</span>(<span class="cm-string">"1"</span>); <span class="cm-keyword">var</span> <span class="cm-def">info</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">BillingInfo</span>(<span class="cm-variable">account</span>); <span class="cm-variable">info</span>.<span class="cm-variable">TokenId</span> <span class="cm-operator">=</span> <span class="cm-string">"TOKEN_ID"</span>; <span class="cm-variable">info</span>.<span class="cm-variable">Update</span>();</span></code></pre>
              <pre ng-if="tab == 4"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">token_id</span><span class="cm-tag cm-bracket">&gt;</span>TOKEN_ID<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">token_id</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">billing_info</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
           <hr class="bottom">
           <h3>Result Format</h3>
           <div class="block-content">
            <div class="magic-block-code">
             <div class="code-tabs">
              <div ng-class="{on: 0 == tab, off: 0 != tab}" class="tab">
               <a href="" ng-click="showCode(0)" ng-class="{active: (0 == tab)}"><span class="status-icon status-icon-success"></span>200<span> </span><em>OK</em></a>
              </div>
              <div ng-class="{on: 1 == tab, off: 1 != tab}" class="tab">
               <a href="" ng-click="showCode(1)" ng-class="{active: (1 == tab)}"><span class="status-icon status-icon-error"></span>404<span> </span><em>Not Found</em></a>
              </div>
             </div>
             <div class="block-code-code">
              <pre ng-if="tab == 0"><code><span class="cm-s-neo"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">billing_info</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1/billing_info"</span> <span class="cm-attribute">type</span>=<span class="cm-string">"credit_card"</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">account</span> <span class="cm-attribute">href</span>=<span class="cm-string">"https://your-subdomain.recurly.com/v2/accounts/1"</span><span class="cm-tag cm-bracket">/&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span>Verena<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">first_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span>Example<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">last_name</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">company</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">company</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span>123 Main St.<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">address1</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">address2</span> <span class="cm-attribute">nil</span>=<span class="cm-string">"nil"</span><span class="cm-tag cm-bracket">&gt;&lt;/</span><span class="cm-tag">address2</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span>San Francisco<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">city</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span>CA<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">state</span><span class="cm-tag cm-bracket">&gt;</span> <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span>94105<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">zip</span><span class="cm-tag cm-bracket">&gt;</span></span></code></pre>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
 </body>
</html>