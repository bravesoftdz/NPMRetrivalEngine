<!doctype html>
<html>
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <title>Processing Payments and with Stripe, JavaScript and C# - PCI compliant</title> 
  <meta name="description" content=""> 
  <meta name="generator" content="Bootply"> 
  <meta name="HandheldFriendly" content="True"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"> 
  <link rel="shortcut icon" href="/assets/favicon.png?v=dd678977ab"> 
  <link rel="stylesheet" type="text/css" href="/assets/css/bootstrap.min.css?v=dd678977ab"> 
  <link rel="stylesheet" type="text/css" href="/assets/fonts/font-awesome-4.3.0/css/font-awesome.min.css?v=dd678977ab"> 
  <link href="//fonts.googleapis.com/css?family=Open+Sans|Dosis:400,800" rel="stylesheet" type="text/css"> 
  <!--[if lt IE 9]>
            <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]--> 
  <link rel="stylesheet" type="text/css" href="/assets/css/styles.css?v=dd678977ab"> 
  <link rel="canonical" href="https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/"> 
  <meta name="referrer" content="origin-when-cross-origin"> 
  <meta property="og:site_name" content="cmatskas"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Processing Payments and with Stripe, JavaScript and C# - PCI compliant"> 
  <meta property="og:description" content="The source code and post have been updated to use the latest Stripe.NET API => v4.2 Online payments! We've all used them and some of us may have had the &quot;fortune&quot; implementing them on one website or another. Stripe is the not-so-new kid on the block, since it recently"> 
  <meta property="og:url" content="https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/"> 
  <meta property="article:published_time" content="2014-09-03T12:58:59.000Z"> 
  <meta property="article:modified_time" content="2015-12-13T22:40:37.000Z"> 
  <meta property="article:tag" content="ASP.NET"> 
  <meta property="article:tag" content="HTML 5"> 
  <meta property="article:tag" content="JavaScript"> 
  <meta property="article:tag" content="MVC"> 
  <meta property="article:tag" content="stripe"> 
  <meta property="article:tag" content="github"> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:title" content="Processing Payments and with Stripe, JavaScript and C# - PCI compliant"> 
  <meta name="twitter:description" content="The source code and post have been updated to use the latest Stripe.NET API => v4.2 Online payments! We've all used them and some of us may have had the &quot;fortune&quot; implementing them on one website or another. Stripe is the not-so-new kid on the block, since it recently"> 
  <meta name="twitter:url" content="https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/"> 
  <meta name="twitter:label1" content="Written by"> 
  <meta name="twitter:data1" content="Christos Matskas"> 
  <meta name="twitter:label2" content="Filed under"> 
  <meta name="twitter:data2" content="ASP.NET, HTML 5, JavaScript, MVC, stripe, github"> 
  <meta name="twitter:site" content="@christosmatskas"> 
  <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "cmatskas",
        "logo": "https://cmatskas.com/ghost/img/ghosticon.jpg"
    },
    "author": {
        "@type": "Person",
        "name": "Christos Matskas",
        "url": "https://cmatskas.com/author/christos/",
        "sameAs": []
    },
    "headline": "Processing Payments and with Stripe, JavaScript and C# - PCI compliant",
    "url": "https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/",
    "datePublished": "2014-09-03T12:58:59.000Z",
    "dateModified": "2015-12-13T22:40:37.000Z",
    "keywords": "ASP.NET, HTML 5, JavaScript, MVC, stripe, github",
    "description": "The source code and post have been updated to use the latest Stripe.NET API &#x3D;&gt; v4.2 Online payments! We&#x27;ve all used them and some of us may have had the &quot;fortune&quot; implementing them on one website or another. Stripe is the not-so-new kid on the block, since it recently"
}
    </script> 
  <meta name="generator" content="Ghost 0.9"> 
  <link rel="alternate" type="application/rss+xml" title="cmatskas" href="https://cmatskas.com/rss/"> 
  <script>
            (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
            })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
        
            ga('create', 'UA-46982691-1', 'cmatskas.com');
            ga('require', 'displayfeatures');
            ga('send', 'pageview');
        </script> 
  <script type="text/javascript">
            window.appInsights={queue:[],applicationInsightsId:null,accountId:null,appUserId:null,configUrl:null,start:function(n){function u(n){t[n]=function(){var i=arguments;t.queue.push(function(){t[n].apply(t,i)})}}function f(n,t){if(n){var u=r.createElement(i);u.type="text/javascript";u.src=n;u.async=!0;u.onload=t;u.onerror=t;r.getElementsByTagName(i)[0].parentNode.appendChild(u)}else t()}var r=document,t=this,i;t.applicationInsightsId=n;u("logEvent");u("logPageView");i="script";f(t.configUrl,function(){f("//az416426.vo.msecnd.net/scripts/a/ai.0.7.js")});t.start=function(){}}};
            appInsights.start("f7107e38-5c9b-47d7-b849-1ad7625d11a4");
            appInsights.logPageView();
        </script> 
 </head> 
 <body class="post-template tag-asp-net tag-html5 tag-javascript tag-mvc tag-stripe tag-github nav-closed"> 
  <div class="navbar navbar-default navbar-static-top orange noborder"> 
   <div class="container"> 
    <div class="navbar-header noborder"> 
     <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#custom-navbar" aria-expanded="false"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
    </div> 
    <div class="collapse navbar-collapse" id="custom-navbar"> 
     <ul class="nav navbar-nav"> 
      <li class="" role="presentation"><a href="https://cmatskas.com/">Home</a></li> 
      <li class="" role="presentation"><a href="https://cmatskas.com/about">About</a></li> 
      <li class="" role="presentation"><a href="https://cmatskas.com/speaking">Speaking</a></li> 
     </ul> 
    </div> 
   </div> 
  </div> 
  <div class="site-wrapper"> 
   <div class="container"> 
    <div id="maincontent"> 
     <section class="col-md-12"> 
      <main role="main"> 
       <article class="post tag-asp-net tag-html5 tag-javascript tag-mvc tag-stripe tag-github"> 
        <header class="post-header"> 
         <h1 class="post-title">Processing Payments and with Stripe, JavaScript and C# - PCI compliant</h1> 
         <section class="post-meta"> 
          <time class="post-date" datetime="2014-09-03">03 September 2014</time> 
          <span style="background:#CAC4C6; font-weight:700; font-size:20px">&nbsp;<a href="/processing-payments-and-being-pci-compliant-with-stripe-js/#disqus_thread"> Comments</a>&nbsp;</span> Posted in 
          <a href="/tag/asp-net/">ASP.NET</a>, 
          <a href="/tag/html5/">HTML 5</a>, 
          <a href="/tag/javascript/">JavaScript</a>, 
          <a href="/tag/mvc/">MVC</a>, 
          <a href="/tag/stripe/">stripe</a>, 
          <a href="/tag/github/">github</a> 
         </section> 
        </header> 
        <section class="post-content"> 
         <blockquote> 
          <p>The source code and post have been updated to use the latest Stripe.NET API =&gt; v4.2</p> 
         </blockquote> 
         <p>Online payments! We've all used them and some of us may have had the "fortune" implementing them on one website or another. <a href="http://stripe.com" title=" target=&quot;_blank">Stripe</a> is the <strong>not-so-new kid on the block</strong>, since it recently expanded in many countries, that makes this development task a breeze.</p> 
         <p>If you are using <code>.NET</code>, then <a href="https://github.com/jaymedavis/stripe.net" target="_blank">Stripe.NET</a> is an excellent library that hides away most of the complexity and provides a very nice API. You can get it as a <strong>NuGet</strong> package or you can check the source code on <strong>GitHub</strong>. Although Stripe.NET is excllent, it comes with a big caveat: if you process the payment details on your server, then you need to be PCI compliant and you are bound to some really strict regulations. <strong><u>Yes</u></strong>, this applies even when you don't store Credit/Debit card information on your servers. The simple transmission of the data makes you liable to PCI legislation.</p> 
         <blockquote> 
          <p>If you are PCI-compliant and still want to use the Stripe.NET exclusively to process payments, please check my post <a href="http://cmatskas.com/processing-payments-on-your-site-using-stripe-and-net/" target="_blank">here.</a></p> 
         </blockquote> 
         <p>But fret not my friend, as there is a fairly simple solution : <strong>Stripe.js</strong>. This is the library provided by the lovely folks over at Stripe that allows you to process payment information and charge credit cards to your heart's content and still be PCI-compliant. By using the Stripe.js library, you can send the payment details (card number, cvc and expiry date) to Stripe directly from the javascript client and in return you get a <strong>token</strong> which you can use later to make a one off charge. The good news is that the payment details never make it to your server so you don't have to worry about the legal implications.</p> 
         <p>So, let's create an example to see all this in action.</p> 
         <h4 id="1theaspnetmvcview">1. The ASP.NET MVC View</h4> 
         <p>We will create a basic MVC View which will be used to retrieve and process the payment details from the user.</p> 
         <script src="https://gist.github.com/cmatskas/ad936842f0e4e3718620.js"></script> 
         <p>The View, we will name it <code>Charge.cshtml</code> for now, is a boiler plate input form. The interesting part is that the view is logically split into two sections with some input elements inside the form and some elements outside the form. The reason for this is that the input elements outside the form will not be posted back to the server when we submit the form, hence making the process PCI-compliant.</p> 
         <p>The View has a strongly typed model <code>StripeChargeModel</code>, to pass the data to and from the controller. It is highly recommended that you add validation using your preferred way to ensure that the data entered has the right format and it's valid - e.g. ExpiryDate set in the past or not a valid date etc. </p> 
         <p>Now, at the bottom of the page, add the JavaScript code to get the Stripe token and submit the form. I am using a view with a layout so my Javascript is inside a <strong>section</strong>. In addition to the imported .js libraries on this page, the layout page also includes a reference to <code>jQuery</code>, so make sure you add it to your page as well if not already available.</p> 
         <script src="https://gist.github.com/cmatskas/e5ef8c42605998803a8b.js"></script> 
         <p>Let's break down the code, shall we?</p> 
         <p>First we add a reference to the the Stripe.js file and then inside the <code>document.ready()</code> we set our Publisheable key. You can get your public key from the Stripe dashboard. Then we create an event handler for the button <code>click</code> and a callback method <code>stripeResponseHandler()</code>. The 'click' event handler is responsible for retrieve the Credit/Debit card details and posting them <u>directly</u> to Stripe in order to get a Token. Notice that we use the minimum information necessary in order to retrieve the Token. Once that call is successful, Stripe sends a response which we process in the <code>stripeResponseHandler()</code> callback method. If the response has an error, e.g. due to invalid credit card number etc, then we alert the user with the error message. If the response is successful, we save the Token value to a hidden field and then submit the form to the server with the rest of the details in order to charge the user's card.</p> 
         <p><strong>NOTE:</strong> the current code contains no validation. You should definitely implement validation to ensure that users enter valid data and provide a great user experience by giving feedback accordingly.</p> 
         <h4 id="2thedatamodel">2. The DataModel</h4> 
         <p>The DataModel is used to pass data between the view and the controller. The model attached below is a very crude one and doesn't contain any validation other than setting the <strong>Amount</strong> and the <strong>Token</strong> properties to mandatory. I would argue that the <strong>CardHolderName</strong> should also be made mandatory/required as it will show up on the Stripe Dashboard when running reports etc.</p> 
         <script src="https://gist.github.com/cmatskas/b3200b18b992b04c3139.js"></script> 
         <h4 id="3thecontroller">3. The controller</h4> 
         <p>The controller contains two methods, the first is the <code>GET</code> and the second is the <code>POST</code>. The first one doesn't do anything other than serve the View with the corresponding model. The second, on the other hand, validates the model and makes the Credit/Debit card charge. </p> 
         <script src="https://gist.github.com/cmatskas/1ad6d7102037da813556.js"></script> 
         <p>Pay close attention to the <code>ProcessPayment()</code> helper method that performs the actual charge with Stripe. We create a <code>StripeChargeCreateOptions</code> object with the amount and currency and <code>StripeSourceOptions</code> which contains the token. Then we create an instance of a <code>StripeChargeService</code> where we pass our private stripe key. The service is used to make the charge by calling the <code>chargeService.Create(myCharge);</code> method. This method returns a <code>StripeCharge</code> object which you can again persist or discard as you please.</p> 
         <p>This implementation ensures that any payment processed through your site is PCI-compliant. Stripe's simple and awesome!</p> 
         <p>You can check the full working source code on this <a href="https://github.com/cmatskas/StripeSample" target="_blank">GitHub repo</a>.</p> 
         <p>I hope this post made your life a little bit easier.</p> 
        </section> 
        <section class="follow-me" style="margin-top:50px; margin-bottom:30px"> 
         <strong><i>P.S. Make sure you follow me on Twitter <a href="https://twitter.com/christosmatskas">@christosmatskas</a> for more up-to-date news, articles and tips.</i></strong> 
        </section> 
        <hr> 
        <footer> 
         <section class="text-right"> 
          <ul class="list-unstyled list-inline"> 
           <li>Share this post on </li> 
           <li> <a href="https://twitter.com/share?text=Processing%20Payments%20and%20with%20Stripe%2C%20JavaScript%20and%20C%23%20-%20PCI%20compliant&amp;url=https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/" onclick="window.open(this.href, 'twitter-share', 'width=550,height=235');return false;"> <i class="fa fa-twitter"></i></a> </li> 
           <li> <a href="https://www.facebook.com/sharer/sharer.php?u=https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/" onclick="window.open(this.href, 'facebook-share','width=580,height=296');return false;"> <i class="fa fa-facebook"></i></a> </li> 
           <li> <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/&amp;title=Processing%20Payments%20and%20with%20Stripe%2C%20JavaScript%20and%20C%23%20-%20PCI%20compliant&amp;source=cmatskas.com" onclick="window.open(this.href, 'linkedin-share','width=520,height=570');return false;"> <i class="fa fa-linkedin"></i></a> </li> 
           <li> <a class="icon-google-plus" href="https://plus.google.com/share?url=https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/" onclick="window.open(this.href, 'google-plus-share', 'width=490,height=530');return false;"><i class="fa fa-google-plus" "></i></a></li> 
          </ul> 
         </section> 
        </footer> 
       </article> 
      </main> 
      <aside class="row"> 
       <div class="col-xs-12 col-md-5 text-left"> 
        <a href="/upload-files-to-the-server-using-javascript-and-mvc-webapi/"><i class="fa fa-arrow-circle-o-left fa-icon-left"></i>Upload files to the server using Javascript and MVC WebAPI</a> 
       </div> 
       <div class="col-xs-12 col-md-2 text-center"> 
        <a href="https://cmatskas.com">Blog Home</a> 
       </div> 
       <div class="col-xs-12 col-md-5 text-right"> 
        <a href="/my-developer-rig-and-why-i-use-a-mac-as-a-net-developer/">My developer rig and why I use a MacBook Pro as a .NET developer<i class="fa fa-arrow-circle-o-right fa-icon-right"></i></a> 
       </div> 
      </aside> 
      <div id="disqus_thread"></div> 
     </section> 
    </div> 
    <script type="text/javascript">
        var disqus_shortname = 'cmatskas';
        var disqus_identifier = '66';
        var pageUrl = 'https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/';
        var pageIdentifier = '66';
        console.log('post.id =' + disqus_identifier);
        console.log('id =' + '66');
        console.log('pageUrl = ' + pageUrl);
        var disqus_config = function () {
            this.page.url = pageUrl;  // Replace PAGE_URL with your page's canonical URL variable
            this.page.identifier = pageIdentifier; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
        };
        
        (function() {  // DON'T EDIT BELOW THIS LINE
            var d = document, s = d.createElement('script');
            s.src = '//cmatskas.disqus.com/embed.js';
            s.setAttribute('data-timestamp', + new Date());
            (d.head || d.body).appendChild(s);
        })();
    </script> 
    <noscript>
     Please enable JavaScript to view the 
     <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
    </noscript> 
    <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> 
   </div> 
   <script type="text/javascript" src="/assets/js/jquery.fitvids.js?v=dd678977ab"></script> 
   <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script> 
   <script type="text/javascript" src="/assets/js/bootstrap.min.js?v=dd678977ab"></script> 
   <script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"></script> 
   <script id="dsq-count-scr" src="//cmatskas.disqus.com/count.js" async></script>   
  </div>
 </body>
</html>