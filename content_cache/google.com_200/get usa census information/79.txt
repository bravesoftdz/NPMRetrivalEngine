<!doctype html>
<!--Whatever your mind can conceive and can believe, it can achieve. ~Napoleon Hill

Whatever we think about and thank about we bring about. ~John Demartini

Whether you think you can or can’t either way you are right. ~Henry Ford-->
<html lang="en">
 <head itemscope itemtype="http://schema.org/WebSite">
  <meta content="Hackster.io" itemprop="name">
  <meta content="https://www.hackster.io" itemprop="url">
  <meta charset="utf-8">
  <meta content="IE=Edge,chrome=1" http-equiv="X-UA-Compatible"> 
  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"0f3d20e9cb","applicationID":"1979363","transactionName":"IApZEUReXVUGRElGQAwPUgZCQh5KC1kR","queueTime":8,"applicationTime":208,"agent":""}</script> 
  <script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4OUlNUGwIJU1hRAQI="};window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o||n)},o,o.exports)}return n[e].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({1:[function(t,n,e){function r(t){try{s.console&&console.log(t)}catch(n){}}var o,i=t("ee"),a=t(15),s={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(s.console=!0,o.indexOf("dev")!==-1&&(s.dev=!0),o.indexOf("nr_dev")!==-1&&(s.nrDev=!0))}catch(c){}s.nrDev&&i.on("internal-error",function(t){r(t.stack)}),s.dev&&i.on("fn-err",function(t,n,e){r(e.stack)}),s.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(s,function(t,n){return t}).join(", ")))},{}],2:[function(t,n,e){function r(t,n,e,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,n,e)])}catch(s){try{i("ierr",[s,c.now(),!0])}catch(u){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,n,e){this.message=t||"Uncaught error with no additional information",this.sourceURL=n,this.line=e}function o(t){i("err",[t,c.now()])}var i=t("handle"),a=t(16),s=t("ee"),c=t("loader"),f=window.onerror,u=!1,d=0;c.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(8),t(7),"addEventListener"in window&&t(5),c.xhrWrappable&&t(9),u=!0)}s.on("fn-start",function(t,n,e){u&&(d+=1)}),s.on("fn-err",function(t,n,e){u&&(this.thrown=!0,o(e))}),s.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),s.on("internal-error",function(t){i("ierr",[t,c.now(),!0])})},{}],3:[function(t,n,e){t("loader").features.ins=!0},{}],4:[function(t,n,e){function r(t){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var o=t("ee"),i=t("handle"),a=t(8),s=t(7),c="learResourceTimings",f="addEventListener",u="resourcetimingbufferfull",d="bstResource",l="resource",p="-start",h="-end",m="fn"+p,w="fn"+h,v="bstTimer",y="pushState",g=t("loader");g.features.stn=!0,t(6);var b=NREUM.o.EV;o.on(m,function(t,n){var e=t[0];e instanceof b&&(this.bstStart=g.now())}),o.on(w,function(t,n){var e=t[0];e instanceof b&&i("bst",[e,n,this.bstStart,g.now()])}),a.on(m,function(t,n,e){this.bstStart=g.now(),this.bstType=e}),a.on(w,function(t,n){i(v,[n,this.bstStart,g.now(),this.bstType])}),s.on(m,function(){this.bstStart=g.now()}),s.on(w,function(t,n){i(v,[n,this.bstStart,g.now(),"requestAnimationFrame"])}),o.on(y+p,function(t){this.time=g.now(),this.startPath=location.pathname+location.hash}),o.on(y+h,function(t){i("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),f in window.performance&&(window.performance["c"+c]?window.performance[f](u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["c"+c]()},!1):window.performance[f]("webkit"+u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["webkitC"+c]()},!1)),document[f]("scroll",r,{passive:!0}),document[f]("keypress",r,!1),document[f]("click",r,!1)}},{}],5:[function(t,n,e){function r(t){for(var n=t;n&&!n.hasOwnProperty(u);)n=Object.getPrototypeOf(n);n&&o(n)}function o(t){s.inPlace(t,[u,d],"-",i)}function i(t,n){return t[1]}var a=t("ee").get("events"),s=t(18)(a,!0),c=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";n.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,n){var e=t[1],r=c(e,"nr@wrapped",function(){function t(){if("function"==typeof e.handleEvent)return e.handleEvent.apply(e,arguments)}var n={object:t,"function":e}[typeof e];return n?s(n,"fn-",null,n.name||"anonymous"):e});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],6:[function(t,n,e){var r=t("ee").get("history"),o=t(18)(r);n.exports=r,o.inPlace(window.history,["pushState","replaceState"],"-")},{}],7:[function(t,n,e){var r=t("ee").get("raf"),o=t(18)(r),i="equestAnimationFrame";n.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],8:[function(t,n,e){function r(t,n,e){t[0]=a(t[0],"fn-",null,e)}function o(t,n,e){this.method=e,this.timerDuration=isNaN(t[1])?0:+t[1],t[0]=a(t[0],"fn-",this,e)}var i=t("ee").get("timer"),a=t(18)(i),s="setTimeout",c="setInterval",f="clearTimeout",u="-start",d="-";n.exports=i,a.inPlace(window,[s,"setImmediate"],s+d),a.inPlace(window,[c],c+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(c+u,r),i.on(s+u,o)},{}],9:[function(t,n,e){function r(t,n){d.inPlace(n,["onreadystatechange"],"fn-",s)}function o(){var t=this,n=u.context(t);t.readyState>3&&!n.resolved&&(n.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,y,"fn-",s)}function i(t){g.push(t),h&&(x?x.then(a):w?w(a):(E=-E,O.data=E))}function a(){for(var t=0;t<g.length;t++)r([],g[t]);g.length&&(g=[])}function s(t,n){return n}function c(t,n){for(var e in t)n[e]=t[e];return n}t(5);var f=t("ee"),u=f.get("xhr"),d=t(18)(u),l=NREUM.o,p=l.XHR,h=l.MO,m=l.PR,w=l.SI,v="readystatechange",y=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],g=[];n.exports=u;var b=window.XMLHttpRequest=function(t){var n=new p(t);try{u.emit("new-xhr",[n],n),n.addEventListener(v,o,!1)}catch(e){try{u.emit("internal-error",[e])}catch(r){}}return n};if(c(p,b),b.prototype=p.prototype,d.inPlace(b.prototype,["open","send"],"-xhr-",s),u.on("send-xhr-start",function(t,n){r(t,n),i(n)}),u.on("open-xhr-start",r),h){var x=m&&m.resolve();if(!w&&!m){var E=1,O=document.createTextNode(E);new h(a).observe(O,{characterData:!0})}}else f.on("fn-end",function(t){t[0]&&t[0].type===v||a()})},{}],10:[function(t,n,e){function r(t){var n=this.params,e=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!n.aborted){if(e.duration=a.now()-this.startTime,4===t.readyState){n.status=t.status;var i=o(t,this.lastSize);if(i&&(e.rxSize=i),this.sameOrigin){var c=t.getResponseHeader("X-NewRelic-App-Data");c&&(n.cat=c.split(", ").pop())}}else n.status=0;e.cbTime=this.cbTime,f.emit("xhr-done",[t],t),s("xhr",[n,e,this.startTime])}}}function o(t,n){var e=t.responseType;if("json"===e&&null!==n)return n;var r="arraybuffer"===e||"blob"===e||"json"===e?t.response:t.responseText;return h(r)}function i(t,n){var e=c(n),r=t.params;r.host=e.hostname+":"+e.port,r.pathname=e.pathname,t.sameOrigin=e.sameOrigin}var a=t("loader");if(a.xhrWrappable){var s=t("handle"),c=t(11),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(14),h=t(13),m=window.XMLHttpRequest;a.features.xhr=!0,t(9),f.on("new-xhr",function(t){var n=this;n.totalCbs=0,n.called=0,n.cbTime=0,n.end=r,n.ended=!1,n.xhrGuids={},n.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){n.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,n){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&n.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,n){var e=this.metrics,r=t[0],o=this;if(e&&r){var i=h(r);i&&(e.txSize=i)}this.startTime=a.now(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof n.onload))&&o.end(n)}catch(e){try{f.emit("internal-error",[e])}catch(r){}}};for(var s=0;s<d;s++)n.addEventListener(u[s],this.listener,!1)}),f.on("xhr-cb-time",function(t,n,e){this.cbTime+=t,n?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof e.onload||this.end(e)}),f.on("xhr-load-added",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&!this.xhrGuids[e]&&(this.xhrGuids[e]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&this.xhrGuids[e]&&(delete this.xhrGuids[e],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],n)}),f.on("removeEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],n)}),f.on("fn-start",function(t,n,e){n instanceof m&&("onload"===e&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=a.now()))}),f.on("fn-end",function(t,n){this.xhrCbStart&&f.emit("xhr-cb-time",[a.now()-this.xhrCbStart,this.onload,n],n)})}},{}],11:[function(t,n,e){n.exports=function(t){var n=document.createElement("a"),e=window.location,r={};n.href=t,r.port=n.port;var o=n.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=n.hostname||e.hostname,r.pathname=n.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!n.protocol||":"===n.protocol||n.protocol===e.protocol,a=n.hostname===document.domain&&n.port===e.port;return r.sameOrigin=i&&(!n.hostname||a),r}},{}],12:[function(t,n,e){function r(){}function o(t,n,e){return function(){return i(t,[f.now()].concat(s(arguments)),n?null:this,e),n?void 0:this}}var i=t("handle"),a=t(15),s=t(16),c=t("ee").get("tracer"),f=t("loader"),u=NREUM;"undefined"==typeof window.newrelic&&(newrelic=u);var d=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",p=l+"ixn-";a(d,function(t,n){u[n]=o(l+n,!0,"api")}),u.addPageAction=o(l+"addPageAction",!0),u.setCurrentRouteName=o(l+"routeName",!0),n.exports=newrelic,u.interaction=function(){return(new r).get()};var h=r.prototype={createTracer:function(t,n){var e={},r=this,o="function"==typeof n;return i(p+"tracer",[f.now(),t,e],r),function(){if(c.emit((o?"":"no-")+"fn-start",[f.now(),r,o],e),o)try{return n.apply(this,arguments)}finally{c.emit("fn-end",[f.now()],e)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,n){h[n]=o(p+n)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,f.now()])}},{}],13:[function(t,n,e){n.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(n){return}}}},{}],14:[function(t,n,e){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),n.exports=r},{}],15:[function(t,n,e){function r(t,n){var e=[],r="",i=0;for(r in t)o.call(t,r)&&(e[i]=n(r,t[r]),i+=1);return e}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],16:[function(t,n,e){function r(t,n,e){n||(n=0),"undefined"==typeof e&&(e=t?t.length:0);for(var r=-1,o=e-n||0,i=Array(o<0?0:o);++r<o;)i[r]=t[n+r];return i}n.exports=r},{}],17:[function(t,n,e){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],18:[function(t,n,e){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(16),a="nr@original",s=Object.prototype.hasOwnProperty,c=!1;n.exports=function(t,n){function e(t,n,e,o){function nrWrapper(){var r,a,s,c;try{a=this,r=i(arguments),s="function"==typeof e?e(r,a):e||{}}catch(f){l([f,"",[r,a,o],s])}u(n+"start",[r,a,o],s);try{return c=t.apply(a,r)}catch(d){throw u(n+"err",[r,a,d],s),d}finally{u(n+"end",[r,a,c],s)}}return r(t)?t:(n||(n=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,n,o,i){o||(o="");var a,s,c,f="-"===o.charAt(0);for(c=0;c<n.length;c++)s=n[c],a=t[s],r(a)||(t[s]=e(a,f?s+o:o,i,s))}function u(e,r,o){if(!c||n){var i=c;c=!0;try{t.emit(e,r,o,n)}catch(a){l([a,e,r,o])}c=i}}function d(t,n){if(Object.defineProperty&&Object.keys)try{var e=Object.keys(t);return e.forEach(function(e){Object.defineProperty(n,e,{get:function(){return t[e]},set:function(n){return t[e]=n,n}})}),n}catch(r){l([r])}for(var o in t)s.call(t,o)&&(n[o]=t[o]);return n}function l(n){try{t.emit("internal-error",n)}catch(e){}}return t||(t=o),e.inPlace=f,e.flag=a,e}},{}],ee:[function(t,n,e){function r(){}function o(t){function n(t){return t&&t instanceof r?t:t?c(t,s,i):i()}function e(e,r,o,i){if(!l.aborted||i){t&&t(e,r,o);for(var a=n(o),s=h(e),c=s.length,f=0;f<c;f++)s[f].apply(a,r);var d=u[y[e]];return d&&d.push([g,e,r,a]),a}}function p(t,n){v[t]=h(t).concat(n)}function h(t){return v[t]||[]}function m(t){return d[t]=d[t]||o(e)}function w(t,n){f(t,function(t,e){n=n||"feature",y[e]=n,n in u||(u[n]=[])})}var v={},y={},g={on:p,emit:e,get:m,listeners:h,context:n,buffer:w,abort:a,aborted:!1};return g}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var s="nr@context",c=t("gos"),f=t(15),u={},d={},l=n.exports=o();l.backlog=u},{}],gos:[function(t,n,e){function r(t,n,e){if(o.call(t,n))return t[n];var r=e();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(t,n,e){function r(t,n,e,r){o.buffer([t],r),o.emit(t,n,e)}var o=t("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(t,n,e){function r(t){var n=typeof t;return!t||"object"!==n&&"function"!==n?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");n.exports=r},{}],loader:[function(t,n,e){function r(){if(!x++){var t=b.info=NREUM.info,n=l.getElementsByTagName("script")[0];if(setTimeout(u.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&n))return u.abort();f(y,function(n,e){t[n]||(t[n]=e)}),c("mark",["onload",a()+b.offset],null,"api");var e=l.createElement("script");e.src="https://"+t.agent,n.parentNode.insertBefore(e,n)}}function o(){"complete"===l.readyState&&i()}function i(){c("mark",["domContent",a()+b.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(s=Math.max((new Date).getTime(),s))-b.offset}var s=(new Date).getTime(),c=t("handle"),f=t(15),u=t("ee"),d=window,l=d.document,p="addEventListener",h="attachEvent",m=d.XMLHttpRequest,w=m&&m.prototype;NREUM.o={ST:setTimeout,SI:d.setImmediate,CT:clearTimeout,XHR:m,REQ:d.Request,EV:d.Event,PR:d.Promise,MO:d.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1044.min.js"},g=m&&w&&w[p]&&!/CriOS/.test(navigator.userAgent),b=n.exports={offset:s,now:a,origin:v,features:{},xhrWrappable:g};t(12),l[p]?(l[p]("DOMContentLoaded",i,!1),d[p]("load",r,!1)):(l[h]("onreadystatechange",o),d[h]("onload",r)),c("mark",["firstbyte",s],null,"api");var x=0,E=t(17)},{}]},{},["loader",2,10,4,3]);</script>
  <meta content="543757942384158" property="fb:app_id">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">
  <meta content="api.hackster.io" id="api-uri" name="api-uri">
  <title>Cloud Height - Get Cloud Info Using Alexa and a METAR API - Hackster.io</title>
  <meta content="Cloud Height is an Amazon Alexa skill that can get cloud cover and altitude information using a METAR API and the postcode of the device. Find this and other hardware projects on Hackster.io." name="description">
  <meta content="article" property="og:type">
  <meta content="Cloud Height - Get Cloud Info Using Alexa and a METAR API" property="og:headline">
  <meta content="Cloud Height - Get Cloud Info Using Alexa and a METAR API" property="og:title">
  <meta content="Cloud Height is an Amazon Alexa skill that can get cloud cover and altitude information using a METAR API and the postcode of the device. By Tommy and Sean." property="og:description">
  <meta content="https://hackster.imgix.net/uploads/attachments/320027/coverimage_mZKDfCl9ZL.jpg?auto=compress%2Cformat&amp;w=600&amp;h=450&amp;fit=min" property="og:image">
  <meta content="600" property="og:image:width">
  <meta content="450" property="og:image:height">
  <meta content="https://www.hackster.io/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656" property="og:url">
  <meta content="summary_large_image" property="twitter:card">
  <meta content="Cloud Height - Get Cloud Info Using Alexa and a METAR API" property="twitter:title">
  <meta content="Cloud Height is an Amazon Alexa skill that can get cloud cover and altitude information using a METAR API and the postcode of the device." property="twitter:description">
  <meta content="https://www.hackster.io/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656/embed" property="twitter:player">
  <meta content="600" property="twitter:player:width">
  <meta content="450" property="twitter:player:height">
  <meta content="https://hackster.imgix.net/uploads/attachments/320027/coverimage_mZKDfCl9ZL.jpg?auto=compress%2Cformat&amp;w=600&amp;h=450&amp;fit=min" property="twitter:image">
  <link href="https://www.hackster.io/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656" rel="canonical">
  <meta content="environmental sensing,interface,voice control,weather" name="keywords">
  <meta content="noindex nofollow" property="robots">
  <meta content="@hacksterio" property="twitter:site">
  <meta content="hackster.io" property="twitter:domain">
  <meta content="Hackster.io" property="og:site_name">
  <script>window.projectType = "alexa";</script>
  <!--Le HTML5 shim, for IE6-8 support of HTML elements-->
  <!--[if lt IE 9]
= javascript_include_tag "//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.6.1/html5shiv.js"-->
  <link rel="stylesheet" media="all" href="/assets/application-c03499ac6c6820cac56d36d0a84694017f5d6f09fb3e1820fd9947d7eba5cac9.css">
  <link href="/assets/bundles/client_bundle.b08e3c906e47ac76e9ee.css" rel="stylesheet">
  <link href="https://www.hackster.io/assets/favicons/apple-touch-icon-57x57-b9adcd1bd159f32ba17674ea78a0972e20afcc10f486ab6e509282d0a6eb0f58.png?v=zXX3Bm3lo3" rel="apple-touch-icon" sizes="57x57">
  <link href="https://www.hackster.io/assets/favicons/apple-touch-icon-60x60-a460f66e7425566394553fca89b9452b02844050957d2e498784f6b49f13c894.png?v=zXX3Bm3lo3" rel="apple-touch-icon" sizes="60x60">
  <link href="https://www.hackster.io/assets/favicons/apple-touch-icon-72x72-9f08b053288321c07aba5db8134e9f1228da839591523ae3603e0d592333b0f7.png?v=zXX3Bm3lo3" rel="apple-touch-icon" sizes="72x72">
  <link href="https://www.hackster.io/assets/favicons/apple-touch-icon-76x76-6d0efe2e45f65776f9731026e79cd3aa4951c4b6639cc14c243a58a8375630da.png?v=zXX3Bm3lo3" rel="apple-touch-icon" sizes="76x76">
  <link href="https://www.hackster.io/assets/favicons/apple-touch-icon-114x114-e9b0ca8ba4d9821ff453e29addab8bc088624849b5ce033c68a259444dfc5ab6.png?v=zXX3Bm3lo3" rel="apple-touch-icon" sizes="114x114">
  <link href="https://www.hackster.io/assets/favicons/apple-touch-icon-120x120-f730acae585534c3b60ef0e3fb8d61745cd77597f5b4793eafb9d6fb609fb665.png?v=zXX3Bm3lo3" rel="apple-touch-icon" sizes="120x120">
  <link href="https://www.hackster.io/assets/favicons/apple-touch-icon-144x144-5f81b7662b52ca9de46864798aabf4a45753f9d8502fa4bd2646573b2f2d546d.png?v=zXX3Bm3lo3" rel="apple-touch-icon" sizes="144x144">
  <link href="https://www.hackster.io/assets/favicons/apple-touch-icon-152x152-14611e454d4cde90d3cf3c72c8449e29bca9d2dd57f0f995632e7e5fbdd0bed1.png?v=zXX3Bm3lo3" rel="apple-touch-icon" sizes="152x152">
  <link href="https://www.hackster.io/assets/favicons/apple-touch-icon-180x180-e4919391d8a5a61764099e7f7d06641e43f6964e591f155752d5be470aabaaa9.png?v=zXX3Bm3lo3" rel="apple-touch-icon" sizes="180x180">
  <link href="https://www.hackster.io/assets/favicons/favicon-16x16-870c9ddbb299d7e26cbee906ca096d3ec7757bd41c59f91c5a61bf76fa8c98ee.png?v=zXX3Bm3lo3&quot; sizes=&quot;16x16" rel="icon" type="image/png">
  <link href="https://www.hackster.io/assets/favicons/favicon-32x32-957c1e4ac51a714b508859386e897dc2993dcae771164301e9423b32e9132d4d.png?v=zXX3Bm3lo3&quot; sizes=&quot;32x32" rel="icon" type="image/png">
  <link href="https://www.hackster.io/assets/favicons/favicon-96x96-a6f70c4dd2c98d0ea30b31282da0c8e19268e4eecb06ad144c87e040b021aeab.png?v=zXX3Bm3lo3&quot; sizes=&quot;96x96" rel="icon" type="image/png">
  <link href="https://www.hackster.io/favicons/favicon-160x160.png?v=zXX3Bm3lo3&quot; sizes=&quot;160x160" rel="icon" type="image/png">
  <link href="https://www.hackster.io/assets/favicons/android-chrome-192x192-1325305f9335c2e0f213d3882fe59c919f03bd7b791690f1141387a16a72110e.png?v=zXX3Bm3lo3&quot; sizes=&quot;192x192" rel="icon" type="image/png">
  <link href="https://www.hackster.io/assets/favicons/manifest-e4a294316a9c40951ca76487b0f2e2c9213b68885773332e7e7a79fe31ecc0a2.json?v=zXX3Bm3lo3" rel="manifest">
  <link color="#1cacf7" href="https://www.hackster.io/assets/favicons/safari-pinned-tab-79cbf7601715d0e19c545886de644e69d97334e99f0c7aa64df98c0539382769.svg?v=zXX3Bm3lo3" rel="mask-icon">
  <link href="https://www.hackster.io/assets/favicons/favicon-ccf4ed2b3c0b095f2ec85c69ff8444c38e47aff6b39dedcb934563e0fd7b60db.ico?v=zXX3Bm3lo3" rel="shortcut icon">
  <meta content="#1cacf7" name="msapplication-TileColor">
  <meta content="https://www.hackster.io/assets/favicons/mstile-144x144-ea13b97589a22e74f5c44fe59a9dd083501c21aa514c4c9d742135ed8a818645.png?v=zXX3Bm3lo3" name="msapplication-TileImage">
  <meta content="#1cacf7" name="theme-color">
  <meta content="Hackster" name="apple-mobile-web-app-title">
  <meta content="Hackster" name="application-name">
  <script>gglTagMngrDataLayer = [{
  'loggedIn': "false",
  'mixpanelUser': "",
  'pageType': "projects#show"
}];</script>
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','gglTagMngrDataLayer','GTM-KR3BZMN');</script>
  <script> var jsk = { aai: "7YQJT9BHUX", ask: "c113f0569e873258342405ddf4a4dd09", kpk: "572238ffe861700c3147037d", kwk: "0af84106bd6fd13f96b91f5285d962610c3e484c700e6f9e67062b1c96b8b9247deb42c7c0e9ce27b1a2cc41e930d360764fe99237abfedc2128dab22606e21ee3c1d6f5e929c257fa4f267676343942d4ed0a51a65152054f127678b621e62c", mak: "hp0sle6ipt0opaot9jbi8ef0ep", cai: "hackster_production_contest", mei: "hackster_production_meetup_event", pri: "hackster_production_base_article", pli: "hackster_production_channel", pai: "hackster_production_part", sqi: "hackster_production_search_query", tai: "hackster_production_tag", tcai: "hackster_production_topic", usi: "hackster_production_user" } </script>
  <script>//<![CDATA[
    window.webpackManifest = {"0":"vendor.4cb2bcc35960c8563bf4.js","1":"client_bundle.b08e3c906e47ac76e9ee.js"}
    //]]></script>
  <script type="application/ld+json">{  "@context": "http://www.schema.org",  "@type":"LocalBusiness",  "name": "Hackster.io",  "url": "https://www.hackster.io/",  "image": "https://www.hackster.io/assets/hackster_logo_blue-03ea84833aa0dcf8f33be76d265d37340c7cd1ceb77a74429deb631ef0261e8f.png",  "address": {    "@type": "PostalAddress",    "streetAddress": "531 Howard street, suite 200",    "addressLocality": "San Francisco",    "addressRegion": "CA",    "postalCode": "94105"  }}</script>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KR3BZMN" style="display:none;visibility:hidden" width="0"></iframe>
  </noscript>
  <div id="outer-wrapper">
   <div class="popup-overlay modal-popup" data-width="450" id="simplified-signup-popup">
    <div class="popup-overlay-bg"></div>
    <div class="popup-overlay-outer">
     <div class="popup-overlay-inner">
      <button class="close" data-target="#simplified-signup-popup">×</button>
      <h4>Please complete the following to continue:</h4>
      <form class="simple_form user-form form-compact disable-on-submit text-left" id="login-form" novalidate action="/users/simplified_registrations" accept-charset="UTF-8" method="post">
       <input name="utf8" type="hidden" value="?">
       <input name="redirect_to" type="hidden">
       <input name="source" type="hidden">
       <div style="display:none;" class="form-group string optional user_full_name full-name-wrapper">
        <label class="string optional control-label" for="user_full_name">First name and last name:</label>
        <input class="string optional form-control" maxlength="255" size="255" type="text" name="user[full_name]" id="user_full_name">
       </div>
       <div class="form-group email optional user_email">
        <label class="email optional control-label" for="user_email">Email:</label>
        <input class="string email optional form-control form-control" maxlength="255" type="email" size="255" value="" name="user[email]" id="user_email">
       </div>
       <input type="submit" name="commit" value="Continue" class="btn btn-primary btn btn-primary btn-block">
      </form>
      <p><small>Already have an account? <a class="sign-in-link show-login-form" href="/users/sign_in?redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656">Sign in</a></small></p>
     </div>
    </div>
   </div>
   <div class="popup-overlay modal-popup modal-remove" data-width="800" id="signup-popup">
    <div class="popup-overlay-bg"></div>
    <div class="popup-overlay-outer">
     <div class="popup-overlay-inner has-columns">
      <div class="popup-left-column" style="background-image:url('https://www.hackster.io/assets/signup-popup-7812087e8c8a3ea5dbfa3a8ad566fee3f9ff81c52711661156fa3b7cd2e530c7.png')">
       <p style="font-size: 1.3em"><strong>Hackster is the community dedicated to learning hardware</strong></p>
       <p>Join to:</p>
       <ul class="text-left">
        <li>Get help and learn from our 200,000+ members</li>
        <li>Receive updates about new projects that match your interests</li>
        <li>Win prizes by participating in contests</li>
       </ul>
      </div>
      <div class="popup-right-column">
       <button class="close" data-target="#signup-popup">×</button>
       <form id="signup-popup-email" class="simple_form form-compact disable-on-submit user-form" novalidate action="/users" accept-charset="UTF-8" method="post">
        <input name="utf8" type="hidden" value="?">
        <input name="redirect_to" type="hidden" value="/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656">
        <input name="source" type="hidden" value="popup">
        <input name="welcome_email" type="hidden">
        <div class="form-group email optional user_email">
         <input class="string email optional form-control form-control" maxlength="255" placeholder="Email" type="email" size="255" value="" name="user[email]" id="user_email">
        </div>
        <div class="form-group password optional user_password">
         <input class="password optional form-control" maxlength="128" placeholder="Password" size="128" type="password" name="user[password]" id="user_password">
        </div>
        <input type="submit" name="commit" value="Create my free account" class="btn btn-primary btn btn-primary btn-block">
       </form>
       <div style="position:relative; margin-bottom: 20px">
        <div class="hr">
         or
        </div>
       </div>
       <a class="zocial zocial-block facebook welcome-email-link" href="https://www.hackster.io/users/auth/facebook?pre_signup_page_type=projects%23show&amp;pre_signup_title=Cloud+Height+-+Get+Cloud+Info+Using+Alexa+and+a+METAR+API+-+Hackster.io&amp;pre_signup_url=https%3A%2F%2Fwww.hackster.io%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&amp;redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656">Connect with Facebook</a>
       <p class="small"><a class="welcome-email-link" href="/users/sign_up?highlight=connect&amp;redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&amp;source=popup">Prefer connecting using another social account?</a></p>
       <p class="small" style="margin-bottom:0">Already have an account? <a class="welcome-email-link" href="/users/sign_in?redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656">Sign in</a></p>
      </div>
     </div>
    </div>
   </div>
   <div class="navbar navbar-default navbar-static-top" id="navigation">
    <div class="navbar-in" style="position:relative;">
     <div>
      <a title="Hackster.io" class="navbar-brand navbar-btn" href="/"><img alt="Hackster.io – Learning Hardware Community" src="/assets/hackster_logo_blue-03ea84833aa0dcf8f33be76d265d37340c7cd1ceb77a74429deb631ef0261e8f.png"></a>
      <div class="top-menu-nav show-on-desktop" id="nav-actions">
       <li id="explore-nav">
        <div data-react-class="ExploreMenu" data-react-props="{&quot;categories&quot;:[{&quot;title&quot;:&quot;Topics&quot;,&quot;link&quot;:&quot;/channels/topics?ref=topnav&quot;,&quot;suggestions&quot;:[{&quot;header&quot;:&quot;Popular&quot;,&quot;items&quot;:[{&quot;name&quot;:&quot;Home Automation&quot;,&quot;url&quot;:&quot;/home-automation&quot;},{&quot;name&quot;:&quot;Sensors&quot;,&quot;url&quot;:&quot;/sensors&quot;},{&quot;name&quot;:&quot;Robotics&quot;,&quot;url&quot;:&quot;/robotics&quot;},{&quot;name&quot;:&quot;Lights&quot;,&quot;url&quot;:&quot;/lights&quot;},{&quot;name&quot;:&quot;Displays&quot;,&quot;url&quot;:&quot;/displays&quot;},{&quot;name&quot;:&quot;Environmental Sensing&quot;,&quot;url&quot;:&quot;/enviro-sense&quot;},{&quot;name&quot;:&quot;Wearables&quot;,&quot;url&quot;:&quot;/wearables&quot;},{&quot;name&quot;:&quot;Games \u0026 Gaming&quot;,&quot;url&quot;:&quot;/games&quot;},{&quot;name&quot;:&quot;Security&quot;,&quot;url&quot;:&quot;/security&quot;},{&quot;name&quot;:&quot;Vehicles&quot;,&quot;url&quot;:&quot;/vehicles&quot;},{&quot;name&quot;:&quot;Automotive&quot;,&quot;url&quot;:&quot;/automotive&quot;},{&quot;name&quot;:&quot;Voice&quot;,&quot;url&quot;:&quot;/voice&quot;},{&quot;name&quot;:&quot;Music&quot;,&quot;url&quot;:&quot;/music&quot;},{&quot;name&quot;:&quot;Communication&quot;,&quot;url&quot;:&quot;/communication&quot;},{&quot;name&quot;:&quot;Weather&quot;,&quot;url&quot;:&quot;/weather&quot;},{&quot;name&quot;:&quot;Health&quot;,&quot;url&quot;:&quot;/health&quot;},{&quot;name&quot;:&quot;Sustainability&quot;,&quot;url&quot;:&quot;/sustainability&quot;},{&quot;name&quot;:&quot;3D Printing&quot;,&quot;url&quot;:&quot;/3d-printing&quot;},{&quot;name&quot;:&quot;Garden&quot;,&quot;url&quot;:&quot;/garden&quot;},{&quot;name&quot;:&quot;Clocks&quot;,&quot;url&quot;:&quot;/clocks&quot;},{&quot;name&quot;:&quot;Photos \u0026 Video&quot;,&quot;url&quot;:&quot;/photo-video&quot;},{&quot;name&quot;:&quot;Kids \u0026 Family&quot;,&quot;url&quot;:&quot;/KidsFamily&quot;},{&quot;name&quot;:&quot;Holidays&quot;,&quot;url&quot;:&quot;/holidays&quot;},{&quot;name&quot;:&quot;Art&quot;,&quot;url&quot;:&quot;/arts&quot;},{&quot;name&quot;:&quot;Animals&quot;,&quot;url&quot;:&quot;/animals&quot;},{&quot;name&quot;:&quot;Drones&quot;,&quot;url&quot;:&quot;/drones&quot;},{&quot;name&quot;:&quot;Food \u0026 Drinks&quot;,&quot;url&quot;:&quot;/food&quot;},{&quot;name&quot;:&quot;Plants&quot;,&quot;url&quot;:&quot;/plants-are-people-too&quot;},{&quot;name&quot;:&quot;Halloween Hacks&quot;,&quot;url&quot;:&quot;/halloween&quot;},{&quot;name&quot;:&quot;Notifications&quot;,&quot;url&quot;:&quot;/notifications&quot;},{&quot;name&quot;:&quot;Virtual Reality&quot;,&quot;url&quot;:&quot;/vr&quot;},{&quot;name&quot;:&quot;Artificial intelligence&quot;,&quot;url&quot;:&quot;/artificial-intelligence&quot;},{&quot;name&quot;:&quot;Star Wars&quot;,&quot;url&quot;:&quot;/star-wars&quot;},{&quot;name&quot;:&quot;Bikes&quot;,&quot;url&quot;:&quot;/bikes&quot;},{&quot;name&quot;:&quot;Upcycling&quot;,&quot;url&quot;:&quot;/upcycling&quot;},{&quot;name&quot;:&quot;Fitness&quot;,&quot;url&quot;:&quot;/fitness&quot;},{&quot;name&quot;:&quot;Fire \u0026 Pyrotechnics&quot;,&quot;url&quot;:&quot;/fire&quot;},{&quot;name&quot;:&quot;Augmented Reality&quot;,&quot;url&quot;:&quot;/augmented-reality&quot;}]}]},{&quot;title&quot;:&quot;Platforms&quot;,&quot;link&quot;:&quot;/platforms?ref=topnav&quot;,&quot;suggestions&quot;:[{&quot;header&quot;:&quot;Popular&quot;,&quot;items&quot;:[{&quot;name&quot;:&quot;Arduino&quot;,&quot;url&quot;:&quot;/arduino&quot;},{&quot;name&quot;:&quot;Microsoft&quot;,&quot;url&quot;:&quot;/microsoft&quot;},{&quot;name&quot;:&quot;Raspberry Pi&quot;,&quot;url&quot;:&quot;/raspberry-pi&quot;},{&quot;name&quot;:&quot;Intel&quot;,&quot;url&quot;:&quot;/intel&quot;},{&quot;name&quot;:&quot;Particle&quot;,&quot;url&quot;:&quot;/particle&quot;},{&quot;name&quot;:&quot;Google&quot;,&quot;url&quot;:&quot;/google&quot;},{&quot;name&quot;:&quot;SparkFun&quot;,&quot;url&quot;:&quot;/sparkfun&quot;},{&quot;name&quot;:&quot;Adafruit&quot;,&quot;url&quot;:&quot;/adafruit&quot;},{&quot;name&quot;:&quot;Amazon Alexa&quot;,&quot;url&quot;:&quot;/amazon-alexa&quot;},{&quot;name&quot;:&quot;Android&quot;,&quot;url&quot;:&quot;/android&quot;},{&quot;name&quot;:&quot;Everything ESP&quot;,&quot;url&quot;:&quot;/esp&quot;},{&quot;name&quot;:&quot;NXP&quot;,&quot;url&quot;:&quot;/NXP&quot;},{&quot;name&quot;:&quot;Amazon Web Services&quot;,&quot;url&quot;:&quot;/AmazonWebServices&quot;},{&quot;name&quot;:&quot;SeeedStudio&quot;,&quot;url&quot;:&quot;/seeed&quot;},{&quot;name&quot;:&quot;Autodesk&quot;,&quot;url&quot;:&quot;/autodesk&quot;}]},{&quot;header&quot;:&quot;Recently updated&quot;,&quot;items&quot;:[{&quot;name&quot;:&quot;ControlEverything.com&quot;,&quot;url&quot;:&quot;/controleverythingcom&quot;},{&quot;name&quot;:&quot;4D Systems&quot;,&quot;url&quot;:&quot;/4dsystems&quot;},{&quot;name&quot;:&quot;Cypress&quot;,&quot;url&quot;:&quot;/cypress&quot;},{&quot;name&quot;:&quot;PHPoC&quot;,&quot;url&quot;:&quot;/phpoc&quot;},{&quot;name&quot;:&quot;Modulo&quot;,&quot;url&quot;:&quot;/modulo&quot;},{&quot;name&quot;:&quot;Calliope mini&quot;,&quot;url&quot;:&quot;/calliope-mini&quot;},{&quot;name&quot;:&quot;Microchip&quot;,&quot;url&quot;:&quot;/microchip&quot;}]},{&quot;header&quot;:&quot;Recently added&quot;,&quot;items&quot;:[{&quot;name&quot;:&quot;mcThings&quot;,&quot;url&quot;:&quot;/mcthings&quot;},{&quot;name&quot;:&quot;Bitcraze&quot;,&quot;url&quot;:&quot;/bitcraze&quot;},{&quot;name&quot;:&quot;STMicroelectronics&quot;,&quot;url&quot;:&quot;/stmicroelectronics&quot;},{&quot;name&quot;:&quot;LattePanda&quot;,&quot;url&quot;:&quot;/lattepanda1&quot;}]}]},{&quot;title&quot;:&quot;Projects&quot;,&quot;link&quot;:&quot;/projects?ref=topnav&quot;},{&quot;title&quot;:&quot;Contests&quot;,&quot;link&quot;:&quot;/contests?ref=topnav&quot;},{&quot;title&quot;:&quot;Live&quot;,&quot;link&quot;:&quot;/live?ref=topnav&quot;},{&quot;title&quot;:&quot;Apps&quot;,&quot;link&quot;:&quot;/apps?ref=topnav&quot;},{&quot;title&quot;:&quot;Blog&quot;,&quot;link&quot;:&quot;https://blog.hackster.io?utm_source=hackster\u0026utm_medium=web\u0026utm_campaign=navbar&quot;}]}">
         <div data-reactroot="" data-reactid="1" data-react-checksum="1802875821">
          <div class="explore_menu__explore___1AzGb" data-reactid="2">
           <a href="/explore" title="Explore Hackster.io" data-reactid="3">Explore</a>
           <svg class="explore_menu__indicator___1op_o " viewbox="0 0 15 26" width="6px" height="10px" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" data-reactid="4">
            <polyline stroke="#4A4A4A" stroke-width="6" fill="none" points="1 1 13 13.0299571 1 25" data-reactid="5"></polyline>
            <!-- react-text: 6 -->;
            <!-- /react-text -->
           </svg>
          </div>
         </div>
        </div></li>
      </div>
      <ul class="clearfix show-on-desktop" id="navbar-right">
       <li><a class="login-link reactPortal" action="SigninDialog" data-react="{&quot;currentPanel&quot;:&quot;signin&quot;}" title="Log in" href="/users/sign_in?redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656">Log in</a></li>
       <li><a class="btn btn-primary login-link reactPortal" action="SigninDialog" data-react="{&quot;currentPanel&quot;:&quot;signup&quot;}" data-source="nav" title="Sign up" href="/users/sign_up?pre_signup_page_type=projects%23show&amp;pre_signup_title=Cloud+Height+-+Get+Cloud+Info+Using+Alexa+and+a+METAR+API+-+Hackster.io&amp;pre_signup_url=https%3A%2F%2Fwww.hackster.io%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&amp;redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&amp;source=nav">Sign up</a></li>
      </ul>
      <ul class="navbar-right top-menu-nav" id="left-nav"></ul>
      <div class="navbar-menu-group" id="navbar-right">
       <div class="fa fa-search" id="nav-search-icon"></div>
       <div class="fa fa-bars" id="nav-mobile-trigger"></div>
      </div>
      <span data-react-class="SearchInput" data-react-props="{&quot;onSearchPath&quot;:false}">
       <div id="react-search" class="search_input__container___1MtwE search_input__viewPortHeightMax___3oZkR" data-reactroot="" data-reactid="1" data-react-checksum="-880766892">
        <div class="search_input__inputContainer___LrgwE" data-reactid="2">
         <div class="search_input__searchIconWrapper___1oj2O" data-reactid="3">
          <svg height="26px" width="26px" class="search_input__searchIcon___1JbTz" viewbox="0 0 26 26" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" data-reactid="4">
           <defs data-reactid="5"></defs>
           <path d="M18.35,3.1 C16.35,1.1 13.65,0 10.75,0 C7.85,0 5.25,1.1 3.15,3.1 C-1.05,7.3 -1.05,14.1 3.15,18.2 C5.15,20.2 7.85,21.3 10.75,21.3 C13.15,21.3 15.45,20.5 17.35,19 L23.75,25.4 C23.95,25.6 24.35,25.8 24.65,25.8 C24.95,25.8 25.25,25.7 25.55,25.4 C26.05,24.9 26.05,24.1 25.55,23.6 L19.15,17.2 C22.55,13.1 22.25,7 18.35,3.1 L18.35,3.1 Z M5.05,16.5 C1.85,13.3 1.85,8.1 5.05,4.9 C6.55,3.4 8.65,2.5 10.85,2.5 C13.05,2.5 15.05,3.4 16.65,4.9 C19.85,8.1 19.85,13.3 16.65,16.5 C15.15,18 13.05,18.9 10.85,18.9 C8.65,18.9 6.55,18 5.05,16.5 L5.05,16.5 Z" id="Shape" stroke="none" fill-rule="evenodd" data-reactid="6"></path>
          </svg>
         </div>
         <input type="text" class="search_input__input___3CBks search_input__searchInputBase___1731f" id="searchInput" placeholder="What are you looking for?" value="" data-reactid="7">
        </div>
        <span class="search_input__dismiss___2xEM6 " data-reactid="8">×</span>
       </div></span>
     </div>
    </div>
   </div>
   <div id="main">
    <a class="project-switcher previous istooltip" data-container="body" data-placement="right" href="/projects/30d656/next?dir=prev" rel="nofollow tooltip" title="Previous project">
     <div class="inner">
      <i class="fa fa-chevron-left"></i>
     </div></a>
    <a class="project-switcher next istooltip" data-container="body" data-placement="left" href="/projects/30d656/next?dir=next" rel="nofollow tooltip" title="Next project">
     <div class="inner">
      <i class="fa fa-chevron-right"></i>
     </div></a>
    <div class="project-page project-page-single-column project-45421" id="content" itemscope itemtype="http://schema.org/Article">
     <div class="popup-overlay modal-popup" id="embed-popup">
      <div class="popup-overlay-bg"></div>
      <div class="popup-overlay-outer">
       <div class="popup-overlay-inner">
        <button class="close unselectable" data-effect="fade" data-target="#embed-popup">×</button>
        <h3>Embed the widget on your own site</h3>
        <div id="project-embed">
         <p>Add the following snippet to your HTML:<textarea class="embed-code" onclick="this.select();" type="text">&lt;iframe frameborder='0' height='327.5' scrolling='no' src='https://www.hackster.io/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656/embed' width='350'&gt;&lt;/iframe&gt;</textarea></p>
         <div class="project-embed-thumb">
          <div class="project-card">
           <div class="card-image">
            <img alt="Cloud Height - Get Cloud Info Using Alexa and a METAR API" class="cover-img" src="https://hackster.imgix.net/uploads/attachments/320027/coverimage_mZKDfCl9ZL.jpg?auto=compress%2Cformat&amp;w=400&amp;h=300&amp;fit=min">
            <a class="link-overlay project-link-with-ref" target="_blank" href="https://www.hackster.io/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656"></a>
            <div class="card-image-inner clearfix">
             <div class="project-difficulty pull-left">
              <span class="label label-warning label-hollow">Intermediate</span>
             </div>
             <div class="pull-left project-content-type">
              <i class="fa fa-book"></i>
             </div>
             <ul class="list-inline project-stats pull-right">
              <li><i class="fa fa-eye"></i><span class="stat-figure">157</span> </li>
              <li><i class="fa fa-thumbs-o-up"></i><span class="stat-figure">2</span> </li>
             </ul>
            </div>
            <div class="card-image-overlay">
             <p class="project-content-type"><i class="fa fa-book"></i><span>Full instructions</span></p>
             <p>Cloud Height is an Amazon Alexa skill that can get cloud cover and altitude information using a METAR API and the postcode of the device.</p>
             <p>Read up about this project on <img alt="Hackster.io" title="Hackster is a community dedicated to learning hardware, from beginner to pro." class="hackster-logo" src="/assets/hackster_logo_text-d59d06ec8fa548633e7014c258795d6e0fb21484d43aebe3d3225e9fdc2ec086.png"></p>
            </div>
           </div>
           <div class="card-text">
            <h4><a class="project-link-with-ref" target="_blank" href="https://www.hackster.io/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656">Cloud Height - Get Cloud Info Using Alexa and a METAR API</a></h4>
            <p><span class="user-name">Team Original Cloud</span></p>
           </div>
          </div>
         </div>
         <div class="clearfix"></div>
        </div>
       </div>
      </div>
     </div>
     <section class="section-teaser">
      <div class="container-desktop container">
       <meta content="Cloud Height - Get Cloud Info Using Alexa and a METAR API" itemprop="headline">
       <meta content="environmental sensing,interface,voice control,weather" itemprop="keywords">
       <meta content="https://www.hackster.io/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656" itemprop="mainEntityOfPage">
       <div id="home">
        <div class="project-title">
         <h1 itemprop="name">Cloud Height - Get Cloud Info Using Alexa and a METAR API</h1>
         <ul class="list-with-dividers project-credits">
          <li itemprop="author" itemscope itemtype="https://schema.org/Person">Made by Team Original Cloud (<a itemprop="name" href="/TommyDeveloper">Tommy</a> and <a itemprop="name" href="/phonedeveloper">Sean</a>)</li>
         </ul>
        </div>
        <div class="row project-teaser">
         <div class="col-md-7 col-md-offset-0-5 left-column">
          <div class="project-cover-image" itemprop="image" itemscope itemtype="https://schema.org/ImageObject">
           <img alt="Cloud Height - Get Cloud Info Using Alexa and a METAR API" src="https://hackster.imgix.net/uploads/attachments/320027/coverimage_mZKDfCl9ZL.jpg?auto=compress%2Cformat&amp;w=900&amp;h=675&amp;fit=min">
           <meta content="https://hackster.imgix.net/uploads/attachments/320027/coverimage_mZKDfCl9ZL.jpg?auto=compress%2Cformat&amp;w=900&amp;h=675&amp;fit=min" itemprop="url">
           <meta content="900" itemprop="width">
           <meta content="675" itemprop="height">
          </div>
         </div>
         <div class="col-md-4 right-column">
          <div class="container-mobile">
           <div class="section-thumbs">
            <p class="text-muted small"><i class="fa fa-trophy small"></i><span>This project won 2nd Place in <a href="/contests/UKAmazonAlexa">Amazon Alexa Skills Contest</a></span></p>
           </div>
           <section class="section-thumbs">
            <h4>About this project</h4>
            <p class="project-one-liner" itemprop="description">Cloud Height is an Amazon Alexa skill that can get cloud cover and altitude information using a METAR API and the postcode of the device.</p>
            <ul class="list-inline tags">
             <li class="tag-link"><i class="fa fa-tag"></i><span><a rel="tag" href="/projects/tags/environmental+sensing">environmental sensing</a></span></li>
             <li class="tag-link"><i class="fa fa-tag"></i><span><a rel="tag" href="/projects/tags/interface">interface</a></span></li>
             <li class="tag-link"><i class="fa fa-tag"></i><span><a rel="tag" href="/projects/tags/voice+control">voice control</a></span></li>
             <li class="tag-link"><i class="fa fa-tag"></i><span><a rel="tag" href="/projects/tags/weather">weather</a></span></li>
            </ul>
           </section>
           <section class="section-thumbs">
            <h4>Project info</h4>
            <div class="info-table">
             <div class="info-row">
              <div class="info-label">
               Type
              </div>
              <div class="info">
               <i class="fa fa-book"></i>
               <span>Full instructions provided</span>
              </div>
             </div>
             <div class="info-row">
              <div class="info-label">
               Difficulty
              </div>
              <div class="info">
               <a class="project-difficulty text-warning" href="/projects?difficulty=intermediate">Intermediate</a>
              </div>
             </div>
             <div class="info-row">
              <div class="info-label">
               Estimated time
              </div>
              <div class="info">
               2 hours
              </div>
             </div>
             <div class="info-row">
              <meta content="2017-09-19T22:21:31Z" itemprop="dateModified">
              <div class="info-label">
               Published
              </div>
              <div class="info" content="2017-06-30T10:41:06Z" itemprop="datePublished">
               June 30, 2017
              </div>
             </div>
             <div class="info-row">
              <div class="info-label">
               License
              </div>
              <div class="info">
               <a href="http://opensource.org/licenses/GPL-3.0" itemprop="license" target="_blank">GPL3+</a>
              </div>
             </div>
            </div>
           </section>
           <section class="section-thumbs" id="respects-section">
            <ul class="list-inline text-muted small project-stats-inline">
             <li class="impression-stats istooltip" itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter" title="Views">
              <link href="http://schema.org/ViewAction" itemprop="interactionType"><i class="fa fa-eye"></i><span class="stat-figure" content="157" itemprop="userInteractionCount">157</span></li>
             <li class="respect-stats istooltip" itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter" onclick="Hster.Utils.summonGlobalDialog(RespectingUsersList, {isReactComponent: true, componentProps: {&quot;project&quot;:{&quot;hid&quot;:&quot;30d656&quot;,&quot;name&quot;:&quot;Cloud Height - Get Cloud Info Using Alexa and a METAR API&quot;}}})" title="Respects">
              <link href="http://schema.org/LikeAction" itemprop="interactionType"><i class="fa fa-thumbs-o-up"></i><span class="stat-figure" content="2" itemprop="userInteractionCount">2</span></li>
            </ul>
            <div class="respecting-faces" onclick="Hster.Utils.summonGlobalDialog(RespectingUsersList, {isReactComponent: true, componentProps: {&quot;project&quot;:{&quot;hid&quot;:&quot;30d656&quot;,&quot;name&quot;:&quot;Cloud Height - Get Cloud Info Using Alexa and a METAR API&quot;}}})">
             <div class="user-img">
              <img alt="Adam Benzion" class="img-circle" data-async-src="https://hackster.imgix.net/uploads/avatar/file/78055/2015-09-21_02.38.58.png?auto=compress%2Cformat&amp;w=30&amp;h=30&amp;fit=min" src="https://www.hackster.io/assets/transparent-ef1955ae757c8b966c83248350331bd3a30f658ced11f387f8ebf05ab3368629.gif">
              <noscript>
               <img alt="Adam Benzion" class="img-circle" src="https://hackster.imgix.net/uploads/avatar/file/78055/2015-09-21_02.38.58.png?auto=compress%2Cformat&amp;w=30&amp;h=30&amp;fit=min">
              </noscript>
             </div>
             <div class="user-img">
              <img alt="Tesla G." class="img-circle" data-async-src="https://gravatar.com/avatar/53b3a1928bddd127b1076907aacca69e.png?d=retro&amp;s=" src="https://particle.hackster.io/assets/transparent-ef1955ae757c8b966c83248350331bd3a30f658ced11f387f8ebf05ab3368629.gif">
              <noscript>
               <img alt="Tesla G." class="img-circle" src="https://gravatar.com/avatar/53b3a1928bddd127b1076907aacca69e.png?d=retro&amp;s=">
              </noscript>
             </div>
            </div>
           </section>
           <section class="section-thumbs">
            <div class="primary-action-container">
             <span data-react-class="ProjectRespectButton" data-react-props="{&quot;projectId&quot;:45421,&quot;redirect_to&quot;:&quot;/articles/30d656/respects/create&quot;}"><button class="buttons__button___lYBnk
          project_respect_button__button___1LWAT" disabled type="button" data-reactroot="" data-reactid="1" data-react-checksum="-590847590"><span data-reactid="2"><i class="fa fa-thumbs-o-up" data-reactid="3"></i><span data-reactid="4">Respect project</span></span></button></span>
             <a class="btn btn-primary btn-sm reactPortal" action="SigninDialog" data-container="body" data-redirect-to="/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656" data-source="replica" data-react="{&quot;currentPanel&quot;:&quot;signup&quot;,&quot;simplified&quot;:true}" href="/users/sign_up?id=45421&amp;m=base_article&amp;reason=replica&amp;redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656"><i class="fa fa-retweet"></i><span>I made one</span></a>
            </div>
            <div class="secondary-actions-container">
             <a class="btn btn-sm btn-secondary reactPortal" action="SigninDialog" data-container="body" data-redirect-to="/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656" data-source="project_page_bookmark" data-react="{&quot;currentPanel&quot;:&quot;signup&quot;,&quot;simplified&quot;:true}" href="/users/sign_in?redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&amp;source=project_page_bookmark"><i class="fa fa-bookmark-o"></i><span>Bookmark</span></a>
             <a class="btn btn-secondary btn-sm" data-container=".secondary-actions-container" data-content="<div class='sharing-actions'><ul><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=facebook&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-facebook'></i><span>Share on Facebook</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=googleplus&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-google-plus-official'></i><span>Share on Google+</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=linkedin&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-linkedin'></i><span>Share on LinkedIn</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=pinterest&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-pinterest'></i><span>Share on Pinterest</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=reddit&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-reddit'></i><span>Share on Reddit</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=twitter&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-twitter'></i><span>Share on Twitter</span></a></li><li><a data-target='#embed-popup' class='modal-open' href='javascript:void(0)'><i class='fa fa-code'></i><span>Embed</span></a></li></ul></div>" data-html="true" data-placement="bottom" data-toggle="popover" data-trigger="click"><i class="fa fa-share-square-o"></i><span>Share</span></a>
             <a class="btn btn-secondary btn-sm show-feedback-form project-feedback-form" href="javascript:void(0)"><i class="fa fa-pencil-square-o"></i><span>Give feedback</span></a>
            </div>
           </section>
          </div>
         </div>
        </div>
       </div>
      </div>
     </section>
     <section class="section-description" itemprop="articleBody">
      <div class="container">
       <div class="row">
        <div class="col-md-7 col-md-offset-0-5 left-column container-mobile">
         <section class="section-container" id="things">
          <h2 class="section-title"><a class="title-anchor" href="#things"><i class="fa fa-link"></i></a><span class="title title-toggle">Things used in this project </span></h2>
          <div class="section-content">
           <table class="sortable-table table table-hover fields-container parts-table">
            <tbody>
             <tr class="title">
              <td colspan="6"><strong>Software apps and online services:</strong></td>
             </tr>
             <tr class="fields part-row" id="part-10151">
              <td class="part-img"><img src="https://hackster.imgix.net/uploads/image/file/57873/Screen%20Shot%202015-07-20%20at%206.10.26%20PM.png?auto=compress%2Cformat&amp;w=48&amp;h=48&amp;fit=fill&amp;bg=ffffff" alt="Screen%20shot%202015 07 20%20at%206.10.26%20pm"></td>
              <td>
               <table style="width:100%">
                <tbody>
                 <tr>
                  <td><a href="/AmazonWebServices/products/aws-lambda">Amazon Web Services AWS Lambda</a></td>
                 </tr>
                 <tr>
                  <td style="color: #888;font-size:75%;">Used for hosting the skill and handling requests to/from the Alexa device. The METAR API is also called from Lambda.</td>
                 </tr>
                </tbody>
               </table></td>
              <td colspan="2"></td>
              <td style="text-align:right;width:78px"><a target="_blank" style="color:#333" rel="nofollow" class="istooltip" title="More info" href="http://aws.amazon.com/lambda/"><i class="fa fa-link"></i></a></td>
             </tr>
             <tr class="fields part-row" id="part-17773">
              <td class="part-img"><img src="https://hackster.imgix.net/uploads/image/file/122485/dp_image_kit_02.png?auto=compress%2Cformat&amp;w=48&amp;h=48&amp;fit=fill&amp;bg=ffffff" alt="Dp image kit 02"></td>
              <td>
               <table style="width:100%">
                <tbody>
                 <tr>
                  <td><a href="/amazon-alexa/products/alexa-skills-kit">Amazon Alexa Alexa Skills Kit</a></td>
                 </tr>
                 <tr>
                  <td style="color: #888;font-size:75%;">The backbone of the project, the ASK allows us to easily use Alexa compatible devices as the interface for our project.</td>
                 </tr>
                </tbody>
               </table></td>
              <td colspan="2"></td>
              <td style="text-align:right;width:78px"><a target="_blank" style="color:#333" rel="nofollow" class="istooltip" title="More info" href="https://developer.amazon.com/public/solutions/alexa"><i class="fa fa-link"></i></a></td>
             </tr>
             <tr class="fields part-row" id="part-45310">
              <td class="part-img"></td>
              <td>
               <table style="width:100%">
                <tbody>
                 <tr>
                  <td>National Weather Service ADDS Dataserver</td>
                 </tr>
                 <tr>
                  <td style="color: #888;font-size:75%;">The ADDS Dataserver allows us to request METAR information using Latitude and Longitude inputs.</td>
                 </tr>
                </tbody>
               </table></td>
              <td colspan="2"></td>
              <td style="text-align:right;width:78px"><a target="_blank" style="color:#333" rel="nofollow" class="istooltip" title="More info" href="https://aviationweather.gov/adds/dataserver"><i class="fa fa-link"></i></a></td>
             </tr>
            </tbody>
           </table>
          </div>
         </section>
         <section class="section-container collapsed" id="about-project">
          <h2 class="section-title"><a class="title-anchor" href="#about-project"><i class="fa fa-link"></i></a><span class="title title-toggle">Story </span></h2>
          <div class="section-content hljs-active hljs-monokai">
           <div class="medium-editor" itemprop="text">
            <p><strong><a href="https://www.amazon.co.uk/dp/B0739DX267/" rel="nofollow">Activate Cloud Height on your Device!</a></strong></p>
            <p><strong>What is this project?</strong></p>
            <p>Cloud Height is an Amazon Alexa Skill that allows users to get information about the original cloud, the ones in the sky! It tells users information about cloud cover and altitude. It does this by retrieving the postcode specified by the user in their Alexa App, getting the corresponding latitude and longitude coordinates, and then using those coordinates to make a request to the National Weather Service ADDS Dataserver for METAR information from a nearby airport. It then takes this information and returns it to the user in a nice, readable format, both with speech and cards on the Alexa App.</p>
            <p><strong>That sounds rad! But, why did you make this?</strong></p>
            <p>Cloud Height was dreamt up while sitting at a McDonald's brainstorming neat ideas for Alexa Skills. We were thinking about location based skills when we had an idea: people already get weather information, so why not elaborate on that and give them an unnecessary amount of detail on the cloud cover and altitude! And so, Cloud Height was born.</p>
            <p><strong>What on Earth is METAR?</strong></p>
            <p>METAR is short for Meteorological Terminal Aviation Routine Weather Report, and is a format for reporting weather information. These reports are typically generated hourly and mostly come from airports.</p>
            <p><strong>How are you getting the cloud information?</strong></p>
            <p>METAR information from airports in the United States and Great Britain can be obtained by using the National Weather Service ADDS Dataserver. By sending a request with the latitude and longitude of the postcode set by the user in their Alexa App, we can get the METAR report from a nearby airport. We can then parse this information to get the cloud cover and altitude information and return it to the user.</p>
            <p><span>To get the latitude and longitude from a postcode we index a JavaScript object that contains all of the latitude and longitude values for every US and UK postcode. The UK information is from the National Statistics Postcode Lookup UK (</span><a href="https://data.gov.uk/apps/uk-postcodes" rel="nofollow">https://data.gov.uk/apps/uk-postcodes)</a><span>, and contains public sector information licensed under the Open Government License v3.0. And the US information is from the US Census Bureau. We started with a 2013 dataset compiled by Eric Hurst on Github. (</span><a href="https://gist.github.com/erichurst/7882666" rel="nofollow">https://gist.github.com/erichurst/7882666)</a><span>, and later compiled our own 2016 version from the Gazetteer (</span><a href="https://www.census.gov/geo/maps-data/data/gazetteer.html" rel="nofollow">https://www.census.gov/geo/maps-data/data/gazetteer.html)</a><span>. Finally we used a lat/long distance calculator from Andrew Hedges (</span><a href="http://andrew.hedges.name/experiments/haversine/" rel="nofollow">http://andrew.hedges.name/experiments/haversine/)</a><span> to figure out which reporting station was closest to the postcode's lat/long.</span></p>
            <p><strong>How does a user interact with the skill?</strong></p>
            <p>Interaction with the skill is outlined by the chart below:</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;Graphical display of the interactions a user can have with the skill.&quot;,&quot;id&quot;:319991,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/319991/voicedesign_cd0LoiwDhe.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/319991/voicedesign_cd0LoiwDhe.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;a81bb27f33&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="-1177734424">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/319991/voicedesign_cd0LoiwDhe.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <div class="image_carousel__caption___2sZrD" data-reactid="8">
                <span data-reactid="9"></span>
                <!-- react-text: 10 -->
                <!-- /react-text -->
                <span data-reactid="11">Graphical display of the interactions a user can have with the skill.</span>
               </div>
              </div>
              <span data-reactid="12"></span>
             </div>
            </div>
            <p><strong>Alright, I'm sold. How can I use Cloud Height?</strong></p>
            <p>You can use Cloud Height in two different ways:</p>
            <p><a href="https://www.amazon.co.uk/dp/B0739DX267/" rel="nofollow">Activate the skill on your device.</a></p>
            <p>But that's not what you're here for! </p>
            <p>The second way is to build your own version. There's a lot of information returned by the METAR data service that we don't use, such as temperature, dew point, wind speed, gusts, visibility and so forth. So by just choosing a different column in the returned data and changing a few strings, you can have an entirely different app! </p>
            <p>Here are instructions on how to setup and run your own instance of Cloud Height:</p>
            <p><strong>Prerequisites:</strong></p>
            <p>To set up your own version of Cloud Height, you will need:</p>
            <ul>
             <li><a href="http://node.js/" rel="nofollow">Node.js</a><span> v6.10 and npm</span></li>
            </ul>
            <ul>
             <li>An AWS account</li>
            </ul>
            <ul>
             <li>An Amazon Developer Account</li>
            </ul>
            <ul>
             <li>An Internet Connection</li>
            </ul>
            <p><strong>Step One: Function Setup</strong></p>
            <p><span>First, go to the </span><a href="https://developer.amazon.com/home.html" rel="nofollow">Amazon Developer Console</a><span> and select the Alexa tab at the top.</span></p>
            <p>Under Alexa Skils Kit, select Get Started.</p>
            <p>On the next page, select Add a New Skill.</p>
            <p>You should now be on the skill creation page.</p>
            <p>For skill type, select Custom Interaction Model, for Language Select English (U.K.) or English (U.S.) For name, you can enter whatever you like, and for invocation name, enter the name of your skill like you would like to say to Alexa. For example, if you wanted to start the skill with "Alexa, start cloud finder", you could enter cloud finder for the invocation name. After you have filled out those four fields, ignore the global fields section, and hit save, then hit the next button that will appear.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;Your options should look something like this.&quot;,&quot;id&quot;:320013,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320013/image_6dT0J7KpoM.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320013/image_6dT0J7KpoM.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;6277bbb4ce&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="-1645467771">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320013/image_6dT0J7KpoM.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <div class="image_carousel__caption___2sZrD" data-reactid="8">
                <span data-reactid="9"></span>
                <!-- react-text: 10 -->
                <!-- /react-text -->
                <span data-reactid="11">Your options should look something like this.</span>
               </div>
              </div>
              <span data-reactid="12"></span>
             </div>
            </div>
            <p>On this page, copy and paste the Intent Schema from the Attachments section of the project into the Intent Schema box.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;&quot;,&quot;id&quot;:320014,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320014/image_7IFp1JfWZw.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320014/image_7IFp1JfWZw.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;0c0223801b&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="-621221398">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320014/image_7IFp1JfWZw.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <!-- react-text: 8 -->
               <!-- /react-text -->
              </div>
              <span data-reactid="9"></span>
             </div>
            </div>
            <p>Next, paste the Sample Utterances from the Attachments section of the project into the Sample Utterances Box.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;&quot;,&quot;id&quot;:320015,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320015/image_goGQYzViMs.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320015/image_goGQYzViMs.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;389ba6a546&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="1043130988">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320015/image_goGQYzViMs.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <!-- react-text: 8 -->
               <!-- /react-text -->
              </div>
              <span data-reactid="9"></span>
             </div>
            </div>
            <p>After you have done this, hit save and let the interaction model build. Then continue to Step Two, we will finish setup of the skill later.</p>
            <p><strong>Step Two: File Setup</strong></p>
            <p><span>First, create a new directory to store your project files in, this can be named whatever you like. Then place the </span><a href="http://index.js/" rel="nofollow">index.js</a><span> file from the attachment section of this project in that directory. You will also need to place the </span><a href="http://resources.js/" rel="nofollow">resources.js</a><span> file in this directory, it can be downloaded </span><a href="https://s3.amazonaws.com/originalcloud/resources.js" rel="nofollow">here.</a><span> (It has too many lines to upload to the hackster project.)</span></p>
            <p><span>Next, open </span><a href="http://index.js/" rel="nofollow">index.js</a><span> and on line 11, replace YOUR_APP_ID_HERE with your actual app id, this can be obtained by going to the skill information section of your Alexa Skill in the Amazon Developer Console.</span></p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;&quot;,&quot;id&quot;:320016,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320016/image_IUTfN5HbSl.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320016/image_IUTfN5HbSl.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;db817eec10&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="-514266639">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320016/image_IUTfN5HbSl.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <!-- react-text: 8 -->
               <!-- /react-text -->
              </div>
              <span data-reactid="9"></span>
             </div>
            </div>
            <p></p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;Paste the app id here. (index.js)&quot;,&quot;id&quot;:320018,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320018/image_yyLKwKTnHR.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320018/image_yyLKwKTnHR.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;226e7449bd&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="656351797">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320018/image_yyLKwKTnHR.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <div class="image_carousel__caption___2sZrD" data-reactid="8">
                <span data-reactid="9"></span>
                <!-- react-text: 10 -->
                <!-- /react-text -->
                <span data-reactid="11">Paste the app id here. (index.js)</span>
               </div>
              </div>
              <span data-reactid="12"></span>
             </div>
            </div>
            <p><span>A little disclaimer: This project was created to enter the Alexa Skills Contest here on </span><a href="http://hackster.io/" rel="nofollow">Hackster.io</a><span> and, in true hackathon spirit, was created almost entirely in a single, caffeine fueled sitting. Thus, the code is quite messy. Despite this, the project is still 100% functional. (A cleaned version of the code will be uploaded in a few weeks </span><a href="https://xkcd.com/541/" rel="nofollow">:))</a></p>
            <p><strong>Step Three: Installing the alexa-sdk</strong></p>
            <p>Open a new Terminal/CMD and navigate to the directory you created in step two, then run the command:</p>
            <pre><code><span>npm init </span></code></pre>
            <p>Fill out these fields to your liking, except:</p>
            <ul>
             <li>For entry point, enter "index.js"</li>
            </ul>
            <ul>
             <li>For test commands, leave it blank.</li>
            </ul>
            <p>Once you have completed that, run the following command to install the alexa-sdk for Node.js:</p>
            <pre><code><span>npm install alexa-sdk </span></code></pre>
            <p>In this folder, you should should now have 4 items:</p>
            <ul>
             <li><a href="http://index.js/" rel="nofollow">index.js</a></li>
            </ul>
            <ul>
             <li><a href="http://resources.js/" rel="nofollow">resources.js</a></li>
            </ul>
            <ul>
             <li><a href="http://package.json/" rel="nofollow">package.json</a></li>
            </ul>
            <ul>
             <li>node_modules</li>
            </ul>
            <p>Now that you have these files, put them in a zip file, make sure that these files are in the root of the zip file.</p>
            <p><strong>Step Four: Setting up your Lambda Function</strong></p>
            <p>Go to https://aws.amazon.com/ and if you don't have one already, create an account.</p>
            <p>Once you are signed in, confirm you are using the server region US East (N. Virginia) or EU (Ireland) You can change your server region in the top right corner.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;&quot;,&quot;id&quot;:320008,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320008/image_h3n2viGqJd.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320008/image_h3n2viGqJd.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;f12a2b4470&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="259189294">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320008/image_h3n2viGqJd.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <!-- react-text: 8 -->
               <!-- /react-text -->
              </div>
              <span data-reactid="9"></span>
             </div>
            </div>
            <p>Next, click on the Services drop down in the top left corner and select Lambda under the compute section.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;Finding the Lambda section of AWS&quot;,&quot;id&quot;:320000,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320000/findinglambda_hg5pI9IzF9.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320000/findinglambda_hg5pI9IzF9.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;739632d166&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="-1812519586">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320000/findinglambda_hg5pI9IzF9.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <div class="image_carousel__caption___2sZrD" data-reactid="8">
                <span data-reactid="9"></span>
                <!-- react-text: 10 -->
                <!-- /react-text -->
                <span data-reactid="11">Finding the Lambda section of AWS</span>
               </div>
              </div>
              <span data-reactid="12"></span>
             </div>
            </div>
            <p>Next click the Create a Lambda Function button.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;Clicky clicky...&quot;,&quot;id&quot;:320006,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320006/findingcreateafunction_WCK268xnAs.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320006/findingcreateafunction_WCK268xnAs.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;27cb96e9fb&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="1860182807">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320006/findingcreateafunction_WCK268xnAs.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <div class="image_carousel__caption___2sZrD" data-reactid="8">
                <span data-reactid="9"></span>
                <!-- react-text: 10 -->
                <!-- /react-text -->
                <span data-reactid="11">Clicky clicky...</span>
               </div>
              </div>
              <span data-reactid="12"></span>
             </div>
            </div>
            <p>The next screen will ask you to select a blueprint, you can just select Blank Function.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;&quot;,&quot;id&quot;:320007,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320007/blankfunction_VNovYBwXHY.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320007/blankfunction_VNovYBwXHY.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;e77c4bc621&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="644214188">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320007/blankfunction_VNovYBwXHY.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <!-- react-text: 8 -->
               <!-- /react-text -->
              </div>
              <span data-reactid="9"></span>
             </div>
            </div>
            <p>You will be asked to Configure the triggers for your function, click on the blank box and select the Alexa Skills Kit. Then hit the next button.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;If you do not see the Alexa Skills Kit, make sure you are using the server region US East (N. Virginia) or EU (Ireland)&quot;,&quot;id&quot;:320010,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320010/image_pbr8fGWzlI.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320010/image_pbr8fGWzlI.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;2ccf7e605c&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="74989436">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320010/image_pbr8fGWzlI.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <div class="image_carousel__caption___2sZrD" data-reactid="8">
                <span data-reactid="9"></span>
                <!-- react-text: 10 -->
                <!-- /react-text -->
                <span data-reactid="11">If you do not see the Alexa Skills Kit, make sure you are using the server region US East (N. Virginia) or EU (Ireland)</span>
               </div>
              </div>
              <span data-reactid="12"></span>
             </div>
            </div>
            <p><span>You can name the function whatever you like, same goes for the description. But make sure you set the Runtime to </span><a href="http://node.js/" rel="nofollow">Node.js</a><span> 6.10 and you have the Code entry type set to Upload Zip File</span></p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;&quot;,&quot;id&quot;:320011,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320011/image_Ofw8b5rXtX.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320011/image_Ofw8b5rXtX.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;20a04938fb&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="394324537">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320011/image_Ofw8b5rXtX.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <!-- react-text: 8 -->
               <!-- /react-text -->
              </div>
              <span data-reactid="9"></span>
             </div>
            </div>
            <p>Then, upload the zip file you created in step three by pressing the upload button.</p>
            <p>At the bottom of this page, leave the Handler and Role fields the same, and select lambda_basic_execution for the Existing role field.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;&quot;,&quot;id&quot;:320012,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320012/image_3dIJHmBzpC.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320012/image_3dIJHmBzpC.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;0bd9c81e2c&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="-449385993">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320012/image_3dIJHmBzpC.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <!-- react-text: 8 -->
               <!-- /react-text -->
              </div>
              <span data-reactid="9"></span>
             </div>
            </div>
            <p>When you have finished, press the next button. On the next screen, scroll to the bottom of the page and select create function.</p>
            <p><strong>Step Five: Connecting your Alexa Skill to the Lambda Function and Testing</strong></p>
            <p>Go back to your Skill in the Amazon Developer Console and go to the configuration section, select AWS Lambda ARN for Service Endpoint Type, then check North America or Europe (depending on which region you set up your Lambda function in) and paste in your ARN, which can be found on the top right corner of your functions page on the AWS console.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;Your ARN can be found at the top right corner of your functions page.&quot;,&quot;id&quot;:320019,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320019/image_HRMV773jq6.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320019/image_HRMV773jq6.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;0bd254ed84&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="739651305">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320019/image_HRMV773jq6.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <div class="image_carousel__caption___2sZrD" data-reactid="8">
                <span data-reactid="9"></span>
                <!-- react-text: 10 -->
                <!-- /react-text -->
                <span data-reactid="11">Your ARN can be found at the top right corner of your functions page.</span>
               </div>
              </div>
              <span data-reactid="12"></span>
             </div>
            </div>
            <p></p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;Set your options like so, and paste in your ARN&quot;,&quot;id&quot;:320020,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320020/image_HqMqROzmLL.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320020/image_HqMqROzmLL.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;6431337942&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="1408640925">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320020/image_HqMqROzmLL.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <div class="image_carousel__caption___2sZrD" data-reactid="8">
                <span data-reactid="9"></span>
                <!-- react-text: 10 -->
                <!-- /react-text -->
                <span data-reactid="11">Set your options like so, and paste in your ARN</span>
               </div>
              </div>
              <span data-reactid="12"></span>
             </div>
            </div>
            <p>For the account linking section, select no.</p>
            <p>For the permissions selection, check Device Address and then select Country &amp; Postal Code Only</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;Make sure country and postal code only is selected.&quot;,&quot;id&quot;:320021,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320021/image_YmnMH9eeCI.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320021/image_YmnMH9eeCI.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;d33163df9b&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="-802608779">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320021/image_YmnMH9eeCI.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <div class="image_carousel__caption___2sZrD" data-reactid="8">
                <span data-reactid="9"></span>
                <!-- react-text: 10 -->
                <!-- /react-text -->
                <span data-reactid="11">Make sure country and postal code only is selected.</span>
               </div>
              </div>
              <span data-reactid="12"></span>
             </div>
            </div>
            <p>Next, press save and then next. You will now be on the testing screen. Here, make sure you enable testing on your account by clicking the slider.</p>
            <div data-react-class="ImageCarousel" data-react-props="{&quot;images&quot;:[{&quot;caption&quot;:&quot;&quot;,&quot;id&quot;:320022,&quot;image_urls&quot;:{&quot;headline_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320022/image_V0cC1ib6AB.png?auto=compress%2Cformat\u0026w=680\u0026h=510\u0026fit=max&quot;,&quot;lightbox_url&quot;:&quot;https://hackster.imgix.net/uploads/attachments/320022/image_V0cC1ib6AB.png?auto=compress%2Cformat\u0026w=1280\u0026h=960\u0026fit=max&quot;},&quot;position&quot;:0}],&quot;uid&quot;:&quot;c2d9be36fd&quot;}">
             <div data-reactroot="" data-reactid="1" data-react-checksum="-1790580341">
              <div class="image_carousel__container___hMJxn" data-reactid="2">
               <div class="image_carousel__wrapper___102VA" data-reactid="3">
                <div class="image_carousel__scrollContainer___3mmPE " data-reactid="4">
                 <div class="image_carousel__imageContainer___22WPm" data-reactid="5">
                  <div class="image_carousel__imageWrapper___39AG2" data-reactid="6">
                   <img class="image_carousel__image___2-CjO " src="https://hackster.imgix.net/uploads/attachments/320022/image_V0cC1ib6AB.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" data-reactid="7">
                  </div>
                 </div>
                </div>
               </div>
               <!-- react-text: 8 -->
               <!-- /react-text -->
              </div>
              <span data-reactid="9"></span>
             </div>
            </div>
            <p><span>Now that you have enabled testing, you can simply Ask your Alexa compatible device something like: "Alexa, start cloud finder" (of course replace cloud finder with your actual skill name), and Alexa should respond with cloud information from METAR reports! Note, you cannot test this skill with the in-browser tester, as it does not support location. If you do not own an Alexa device and wish to test this skill, you can do so with </span><a href="https://echosim.io/" rel="nofollow">echosim.io</a></p>
            <p><strong>Thanks for checking out Cloud Height!</strong></p>
           </div>
          </div>
          <div class="read-more">
           <a class="btn btn-primary" href="javascript:void(0)">Read more</a>
          </div>
         </section>
         <section class="section-container" id="schematics">
          <h2 class="section-title"><a class="title-anchor" href="#schematics"><i class="fa fa-link"></i></a><span class="title title-toggle">Schematics </span></h2>
          <div class="section-content">
           <div class="repository">
            <div class="button-content-container">
             <div class="button-content">
              <h5>User-Skill Interaction Diagram</h5>
              <div class="buttons">
               <a class="btn btn-primary btn-sm" href="https://halckemy.s3.amazonaws.com/uploads/attachments/320023/voicedesign_swYrOc0y5f.png">Download </a>
              </div>
             </div>
            </div>
            <div class="comment">
             This diagram shows all the possible interactions between a User and the Skill.
            </div>
            <div class="embed original">
             <img src="https://halckemy.s3.amazonaws.com/uploads/attachments/320023/voicedesign_swYrOc0y5f.png" alt="Voicedesign swyroc0y5f">
            </div>
           </div>
          </div>
         </section>
         <section class="section-container" id="code">
          <h2 class="section-title"><a class="title-anchor" href="#code"><i class="fa fa-link"></i></a><span class="title title-toggle">Code </span></h2>
          <div class="section-content">
           <div class="code-widgets">
            <div class="sidebar">
             <ul>
              <li><a data-target="#code-widget-123100" class="active" href="javascript:void(0)">index.js</a></li>
              <li><a data-target="#code-widget-123116" class="" href="javascript:void(0)">resources.js</a></li>
              <li><a data-target="#code-widget-123136" class="" href="javascript:void(0)">Intent Schema</a></li>
              <li><a data-target="#code-widget-123137" class="" href="javascript:void(0)">Utterances</a></li>
             </ul>
            </div>
            <div class="preview-container">
             <div class="preview-pane active" id="code-widget-123100">
              <div class="preview-header">
               <div class="clearfix">
                <h5>index.js<small>JavaScript</small></h5>
                <div class="buttons btn-group btn-group-default">
                 <button class="btn btn-primary btn-xs copy-code istooltip" data-container="body" data-trigger="hover" title="Copy the code"><i class="fa fa-clipboard"></i></button>
                 <a class="btn btn-primary btn-xs" data-container="body" href="/code_files/123100/download" rel="tooltip" title="Download"><i class="fa fa-cloud-download"></i></a>
                </div>
               </div>
               <div class="comment">
                This file is the main component of the skill. When called by the Alexa Skills Kit, this Lambda function will make a request to the National Weather Service ADDS Dataserver using the Latitude and Longitude of the postcode specified in the Alexa App. For more info and usage instructions, read the Story section of the project.
               </div>
              </div>
              <div class="preview-body pygments-syntax all">
               <div class="highlight">
                <pre><span id="line-1">/**
</span><span id="line-2"> * An Amazon Alexa skill that returns nearby cloud height.
</span><span id="line-3"> * It is based on the sample code <span class="k">for</span> the Amazon Alexa Space Facts example
</span><span id="line-4"> * provided by Amazon, at
</span><span id="line-5"> *    https://github.com/alexa/skill-sample-nodejs-fact
</span><span id="line-6"> * with unnecessary features removed <span class="k">for</span> simplicity. The original example
</span><span id="line-7"> * code has been largely removed leaving the Alexa framework and the
</span><span id="line-8"> * Cloud Height code built on top of it.
</span><span id="line-9"> * 
</span><span id="line-10"> * Copyright <span class="o">(</span>c<span class="o">)</span> <span class="m">2017</span> Sean Sheedy, Tommy Sheedy under Amazon Software License
</span><span id="line-11"> **/
</span><span id="line-12">
</span><span id="line-13">/*
</span><span id="line-14">Amazon Software License
</span><span id="line-15">1. Definitions
</span><span id="line-16">Licensor means any person or entity that distributes its Work.
</span><span id="line-17">
</span><span id="line-18">Software means the original work of authorship made available under this 
</span><span id="line-19">License.
</span><span id="line-20">
</span><span id="line-21">Work means the Software and any additions to or derivative works of the 
</span><span id="line-22">Software that are made available under this License.
</span><span id="line-23">
</span><span id="line-24">The terms reproduce, reproduction, derivative works, and distribution 
</span><span id="line-25">have the meaning as provided under U.S. copyright law<span class="p">;</span> provided, however, that 
</span><span id="line-26"><span class="k">for</span> the purposes of this License, derivative works shall not include works that 
</span><span id="line-27">remain separable from, or merely link <span class="o">(</span>or <span class="nb">bind</span> by name<span class="o">)</span> to the interfaces of, 
</span><span id="line-28">the Work.
</span><span id="line-29">
</span><span id="line-30">Works, including the Software, are made available under this License by 
</span><span id="line-31">including in or with the Work either <span class="o">(</span>a<span class="o">)</span> a copyright notice referencing the 
</span><span id="line-32">applicability of this License to the Work, or <span class="o">(</span>b<span class="o">)</span> a copy of this License.
</span><span id="line-33">2. License Grants
</span><span id="line-34">2.1 Copyright Grant. Subject to the terms and conditions of this License, each 
</span><span id="line-35">Licensor grants to you a perpetual, worldwide, non-exclusive, royalty-free, 
</span><span id="line-36">copyright license to reproduce, prepare derivative works of, publicly display, 
</span><span id="line-37">publicly perform, sublicense and distribute its Work and any resulting 
</span><span id="line-38">derivative works in any form.
</span><span id="line-39">2.2 Patent Grant. Subject to the terms and conditions of this License, each 
</span><span id="line-40">Licensor grants to you a perpetual, worldwide, non-exclusive, royalty-free 
</span><span id="line-41">patent license to make, have made, use, sell, offer <span class="k">for</span> sale, import, and 
</span><span id="line-42">otherwise transfer its Work, in whole or in part. The foregoing license applies 
</span><span id="line-43">only to the patent claims licensable by Licensor that would be infringed by 
</span><span id="line-44">Licensors Work <span class="o">(</span>or portion thereof<span class="o">)</span> individually and excluding any 
</span><span id="line-45">combinations with any other materials or technology.
</span><span id="line-46">3. Limitations
</span><span id="line-47">3.1 Redistribution. You may reproduce or distribute the Work only <span class="k">if</span> <span class="o">(</span>a<span class="o">)</span> you <span class="k">do</span> 
</span><span id="line-48">so under this License, <span class="o">(</span>b<span class="o">)</span> you include a <span class="nb">complete</span> copy of this License with 
</span><span id="line-49">your distribution, and <span class="o">(</span>c<span class="o">)</span> you retain without modification any copyright, 
</span><span id="line-50">patent, trademark, or attribution notices that are present in the Work.
</span><span id="line-51">3.2 Derivative Works. You may specify that additional or different terms apply 
</span><span id="line-52">to the use, reproduction, and distribution of your derivative works of the Work 
</span><span id="line-53"><span class="o">(</span>Your Terms<span class="o">)</span> only <span class="k">if</span> <span class="o">(</span>a<span class="o">)</span> Your Terms provide that the use limitation in 
</span><span id="line-54">Section 3.3 applies to your derivative works, and <span class="o">(</span>b<span class="o">)</span> you identify the specific 
</span><span id="line-55">derivative works that are subject to Your Terms. Notwithstanding Your Terms, 
</span><span id="line-56">this License <span class="o">(</span>including the redistribution requirements in Section 3.1<span class="o">)</span> will 
</span><span id="line-57"><span class="k">continue</span> to apply to the Work itself.
</span><span id="line-58">3.3 Use Limitation. The Work and any derivative works thereof only may be used 
</span><span id="line-59">or intended <span class="k">for</span> use with the web services, computing platforms or applications 
</span><span id="line-60">provided by Amazon.com, Inc. or its affiliates, including Amazon Web Services, 
</span><span id="line-61">Inc.
</span><span id="line-62">3.4 Patent Claims. If you bring or threaten to bring a patent claim against any 
</span><span id="line-63">Licensor <span class="o">(</span>including any claim, cross-claim or counterclaim in a lawsuit<span class="o">)</span> to 
</span><span id="line-64">enforce any patents that you allege are infringed by any Work, <span class="k">then</span> your rights 
</span><span id="line-65">under this License from such Licensor <span class="o">(</span>including the grants in Sections 2.1 and 
</span><span id="line-66">2.2<span class="o">)</span> will terminate immediately.
</span><span id="line-67">3.5 Trademarks. This License does not grant any rights to use any Licensors or 
</span><span id="line-68">its affiliates names, logos, or trademarks, except as necessary to reproduce 
</span><span id="line-69">the notices described in this License.
</span><span id="line-70">3.6 Termination. If you violate any term of this License, <span class="k">then</span> your rights 
</span><span id="line-71">under this License <span class="o">(</span>including the grants in Sections 2.1 and 2.2<span class="o">)</span> will 
</span><span id="line-72">terminate immediately.
</span><span id="line-73">4. Disclaimer of Warranty.
</span><span id="line-74">THE WORK IS PROVIDED AS IS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
</span><span id="line-75">EITHER EXPRESS OR IMPLIED, INCLUDING WARRANTIES OR CONDITIONS OF 
</span><span id="line-76">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE OR NON-INFRINGEMENT. 
</span><span id="line-77">YOU BEAR THE RISK OF UNDERTAKING ANY ACTIVITIES UNDER THIS LICENSE. SOME 
</span><span id="line-78">STATES CONSUMER LAWS DO NOT ALLOW EXCLUSION OF AN IMPLIED WARRANTY, SO THIS 
</span><span id="line-79">DISCLAIMER MAY NOT APPLY TO YOU.
</span><span id="line-80">5. Limitation of Liability.
</span><span id="line-81">EXCEPT AS PROHIBITED BY APPLICABLE LAW, IN NO EVENT AND UNDER NO LEGAL THEORY, 
</span><span id="line-82">WHETHER IN TORT <span class="o">(</span>INCLUDING NEGLIGENCE<span class="o">)</span>, CONTRACT, OR OTHERWISE SHALL ANY 
</span><span id="line-83">LICENSOR BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY DIRECT, INDIRECT, SPECIAL, 
</span><span id="line-84">INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATED TO THIS LICENSE, 
</span><span id="line-85">THE USE OR INABILITY TO USE THE WORK <span class="o">(</span>INCLUDING BUT NOT LIMITED TO LOSS OF 
</span><span id="line-86">GOODWILL, BUSINESS INTERRUPTION, LOST PROFITS OR DATA, COMPUTER FAILURE OR 
</span><span id="line-87">MALFUNCTION, OR ANY OTHER COMM ERCIAL DAMAGES OR LOSSES<span class="o">)</span>, EVEN IF THE LICENSOR 
</span><span id="line-88">HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
</span><span id="line-89">Effective Date  April 18, <span class="m">2008</span>  <span class="m">2008</span> Amazon.com, Inc. or its affiliates. All 
</span><span id="line-90">rights reserved.
</span><span id="line-91">*/
</span><span id="line-92">
</span><span id="line-93">const <span class="nv">APP_ID</span> <span class="o">=</span> <span class="s2">"YOUR_APP_ID_HERE"</span><span class="p">;</span>  // Replace this with your app id, this can be obtained from the Developer Console.
</span><span id="line-94">
</span><span id="line-95"><span class="s1">'use strict'</span><span class="p">;</span>
</span><span id="line-96">
</span><span id="line-97">var <span class="nv">Alexa</span> <span class="o">=</span> require<span class="o">(</span><span class="s1">'alexa-sdk'</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-98">
</span><span id="line-99">const <span class="nv">Https</span> <span class="o">=</span> require<span class="o">(</span><span class="s1">'https'</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-100">
</span><span id="line-101">var <span class="nv">resources</span> <span class="o">=</span> require<span class="o">(</span><span class="s1">'./resources.js'</span><span class="o">)</span>
</span><span id="line-102">
</span><span id="line-103">/**
</span><span id="line-104"> * This is a small wrapper client <span class="k">for</span> the Alexa Address API.
</span><span id="line-105"> * This code is taken from the official alexa github.
</span><span id="line-106"> * Source: https://github.com/alexa/skill-sample-node-device-address-api/blob/master/src/AlexaDeviceAddressClient.js
</span><span id="line-107"> * LICENSE GRANTED BY AMAZON FOR SAMPLE CODE IS LOCATED AT THE END OF THIS FILE
</span><span id="line-108"> */
</span><span id="line-109">class AlexaDeviceAddressClient <span class="o">{</span>
</span><span id="line-110">
</span><span id="line-111">	/**
</span><span id="line-112">	 * Retrieve an instance of the Address API client.
</span><span id="line-113">	 * @param apiEndpoint the endpoint of the Alexa APIs.
</span><span id="line-114">	 * @param deviceId the device ID being targeted.
</span><span id="line-115">	 * @param consentToken valid consent token.
</span><span id="line-116">	 */
</span><span id="line-117">	constructor<span class="o">(</span>apiEndpoint, deviceId, consentToken<span class="o">)</span> <span class="o">{</span>
</span><span id="line-118">		//console.log<span class="o">(</span><span class="s2">"Creating AlexaAddressClient instance."</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-119">		this.deviceId <span class="o">=</span> deviceId<span class="p">;</span>
</span><span id="line-120">		this.consentToken <span class="o">=</span> consentToken<span class="p">;</span>
</span><span id="line-121">		this.endpoint <span class="o">=</span> apiEndpoint.replace<span class="o">(</span>/^https?:<span class="se">\/\/</span>/i, <span class="s2">""</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-122">	<span class="o">}</span>
</span><span id="line-123">
</span><span id="line-124">	/**
</span><span id="line-125">	 * This will make a request to the Address API using the device ID and
</span><span id="line-126">	 * consent token provided when the Address Client was initialized.
</span><span id="line-127">	 * This will retrieve the full address of a device.
</span><span id="line-128">	 * @return <span class="o">{</span>Promise<span class="o">}</span> promise <span class="k">for</span> the request in flight.
</span><span id="line-129">	 */
</span><span id="line-130">	getFullAddress<span class="o">()</span> <span class="o">{</span>
</span><span id="line-131">		const <span class="nv">options</span> <span class="o">=</span> this.__getRequestOptions<span class="o">(</span><span class="sb">`</span>/v1/devices/<span class="si">${</span><span class="nv">this</span><span class="p">.deviceId</span><span class="si">}</span>/settings/address<span class="sb">`</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-132">
</span><span id="line-133">		<span class="k">return</span> new Promise<span class="o">((</span>fulfill, reject<span class="o">)</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span id="line-134">			this.__handleDeviceAddressApiRequest<span class="o">(</span>options, fulfill, reject<span class="o">)</span><span class="p">;</span>
</span><span id="line-135">		<span class="o">})</span><span class="p">;</span>
</span><span id="line-136">	<span class="o">}</span>
</span><span id="line-137">
</span><span id="line-138">	/**
</span><span id="line-139">	 * This will make a request to the Address API using the device ID and
</span><span id="line-140">	 * consent token provided when the Address Client was initialized.
</span><span id="line-141">	 * This will retrieve the country and postal code of a device.
</span><span id="line-142">	 * @return <span class="o">{</span>Promise<span class="o">}</span> promise <span class="k">for</span> the request in flight.
</span><span id="line-143">	 */
</span><span id="line-144">	getCountryAndPostalCode<span class="o">()</span> <span class="o">{</span>
</span><span id="line-145">		const <span class="nv">options</span> <span class="o">=</span> this.__getRequestOptions<span class="o">(</span>
</span><span id="line-146">			<span class="sb">`</span>/v1/devices/<span class="si">${</span><span class="nv">this</span><span class="p">.deviceId</span><span class="si">}</span>/settings/address/countryAndPostalCode<span class="sb">`</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-147">
</span><span id="line-148">		<span class="k">return</span> new Promise<span class="o">((</span>fulfill, reject<span class="o">)</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span id="line-149">			this.__handleDeviceAddressApiRequest<span class="o">(</span>options, fulfill, reject<span class="o">)</span><span class="p">;</span>
</span><span id="line-150">		<span class="o">})</span><span class="p">;</span>
</span><span id="line-151">	<span class="o">}</span>
</span><span id="line-152">
</span><span id="line-153">	/**
</span><span id="line-154">	 * This is a helper method that makes requests to the Address API and handles the response
</span><span id="line-155">	 * in a generic manner. It will also resolve promise methods.
</span><span id="line-156">	 * @param requestOptions
</span><span id="line-157">	 * @param fulfill
</span><span id="line-158">	 * @param reject
</span><span id="line-159">	 * @private
</span><span id="line-160">	 */
</span><span id="line-161">	__handleDeviceAddressApiRequest<span class="o">(</span>requestOptions, fulfill, reject<span class="o">)</span> <span class="o">{</span>
</span><span id="line-162">		Https.get<span class="o">(</span>requestOptions, <span class="o">(</span>response<span class="o">)</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span id="line-163">			
</span><span id="line-164">			//console.log<span class="o">(</span><span class="sb">`</span>Device Address API responded with a status code of : <span class="si">${</span><span class="nv">response</span><span class="p">.statusCode</span><span class="si">}</span><span class="sb">`</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-165">
</span><span id="line-166">			response.on<span class="o">(</span><span class="s1">'data'</span>, <span class="o">(</span>data<span class="o">)</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span id="line-167">				<span class="nb">let</span> <span class="nv">responsePayloadObject</span> <span class="o">=</span> JSON.parse<span class="o">(</span>data<span class="o">)</span><span class="p">;</span>
</span><span id="line-168">
</span><span id="line-169">				const <span class="nv">deviceAddressResponse</span> <span class="o">=</span> <span class="o">{</span>
</span><span id="line-170">					statusCode: response.statusCode,
</span><span id="line-171">					address: responsePayloadObject
</span><span id="line-172">				<span class="o">}</span><span class="p">;</span>
</span><span id="line-173">
</span><span id="line-174">				fulfill<span class="o">(</span>deviceAddressResponse<span class="o">)</span><span class="p">;</span>
</span><span id="line-175">			<span class="o">})</span><span class="p">;</span>
</span><span id="line-176">		<span class="o">})</span>.on<span class="o">(</span><span class="s1">'error'</span>, <span class="o">(</span>e<span class="o">)</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span id="line-177">			console.error<span class="o">(</span><span class="s2">"ERROR: device address API failure, e = "</span> + e<span class="o">)</span><span class="p">;</span>
</span><span id="line-178">			this.emit<span class="o">(</span><span class="s1">':tell'</span>, <span class="s1">'We are having a temporary problem with back end services. Please try again later.'</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-179">			console.error<span class="o">(</span>e<span class="o">)</span><span class="p">;</span>
</span><span id="line-180">			reject<span class="o">()</span><span class="p">;</span>
</span><span id="line-181">		<span class="o">})</span><span class="p">;</span>
</span><span id="line-182">	<span class="o">}</span>
</span><span id="line-183">
</span><span id="line-184">	/**
</span><span id="line-185">	 * Private helper method <span class="k">for</span> retrieving request options.
</span><span id="line-186">	 * @param path the path that you want to hit against the API provided by the skill event.
</span><span id="line-187">	 * @return <span class="o">{{</span>hostname: string, path: *, method: string, headers: <span class="o">{</span>Authorization: string<span class="o">}}}</span>
</span><span id="line-188">	 * @private
</span><span id="line-189">	 */
</span><span id="line-190">	__getRequestOptions<span class="o">(</span>path<span class="o">)</span> <span class="o">{</span>
</span><span id="line-191">		<span class="k">return</span> <span class="o">{</span>
</span><span id="line-192">			hostname: this.endpoint,
</span><span id="line-193">			path: path,
</span><span id="line-194">			method: <span class="s1">'GET'</span>,
</span><span id="line-195">			<span class="s1">'headers'</span>: <span class="o">{</span>
</span><span id="line-196">				<span class="s1">'Authorization'</span>: <span class="s1">'Bearer '</span> + this.consentToken
</span><span id="line-197">			<span class="o">}</span>
</span><span id="line-198">		<span class="o">}</span><span class="p">;</span>
</span><span id="line-199">	<span class="o">}</span>
</span><span id="line-200"><span class="o">}</span>
</span><span id="line-201">
</span><span id="line-202">/* END Amazon Sample Code */
</span><span id="line-203">
</span><span id="line-204">
</span><span id="line-205">/**
</span><span id="line-206"> * 
</span><span id="line-207"> * Below are the skill<span class="s1">'s Intent handlers.</span>
</span><span id="line-208"><span class="s1"> *</span>
</span><span id="line-209"><span class="s1"> **/</span>
</span><span id="line-210"><span class="s1">const handlers = {</span>
</span><span id="line-211"><span class="s1"> '</span>LaunchRequest<span class="s1">': function () {</span>
</span><span id="line-212"><span class="s1"> this.emit('</span>GetCloudIntent<span class="s1">');</span>
</span><span id="line-213"><span class="s1"> },</span>
</span><span id="line-214"><span class="s1"> '</span>GetNewFactIntent<span class="s1">': function () {</span>
</span><span id="line-215"><span class="s1"> this.emit('</span>GetCloudIntent<span class="s1">');</span>
</span><span id="line-216"><span class="s1"> },</span>
</span><span id="line-217"><span class="s1"> '</span>GetCloudIntent<span class="s1">': function () {</span>
</span><span id="line-218">
</span><span id="line-219"><span class="s1"> console.log("ENTRY: GetCloudIntent");</span>
</span><span id="line-220"><span class="s1"> </span>
</span><span id="line-221">
</span><span id="line-222"><span class="s1"> //</span>
</span><span id="line-223"><span class="s1"> // Get location consent token &amp; other stuff</span>
</span><span id="line-224"><span class="s1"> //</span>
</span><span id="line-225"><span class="s1"> try {</span>
</span><span id="line-226">
</span><span id="line-227"><span class="s1"> // security - must be provided correct application ID </span>
</span><span id="line-228"><span class="s1"> try { </span>
</span><span id="line-229"><span class="s1"> if (this.event.session.application.applicationId !== APP_ID) {</span>
</span><span id="line-230"><span class="s1"> console.error("ERROR: was presented bogus application ID = " + this.event.session.application.applicationId);</span>
</span><span id="line-231"><span class="s1"> reject();</span>
</span><span id="line-232"><span class="s1"> return;</span>
</span><span id="line-233"><span class="s1"> }</span>
</span><span id="line-234"><span class="s1"> } catch(err) {</span>
</span><span id="line-235"><span class="s1"> console.error("ERROR: exception while checking for application ID, err = " + err);</span>
</span><span id="line-236"><span class="s1"> reject();</span>
</span><span id="line-237"><span class="s1"> return;</span>
</span><span id="line-238"><span class="s1"> }</span>
</span><span id="line-239"><span class="s1"> </span>
</span><span id="line-240"><span class="s1"> var consentToken;</span>
</span><span id="line-241"><span class="s1"> </span>
</span><span id="line-242"><span class="s1"> try {</span>
</span><span id="line-243">
</span><span id="line-244"><span class="s1"> // Access token</span>
</span><span id="line-245"><span class="s1"> consentToken = this.event.context.System.user.permissions.consentToken;</span>
</span><span id="line-246"><span class="s1"> </span>
</span><span id="line-247"><span class="s1"> // Test for consent not been granted</span>
</span><span id="line-248"><span class="s1"> if (!consentToken) {</span>
</span><span id="line-249"><span class="s1"> console.error("ERROR: !consentToken evaluated to true (consent not granted or other error)");</span>
</span><span id="line-250"><span class="s1"> this.emit(":tellWithPermissionCard",</span>
</span><span id="line-251"><span class="s1"> "Please grant permission for Cloud Height to access your postal code in the skills section of your Alexa App.",</span>
</span><span id="line-252"><span class="s1"> ["read::alexa:device:all:address:country_and_postal_code"]);</span>
</span><span id="line-253"><span class="s1"> return;</span>
</span><span id="line-254"><span class="s1"> } else {</span>
</span><span id="line-255"><span class="s1"> console.log("consentToken obtained");</span>
</span><span id="line-256"><span class="s1"> }</span>
</span><span id="line-257"><span class="s1"> }</span>
</span><span id="line-258"><span class="s1"> catch(err) {</span>
</span><span id="line-259"><span class="s1"> console.log("ERROR: exception; no consent token, err = " + err);</span>
</span><span id="line-260"><span class="s1"> this.emit(":tellWithPermissionCard",</span>
</span><span id="line-261"><span class="s1"> "Please grant permission for Cloud Height to access your postal code in the skills section of your Alexa App.",</span>
</span><span id="line-262"><span class="s1"> ["read::alexa:device:all:address:country_and_postal_code"]);</span>
</span><span id="line-263"><span class="s1"> return;</span>
</span><span id="line-264"><span class="s1"> }</span>
</span><span id="line-265"><span class="s1"> </span>
</span><span id="line-266"><span class="s1"> // Permission array for obtaining zip code</span>
</span><span id="line-267"><span class="s1"> const permissionArray = ['</span>read::alexa:device:all:address:country_and_postal_code<span class="s1">'];</span>
</span><span id="line-268"><span class="s1"> </span>
</span><span id="line-269"><span class="s1"> //</span>
</span><span id="line-270"><span class="s1"> // Get device ID</span>
</span><span id="line-271"><span class="s1"> //</span>
</span><span id="line-272"><span class="s1"> // Required for alexa device location API</span>
</span><span id="line-273"><span class="s1"> var deviceId;</span>
</span><span id="line-274">
</span><span id="line-275"><span class="s1"> try { </span>
</span><span id="line-276"><span class="s1"> deviceId = this.event.context.System.device.deviceId;</span>
</span><span id="line-277"><span class="s1"> // Test for bad deviceId</span>
</span><span id="line-278"><span class="s1"> if (!deviceId) {</span>
</span><span id="line-279"><span class="s1"> console.error("ERROR: !deviceId evaluated to true");</span>
</span><span id="line-280"><span class="s1"> this.emit(":tell", "Hmm. I'</span>m having a problem with your request. Please try again later.<span class="s2">");</span>
</span><span id="line-281"><span class="s2"> return;</span>
</span><span id="line-282"><span class="s2"> } else {</span>
</span><span id="line-283"><span class="s2"> console.log("</span>deviceId obtained<span class="s2">");</span>
</span><span id="line-284"><span class="s2"> }</span>
</span><span id="line-285"><span class="s2"> } catch(err) {</span>
</span><span id="line-286"><span class="s2"> console.error("</span>ERROR: exception <span class="k">while</span> checking <span class="k">for</span> device ID, <span class="nv">err</span> <span class="o">=</span> <span class="s2">" + err);</span>
</span><span id="line-287"><span class="s2"> return;</span>
</span><span id="line-288"><span class="s2"> }</span>
</span><span id="line-289"><span class="s2"> </span>
</span><span id="line-290">
</span><span id="line-291"><span class="s2"> //</span>
</span><span id="line-292"><span class="s2"> // Get API endpoint</span>
</span><span id="line-293"><span class="s2"> //</span>
</span><span id="line-294"><span class="s2"> // Required for alexa device location API</span>
</span><span id="line-295"><span class="s2"> var apiEndpoint;</span>
</span><span id="line-296"><span class="s2"> </span>
</span><span id="line-297"><span class="s2"> try {</span>
</span><span id="line-298"><span class="s2"> </span>
</span><span id="line-299"><span class="s2"> // Test for bad apiEndpoint</span>
</span><span id="line-300"><span class="s2"> apiEndpoint = this.event.context.System.apiEndpoint;</span>
</span><span id="line-301"><span class="s2"> if (!apiEndpoint) {</span>
</span><span id="line-302"><span class="s2"> console.error("</span>ERROR: !apiEndpoint evaluated to true<span class="s2">");</span>
</span><span id="line-303"><span class="s2"> this.emit(':tell', 'Hmm. I\'m having a problem with your request. Please try again later.');</span>
</span><span id="line-304"><span class="s2"> return;</span>
</span><span id="line-305"><span class="s2"> } else {</span>
</span><span id="line-306"><span class="s2"> console.log("</span><span class="nv">apiEndpoint</span> <span class="o">=</span> <span class="s2">" + apiEndpoint);</span>
</span><span id="line-307"><span class="s2"> }</span>
</span><span id="line-308"><span class="s2"> } catch(err) {</span>
</span><span id="line-309"><span class="s2"> console.error("</span>ERROR: exception <span class="k">while</span> checking <span class="k">for</span> API endpoint, <span class="nv">err</span> <span class="o">=</span> <span class="s2">" + err);</span>
</span><span id="line-310"><span class="s2"> return;</span>
</span><span id="line-311"><span class="s2"> }</span>
</span><span id="line-312">
</span><span id="line-313">
</span><span id="line-314">
</span><span id="line-315"><span class="s2"> </span>
</span><span id="line-316"><span class="s2"> // Prepare to obtain location</span>
</span><span id="line-317"><span class="s2"> const addressClient = new AlexaDeviceAddressClient(apiEndpoint, deviceId, consentToken);</span>
</span><span id="line-318"><span class="s2"> let deviceAddressRequest = addressClient.getCountryAndPostalCode();</span>
</span><span id="line-319"><span class="s2"> </span>
</span><span id="line-320"><span class="s2"> // Get location and handle response</span>
</span><span id="line-321"><span class="s2"> deviceAddressRequest.then((addressResponse) =&gt; {</span>
</span><span id="line-322"><span class="s2"> switch(addressResponse.statusCode) {</span>
</span><span id="line-323"><span class="s2"> case 200:</span>
</span><span id="line-324"><span class="s2"> const address = addressResponse.address;</span>
</span><span id="line-325"><span class="s2"> const zipCode = address['postalCode'];</span>
</span><span id="line-326"><span class="s2"> const countryCode = address['countryCode'];</span>
</span><span id="line-327"><span class="s2"> console.log("</span>Address API response received<span class="s2">");</span>
</span><span id="line-328"><span class="s2"> </span>
</span><span id="line-329"><span class="s2"> // Country code not provided</span>
</span><span id="line-330"><span class="s2"> if (!countryCode) {</span>
</span><span id="line-331"><span class="s2"> console.log("</span>COUNTRY CODE NOT PROVIDED<span class="s2">");</span>
</span><span id="line-332"><span class="s2"> this.emit("</span>:tell<span class="s2">", "</span>Cloud Height only works in the fifty United States and Great Britain. Please ensure your address is <span class="nb">set</span> properly in the settings section of your Alexa App.<span class="s2">");</span>
</span><span id="line-333"><span class="s2"> return;</span>
</span><span id="line-334"><span class="s2"> }</span>
</span><span id="line-335"><span class="s2"> </span>
</span><span id="line-336"><span class="s2"> // Zip code was not provided</span>
</span><span id="line-337"><span class="s2"> if (!zipCode) {</span>
</span><span id="line-338"><span class="s2"> console.log("</span>ZIP CODE NOT PROVIDED<span class="s2">");</span>
</span><span id="line-339"><span class="s2"> this.emit("</span>:tell<span class="s2">", "</span>Cloud Height needs your postal code to find a nearby cloud reporting station. Please ensure your postal code is <span class="nb">set</span> in the settings section of your Alexa App.<span class="s2">");</span>
</span><span id="line-340"><span class="s2"> return;</span>
</span><span id="line-341"><span class="s2"> }</span>
</span><span id="line-342"><span class="s2"> </span>
</span><span id="line-343"><span class="s2"> var zipLatLongTables = { "</span>GB<span class="s2">": resources.gb_post_codes, "</span>US<span class="s2">": resources.us_post_codes }</span>
</span><span id="line-344">
</span><span id="line-345"><span class="s2"> //Returns error if there is no latlong table for the country code</span>
</span><span id="line-346"><span class="s2"> if (!zipLatLongTables[countryCode]) {</span>
</span><span id="line-347"><span class="s2"> console.log("</span>COUNTRY NOT US, received <span class="s2">"+countryCode+"</span> zip: <span class="s2">"+zipCode);</span>
</span><span id="line-348"><span class="s2"> this.emit("</span>:tell<span class="s2">", "</span>Sorry, Cloud Height is not provided outside of the fifty United States and Great Britain.<span class="s2">");</span>
</span><span id="line-349"><span class="s2"> return;</span>
</span><span id="line-350"><span class="s2"> }</span>
</span><span id="line-351">
</span><span id="line-352"><span class="s2"> const latLong = zipLatLongTables[countryCode][zipCode.split("</span> <span class="s2">")[0]];</span>
</span><span id="line-353"><span class="s2"> </span>
</span><span id="line-354"><span class="s2"> // There was no lat/long entry for the supplied zip code.</span>
</span><span id="line-355"><span class="s2"> if (!latLong || !latLong[0] || !latLong[1]) {</span>
</span><span id="line-356"><span class="s2"> console.log("</span>ZIP CODE NOT IN TABLE<span class="s2">"); // , for zip code = "</span> + zipCode<span class="o">)</span><span class="p">;</span>
</span><span id="line-357">							console.log<span class="o">(</span><span class="s2">"Zip code: "</span>+zipCode<span class="o">)</span>
</span><span id="line-358">							this.emit<span class="o">(</span><span class="s2">":tell"</span>, <span class="s2">"Hmm. Cloud Height can't find a cloud reporting station near the postal code that's saved in the settings section of your Alexa App."</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-359">							<span class="k">return</span><span class="p">;</span>
</span><span id="line-360">						<span class="o">}</span>
</span><span id="line-361">						
</span><span id="line-362">						//Build request vars
</span><span id="line-363">						var <span class="nv">radius_miles</span> <span class="o">=</span> 20<span class="p">;</span>
</span><span id="line-364">						var <span class="nv">hostname</span> <span class="o">=</span> <span class="s2">"aviationweather.gov"</span>
</span><span id="line-365">						var <span class="nv">base_path</span> <span class="o">=</span> <span class="s2">"/adds/dataserver_current/httpparam"</span>
</span><span id="line-366">						var <span class="nv">params</span> <span class="o">=</span> <span class="s2">"?dataSource=metars&amp;requestType=retrieve&amp;format=csv"</span>
</span><span id="line-367">						var <span class="nv">radius_info</span> <span class="o">=</span> <span class="s2">"&amp;radialDistance="</span> + radius_miles + <span class="s2">";"</span> + latLong<span class="o">[</span>1<span class="o">]</span> + <span class="s2">","</span> + latLong<span class="o">[</span>0<span class="o">]</span>
</span><span id="line-368">						var <span class="nv">search_constraints</span> <span class="o">=</span> <span class="s2">"&amp;mostRecentForEachStation=true&amp;hoursBeforeNow=2"</span>
</span><span id="line-369">						var <span class="nv">path</span> <span class="o">=</span> base_path + params + radius_info + search_constraints
</span><span id="line-370">						
</span><span id="line-371">						Https.get<span class="o">({</span>hostname:hostname, path:path, method:<span class="s2">"GET"</span><span class="o">}</span>, <span class="o">(</span>response<span class="o">)</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span id="line-372">							
</span><span id="line-373">							// Response code logging. Enable <span class="k">for</span> testing only.
</span><span id="line-374">							response.on<span class="o">(</span><span class="s1">'data'</span>, <span class="o">(</span>data<span class="o">)</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span id="line-375">								
</span><span id="line-376">								// Response logging. Enable <span class="k">for</span> testing only.
</span><span id="line-377">								console.log<span class="o">(</span><span class="s2">"Weather API response received"</span><span class="o">)</span><span class="p">;</span> // + data.toString<span class="o">(</span><span class="s1">'utf8'</span><span class="o">))</span>
</span><span id="line-378">								
</span><span id="line-379">								// Parse the response.
</span><span id="line-380">								try <span class="o">{</span>
</span><span id="line-381">									
</span><span id="line-382">									// split csv response into individual lines
</span><span id="line-383">									var <span class="nv">lines</span> <span class="o">=</span> data.toString<span class="o">(</span><span class="s1">'utf8'</span><span class="o">)</span>.split<span class="o">(</span><span class="s1">'\n'</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-384">									
</span><span id="line-385">
</span><span id="line-386">									<span class="k">if</span> <span class="o">(</span>!lines <span class="o">||</span> lines.length &lt; 1<span class="o">)</span> <span class="o">{</span>
</span><span id="line-387">										console.error<span class="o">(</span><span class="s2">"ERROR: Problem with upstream provider."</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-388">										this.emit<span class="o">(</span><span class="s2">":tell"</span>, <span class="s2">"Hmm. We're having trouble getting cloud information from our upstream provider. Please try again soon."</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-389">										<span class="k">return</span><span class="p">;</span>
</span><span id="line-390">									<span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span>!lines<span class="o">[</span>0<span class="o">]</span>.includes<span class="o">(</span><span class="s2">"No errors"</span><span class="o">)</span> <span class="o">||</span> lines.length &lt; 6<span class="o">)</span> <span class="o">{</span>
</span><span id="line-391">										console.error<span class="o">(</span><span class="s2">"ERROR: Error reported in response, line 1: "</span> + lines<span class="o">[</span>0<span class="o">])</span><span class="p">;</span>
</span><span id="line-392">										<span class="k">if</span> <span class="o">(</span>lines.length &gt; 1<span class="o">)</span> <span class="o">{</span>
</span><span id="line-393">											console.error<span class="o">(</span><span class="s2">"ERROR: line 2: "</span> + lines<span class="o">[</span>1<span class="o">])</span><span class="p">;</span>
</span><span id="line-394">										<span class="o">}</span>
</span><span id="line-395">										<span class="k">if</span> <span class="o">(</span>lines.length &gt; 2<span class="o">)</span> <span class="o">{</span>
</span><span id="line-396">											console.error<span class="o">(</span><span class="s2">"ERROR: line 3: "</span> + lines<span class="o">[</span>2<span class="o">])</span><span class="p">;</span>
</span><span id="line-397">										<span class="o">}</span>
</span><span id="line-398">										<span class="k">if</span> <span class="o">(</span>lines.length &gt; 3<span class="o">)</span> <span class="o">{</span>
</span><span id="line-399">											console.error<span class="o">(</span><span class="s2">"ERROR: line 4: "</span> + lines<span class="o">[</span>3<span class="o">])</span><span class="p">;</span>
</span><span id="line-400">										<span class="o">}</span>
</span><span id="line-401">										this.emit<span class="o">(</span><span class="s2">":tell"</span>, <span class="s2">"Hmm. We're having trouble getting cloud information from our upstream provider. Please try again soon."</span><span class="o">)</span><span class="p">;</span>
</span><span id="line-402">										<span class="k">return</span><span class="p">;</span>
</span><span id="line-403">									<span class="o">}</span>
</span><span id="line-404">
</span><span id="line-405">									// look <span class="k">for</span> valid data
</span><span id="line-406">									var <span class="nv">i</span> <span class="o">=</span> <span class="m">6</span>      // the data starts on the seventh line<span class="p">;</span> the first six are info/header
</span><span id="line-407">									var cloudLat<span class="p">;</span>
</span><span id="line-408">									var cloudLon<span class="p">;</span>
</span><span id="line-409">									var cloudType<span class="p">;</span>
</span><span id="line-410">									var cloudHeight<span class="p">;</span>
</span><span id="line-411">	
</span><span id="line-412">									var closestLat<span class="p">;</span>
</span><span id="line-413">									var closestLon<span class="p">;</span>
</span><span id="line-414">									var closestType<span class="p">;</span>
</span><span id="line-415">									var closestHeight<span class="p">;</span>
</span><span id="line-416">									var cardHeight<span class="p">;</span>
</span><span id="line-417">									var cardType<span class="p">;</span>
</span><span id="line-418">									
</span><span id="line-419">									var <span class="nv">cardStationTime</span> <span class="o">=</span> <span class="s2">""</span><span class="p">;</span>
</span><span id="line-420">									var <span class="nv">cardStationName</span> <span class="o">=</span> <span class="s2">""</span><span class="p">;</span>
</span><span id="line-421">									
</span><span id="line-422">									// We<span class="s1">'re only interested in data from the closest station.</span>
</span><span id="line-423"><span class="s1"> // Make initial value large enough so at least one station is closer.</span>
</span><span id="line-424"><span class="s1"> var closestStation = 1000;</span>
</span><span id="line-425"><span class="s1"> var cardStation; // closestStation for the card</span>
</span><span id="line-426"><span class="s1"> </span>
</span><span id="line-427"><span class="s1"> var cardTitle;</span>
</span><span id="line-428"><span class="s1"> </span>
</span><span id="line-429"><span class="s1"> console.log("i = " + i.toString() + ", lines.length = " + lines.length.toString());</span>
</span><span id="line-430"><span class="s1"> </span>
</span><span id="line-431"><span class="s1"> // go through results until we find the first one with cloud type, lat and lon, and</span>
</span><span id="line-432"><span class="s1"> // cloud height (unless cloud type == CLR == clear skies below 12000)</span>
</span><span id="line-433"><span class="s1"> // if we don'</span>t find one, an exception will occur and we<span class="s1">'ll be able to tell the user.</span>
</span><span id="line-434"><span class="s1"> while (i &lt; lines.length) {</span>
</span><span id="line-435"><span class="s1"> </span>
</span><span id="line-436"><span class="s1"> // get the current line</span>
</span><span id="line-437"><span class="s1"> var info = lines[i].split('</span>,<span class="s1">');</span>
</span><span id="line-438"><span class="s1"> </span>
</span><span id="line-439"><span class="s1"> // get lat, long</span>
</span><span id="line-440"><span class="s1"> cloudLat = info[3];</span>
</span><span id="line-441"><span class="s1"> cloudLon = info[4];</span>
</span><span id="line-442"><span class="s1"> </span>
</span><span id="line-443"><span class="s1"> // get first instance of cloud height and type</span>
</span><span id="line-444"><span class="s1"> cloudType = info[22];</span>
</span><span id="line-445"><span class="s1"> cloudHeight = info[23];</span>
</span><span id="line-446"><span class="s1"> </span>
</span><span id="line-447"><span class="s1"> // see if this station had valid cloud info. If so, and closer than last station, use its data.</span>
</span><span id="line-448"><span class="s1"> if (cloudLat &amp;&amp; cloudLon &amp;&amp; cloudType &amp;&amp; (cloudHeight || (!cloudHeight &amp;&amp; (cloudType == "CLR" || cloudType == "SKC")))) {</span>
</span><span id="line-449"><span class="s1"> </span>
</span><span id="line-450"><span class="s1"> // Use getDistance formula to get distance (see bottom of this file)</span>
</span><span id="line-451"><span class="s1"> // Round fractional distance up to the nearest mile.</span>
</span><span id="line-452"><span class="s1"> var distance = Math.ceil(findDistance(cloudLat, cloudLon, latLong[0], latLong[1]));</span>
</span><span id="line-453"><span class="s1"> </span>
</span><span id="line-454"><span class="s1"> if (distance &lt; closestStation) {</span>
</span><span id="line-455"><span class="s1"> closestStation = distance; // make this one the closer station</span>
</span><span id="line-456"><span class="s1"> </span>
</span><span id="line-457"><span class="s1"> // update closest values</span>
</span><span id="line-458"><span class="s1"> closestLat = cloudLat;</span>
</span><span id="line-459"><span class="s1"> closestLon = cloudLon;</span>
</span><span id="line-460"><span class="s1"> closestType = cloudType;</span>
</span><span id="line-461"><span class="s1"> closestHeight = cloudHeight;</span>
</span><span id="line-462"><span class="s1"> </span>
</span><span id="line-463"><span class="s1"> // get station name and time of measurement</span>
</span><span id="line-464"><span class="s1"> if (info[1].length &gt; 0) {</span>
</span><span id="line-465"><span class="s1"> cardStationName = "Reporting station: " + info[1];</span>
</span><span id="line-466"><span class="s1"> }</span>
</span><span id="line-467"><span class="s1"> </span>
</span><span id="line-468"><span class="s1"> var datetime = info[2].split('</span>T<span class="s1">');</span>
</span><span id="line-469"><span class="s1"> var timeNoZ = datetime[1].split('</span>Z<span class="s1">');</span>
</span><span id="line-470">
</span><span id="line-471"><span class="s1"> if (datetime.length == 2) {</span>
</span><span id="line-472"><span class="s1"> cardStationTime = "\nReport date/time (UTC): " + datetime[0] + " " + timeNoZ[0];</span>
</span><span id="line-473"><span class="s1"> }</span>
</span><span id="line-474"><span class="s1"> </span>
</span><span id="line-475"><span class="s1"> // get additional cloud layers</span>
</span><span id="line-476"><span class="s1"> var extraLayers = 0; // reads 1 .. n if additional cloud layers found</span>
</span><span id="line-477"><span class="s1"> var layerType = [];</span>
</span><span id="line-478"><span class="s1"> var layerHeight = [];</span>
</span><span id="line-479"><span class="s1"> for (var j=0; j&lt;3; j++) {</span>
</span><span id="line-480"><span class="s1"> layerType[j] = info[24 + (j*2)];</span>
</span><span id="line-481"><span class="s1"> layerHeight[j] = info[25 + (j*2)];</span>
</span><span id="line-482"><span class="s1"> // if no data, stop processing layers</span>
</span><span id="line-483"><span class="s1"> if (!layerType[j] || !layerHeight[j]) {</span>
</span><span id="line-484"><span class="s1"> break;</span>
</span><span id="line-485"><span class="s1"> } else {</span>
</span><span id="line-486"><span class="s1"> extraLayers++;</span>
</span><span id="line-487"><span class="s1"> }</span>
</span><span id="line-488"><span class="s1"> }</span>
</span><span id="line-489"><span class="s1"> }</span>
</span><span id="line-490"><span class="s1"> }</span>
</span><span id="line-491">
</span><span id="line-492"><span class="s1"> // go to the next line</span>
</span><span id="line-493"><span class="s1"> i++</span>
</span><span id="line-494"><span class="s1"> }</span>
</span><span id="line-495">
</span><span id="line-496"><span class="s1"> // No data returned?</span>
</span><span id="line-497"><span class="s1"> if (lines.length &lt;= 6 || closestStation &gt; 900) {</span>
</span><span id="line-498"><span class="s1"> console.log("NO STATION WITH WEATHER: no station found with weather");</span>
</span><span id="line-499"><span class="s1"> this.emit(":tell", "Unfortunately, we can'</span>t find a cloud measuring station with current data within <span class="m">20</span> miles of your devices postal code.<span class="s2">");</span>
</span><span id="line-500"><span class="s2"> return; </span>
</span><span id="line-501"><span class="s2"> }</span>
</span><span id="line-502"><span class="s2"> }</span>
</span><span id="line-503"><span class="s2"> </span>
</span><span id="line-504"><span class="s2"> // We didn't find cloud info.</span>
</span><span id="line-505"><span class="s2"> catch(err) {</span>
</span><span id="line-506"><span class="s2"> console.error("</span>EXCEPTION: error parsing returned weather info, <span class="nv">error</span> <span class="o">=</span> <span class="s2">" + err.toString());</span>
</span><span id="line-507"><span class="s2"> this.emit("</span>:tell<span class="s2">", "</span>Unfortunately, we can<span class="s1">'t find a cloud measuring station with current data within 20 miles of your devices postal code. Please try again later.");</span>
</span><span id="line-508"><span class="s1"> return; </span>
</span><span id="line-509"><span class="s1"> }</span>
</span><span id="line-510"><span class="s1"> </span>
</span><span id="line-511"><span class="s1"> // Use getDistance formula to get distance (see bottom of this file)</span>
</span><span id="line-512"><span class="s1"> // Round fractional distance up to the nearest mile.</span>
</span><span id="line-513"><span class="s1"> //var distance = Math.ceil(findDistance(cloudLat, cloudLon, latLong[0], latLong[1]));</span>
</span><span id="line-514"><span class="s1"> cardStation = closestStation;</span>
</span><span id="line-515"><span class="s1"> </span>
</span><span id="line-516"><span class="s1"> // Handle one mile differently than many miles</span>
</span><span id="line-517"><span class="s1"> if (closestStation &lt;= 1) {</span>
</span><span id="line-518"><span class="s1"> closestStation = " less than a mile "</span>
</span><span id="line-519"><span class="s1"> } else {</span>
</span><span id="line-520"><span class="s1"> closestStation = closestStation + " miles "</span>
</span><span id="line-521"><span class="s1"> }</span>
</span><span id="line-522"><span class="s1"> </span>
</span><span id="line-523"><span class="s1"> var cloudSpeakAgl;</span>
</span><span id="line-524"><span class="s1"> </span>
</span><span id="line-525"><span class="s1"> var cardSpeak = {"BKN":"Mostly cloudy at " + closestHeight + " feet AGL",</span>
</span><span id="line-526"><span class="s1"> "CB":"Cumulonimbus clouds at " + closestHeight + " feet AGL",</span>
</span><span id="line-527"><span class="s1"> "CLR":"Sky clear below 12000 feet (AGL)",</span>
</span><span id="line-528"><span class="s1"> "FEW":"Few clouds at " + closestHeight + " feet AGL",</span>
</span><span id="line-529"><span class="s1"> "OVC":"Overcast, ceiling " + closestHeight + " feet AGL",</span>
</span><span id="line-530"><span class="s1"> "SCT":"Scattered clouds at " + closestHeight + " feet AGL",</span>
</span><span id="line-531"><span class="s1"> "SKC":"Sky clear",</span>
</span><span id="line-532"><span class="s1"> "TCU":"Towering cumulus at " + closestHeight + " feet AGL"} </span>
</span><span id="line-533"><span class="s1"> </span>
</span><span id="line-534"><span class="s1"> cloudSpeakAgl = "at &lt;say-as interpret-as=\"cardinal\"&gt;" + closestHeight + "&lt;/say-as&gt; feet above ground level";</span>
</span><span id="line-535"><span class="s1"> </span>
</span><span id="line-536"><span class="s1"> // Each cloud density has a different utterance. We set them here. These utterances are for when there is only one cloud layer.</span>
</span><span id="line-537"><span class="s1"> var cloudSpeak = {"BKN":"Broken clouds " + cloudSpeakAgl,</span>
</span><span id="line-538"><span class="s1"> "CB":"Cumulonimbus clouds " + cloudSpeakAgl,</span>
</span><span id="line-539"><span class="s1"> "CLR":"No clouds below twelve thousand feet above ground level",</span>
</span><span id="line-540"><span class="s1"> "FEW":"Few clouds " + cloudSpeakAgl,</span>
</span><span id="line-541"><span class="s1"> "OVC":"Overcast conditions " + cloudSpeakAgl,</span>
</span><span id="line-542"><span class="s1"> "SCT":"Scattered clouds " + cloudSpeakAgl,</span>
</span><span id="line-543"><span class="s1"> "SKC":"Clear skies",</span>
</span><span id="line-544"><span class="s1"> "TCU":"Towering cumulus " + cloudSpeakAgl}</span>
</span><span id="line-545"><span class="s1"> </span>
</span><span id="line-546"><span class="s1"> // If we do not recognize the cloud type returned by the API, just speak the cloud height. </span>
</span><span id="line-547"><span class="s1"> if (!cloudSpeak[closestType]) {</span>
</span><span id="line-548"><span class="s1"> console.error("ERROR: unexpected cloud type = " + closestType)</span>
</span><span id="line-549"><span class="s1"> this.emit(":tell", "We found a cloud measuring station " + closestStation + " away. But alas, we can'</span>t understand what it is telling us.<span class="s2">");</span>
</span><span id="line-550"><span class="s2"> return;</span>
</span><span id="line-551"><span class="s2"> }</span>
</span><span id="line-552"><span class="s2"> </span>
</span><span id="line-553"><span class="s2"> var zipCodeText;</span>
</span><span id="line-554"><span class="s2"> var zipSourceText;</span>
</span><span id="line-555">
</span><span id="line-556"><span class="s2"> if (countryCode == "</span>US<span class="s2">") {</span>
</span><span id="line-557"><span class="s2"> zipCodeText = "</span>zip code.<span class="s2">"</span>
</span><span id="line-558"><span class="s2"> zipSourceText = "</span>US Census Bureau <span class="o">(</span>2016<span class="o">)</span><span class="s2">"</span>
</span><span id="line-559"><span class="s2"> } else {</span>
</span><span id="line-560"><span class="s2"> zipCodeText = "</span>post code.<span class="s2">"</span>
</span><span id="line-561"><span class="s2"> zipSourceText = "</span>National Statistics Postcode Lookup UK<span class="se">\n</span>Contains public sector information licensed under the Open Government Licence v3.0.<span class="s2">"</span>
</span><span id="line-562"><span class="s2"> }</span>
</span><span id="line-563"><span class="s2"> // Success! Prepare the cloud info for Alexa to read.</span>
</span><span id="line-564"><span class="s2"> var cloudFinal = "</span> were reported within <span class="s2">" + closestStation + "</span> of your <span class="s2">"+zipCodeText;</span>
</span><span id="line-565"><span class="s2"> var cardText;</span>
</span><span id="line-566"><span class="s2"> </span>
</span><span id="line-567"><span class="s2"> var cardTitleText = cardSpeak[closestType];</span>
</span><span id="line-568"><span class="s2"> </span>
</span><span id="line-569"><span class="s2"> var latitude = latLong[0];</span>
</span><span id="line-570"><span class="s2"> var longitude = latLong[1];</span>
</span><span id="line-571">
</span><span id="line-572"><span class="s2"> var latDir = "</span>N<span class="s2">";</span>
</span><span id="line-573"><span class="s2"> if (latitude &lt; 0) {</span>
</span><span id="line-574"><span class="s2"> latDir = "</span>S<span class="s2">";</span>
</span><span id="line-575"><span class="s2"> latitude = 0 - latitude;</span>
</span><span id="line-576"><span class="s2"> } </span>
</span><span id="line-577"><span class="s2"> var longDir = "</span>E<span class="s2">";</span>
</span><span id="line-578"><span class="s2"> if (longitude &lt; 0) {</span>
</span><span id="line-579"><span class="s2"> longDir = "</span>W<span class="s2">";</span>
</span><span id="line-580"><span class="s2"> longitude = 0 - longitude;</span>
</span><span id="line-581"><span class="s2"> } </span>
</span><span id="line-582"><span class="s2"> var cardStationDistance = "</span><span class="se">\n</span>Distance from <span class="s2">" + zipCode + "</span> <span class="o">(</span><span class="s2">" + latitude + latDir + "</span>, <span class="s2">" + longitude + longDir + "</span><span class="o">)</span>: <span class="s2">" + closestStation;</span>
</span><span id="line-583">
</span><span id="line-584"><span class="s2"> var layerAGL;</span>
</span><span id="line-585"><span class="s2"> </span>
</span><span id="line-586"><span class="s2"> cardText = ""; // initialize in case there are no more layers</span>
</span><span id="line-587"><span class="s2"> </span>
</span><span id="line-588"><span class="s2"> var cloudText = "";</span>
</span><span id="line-589">
</span><span id="line-590"><span class="s2"> if (extraLayers &gt; 1) { // plural</span>
</span><span id="line-591"><span class="s2"> cardText = "</span>Also: <span class="s2">";</span>
</span><span id="line-592"><span class="s2"> } else if (extraLayers &gt; 0) { // singular</span>
</span><span id="line-593"><span class="s2"> cardText = "</span>Also: <span class="s2">";</span>
</span><span id="line-594"><span class="s2"> }</span>
</span><span id="line-595"><span class="s2"> </span>
</span><span id="line-596"><span class="s2"> // Add speech for extra layers.</span>
</span><span id="line-597"><span class="s2"> for (var k=0; k&lt;extraLayers; k++) {</span>
</span><span id="line-598">
</span><span id="line-599"><span class="s2"> // terminate first sentence</span>
</span><span id="line-600"><span class="s2"> if (k + 4 &lt; extraLayers) {</span>
</span><span id="line-601"><span class="s2"> cloudText += "</span>, <span class="s2">";</span>
</span><span id="line-602"><span class="s2"> } else if (k + 3 &lt; extraLayers) {</span>
</span><span id="line-603"><span class="s2"> cloudText += "</span>, <span class="s2">";</span>
</span><span id="line-604"><span class="s2"> } else if (k + 2 &lt; extraLayers) {</span>
</span><span id="line-605"><span class="s2"> cloudText += "</span>, <span class="s2">";</span>
</span><span id="line-606"><span class="s2"> } else if (k + 1 &lt; extraLayers) {</span>
</span><span id="line-607"><span class="s2"> cloudText += "</span>, <span class="s2">";</span>
</span><span id="line-608"><span class="s2"> } else {</span>
</span><span id="line-609"><span class="s2"> cloudText += "</span>, and <span class="s2">";</span>
</span><span id="line-610"><span class="s2"> }</span>
</span><span id="line-611"><span class="s2"> </span>
</span><span id="line-612"><span class="s2"> layerAGL = layerHeight[k];</span>
</span><span id="line-613"><span class="s2"> var layerSpeakAgl;</span>
</span><span id="line-614"><span class="s2"> </span>
</span><span id="line-615"><span class="s2"> cardSpeak = {"</span>BKN<span class="s2">":"</span>mostly cloudy at <span class="s2">" + layerAGL + "</span> feet<span class="s2">",</span>
</span><span id="line-616"><span class="s2"> "</span>CB<span class="s2">":"</span>cumulonimbus clouds at <span class="s2">" + layerAGL + "</span> feet<span class="s2">",</span>
</span><span id="line-617"><span class="s2"> "</span>CLR<span class="s2">":"</span>sky clear below <span class="m">12000</span> feet<span class="s2">",</span>
</span><span id="line-618"><span class="s2"> "</span>FEW<span class="s2">":"</span>few clouds at <span class="s2">" + layerAGL + "</span> feet<span class="s2">",</span>
</span><span id="line-619"><span class="s2"> "</span>OVC<span class="s2">":"</span>overcast, ceiling <span class="s2">" + layerAGL + "</span> feet<span class="s2">",</span>
</span><span id="line-620"><span class="s2"> "</span>SCT<span class="s2">":"</span>scattered clouds at <span class="s2">" + layerAGL + "</span> feet<span class="s2">",</span>
</span><span id="line-621"><span class="s2"> "</span>SKC<span class="s2">":"</span>sky clear<span class="s2">",</span>
</span><span id="line-622"><span class="s2"> "</span>TCU<span class="s2">":"</span>towering cumulus, with a base at <span class="s2">" + layerAGL + "</span> feet<span class="s2">"} </span>
</span><span id="line-623"><span class="s2"> </span>
</span><span id="line-624"><span class="s2"> if (layerAGL == "</span>12000<span class="s2">") {</span>
</span><span id="line-625"><span class="s2"> layerSpeakAgl = "</span>at &lt;say-as interpret-as<span class="o">=</span><span class="se">\"</span>cardinal<span class="se">\"</span>&gt;<span class="s2">" + layerAGL + "</span>&lt;/say-as&gt; feet<span class="s2">";</span>
</span><span id="line-626"><span class="s2"> } else {</span>
</span><span id="line-627"><span class="s2"> layerSpeakAgl = "</span>at &lt;say-as interpret-as<span class="o">=</span><span class="se">\"</span>cardinal<span class="se">\"</span>&gt;<span class="s2">" + layerAGL + "</span>&lt;/say-as&gt; feet<span class="s2">";</span>
</span><span id="line-628"><span class="s2"> }</span>
</span><span id="line-629"><span class="s2"> </span>
</span><span id="line-630"><span class="s2"> // Extra speech when there are multiple cloud layers.</span>
</span><span id="line-631"><span class="s2"> var layerSpeak = {"</span>BKN<span class="s2">":"</span> a broken cloud layer <span class="s2">"+ layerSpeakAgl,</span>
</span><span id="line-632"><span class="s2"> "</span>CB<span class="s2">":"</span> cumulonimbus clouds <span class="s2">"+ layerSpeakAgl,</span>
</span><span id="line-633"><span class="s2"> "</span>CLR<span class="s2">":"</span> skies clear below twelve thousand feet<span class="s2">",</span>
</span><span id="line-634"><span class="s2"> "</span>FEW<span class="s2">":"</span> few clouds <span class="s2">"+ layerSpeakAgl,</span>
</span><span id="line-635"><span class="s2"> "</span>OVC<span class="s2">":"</span> an overcast layer <span class="s2">"+ layerSpeakAgl,</span>
</span><span id="line-636"><span class="s2"> "</span>SCT<span class="s2">":"</span> scattered clouds <span class="s2">"+ layerSpeakAgl,</span>
</span><span id="line-637"><span class="s2"> "</span>SKC<span class="s2">":"</span> the sky is clear<span class="s2">",</span>
</span><span id="line-638"><span class="s2"> "</span>TCU<span class="s2">":"</span> towering cumulus with a base <span class="s2">"+ layerSpeakAgl}</span>
</span><span id="line-639"><span class="s2"> </span>
</span><span id="line-640"><span class="s2"> cardText += cardSpeak[layerType[k]];</span>
</span><span id="line-641">
</span><span id="line-642"><span class="s2"> if (k + 3 &lt; extraLayers) {</span>
</span><span id="line-643"><span class="s2"> cardText += "</span><span class="p">;</span> <span class="s2">";</span>
</span><span id="line-644"><span class="s2"> } else if (k + 2 &lt; extraLayers) {</span>
</span><span id="line-645"><span class="s2"> cardText += "</span><span class="p">;</span> <span class="s2">";</span>
</span><span id="line-646"><span class="s2"> } else if (k + 1 &lt; extraLayers &amp;&amp; extraLayers &gt; 1) {</span>
</span><span id="line-647"><span class="s2"> cardText += "</span><span class="p">;</span> <span class="s2">";</span>
</span><span id="line-648"><span class="s2"> } else if (k + 1 &lt; extraLayers) {</span>
</span><span id="line-649"><span class="s2"> cartText += "</span><span class="p">;</span> <span class="s2">"; // was final "</span>and<span class="s2">" in a sentence</span>
</span><span id="line-650"><span class="s2"> }</span>
</span><span id="line-651">
</span><span id="line-652"><span class="s2"> cloudText += layerSpeak[layerType[k]];</span>
</span><span id="line-653"><span class="s2"> }</span>
</span><span id="line-654"><span class="s2"> </span>
</span><span id="line-655"><span class="s2"> if (extraLayers &gt; 0) {</span>
</span><span id="line-656"><span class="s2"> cardText += "</span><span class="se">\n</span><span class="s2">";</span>
</span><span id="line-657"><span class="s2"> }</span>
</span><span id="line-658"><span class="s2"> </span>
</span><span id="line-659">
</span><span id="line-660"><span class="s2"> // Speak the clouds</span>
</span><span id="line-661"><span class="s2"> cardText += cardStationName + cardStationTime + cardStationDistance + "</span><span class="se">\n</span>Data sources: aviationweather.gov, <span class="s2">"+zipSourceText;</span>
</span><span id="line-662">
</span><span id="line-663"><span class="s2"> console.log("</span>SUCCESS: cloudText sent<span class="s2">");</span>
</span><span id="line-664">
</span><span id="line-665"><span class="s2"> var cloudOutput = cloudSpeak[closestType] + cloudText + cloudFinal;</span>
</span><span id="line-666"><span class="s2"> this.emit("</span>:tellWithCard<span class="s2">", cloudOutput, cardTitleText, cardText);</span>
</span><span id="line-667"><span class="s2"> return;</span>
</span><span id="line-668"><span class="s2"> });</span>
</span><span id="line-669"><span class="s2"> </span>
</span><span id="line-670"><span class="s2"> // What to do if the HTTP request for the METAR fails.</span>
</span><span id="line-671"><span class="s2"> }).on('error', (e) =&gt; {</span>
</span><span id="line-672"><span class="s2"> console.error("</span>ERROR: aviation weather API error: <span class="s2">" + e);</span>
</span><span id="line-673"><span class="s2"> this.emit("</span>:tell<span class="s2">", "</span>Hmm. We<span class="s1">'re unable to get cloud information from our upstream provider. Please try again later.");</span>
</span><span id="line-674"><span class="s1"> reject();</span>
</span><span id="line-675"><span class="s1"> });</span>
</span><span id="line-676"><span class="s1"> break;</span>
</span><span id="line-677"><span class="s1"> case 204:</span>
</span><span id="line-678"><span class="s1"> console.error("ERROR: deviceAddressRequest response code 204");</span>
</span><span id="line-679"><span class="s1"> this.emit(":tell", "We use your postal code to find clouds near you. You can set it in the settings section of your Alexa App.");</span>
</span><span id="line-680"><span class="s1"> return;</span>
</span><span id="line-681"><span class="s1"> break;</span>
</span><span id="line-682"><span class="s1"> case 403:</span>
</span><span id="line-683"><span class="s1"> console.error("ERROR: deviceAddressRequest response code 403");</span>
</span><span id="line-684"><span class="s1"> this.emit('</span>:tell<span class="s1">', '</span>To find clouds near you, we need to know where you are. You can give us permission in the skills section of your Alexa App.<span class="s1">');</span>
</span><span id="line-685"><span class="s1"> return;</span>
</span><span id="line-686"><span class="s1"> break;</span>
</span><span id="line-687"><span class="s1"> default:</span>
</span><span id="line-688"><span class="s1"> console.error("ERROR: unexpected deviceAddressRequest response code = " + addressResponse.statusCode.toString());</span>
</span><span id="line-689"><span class="s1"> this.emit(":tell", "Oh dear. The ones and zeros are not aligning right now. Please try again later.");</span>
</span><span id="line-690"><span class="s1"> return;</span>
</span><span id="line-691"><span class="s1"> }</span>
</span><span id="line-692"><span class="s1"> })</span>
</span><span id="line-693"><span class="s1"> </span>
</span><span id="line-694"><span class="s1"> deviceAddressRequest.catch((error) =&gt; {</span>
</span><span id="line-695"><span class="s1"> console.error("ERROR: Exception in deviceAddressRequest, e = " + error.toString())</span>
</span><span id="line-696"><span class="s1"> this.emit(":tell", "Oh dear. The zeros and ones are not aligning right now. Please try again later.");</span>
</span><span id="line-697"><span class="s1"> return;</span>
</span><span id="line-698"><span class="s1"> })</span>
</span><span id="line-699"><span class="s1"> }</span>
</span><span id="line-700"><span class="s1"> catch(err) {</span>
</span><span id="line-701"><span class="s1"> console.error("ERROR: Some unhandled exception: e = " + err);</span>
</span><span id="line-702"><span class="s1"> this.emit('</span>:tell<span class="s1">', '</span>Hmm. I<span class="se">\'</span>m having trouble getting cloud information. Please try again later.<span class="s1">');</span>
</span><span id="line-703"><span class="s1"> return; </span>
</span><span id="line-704"><span class="s1"> }</span>
</span><span id="line-705"><span class="s1"> },</span>
</span><span id="line-706"><span class="s1"> '</span>AMAZON.HelpIntent<span class="s1">': function () {</span>
</span><span id="line-707"><span class="s1"> this.emit('</span>:ask<span class="s1">', '</span>You can say what is the cloud height, or, you can say exit... What can I <span class="nb">help</span> you with?<span class="s1">','</span>You can say what is the cloud height, or, you can say exit... What can I <span class="nb">help</span> you with?<span class="s1">');</span>
</span><span id="line-708"><span class="s1"> },</span>
</span><span id="line-709"><span class="s1"> '</span>AMAZON.CancelIntent<span class="s1">': function () {</span>
</span><span id="line-710"><span class="s1"> this.emit('</span>:tell<span class="s1">', '</span>Goodbye!<span class="s1">');</span>
</span><span id="line-711"><span class="s1"> },</span>
</span><span id="line-712"><span class="s1"> '</span>AMAZON.StopIntent<span class="s1">': function () {</span>
</span><span id="line-713"><span class="s1"> this.emit('</span>:tell<span class="s1">', '</span>Goodbye!<span class="s1">');</span>
</span><span id="line-714"><span class="s1"> },</span>
</span><span id="line-715"><span class="s1"> '</span>Unhandled<span class="s1">': function() {</span>
</span><span id="line-716"><span class="s1"> this.emit('</span>GetCloudIntent<span class="s1">');</span>
</span><span id="line-717"><span class="s1"> }</span>
</span><span id="line-718"><span class="s1">};</span>
</span><span id="line-719">
</span><span id="line-720">
</span><span id="line-721"><span class="s1">//Configure handler</span>
</span><span id="line-722"><span class="s1">exports.handler = function (event, context, callback) {</span>
</span><span id="line-723"><span class="s1"> var alexa = Alexa.handler(event, context, callback);</span>
</span><span id="line-724"><span class="s1"> alexa.appId = APP_ID;</span>
</span><span id="line-725"><span class="s1"> alexa.registerHandlers(handlers);</span>
</span><span id="line-726"><span class="s1"> alexa.execute();</span>
</span><span id="line-727"><span class="s1">};</span>
</span><span id="line-728">
</span><span id="line-729">
</span><span id="line-730"><span class="s1">// END of Alexa Skill source licensed under Amazon Software License</span>
</span><span id="line-731">
</span><span id="line-732"><span class="s1">// START of Javascript lat/long distance calculator</span>
</span><span id="line-733">
</span><span id="line-734"><span class="s1">//==============================================================================</span>
</span><span id="line-735"><span class="s1">//</span>
</span><span id="line-736"><span class="s1">// Javascript lat/long distance calculator is by Andrew Hedges and can be</span>
</span><span id="line-737"><span class="s1">// found at http://andrew.hedges.name/experiments/haversine/</span>
</span><span id="line-738"><span class="s1">// Andrew provides the following license on his website. The code that</span>
</span><span id="line-739"><span class="s1">// follows powers the lat/long distance calculator on his website.</span>
</span><span id="line-740"><span class="s1">//</span>
</span><span id="line-741"><span class="s1">//==============================================================================</span>
</span><span id="line-742"><span class="s1">/*</span>
</span><span id="line-743"><span class="s1">Copyright 2002 Andrew Hedges</span>
</span><span id="line-744">
</span><span id="line-745"><span class="s1">Permission is hereby granted, free of charge, to any person obtaining a copy of</span>
</span><span id="line-746"><span class="s1">this software and associated documentation files (the "Software"), to deal in </span>
</span><span id="line-747"><span class="s1">the Software without restriction, including without limitation the rights to </span>
</span><span id="line-748"><span class="s1">use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies </span>
</span><span id="line-749"><span class="s1">of the Software, and to permit persons to whom the Software is furnished to do </span>
</span><span id="line-750"><span class="s1">so, subject to the following conditions:</span>
</span><span id="line-751">
</span><span id="line-752"><span class="s1">The above copyright notice and this permission notice shall be included in all </span>
</span><span id="line-753"><span class="s1">copies or substantial portions of the Software.</span>
</span><span id="line-754">
</span><span id="line-755"><span class="s1">THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR </span>
</span><span id="line-756"><span class="s1">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, </span>
</span><span id="line-757"><span class="s1">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE </span>
</span><span id="line-758"><span class="s1">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER </span>
</span><span id="line-759"><span class="s1">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, </span>
</span><span id="line-760"><span class="s1">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE </span>
</span><span id="line-761"><span class="s1">SOFTWARE.</span>
</span><span id="line-762"><span class="s1">*/</span>
</span><span id="line-763">
</span><span id="line-764"><span class="s1">/*</span>
</span><span id="line-765"><span class="s1">This script is pretty basic, but if you use it, please let me know. Thanks!</span>
</span><span id="line-766"><span class="s1">Andrew Hedges, andrew(at)hedges(dot)name</span>
</span><span id="line-767"><span class="s1">*/</span>
</span><span id="line-768">
</span><span id="line-769"><span class="s1">var Rm = 3961; // mean radius of the earth (miles) at 39 degrees from the equator</span>
</span><span id="line-770"><span class="s1">var Rk = 6373; // mean radius of the earth (km) at 39 degrees from the equator</span>
</span><span id="line-771"><span class="s1"> </span>
</span><span id="line-772"><span class="s1">/* main function */</span>
</span><span id="line-773"><span class="s1">function findDistance(inlat1, inlon1, inlat2, inlon2) {</span>
</span><span id="line-774"><span class="s1"> var t1, n1, t2, n2, lat1, lon1, lat2, lon2, dlat, dlon, a, c, dm, dk, mi, km;</span>
</span><span id="line-775"><span class="s1"> </span>
</span><span id="line-776"><span class="s1"> // get values for lat1, lon1, lat2, and lon2</span>
</span><span id="line-777"><span class="s1"> t1 = inlat1;</span>
</span><span id="line-778"><span class="s1"> n1 = inlon1;</span>
</span><span id="line-779"><span class="s1"> t2 = inlat2;</span>
</span><span id="line-780"><span class="s1"> n2 = inlon2;</span>
</span><span id="line-781"><span class="s1"> </span>
</span><span id="line-782"><span class="s1"> // convert coordinates to radians</span>
</span><span id="line-783"><span class="s1"> lat1 = deg2rad(t1);</span>
</span><span id="line-784"><span class="s1"> lon1 = deg2rad(n1);</span>
</span><span id="line-785"><span class="s1"> lat2 = deg2rad(t2);</span>
</span><span id="line-786"><span class="s1"> lon2 = deg2rad(n2);</span>
</span><span id="line-787"><span class="s1"> </span>
</span><span id="line-788"><span class="s1"> // find the differences between the coordinates</span>
</span><span id="line-789"><span class="s1"> dlat = lat2 - lat1;</span>
</span><span id="line-790"><span class="s1"> dlon = lon2 - lon1;</span>
</span><span id="line-791"><span class="s1"> </span>
</span><span id="line-792"><span class="s1"> // here'</span>s the heavy lifting
</span><span id="line-793">	<span class="nv">a</span>  <span class="o">=</span> Math.pow<span class="o">(</span>Math.sin<span class="o">(</span>dlat/2<span class="o">)</span>,2<span class="o">)</span> + Math.cos<span class="o">(</span>lat1<span class="o">)</span> * Math.cos<span class="o">(</span>lat2<span class="o">)</span> * Math.pow<span class="o">(</span>Math.sin<span class="o">(</span>dlon/2<span class="o">)</span>,2<span class="o">)</span><span class="p">;</span>
</span><span id="line-794">	<span class="nv">c</span>  <span class="o">=</span> <span class="m">2</span> * Math.atan2<span class="o">(</span>Math.sqrt<span class="o">(</span>a<span class="o">)</span>,Math.sqrt<span class="o">(</span>1-a<span class="o">))</span><span class="p">;</span> // great circle distance in radians
</span><span id="line-795">	<span class="nv">dm</span> <span class="o">=</span> c * Rm<span class="p">;</span> // great circle distance in miles
</span><span id="line-796">	<span class="nv">dk</span> <span class="o">=</span> c * Rk<span class="p">;</span> // great circle distance in km
</span><span id="line-797">	
</span><span id="line-798">	// round the results down to the nearest 1/1000
</span><span id="line-799">	<span class="nv">mi</span> <span class="o">=</span> round<span class="o">(</span>dm<span class="o">)</span><span class="p">;</span>
</span><span id="line-800">	<span class="nv">km</span> <span class="o">=</span> round<span class="o">(</span>dk<span class="o">)</span><span class="p">;</span>
</span><span id="line-801">	
</span><span id="line-802">	// We are only interested in miles.
</span><span id="line-803">	<span class="k">return</span> mi<span class="p">;</span>
</span><span id="line-804"><span class="o">}</span>
</span><span id="line-805">
</span><span id="line-806">// convert degrees to radians
</span><span id="line-807"><span class="k">function</span> deg2rad<span class="o">(</span>deg<span class="o">)</span> <span class="o">{</span>
</span><span id="line-808">	var <span class="nv">rad</span> <span class="o">=</span> deg * Math.PI/180<span class="p">;</span> // <span class="nv">radians</span> <span class="o">=</span> degrees * pi/180
</span><span id="line-809">	<span class="k">return</span> rad<span class="p">;</span>
</span><span id="line-810"><span class="o">}</span>
</span><span id="line-811">
</span><span id="line-812">// round to the nearest 1/1000
</span><span id="line-813"><span class="k">function</span> round<span class="o">(</span>x<span class="o">)</span> <span class="o">{</span>
</span><span id="line-814">	<span class="k">return</span> Math.round<span class="o">(</span> x * 1000<span class="o">)</span> / 1000<span class="p">;</span>
</span><span id="line-815"><span class="o">}</span>
</span></pre>
               </div>
              </div>
             </div>
             <div class="preview-pane" id="code-widget-123116">
              <div class="preview-header">
               <div class="clearfix">
                <h5>resources.js<small>JavaScript</small></h5>
                <div class="buttons btn-group btn-group-default">
                 <button class="btn btn-primary btn-xs copy-code istooltip" data-container="body" data-trigger="hover" title="Copy the code"><i class="fa fa-clipboard"></i></button>
                 <a class="btn btn-primary btn-xs" data-container="body" href="/code_files/123116/download" rel="tooltip" title="Download"><i class="fa fa-cloud-download"></i></a>
                </div>
               </div>
               <div class="comment">
                This file contains latitude and longitude coordinates for every US and UK postcode. These objects are required by the index.js file in order to determine the nearest METAR station using the postcode given by the Alexa Skills Kit.
                <br>
                <br>Data Sources: 
                <br>UK Post Codes: National Statistics Postcode Lookup UK
                <br>Contains public sector information licensed under the Open Government License v3.0.
                <br>
                <br>US Zip Codes: US Census Bureau (2016)
                <br>
                <br>Note: this file can be downloaded from https://s3.amazonaws.com/originalcloud/resources.js
                <br>The file had too many lines to upload to hackster without crashing the browser.
               </div>
              </div>
              <div class="preview-body pygments-syntax all">
               <div class="highlight">
                <pre><span id="line-1">/*
</span><span id="line-2">This file has too many lines to upload to the hackster project. <span class="o">(</span>I crashed my browser...<span class="o">)</span> You can download the full file at:
</span><span id="line-3">https://s3.amazonaws.com/originalcloud/resources.js
</span><span id="line-4">*/
</span></pre>
               </div>
              </div>
             </div>
             <div class="preview-pane" id="code-widget-123136">
              <div class="preview-header">
               <div class="clearfix">
                <h5>Intent Schema<small>JSON</small></h5>
                <div class="buttons btn-group btn-group-default">
                 <button class="btn btn-primary btn-xs copy-code istooltip" data-container="body" data-trigger="hover" title="Copy the code"><i class="fa fa-clipboard"></i></button>
                 <a class="btn btn-primary btn-xs" data-container="body" href="/code_files/123136/download" rel="tooltip" title="Download"><i class="fa fa-cloud-download"></i></a>
                </div>
               </div>
               <div class="comment">
                This is the intent schema for the Alexa Skills Kit. It should be put into the Interaction Model tab of your Alexa Skills Kit project in the Amazon Developer Console.
               </div>
              </div>
              <div class="preview-body pygments-syntax all">
               <div class="highlight">
                <pre><span id="line-1"><span class="p">{</span>
</span><span id="line-2">  <span class="nt">"intents"</span><span class="p">:</span> <span class="p">[</span>
</span><span id="line-3">    <span class="p">{</span>
</span><span id="line-4">      <span class="nt">"intent"</span><span class="p">:</span> <span class="s2">"AMAZON.CancelIntent"</span>
</span><span id="line-5">    <span class="p">},</span>
</span><span id="line-6">    <span class="p">{</span>
</span><span id="line-7">      <span class="nt">"intent"</span><span class="p">:</span> <span class="s2">"AMAZON.HelpIntent"</span>
</span><span id="line-8">    <span class="p">},</span>
</span><span id="line-9">    <span class="p">{</span>
</span><span id="line-10">      <span class="nt">"intent"</span><span class="p">:</span> <span class="s2">"AMAZON.StopIntent"</span>
</span><span id="line-11">    <span class="p">},</span>
</span><span id="line-12">    <span class="p">{</span>
</span><span id="line-13">      <span class="nt">"intent"</span><span class="p">:</span> <span class="s2">"GetCloudIntent"</span>
</span><span id="line-14">    <span class="p">}</span>
</span><span id="line-15">  <span class="p">]</span>
</span><span id="line-16"><span class="p">}</span>
</span></pre>
               </div>
              </div>
             </div>
             <div class="preview-pane" id="code-widget-123137">
              <div class="preview-header">
               <div class="clearfix">
                <h5>Utterances<small>JSON</small></h5>
                <div class="buttons btn-group btn-group-default">
                 <button class="btn btn-primary btn-xs copy-code istooltip" data-container="body" data-trigger="hover" title="Copy the code"><i class="fa fa-clipboard"></i></button>
                 <a class="btn btn-primary btn-xs" data-container="body" href="/code_files/123137/download" rel="tooltip" title="Download"><i class="fa fa-cloud-download"></i></a>
                </div>
               </div>
               <div class="comment">
                These are the utterances, which are possible phrases a user can say to initiate the GetCloudIntent intent in the Alexa Skills Kit. It should be put in the Utterances Section of the Interaction Model Tab of your Alexa Skills Kit Project in the Amazon Developer Console.
               </div>
              </div>
              <div class="preview-body pygments-syntax all">
               <div class="highlight">
                <pre><span id="line-1"><span class="err">GetCloudIntent</span> <span class="err">whats</span> <span class="err">the</span> <span class="err">deal</span> <span class="err">with</span> <span class="err">the</span> <span class="err">clouds</span> <span class="err">right</span> <span class="err">now</span>
</span><span id="line-2"><span class="err">GetCloudIntent</span> <span class="err">to</span> <span class="err">get</span> <span class="err">me</span> <span class="err">cloud</span> <span class="err">info</span>
</span><span id="line-3"><span class="err">GetCloudIntent</span> <span class="err">cloud</span> <span class="err">info</span>
</span><span id="line-4"><span class="err">GetCloudIntent</span> <span class="err">get</span> <span class="err">me</span> <span class="err">cloud</span> <span class="err">info</span>
</span><span id="line-5"><span class="err">GetCloudIntent</span> <span class="err">how</span> <span class="err">high</span> <span class="err">are</span> <span class="err">the</span> <span class="err">clouds</span>
</span><span id="line-6"><span class="err">GetCloudIntent</span> <span class="err">clouds</span>
</span><span id="line-7"><span class="err">GetCloudIntent</span> <span class="err">whats</span> <span class="err">the</span> <span class="err">cloud</span> <span class="err">coverage</span>
</span><span id="line-8"><span class="err">GetCloudIntent</span> <span class="err">whats</span> <span class="err">up</span> <span class="err">with</span> <span class="err">the</span> <span class="err">clouds</span>
</span><span id="line-9"><span class="err">GetCloudIntent</span> <span class="err">how</span> <span class="err">high</span> <span class="err">are</span> <span class="err">the</span> <span class="err">clouds</span> <span class="err">today</span>
</span><span id="line-10"><span class="err">GetCloudIntent</span> <span class="err">how</span> <span class="err">high</span> <span class="err">the</span> <span class="err">clouds</span> <span class="err">are</span>
</span><span id="line-11"><span class="err">GetCloudIntent</span> <span class="err">for</span> <span class="err">cloud</span> <span class="err">info</span>
</span><span id="line-12"><span class="err">GetCloudIntent</span> <span class="err">cloud</span> <span class="err">height</span>
</span><span id="line-13"><span class="err">GetCloudIntent</span> <span class="err">for</span> <span class="err">cloud</span> <span class="err">height</span>
</span><span id="line-14"><span class="err">GetCloudIntent</span> <span class="err">cloud</span> <span class="err">cover</span>
</span><span id="line-15"><span class="err">GetCloudIntent</span> <span class="err">for</span> <span class="err">cloud</span> <span class="err">cover</span>
</span><span id="line-16"><span class="err">GetCloudIntent</span> <span class="err">for</span> <span class="err">the</span> <span class="err">cloud</span> <span class="err">cover</span>
</span><span id="line-17"><span class="err">GetCloudIntent</span> <span class="err">for</span> <span class="err">the</span> <span class="err">cloud</span> <span class="err">height</span>
</span><span id="line-18"><span class="err">GetCloudIntent</span> <span class="err">for</span> <span class="err">the</span> <span class="err">cloud</span> <span class="err">info</span>
</span><span id="line-19"><span class="err">GetCloudIntent</span> <span class="err">where</span> <span class="err">are</span> <span class="err">the</span> <span class="err">clouds</span>
</span><span id="line-20"><span class="err">GetCloudIntent</span> <span class="err">how</span> <span class="err">far</span> <span class="err">away</span> <span class="err">are</span> <span class="err">the</span> <span class="err">clouds</span>
</span><span id="line-21"><span class="err">GetCloudIntent</span> <span class="err">how</span> <span class="err">far</span> <span class="err">are</span> <span class="err">the</span> <span class="err">clouds</span>
</span><span id="line-22"><span class="err">GetCloudIntent</span> <span class="err">how</span> <span class="err">far</span> <span class="err">are</span> <span class="err">clouds</span>
</span><span id="line-23"><span class="err">GetCloudIntent</span> <span class="err">how</span> <span class="err">thick</span> <span class="err">are</span> <span class="err">the</span> <span class="err">clouds</span>
</span><span id="line-24"><span class="err">GetCloudIntent</span> <span class="err">how</span> <span class="err">thick</span> <span class="err">are</span> <span class="err">clouds</span>
</span><span id="line-25"><span class="err">GetCloudIntent</span> <span class="err">what</span> <span class="err">the</span> <span class="err">cloud</span> <span class="err">height</span> <span class="err">is</span>
</span><span id="line-26"><span class="err">GetCloudIntent</span> <span class="err">what's</span> <span class="err">the</span> <span class="err">cloud</span> <span class="err">height</span>
</span><span id="line-27"><span class="err">GetCloudIntent</span> <span class="err">what's</span> <span class="err">the</span> <span class="err">altitude</span> <span class="err">of</span> <span class="err">the</span> <span class="err">clouds</span>
</span><span id="line-28"><span class="err">GetCloudIntent</span> <span class="err">what's</span> <span class="err">the</span> <span class="err">cloud</span> <span class="err">altitude</span>
</span><span id="line-29"><span class="err">GetCloudIntent</span> <span class="err">what</span> <span class="err">altitude</span> <span class="err">are</span> <span class="err">the</span> <span class="err">clouds</span>
</span><span id="line-30"><span class="err">GetCloudIntent</span> <span class="err">cloud</span> <span class="err">altitude</span>
</span><span id="line-31"><span class="err">GetCloudIntent</span> <span class="err">altitude</span>
</span><span id="line-32"><span class="err">GetCloudIntent</span> <span class="err">height</span>
</span></pre>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </section>
         <section class="section-container" id="team">
          <h2 class="section-title"><a class="title-anchor" href="#team"><i class="fa fa-link"></i></a><span class="title">Credits</span></h2>
          <div class="section-content">
           <div class="member-thumb media">
            <div class="media-left">
             <a href="/TommyDeveloper"><img class="img-circle media-object" src="https://hackster.imgix.net/uploads/attachments/318009/2932025.jpeg?auto=compress%2Cformat&amp;w=60&amp;h=60&amp;fit=min" alt="2932025"></a>
            </div>
            <div class="member-thumb-body media-body">
             <h5 class="media-heading"><a href="/TommyDeveloper">Tommy</a> <small><i class="fa fa-info-circle ispopover" data-container="body" data-content="Programming" data-placement="top" data-title="Contribution" data-trigger="hover"></i></small></h5>
             <div class="member-actions">
              <div data-react-class="UserRelationButton" data-react-props="{&quot;id&quot;:221287,&quot;type&quot;:&quot;followed_user&quot;}" style="display:inline-block;vertical-align:bottom;">
               <button class="buttons__button___lYBnk
          buttons__joinChannel___3L37k buttons__button___lYBnk" disabled type="button" data-reactroot="" data-reactid="1" data-react-checksum="1147813611">Follow</button>
              </div>
              <a class="btn btn-link btn-sm reactPortal" action="SigninDialog" data-redirect-to="/messages/new?recipient_id=221287" data-source="user_contact" data-react="{&quot;currentPanel&quot;:&quot;signup&quot;,&quot;simplified&quot;:true}" href="/users/sign_up?redirect_to=%2Fmessages%2Fnew%3Frecipient_id%3D221287&amp;source=user_contact">Contact</a>
             </div>
            </div>
           </div>
           <div class="member-thumb media">
            <div class="media-left">
             <a href="/phonedeveloper"><img class="img-circle media-object" src="https://gravatar.com/avatar/dc8a37459ed1242b840b7ee522f0c281.png?d=retro&amp;s=60" alt="Dc8a37459ed1242b840b7ee522f0c281"></a>
            </div>
            <div class="member-thumb-body media-body">
             <h5 class="media-heading"><a href="/phonedeveloper">Sean</a> <small><i class="fa fa-info-circle ispopover" data-container="body" data-content="Programming and Ideas" data-placement="top" data-title="Contribution" data-trigger="hover"></i></small></h5>
             <p>I like coding and road trips and building stuff.</p>
             <div class="member-actions">
              <div data-react-class="UserRelationButton" data-react-props="{&quot;id&quot;:221846,&quot;type&quot;:&quot;followed_user&quot;}" style="display:inline-block;vertical-align:bottom;">
               <button class="buttons__button___lYBnk
          buttons__joinChannel___3L37k buttons__button___lYBnk" disabled type="button" data-reactroot="" data-reactid="1" data-react-checksum="1147813611">Follow</button>
              </div>
              <a class="btn btn-link btn-sm reactPortal" action="SigninDialog" data-redirect-to="/messages/new?recipient_id=221846" data-source="user_contact" data-react="{&quot;currentPanel&quot;:&quot;signup&quot;,&quot;simplified&quot;:true}" href="/users/sign_up?redirect_to=%2Fmessages%2Fnew%3Frecipient_id%3D221846&amp;source=user_contact">Contact</a>
             </div>
            </div>
           </div>
          </div>
         </section>
         <section class="section-container" id="replicas">
          <h2 class="section-title"><a class="title-anchor" href="#replicas"><i class="fa fa-link"></i></a><span class="title">Replications</span></h2>
          <div class="section-content">
           <p>Did you replicate this project? Share it!</p>
           <a class="btn btn-primary btn-sm show-replica-form" href="javascript:void(0)"><i class="fa fa-retweet"></i><span>I made one</span></a>
          </div>
         </section>
         <section class="section-container project-feedback-form">
          <div class="section-content">
           <div class="alert alert-info">
            <p>Love this project? Think it could be improved? Tell us what you think!</p>
            <p><a class="btn btn-secondary btn-sm show-feedback-form project-feedback-form" href="javascript:void(0)"><i class="fa fa-pencil-square-o"></i><span>Give feedback</span></a></p>
           </div>
          </div>
         </section>
         <section class="section-container" id="comments">
          <h2 class="section-title"><a class="title-anchor" href="#comments"><i class="fa fa-link"></i></a><span class="title title-toggle">Comments </span></h2>
          <div class="section-content">
           <div class="comments">
            <div class="user-signed-out" style="display:none">
             <p class="sign-up-to-comment">Please <a href="/users/sign_in?id=45421&amp;m=base_article&amp;reason=comment&amp;redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656%23comments">log in</a> or <a href="/users/sign_up?id=45421&amp;m=base_article&amp;reason=comment&amp;redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656%23comments&amp;source=popup">sign up</a> to comment.</p>
            </div>
            <div data-react-class="Comments" data-react-props="{&quot;commentable&quot;:{&quot;id&quot;:&quot;30d656&quot;,&quot;type&quot;:&quot;projects&quot;},&quot;placeholder&quot;:&quot;Share your thoughts! What do you like about this project? How could it be improved? Be respectful and constructive – most Hackster members create and share personal projects in their free time.&quot;,&quot;cacheVersion&quot;:null}"></div>
           </div>
          </div>
         </section>
        </div>
        <div class="col-md-4 right-column">
         <section class="section-thumbs hidden-xs hidden-sm">
          <div class="affixable" data-top="20" id="project-side-nav" style="top:20px">
           <div class="section-container" id="scroll-nav">
            <ul class="nav">
             <li class="active"><a class="smooth-scroll" data-offset="-40" href="#home">Cloud Height - Get Cloud Info Using Alexa and a METAR API</a></li>
             <li><a class="smooth-scroll" href="#things">Things</a></li>
             <li><a class="smooth-scroll" href="#about-project">Story</a></li>
             <li><a class="smooth-scroll" href="#schematics">Schematics</a></li>
             <li><a class="smooth-scroll" href="#code">Code</a></li>
             <li><a class="smooth-scroll" href="#team">Credits</a></li>
             <li><a class="smooth-scroll" href="#comments">Comments<span class="nav-count">(0)</span></a></li>
            </ul>
           </div>
           <div class="show-on-affix" id="scrolling-actions" style="margin-top:15px;">
            <span data-react-class="ProjectRespectButton" data-react-props="{&quot;projectId&quot;:45421,&quot;redirect_to&quot;:&quot;/articles/30d656/respects/create&quot;}"><button class="buttons__button___lYBnk
          project_respect_button__button___1LWAT" disabled type="button" data-reactroot="" data-reactid="1" data-react-checksum="-590847590"><span data-reactid="2"><i class="fa fa-thumbs-o-up" data-reactid="3"></i><span data-reactid="4">Respect project</span></span></button></span>
            <a class="btn btn-primary btn-sm reactPortal" action="SigninDialog" data-container="body" data-redirect-to="/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656" data-source="replica" data-react="{&quot;currentPanel&quot;:&quot;signup&quot;,&quot;simplified&quot;:true}" href="/users/sign_up?id=45421&amp;m=base_article&amp;reason=replica&amp;redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656"><i class="fa fa-retweet"></i><span class="sr-only">I made one</span></a>
            <a class="btn btn-sm btn-secondary reactPortal" action="SigninDialog" data-container="body" data-redirect-to="/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656" data-source="project_page_bookmark" data-react="{&quot;currentPanel&quot;:&quot;signup&quot;,&quot;simplified&quot;:true}" href="/users/sign_in?redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&amp;source=project_page_bookmark"><i class="fa fa-bookmark-o"></i></a>
            <a class="btn btn-secondary btn-sm" data-container="body" data-content="<div class='sharing-actions'><ul><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=facebook&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-facebook'></i><span>Share on Facebook</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=googleplus&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-google-plus-official'></i><span>Share on Google+</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=linkedin&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-linkedin'></i><span>Share on LinkedIn</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=pinterest&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-pinterest'></i><span>Share on Pinterest</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=reddit&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-reddit'></i><span>Share on Reddit</span></a></li><li><a class='social-share-link clearfix' data-url='https://www.hackster.io/social/share/link?service=twitter&amp;amp;sharable_id=45421&amp;amp;sharable_type=BaseArticle&amp;amp;target_host=www.hackster.io' href=''><i class='fa fa-twitter'></i><span>Share on Twitter</span></a></li><li><a data-target='#embed-popup' class='modal-open' href='javascript:void(0)'><i class='fa fa-code'></i><span>Embed</span></a></li></ul></div>" data-html="true" data-placement="bottom" data-toggle="popover" data-trigger="click"><i class="fa fa-share-square-o"></i></a>
            <a class="btn btn-secondary btn-sm show-feedback-form project-feedback-form" href="javascript:void(0)"><i class="fa fa-pencil-square-o"></i><span class="sr-only">Give feedback</span></a>
           </div>
          </div>
         </section>
        </div>
       </div>
      </div>
     </section>
    </div>
   </div>
  </div>
  <footer>
   <div class="footer-nav">
    <div class="container clearfix">
     <ul class="list-unstyled pull-left">
      <li><h3>More cool stuff</h3></li>
      <li><a title="Community members" href="/community">Community members</a></li>
      <li><a title="Other community hubs" href="/channels/communities">Other community hubs</a></li>
      <li><a title="Free Store" href="/store">Free Store</a></li>
      <li><a title="Hardware Weekend" href="/hardwareweekend">Hardware Weekend</a></li>
      <li><a title="Hacker Spaces" href="/hackerspaces">Hacker spaces</a></li>
     </ul>
     <ul class="list-unstyled pull-left">
      <li><h3>Legal thingies</h3></li>
      <li><a title="Terms of Service" href="/terms">Terms of Service</a></li>
      <li><a title="Code of Conduct" href="/conduct">Code of Conduct</a></li>
      <li><a title="Privacy Policy" href="/privacy">Privacy Policy</a></li>
     </ul>
     <ul class="list-unstyled pull-left">
      <li><h3>About us</h3></li>
      <li><a title="Hackster's story" href="/about">Hackster's story</a></li>
      <li><a title="Our kickass blog" href="https://blog.hackster.io">Our kickass blog</a></li>
      <li><a title="Our 2016 Maker Survey" href="/survey">Our 2016 Maker Survey</a></li>
      <li><a title="Hackster for Business" href="/business">Hackster for Business</a></li>
      <li><a target="_blank" title="Support Center" href="http://help.hackster.io">Support Center</a></li>
      <li><a title="Developer API" href="https://hacksterio.api-docs.io/2.0">Developer API</a></li>
      <li><a title="Sitemap" href="/sitemap.xml.html">Sitemap</a></li>
     </ul>
     <ul class="list-unstyled pull-left">
      <li><h3>We're fairly social people</h3></li>
      <li><a title="Hackster.io on Facebook" href="https://www.facebook.com/hacksterio"><i class="fa fa-facebook"></i><span>Facebook</span></a></li>
      <li><a title="Hackster.io on Instagram" href="https://www.instagram.com/hacksterio"><i class="fa fa-instagram"></i><span>Instagram</span></a></li>
      <li><a title="Hackster.io on Twitter" href="https://www.twitter.com/hacksterio"><i class="fa fa-twitter"></i><span>Twitter</span></a></li>
      <li><a title="Hackster.io on YouTube" href="https://www.youtube.com/hacksterio"><i class="fa fa-youtube"></i><span>YouTube</span></a></li>
      <li><script async defer src="https://apis.google.com/js/platform.js"></script>
       <g:plusone size="medium"></g:plusone></li>
     </ul>
     <ul class="list-unstyled list-inline pull-right">
      <li>Hackster.io 2017</li>
     </ul>
    </div>
   </div>
  </footer>
  <div class="hide-on-desktop" id="mobile-nav-overlay">
   <div class="fa fa-times" id="mobile-nav-overlay-close"></div>
  </div>
  <div class="hide-on-desktop" id="mobile-navigation">
   <a class="mo-nav-link" href="/users/sign_up?pre_signup_page_type=projects%23show&amp;pre_signup_title=Cloud+Height+-+Get+Cloud+Info+Using+Alexa+and+a+METAR+API+-+Hackster.io&amp;pre_signup_url=https%3A%2F%2Fwww.hackster.io%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&amp;redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&amp;source=nav_mobile">Sign up / Login</a>
   <a class="mo-nav-link" title="Projects" href="/projects?ref=topnav">Projects</a>
   <a class="mo-nav-link" title="Platforms" href="/platforms">Platforms</a>
   <a class="mo-nav-link" title="Topics" href="/channels/topics">Topics</a>
   <a class="mo-nav-link" title="Contests" href="/contests">Contests</a>
   <a class="mo-nav-link" title="Live" href="/live">Live</a>
   <a class="mo-nav-link" title="Live" href="/apps"><span>Apps</span><span class="label-beta">Beta</span></a>
   <a class="mo-nav-link" title="Free Store" href="/store">Free Store</a>
   <a class="mo-nav-link" title="Blog" href="https://blog.hackster.io">Blog</a>
  </div>
  <script src="/assets/bundles/manifest.d41d8cd98f00b204e980.js"></script>
  <script src="/assets/bundles/vendor.4cb2bcc35960c8563bf4.js"></script>
  <script src="/assets/bundles/client_bundle.b08e3c906e47ac76e9ee.js"></script>
  <script src="/assets/application-d2ddc72d4f38aacd20ae2c8c9d0f723022deba62e375f53d60f7bd96ad3095df.js"></script>
  <script type="text/javascript">
      (function(){
        var request = new XMLHttpRequest();
        request.open('POST', 'https://api.hackster.io/private/stats', true);
        request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
        request.withCredentials = true;
        var data = {
          referrer: (document.referrer || document.origin),
      
          id: '45421',
          type: 'BaseArticle',
      
          a: 'show',
          c: 'projects'
        };
        var params = Object.keys(data).map(function(key) { return [key, encodeURIComponent(data[key])].join('='); }).join('&');
        request.send(params);
      })();
    </script>
  <script>$(function(){ fetchHelloWorld(); });</script>
  <div data-react-class="SigninDialog" data-react-props="{&quot;source&quot;:&quot;signup_popup&quot;,&quot;redirect_to&quot;:&quot;/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&quot;,&quot;omniauth_urls&quot;:{&quot;facebook&quot;:&quot;https://www.hackster.io/users/auth/facebook?login_locale=en\u0026pre_signup_page_type=projects%23show\u0026pre_signup_title=Cloud+Height+-+Get+Cloud+Info+Using+Alexa+and+a+METAR+API+-+Hackster.io\u0026pre_signup_url=https%3A%2F%2Fwww.hackster.io%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026setup=true&quot;,&quot;github&quot;:&quot;https://www.hackster.io/users/auth/github?login_locale=en\u0026pre_signup_page_type=projects%23show\u0026pre_signup_title=Cloud+Height+-+Get+Cloud+Info+Using+Alexa+and+a+METAR+API+-+Hackster.io\u0026pre_signup_url=https%3A%2F%2Fwww.hackster.io%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026setup=true&quot;,&quot;gplus&quot;:&quot;https://www.hackster.io/users/auth/gplus?login_locale=en\u0026pre_signup_page_type=projects%23show\u0026pre_signup_title=Cloud+Height+-+Get+Cloud+Info+Using+Alexa+and+a+METAR+API+-+Hackster.io\u0026pre_signup_url=https%3A%2F%2Fwww.hackster.io%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026setup=true&quot;,&quot;twitter&quot;:&quot;https://www.hackster.io/users/auth/twitter?login_locale=en\u0026pre_signup_page_type=projects%23show\u0026pre_signup_title=Cloud+Height+-+Get+Cloud+Info+Using+Alexa+and+a+METAR+API+-+Hackster.io\u0026pre_signup_url=https%3A%2F%2Fwww.hackster.io%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026setup=true&quot;,&quot;windowslive&quot;:&quot;https://www.hackster.io/users/auth/windowslive?login_locale=en\u0026pre_signup_page_type=projects%23show\u0026pre_signup_title=Cloud+Height+-+Get+Cloud+Info+Using+Alexa+and+a+METAR+API+-+Hackster.io\u0026pre_signup_url=https%3A%2F%2Fwww.hackster.io%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656\u0026setup=true&quot;},&quot;signup_action&quot;:&quot;/users?redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&quot;,&quot;signin_action&quot;:&quot;/users/sign_in?redirect_to=%2Foriginal-cloud%2Fcloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&quot;,&quot;openEvent&quot;:&quot;open:SigninDialog&quot;,&quot;forgot_password_link&quot;:&quot;/users/password/new&quot;,&quot;simplified_signup_action&quot;:&quot;/users/simplified_registrations&quot;,&quot;pre_signup_url&quot;:&quot;https://www.hackster.io/original-cloud/cloud-height-get-cloud-info-using-alexa-and-a-metar-api-30d656&quot;,&quot;pre_signup_title&quot;:&quot;Cloud Height - Get Cloud Info Using Alexa and a METAR API - Hackster.io&quot;,&quot;pre_signup_page_type&quot;:&quot;projects#show&quot;}"></div>
  <div data-react-class="GlobalDialog" data-react-props="{}"></div>
  <div data-react-class="GlobalPopover" data-react-props="{}"></div>
  <script>$(function(){
  var s = "<span class='stat-figure' itemprop='userInteractionCount'>157</span>";
  $('.impression-stats .stat-figure').replaceWith(s);
  s = "<span class='stat-figure' itemprop='userInteractionCount'>2</span>";
  $('.respect-stats .stat-figure').replaceWith(s);
});</script>
  <script>$('.project-feedback-form').show();</script>
  <div data-react-class="FeedbackForm" data-react-props="{&quot;project&quot;:{&quot;id&quot;:45421},&quot;openEvent&quot;:&quot;open:feedbackForm&quot;,&quot;siteName&quot;:&quot;Hackster.io&quot;}"></div>
 </body>
</html>