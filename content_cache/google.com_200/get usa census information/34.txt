<!doctype html>
<html>
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="chrome=1"> 
  <title>CitySDK - US Census Bureau</title> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <link rel="canonical" href="https://uscensusbureau.github.io/citysdk/developers/usingMultipleModules/"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <!-- Analytics --> 
  <script src="//assets.adobedtm.com/526d5084b7f8f688ea81a3aba09755d76a81f8e8/satelliteLib-efa1f454767b70cac533534648d40cb51e82fbe0.js"></script> 
  <!-- Analytics End --> 
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script> 
  <script type="text/javascript" src="/citysdk/static/js/bootstrap.min.js"></script> 
  <script src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script> 
  <script src="/citysdk/static/js/FileSaver.min.js"></script> 
  <script src="/citysdk/static/js/Blob.js"></script> 
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.min.js"></script> 
  <script src="https://cdn-geoweb.s3.amazonaws.com/terraformer/1.0.5/terraformer.min.js"></script> 
  <script src="https://cdn-geoweb.s3.amazonaws.com/terraformer-arcgis-parser/1.0.4/terraformer-arcgis-parser.min.js"></script> 
  <!-- New citysdk --> 
  <script src="/citysdk/static/js/citysdk/core/citysdk.js"></script> 
  <script src="/citysdk/static/js/citysdk/modules/census.citysdk.js"></script> 
  <!-- CitySDK with all Modules --> 
  <!-- Note: You do NOT need to implement all of these. We have all present in our demo/example environment but you only need the core module and specific data modules --> 
  <script src="/citysdk/static/js/citysdk/citysdk.js"></script> 
  <!-- <script src="/citysdk/static/js/citysdk/citysdk.census.js"></script> --> 
  <script src="/citysdk/static/js/citysdk/citysdk.fema.js"></script> 
  <script src="/citysdk/static/js/citysdk/citysdk.farmersMarket.js"></script> 
  <script src="/citysdk/static/js/citysdk/citysdk.eia.js"></script> 
  <script src="/citysdk/static/js/citysdk/citysdk.socrata.js"></script> 
  <script src="/citysdk/static/js/citysdk/citysdk.ckan.js"></script> 
  <script src="/citysdk/static/js/citysdk/citysdk.arcgis.js"></script> 
  <!-- CitySDK with all Modules --> 
  <!-- configuration data for demo pages --> 
  <script src="/citysdk/static/js/demo_configuration.js"></script> 
  <script src="/citysdk/static/js/citysdk-demo-site.js"></script> 
  <!--[if lt IE 9]>
<script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
<script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>

<![endif]--> 
  <link href="/citysdk/static/css/bootstrap.min.css" rel="stylesheet"> 
  <link rel="stylesheet" href="/citysdk/static/font-awesome/css/font-awesome.min.css"> 
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css"> 
  <link rel="stylesheet" href="/citysdk/static/css/c3.min.css"> 
  <link rel="stylesheet" href="/citysdk/static/css/style.css"> 
  <!--[if IE]>
<link rel="stylesheet" href="/citysdk/static/css/for-ie-only.css">
<![endif]--> 
 </head> 
 <body class="pages-developers"> 
  <div class="disclaimer"> 
   <div class="usa-grid">
    <span class="usa-disclaimer-official"><img alt="US flag signifying that this is a United States Federal Government website" src="/citysdk/static/img/us_flag_small.png" class="usa-flag_icon">An unofficial website of the United States Government</span>
    <span class="usa-disclaimer-stage">This site is currently in beta.<a href="https://18f.gsa.gov/dashboard/stages/#beta" target="_blank">Learn More.</a></span>
   </div> 
  </div> 
  <nav class="app-nav"> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12"> 
      <div class="sdk-logo">
       <a href="/citysdk/"><img src="/citysdk/static/img/citysdk-logo-notext.png"></a>
      </div> 
      <div class="logo"> 
       <div class="top">
        <a href="/citysdk/"> <h1 class="logotype">CITYSDK</h1></a> 
        <div class="beta">
         Beta
        </div> 
       </div> 
       <div class="bottom data-service">
        <span style="color: #fff;">Commerce Data Service</span>
       </div> 
      </div> 
     </div> 
     <div class="app-links col-lg-6 col-md-6 col-sm-12 col-xs-12"> 
      <ul class="row"> 
       <li class="col-xs-3"> 
        <div class="dropdown"> 
         <button class="btn" type="button"><a href="/citysdk/about">About</a></button> 
        </div> </li> 
       <li class="col-xs-3"> 
        <div class="dropdown"> 
         <button class="btn dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> Developers <span class="caret"></span> </button> 
         <ul class="dropdown-menu" aria-labelledby="dropdownMenu1"> 
          <li> <a href="/citysdk/developers/gettingstarted">Getting Started</a> </li> 
          <li> <a href="/citysdk/developers/queryBuilder">Interactive Query Builder</a> </li> 
          <li> <a href="/citysdk/developers/aliases">Census Module Alias &amp; Variable List</a> </li> 
          <li> <a href="/citysdk/developers/commonRequests">Census Module Common Requests</a> </li> 
          <li> <a href="/citysdk/developers/usingMultipleModules">Using Multiple Modules</a> </li> 
         </ul> 
        </div> </li> 
       <li class="col-xs-3"> 
        <div class="dropdown"> 
         <button class="btn dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> Showcase <span class="caret"></span> </button> 
         <ul class="dropdown-menu" aria-labelledby="dropdownMenu2"> 
          <li><a href="/citysdk/examples-v2/#/income-and-population"> Maryland Income and Population with Mapbox GL </a></li> 
          <li><a href="/citysdk/examples/commuteQuery/"> Using Sublevels and Normalized Aliases </a></li> 
          <li><a href="/citysdk/examples/geoRequest/"> GeoRequests and Supplemental Requests </a></li> 
          <li><a href="/citysdk/examples/containerGeometry/"> GeoRequest with Arbitrary Boundaries </a></li> 
          <li><a href="/citysdk/examples/chicagoCAD/"> Chicago Crime and Demographics </a></li> 
          <li><a href="/citysdk/examples/farmersMarket/"> USDA Farmer's Markets </a></li> 
          <li><a href="/citysdk/examples/arcGisHUD/"> HUD's Opportunity Project Data via ArcGIS </a></li> 
         </ul> 
        </div> </li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </nav> 
  <script>
$('.dropdown-toggle').dropdown()
</script> 
  <div class="container"> 
   <section class="main-content"> 
    <div class="row"> 
     <div class="col-md-3 hidden-sm hidden-xs"> 
      <ul class="usa-sidenav-list"> 
       <li class="parent-item">Developers 
        <ul class="usa-sidenav-sub_list"> 
         <li> <a href="/citysdk/developers/gettingstarted">Getting Started</a> </li> 
         <li> <a href="/citysdk/developers/queryBuilder">Interactive Query Builder</a> </li> 
         <li> <a href="/citysdk/developers/aliases">Census Module Alias &amp; Variable List</a> </li> 
         <li> <a href="/citysdk/developers/commonRequests">Census Module Common Requests</a> </li> 
         <li> <a href="/citysdk/developers/usingMultipleModules">Using Multiple Modules</a> </li> 
        </ul> </li> 
       <li class="parent-item">Project Showcase 
        <ul class="usa-sidenav-sub_list"> 
         <li><a href="/citysdk/examples-v2/#/income-and-population"> Maryland Income and Population with Mapbox GL </a></li> 
         <li><a href="/citysdk/examples/commuteQuery/"> Using Sublevels and Normalized Aliases </a></li> 
         <li><a href="/citysdk/examples/geoRequest/"> GeoRequests and Supplemental Requests </a></li> 
         <li><a href="/citysdk/examples/containerGeometry/"> GeoRequest with Arbitrary Boundaries </a></li> 
         <li><a href="/citysdk/examples/chicagoCAD/"> Chicago Crime and Demographics </a></li> 
         <li><a href="/citysdk/examples/farmersMarket/"> USDA Farmer's Markets </a></li> 
         <li><a href="/citysdk/examples/arcGisHUD/"> HUD's Opportunity Project Data via ArcGIS </a></li> 
        </ul> </li> 
      </ul> 
     </div> 
     <div class="col-md-9 col-sm-12"> 
      <div class="row"> 
       <div class="col-md-12"> 
        <h2>Overview</h2> 
        <p>This page will guide you through creating an application that unifies data from multiple modules.</p> 
        <p>This application will allow users to click on any county in California and view Farmer's Markets in and near that county.</p> 
        <h2>Importing the Modules</h2> 
        <p>The first step to using multiple modules is importing them. We'll add import statements to our &lt;head&gt; tag for the CitySDK core, and each module. We'll also import code for our Google Map.</p> 
        <pre>
        &lt;head&gt;
            &lt;script type="text/javascript"
                    src="https://maps.googleapis.com/maps/api/js?v=3.exp&amp;libraries=visualization&amp;signed_in=true"&gt;
            &lt;/script&gt;

            &lt;script src="jquery.js"&gt;&lt;/script&gt;
            &lt;script src="js/citysdk.js"&gt;&lt;/script&gt;
            &lt;script src="js/citysdk.census.js"&gt;&lt;/script&gt;
            &lt;script src="js/citysdk.farmersMarket.js"&gt;&lt;/script&gt;
        &lt;/head&gt;
        </pre> 
        <p>Everything is now imported and we can get started on our actual code.</p> 
       </div> 
      </div> 
      <div class="row"> 
       <div class="col-md-12"> 
        <h2>Instantiating the SDK, modules, and map</h2> 
        <p>Our first step is instantiating the SDK, modules and map. To do this, we'll first need to add the required map-canvas div to the body of our file.</p> 
        <pre>
            &lt;body&gt;
                &lt;div id="map-canvas" style="width: 200px; height: 200px"&gt;&lt;/div&gt;
            &lt;/body&gt;
        </pre> 
        <p>This div is used by Google Maps to insert the map. That's all we'll need to do to the HTML of the page. The rest of this application is done in JavaScript. We'll be putting it in a &lt;script&gt; tag in our page's &lt;head&gt;, but you could also place it in a JavaScript file.</p> 
        <p>First, let's create some global objects to hold our map and module references.</p> 
        <pre>
            var apiKey, map;

            var sdk = new CitySDK();
            var census = sdk.modules.census;
            var farmersMarket = sdk.modules.farmersMarket;

            //We won't need API keys for just Geography.
            census.enable("");
        </pre> 
        <p>Notice we're not asking for the API key here. The Census module only needs an API key if you are accessing ACS data; thus, since we're only getting geography, we can skip it.</p> 
        <p>Next, we'll initialize the map inside of a <em>$(document).ready()</em> function.</p> 
        <pre>
             $(document).ready(
                function() {
                    var mapOptions = {
                        center: { lat: 37, lng: -120},
                        zoom: 6
                    };
                    map = new google.maps.Map(document.getElementById('map-canvas'),
                            mapOptions);

                    map.data.setStyle({
                        fillColor: 'blue'
                    });

                }
             );
        </pre> 
        <p>Great! Now our application should be displaying a map of California.</p> 
       </div> 
      </div> 
      <div class="row"> 
       <div class="col-md-12"> 
        <h2>Grabbing the County Geographies</h2> 
        <p>Next up, we need to draw the boundaries for all of California's counties. We'll use the Census module to do this.</p> 
        <p>Just after the map's initialization inside of the <em>$(document).ready()</em> function, let's add a <em>GEORequest()</em> for all of California's counties.</p> 
        <pre>
                    var countyRequest = {
                        state: "CA",
                        level: "county",
                        sublevel: true,
                        container: "state"
                    };

                    census.GEORequest(countyRequest, function(response) {
                        map.data.addGeoJson(response);
                    });
        </pre> 
        <p>In our SDK call we create a callback that will draw all of the GeoJSON on our map. If we refresh our application, we should have a Google Map showing California and all of its counties' boundaries.</p> 
       </div> 
      </div> 
      <div class="row"> 
       <div class="col-md-12"> 
        <h2>Adding a pop-up</h2> 
        <p>To display our Farmer's Market data, we'll need to have a pop-up appear when user's click on a county. Let's add some code to handle this. We can place it directly after our county boundary loading code.</p> 
        <pre>
                var popup = new google.maps.InfoWindow();

                map.data.addListener('click', function(event) {
                    popup.setContent("Clicked!");
                    popup.setPosition(event.latLng);
                    popup.open(map);
                });
        </pre> 
        <p>If we refresh our application, we should be able to click on counties and get a popup. Of course, it doesn't show any information yet, but we'll handle that in the next section.</p> 
       </div> 
      </div> 
      <div class="row"> 
       <div class="col-md-12"> 
        <h3>Adding Farmer's Market Data</h3> 
        <p>Let's use the USDA's Farmer's Market module to populate our popup with data about each county's markets. We'll do this by grabbing the county's latitude and longitude from the GeoJSON and making the request to the USDA with those coordinates. In our callback, we'll put the data into the popup. Here's how we changed the onClick listener:</p> 
        <pre>
            map.data.addListener('click', function(event) {
                        var lat = event.feature.getProperty("CENTLAT");
                        var lng = event.feature.getProperty("CENTLON");
                        var name = event.feature.getProperty("NAME");

                        var request = {
                            "lat": lat,
                            "lng": lng
                        };

                        farmersMarket.search(request, function(response) {
                            var html = "&lt;h3&gt;" + name + "&lt;/h3&gt;&lt;br/&gt;";
                            html+= "&lt;ul&gt;";
                            response.results.forEach(function (market) {
                                html+= "&lt;li&gt;" + market.marketname + "&lt;/li&gt;";
                            });
                            html+= "&lt;/ul&gt;";

                            popup.setContent(html);
                            popup.setPosition(event.latLng);
                            popup.open(map);
                        });
                    });
        </pre> 
        <p>When a user clicks, we grab the center latitude and longitude from that county, as well as the county's name, and create a request object with that. We then issue a request to the Farmer's market module. In the callback, we construct an HTML list of Farmer's markets in that county, and place that HTML inside of the pop-up.</p> 
       </div> 
      </div> 
      <div class="row"> 
       <div class="col-md-12"> 
        <h3>The Completed Application</h3> 
        <p>Let's check out the finished product:</p> 
        <div id="map-canvas" style="width: 100%; height: 500px; position: relative; top: 1rem;"></div> 
        <br> 
        <p>And here's the full JavaScript source:</p> 
        <pre>
            &lt;script&gt;
                var apiKey, map;

                var sdk = new CitySDK();
                var census = sdk.modules.census;
                var farmersMarket = sdk.modules.farmersMarket;

                //We won't need API keys for just Geography.
                census.enable("");

                function clearMap() {
                    map.data.forEach(function(feature) {
                        map.data.remove(feature);
                    });
                };

                function runExample(id) {
                    clearMap();
                    var textarea = $('#' + id);

                    eval(textarea.val());
                };

                $(document).ready(
                        function() {
                            var mapOptions = {
                                center: { lat: 37, lng: -120},
                                zoom: 6
                            };
                            map = new google.maps.Map(document.getElementById('map-canvas'),
                                    mapOptions);

                            map.data.setStyle({
                                fillColor: 'blue'
                            });

                            //County boundary request
                            var countyRequest = {
                                state: "CA",
                                level: "county",
                                sublevel: true,
                                container: "state"
                            };

                            //Request the boundaries and attach them to the map
                            census.GEORequest(countyRequest, function(response) {
                                map.data.addGeoJson(response);
                            });

                            //Create a popup
                            var popup = new google.maps.InfoWindow();

                            //Attach a listener for when a user clicks on a boundary
                            map.data.addListener('click', function(event) {
                                var lat = event.feature.getProperty("CENTLAT");
                                var lng = event.feature.getProperty("CENTLON");
                                var name = event.feature.getProperty("NAME");

                                var request = {
                                    "lat": lat,
                                    "lng": lng
                                };

                                farmersMarket.search(request, function(response) {
                                    var html = "&lt;h3&gt;" + name + "&lt;/h3&gt;&lt;br/&gt;";
                                    html+= "&lt;ul&gt;";
                                    response.results.forEach(function (market) {
                                        html+= "&lt;li&gt;" + market.marketname + "&lt;/li&gt;";
                                    });
                                    html+= "&lt;/ul&gt;";

                                    popup.setContent(html);
                                    popup.setPosition(event.latLng);
                                    popup.open(map);
                                });
                            });
                        }
                );
            &lt;/script&gt;
        </pre> 
       </div> 
      </div> 
      <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&amp;libraries=visualization&amp;signed_in=true"></script> 
      <script>
    var apiKey, map;

    var sdk = new CitySDK();
    var census = sdk.modules.census;
    var farmersMarket = sdk.modules.farmersMarket;

    //We won't need API keys for just Geography.
    census.enable("");

    function clearMap() {
        map.data.forEach(function (feature) {
            map.data.remove(feature);
        });
    }
    ;

    function runExample(id) {
        clearMap();
        var textarea = $('#' + id);

        eval(textarea.val());
    }
    ;

    $(document).ready(
            function () {
                var mapOptions = {
                    center: {lat: 37, lng: -120},
                    zoom: 6
                };
                map = new google.maps.Map(document.getElementById('map-canvas'),
                        mapOptions);

                map.data.setStyle({
                    fillColor: 'blue'
                });

                //County boundary request
                var countyRequest = {
                    state: "CA",
                    level: "county",
                    sublevel: true,
                    container: "state"
                };

                //Request the boundaries and attach them to the map
                census.GEORequest(countyRequest, function (response) {
                    map.data.addGeoJson(response);
                });

                //Create a popup
                var popup = new google.maps.InfoWindow();

                //Attach a listener for when a user clicks on a boundary
                map.data.addListener('click', function (event) {
                    var lat = event.feature.getProperty("CENTLAT");
                    var lng = event.feature.getProperty("CENTLON");
                    var name = event.feature.getProperty("NAME");

                    var request = {
                        "lat": lat,
                        "lng": lng
                    };

                    farmersMarket.search(request, function (response) {
                        var html = "<h3>" + name + "</h3><br/>";
                        html += "<ul>";
                        response.results.forEach(function (market) {
                            html += "<li>" + market.marketname + "</li>";
                        });
                        html += "</ul>";

                        popup.setContent(html);
                        popup.setPosition(event.latLng);
                        popup.open(map);
                    });
                });
            }
    );
</script> 
     </div> 
    </div> 
   </section> 
  </div> 
  <footer class="app-footer"> 
   <div class="usa-grid"> 
    <div class="col"> 
     <div class="commerce-footer"> 
      <ul class="commerce-links"> 
       <li><a href="https://www.commerce.gov/dataservice/">Commerce Data Service</a></li> 
       <li><a href="https://www.commerce.gov/datausability/">Commerce Data Usability Project</a></li> 
       <li><a href="https://www.census.gov/developers/">Census Developers Portal</a></li> 
       <li><a href="https://midaas.commerce.gov/">MIDAAS</a></li> 
      </ul> 
     </div> 
    </div> 
    <div class="footer-info col"> 
     <div class="app-logo"> 
      <h1>CitySDK</h1> 
     </div> 
     <div class="links">
      <a href="https://github.com/CommerceDataService/citysdk"><i class="fa fa-github"></i>GitHub</a>
     </div> 
     <div class="footer-logos-container"> 
      <ul class="footer-logos"> 
       <li class="commerce"><a href="https://www.commerce.gov/"><img alt="Deptartment of Commerce Logo" src="/citysdk/static/img/logos/commerce-logo.png"></a></li> 
       <li class="census"><a href="http://www.census.gov"><img alt="Census Bureau Logo" src="/citysdk/static/img/logos/census-logo.png"></a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </footer> 
  <script type="text/javascript" src="/citysdk/static/js/expandables.js"></script> 
  <script type="text/javascript">_satellite.pageBottom();</script> 
  <script>
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r;
        i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date();
        a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
        a.async = 1;
        a.src = g;
        m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-63746114-1', 'auto');
    ga('send', 'pageview');

</script>   
 </body>
</html>