<!doctype html>
<!--[if IE 7]>
<html id="ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html id="ie8" lang="en-US">
<![endif]-->
<!--[if IE 9]>
<html id="ie9" lang="en-US">
<![endif]-->
<!--[if !(IE 7) | !(IE 8) | !(IE 9)  ]><!-->
<html lang="en-US">
 <!--<![endif]-->
 <head> 
  <meta charset="UTF-8"> 
  <title> » To Node.js Or Not To Node.js Haney Codes .NET</title> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="stylesheet" href="http://www.haneycodes.net/wp-content/themes/skeptical/style.css" type="text/css" media="screen"> 
  <link rel="pingback" href="http://www.haneycodes.net/xmlrpc.php"> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="Haney Codes .NET » Feed" href="http://www.haneycodes.net/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Haney Codes .NET » Comments Feed" href="http://www.haneycodes.net/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Haney Codes .NET » To Node.js Or Not To Node.js Comments Feed" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.haneycodes.net\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.8.2"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b!==c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="gray-css" href="http://www.haneycodes.net/wp-content/themes/skeptical/styles/gray.css" type="text/css" media="all"> 
  <link rel="https://api.w.org/" href="http://www.haneycodes.net/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.haneycodes.net/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.haneycodes.net/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="C# Probably Getting New “Safe Navigation” Operator “?.”" href="http://www.haneycodes.net/c-probably-getting-new-safe-navigation-operator/"> 
  <link rel="next" title="How To Guarantee Dev Team Failure" href="http://www.haneycodes.net/how-to-guarantee-dev-team-failure/"> 
  <meta name="generator" content="WordPress 4.8.2"> 
  <link rel="canonical" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/"> 
  <link rel="shortlink" href="http://www.haneycodes.net/?p=494"> 
  <link rel="alternate" type="application/json+oembed" href="http://www.haneycodes.net/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.haneycodes.net%2Fto-node-js-or-not-to-node-js%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://www.haneycodes.net/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.haneycodes.net%2Fto-node-js-or-not-to-node-js%2F&amp;format=xml"> 
  <style type="text/css" id="syntaxhighlighteranchor"></style> 
  <!-- BEGIN GADWP v5.1.1.3 Universal Analytics - https://deconf.com/google-analytics-dashboard-wordpress/ --> 
  <script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-50502107-1', 'auto');
  ga('send', 'pageview');
</script> 
  <!-- END GADWP Universal Analytics --> 
  <style type="text/css" id="wp-custom-css">
			/*
You can add your own CSS here.

Click the help icon above to learn more.
*/

.col-full {
  width: 1080px;
}

.col-left#main {
  width: 860px;
}

.post .middle {
  width: 619px
}

.col-left .nav-entries {
  width: 619px;
}

.col-left #comments {
  /* margin-left: 180px; BREAKS ABOUT ME COMMENTS */
  width: 840px;
}

#commentform label {
  display: block;
  width: 100px;
}

.comment-notes {
  display: none;
}		</style> 
 </head> 
 <body class="post-template-default single single-post postid-494 single-format-standard"> 
  <div id="wrapper"> 
   <div id="header"> 
    <div class="col-full"> 
     <div id="logo"> 
      <span class="site-title"> <a href="http://www.haneycodes.net/" title="Haney Codes .NET" rel="home">Haney Codes .NET</a> </span> 
      <span class="site-description">Sharing my experiences as a programmer (C# .NET) and engineering manager.</span> 
     </div>
     <!-- /#logo --> 
     <div id="navigation"> 
      <ul id="main-nav" class="nav fl"> 
       <li class="page_item page-item-2"><a href="http://www.haneycodes.net/about-me/">About Me</a></li> 
       <li class="page_item page-item-341"><a href="http://www.haneycodes.net/publications/">Publications</a></li> 
      </ul> 
      <ul class="rss fr"> 
       <li class="sub-rss"><a href="http://www.haneycodes.net/feed/">Subscribe to RSS</a></li> 
      </ul> 
     </div>
     <!-- /#navigation --> 
    </div>
    <!-- /.col-full --> 
   </div>
   <!-- /#header --> 
   <div id="content" class="col-full"> 
    <div id="main" class="col-left"> 
     <div id="post-494" class="post-494 post type-post status-publish format-standard hentry category-blog tag-net tag-analysis tag-node-js tag-performance tag-programming"> 
      <div class="post-meta col-left"> 
       <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/" title="Permalink to To Node.js Or Not To Node.js" rel="bookmark" class="date-link"> <span class="post-date"> March 24, 2014 <span class="bg">&nbsp;</span> </span> </a> 
       <ul> 
        <li class="comments"><a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comments">81 Comments</a></li> 
       </ul> 
      </div>
      <!-- /.meta --> 
      <div class="middle col-left clearfix"> 
       <h1 class="title"> To Node.js Or Not To Node.js </h1> 
       <div class="entry clearfix"> 
        <p><b>Node.js – it has rapidly become the “new hotness” in the tech start-up realm.</b> With each passing day, the fan base of Node lovers grows larger, spreading their rhetoric like a religion. How do you spot a Node.js user? Don’t worry, they’ll let you know. ?</p> 
        <p>One day you’re at a regular user group meeting, sipping soda and talking with some colleagues, when the subject turns to Node. “Have you guys tried Node.js?” asks one of the people in your group. “It’s all the rage. All of the cool kids in Silicon Valley are using it!” “What does it do?” you ask, only to be bombarded with a sales pitch worthy of the best of used car lots. “Oh, it’s amazing!” they reply, sipping their diet coke and shuffling their hipster fedora and backpack with MacBook Pro in it (or something like that), “It’s server side JavaScript. It runs on a single thread and it can do 100,000 web requests a second!” They glance at the group for the oohs and ahhs, but most people just stare back with amazement in their eyes. Then, your hipster Node-loving friend drops the words that start wars: <b>“It’s way better than .NET”</b> – and just like that, your group is hooked. They go home, download the Node.js tools, write “Hello World”, and suddenly they’re on their way to the next user group meeting to talk about how great Node is.</p> 
        <p>Okay, so I might be exaggerating the appearance and demeanour of your average Node lover a little (read: a lot, almost entirely in fact). However, I have had this exact scenario happen repeatedly over the last six months, with ever-increasing intensity and frequency. Node users love Node. They want you to love Node. They’re excited about it.</p> 
        <p>Having given it some thought, why wouldn’t Node.js developers be excited? Want to fire up a “Hello World” web server in Node? It’s trivial:</p> 
        <pre class="brush: jscript; title: ; notranslate" title="">
// Load the http module to create an http server.
var http = require('http');

// Configure our HTTP server to respond with Hello World to all requests.
var server = http.createServer(function (request, response) {
  response.writeHead(200, {"Content-Type": "text/plain"});
  response.end("Hello World\n");
});

// Listen on port 8000, IP defaults to 127.0.0.1
server.listen(8000);
</pre> 
        <p>Want to do the same thing in .NET? Be prepared to learn about IIS, the Machine.config, the Web.config, the Process Model, how Global.asax works, either ASP.NET MVC or WebForms (huge paradigms in themselves), and how Visual Studio works. Don’t forget to learn how to create a solution, at least one web project, and how to deploy the application to IIS. Oh, and one little detail: go ahead and learn C# while you’re at it. All of that’s pretty much just as easy and intuitive as Node.js, right?</p> 
        <p>.NET is incredibly complicated. Node.js is incredibly simple. On the merits of that fact alone it’s no wonder that these .NET developers and fresh-out-of-college kids who have already dabbled in JavaScript are transferring these skills to the server side and standing up web servers in literally 5 minutes and 5 lines of code. How can you deny the sexiness of that? The bragging rights it gives you? The ease and comfort of a language you’re already familiar with?</p> 
        <p>This, in my opinion, is why Node.js is becoming huge. It has simplified and streamlined the development process and made programming very accessible to almost everyone (or at least anyone who has ever played with JavaScript).</p> 
        <p><b>However, to those who sell Node.js as single-threaded, and to those who sell Node.js as having significantly better performance than .NET, I say this: you are wrong.</b></p> 
        <p>With simplicity comes misunderstanding and the concept of “Leaky Abstractions.” As my good friend and colleague Thomas B. said to me during dinner last week: <b>Node.js is <i>opinionated</i></b>. It has an opinion on how you should do things, and it forces you to do them a certain way.</p> 
        <p><b>Node.js is not single-threaded</b>, though many Node developers in my experience believe it to be. Node’s creator believes that a single-threaded listener delegating I/O-bound work to a thread pool is the key to a highly available application. As a result, Node.js forces you into this paradigm of event-based asynchronous execution of I/O operations via a thread pool.</p> 
        <p><b>Node.js has a single thread listening for connections. All of the code which you as the Node developer write is executed on this single thread. This single thread is all that is exposed to you.</b> As soon as a connection is received, Node’s listening thread executes your coded event on the same listener thread. This event either does quick, non-CPU intensive work (like returning static content to a client), or long-running I/O bound operations (like reading data from a database). In the case of the former, the listener thread does in fact block for the duration of the request, but the request happens so quickly that the delay is trivial. <b>In the case of the latter, Node uses V8 and libuv (which it is built upon) to delegate the I/O work to a thread from an underlying pool of native C++ threads.</b> The single listening thread kicks off the work to an I/O worker thread with a callback that says “tell me when you’re done” and immediately returns to listening for the next connection. <b>It is thus plain to see that Node.js is indeed multi-threaded, though this functionality is not directly exposed to the Node developer.</b></p> 
        <p><b>An important note regarding Node.js is that any CPU-intensive code which you write will block the entire system and make your application scale poorly or become entirely unresponsive.</b> As a result, you would not want to use Node.js when you need to write an application that will do CPU-intensive work such as performing calculations or creating reports.</p> 
        <p>This is how a single thread can handle multiple requests at once; receiving a request and either serving static/simple content or delegating it to an I/O thread from a thread pool are both very cheap and quick operations. When the thread pool thread that is doing the long-running I/O work signals to the single listener thread that the work is done, the listener thread picks up the response and sends it back to the user; this is another very cheap operation. The core idea is that the single listener thread never blocks: it only does fast, cheap processing or delegation of requests to other threads and the serving of responses to clients. The diagram below (<b><a href="http://stackoverflow.com/a/14797071/2420979" target="_blank">taken from Stack Overflow</a></b>) explains this visually:</p> 
        <p><a href="http://www.haneycodes.net/wp-content/uploads/2014/03/node-processing-model.png"><img src="http://www.haneycodes.net/wp-content/uploads/2014/03/node-processing-model.png" alt="Node.js Processing Model" width="557" height="352" class="aligncenter size-full wp-image-501" srcset="http://www.haneycodes.net/wp-content/uploads/2014/03/node-processing-model.png 557w, http://www.haneycodes.net/wp-content/uploads/2014/03/node-processing-model-300x189.png 300w" sizes="(max-width: 557px) 100vw, 557px"></a></p> 
        <p><b>This is a very good, scalable, highly-available way to write code; Node.js nailed their approach and developers benefit from it.</b> However, as of .NET 4.5, you can easily create this exact paradigm/pattern in your .NET applications. <b><i>The difference is that .NET does not force you to do so.</i></b></p> 
        <p>With the introduction of a very tidy wrapper around asynchronous programming in .NET 4.5 (<b>async</b>/<b>await</b> keywords), Microsoft made asynchronous, event-based programming quite a bit easier and more intuitive. And with recent conformance by Microsoft to the jointly-created <b><a href="http://www.owin.org" target="_blank">OWIN specification</a></b>, the web pipeline of .NET has become much simpler.</p> 
        <p><b>In fact, you can now write the “Hello World” asynchronous web server in .NET in about as few lines as Node.js!</b> In this example, I host a web server in a console application which is terminated when a key is pressed:</p> 
        <pre class="brush: csharp; title: ; notranslate" title="">
/// &lt;summary&gt;
/// A simple program to show off an OWIN self-hosted web app.
/// &lt;/summary&gt;
public class Program
{
    /// &lt;summary&gt;
    /// The entry point for the console application.
    /// &lt;/summary&gt;
    /// &lt;param name="args"&gt;The arguments to the execution of the console application. Ignored.&lt;/param&gt;
    static void Main(string[] args)
    {
        // Start OWIN host
        using (WebApp.Start&lt;Startup&gt;(url: "http://localhost:8000"))
        {
            // Runs until a key is pressed
            Console.ReadKey();
        }
    }

    /// &lt;summary&gt;
    /// This code configures the OWIN web app. The Startup class is specified as a type parameter in the WebApp.Start method.
    /// &lt;/summary&gt;
    private class Startup
    {
        /// &lt;summary&gt;
        /// Configures the web app.
        /// &lt;/summary&gt;
        /// &lt;param name="app"&gt;The app builder.&lt;/param&gt;
        public void Configuration( IAppBuilder app )
        {
            // We ignore any rules here and just return the same response for any request
            app.Run( context =&gt;
            {
                context.Response.ContentType = "text/plain";
                return context.Response.WriteAsync( "Hello World\n" );
            } );
        }
    }
}
</pre> 
        <p>One of the big positives of Node.js is that you opt-in to complexity. You start very simply and add on functionality as you need it. I’m a big fan of this approach and I feel that this is where Node really shines. Nothing bothers me more than starting an “Empty MVC 4 Web Application” from template in Visual Studio only to have it install about 15 Nuget packages, one of which is Entity Framework. Great, I fired up a blank application and already my ORM has been decided for me. Who said I even needed one in the first place?!</p> 
        <p>The above OWIN-based approach to hosting a web app in .NET allows you to benefit from Node’s simplistic approach. I have started out simply, and can now add Dapper if I need an ORM, Newtonsoft.Json if I need to serialize to and from JSON, Unity if I care about dependency injection, etc. It’s a nice, clean slate upon which I can build any framework that I desire.</p> 
        <p><b>This approach in .NET is very comparable to Node.js, with a few differences:</b></p> 
        <ul> 
         <li>Node.js uses 1 listener thread, while .NET uses N listener threads. If your Node.js application does CPU-intensive work at all, it will block the entire system and potentially cause your application to become unresponsive. .NET, on the other hand, is designed to do CPU intensive work. Tying up a thread to do some CPU work is not of concern because there are other threads available in the listener thread pool to take other requests while this is happening. However, both Node.js and .NET are limited by the server resources; in either case, if you max out the CPU or RAM, your app will perform horribly, regardless of thread delegation. This is known as resource contention.</li> 
         <li>Node.js delegates I/O bound work to an I/O thread worker pool, and .NET implemented asynchronously (async methods and the async/await keywords) does the same.</li> 
         <li>Node.js uses an event-based paradigm, and .NET does also when implemented asynchronously.</li> 
         <li>Node.js offers high performance for I/O bound, low CPU operations, and .NET offers comparable performance when you skip the IIS pipeline. IIS tacks on a significant amount of performance overhead due to things like session state management, forms authentication, the process model, request lifecycle events, etc. These are not bad things to have and use, but if you don’t need IIS, session state, forms auth, request lifecycle events, or the process model, then don’t use them!</li> 
         <li>Node.js must parse/serialize to and from JSON, and .NET must serialize to and from JSON to interact with .NET objects. Parsing is going to be much cheaper in Node.js than serializing is in .NET, but .NET also enables you to serialize to XML, Atom RSS, and anything else that you desire. With Node, this is a bit trickier, and the serialization overhead comes back into play to even the field.</li> 
        </ul> 
        <p>When someone compares Node.js to .NET, I find that they often actually compare Node.js to IIS hosted frameworks such as ASP.NET MVC, ASP.NET WebForms, and ASP.NET Web API (in IIS hosted mode). These are all tools built on top of ASP.NET to simplify enterprise web development and to do CPU-intensive calculations. In these scenarios, Node.js will have an advantage, because it is designed specifically to NOT do CPU-intensive calculations. You are effectively comparing CPU-intensive Apples to low-CPU-usage Oranges. It is not a fair comparison.</p> 
        <p>When someone compares Node.js to a self-hosted .NET web app which does I/O-bound long-running operations via asynchronous thread pool delegation, they find that there is not much of a difference in performance between the two runtimes. In fact, comparing Node.js to self-hosted Web API (NOT using IIS) doing low-CPU work, the numbers are very close:</p> 
        <p><a href="http://www.haneycodes.net/wp-content/uploads/2014/03/webapi-vs-node.png"><img src="http://www.haneycodes.net/wp-content/uploads/2014/03/webapi-vs-node.png" alt="Web API vs Node.js" width="1024" height="637" class="aligncenter size-full wp-image-505" srcset="http://www.haneycodes.net/wp-content/uploads/2014/03/webapi-vs-node.png 1024w, http://www.haneycodes.net/wp-content/uploads/2014/03/webapi-vs-node-300x186.png 300w, http://www.haneycodes.net/wp-content/uploads/2014/03/webapi-vs-node-624x388.png 624w" sizes="(max-width: 1024px) 100vw, 1024px"></a></p> 
        <p>This image was taken from <b><a href="http://mikaelkoskinen.net/asp-net-web-api-vs-node-js-benchmark-take-2" target="_blank">a benchmark done in 2012 with the Web API Release Candidate (not Web API 2, and NOT OWIN hosted)</a></b>. Given that Web API 2 exists, and can be self-hosted via OWIN, I’d love to see a more recent benchmark comparing the two. In fact, I will try and do this for my next blog post.</p> 
        <p><b>So, to Node.js or not to Node.js? I submit these final thoughts:</b></p> 
        <p>I guess the point of all of this has been that neither Node.js or .NET is necessarily better/the best/the new hotness. They both serve a purpose, and while Node.js is much easier to use and more accessible to developers, .NET is very versatile and powerful as well. They are built to do different things: Node.js specializes in performing and scaling well for low-CPU, highly I/O-bound operations. .NET can perform well in this scenario as well, but can also perform well with high-CPU operations. In fact, I would argue that .NET excels at CPU-intensive operations, especially when compared to Node.</p> 
        <p>There are many .NET developers in the current tech scene that are capable and competent. This means that it’s not too hard to find, hire, and retain good .NET talent. They can pick up self-hosted OWIN web apps in a matter of days, and begin to write very scalable, high-performance web apps and services based on it. They can even easily host Web API in an OWIN web app via console, a Windows service, or Azure. There’s a community that has existed for over a decade that evolves the .NET framework with amazing tools and add-ons like Dapper, Unity, and Newtonsoft.Json. This community is mature and there are many prominent voices within it that offer advice and help.</p> 
        <p>Relative to .NET, there aren’t as many Node.js developers in the current tech scene that are capable and competent. This is because fortune favours the bold, and only a few have been early adopters of Node.js. In my experience, few Node developers will truly understand what is going on in the Node.js processing model and how to exploit it for maximum performance, though the <i>opinionated</i> paradigm of Node.js will force developers to write good asynchronous code. It can be hard to find, hire, and retain good Node.js talent. This will become less of a concern as Node’s following grows. The Node.js community is budding and has created some amazing tools and add-ons for Node.js as well such as ORMs and DI frameworks. This community is not yet mature and I am not aware of many prominent voices within it that offer advice and help. As a result, it could be difficult to find support and tools for Node.js if you encounter a problem.</p> 
        <p><b>In conclusion, both Node.js and .NET are great.</b> Which one to pick for a particular solution/application, however, depends on many factors; it is not black and white but a full colour spectrum. It would be very foolish and naive for a .NET developer to use .NET to solve every single problem just because “that’s what we use.” It would be similarly foolish for a Node.js developer to propose Node.js as a solution for every project or problem that he or she encounters. One must choose the right tool for a given job, and be open to different paradigms in order to truly excel.</p> 
        <p><b>In general, use Node.js when you have highly I/O-bound operations that don’t use much CPU. Use .NET when you need to calculate things and use a lot of CPU.</b></p> 
        <p><b>Don’t use Node.js solely on the reasoning that it’s <i>much faster and performs way better</i> than .NET: it depends on how you use .NET. And don’t use .NET if all you’re doing is heavily I/O-bound operations with low CPU usage: that’s where Node.js excels.</b></p> 
       </div>
       <!-- .entry --> 
       <p class="tags">Tags: <a href="http://www.haneycodes.net/tag/net/" rel="tag">.net</a>, <a href="http://www.haneycodes.net/tag/analysis/" rel="tag">analysis</a>, <a href="http://www.haneycodes.net/tag/node-js/" rel="tag">node.js</a>, <a href="http://www.haneycodes.net/tag/performance/" rel="tag">performance</a>, <a href="http://www.haneycodes.net/tag/programming/" rel="tag">programming</a></p> 
      </div>
      <!-- /.middle --> 
      <div class="fix"></div> 
     </div>
     <!-- /.post --> 
     <div class="nav-entries"> 
      <div class="nav-prev fl">
       <a href="http://www.haneycodes.net/c-probably-getting-new-safe-navigation-operator/" rel="prev">« Previous post</a>
      </div> 
      <div class="nav-next fr">
       <a href="http://www.haneycodes.net/how-to-guarantee-dev-team-failure/" rel="next">Next post »</a>
      </div> 
      <div class="fix"></div> 
     </div> 
     <div id="comments"> 
      <h3> 81 Responses to “To Node.js Or Not To Node.js” </h3> 
      <ol class="commentlist"> 
       <li class="comment even thread-even depth-1" id="li-comment-2070"> <a name="comment-2070"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/0b96497eacbfb7a1f5ae1bf3d2db0d2d?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/0b96497eacbfb7a1f5ae1bf3d2db0d2d?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-2070" class="comment-content"> 
          <span class="name">Dmitry <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-2070"><time pubdate datetime="2014-03-27T03:32:22+00:00">March 27, 2014 at 3:32 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Hello.<br> What is about pros and cons .NET and Node.js when related to other OS like Linux and Mac? .NET, even there exists Mono framework but this is not the same product as .NET from Microsoft, is tightly coupled with Windows environment.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=2070#respond" onclick="return addComment.moveForm( &quot;comment-2070&quot;, &quot;2070&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Dmitry">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2072"> <a name="comment-2072"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/489638fafc26e6657871272c30c41c58?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/489638fafc26e6657871272c30c41c58?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-2072" class="comment-content"> 
          <span class="name">Ivan Pelovski <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-2072"><time pubdate datetime="2014-03-27T09:10:17+00:00">March 27, 2014 at 9:10 am</time></a> </span> 
          <span class="edit"></span> 
          <p>I think the motto of ASP.NET and .NET as a whole is “Why should it be easy when it can be complicated?”. Once I was a passionate .NET developer and believed that everything not coming from Microsoft sucked. But gradually I started to feel the pain from the tools and the process of developing .NET software. I felt the limitations of C# which the C# creators also felt and that’s why they started to add dynamic and functional features to the language. And here comes one of my colleague talking about more powerful languages and more advanced concepts that exists in other technologies. That colleague and my interest in JavaScript made me learn that the non-Microsoft world is full of bright colors and rainbows. A world so stunningly vivid that everything Microsoftish started looking to me greyish and dull. That’s why I’m now a Node.js developer, I’m learning Python, have written an interpreter for Scheme, and continue enjoying programming.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=2072#respond" onclick="return addComment.moveForm( &quot;comment-2072&quot;, &quot;2072&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Ivan Pelovski">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment even depth-2" id="li-comment-6011"> <a name="comment-6011"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/00a5f5402df7df5e6b3798b20dc07b52?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/00a5f5402df7df5e6b3798b20dc07b52?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-6011" class="comment-content"> 
            <span class="name">ryan <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-6011"><time pubdate datetime="2014-05-17T15:32:49+00:00">May 17, 2014 at 3:32 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>C# didn’t add dynamic and functional concepts because the language was “too limited” and painful.<br> That’s crazy talk.<br> Javascript is not nearly as powerful a language as C#. NodeJS is pretty sweet, no doubt but if you left .Net because Javascript is so much more “advanced and powerful” then I feel bad for you.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=6011#respond" onclick="return addComment.moveForm( &quot;comment-6011&quot;, &quot;6011&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to ryan">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt depth-2" id="li-comment-13413"> <a name="comment-13413"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/1ef0008acc7849318770dbb3a8fe63dc?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/1ef0008acc7849318770dbb3a8fe63dc?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-13413" class="comment-content"> 
            <span class="name">Pieter DR <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-13413"><time pubdate datetime="2014-06-17T10:23:56+00:00">June 17, 2014 at 10:23 am</time></a> </span> 
            <span class="edit"></span> 
            <p>What a bunch of crap. If you’re really serious that C# has less possibilities than JavaScript (JavaScript!!!) then I’m really sad for you. While NodeJS can be great and might be easier for less-educated programmers, saying it’s better or faster or the holy grail is simply a lie. You can do all AND more than what you can do with NodeJS in .NET as well. Often in a similar way, sometimes better.</p> 
            <p>Again, I haven’t got a single thing against NodeJS. If you want to use it, then you should. Try it out. But don’t start talking crap like it’s going to solve all your problems and make applications so much faster. </p> 
            <p>The truth is that most NodeJS lovers are attracted to it “because it’s where the cool kids are”.<br> My truth is that you should deliver an application with the best ROI. Technology is secondary.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=13413#respond" onclick="return addComment.moveForm( &quot;comment-13413&quot;, &quot;13413&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Pieter DR">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> 
          <ul class="children"> 
           <li class="comment even depth-3" id="li-comment-55610"> <a name="comment-55610"></a> 
            <div class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/38246a283b14e6df6ae642137967a699?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/38246a283b14e6df6ae642137967a699?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
             </div> 
             <div id="comment-55610" class="comment-content"> 
              <span class="name">Dexter Miguel <span class="says">says :</span></span> 
              <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-55610"><time pubdate datetime="2014-10-20T17:15:45+00:00">October 20, 2014 at 5:15 pm</time></a> </span> 
              <span class="edit"></span> 
              <p>“Where the cool kids are” LOL</p> 
              <p>You seem very strongly opinionated against Node.js, which is okay. Things that people don’t understand can sometimes be scary and even seem far-fetched.</p> 
              <p>However, if you even sat down for a few minutes with a Node.js developer and began looking at their Node.js workflow you may just change your opinion. Node.js may not bring huge performance improvements through the wire, but development of Node.js applications has opened up a world of opportunities for a .NET developer such as myself.</p> 
              <p>It’s been a pleasure to use Node.js. Projects compile within seconds, automation makes my life easier when making changes to builds and using free open-source tools like Git and Jenkins I can ensure continuous integration with my production and staging servers.</p> 
              <p>I’m not sure why you think Node.js lovers “are just there because it’s cool”. It’s almost like Apple and iPhone detractors who seem to think that people use Apple “because it’s cool”. They’re great products. And when great products deliver great results, people will use them.</p> 
              <p>If you really care about ROI, Node.js would almost always be your best bet, considering almost all Node.js tools are free. That being said, the real reason to consider whether to use Node.js over ASP.NET would be environment. </p> 
              <p>– Do your bosses want to use or currently use SQL Server/SSIS/SSAS/SSRS? Are you willing to bridge the gap between Node.js implementations of SQL Server clients and actual business needs?<br> – What does your development team look like? How many developers are well-versed with JavaScript? Do your developers have a flexible (but working) development workflow?<br> – Does using Node.js bring a performance benefit in the rate of development? Does it simplify processes or make them harder? Are there any specific advantages that Node.js brings to the table that ASP.NET does not?</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=55610#respond" onclick="return addComment.moveForm( &quot;comment-55610&quot;, &quot;55610&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Dexter Miguel">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-content --> 
             <div class="fix"></div> 
            </div>
            <!-- /.comment-container --> 
            <div class="fix"></div> 
            <ul class="children"> 
             <li class="comment odd alt depth-4" id="li-comment-94630"> <a name="comment-94630"></a> 
              <div class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://1.gravatar.com/avatar/79a29cf4a5fd466ebd6eced8e52a7ec7?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/79a29cf4a5fd466ebd6eced8e52a7ec7?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
               </div> 
               <div id="comment-94630" class="comment-content"> 
                <span class="name">Anonymous <span class="says">says :</span></span> 
                <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-94630"><time pubdate datetime="2015-01-28T12:35:40+00:00">January 28, 2015 at 12:35 pm</time></a> </span> 
                <span class="edit"></span> 
                <p>C# is more advanced language than JavaScript. Instead of JavaScript, NODE.js people should use typescript.</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=94630#respond" onclick="return addComment.moveForm( &quot;comment-94630&quot;, &quot;94630&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Anonymous">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-content --> 
               <div class="fix"></div> 
              </div>
              <!-- /.comment-container --> 
              <div class="fix"></div> </li>
             <!-- #comment-## --> 
             <li class="comment even depth-4" id="li-comment-122144"> <a name="comment-122144"></a> 
              <div class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://0.gravatar.com/avatar/9e741e503738ce13a6b91ff998536fbb?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/9e741e503738ce13a6b91ff998536fbb?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
               </div> 
               <div id="comment-122144" class="comment-content"> 
                <span class="name">Arman <span class="says">says :</span></span> 
                <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-122144"><time pubdate datetime="2015-09-26T01:05:12+00:00">September 26, 2015 at 1:05 am</time></a> </span> 
                <span class="edit"></span> 
                <p>We have couple of Node.js coders in our team that have no idea how Node.js works. Hmm they even had done banchmarking between Node.js vs .Net &amp; PHP just to show and make a point that Node.js is faster, therefor it’s better. One thing they messed up with banchmarking was that they had synchronous I/O operations for .Net &amp; PHP without realizing that Node.js by default does asynchronous I/O operations. This comes to show that majority of “cool kids” do not now about the technology they so much exited.</p> 
                <p>We did redid the banchmark Node.js vs Owin Web Api (.Net) and .Net was faster almost a minute for 10,000 consequent requests.</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=122144#respond" onclick="return addComment.moveForm( &quot;comment-122144&quot;, &quot;122144&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Arman">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-content --> 
               <div class="fix"></div> 
              </div>
              <!-- /.comment-container --> 
              <div class="fix"></div> 
              <ul class="children"> 
               <li class="comment odd alt depth-5" id="li-comment-126190"> <a name="comment-126190"></a> 
                <div class="comment-container"> 
                 <div class="avatar">
                  <img alt="" src="http://2.gravatar.com/avatar/e8af45f8919dccce4aaf729fd602b30a?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/e8af45f8919dccce4aaf729fd602b30a?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
                 </div> 
                 <div id="comment-126190" class="comment-content"> 
                  <span class="name">James P. <span class="says">says :</span></span> 
                  <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-126190"><time pubdate datetime="2016-01-21T12:15:41+00:00">January 21, 2016 at 12:15 pm</time></a> </span> 
                  <span class="edit"></span> 
                  <p>The cool kids found out that<br> -nodejs + javascript can solve 99% of the development problem<br> – you can scale without paying server license to the OS<br> – you can run you nodejs in Dockers with NGINX, cluster.js,<br> -Isomorphic development language (Client &amp; Server use the same language) and async come default<br> – the npm install is &gt; the Nuget and it’s cross platform<br> – the huge crazy open source community. MS did provide a great IDE – VS Code<br> -for anything else you like if you have a not-so-smart CEO/CTO/TechLead – Be your own boss, get yourself a nice Macbook Pro and start writing code that will make you money using nodejs</p> 
                  <div class="reply"> 
                  </div>
                  <!-- /.reply --> 
                 </div>
                 <!-- /comment-content --> 
                 <div class="fix"></div> 
                </div>
                <!-- /.comment-container --> 
                <div class="fix"></div> </li>
               <!-- #comment-## --> 
               <li class="comment even depth-5" id="li-comment-127853"> <a name="comment-127853"></a> 
                <div class="comment-container"> 
                 <div class="avatar">
                  <img alt="" src="http://2.gravatar.com/avatar/b357987f41264899b54de421c64b7f20?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/b357987f41264899b54de421c64b7f20?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
                 </div> 
                 <div id="comment-127853" class="comment-content"> 
                  <span class="name">Brandon <span class="says">says :</span></span> 
                  <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-127853"><time pubdate datetime="2016-04-07T07:54:42+00:00">April 7, 2016 at 7:54 am</time></a> </span> 
                  <span class="edit"></span> 
                  <p>Node.js vs .Net &amp; PHP?</p> 
                  <p>That is the equivalent of comparing apples v. a stamp collection &amp; russian mail-order brides. </p> 
                  <p>When I see people start doing comparisons of a framework vs a runtime vs a language I know we have stumbled into deep waters, haha.</p> 
                  <p>BTW – I am a .net developer and I find Node.js quite easy and pleasing. Plus, with vs2015 or WebStorm the development is quite quick. Three books and a few days of hacking around Node and Express and you can put together some pretty awesome stuff. </p> 
                  <p>I still like Web Api (not better or worse – very different), but to discount the effectiveness of either Web Api, or Node.js is not good, especially when we still have a ton of spaghetti PHP coders that we need to help stop band-aiding their next wordpress blog together. (*note – I have nothing against PHP, I have actually made some great apps in PHP, but the language makes it easy for a new-comer to see some dynamic content after 5 mins of trying the language out, and start hacking html/php together like a lumberjack. Learning patterns before using PHP is a huge plus and anyone can see it when they go to debug a 5,000 line index.php file, haha)</p> 
                  <div class="reply"> 
                  </div>
                  <!-- /.reply --> 
                 </div>
                 <!-- /comment-content --> 
                 <div class="fix"></div> 
                </div>
                <!-- /.comment-container --> 
                <div class="fix"></div> </li>
               <!-- #comment-## --> 
              </ul>
              <!-- .children --> </li>
             <!-- #comment-## --> 
             <li class="comment odd alt depth-4" id="li-comment-130676"> <a name="comment-130676"></a> 
              <div class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://2.gravatar.com/avatar/bee2d23cc97c0b3027e4746397362dd7?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/bee2d23cc97c0b3027e4746397362dd7?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
               </div> 
               <div id="comment-130676" class="comment-content"> 
                <span class="name">Alex <span class="says">says :</span></span> 
                <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-130676"><time pubdate datetime="2016-09-27T05:18:22+00:00">September 27, 2016 at 5:18 am</time></a> </span> 
                <span class="edit"></span> 
                <p>I’m C# Dev. Honestly I won’t to get off from Microsoft. I would never to go to Node.js, just because it uses JavaScript. You might think that my experience with JavaScript is very limited, but the main reason is because of the nature of the language. You don’t have compile time errors. Some time ago, when I started using TypeScript, I started to think about Node.js. When I read about single threaded I stopped interesting further. After that article I have just few more concerns, I really like Resharper, Castle DI, WCF and Castle WCF facility.</p> 
                <p>The Resharper is the thing which I like. I can’t do similar refactoring in Javascript or TypeScript. Even Resharper does some refactoring for TypeScript it is still very limited. I was thinking that WebStorm(which is done by the same team as Resharper) will have same limitations as Resharper in TypeScript.</p> 
                <p>Castle DI, WCF and Castle WCF facility – this is another things which I really like. My classes implementations do not have a clue what services they’re using. It can be real implementation or WCF service.</p> 
                <p>If I have replacement to all those things I would give it a try, </p> 
                <p>I heard that some people also saying that Node.js has benefit of the ability to use same code on frontend and backend. This is good thing, but what if your implementation has a bug? What if someone will be able to discover that and exploit it?</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=130676#respond" onclick="return addComment.moveForm( &quot;comment-130676&quot;, &quot;130676&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Alex">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-content --> 
               <div class="fix"></div> 
              </div>
              <!-- /.comment-container --> 
              <div class="fix"></div> </li>
             <!-- #comment-## --> 
             <li class="comment even depth-4" id="li-comment-135904"> <a name="comment-135904"></a> 
              <div class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://1.gravatar.com/avatar/d4c3b35043f6e254e07dbc71f412d0e9?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/d4c3b35043f6e254e07dbc71f412d0e9?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
               </div> 
               <div id="comment-135904" class="comment-content"> 
                <span class="name">Aditya Deshpande <span class="says">says :</span></span> 
                <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-135904"><time pubdate datetime="2017-07-22T04:03:59+00:00">July 22, 2017 at 4:03 am</time></a> </span> 
                <span class="edit"></span> 
                <p>I think most people speaking against NodeJS are missing one important factor. The cost of hosting a Microsoft server on the cloud. It is far higher than bringing up a Linux based instance.</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=135904#respond" onclick="return addComment.moveForm( &quot;comment-135904&quot;, &quot;135904&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Aditya Deshpande">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-content --> 
               <div class="fix"></div> 
              </div>
              <!-- /.comment-container --> 
              <div class="fix"></div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt depth-2" id="li-comment-126037"> <a name="comment-126037"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/89b94b58b1d1f31d3b52848ca59b6b2b?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/89b94b58b1d1f31d3b52848ca59b6b2b?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-126037" class="comment-content"> 
            <span class="name">big-d <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-126037"><time pubdate datetime="2016-01-13T09:49:43+00:00">January 13, 2016 at 9:49 am</time></a> </span> 
            <span class="edit"></span> 
            <p>Dude you are walking right into a hornets nest ?<br> Don’t expect 1 – 3 language developers to ever understand. Besides javascript is a rather hard language to master, if you use your compiler as diapers and pacifiers, you simply won’t get it.<br> I’m a solution architect with 20+ years xp. started out with basic, pascal, vb, delph.<br> But when i started with c/c++ i fell in love, later on i had kinda the same experience with c#. and for the next 13 years c# was my goto language for EVERYTHING!!!! (i did some minor projects in other languages: java, php, ruby, and even cobolt)<br> Then i was introduced to nodejs, by some very young hip developers… i hated it.. I felt it was a hacked mess. What audacity to hack a frontend scripting language into a backend technology (and single-threaded)<br> For a year og so i tried to ignore it, but the young hip dudes kept impressing with short dev spurts: and responsive apps.<br> So I did what any seasoned developer, would do, I turned to the dark side.<br> Seriously: nodejs rocks! it’s not for all projects, and the learning curve is rather steep (sure you can get started in 10 minutes, but you have to make all the mistakes before you get your 1337-wings)<br> Still: nodejs is not the best bet for all projects.<br> c# is still a good tool (and java, and c++, and…) but give nodejs a try, you might like it (if you’re not as pigheaded as i was)<br> clojure is also an interesting technology to look into.</p> 
            <p>Have fun coding: Don’t be a tech-religious fanatic,- that’s just sad.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=126037#respond" onclick="return addComment.moveForm( &quot;comment-126037&quot;, &quot;126037&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to big-d">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
         <li class="comment even depth-2" id="li-comment-133526"> <a name="comment-133526"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/02222ac6a4ef3b419109ed85ef22faf9?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02222ac6a4ef3b419109ed85ef22faf9?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-133526" class="comment-content"> 
            <span class="name">dev <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-133526"><time pubdate datetime="2017-02-27T18:03:11+00:00">February 27, 2017 at 6:03 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>Dont forget c# also built on ECMAScript 6…so the c# developers has bright futures too ?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=133526#respond" onclick="return addComment.moveForm( &quot;comment-133526&quot;, &quot;133526&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to dev">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-2081"> <a name="comment-2081"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/4aa4daed68b55c32e27a7048c4c679d7?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/4aa4daed68b55c32e27a7048c4c679d7?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-2081" class="comment-content"> 
          <span class="name">jack <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-2081"><time pubdate datetime="2014-03-28T07:30:51+00:00">March 28, 2014 at 7:30 am</time></a> </span> 
          <span class="edit"></span> 
          <p>All these scripting languages are made for people who don’t have a formal education on computer engineering. If you want to play “let’s be programmers!” probably you should have gone to university. 100.000 requests per second withour knowing the hw means nothing, and calling some script “real time” is a joke. Seriously, go play doctors or architects, leave engineering alone.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=2081#respond" onclick="return addComment.moveForm( &quot;comment-2081&quot;, &quot;2081&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to jack">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment even depth-2" id="li-comment-117588"> <a name="comment-117588"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/7b2cffc7991ede2b23d1b256fc39ddc7?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/7b2cffc7991ede2b23d1b256fc39ddc7?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-117588" class="comment-content"> 
            <span class="name">ferbraz <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-117588"><time pubdate datetime="2015-06-18T18:19:55+00:00">June 18, 2015 at 6:19 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>This is the only good comment here. Your conclusion is better than the entire article.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=117588#respond" onclick="return addComment.moveForm( &quot;comment-117588&quot;, &quot;117588&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to ferbraz">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt depth-2" id="li-comment-125529"> <a name="comment-125529"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/9a6b951cfcce591a2651d26496a74494?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/9a6b951cfcce591a2651d26496a74494?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-125529" class="comment-content"> 
            <span class="name">Grant <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-125529"><time pubdate datetime="2015-12-20T02:02:00+00:00">December 20, 2015 at 2:02 am</time></a> </span> 
            <span class="edit"></span> 
            <p>I’m a part of several projects involving different languages and have gone through the basic guidance of university. After 7 years of Java and 3 of C#, I now have to create projects geared to business and profit for international venture startups and all I’ll say about monolithic languages is that fitting a good stack together is too unnatural to be done quickly and cleanly if your community doesn’t build plugins that work together out of the box. Netty + HTTP alone is a tricky combination without knowing Scala or Play. Spring MVC is for people who practice it enough to memorize the steps of configuration, and C# wants too much money for every tool I would need: Windows Server license, VS commercial, etc or lacks modern productivity (excluding NuGet). What I mean is, in most new frameworks and maybe WebStorm provides zero time startup of new projects and reloads your website as you’re coding so you can see the changes while typing. When you have a 2 month deadline every second adds up. Node and Express are mature technologies along with all the blazing NoSQL databases with proper ORMs like Mongoose. They have more established and working open source NPM packages that can be installed with one line inside your command line or IDE than Java’s Maven and .NET NuGet repository combined. Everything you will ever need is there, all in one folder without debug/release artifacts. In 3D world, Unity uses both C# and JavaScript and at the end it doesn’t really matter which one was picked. You can write production video games for consoles and browsers in both languages and they both have mature garbage collection. C# is good for large groups because the type checking makes sure everybody is not checking in mistakes. JavaScript is a sharp barber’s razor that will give you the clean professional production look with clean (no extra files or lines) source code as well. Want a new data object and start using it? Add one file to Mongoose and it magically appears in your database without having to open it. Do the same in SQL Management Studio… a lot more pausing to think about data architecture, but at least you get Lambda selection for conciseness in C#. CoffeeScript has Lambda too, and TypeScript adds types. Node has simple partials like Razor and can scale to the cores in your machine. Both have async.</p> 
            <p>Bottom line is that theory is nice, and fun. You can be proud of it and look down on scripts even if they run on C++ and written on V8 by Google. Google is doing better than Bing by the way. You might have a fulfilling career ahead of you, I don’t know how your work life is. But if you want to ride on millions of dollars and make something big of yourself instead of being a religious student, you’re going to care about development momentum and WebSockets more advanced than SignalR. Your company will pay you a large equity if you can be trusted to get an infrastructure up within weeks and not bleed them with licensing fees which can range from $3000 to $30,000 to go live with enterprise editions of certain tools. That’s money out of your pockets. Datasource strings will seem to you an obscure and cryptic format while a mongo url looks like a regular http link. SQL can be fast, but MongoDB is faster <a href="http://blog.michaelckennedy.net/2010/04/29/mongodb-vs-sql-server-2008-performance-showdown/" rel="nofollow">http://blog.michaelckennedy.net/2010/04/29/mongodb-vs-sql-server-2008-performance-showdown/</a>. Mongo inserts 10,000 documents in 2 seconds versus Microsoft SQL’s 204 seconds. That’s over 3 minutes that your one backend is locked up and out of threads in the pool. I’m sure 2 seconds feels more real-time to 10,000 concurrent users than staring at a loading screen for 3 minutes does.</p> 
            <p>Do you want to be rich and not ignorant to tools that will help you do it for free? Put the book down and make a real plan to research and benchmark your choices. Go the scientific route, engineer. Global 100, multimillion startups, a mediocre degree, 10+ certs and 15 years of programming won’t lie to you. Care about your future enough to learn without pride.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=125529#respond" onclick="return addComment.moveForm( &quot;comment-125529&quot;, &quot;125529&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Grant">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> 
          <ul class="children"> 
           <li class="comment even depth-3" id="li-comment-125845"> <a name="comment-125845"></a> 
            <div class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/6172290348271e78a32b4fd002d6101f?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/6172290348271e78a32b4fd002d6101f?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
             </div> 
             <div id="comment-125845" class="comment-content"> 
              <span class="name">Alex <span class="says">says :</span></span> 
              <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-125845"><time pubdate datetime="2016-01-03T20:07:53+00:00">January 3, 2016 at 8:07 pm</time></a> </span> 
              <span class="edit"></span> 
              <p>this is changing right now , and all is subjetive , we have the new .net asp core going open source , we have asp.net , we have webapi and owin , we have visual studio code , we have visual studio community , we have support for all the noSQL db on the .net plataform , you can go .NET without a single dollar man. i have to say im a .NET developer , begining right now with Rails and node , rail for me is awesome , simplistic to the core , easy , fast development , but i know MS is going in the right way , fighting , taking the strengths from others and merging it in the .net plataform , everything is awesome , so lets code in all the languages that exists.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=125845#respond" onclick="return addComment.moveForm( &quot;comment-125845&quot;, &quot;125845&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Alex">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-content --> 
             <div class="fix"></div> 
            </div>
            <!-- /.comment-container --> 
            <div class="fix"></div> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt depth-3" id="li-comment-125910"> <a name="comment-125910"></a> 
            <div class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://2.gravatar.com/avatar/bee2d23cc97c0b3027e4746397362dd7?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/bee2d23cc97c0b3027e4746397362dd7?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
             </div> 
             <div id="comment-125910" class="comment-content"> 
              <span class="name">Alex <span class="says">says :</span></span> 
              <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-125910"><time pubdate datetime="2016-01-07T08:15:12+00:00">January 7, 2016 at 8:15 am</time></a> </span> 
              <span class="edit"></span> 
              <p>You started from C# and combined every product from microsoft, even MSSQL. What relation MSSQL has to the C# vs Node? Or what relation Mongo has to the question?<br> FIY, I use mongo in C#.<br> Honestly, I’m not happy with many things Microsoft does but I don’t see a better alternative to C# right bow. To be correct, I don’t see an alternative to C# + Resharper. I came here to find out if I can use Typescript + Nodejs, but single thread killed whole interest in NodeJS.<br> To those who moved from C# to Javascript – I feel sorry for you. Look into Typescript.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=125910#respond" onclick="return addComment.moveForm( &quot;comment-125910&quot;, &quot;125910&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Alex">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-content --> 
             <div class="fix"></div> 
            </div>
            <!-- /.comment-container --> 
            <div class="fix"></div> </li>
           <!-- #comment-## --> 
           <li class="comment even depth-3" id="li-comment-126559"> <a name="comment-126559"></a> 
            <div class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/c4f4ba85678a227792865c751e541255?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/c4f4ba85678a227792865c751e541255?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
             </div> 
             <div id="comment-126559" class="comment-content"> 
              <span class="name">Brett <span class="says">says :</span></span> 
              <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-126559"><time pubdate datetime="2016-02-11T18:13:54+00:00">February 11, 2016 at 6:13 pm</time></a> </span> 
              <span class="edit"></span> 
              <p>I’m sorry. I was actually listening to you up until you started claiming the benefits of Mongo vs. SQL server. </p> 
              <p>Yes, in the tests that you linked to, Mongo handily beat down SQL Server. A real bashing to be sure. And no Admin worth his weight would ever let you use it. Why you ask? Because Mongo didn’t actually COMMIT any of those 10,000 documents to disk. </p> 
              <p><a href="http://hackingdistributed.com/2013/01/29/mongo-ft/" rel="nofollow">http://hackingdistributed.com/2013/01/29/mongo-ft/</a></p> 
              <p>Mongo always uses lazy commit, SQL Server never does. So at the end of that test you would have pulled the plug on your “production” server, your precious Mongo DB would have exactly 0 records in it. The SQL Server would have exactly 10,000 records still in it. </p> 
              <p>So yeah, Mongo is blazing fast. So fast it doesn’t have time to keep your data safe. </p> 
              <p>So please continue; Tell us how you’ve used Mongo in a mission critical production environment.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=126559#respond" onclick="return addComment.moveForm( &quot;comment-126559&quot;, &quot;126559&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Brett">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-content --> 
             <div class="fix"></div> 
            </div>
            <!-- /.comment-container --> 
            <div class="fix"></div> 
            <ul class="children"> 
             <li class="comment odd alt depth-4" id="li-comment-127707"> <a name="comment-127707"></a> 
              <div class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://2.gravatar.com/avatar/b357987f41264899b54de421c64b7f20?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/b357987f41264899b54de421c64b7f20?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
               </div> 
               <div id="comment-127707" class="comment-content"> 
                <span class="name">Brandon <span class="says">says :</span></span> 
                <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-127707"><time pubdate datetime="2016-03-31T21:53:59+00:00">March 31, 2016 at 9:53 pm</time></a> </span> 
                <span class="edit"></span> 
                <p>Haha! Nice one. </p> 
                <p>I just stopped reading when mongo that post when a comparison to MSSQL was made of Mongo.</p> 
                <p>I have used both, and never would use them in the same sentence, or paragraph. </p> 
                <p>I use MSSQL for most of our web apps, on a daily basis, but am also trying to wrap my head around Azure Table as well. It is a different way of thinking in the design phase. </p> 
                <p>I just love reading the comments of people who have never used certain technologies but because of some benchmarks they think that since language a can handle 10,000 iops on server x, that they will somehow create an application that would come close to throttling it. </p> 
                <p>I will read a back and forth between two guys who have a total of 53 concurrent users on all of their live applications argue about their language being able to handle 150,000 concurrent requests so it is better, haha.</p> 
                <p>I never hear people with extremely succesful applications completely bashing other languages, because we have usually built apps in many different languages with many different dbs, and hosted in many different environments. All have some strengths and weaknesses.</p> 
                <p>We had a junior developer freak out this week when I coded a quick app in PHP, and he asked me, “You know PHP?” I said “Yeah, why”, He said, “Because when you hired me you told me to stay away from PHP and trained me in C#, I thought you speaking down on PHP meant you didn’t like or know it”. I told him, “I saw your code and know you need more structure, so PHP will not help you, being that some of the most spaghetti code I have ever looked at was in PHP and it was not the languages fault, it was the developer. Of course I can code in PHP and do so when I have a pre-built template that will allow me to get the job done, and done right, quickly. We don’t need security, authentication, async, etc for this app and I can get it out in a few days since I have one built from a few years ago” — Moral of the story, don’t bring a knife to a gun fight, or bring up Mongo and try to compare it to MSSQL, haha</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=127707#respond" onclick="return addComment.moveForm( &quot;comment-127707&quot;, &quot;127707&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Brandon">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-content --> 
               <div class="fix"></div> 
              </div>
              <!-- /.comment-container --> 
              <div class="fix"></div> </li>
             <!-- #comment-## --> 
             <li class="comment even depth-4" id="li-comment-129322"> <a name="comment-129322"></a> 
              <div class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://1.gravatar.com/avatar/180eea9fb31f162096da95e7a8c744cf?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/180eea9fb31f162096da95e7a8c744cf?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
               </div> 
               <div id="comment-129322" class="comment-content"> 
                <span class="name">Gee <span class="says">says :</span></span> 
                <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-129322"><time pubdate datetime="2016-06-19T05:48:24+00:00">June 19, 2016 at 5:48 am</time></a> </span> 
                <span class="edit"></span> 
                <p>Talk about ignorance. Many of the largest companies in the world with the highest volume websites serving hundreds of millions of users use mongo in production.</p> 
                <p>Saying mongo always uses lazy commits shows a complete misunderstanding of the nosql world in general and mongo in particular. </p> 
                <p>Write concerns are highly configurable in mongo, all the way from fire and forget to journaling and acknowledged commits across an entire replica set. What you use would depend on the nature of the data, and what you are willing to trade-off in performance vs integrity. </p> 
                <p>But where mongo and nosql shine are on the read side. From a read perspective it’s usually like using a data warehouse. No expensive join operations needed. </p> 
                <p>Mongo is much easier to shard and scale horizontally, so it is a particularly good choice for cloud-based applications with very large data needs. When your SQL Server and your ‘safe’ normalized tables are grinding down a $500,000 server under the load of a few petabytes of data, mongo is still producing sub-millisecond responses on a network of cheap consumer boxes. </p> 
                <p>Both are great tools and have their place, but to belittle a technology that you don’t understand just makes you look small.</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=129322#respond" onclick="return addComment.moveForm( &quot;comment-129322&quot;, &quot;129322&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Gee">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-content --> 
               <div class="fix"></div> 
              </div>
              <!-- /.comment-container --> 
              <div class="fix"></div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-3379"> <a name="comment-3379"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/5ca4136a060a2574a936cdf6881f733c?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/5ca4136a060a2574a936cdf6881f733c?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-3379" class="comment-content"> 
          <span class="name">Dev <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-3379"><time pubdate datetime="2014-04-30T10:52:56+00:00">April 30, 2014 at 10:52 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Someone implemented a Reactor pattern with package management in JavaScript: “OMG, it’s the best thing in the world, static typing was invented for no reason, let’s dump it”.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=3379#respond" onclick="return addComment.moveForm( &quot;comment-3379&quot;, &quot;3379&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Dev">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-even depth-1" id="li-comment-7235"> <a name="comment-7235"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/66164c7fff6f17c0d949fa9052338629?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/66164c7fff6f17c0d949fa9052338629?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-7235" class="comment-content"> 
          <span class="name">Pete <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-7235"><time pubdate datetime="2014-05-22T09:42:33+00:00">May 22, 2014 at 9:42 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Nice post! Well done and thanks for writing this up.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=7235#respond" onclick="return addComment.moveForm( &quot;comment-7235&quot;, &quot;7235&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Pete">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-15592"> <a name="comment-15592"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/90a0c443c654d8c71137feeee403344a?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/90a0c443c654d8c71137feeee403344a?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-15592" class="comment-content"> 
          <span class="name">Jon <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-15592"><time pubdate datetime="2014-06-27T11:43:23+00:00">June 27, 2014 at 11:43 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Ok, so I’m interested in node not because it’s “cool”, but because it’s *accessible*. I<br> hate VS &amp; I hate writing tons of code to get anything done. Also, I mostly use Javascript already. To Dev, (comment above,) I say, use Typescript if you like typed code. (I do too.)</p> 
          <p>I’m unclear on one point this article makes: </p> 
          <p>“…any CPU-intensive code you write will block the sytem and make your application slow.”</p> 
          <p>Isn’t the proper approach here to simply put that CPU-intensive code in a child process, and let the main thread continue on it’s merry way? Granted, I’m just getting started with back-end dev, bur this is my impression thus far. </p> 
          <p>That being said, I’m here for the purpose of due diligemce and informed decisions, so please do reply, (or, if you must, retort.)</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=15592#respond" onclick="return addComment.moveForm( &quot;comment-15592&quot;, &quot;15592&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Jon">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment even depth-2" id="li-comment-16348"> <a name="comment-16348"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/eb53960f2fed5c04b1213be4d36392ff?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/eb53960f2fed5c04b1213be4d36392ff?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-16348" class="comment-content"> 
            <span class="name">Simon <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-16348"><time pubdate datetime="2014-07-01T04:08:41+00:00">July 1, 2014 at 4:08 am</time></a> </span> 
            <span class="edit"></span> 
            <p>Indeed. I feel the author is incorrect when saying that Node.js can’t handle computation intensive work. The Node.js child_process module and its abstractions on top of it allow heavy computations that would otherwise block the main thread to be offloaded to child threads. These threads can communicate with the main thread by means of message passing and event handling.<br> <a href="http://nodejs.org/api/child_process.html#child_process_child_send_message_sendhandle" rel="nofollow">API Reference for child_process.send</a></p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=16348#respond" onclick="return addComment.moveForm( &quot;comment-16348&quot;, &quot;16348&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Simon">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> 
          <ul class="children"> 
           <li class="comment odd alt depth-3" id="li-comment-38205"> <a name="comment-38205"></a> 
            <div class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://1.gravatar.com/avatar/d84e53623919ddecd979a0a62b9fbbd2?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/d84e53623919ddecd979a0a62b9fbbd2?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
             </div> 
             <div id="comment-38205" class="comment-content"> 
              <span class="name">eudaimos <span class="says">says :</span></span> 
              <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-38205"><time pubdate datetime="2014-09-02T12:46:37+00:00">September 2, 2014 at 12:46 pm</time></a> </span> 
              <span class="edit"></span> 
              <p>To be clear to those new to Node.js, using child_process will spawn new processes on the server, not threads. Child Processes do not have shared memory, but using child_process.fork or child_process.spawn will create a pipe that the parent &amp; child process can be used to communicate with each other.</p> 
              <p>Threads on the other hand execute within a Process and have shared memory space. AFAIK, threads aren’t implemented in Node.js, although there are some experimental projects going on to include them, despite the architectural decision to specifically not include threading in Node.js in order to not have to worry about shared state.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=38205#respond" onclick="return addComment.moveForm( &quot;comment-38205&quot;, &quot;38205&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to eudaimos">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-content --> 
             <div class="fix"></div> 
            </div>
            <!-- /.comment-container --> 
            <div class="fix"></div> 
            <ul class="children"> 
             <li class="comment even depth-4" id="li-comment-119837"> <a name="comment-119837"></a> 
              <div class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://2.gravatar.com/avatar/21dbbc796fe477960fbfba676b9c75af?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/21dbbc796fe477960fbfba676b9c75af?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
               </div> 
               <div id="comment-119837" class="comment-content"> 
                <span class="name">Eric Rasmussen <span class="says">says :</span></span> 
                <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-119837"><time pubdate datetime="2015-08-05T01:34:01+00:00">August 5, 2015 at 1:34 am</time></a> </span> 
                <span class="edit"></span> 
                <p>Yes, exactly. Processes also induce a huge amount of overhead on the host operating system when compared to threads. You can start many thousands of threads and the OS will be fine. Trying starting a few hundred processes and the OS will begin to groan under the load of all the process management it’s trying to do.</p> 
                <p>Node.JS’s handling of computation threads is terrible, unfortunately. I suspect this will be addressed in future releases.</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=119837#respond" onclick="return addComment.moveForm( &quot;comment-119837&quot;, &quot;119837&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Eric Rasmussen">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-content --> 
               <div class="fix"></div> 
              </div>
              <!-- /.comment-container --> 
              <div class="fix"></div> 
              <ul class="children"> 
               <li class="comment odd alt depth-5" id="li-comment-129323"> <a name="comment-129323"></a> 
                <div class="comment-container"> 
                 <div class="avatar">
                  <img alt="" src="http://1.gravatar.com/avatar/180eea9fb31f162096da95e7a8c744cf?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/180eea9fb31f162096da95e7a8c744cf?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
                 </div> 
                 <div id="comment-129323" class="comment-content"> 
                  <span class="name">Gee <span class="says">says :</span></span> 
                  <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-129323"><time pubdate datetime="2016-06-19T05:55:04+00:00">June 19, 2016 at 5:55 am</time></a> </span> 
                  <span class="edit"></span> 
                  <p>But you get no value out of thousands of threads. One thread per CPU core/hardware thread is ideal. One process per core is not much of a drain on an OS. </p> 
                  <p>The only value you get out of more threads is in blocking IO, which doesn’t happen in Node.</p> 
                  <div class="reply"> 
                  </div>
                  <!-- /.reply --> 
                 </div>
                 <!-- /comment-content --> 
                 <div class="fix"></div> 
                </div>
                <!-- /.comment-container --> 
                <div class="fix"></div> </li>
               <!-- #comment-## --> 
              </ul>
              <!-- .children --> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even depth-2" id="li-comment-129530"> <a name="comment-129530"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/0235520a72138af80dd5790c3576542f?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/0235520a72138af80dd5790c3576542f?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-129530" class="comment-content"> 
            <span class="name">Glados <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-129530"><time pubdate datetime="2016-07-07T18:40:14+00:00">July 7, 2016 at 6:40 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>&gt; I hate VS &amp; I hate writing tons of code</p> 
            <p>You perhaps are in the wrong field. Thought of that?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=129530#respond" onclick="return addComment.moveForm( &quot;comment-129530&quot;, &quot;129530&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Glados">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-15792"> <a name="comment-15792"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/014f4e794fad59e68be349716de668ff?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/014f4e794fad59e68be349716de668ff?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-15792" class="comment-content"> 
          <span class="name"><a href="http://Www,consiliumsoft.com" rel="external nofollow" class="url">Ralph Krausse</a> <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-15792"><time pubdate datetime="2014-06-28T06:41:10+00:00">June 28, 2014 at 6:41 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Great write up</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=15792#respond" onclick="return addComment.moveForm( &quot;comment-15792&quot;, &quot;15792&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Ralph Krausse">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-odd thread-alt depth-1" id="li-comment-32014"> <a name="comment-32014"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/d34f6e5da8fb1bd614078ed5746038c3?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/d34f6e5da8fb1bd614078ed5746038c3?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-32014" class="comment-content"> 
          <span class="name">Gilles <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-32014"><time pubdate datetime="2014-08-17T20:36:57+00:00">August 17, 2014 at 8:36 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>The benchmark comparing Node.js with WebApi self hosted and using async/await to do some I/O work shows that they are in par BUT what is surprising is that they achieve this with still a very different execution model. As far as I understand, in Node.js there is a single event queue (javascript queue) from which tasks are given to the underlying I/O sub-system (using libev library) and ASP.NET web api that sill takes the incoming http requests from the ASP.NET thread pool and efficiently does I/O with MS IOCP by just using the async/await and doing non CPU work…The way the incoming http requests are processed by the 2 platforms is still different…and that they lead to the same performance is surprising to me… One question I have is the following: provided that the machine used to test the 2 technologies had multiple CPUs (it’s a given), how many Node.js processes were run, each one having affinity with one CPU/core verses only one instance of the ASP.NET using all the cores available?</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=32014#respond" onclick="return addComment.moveForm( &quot;comment-32014&quot;, &quot;32014&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Gilles">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment odd alt depth-2" id="li-comment-123093"> <a name="comment-123093"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/a1b536d492d2bd65f662fe0f811ce106?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/a1b536d492d2bd65f662fe0f811ce106?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-123093" class="comment-content"> 
            <span class="name">Andrew K <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-123093"><time pubdate datetime="2015-10-13T08:22:28+00:00">October 13, 2015 at 8:22 am</time></a> </span> 
            <span class="edit"></span> 
            <p>This is what I’ve been thinking! To truly compare we’d have to spin up a node process bound to each core. That would truly be the test.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=123093#respond" onclick="return addComment.moveForm( &quot;comment-123093&quot;, &quot;123093&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Andrew K">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-even depth-1" id="li-comment-39214"> <a name="comment-39214"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/afcde772d4f8b14354d6f6757f33d9a9?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/afcde772d4f8b14354d6f6757f33d9a9?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-39214" class="comment-content"> 
          <span class="name">VJ <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-39214"><time pubdate datetime="2014-09-05T12:31:19+00:00">September 5, 2014 at 12:31 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>Nice writeup. Always good to know your apples from oranges.</p> 
          <p>Only issue I have is with the statement:<br> “This means that it’s not too hard to find, hire, and retain good .NET talent.”</p> 
          <p>Not in my world. Or maybe you need to better define “good”.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=39214#respond" onclick="return addComment.moveForm( &quot;comment-39214&quot;, &quot;39214&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to VJ">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment odd alt depth-2" id="li-comment-117832"> <a name="comment-117832"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/e5cc95bcab89afce723ae7ce6dcde30c?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/e5cc95bcab89afce723ae7ce6dcde30c?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-117832" class="comment-content"> 
            <span class="name">Rick Lourenco <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-117832"><time pubdate datetime="2015-06-28T13:34:16+00:00">June 28, 2015 at 1:34 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>“Not in my world” “better define good” LMAO…</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=117832#respond" onclick="return addComment.moveForm( &quot;comment-117832&quot;, &quot;117832&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Rick Lourenco">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-odd thread-alt depth-1" id="li-comment-41139"> <a name="comment-41139"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/ae82198ef5e8b9deb71210d170e3352d?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/ae82198ef5e8b9deb71210d170e3352d?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-41139" class="comment-content"> 
          <span class="name">MarianoC <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-41139"><time pubdate datetime="2014-09-11T08:28:47+00:00">September 11, 2014 at 8:28 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Hi,</p> 
          <p>I’m looking into node.js, just because I can, maybe, share some code between client web apps an the server side. I have my own framework developed in .NET, but I find myself usually writing and using js libraries for the browser/phone world. So, I need to convert my .NET objects to JSON then send them to the client and write compatible JS libraries mapping the same functions I wrote in .NET, receive JSON from the client and convert to my .NET objects and then map same functions. Trivial things like validation rules must be mapped between the two code bases. Business or application logic must be duplicated and coded at both sides. So, I’m starting to look at using JS on the server side, because it makes sense to share the code between the two.</p> 
          <p>So? Am I right or should I use another approach? I foresee that web apps will rule the next generation of phone apps, because they are easier to write than native apps and people like the JQuery team are doing an excellent job on running over different platforms, better than MS, Apple and Google. So I think it make sense to start looking how to share JS code base… but I would like that to be easier. I would like to access to power of .NET from server side JS, but it seems that is one thing or the other…</p> 
          <p>Ideas?</p> 
          <p>Regards,</p> 
          <p>MarianoC</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=41139#respond" onclick="return addComment.moveForm( &quot;comment-41139&quot;, &quot;41139&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to MarianoC">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment odd alt depth-2" id="li-comment-68344"> <a name="comment-68344"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/0f7833c954164f1cc79ecd5779cba4f2?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/0f7833c954164f1cc79ecd5779cba4f2?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-68344" class="comment-content"> 
            <span class="name">Martijn <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-68344"><time pubdate datetime="2014-11-15T05:47:42+00:00">November 15, 2014 at 5:47 am</time></a> </span> 
            <span class="edit"></span> 
            <p>(Thanks to the author for initiating a great discussion.)</p> 
            <p>You are right.</p> 
            <p>We are building a pure javascript (typescript) semi SPA backed up by a .net backend. On the moment a lot of our business logic, dto’s, mapping, validation rules and utils are duplicated in the frontend (js) and backend (c#). You could solve this duplication, indeed, by using javascript from end to end and share components between the front and back, and for that reason i am looking into NodeJs as well (as a .NET developer). </p> 
            <p>However in our case it is better to adopt a pure SPA architecture where business logic, routing and navigation are moved from the back to the front. Then the backend becomes much more lightweight, processing is shifting to the front, duplication concerns diminish and we have a full JS (typescript) development stack. Only validation, authorisation and dataaccess is left for the backend.</p> 
            <p>We are also considering an json/object db like MongoDb to get rid of ORM.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=68344#respond" onclick="return addComment.moveForm( &quot;comment-68344&quot;, &quot;68344&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Martijn">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> 
          <ul class="children"> 
           <li class="comment even depth-3" id="li-comment-70974"> <a name="comment-70974"></a> 
            <div class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://1.gravatar.com/avatar/14a9bbd74b4e7fcbcb31e512b45cb150?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/14a9bbd74b4e7fcbcb31e512b45cb150?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
             </div> 
             <div id="comment-70974" class="comment-content"> 
              <span class="name">Julian <span class="says">says :</span></span> 
              <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-70974"><time pubdate datetime="2014-11-21T05:22:12+00:00">November 21, 2014 at 5:22 am</time></a> </span> 
              <span class="edit"></span> 
              <p>“using javascript from end to end and share components between the front and back”. This is how the MeteorJS framework works. The backend is Node. You write javascript, and if for example you wrap it in: “if (Meteor.isClient) ” then it won’t run on the server. Meteor also implements a version of MongoDB in the browser (minimongo), so you interact directly data using Mongo calls and Meteor takes care of syncing with the “real DB”. </p> 
              <p>I’ve just inherited a .NET MVC project and my brain is totally frazzled just trying to understand the spaghetti. I swear every line of existing code just marches happily off the right hand side of my 30? monitor.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=70974#respond" onclick="return addComment.moveForm( &quot;comment-70974&quot;, &quot;70974&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Julian">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-content --> 
             <div class="fix"></div> 
            </div>
            <!-- /.comment-container --> 
            <div class="fix"></div> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt depth-3" id="li-comment-122148"> <a name="comment-122148"></a> 
            <div class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/9e741e503738ce13a6b91ff998536fbb?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/9e741e503738ce13a6b91ff998536fbb?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
             </div> 
             <div id="comment-122148" class="comment-content"> 
              <span class="name">Arman <span class="says">says :</span></span> 
              <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-122148"><time pubdate datetime="2015-09-26T01:40:16+00:00">September 26, 2015 at 1:40 am</time></a> </span> 
              <span class="edit"></span> 
              <p>It is always a good design to have server side validation since js can be disabled from the browser. If you do have server side and front-end validation, than I don’t see how you will skip duplication of code without doing round trip to the server. Am I missing something here?</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=122148#respond" onclick="return addComment.moveForm( &quot;comment-122148&quot;, &quot;122148&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Arman">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-content --> 
             <div class="fix"></div> 
            </div>
            <!-- /.comment-container --> 
            <div class="fix"></div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even depth-2" id="li-comment-130677"> <a name="comment-130677"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/bee2d23cc97c0b3027e4746397362dd7?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/bee2d23cc97c0b3027e4746397362dd7?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-130677" class="comment-content"> 
            <span class="name">Alex <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-130677"><time pubdate datetime="2016-09-27T09:52:16+00:00">September 27, 2016 at 9:52 am</time></a> </span> 
            <span class="edit"></span> 
            <p>I also use C#. Also was thinking about code reuse, but what about security? If someone may find a bug in your validation logic they may use it. When you’ve got 2 implementations and 2nd one is a black box to hack the system is not that easy.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=130677#respond" onclick="return addComment.moveForm( &quot;comment-130677&quot;, &quot;130677&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Alex">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-41348"> <a name="comment-41348"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/603cf88358d180134280ec10b6b3f0cd?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/603cf88358d180134280ec10b6b3f0cd?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-41348" class="comment-content"> 
          <span class="name"><a href="http://nicholasabrams.com" rel="external nofollow" class="url">Asshole</a> <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-41348"><time pubdate datetime="2014-09-11T23:25:18+00:00">September 11, 2014 at 11:25 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>SOoo how long have you been working for Microsoft again?</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=41348#respond" onclick="return addComment.moveForm( &quot;comment-41348&quot;, &quot;41348&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Asshole">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-odd thread-alt depth-1" id="li-comment-49151"> <a name="comment-49151"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/8a0a5bfc8cfab72b44be9547e56b8309?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/8a0a5bfc8cfab72b44be9547e56b8309?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-49151" class="comment-content"> 
          <span class="name">Teemo <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-49151"><time pubdate datetime="2014-10-05T09:44:32+00:00">October 5, 2014 at 9:44 am</time></a> </span> 
          <span class="edit"></span> 
          <p>“It would be very foolish and naive for a .NET developer to use .NET to solve every single problem just because “that’s what we use.” </p> 
          <p>F _ _ _ you , if you can’t decide on a your main preference, don’t be so politically correct . As .NET developer I will solve every singe problem with .NET !!! why ? because I don’t care about the Node JS buzz , and I don’t use annoying-script-language when I have Visual Studio which is much better , I don’t work @ Microsfot , and I don’t have sympathy for Microsoft , sometimes I really want to kill Microsoft .</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=49151#respond" onclick="return addComment.moveForm( &quot;comment-49151&quot;, &quot;49151&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Teemo">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-55697"> <a name="comment-55697"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/9e7ee1c05728775d6292b0eb87831854?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/9e7ee1c05728775d6292b0eb87831854?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-55697" class="comment-content"> 
          <span class="name">Sloedough <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-55697"><time pubdate datetime="2014-10-20T21:33:22+00:00">October 20, 2014 at 9:33 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>.NET vs. Mono vs. Node.js. Sometimes it is best to step back and look at the whole picture.</p> 
          <p>Is using one language over another better? Is one platform better than the other? No! It is all about using the best tools for the job at hand.</p> 
          <p>I am not jumping in head first with node.js, but I am weighing the pros and cons of many different platforms. And not just “New” or “Fast” but risk vs. profit. And so far Node.js benefits are outweighing the risks, even the risks in this article.</p> 
          <p>I will not know until I benchmark each platform with the most intensive parts of my logic, based on my needs. Game On!</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=55697#respond" onclick="return addComment.moveForm( &quot;comment-55697&quot;, &quot;55697&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Sloedough">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment even depth-2" id="li-comment-76226"> <a name="comment-76226"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/5ea334393220d3466156a5a80ca1e81f?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/5ea334393220d3466156a5a80ca1e81f?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-76226" class="comment-content"> 
            <span class="name">Ray Long <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-76226"><time pubdate datetime="2014-12-04T12:29:12+00:00">December 4, 2014 at 12:29 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>Not all technologies are created equally. Sometimes, a particular framework/tool/etc. is objectively better than the competition, but I don’t think a priori blanket statements (based on one’s personal bias) over which tool is the best are meaningful since due diligence really demands bench-marking and evaluating each part of a system’s design.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=76226#respond" onclick="return addComment.moveForm( &quot;comment-76226&quot;, &quot;76226&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Ray Long">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-73521"> <a name="comment-73521"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/55502f40dc8b7c769880b10874abc9d0?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/55502f40dc8b7c769880b10874abc9d0?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-73521" class="comment-content"> 
          <span class="name">Shawn <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-73521"><time pubdate datetime="2014-11-27T17:42:14+00:00">November 27, 2014 at 5:42 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>For me, migrating towards a not-only-Microsoft world I settled on Javascript for the client and Scala on the server. No need for limiting ourselves to just Nodejs.</p> 
          <p>Scala is a superset of both C# and javascript in terms of functionality and expressive power. It has an even stronger type system than C# while simultaneously embracing a functional paradigm. Combined with Akka, it is a superfast, super powerful combination for building systems that scale from tiny to Netflix.</p> 
          <p>Javascript (and HTML) is the most ubiquitous client side technology, period. Nodejs is great for native javascript tooling (e.g. stylus, grunt/gulp, etc.).</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=73521#respond" onclick="return addComment.moveForm( &quot;comment-73521&quot;, &quot;73521&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Shawn">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-even depth-1" id="li-comment-75697"> <a name="comment-75697"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/349d189cdf318b5a404e19e1ac503cdb?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/349d189cdf318b5a404e19e1ac503cdb?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-75697" class="comment-content"> 
          <span class="name">Evert Wiesenekker <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-75697"><time pubdate datetime="2014-12-03T09:31:00+00:00">December 3, 2014 at 9:31 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Highly interesting article. I am mainly a C# developer which dropped MVC and Web Forms in favour of AngularJS for the client. For the server I use C# and ServiceStack for supplying REST services to my clients. If I (for fun) and experimental reasons rebuild my server to NodeJS will I have the same flexibility? For example C# has Linq and I can use constructions like:</p> 
          <p> results.OrderBy(t =&gt; t).Skip(request.Skip).Take(request.Take).ToList();</p> 
          <p>My datastore is now Reddis which ServiceStack has a a very good support for, like:</p> 
          <p> using (var redis = RedisManager.GetClient())<br> {<br> var redisObject = redis.As();<br> return redisObject.GetValue(someId));<br> }</p> 
          <p>I very much like serialisation of strongly typed classes to and from Reddis. I saw some NodeJS Reddis clients but get the feeling I will loose a lot of functionality and the risk of non maintained client libraries.</p> 
          <p>As I can see a server is very easily created with NodeJS (and OWIN) but what if you have 1 virtual server which serves different websites. I now use IIS which can easily be configured using the bindings option.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=75697#respond" onclick="return addComment.moveForm( &quot;comment-75697&quot;, &quot;75697&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Evert Wiesenekker">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-83193"> <a name="comment-83193"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/843f09bbfebfa945c178c8204cbe1de8?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/843f09bbfebfa945c178c8204cbe1de8?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-83193" class="comment-content"> 
          <span class="name">Shine <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-83193"><time pubdate datetime="2014-12-24T01:07:04+00:00">December 24, 2014 at 1:07 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Great post.</p> 
          <p>But it didn’t mention that with micro services architecture and node package like PM2 or even a few lines of javascript spawning child processes in a stateless application can make the problem of blocking thread reduced to minimal.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=83193#respond" onclick="return addComment.moveForm( &quot;comment-83193&quot;, &quot;83193&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Shine">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-even depth-1" id="li-comment-86012"> <a name="comment-86012"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/363ae2f80e22e23a05bf9f5efbcb18a6?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/363ae2f80e22e23a05bf9f5efbcb18a6?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-86012" class="comment-content"> 
          <span class="name">Alex <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-86012"><time pubdate datetime="2015-01-01T02:16:58+00:00">January 1, 2015 at 2:16 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Where are the new benchmarks WEB API 2 OWIN vs Nodejs ?</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=86012#respond" onclick="return addComment.moveForm( &quot;comment-86012&quot;, &quot;86012&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Alex">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-95438"> <a name="comment-95438"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/d125c7ca64e01ec1c39bc917eed6b76c?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/d125c7ca64e01ec1c39bc917eed6b76c?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-95438" class="comment-content"> 
          <span class="name">Alex <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-95438"><time pubdate datetime="2015-01-30T22:05:41+00:00">January 30, 2015 at 10:05 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>I have been using Node.js for two years now. It wasn’t my choice, the company who hired me insisted on using it. There are certainly advantages in terms of quick setup and deployment, but on the other hand people tend to forget that pure Javascript is a trouble on its own. It has caused so much problems to our development team when they needed to introduce new features and refactor code. You don’t get any warnings and red flags when referencing a non-existing variable, a simple typo will eventually make your code crash, but you would find out only when that particular piece code gets executed on the server. Neither do you get a warning if you pass an incorrect argument to a function. It lacks code readability, you’d see a function that someone else has written it, and you expect that you’d be able to reuse it, but wait… you can’t tell what arguments it actually receives just by looking at their names, especially if it accepts an object. What about the output of the function? You can’t tell that either, you need to read the entire code to figure it out. Do I even need to mention the callback hell and how ugly code can get? Sure, some of these issues can be overcome just by using Typescript and write unit and integration tests, which is what I strongly recommend. But what about autcomplete i.e intellisense? It sure has an effect on productivity on the developer, it wasn’t invented for nothing. Do you know how many times while writing I wished it’d give me precise suggestions for a method call based on the definition of the module or object? The countless times I needed to find the definition of a function by using Search instead of just clicking on it. I can go on until tomorrow and tell how Node.js can have a negative effect on a developer productivity. I’d recommend use it only if you have to, if it fits the purpose, and you want to do something quick and simple, but I certainly wouldn’t advise you to use it for complex enterprise projects where data integrity is crucial.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=95438#respond" onclick="return addComment.moveForm( &quot;comment-95438&quot;, &quot;95438&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Alex">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment even depth-2" id="li-comment-107063"> <a name="comment-107063"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/9f0e0f8aa78d95826c02973bd64deafd?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/9f0e0f8aa78d95826c02973bd64deafd?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-107063" class="comment-content"> 
            <span class="name">Jonh <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-107063"><time pubdate datetime="2015-03-16T08:56:59+00:00">March 16, 2015 at 8:56 am</time></a> </span> 
            <span class="edit"></span> 
            <p>Check this:</p> 
            <p>Node.js plugin for IntelliJ<br> <a href="https://www.jetbrains.com/idea/features/nodejs.html" rel="nofollow">https://www.jetbrains.com/idea/features/nodejs.html</a></p> 
            <p>Node.js Tools for Visual Studio<br> <a href="http://nodejstools.codeplex.com" rel="nofollow">http://nodejstools.codeplex.com</a></p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=107063#respond" onclick="return addComment.moveForm( &quot;comment-107063&quot;, &quot;107063&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Jonh">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> 
          <ul class="children"> 
           <li class="comment odd alt depth-3" id="li-comment-130659"> <a name="comment-130659"></a> 
            <div class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://2.gravatar.com/avatar/2b17b9de76c15d39be7a01530ff851b7?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/2b17b9de76c15d39be7a01530ff851b7?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
             </div> 
             <div id="comment-130659" class="comment-content"> 
              <span class="name">mac <span class="says">says :</span></span> 
              <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-130659"><time pubdate datetime="2016-09-26T10:03:51+00:00">September 26, 2016 at 10:03 am</time></a> </span> 
              <span class="edit"></span> 
              <p>I think experts in js should know, js intellisense will never be good as c# or java. so don’t sell it.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=130659#respond" onclick="return addComment.moveForm( &quot;comment-130659&quot;, &quot;130659&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to mac">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-content --> 
             <div class="fix"></div> 
            </div>
            <!-- /.comment-container --> 
            <div class="fix"></div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even depth-2" id="li-comment-129354"> <a name="comment-129354"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/4a4562a940a8f374b24ac92ec2a8b517?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/4a4562a940a8f374b24ac92ec2a8b517?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-129354" class="comment-content"> 
            <span class="name">Richard Eng <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-129354"><time pubdate datetime="2016-06-21T08:57:55+00:00">June 21, 2016 at 8:57 am</time></a> </span> 
            <span class="edit"></span> 
            <p>Agree 100%. JavaScript is a truly execrable language. I would use Node if it was based on a better language like Go or Elixir. I’d use Go anyway; it’s better at concurrency and execution speed than Node (with JavaScript).</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=129354#respond" onclick="return addComment.moveForm( &quot;comment-129354&quot;, &quot;129354&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Richard Eng">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt depth-2" id="li-comment-136213"> <a name="comment-136213"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/b5cbfd130bba28e8ab5b6504dcbb733d?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/b5cbfd130bba28e8ab5b6504dcbb733d?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-136213" class="comment-content"> 
            <span class="name">Chris Cummings <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-136213"><time pubdate datetime="2017-08-16T23:09:28+00:00">August 16, 2017 at 11:09 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>I totally agree. The biggest cost in software is development and support. JavaScript is terrible and I just don’t get how the industry is so willing to throw away 40 years of compiler technology to switch to an unsafe / untyped language. This could be an even worse mistake like back in the 80s when C was adopted as the de-facto language with a heap-based memory model with no bounds checking. This was all done in the name of performance and gave birth to the whole virus nightmare. There should have been counted strings. The performance argument against bounds check was bogus. How much CPU time was wasted in the strlen() function? How must time was spent figuring out heap corruption bugs? Having JavaScript on the server is going to cost a lot of wasted time…</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=136213#respond" onclick="return addComment.moveForm( &quot;comment-136213&quot;, &quot;136213&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Chris Cummings">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-even depth-1" id="li-comment-101010"> <a name="comment-101010"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/2dcffc252622a9e2c076815d6a3d7cfd?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/2dcffc252622a9e2c076815d6a3d7cfd?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-101010" class="comment-content"> 
          <span class="name">Geraman <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-101010"><time pubdate datetime="2015-02-18T18:53:17+00:00">February 18, 2015 at 6:53 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>The benchmark was run on a Windows Server 2008 R2, hosted on an c1.medium Amazon EC2 –instance.<br> That’s the same as running nodejs in linux.</p> 
          <p>In my opinion a real benchmark, would be two identical quipos one another C # + Windows + Linux nodejs because in very few cases nodejs be in a windows server in a production environment.</p> 
          <p>But, as this explains: <a href="https://www.paypal-engineering.com/2013/11/22/node-js-at-paypal/" rel="nofollow">https://www.paypal-engineering.com/2013/11/22/node-js-at-paypal/</a></p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=101010#respond" onclick="return addComment.moveForm( &quot;comment-101010&quot;, &quot;101010&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Geraman">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-105694"> <a name="comment-105694"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/3df3eef01863817b0876b3353ced5c7e?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/3df3eef01863817b0876b3353ced5c7e?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-105694" class="comment-content"> 
          <span class="name">Ray <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-105694"><time pubdate datetime="2015-03-11T07:40:59+00:00">March 11, 2015 at 7:40 am</time></a> </span> 
          <span class="edit"></span> 
          <p>To return to the point that Dmitry made on March 27 2014, How will the OWIN rather than NodeJS approach work on non windows OSs?</p> 
          <p>Does MONO (on say Linux) support all the .Net 4.5 async goodness?</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=105694#respond" onclick="return addComment.moveForm( &quot;comment-105694&quot;, &quot;105694&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Ray">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-even depth-1" id="li-comment-109676"> <a name="comment-109676"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/d2128decfe579e92b4397dc9437566fc?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/d2128decfe579e92b4397dc9437566fc?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-109676" class="comment-content"> 
          <span class="name">Richard Smith <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-109676"><time pubdate datetime="2015-03-27T16:33:10+00:00">March 27, 2015 at 4:33 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>I’ve come late to the conversation, but as a .net developer who’s only really started looking at node in the last few weeks this was a well articulated and informative article. Thanks.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=109676#respond" onclick="return addComment.moveForm( &quot;comment-109676&quot;, &quot;109676&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Richard Smith">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-117990"> <a name="comment-117990"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/6acc4195552dc2f1d816b310a7cfd4e9?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/6acc4195552dc2f1d816b310a7cfd4e9?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-117990" class="comment-content"> 
          <span class="name">chosenbreed <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-117990"><time pubdate datetime="2015-07-01T16:47:29+00:00">July 1, 2015 at 4:47 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>My thanks to the author for taking the time to shed some light on this subject. I’ve not read all the comments but as usually there are those who totally agree all the way to those who disagree. I for one think this is part of a healthy ecosystem. Having said that I do wish there was less of talking down of alternative programming languages, paradigms, platforms, etc. You’re excited about something? Rave about it all you want. Leave the smearing to the marketing dudes and politicians (I think they should do it less too!).</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=117990#respond" onclick="return addComment.moveForm( &quot;comment-117990&quot;, &quot;117990&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to chosenbreed">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment even depth-2" id="li-comment-119392"> <a name="comment-119392"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/d32bc1f45567c54222ba3c8c0ae60ba0?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/d32bc1f45567c54222ba3c8c0ae60ba0?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-119392" class="comment-content"> 
            <span class="name">Jerry T <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-119392"><time pubdate datetime="2015-07-28T17:03:41+00:00">July 28, 2015 at 5:03 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>Cheers to that. I’m always surprised how every blog post has someone screaming profanities just b/c someone else decided to use another programming language than what you are using. And many times the anger is over something so silly as the choice of a word. “You said ‘all’ when you should have said ‘some’. YOU SHOULD DIE!!!!!!!!!!” Why do so many developers have such anger issues? ?? Oh well, at least we have good quality blog posts like this to benefit from, even if the comments deteriorate into flame wars.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=119392#respond" onclick="return addComment.moveForm( &quot;comment-119392&quot;, &quot;119392&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Jerry T">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-119590"> <a name="comment-119590"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/1534b47ede6c21532ad50b5facfa921b?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/1534b47ede6c21532ad50b5facfa921b?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-119590" class="comment-content"> 
          <span class="name">John <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-119590"><time pubdate datetime="2015-07-31T17:54:34+00:00">July 31, 2015 at 5:54 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>Just wanted to thank the author for a very well written and informative article.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=119590#respond" onclick="return addComment.moveForm( &quot;comment-119590&quot;, &quot;119590&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to John">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-odd thread-alt depth-1" id="li-comment-126476"> <a name="comment-126476"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/85981234d940819396b8945e4c275136?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/85981234d940819396b8945e4c275136?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-126476" class="comment-content"> 
          <span class="name">Mani <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-126476"><time pubdate datetime="2016-02-05T06:21:17+00:00">February 5, 2016 at 6:21 am</time></a> </span> 
          <span class="edit"></span> 
          <p>I have good experience in both C# and javascript.</p> 
          <p>For all my mobile development I use Javascript lot (React-Native, React). So I thought of give a try to nodejs for my server implementation.</p> 
          <p>Node js pros:<br> ————-<br> Very attractive<br> Easy to start<br> Lots of modules in npm<br> Runs any where</p> 
          <p>Cons<br> —-<br> Lots of modules in npm, Really confused to select a proper one<br> Javascript is not nice when my project grown</p> 
          <p>Many moved from AngularJS to React, the reason is on AngularJS we have to write more lines of JS. But in React everything is organized using tags, This clearly shows that JS is not easy for complex apps. Think of writing an whole BANKing system in Node, it will be too hard. However we can move complex logics to Java or C#, and can create API using node js.</p> 
          <p>C# fits everywhere, from large apps to small API. The only place it lacks is number of modules in nuget. however it has everything to develop application on any scale.</p> 
          <p>Finally I had hard time to select proper ORM for nodejs, tried many popular ones. not that great, everything has many features. but some are not implemented in right way, it was hard to understand my own code after a week. Now moved to c#, I dont need to write a comment for my code, it is self explained. </p> 
          <p>But if the team has high technical strength,Javascript can be chosen.</p> 
          <p>I will continue to use Javascript for client and C# for server. Waiting for .net core so that I will move to linux.</p> 
          <p>c# pros<br> ——-<br> fits everywhere small to complex application<br> performance is near or greater than node js<br> good readable code<br> static typed, and supports dynamic too, so select your style<br> battle tested opensource libraries (eg: Dapper, ServiceStack, Nancy etc…)<br> Asp.net Identity</p> 
          <p>c# cons<br> ——-<br> not much community initiative, but improving<br> Many people has anti Microsoft mind set (don’t know why)<br> Can run on linux, but there is some level of hesitation on industry to use it on linux</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=126476#respond" onclick="return addComment.moveForm( &quot;comment-126476&quot;, &quot;126476&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Mani">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-126916"> <a name="comment-126916"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/bac56aab5a32f5ce5a12afab919db486?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/bac56aab5a32f5ce5a12afab919db486?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-126916" class="comment-content"> 
          <span class="name">Tim <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-126916"><time pubdate datetime="2016-02-29T12:04:29+00:00">February 29, 2016 at 12:04 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>Good read, and highlights some of the reasons I was avoiding of node at first.</p> 
          <p>while I have found its great for serving up my angular static content and simple crud oriented API for ajax calls I don’t like the idea of complex logic in javascript. I couldn’t stand going back to nested loops over LINQ.</p> 
          <p>That being said for simple apps I actually prefer node / express to MVC / Web API because of how fast I can get things done, and the fact that Linux hosting is almost always substantially cheaper. </p> 
          <p>deploying a node app + mongo to say Digital Ocean will cost you tens of dollars vs Azure or AWS where your looking at potentially a hundred or more for IIS and SQL Server to power .NET apps. </p> 
          <p>I am sure this will improve over time especially as dot net core gets more Linux friendly but as of now .NET is more expensive and more complex for simple needs.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=126916#respond" onclick="return addComment.moveForm( &quot;comment-126916&quot;, &quot;126916&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Tim">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-odd thread-alt depth-1" id="li-comment-127123"> <a name="comment-127123"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/7f084e017bfd514e688b72b61d8bc981?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/7f084e017bfd514e688b72b61d8bc981?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-127123" class="comment-content"> 
          <span class="name">Alan <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-127123"><time pubdate datetime="2016-03-16T06:19:25+00:00">March 16, 2016 at 6:19 am</time></a> </span> 
          <span class="edit"></span> 
          <p>This is great, same when stupid Java people come to tell about the most stupid programming language Scala</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=127123#respond" onclick="return addComment.moveForm( &quot;comment-127123&quot;, &quot;127123&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Alan">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-127163"> <a name="comment-127163"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/2ba072f43305743451d5c87891d224d4?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/2ba072f43305743451d5c87891d224d4?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-127163" class="comment-content"> 
          <span class="name"><a href="http://wisdomofjim.com" rel="external nofollow" class="url">Jimmy</a> <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-127163"><time pubdate datetime="2016-03-20T10:39:26+00:00">March 20, 2016 at 10:39 am</time></a> </span> 
          <span class="edit"></span> 
          <p>If node.js is using a C++ thread for each request then why would it not be good at cpu-intensive calculations?</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=127163#respond" onclick="return addComment.moveForm( &quot;comment-127163&quot;, &quot;127163&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Jimmy">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-odd thread-alt depth-1" id="li-comment-127182"> <a name="comment-127182"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/2fa840a76e98224b92e63c913f25afdc?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/2fa840a76e98224b92e63c913f25afdc?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-127182" class="comment-content"> 
          <span class="name">Tristan <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-127182"><time pubdate datetime="2016-03-21T12:59:37+00:00">March 21, 2016 at 12:59 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>Thank you for the article! Nicely done. When we get accustomed to our tools, we can do great things in a short time. Like a carpenter with her trusty toolbox that grows by a tool / technique here and there. I have come to leverage the new RESTful api support in WCF services using Visual Studio and find that I can spin up pretty much anything a modern nodejs based stack can do in just about the same time. This is because I have my own boilerplate and plenty of examples in my toolkit. That being said however, it is absolutely true that there is a cost associated to managing Windows servers, not only in licensing, but the volume of virtual hardware resources required to make the whole thing work. I’m talking about something as “everyday” as an architecture that can support a thousand clients or so. So despite being more comfortable with .net , I can see the benefit of firing up an array of docker images running Node (and other things the cool kids are running) as logical nodes and peppering these about a virtual infrastructure. Much less costs per logical functional. I’m not too sure that development time would be dramatically less than a standard .net approach where the teams already have boilerplate and standards. All my ramblings to say, that the technical merit of Node is clear .. it works, and that’s really all that matters. Beyond the technical, there are costs. Costs to setup, license, maintain ..etc etc. It certainly seems that Node would win this battle. But is this a battle between .NET and Node? .. or is it really the old argument of Linux or Windows. Clearly anybody here running node in prod would most likely opt for running on Linux unless they were forced to use Windows. My two cents.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=127182#respond" onclick="return addComment.moveForm( &quot;comment-127182&quot;, &quot;127182&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Tristan">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-128638"> <a name="comment-128638"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/96a3c8de6f29661b19d28af9e09f89fc?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/96a3c8de6f29661b19d28af9e09f89fc?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-128638" class="comment-content"> 
          <span class="name">ZP <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-128638"><time pubdate datetime="2016-05-11T21:20:12+00:00">May 11, 2016 at 9:20 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>You forgot node cluster. The below is targeted at probably most of you. Sorry if I sound offended, I am, and no apologies for offending you will be offered.</p> 
          <p>I’ve worked with .NET for 10 years, Java for 7. Written in Scala and Clojure. I prefer nodejs because it is simpler for a majority of development tasks.</p> 
          <p>Point in my case, your mileage may vary depending on how quickly you adapt. I implemented an isomorphic CQRS implementation in 1.5 weeks with Node. Similar implementations took 12 weeks in Java and C#.</p> 
          <p>It seems the entire argument here is also predicated on the fact that you are running a single node instance. Ever wonder why it’s called node? Who does that outside of a development environment. You use node cluster or nginx and handle your own scheduling. You can use koa for longer processing. Yes this is work. Node is a toolkit as much as it is a language. Yes you get some of this this for free by using languages like c# or Java and web servers like IIS or tomcat.</p> 
          <p>You also get a simplified container, an enormous library of free code and a lot of language flexibility provided you understand the concept of scope and closures. Can you screw up and write bad code? Yes. This includes every language. I would posit that it is harder not easier to write good code in node than it is in a strongly typed language. You have fewer guardrails after all. So all you guys out there making statements about how node programmers aren’t real programmers are honestly, a little funny and you should probably go back to standup instead of posting contentious statements online.</p> 
          <p>If you don’t like it, stick to C#, or Java, or whatever you write in. But please don’t make blanket statements about things you have an obvious bias about. It’s like you’re the anti “node guy”.</p> 
          <p>Netflix OSS includes node. Linked in runs node on 3 servers for its entire network. Still think it’s not production capable, fast, scales, and can compete with “enterprise class languages”? Guess all those guys are idiots and you’re right.</p> 
          <p>Would I write an ANN in node? No. Would I write a 3D fps in node? No. Does it have its applications, yes. Are they wide and cover most of the common usages of languages like C# and Java? Yes.</p> 
          <p>It’s a tool, like any other. I know 12 languages, and JavaScript and node is just one I use to solve problems.</p> 
          <p>Anyone advocating blanket statements like this in either direction needs to give up their developer card.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=128638#respond" onclick="return addComment.moveForm( &quot;comment-128638&quot;, &quot;128638&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to ZP">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment even depth-2" id="li-comment-132053"> <a name="comment-132053"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/1a8c48d4a10515a0a415d3d5dd83d625?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/1a8c48d4a10515a0a415d3d5dd83d625?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-132053" class="comment-content"> 
            <span class="name">J <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-132053"><time pubdate datetime="2016-12-13T04:22:33+00:00">December 13, 2016 at 4:22 am</time></a> </span> 
            <span class="edit"></span> 
            <p>Well said! This article seems rather biased toward .NET. I used to work on .NET for 10 years and I can say after the bloated nonsense, service packs, nuget mess I am happier with Node. </p> 
            <p>Adios .Net</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=132053#respond" onclick="return addComment.moveForm( &quot;comment-132053&quot;, &quot;132053&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to J">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-128774"> <a name="comment-128774"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/527d97f572d4835abd9ce879d501aeb1?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/527d97f572d4835abd9ce879d501aeb1?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-128774" class="comment-content"> 
          <span class="name"><a href="http://bilgewater.co.uk" rel="external nofollow" class="url">Gus</a> <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-128774"><time pubdate datetime="2016-05-15T19:36:57+00:00">May 15, 2016 at 7:36 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>Clearly with what’s been going on with .NET Core this subject needs review. I am looking at Node purely because my friends are using it and having fun with it. However, I use .NET NancyFx and this was not mentioned in this post. Nancy is a brilliant little framework that cuts out all the bloat and trouble from building .NET apps.<br> You can self host or with OWIN: <a href="https://github.com/NancyFx/Nancy/wiki/Hosting-Nancy-with-OWIN" rel="nofollow">https://github.com/NancyFx/Nancy/wiki/Hosting-Nancy-with-OWIN</a><br> And you can run it on Linux or OSX without too much trouble.<br> Nancy also supports async.<br> Although I will take Node for a spin it’s hard to see a real benefit in switching from NancyFx/C#/Razor given how simple it is to get up and running with a Nancy template for VS, a db wrapper like Simpe.Data and a few other essentials.<br> What worries me about Node is myself. Do I trust myself with a language like javascript? The article mentions how the popularity of Node stems in part from the way that devs with a smattering of js knowledge can be up and running in no time. But. Given the easy to fall into pitfalls of js, are they walking headlong into a nightmare? I find js a pretty confusing language to work with compared to C#.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=128774#respond" onclick="return addComment.moveForm( &quot;comment-128774&quot;, &quot;128774&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Gus">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-even depth-1" id="li-comment-129345"> <a name="comment-129345"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/4a4562a940a8f374b24ac92ec2a8b517?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/4a4562a940a8f374b24ac92ec2a8b517?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-129345" class="comment-content"> 
          <span class="name">Richard Eng <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-129345"><time pubdate datetime="2016-06-20T22:46:39+00:00">June 20, 2016 at 10:46 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>I agree that Node is a pretty good piece of technology. The problem I have with Node is that I have to use JavaScript (or TypeScript, which is a strict superset of JavaScript). I think JavaScript is a really, really horrible language.<br> JavaScript is very weakly typed. No other major language is. This explains many of its long list of WATs and WTFs that make JavaScript the butt of many jokes.<br> JavaScript can fail silently for syntactical reasons!!!<br> JavaScript doesn’t have an integer data type. (What??? Say that again.) JavaScript doesn’t have a proper array type.<br> JavaScript requires the use of linters (which are not infallible) just to avoid the many landmines in the language. I can’t think of another language that requires linters. Can you?<br> JavaScript requires added discipline to use properly (see Douglas Crockford’s JavaScript: The Good Parts).<br> I’ll stop now. I could go on and on and on, but you get the point.<br> I’ve used so many languages in my 20+ years in IT (Fortran, Tandem TAL, C, C++, C#, Objective-C, Java, Python, Smalltalk). I’ve never seen anything as execrable as JavaScript. It’s a great pity that Node was based on such a language. Philosophically, then, I have to avoid Node.<br> I much prefer Go language as an alternative. Most of the same benefits, but without the JavaScript crap.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=129345#respond" onclick="return addComment.moveForm( &quot;comment-129345&quot;, &quot;129345&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Richard Eng">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment odd alt depth-2" id="li-comment-129854"> <a name="comment-129854"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/f775a252b219bf57da49f77c00e984db?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/f775a252b219bf57da49f77c00e984db?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-129854" class="comment-content"> 
            <span class="name">Korr <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-129854"><time pubdate datetime="2016-08-01T03:17:13+00:00">August 1, 2016 at 3:17 am</time></a> </span> 
            <span class="edit"></span> 
            <p>It’s fair to say that js has it’s limitations. What about using some of the many js pre-compilers? As a .net dev looking for a more productive stack I’m exploring clojure on node (amongst a lot of other things) and having a good bit of fun.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=129854#respond" onclick="return addComment.moveForm( &quot;comment-129854&quot;, &quot;129854&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Korr">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
         <li class="comment even depth-2" id="li-comment-132054"> <a name="comment-132054"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/1a8c48d4a10515a0a415d3d5dd83d625?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/1a8c48d4a10515a0a415d3d5dd83d625?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-132054" class="comment-content"> 
            <span class="name">J <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-132054"><time pubdate datetime="2016-12-13T04:23:46+00:00">December 13, 2016 at 4:23 am</time></a> </span> 
            <span class="edit"></span> 
            <p>Ever used unit tests? Anyone who doesn’t use unit tests with Node is looking for trouble and this goes for any language.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=132054#respond" onclick="return addComment.moveForm( &quot;comment-132054&quot;, &quot;132054&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to J">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-129940"> <a name="comment-129940"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/e8af45f8919dccce4aaf729fd602b30a?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/e8af45f8919dccce4aaf729fd602b30a?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-129940" class="comment-content"> 
          <span class="name">James <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-129940"><time pubdate datetime="2016-08-05T17:26:09+00:00">August 5, 2016 at 5:26 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>.NET C#,VB.NET… ok, compiled language is fast. Checked, Nodejs javascript a little slower, Checked.</p> 
          <p>In production environment, I present you: The Hell of Microsoft<br> .NET DLL Hell<br> Windows Server Farm License Hell<br> IIS Server Farm Hell<br> SQL Server License Hell</p> 
          <p>Let’s put it this way, if Netflix, Uber, Google, Amazon or PokemonGo used Microsoft .Net, MS will say: </p> 
          <p>“All Your Bases are mine”</p> 
          <p>The truth is Linux, Nodejs (and all the npms), Docker, Postgres, Mongodb, RethinkDB… and a sleth of other open source technologies able to run these enterprises without paying much ‘server licensing’ give us no excuse not to use this wonderful knowledge from Open Source communities.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=129940#respond" onclick="return addComment.moveForm( &quot;comment-129940&quot;, &quot;129940&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to James">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment even depth-2" id="li-comment-132327"> <a name="comment-132327"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/5bc98cddd5d06b2fd0c07a854e7fe15b?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/5bc98cddd5d06b2fd0c07a854e7fe15b?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-132327" class="comment-content"> 
            <span class="name">Rick <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-132327"><time pubdate datetime="2016-12-27T16:20:01+00:00">December 27, 2016 at 4:20 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>Everyone wants to make a living writing software but nobody wants to pay for the software that they use to write that software.</p> 
            <p>It’s an interesting thing that happens in the software world. Imagine a carpenter not wanting to pay for his tools but wanting to get paid for the shelf he built you. Seems a bit odd when you look at it this way doesn’t it?</p> 
            <p>Someone else put this correctly above I think. This is more of the same *nix vs Windows that has been going on for decades. If you’re a Windows person you’re more likely to be cool with .NET and the MS ecosystem. If you’re a *nix person (includes you Mac’s) you’re more likely to seek out other means.</p> 
            <p>Some corporations like having the creator of the entire stack that they can call and blame when things go wrong. They see it as risk avoidance. MS fills that need. Some people like having full control of everything and want to be able to fix it themselves. The *nix world fills that need. These are just human preferences at their core.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=132327#respond" onclick="return addComment.moveForm( &quot;comment-132327&quot;, &quot;132327&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Rick">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-130152"> <a name="comment-130152"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/b55ac6b01736ee435f9d7ab8f07c7272?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/b55ac6b01736ee435f9d7ab8f07c7272?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-130152" class="comment-content"> 
          <span class="name">Peter G <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-130152"><time pubdate datetime="2016-08-23T04:00:49+00:00">August 23, 2016 at 4:00 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Interesting discussion! As a realtime control systems developer it has always been a struggle to try and take advantage of new technologies, either hardware or software, either frameworks or protocols. One thing remains after programming for over 35 years we still haven’t created anything similar to what nature created in terms of the blueprint for life, a cell with DNA. Once we get our heads around that pattern we won’t have to worry about which language, framework or technology is better, faster or cheaper.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=130152#respond" onclick="return addComment.moveForm( &quot;comment-130152&quot;, &quot;130152&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Peter G">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-odd thread-alt depth-1" id="li-comment-131066"> <a name="comment-131066"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/3136549b5902e5aea25e337d4da35155?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/3136549b5902e5aea25e337d4da35155?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-131066" class="comment-content"> 
          <span class="name">tunca <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-131066"><time pubdate datetime="2016-10-21T10:01:46+00:00">October 21, 2016 at 10:01 am</time></a> </span> 
          <span class="edit"></span> 
          <p>.NET Core and Angular 2 is way to go!<br> No place for non strongly typed languages.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=131066#respond" onclick="return addComment.moveForm( &quot;comment-131066&quot;, &quot;131066&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to tunca">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-even depth-1" id="li-comment-132366"> <a name="comment-132366"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://0.gravatar.com/avatar/64d9e1b351d0fa3fc04926bb664bd06e?s=80&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/64d9e1b351d0fa3fc04926bb664bd06e?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-132366" class="comment-content"> 
          <span class="name">Aleksa <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-132366"><time pubdate datetime="2016-12-29T09:47:31+00:00">December 29, 2016 at 9:47 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Just one question. If Node.js was not free and if u have to pay like u have for Microsoft technologies, how many people would use it? NO ONE!</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=132366#respond" onclick="return addComment.moveForm( &quot;comment-132366&quot;, &quot;132366&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Aleksa">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-odd thread-alt depth-1" id="li-comment-133094"> <a name="comment-133094"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/2595f57b217b15ed47218a30abc7615d?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/2595f57b217b15ed47218a30abc7615d?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-133094" class="comment-content"> 
          <span class="name">Technology Dev <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-133094"><time pubdate datetime="2017-02-02T19:50:01+00:00">February 2, 2017 at 7:50 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>I found the comments of this post more interesting (and more annoying) then the post itself. The author is correct in that both .Net and Node (and JS) are great.<br> I’m a .Net developer with over 15 years professional .Net experience, and the last 3 years I’ve been building pure SPA’s, REST API’s (using node/express) and I must admit I do almost 100% JS coding now and only go into C# if I’m doing something client/server. Why? Do I think that Node is hip, and coolness, and do I just want to be one of the cool kids? Well, perhaps I do want all of those things but…not that’s not why I switched. I didn’t one day wake up and say, Node is better than .Net, PEACE! What happened was, I evolved. One day I finally (and reluctantly) migrated from Web Forms to MVC, and not long after that I jumped onto the SPA bandwagon because I liked the nice clean separation, de-coupling, standards-based web development. As a natural result, I learned JavaScript more and more until I was just as good (or probably these days better than) I was at C#. Server’s shouldn’t be dishing out HTML, they should be dishing out JSON, and the website shouldn’t be posting to the server every time the view needs to change, than should be handled client-side and when a data interaction needs to happen, then the two sides talk. After building enough SPA’s, and refining my toolkit, I eventually found myself still working in Visual Studio (the best IDE ever) but just using a Default.aspx page, with an empty code behind, and then folders and folders of javascript for the application logic. It was easier to learn Node/Express than to go WebAPI – because I’ve been doing JS for so long – and like other people mentioned, I like it’s simplicity. Before I knew it, I was a JS/Node guy – and I like it. I work with a bunch of C# developers and we joke around about tech and languages but the reality is you should use what’s simple and consistent. and I find HTML/CSS/JS client-side, and just pure/JS server-side to be a good toolkit. by the way, I was already well-versed in IIS and found IIS-Node to be a good solution to managing Node apps. I think the author mentioned that you don’t want to send a heavy process to Node because its initially single-threaded – but if you use Node-JS that’s not true, IIS will actaully spawn and load-balance Node apps for you based on need. Yes you still need Windows Server but I have that anyway so it’s not a problem for me. I laughed when I read one person’s comment that “JS is not as powerful as C#”. Lol, define powerful? JS is a language that is interpreted by something like V8 (written in C++) which is actually what Node uses. So on the server, you JS in Node is converted into pure C++/C (and some assembly) – it is very powerful, make no mistake. That’s all I have to say, I hope it helps someone.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=133094#respond" onclick="return addComment.moveForm( &quot;comment-133094&quot;, &quot;133094&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Technology Dev">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> 
        <ul class="children"> 
         <li class="comment odd alt depth-2" id="li-comment-135561"> <a name="comment-135561"></a> 
          <div class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/17fac21a4183b7ceb85abd2023631dab?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/17fac21a4183b7ceb85abd2023631dab?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
           </div> 
           <div id="comment-135561" class="comment-content"> 
            <span class="name">rickg <span class="says">says :</span></span> 
            <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-135561"><time pubdate datetime="2017-06-27T12:40:22+00:00">June 27, 2017 at 12:40 pm</time></a> </span> 
            <span class="edit"></span> 
            <p>Thank you, your comment helped me a ton. I’m a .net stack c# guy with 15 or so years pro experiences and it sounds like we have a similar mindset.</p> 
            <p>Thanks again for the excellent and thorough comment.</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=135561#respond" onclick="return addComment.moveForm( &quot;comment-135561&quot;, &quot;135561&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to rickg">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-content --> 
           <div class="fix"></div> 
          </div>
          <!-- /.comment-container --> 
          <div class="fix"></div> </li>
         <!-- #comment-## --> 
        </ul>
        <!-- .children --> </li>
       <!-- #comment-## --> 
       <li class="comment even thread-even depth-1" id="li-comment-134494"> <a name="comment-134494"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://1.gravatar.com/avatar/78ac718564bb3885d0a645251d079e1d?s=80&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/78ac718564bb3885d0a645251d079e1d?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-134494" class="comment-content"> 
          <span class="name">Jim Wilson <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-134494"><time pubdate datetime="2017-04-20T16:16:47+00:00">April 20, 2017 at 4:16 pm</time></a> </span> 
          <span class="edit"></span> 
          <p>Might want to rerun your analysis with dotnet core without web api middleware vs. node.</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=134494#respond" onclick="return addComment.moveForm( &quot;comment-134494&quot;, &quot;134494&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Jim Wilson">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
       <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-136024"> <a name="comment-136024"></a> 
        <div class="comment-container"> 
         <div class="avatar">
          <img alt="" src="http://2.gravatar.com/avatar/881df4edb4314abde3a60fee4bdba96f?s=80&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/881df4edb4314abde3a60fee4bdba96f?s=160&amp;d=mm&amp;r=g 2x" class="avatar avatar-80 photo" height="80" width="80">
         </div> 
         <div id="comment-136024" class="comment-content"> 
          <span class="name"><a href="http://www.damianofusco.com" rel="external nofollow" class="url">Damiano</a> <span class="says">says :</span></span> 
          <span class="date"> <a href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/#comment-136024"><time pubdate datetime="2017-08-02T09:28:26+00:00">August 2, 2017 at 9:28 am</time></a> </span> 
          <span class="edit"></span> 
          <p>Ok can you show me the .NET equivalent of a setInterval and setTimeout keeping in mind that code will have to be invoked from an API end point.</p> 
          <p>(btw I have been 80% of my career mostly .NET, yet I think node.js is far superior because of its simplicity and flexibility, also because of javascript of course)</p> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://www.haneycodes.net/to-node-js-or-not-to-node-js/?replytocom=136024#respond" onclick="return addComment.moveForm( &quot;comment-136024&quot;, &quot;136024&quot;, &quot;respond&quot;, &quot;494&quot; )" aria-label="Reply to Damiano">Reply</a> 
          </div>
          <!-- /.reply --> 
         </div>
         <!-- /comment-content --> 
         <div class="fix"></div> 
        </div>
        <!-- /.comment-container --> 
        <div class="fix"></div> </li>
       <!-- #comment-## --> 
      </ol> 
      <div id="pings"> 
       <h3>Trackbacks / Pingbacks</h3> 
       <ol class="pinglist"> 
        <li class="pingback even thread-even depth-1" id="li-comment-123803"> <span class="author"><a href="https://jesperbjerre.wordpress.com/2015/11/02/node-js-or-asp-net/" rel="external nofollow" class="url">Node.js or ASP.NET? | work-smarter.dk</a></span> - <span class="date">November 2, 2015</span> </li>
        <!-- #comment-## --> 
        <li class="pingback odd alt thread-odd thread-alt depth-1" id="li-comment-125214"> <span class="author"><a href="https://jesperbjerre.wordpress.com/2015/12/04/mean-stack/" rel="external nofollow" class="url">MEAN stack | work-smarter.dk</a></span> - <span class="date">December 4, 2015</span> </li>
        <!-- #comment-## --> 
        <li class="pingback even thread-even depth-1" id="li-comment-126906"> <span class="author"><a href="https://insightsdelight.wordpress.com/2014/09/21/a-technology-net-architects-confession/" rel="external nofollow" class="url">A Technology (Microsoft Technologies) Architect’s Confession | Insight's Delight</a></span> - <span class="date">February 29, 2016</span> </li>
        <!-- #comment-## --> 
       </ol> 
      </div>
      <!-- /#pings --> 
      <div id="respond" class="comment-respond"> 
       <h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/to-node-js-or-not-to-node-js/#respond" style="display:none;">Cancel reply</a></small></h3> 
       <form action="http://www.haneycodes.net/wp-comments-post.php" method="post" id="commentform" class="comment-form"> 
        <p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p>
        <p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required></textarea></p>
        <p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required="true" required></p> 
        <p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required="true" required></p> 
        <p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200"></p> 
        <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="494" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"> </p>
        <p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="fc49aa8b9b"></p>
        <p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="36"></p> 
       </form> 
      </div>
      <!-- #respond --> 
     </div>
     <!-- #comments --> 
    </div>
    <!-- /#main --> 
    <div id="sidebar" class="col-right"> 
     <div id="text-3" class="widget widget_text">
      <h3>Bio</h3> 
      <div class="textwidget">
       <div style="text-align: justify; padding-bottom: 20px;"> 
        <b>I am currently an Engineering Manager at <a href="http://www.stackoverflow.com">Stack Overflow</a>. I love craft beer, movies, and video games.</b> 
       </div> 
       <div style="text-align: center; padding-bottom: 2em;"> 
        <a href="https://twitter.com/haneycodes" class="twitter-follow-button" data-show-count="false" data-lang="en" data-size="large">Follow @haneycodes</a> 
        <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script> 
       </div> 
       <div style="text-align: center; padding-bottom: 2em;"> 
        <a href="http://stackoverflow.com/users/2420979/haney"> <img src="http://stackoverflow.com/users/flair/2420979.png" width="208" height="58" alt="profile for Haney at Stack Overflow, Q&amp;A for professional and enthusiast programmers" title="profile for Haney at Stack Overflow, Q&amp;A for professional and enthusiast programmers"> </a> 
       </div> 
       <div style="text-align: center"> 
        <iframe src="https://githubbadge.appspot.com/haneytron?s=1" style="border: 0;height: 142px;width: 200px;overflow: hidden;" frameborder="0"></iframe> 
       </div> 
      </div> 
     </div> 
     <div id="recent-posts-2" class="widget widget_recent_entries"> 
      <h3>Recent Posts</h3> 
      <ul> 
       <li> <a href="http://www.haneycodes.net/on-hiring-developers-are-like-stocks/">On Hiring: Developers Are Like Stocks</a> </li> 
       <li> <a href="http://www.haneycodes.net/gitlab-data-loss-a-discussion/">GitLab Data Loss: A Discussion</a> </li> 
       <li> <a href="http://www.haneycodes.net/dev-team-interactions-conducting-good-code-reviews/">Dev Team Interactions: Conducting Good Code Reviews</a> </li> 
       <li> <a href="http://www.haneycodes.net/dev-team-interactions-accountability-blame/">Dev Team Interactions: Accountability &amp; Blame</a> </li> 
       <li> <a href="http://www.haneycodes.net/custom-asp-net-mvc-action-result-cache-attribute/">Custom ASP.NET MVC Action Result Cache Attribute</a> </li> 
      </ul> 
     </div> 
     <div id="tag_cloud-2" class="widget widget_tag_cloud">
      <h3>Tags</h3>
      <div class="tagcloud">
       <a href="http://www.haneycodes.net/tag/net/" class="tag-cloud-link tag-link-41 tag-link-position-1" style="font-size: 22pt;" aria-label=".net (30 items)">.net</a> 
       <a href="http://www.haneycodes.net/tag/analysis/" class="tag-cloud-link tag-link-38 tag-link-position-2" style="font-size: 14.470588235294pt;" aria-label="analysis (6 items)">analysis</a> 
       <a href="http://www.haneycodes.net/tag/async/" class="tag-cloud-link tag-link-62 tag-link-position-3" style="font-size: 10.117647058824pt;" aria-label="async (2 items)">async</a> 
       <a href="http://www.haneycodes.net/tag/attitude/" class="tag-cloud-link tag-link-9 tag-link-position-4" style="font-size: 14.470588235294pt;" aria-label="attitude (6 items)">attitude</a> 
       <a href="http://www.haneycodes.net/tag/behavior/" class="tag-cloud-link tag-link-8 tag-link-position-5" style="font-size: 11.529411764706pt;" aria-label="behavior (3 items)">behavior</a> 
       <a href="http://www.haneycodes.net/tag/c/" class="tag-cloud-link tag-link-42 tag-link-position-6" style="font-size: 20.705882352941pt;" aria-label="c# (23 items)">c#</a> 
       <a href="http://www.haneycodes.net/tag/caching/" class="tag-cloud-link tag-link-66 tag-link-position-7" style="font-size: 11.529411764706pt;" aria-label="caching (3 items)">caching</a> 
       <a href="http://www.haneycodes.net/tag/career/" class="tag-cloud-link tag-link-33 tag-link-position-8" style="font-size: 16.235294117647pt;" aria-label="career (9 items)">career</a> 
       <a href="http://www.haneycodes.net/tag/commentary/" class="tag-cloud-link tag-link-29 tag-link-position-9" style="font-size: 8pt;" aria-label="commentary (1 item)">commentary</a> 
       <a href="http://www.haneycodes.net/tag/compensation/" class="tag-cloud-link tag-link-15 tag-link-position-10" style="font-size: 8pt;" aria-label="compensation (1 item)">compensation</a> 
       <a href="http://www.haneycodes.net/tag/conference/" class="tag-cloud-link tag-link-49 tag-link-position-11" style="font-size: 10.117647058824pt;" aria-label="conference (2 items)">conference</a> 
       <a href="http://www.haneycodes.net/tag/conflict/" class="tag-cloud-link tag-link-39 tag-link-position-12" style="font-size: 10.117647058824pt;" aria-label="conflict (2 items)">conflict</a> 
       <a href="http://www.haneycodes.net/tag/credentialism/" class="tag-cloud-link tag-link-34 tag-link-position-13" style="font-size: 10.117647058824pt;" aria-label="credentialism (2 items)">credentialism</a> 
       <a href="http://www.haneycodes.net/tag/culture/" class="tag-cloud-link tag-link-7 tag-link-position-14" style="font-size: 17.176470588235pt;" aria-label="culture (11 items)">culture</a> 
       <a href="http://www.haneycodes.net/tag/debugging/" class="tag-cloud-link tag-link-59 tag-link-position-15" style="font-size: 10.117647058824pt;" aria-label="debugging (2 items)">debugging</a> 
       <a href="http://www.haneycodes.net/tag/diversity/" class="tag-cloud-link tag-link-19 tag-link-position-16" style="font-size: 8pt;" aria-label="diversity (1 item)">diversity</a> 
       <a href="http://www.haneycodes.net/tag/ego/" class="tag-cloud-link tag-link-10 tag-link-position-17" style="font-size: 11.529411764706pt;" aria-label="ego (3 items)">ego</a> 
       <a href="http://www.haneycodes.net/tag/generics/" class="tag-cloud-link tag-link-55 tag-link-position-18" style="font-size: 10.117647058824pt;" aria-label="generics (2 items)">generics</a> 
       <a href="http://www.haneycodes.net/tag/interviews/" class="tag-cloud-link tag-link-35 tag-link-position-19" style="font-size: 14.470588235294pt;" aria-label="interviews (6 items)">interviews</a> 
       <a href="http://www.haneycodes.net/tag/iteration/" class="tag-cloud-link tag-link-28 tag-link-position-20" style="font-size: 8pt;" aria-label="iteration (1 item)">iteration</a> 
       <a href="http://www.haneycodes.net/tag/left-pad/" class="tag-cloud-link tag-link-12 tag-link-position-21" style="font-size: 8pt;" aria-label="left-pad (1 item)">left-pad</a> 
       <a href="http://www.haneycodes.net/tag/lessons/" class="tag-cloud-link tag-link-23 tag-link-position-22" style="font-size: 8pt;" aria-label="lessons (1 item)">lessons</a> 
       <a href="http://www.haneycodes.net/tag/management/" class="tag-cloud-link tag-link-22 tag-link-position-23" style="font-size: 10.117647058824pt;" aria-label="management (2 items)">management</a> 
       <a href="http://www.haneycodes.net/tag/memory/" class="tag-cloud-link tag-link-54 tag-link-position-24" style="font-size: 12.705882352941pt;" aria-label="memory (4 items)">memory</a> 
       <a href="http://www.haneycodes.net/tag/methodology/" class="tag-cloud-link tag-link-27 tag-link-position-25" style="font-size: 10.117647058824pt;" aria-label="methodology (2 items)">methodology</a> 
       <a href="http://www.haneycodes.net/tag/mistakes/" class="tag-cloud-link tag-link-20 tag-link-position-26" style="font-size: 15.058823529412pt;" aria-label="mistakes (7 items)">mistakes</a> 
       <a href="http://www.haneycodes.net/tag/mvc/" class="tag-cloud-link tag-link-43 tag-link-position-27" style="font-size: 15.647058823529pt;" aria-label="mvc (8 items)">mvc</a> 
       <a href="http://www.haneycodes.net/tag/npm/" class="tag-cloud-link tag-link-11 tag-link-position-28" style="font-size: 8pt;" aria-label="npm (1 item)">npm</a> 
       <a href="http://www.haneycodes.net/tag/open-source/" class="tag-cloud-link tag-link-44 tag-link-position-29" style="font-size: 11.529411764706pt;" aria-label="open source (3 items)">open source</a> 
       <a href="http://www.haneycodes.net/tag/packages/" class="tag-cloud-link tag-link-14 tag-link-position-30" style="font-size: 8pt;" aria-label="packages (1 item)">packages</a> 
       <a href="http://www.haneycodes.net/tag/performance/" class="tag-cloud-link tag-link-53 tag-link-position-31" style="font-size: 19.294117647059pt;" aria-label="performance (17 items)">performance</a> 
       <a href="http://www.haneycodes.net/tag/presentation/" class="tag-cloud-link tag-link-50 tag-link-position-32" style="font-size: 11.529411764706pt;" aria-label="presentation (3 items)">presentation</a> 
       <a href="http://www.haneycodes.net/tag/process/" class="tag-cloud-link tag-link-26 tag-link-position-33" style="font-size: 12.705882352941pt;" aria-label="process (4 items)">process</a> 
       <a href="http://www.haneycodes.net/tag/profiling/" class="tag-cloud-link tag-link-58 tag-link-position-34" style="font-size: 10.117647058824pt;" aria-label="profiling (2 items)">profiling</a> 
       <a href="http://www.haneycodes.net/tag/programming/" class="tag-cloud-link tag-link-13 tag-link-position-35" style="font-size: 21.882352941176pt;" aria-label="programming (29 items)">programming</a> 
       <a href="http://www.haneycodes.net/tag/promotion/" class="tag-cloud-link tag-link-21 tag-link-position-36" style="font-size: 8pt;" aria-label="promotion (1 item)">promotion</a> 
       <a href="http://www.haneycodes.net/tag/published/" class="tag-cloud-link tag-link-57 tag-link-position-37" style="font-size: 10.117647058824pt;" aria-label="published (2 items)">published</a> 
       <a href="http://www.haneycodes.net/tag/reflection/" class="tag-cloud-link tag-link-56 tag-link-position-38" style="font-size: 10.117647058824pt;" aria-label="reflection (2 items)">reflection</a> 
       <a href="http://www.haneycodes.net/tag/salary/" class="tag-cloud-link tag-link-17 tag-link-position-39" style="font-size: 10.117647058824pt;" aria-label="salary (2 items)">salary</a> 
       <a href="http://www.haneycodes.net/tag/stack-overflow/" class="tag-cloud-link tag-link-16 tag-link-position-40" style="font-size: 11.529411764706pt;" aria-label="stack overflow (3 items)">stack overflow</a> 
       <a href="http://www.haneycodes.net/tag/tasks/" class="tag-cloud-link tag-link-64 tag-link-position-41" style="font-size: 10.117647058824pt;" aria-label="tasks (2 items)">tasks</a> 
       <a href="http://www.haneycodes.net/tag/tpl/" class="tag-cloud-link tag-link-63 tag-link-position-42" style="font-size: 10.117647058824pt;" aria-label="tpl (2 items)">tpl</a> 
       <a href="http://www.haneycodes.net/tag/transparency/" class="tag-cloud-link tag-link-18 tag-link-position-43" style="font-size: 10.117647058824pt;" aria-label="transparency (2 items)">transparency</a> 
       <a href="http://www.haneycodes.net/tag/visual-studio/" class="tag-cloud-link tag-link-46 tag-link-position-44" style="font-size: 11.529411764706pt;" aria-label="visual studio (3 items)">visual studio</a> 
       <a href="http://www.haneycodes.net/tag/workplace/" class="tag-cloud-link tag-link-6 tag-link-position-45" style="font-size: 17.176470588235pt;" aria-label="workplace (11 items)">workplace</a>
      </div> 
     </div>
     <div id="archives-2" class="widget widget_archive">
      <h3>Archives</h3> 
      <ul> 
       <li><a href="http://www.haneycodes.net/2017/02/">February 2017</a></li> 
       <li><a href="http://www.haneycodes.net/2017/01/">January 2017</a></li> 
       <li><a href="http://www.haneycodes.net/2016/06/">June 2016</a></li> 
       <li><a href="http://www.haneycodes.net/2016/03/">March 2016</a></li> 
       <li><a href="http://www.haneycodes.net/2016/02/">February 2016</a></li> 
       <li><a href="http://www.haneycodes.net/2015/09/">September 2015</a></li> 
       <li><a href="http://www.haneycodes.net/2015/08/">August 2015</a></li> 
       <li><a href="http://www.haneycodes.net/2015/04/">April 2015</a></li> 
       <li><a href="http://www.haneycodes.net/2015/03/">March 2015</a></li> 
       <li><a href="http://www.haneycodes.net/2015/01/">January 2015</a></li> 
       <li><a href="http://www.haneycodes.net/2014/12/">December 2014</a></li> 
       <li><a href="http://www.haneycodes.net/2014/10/">October 2014</a></li> 
       <li><a href="http://www.haneycodes.net/2014/09/">September 2014</a></li> 
       <li><a href="http://www.haneycodes.net/2014/06/">June 2014</a></li> 
       <li><a href="http://www.haneycodes.net/2014/05/">May 2014</a></li> 
       <li><a href="http://www.haneycodes.net/2014/03/">March 2014</a></li> 
       <li><a href="http://www.haneycodes.net/2014/02/">February 2014</a></li> 
       <li><a href="http://www.haneycodes.net/2013/12/">December 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/11/">November 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/10/">October 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/09/">September 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/08/">August 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/07/">July 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/05/">May 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/04/">April 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/03/">March 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/02/">February 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2013/01/">January 2013</a></li> 
       <li><a href="http://www.haneycodes.net/2012/12/">December 2012</a></li> 
       <li><a href="http://www.haneycodes.net/2012/11/">November 2012</a></li> 
       <li><a href="http://www.haneycodes.net/2012/10/">October 2012</a></li> 
       <li><a href="http://www.haneycodes.net/2012/08/">August 2012</a></li> 
       <li><a href="http://www.haneycodes.net/2012/07/">July 2012</a></li> 
       <li><a href="http://www.haneycodes.net/2012/06/">June 2012</a></li> 
       <li><a href="http://www.haneycodes.net/2012/05/">May 2012</a></li> 
       <li><a href="http://www.haneycodes.net/2012/04/">April 2012</a></li> 
      </ul> 
     </div>
    </div>
    <!-- /#sidebar --> 
   </div>
   <!-- /#content --> 
   <div id="footer"> 
    <div class="footer-inside"> 
     <div id="copyright" class="col-left"> 
      <p><a href="http://www.haneycodes.net/" title="Haney Codes .NET" rel="home">Haney Codes .NET</a></p> 
     </div> 
     <div id="credit" class="col-right"> 
      <p><a href="http://wordpress.org/" rel="generator">Proudly powered by WordPress</a>. Theme: Skeptical by <a href="http://www.woothemes.com/" rel="designer">WooThemes</a>.</p> 
     </div> 
     <div class="fix"></div> 
    </div> 
   </div>
   <!-- /#footer  --> 
  </div>
  <!-- /#wrapper --> 
  <script type="text/javascript" src="http://www.haneycodes.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="http://www.haneycodes.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJScript.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="http://www.haneycodes.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCSharp.js?ver=3.0.9b"></script> 
  <script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.haneycodes.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.haneycodes.net/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script> 
  <script type="text/javascript" src="http://www.haneycodes.net/wp-includes/js/comment-reply.min.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="http://www.haneycodes.net/wp-includes/js/wp-embed.min.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="http://www.haneycodes.net/wp-content/plugins/akismet/_inc/form.js?ver=3.3.4"></script>   
  <!-- Dynamic page generated in 0.589 seconds. --> 
  <!-- Cached page generated by WP-Super-Cache on 2017-10-06 20:33:27 --> 
  <!-- Compression = gzip -->
 </body>
</html>