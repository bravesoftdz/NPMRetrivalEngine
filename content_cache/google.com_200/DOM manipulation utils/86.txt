<!doctype html>
<!--[if lt IE 7]><html id="html" class="ie oldie ie6" lang="en"><![endif]-->
<!--[if IE 7]><html id="html" class="ie oldie ie7" lang="en"><![endif]-->
<!--[if IE 8]><html id="html" class="ie oldie ie8" lang="en"><![endif]-->
<!--[if IE 9]><html id="html" class="ie ie9" lang="en"><![endif]-->
<!--[if !IE]>-->
<html id="html" lang="en">
 <!--<![endif]-->
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
  <title>jQuery's Relevancy - There and Back Again -</title> 
  <meta name="viewport" content="width=device-width,initial-scale=1"> 
  <link href="https://developer.telerik.com/wp-content/themes/tdnv2/style.css?1504121756" rel="stylesheet"> 
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="https://developer.telerik.com/feed/"> 
  <link rel="pingback" href="https://developer.telerik.com/xmlrpc.php"> 
  <link rel="shortcut icon" href="https://developer.telerik.com/wp-content/themes/tdnv2/assets/img/favicon.ico"> 
  <script async defer src="//survey.g.doubleclick.net/async_survey?site=l2o5nmhmescld5tf6mvsjxeb6m"></script> 
  <!-- This site is optimized with the Yoast SEO plugin v5.4.2 - https://yoast.com/wordpress/plugins/seo/ --> 
  <meta name="description" content="Cody Lindley explains why he believes jQuery is still important and relevant, despite the growing noise saying that you don't need jQuery."> 
  <link rel="canonical" href="https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/"> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="jQuery's Relevancy - There and Back Again -"> 
  <meta property="og:description" content="Cody Lindley explains why he believes jQuery is still important and relevant, despite the growing noise saying that you don't need jQuery."> 
  <meta property="og:url" content="https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/"> 
  <meta property="og:site_name" content="Telerik Developer Network"> 
  <meta property="article:section" content="Featured"> 
  <meta property="article:published_time" content="2015-11-02T11:38:45-04:00"> 
  <meta property="article:modified_time" content="2015-11-02T11:47:16-04:00"> 
  <meta property="og:updated_time" content="2015-11-02T11:47:16-04:00"> 
  <meta property="og:image" content="https://developer.telerik.com/wp-content/uploads/2015/10/jquery_relevant_header.jpg"> 
  <meta property="og:image:secure_url" content="https://developer.telerik.com/wp-content/uploads/2015/10/jquery_relevant_header.jpg"> 
  <meta property="og:image:width" content="1170"> 
  <meta property="og:image:height" content="297"> 
  <script type="application/ld+json">{"@context":"http:\/\/schema.org","@type":"WebSite","@id":"#website","url":"https:\/\/developer.telerik.com\/","name":"Telerik Developer Network","potentialAction":{"@type":"SearchAction","target":"https:\/\/developer.telerik.com\/?s={search_term_string}","query-input":"required name=search_term_string"}}</script> 
  <script type="application/ld+json">{"@context":"http:\/\/schema.org","@type":"Organization","url":"https:\/\/developer.telerik.com\/featured\/jquerys-relevancy-there-and-back-again\/","sameAs":[],"@id":"#organization","name":"Telerik","logo":"http:\/\/developer.telerik.com\/wp-content\/uploads\/2016\/03\/telerik-small.png"}</script> 
  <!-- / Yoast SEO plugin. --> 
  <link rel="dns-prefetch" href="//kendo.cdn.telerik.com"> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="Telerik Developer Network » jQuery’s Relevancy – There and Back Again Comments Feed" href="https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/developer.telerik.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.8.2"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b!==c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="cm-ad-ouibounce-css" href="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/css/ouibounce.css?ver=4.8.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="kendo-common-css" href="https://kendo.cdn.telerik.com/2016.2.714/styles/kendo.common.min.css?ver=4.8.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="kendo-default-css" href="https://kendo.cdn.telerik.com/2016.2.714/styles/kendo.default.min.css?ver=4.8.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="prism-line-numbers-css" href="https://developer.telerik.com/wp-content/plugins/prism-wp/libs/prism/plugins/line-numbers/prism-line-numbers.css?ver=1.0.0" type="text/css" media="all"> 
  <link rel="stylesheet" id="minqueue-b4790aa0-575b2bde-css" href="https://developer.telerik.com/wp-content/uploads/minqueue-cache/minqueue-b4790aa0-575b2bde.css" type="text/css" media="all"> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var cmac_data = {"ajaxurl":"https:\/\/developer.telerik.com\/wp-admin\/admin-ajax.php","pluginurl":"https:\/\/developer.telerik.com\/wp-content\/plugins\/cm-ad-changer-server-pro"};
/* ]]> */
</script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/js/front-scripts.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/js/jquery.tcycle.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/js/ouibounce.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/cm-ad-changer-server-pro/assets/js/flyingBottom.js?ver=4.8.2"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/uploads/minqueue-cache/minqueue-ab0cd199-b6b64d22.js"></script> 
  <link rel="https://api.w.org/" href="https://developer.telerik.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://developer.telerik.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://developer.telerik.com/wp-includes/wlwmanifest.xml"> 
  <link rel="shortlink" href="https://developer.telerik.com/?p=61821"> 
  <link rel="alternate" type="application/json+oembed" href="https://developer.telerik.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fdeveloper.telerik.com%2Ffeatured%2Fjquerys-relevancy-there-and-back-again%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="https://developer.telerik.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fdeveloper.telerik.com%2Ffeatured%2Fjquerys-relevancy-there-and-back-again%2F&amp;format=xml"> 
  <link rel="amphtml" href="https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/amp/">
 </head> 
 <body> 
  <!-- Google Tag Manager --> 
  <noscript> 
   <iframe src="//www.googletagmanager.com/ns.html?id=GTM-6X92" height="0" width="0" style="display: none; visibility: hidden"></iframe> 
  </noscript> 
  <script>(function (w, d, s, l, i) {
    w[l] = w[l] || [];
    w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
    var f = d.getElementsByTagName(s)[0], j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
    j.async = true;
    j.src = '//www.googletagmanager.com/gtm.js?id=' + i + dl;
    f.parentNode.insertBefore(j, f);
})(window, document, 'script', 'dataLayer', 'GTM-6X92');</script> 
  <!-- End Google Tag Manager --> 
  <!-- Article Page Banner --> 
  <script async src="https://www.googletagservices.com/tag/js/gpt.js"></script> 
  <script>
  var googletag = googletag || {};
  googletag.cmd = googletag.cmd || [];
</script> 
  <script>
  googletag.cmd.push(function() {
    googletag.defineSlot('/22061388/tdn_topics', [210, 410], 'div-gpt-ad-1477482962874-0').setTargeting('tdn_topic', ['cloud', 'desktop', 'mobile-development', 'net', 'progress-labs', 'testing', 'web-development']).addService(googletag.pubads());
    googletag.pubads().enableSingleRequest();
    googletag.enableServices();
  });
</script> 
  <div class="container">
   <div class="row">
    <div class="col-3">
     <figure class="TK-Hat-Brand">
      <a href="https://www.progress.com" class="TK-PRGS-Logo">
       <svg xmlns="http://www.w3.org/2000/svg" width="94" height="40" viewbox="0 0 512 120">
        <path fill="#5ce500" d="M95.52 29.33v51a3.93 3.93 0 0 1-1.78 3.08l-1.67 1-12.72 7.35-8.59 5-1.78 1V42.6L21.23 15 43.91 1.93 46 .74a3.94 3.94 0 0 1 3.56 0L81 18.9l14.51 8.38v2.05zM58.36 48.72l-9.79-5.66-22.91-13.23a4 4 0 0 0-3.56 0L1.77 41.57 0 42.6l34.49 19.91v39.83l20.3-11.73 1.79-1a3.94 3.94 0 0 0 1.78-3.08V48.72zM0 82.43l23.86 13.78V68.63z"></path>
        <path fill="#4b4e52" d="M148.09 27.28h-26v70.48h11.55V70.1h14.57c15.77 0 24.45-7.7 24.45-21.69 0-6.35-2.4-21.12-24.55-21.12m12.78 21.31c0 7.95-4.12 11.19-14.24 11.19h-13v-22.1h14.57c8.56 0 12.71 3.57 12.71 10.91M207 46.41l.87.42-2 10.42-1.35-.42a11.32 11.32 0 0 0-3.34-.51c-10.79 0-11.67 8.59-11.67 19v22.44h-10.64V46h10v6.24c2.73-4.2 6-6.37 10.37-6.9a14.55 14.55 0 0 1 7.76 1.07M233.29 45c-8.42 0-15.16 3.2-19.5 9.27-4.56 6.37-5.23 13.85-5.23 17.74 0 16.36 9.7 26.92 24.73 26.92 18.26 0 24.73-14.71 24.73-27.3 0-7.25-2.15-13.82-6-18.51-4.41-5.31-10.87-8.12-18.7-8.12m0 44.38c-8.37 0-13.57-6.66-13.57-17.37s5.2-17.55 13.57-17.55S247 61.23 247 71.78c0 10.83-5.24 17.56-13.66 17.56m114.55-42.93l.87.42-2 10.42-1.35-.42a11.26 11.26 0 0 0-3.33-.51c-10.78 0-11.66 8.59-11.66 19v22.44h-10.66V46h10v6.24c2.73-4.2 6-6.37 10.37-6.9a14.54 14.54 0 0 1 7.73 1.06m38.4 34.76l-.2.57c-2.23 6.36-7.57 7.7-11.65 7.7-8.09 0-13.3-5.37-13.81-14.09h36.59l.13-1a31.26 31.26 0 0 0 .12-4.12v-.93C396.93 54.78 387.48 45 374 45c-7.9 0-14.37 3.1-18.73 9a30.85 30.85 0 0 0-5.54 18c0 16 9.95 26.74 24.74 26.74 11.45 0 19.33-5.82 22.2-16.38l.33-1.2h-10.7zM361 66.05c.9-7.17 5.81-11.73 12.79-11.73 5.33 0 11.64 3.1 12.52 11.73H361zm-60.7-15.71c-3.45-3.58-8.06-5.39-13.76-5.39-15.69 0-22.83 13.81-22.83 26.63 0 13.16 7.06 26.44 22.83 26.44a18.33 18.33 0 0 0 13.35-5.42c0 2.28-.1 4.45-.16 5.38-.58 8.54-4.68 12.51-12.91 12.51-4.47 0-9.61-1.59-10.6-6l-.22-1h-10.54l.17 1.41c1.1 9.12 9.11 14.79 20.9 14.79 10.34 0 17.7-3.9 21.28-11.26 1.73-3.55 2.6-8.72 2.6-15.37V46h-10.13v4.34zm-13.11 38.15c-3.74 0-12.43-1.69-12.43-17.37 0-10.3 4.87-16.7 12.71-16.7 6.06 0 12.52 4.39 12.52 16.7 0 10.87-4.79 17.37-12.81 17.37m159.67-6.31c0 8.23-6.83 16.53-22.09 16.53-13.5 0-21.53-5.85-22.61-16.45l-.15-1.1h10.52l.21.84c1.29 6.38 7.37 7.72 12.24 7.72 5.34 0 11-1.72 11-6.54 0-2.44-1.59-4.18-4.73-5.16-1.86-.55-4.15-1.2-6.56-1.87-4.16-1.16-8.47-2.38-11.12-3.29-6.56-2.35-10.33-6.93-10.33-12.56 0-10.43 10.16-15.11 20.22-15.11 13.46 0 20.42 5.07 21.3 15.49l.09 1.07H434.5l-.14-.82c-1-6-7-6.9-10.48-6.9-3 0-10 .53-10 5.5 0 2.25 1.93 3.91 5.89 5.06 1.18.33 2.94.78 5 1.31 4.22 1.09 9.48 2.46 12.13 3.37 6.59 2.32 9.93 6.67 9.93 13m49.39 0c0 8.23-6.83 16.53-22.09 16.53-13.5 0-21.53-5.85-22.61-16.45l-.11-1.09H462l.12.74c1.29 6.38 7.37 7.72 12.24 7.72 5.34 0 11-1.72 11-6.54 0-2.44-1.59-4.18-4.72-5.16-1.86-.55-4.15-1.2-6.57-1.87-4.16-1.16-8.46-2.38-11.11-3.29-6.57-2.35-10.33-6.93-10.33-12.56 0-10.43 10.16-15.11 20.22-15.11 13.46 0 20.42 5.07 21.29 15.49l.09 1.07H483.9l-.14-.82c-1-6-7-6.9-10.48-6.9-3 0-9.95.53-9.95 5.5 0 2.25 1.93 3.91 5.89 5.06 1.18.33 2.94.78 5 1.31 4.22 1.09 9.48 2.46 12.13 3.37 6.58 2.32 9.93 6.67 9.93 13m8.43-30.78a7.37 7.37 0 1 1 7.29-7.37 7.23 7.23 0 0 1-7.29 7.37m0-13.49a6.12 6.12 0 1 0 6 6.12 5.91 5.91 0 0 0-6-6.12m-.85 7.49v2.46h-2.17v-7.74h3.62a2.58 2.58 0 0 1 2.86 2.7 2.26 2.26 0 0 1-1.49 2.34l1.77 2.7H506l-1.49-2.46h-.68zm1.21-3.49h-1.21v1.73h1.21a.86.86 0 0 0 1-.85.88.88 0 0 0-1-.89"></path>
       </svg></a>
     </figure>
    </div>
   </div>
  </div> 
  <div class="Bar"> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-3"> 
      <a href="https://developer.telerik.com/" class="Bar-Logo"><img src="https://developer.telerik.com/wp-content/themes/tdnv2/assets/img/TDN_logo_new.png"></a> 
      <div class="Bar-Nav"> 
       <div class="Bar-Dropdown icon-menu">
        <a href="#">Topics</a>
        <ul> 
         <li><a href="https://developer.telerik.com/category/topics/web-development/">Web</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/mobile-development/">Mobile</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/net/">.NET</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/progress-labs/">Progress Labs</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/cloud/">Cloud</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/testing/">Testing</a></li> 
         <li><a href="https://developer.telerik.com/category/topics/desktop/">Desktop</a></li> 
        </ul>
       </div> 
       <a href="https://developer.telerik.com/community/" class="Bar-Link icon-community">Community</a> 
       <a href="/feed" class="Bar-Link icon-rss">RSS</a> 
       <a href="http://www.telerik.com" class="Bar-Link icon-external">Telerik.com</a> 
      </div> 
     </div> 
     <div class="col-1"> 
      <div class="Bar-Search"> 
       <form action="https://developer.telerik.com/" role="search" name="searchForm" method="get"> 
        <input name="s" type="text"> 
        <button type="submit" class="icon-search"></button> 
       </form> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="container u-tac u-pb1"> 
   <div class="u-oh u-pt2"> 
    <div class="Label Label--l Label--web-development">
     <a href="https://developer.telerik.com/category/topics/web-development/">Web</a>
    </div> 
   </div> 
   <h1 class="u-mb1">jQuery’s Relevancy – There and Back Again</h1> 
   <ul class="Meta u-mb1"> 
    <li><a href="https://developer.telerik.com/category/content-types/opinion/">Opinion</a> by <img src="https://developer.telerik.com/wp-content/uploads/userphoto/241.png" alt="Cody Lindley" width="136" height="150" class="photo" style="margin-right:0px;">&nbsp; <a href="https://developer.telerik.com/author/clindley/" class="author">Cody Lindley</a> </li> 
    <li class="icon-time">November 2, 2015</li> 
    <li class="icon-comment"><a href="https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/#disqus_thread">Comments</a></li> 
   </ul> 
  </div> 
  <div class="container"> 
   <div class="row Content"> 
    <div class="col-3 Content-main"> 
     <img width="1170" height="297" src="https://developer.telerik.com/wp-content/uploads/2015/10/jquery_relevant_header.jpg" class="attachment-full size-full wp-post-image" alt="" srcset="https://developer.telerik.com/wp-content/uploads/2015/10/jquery_relevant_header.jpg 1170w, https://developer.telerik.com/wp-content/uploads/2015/10/jquery_relevant_header-300x76.jpg 300w, https://developer.telerik.com/wp-content/uploads/2015/10/jquery_relevant_header-1024x260.jpg 1024w" sizes="(max-width: 1170px) 100vw, 1170px"> 
     <div class="Nav"> 
      <div class="container"> 
       <div class="row"> 
        <div class="col-3"> 
         <div class="Label Label--l Label--web-development">
          <a href="https://developer.telerik.com/category/topics/web-development/">Web</a>
         </div> 
         <h2>jQuery’s Relevancy – There and Back Again</h2> 
        </div> 
        <div class="col-1"> 
         <div class="SocialIcons"> 
          <a onclick="window.open('http://www.facebook.com/share.php?u=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/','facebook','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" href="http://www.facebook.com/share.php?u=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/" title="jQuery’s Relevancy – There and Back Again" target="blank" class="icon-facebook"></a> 
          <a onclick="window.open('http://twitter.com/home?status=jQuery%E2%80%99s+Relevancy+%E2%80%93+There+and+Back+Again - https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/','twitter','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" href="http://twitter.com/home?status=jQuery%E2%80%99s+Relevancy+%E2%80%93+There+and+Back+Again - https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/" title="jQuery’s Relevancy – There and Back Again" target="blank" class="icon-twitter"></a> 
          <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/&amp;title=jQuery%E2%80%99s+Relevancy+%E2%80%93+There+and+Back+Again&amp;source=Telerik Developer Network" target="_blank" class="icon-linkedin"></a> 
          <a href="https://plus.google.com/share?url=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/" onclick="window.open('https://plus.google.com/share?url=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/','gplusshare','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" class="icon-google"></a> 
         </div> 
        </div> 
       </div> 
      </div> 
     </div> 
     <div class="Article"> 
      <div class="SocialIcons"> 
       <a onclick="window.open('http://www.facebook.com/share.php?u=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/','facebook','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" href="http://www.facebook.com/share.php?u=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/" title="jQuery’s Relevancy – There and Back Again" target="blank" class="icon-facebook"></a> 
       <a onclick="window.open('http://twitter.com/home?status=jQuery%E2%80%99s+Relevancy+%E2%80%93+There+and+Back+Again - https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/','twitter','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" href="http://twitter.com/home?status=jQuery%E2%80%99s+Relevancy+%E2%80%93+There+and+Back+Again - https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/" title="jQuery’s Relevancy – There and Back Again" target="blank" class="icon-twitter"></a> 
       <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/&amp;title=jQuery%E2%80%99s+Relevancy+%E2%80%93+There+and+Back+Again&amp;source=Telerik Developer Network" target="_blank" class="icon-linkedin"></a> 
       <a href="https://plus.google.com/share?url=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/" onclick="window.open('https://plus.google.com/share?url=https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/','gplusshare','width=450,height=300,left='+(screen.availWidth/2-375)+',top='+(screen.availHeight/2-150)+'');return false;" class="icon-google"></a> 
      </div> 
      <p>Because of the <a href="http://blog.garstasio.com/you-dont-need-jquery/">mounting</a> <a href="http://lea.verou.me/2015/04/jquery-considered-harmful/">you-don’t-need-jQuery</a> sentiment as of <a href="http://www.sitepoint.com/do-you-really-need-jquery/">late</a>, I can’t help but think we have forgotten the basic value of jQuery. So I think it is time to remember.</p> 
      <p>In this article, I’m going to remind everyone what exactly jQuery is, because I believe that jQuery is as relevant today as it was when it was first written. The question relevancy should be tied to the original intent of the solution (i.e. the jQuery API itself) and not browser bugs or missing features. If we suggest otherwise, we run the risk of fueling a perspective that could be used to dismiss any abstraction that is not <em>required</em>, but none the less still powerful and helpful.</p> 
      <p>Before I get too far into defending jQuery’s relevancy, let’s first journey from the beginning again and back so that everyone is clear on the “what” and “why” of jQuery.</p> 
      <h2>What Is JQuery?</h2> 
      <p><a href="https://en.wikipedia.org/wiki/JQuery">jQuery</a> is a JavaScript library (i.e. written in <a href="https://en.wikipedia.org/wiki/JavaScript">JavaScript</a>) designed to abstract, equalize, fix, and simplify the scripting of HTML element nodes in a browser or <a href="https://en.wikipedia.org/wiki/Headless_browser">headless browser</a>.</p> 
      <p>To be clear:</p> 
      <ul> 
       <li>What is being abstracted is the <a href="http://www.w3.org/TR/dom/">document object model</a> interface (aka the DOM API).</li> 
       <li>What is being equalized are the differences in the DOM <a href="http://www.w3.org/TR/DOM-Level-3-Core/">implementations</a> between browsers.</li> 
       <li>What is being fixed are known <a href="https://docs.google.com/document/d/1LPaPA30bLUB_publLIMF0RlhdnPx_ePXm7oW02iiT6o/edit">CSS and DOM bugs in the browsers</a>.</li> 
      </ul> 
      <p>Wrap all of this up into a simpler, less buggy, API than the native DOM API provides and you have jQuery.</p> 
      <p>Now let me explain what I mean by “scripting HTML elements”. Using jQuery it becomes trivial to do stuff like visually hiding the second <code>&lt;h2&gt;</code> HTML element in an <code>.html</code> document. The jQuery code that would accomplish such a task would look like so:</p> 
      <pre><code class="language-javascript">jQuery('h2:eq(1)').hide();</code></pre> 
      <p>Let’s break this line of jQuery code down a bit. First, the <code>jQuery()</code> function is invoked, passing it a <a href="https://api.jquery.com/category/selectors/jquery-selector-extensions/">custom jQuery</a> <a href="http://www.w3.org/TR/CSS21/selector.html%23id-selectors">CSS selector</a> which selects the second <code>&lt;h2&gt;</code> in an HTML document. Then, the jQuery <code>.hide()</code> method is called which results in the <code>&lt;h2&gt;</code> element being hidden. That was simple and semantically clean to express using jQuery.</p> 
      <p>Now contrast this to the native DOM code that would be required if one didn’t use jQuery.</p> 
      <pre><code class="language-javascript">document.querySelectorAll('h2')[1].style.setProperty('display','none');</code></pre> 
      <p>Which would you prefer to write? Or read and debug? Also, consider that the native DOM code above assumes that all browsers support the DOM methods used. And as it turns out, certain older browsers don’t support <code>querySelectorAll()</code> or <code>setProperty()</code>. So, while the previous jQuery code would run just fine in IE8, the native DOM code would cause a JavaScript error. But consider, even if both lines of code worked everywhere, which is easier to write and read?</p> 
      <p>By employing jQuery you don’t have to worry about which browser supports what, or which DOM API might bug out in which browser. Using jQuery you are able to get things done more quickly with simpler code and less stress because jQuery abstracts these issues away so you don’t have to worry about them.</p> 
      <h2>Is jQuery JavaScript Itself?</h2> 
      <p>Because of jQuery’s ubiquity, depending upon your background, you might not know where JavaScript ends and jQuery begins. For a lot of designers and new HTML/CSS developers, jQuery is their first interaction with the JavaScript programming language. Thus, they sometimes confuse jQuery and JavaScript itself.</p> 
      <p>First off, you need to know that <a href="http://www.ecma-international.org/ecma-262/6.0/index.html">JavaScript</a> is not jQuery or even the DOM API. jQuery is a third-party <a href="https://github.com/jquery/jquery">open source library</a> maintained by developers in the web community and written in JavaScript. Also, jQuery is not a standard from the same organizations (i.e. the W3C) who produce the HTML, CSS, or DOM specifications.</p> 
      <p>Keep in mind that jQuery primarily serves as sugar over the top of the DOM API. This sugar helps to conceal what has historically been a complicated and buggy DOM interface.</p> 
      <p>jQuery is simply a helpful library that you can optionally use when scripting HTML elements. And the fact is, most developers choose to use it when scripting the DOM because the API helps them get more things done with less code.</p> 
      <p>So many developers use jQuery and jQuery Plugins that you will often find them being touted as the <a href="http://trends.builtwith.com/javascript/javascript-library">most</a> <a href="http://w3techs.com/technologies/history_overview/javascript_library/all">used</a> <a href="https://libscore.com/#libs">scripts</a> on the entire web.</p> 
      <h2>The Two Conceptual Pillars Behind jQuery</h2> 
      <p>The two basic concepts behind jQuery are: “find something, do something” and “write less, do more.”</p> 
      <p>These two concepts can be expounded and combined into the following statement: jQuery’s first order of business is to orchestrate the selection (i.e. find something) or <a href="http://api.jquery.com/jquery/#jQuery2">creation of HTML elements</a> for the purpose of doing something with them that, without jQuery, would require more code and more DOM know-how. For instance, the hiding of the <code>&lt;h2&gt;</code> element we spoke about earlier.</p> 
      <p>It’s important to note that jQuery does do a little bit more than what I just stated. In addition to abstracting native DOM interactions, jQuery provides an <a href="https://api.jquery.com/jQuery.ajax/">abstraction</a> for making asynchronous HTTP requests (aka <a href="http://api.jquery.com/jquery.ajax/">AJAX</a>) using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest">XMLHttpRequest</a> object. It also provides a couple of other smaller <a href="https://api.jquery.com/category/utilities/">JavaScript utility solutions and miscellaneous tools</a> but the main use case for jQuery resides in the fact that it makes scripting HTML easier, faster, and more enjoyable.</p> 
      <p>It’s important to point out that I am not suggesting that its value resides in its ability to solve browser bugs. The conceptual pillars don’t even hint at the value of jQuery being rooted in browser fixes. jQuery’s value long term is tied up in the simplicity and power of its API abstraction over the DOM. And this has always been its value.</p> 
      <h2>How jQuery fits into modern web development today</h2> 
      <p>jQuery is almost a decade old. Crafted for a period of web development that we have most certainly surpassed. The fact is, just like 10 years ago, jQuery is not <em>absolutely</em> needed to work with the DOM or make an asynchronous HTTP request. <strong>Most everything you can do with jQuery you can do without jQuery</strong>. And, if you require only a couple small simple interactions with the DOM in one or two modern browsers, then <a href="http://youmightnotneedjquery.com/">you might be better off using native DOM methods instead of jQuery</a>.</p> 
      <p>However, for any development that involves the <a href="http://www.webbrowsercompatibility.com/bom/desktop/">BOM (Browser Object Model)</a> or DOM beyond a trivial sprinkling of interactions, you should make use of jQuery. The alternative would be to reinvent the wheel (i.e. parts of the jQuery abstraction) and then test that wheel on every major surface (i.e device and desktop browsers) on which the wheel might turn.</p> 
      <p>Mature developers know when to stand on the shoulders of giants and when to avoid unnecessary complexity. In most cases, we still need jQuery to get things done in a reasonable amount of time when doing non-trivial work with HTML and the DOM.</p> 
      <p>Besides, even if jQuery didn’t fix a single issue with the DOM or the browsers’ disparaging implementations of the DOM specification, the API itself would still remain relevant due to its ease of use for scripting HTML.</p> 
      <p><strong>jQuery is still relevant today not because of fixing something that is broken, but because the abstraction improves upon the underlining DOM APIs.</strong></p> 
      <p>And these improvements help developers work smarter and faster. This is as true today and it was when the library was first crafted. Saying you don’t need jQuery today is like saying you don’t need lo-dash or underscore.js. Of course you don’t <em>need</em> any of these things. But needing something is not the only manner in which value is measured.</p> 
      <p>The value of these things is in the API. Complexity can slow you down during development. For this reason, we prefer using things like lo-dash and jQuery to make things simpler. They help us do difficult things with ease. And as long as jQuery helps us to do difficult things with ease (i.e. scripting HTML), it will remain relevant.</p> 
      <p>Even if you feel that jQuery objectively helps, this preference does not make jQuery irrelevant. It is as relevant as anything that a group of developers prefer, like CoffeeScript or TypeScript. You don’t need these to write JavaScript, some developers just prefer it. In the same way, we don’t need jQuery to script HTML, but it just so happens that a hell of a lot of developers prefer it. This alone makes it relevant.</p> 
      <p>If you still have concerns about the use of jQuery in modern development today, I suggest watching the following presentation from a jQuery team member where he makes the case for continued use of jQuery regardless of the advancements of <a href="http://outdatedbrowser.com/en">modern web browser</a>.</p> 
      <p><iframe width="560" height="315" src="https://www.youtube.com/embed/OBLvBcGgVQc?rel=0&amp;showinfo=0" frameborder="0" allowfullscreen></iframe></p> 
      <p>Now, if you have decided not to use jQuery for the development of non-trivial sites or applications, I’d like to hear why. Tell me in the comments.</p> 
      <h2>Appendix – Important Facts About jQuery</h2> 
      <p>As a final item, I’d like to share some important facts about jQuery. Some of these you may not know or perhaps have forgotten as we move farther from jQuery’s original creation.</p> 
      <ul> 
       <li>jQuery was created by John Resig and released on August 26, 2006. According to John the reason he wrote the code was to “revolutionize the way you can get JavaScript to interact with HTML”.</li> 
       <li>jQuery is considered to be the most popular and most used JavaScript library to date.</li> 
       <li>jQuery is free and open source software provided under the <a href="https://tldrlegal.com/license/mit-license">MIT license</a>.</li> 
       <li>jQuery comes in two versions. The 1.x version (current: 1.11.3) which supports Internet Explorer 6, 7, and 8\ and the 2.x (current: 2.1.4) version, which drops support for anything less than IE9+ . If you need to support IE8, then you’ll have to use the 1.x version. <strong>But that is ok, both versions are still being actively developed</strong>.</li> 
       <li><a href="https://mathiasbynens.be/demo/jquery-size">jQuery 2.x minified is around 82kb. Gzipped it’s around 28k</a>.</li> 
       <li><a href="https://mathiasbynens.be/demo/jquery-size">jQuery 1.x minified is around 96kb. Gzipped it’s around 32k</a>.</li> 
       <li>jQuery source code is available on <a href="https://github.com/jquery/jquery">Githhub</a>.</li> 
       <li>Using the <a href="https://github.com/jquery/jquery#how-to-build-your-own-jquery">source from Github a custom version of jQuery</a> can be constructed.</li> 
       <li>jQuery can be installed using the <a href="http://bower.io/">bower</a> or <a href="https://www.npmjs.com/package/jquery">npm</a> package manager (i.e. <code>$ bower install jquery or npm install jquery</code>).</li> 
       <li>jQuery has an official <a href="http://code.jquery.com/jquery/">CDN serving many versions of jQuery</a>.</li> 
       <li>jQuery has a simple plugin architecture that allows anyone to add custom jQuery methods.</li> 
       <li>The jQuery plugin community is vast. High quality enterprise grade plugins (e.g. <a href="http://www.telerik.com/kendo-ui">Kendo UI</a>) for purchase are available as well as many high quality free plugins (e.g. <a href="http://getbootstrap.com/javascript/">Bootstrap</a>).</li> 
       <li>jQuery can be broken down into the follow categories (matching <a href="http://api.jquery.com/">how the API</a> docs are broken down). 
        <ul> 
         <li>ajax</li> 
         <li>attributes</li> 
         <li>callbacks object</li> 
         <li>core</li> 
         <li>CSS</li> 
         <li>data</li> 
         <li>deferred object</li> 
         <li>dimensions</li> 
         <li>effects</li> 
         <li>events</li> 
         <li>forms</li> 
         <li>internals</li> 
         <li>manipulation</li> 
         <li>miscellaneous</li> 
         <li>offset</li> 
         <li>properties</li> 
         <li>selectors</li> 
         <li>traversing</li> 
         <li>utilities</li> 
        </ul> </li> 
       <li>Anyone can contribute to the jQuery project.</li> 
      </ul> 
      <p><em>Header image courtesy of <a href="https://flic.kr/p/dAz9yK">Jeff Hitchcock</a></em></p> 
     </div> 
     <div class="Article-NextPrev"> 
      <div class="row"> 
       <div class="col-2"> 
        <a href="https://developer.telerik.com/products/theres-a-cordova-plugin-for-that-session-recording/" class="Article-Prev"> <img src="https://developer.telerik.com/wp-content/themes/tdnv2/assets/img/arrow-left.png"> <h6>Prev</h6> <span>There's a Cordova Plugin for that! (Session Recording)</span> </a> 
       </div> 
       <div class="col-2"> 
        <a href="https://developer.telerik.com/featured/will-angular-2-be-a-success-you-bet/" class="Article-Next"> <img src="https://developer.telerik.com/wp-content/themes/tdnv2/assets/img/arrow-right.png"> <h6>Next</h6> <span>Will Angular 2 be a success? You bet!</span> </a> 
       </div> 
      </div> 
     </div> 
     <div class="Article-AuthorBox"> 
      <img src="https://developer.telerik.com/wp-content/uploads/userphoto/241.png" alt="Cody Lindley" width="136" height="150" class="avatar"> 
      <a href="https://developer.telerik.com/author/clindley/" class="author">Cody Lindley</a>
      <br> Cody Lindley is a 
      <a href="http://frontenddeveloperjob.com/what-is-a-front-end-developer/">front-end developer</a> working as a developer advocate for Telerik focused on the 
      <a href="http://www.telerik.com/kendo-ui">Kendo UI tools</a>.
      <!--more--> He lives in Boise, ID with his wife and three children. You can read more about Cody on 
      <a href="http://www.codylindley.com">his site</a> or follow him on Twitter at 
      <a href="https://twitter.com/codylindley">@codylindley</a>. 
     </div> 
     <h3 class="above-list">Comments</h3> 
     <div id="disqus_thread"> 
      <div id="dsq-content"> 
       <ul id="dsq-comments"> 
        <li class="comment even thread-even depth-1" id="dsq-comment-28361"> 
         <div id="dsq-comment-header-28361" class="dsq-comment-header"> 
          <cite id="dsq-cite-28361"> <a id="dsq-author-user-28361" href="http://cosmi.nu/" target="_blank" rel="nofollow">Cosmin Nicula</a> </cite> 
         </div> 
         <div id="dsq-comment-body-28361" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28361" class="dsq-comment-message">
           <p>Since jQuery doesn’t have a component model like React, Polymer, Angular, Ember etc., I wouldn’t recommend jQuery for building “non-trivial sites and applications”. Also jQuery encourages manual DOM manipulation which can quickly become a mess in terms of performance. Nevertheless, with jQuery it’s trivial to store your application state inside the DOM which can quickly become a nightmare in terms of maintainable code and unit testing. IMHO jQuery alone is much too low level to be considered a solid foundation for complex web apps.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-28391"> 
           <div id="dsq-comment-header-28391" class="dsq-comment-header"> 
            <cite id="dsq-cite-28391"> <a id="dsq-author-user-28391" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28391" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28391" class="dsq-comment-message">
             <p>Apologies here if you thought I meant that jQuery alone should be used literally for building out an entire solution. This is not my perspective or something I would assert. I think jQuery is good at abstracting the DOM. That is it. jQuery has more in common with lodash and underscore in this sense. One would not say that a Backbone application is built with underscore alone. Underscore is simply a lower level solution that helps one perform functional routines with speed and ease. This is very much the same role jQuery plays when scripting HTML.</p> 
             <p>Also, I did not mean to setup a faulty comparison here. The manner in which you compare jQuery to React, Polymer, Angular, Ember etc. is a logical fallacy known as a faulty comparison. I’m not sure if you are asserting this yourself, or assumed I set it up. Either way, this is comparing two different things and claiming one is inferior because of the differences. jQuery was not created to be a solution for architecting an application. jQuery was created to make scripting HTML better. My claim is we should judge it on its intended purpose not its misuse or the fact it fixes bugs.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-3" id="dsq-comment-28441"> 
             <div id="dsq-comment-header-28441" class="dsq-comment-header"> 
              <cite id="dsq-cite-28441"> <a id="dsq-author-user-28441" href="http://cosmi.nu/" target="_blank" rel="nofollow">Cosmin Nicula</a> </cite> 
             </div> 
             <div id="dsq-comment-body-28441" class="dsq-comment-body"> 
              <div id="dsq-comment-message-28441" class="dsq-comment-message">
               <p>One could argue that architecting applications is all about building components. All these libraries / frameworks (React, Polymer, Angular, Ember etc.) provide a set of abstractions for building components, which unfortunately isn’t the case with jQuery. It’s easy to make mistakes when you have no constraints, especially when you code against the DOM. Nevertheless, jQuery did a great job in the past and paved the way for modern web development, however Web Components or React make jQuery quite redundant.</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment odd alt depth-4" id="dsq-comment-28451"> 
               <div id="dsq-comment-header-28451" class="dsq-comment-header"> 
                <cite id="dsq-cite-28451"> <a id="dsq-author-user-28451" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
               </div> 
               <div id="dsq-comment-body-28451" class="dsq-comment-body"> 
                <div id="dsq-comment-message-28451" class="dsq-comment-message">
                 <p>jQuery is not a view layer or a tool used to create componentized user interfaces. jQuery can help you do that, but jQuery itself is not that. jQuery = HTML scripting via JS. It is, what the DOM api’s should have been. You keep comparing jQuery to things like Web Components and React, these are in no way built for with the same purpose in mind. Using a tool that abstracts the DOM in a new way could result in not needing jQuery. But what is replacing jQuery is not react but rather the abstraction contained within react that handles a virtual DOM. This is the same for Angular and Polymer. These solutions did not get rid of the need that jQuery fills, they simply provided their own abstractions (e.g. Polymer.dom() and jqlite()). jQuery can become redundant, but currently is not irrlevant. Most of the solutions you mentioned are still offering a DOM abstraction of some flavor.</p> 
                </div> 
               </div> 
               <ul class="children"> 
                <li class="comment even depth-5" id="dsq-comment-28601"> 
                 <div id="dsq-comment-header-28601" class="dsq-comment-header"> 
                  <cite id="dsq-cite-28601"> <a id="dsq-author-user-28601" href="http://cosmi.nu/" target="_blank" rel="nofollow">Cosmin Nicula</a> </cite> 
                 </div> 
                 <div id="dsq-comment-body-28601" class="dsq-comment-body"> 
                  <div id="dsq-comment-message-28601" class="dsq-comment-message">
                   <p>The comparison is actually in the context of the technologies that support writing software components, since they are the foundation of component-based software engineering. The implications are deeper than the Virtual DOM inside React, or IDOM inside Angular or Glimmer inside Ember. Let me give you an example: you can have a declarative API for your component, but this does not necessarily means that the internals of your component are written with declarative code – which is the case with many jQuery-based open-source and closed-source components. It’s really about how easy it is to read, understand and maintain a code base. As you can see, DOM abstractions alone are not sufficient to build real components and most of the time you’ll end up integrating clunky libraries providing abstractions that otherwise you’ll get out of the box inside libraries / frameworks like React, Angular, Polymer, Ember etc.</p> 
                  </div> 
                 </div> </li>
                <!-- #comment-## --> 
               </ul>
               <!-- .children --> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://www.alvinashcraft.com/2015/11/02/dew-dump-november-2-2015-2124/" rel="external nofollow" class="url">Dew Dump – November 2, 2015 (#2124) | Morning Dew</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28401"> 
         <div id="dsq-comment-header-28401" class="dsq-comment-header"> 
          <cite id="dsq-cite-28401"> <span id="dsq-author-user-28401">David Johnson</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28401" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28401" class="dsq-comment-message">
           <p>Great article, agree with every word…well said that man</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-28421"> 
           <div id="dsq-comment-header-28421" class="dsq-comment-header"> 
            <cite id="dsq-cite-28421"> <a id="dsq-author-user-28421" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28421" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28421" class="dsq-comment-message">
             <p>Thank you for the positive feedback.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-even depth-1" id="dsq-comment-28411"> 
         <div id="dsq-comment-header-28411" class="dsq-comment-header"> 
          <cite id="dsq-cite-28411"> <a id="dsq-author-user-28411" href="http://www.julitogtu.com" target="_blank" rel="nofollow">Julito Avellaneda</a> </cite> 
         </div> 
         <div id="dsq-comment-body-28411" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28411" class="dsq-comment-message">
           <p>Great article Cody, well, I think the problem is that today, people is comparing jQuery (library) vs Angularjs (or another framework), and of course, the framework has a lot of things more than jQuery, but the purpose of jQuery is mainly work with the DOM, no be the base for the core application, also, jQuery can be use with any framework without problem!</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-28431"> 
           <div id="dsq-comment-header-28431" class="dsq-comment-header"> 
            <cite id="dsq-cite-28431"> <a id="dsq-author-user-28431" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28431" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28431" class="dsq-comment-message">
             <p>I agree, a faults comparison is at work here. JQuery was not designed to be a solution alone for building complex sites or apps. Comparing it with solutions that were, is a flaw in reasoning.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28461"> 
         <div id="dsq-comment-header-28461" class="dsq-comment-header"> 
          <cite id="dsq-cite-28461"> <span id="dsq-author-user-28461">thephilocoder</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28461" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28461" class="dsq-comment-message">
           <p>I use jQuery along side Knockout and Angular, and it has been a great addition for problems that other frameworks cannot resolve well enough. So i think is good to know jQuery.</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-28491"> 
         <div id="dsq-comment-header-28491" class="dsq-comment-header"> 
          <cite id="dsq-cite-28491"> <a id="dsq-author-user-28491" href="http://web-crunch.com/" target="_blank" rel="nofollow">Andy Leverenz</a> </cite> 
         </div> 
         <div id="dsq-comment-body-28491" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28491" class="dsq-comment-message">
           <p>Great article. jQuery was built to manipulate the DOM and other JS frameworks build upon the DOM so I think it’s definitely here to stay for sure.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-29001"> 
           <div id="dsq-comment-header-29001" class="dsq-comment-header"> 
            <cite id="dsq-cite-29001"> <a id="dsq-author-user-29001" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-29001" class="dsq-comment-body"> 
            <div id="dsq-comment-message-29001" class="dsq-comment-message">
             <p>I agree. Vue.js, Ember, and Angular need something like jQuery if not jQuery. I’m so confused how people can recommend vue.js, ember, or angular and then suggest that jQuery is not needed. All these solutions use jQuery or use a jQuery like solution. Thus, it is relevant. I’d even assert that reacts virtual DOM is a form of DOM abstraction that validates the need to still abstract the DOM. But, to suggest that everyone should use react is rather short side as it assumes everyone is building the same thing.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-28501"> 
         <div id="dsq-comment-header-28501" class="dsq-comment-header"> 
          <cite id="dsq-cite-28501"> <a id="dsq-author-user-28501" href="https://franciskim.co" target="_blank" rel="nofollow">Francis Kim</a> </cite> 
         </div> 
         <div id="dsq-comment-body-28501" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28501" class="dsq-comment-message">
           <p>Guess what React’s official tutorial uses for AJAX? Yup… jQuery.</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-even depth-1" id="dsq-comment-28511"> 
         <div id="dsq-comment-header-28511" class="dsq-comment-header"> 
          <cite id="dsq-cite-28511"> <span id="dsq-author-user-28511">Javi Gc</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28511" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28511" class="dsq-comment-message">
           <p>I’m totally disagree, jquery was usefull when css3 and html5 didn’t exist, and existed a lot of browser incompatibilities.</p> 
           <p>BTW jQuery(‘h2:eq(1)’) is not efficient not efficient, And if for you the main problem is the number of keys you press, there is a more better solution with vanilla javascript</p> 
           <p>$$ = document.getElementsByTagName;<br> $$(‘h2’)[1].style.display = ‘none’</p> 
           <p>and to do the same I don’t need to download a library, and include it . Also you will write less, have more efficient code and won’t consume too much phone/table battery.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-28521"> 
           <div id="dsq-comment-header-28521" class="dsq-comment-header"> 
            <cite id="dsq-cite-28521"> <a id="dsq-author-user-28521" href="http://www.bitstorm.org/" target="_blank" rel="nofollow">Edwin Martin</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28521" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28521" class="dsq-comment-message">
             <p>How is you “vanilla” code more efficient than jQuery(‘h2:eq(1)’).hide();?</p> 
             <p>1) Your code is more work to write<br> 2) Your code is harder to read<br> 3) The $$ in your code only supports tag names<br> 4) Your code breaks when there is no H2<br> 5) Your code is more complex and therefore harder to maintain and debug<br> 6) If you want to hide every second H2 in every section, your code is much harder to change<br> 7) Your code is not more efficient. This is called premature optimization</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-3" id="dsq-comment-28681"> 
             <div id="dsq-comment-header-28681" class="dsq-comment-header"> 
              <cite id="dsq-cite-28681"> <span id="dsq-author-user-28681">Javi Gc</span> </cite> 
             </div> 
             <div id="dsq-comment-body-28681" class="dsq-comment-body"> 
              <div id="dsq-comment-message-28681" class="dsq-comment-message">
               <p>1) avoid one call of 80k</p> 
               <p>2) is harder to read if you don’t know how to develop, that is hard to you ($$(‘h2’)[1].style.display = ‘none’)?<br> 3) I know that jquery is to easy to use, but is too inefficient too, and most of developers doesn’t know how to use correctly jquery becouse it is too easy to use</p> 
               <p>4) If a developer have to use a library becouse doesn’t want to use an if, maybe is not a good developer</p> 
               <p>5) “$$(‘h2’)[1].style.display = ‘none’ “, is this too much complex</p> 
               <p>6) Ii is a custom code, if my website doesn’t have a second h2, why I must execute this code in the first place? (and if the page is dynamic, maybe I would consider angular or embedjs)<br> 7) I have not applied any efficience, just a function to make the code easy to read, just as jquery</p> 
               <p>I don’t say that jquery is a bad thing, 5 years ago, it was pretty useful, and helped a lot, an d I consider jquery that thanks to it, css3 and html5 are like they are now, but now that the problems of compatibilities are reduced drastically, there is no need to abuse of jquery anymore.</p> 
               <p>You can create custom funcions that allows to have a “lite jquery”, and only use the methods that you really need</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment even depth-4" id="dsq-comment-28711"> 
               <div id="dsq-comment-header-28711" class="dsq-comment-header"> 
                <cite id="dsq-cite-28711"> <a id="dsq-author-user-28711" href="http://www.bitstorm.org/" target="_blank" rel="nofollow">Edwin Martin</a> </cite> 
               </div> 
               <div id="dsq-comment-body-28711" class="dsq-comment-body"> 
                <div id="dsq-comment-message-28711" class="dsq-comment-message">
                 <p>1) It’s only 28k, probably a tiny fraction of the whole page. See <a href="https://mathiasbynens.be/demo/jquery-size" rel="nofollow">https://mathiasbynens.be/demo/jquery-size</a></p> 
                 <p>2) $().() is so easy and powerful, custom code just can’t beat that.</p> 
                 <p>3) jQuery is sometimes not as efficient. Not in this case. Please read about premature optimization. It’s evil.</p> 
                 <p>4) If a developer uses a library so he is much more productive, makes code that’s easier to maintain and debug, then that’s a very good developer. Of course performance is important, but adding 28k to a page is almost always negligible.</p> 
                 <p>5) See 2)</p> 
                 <p>6) Because things change. All the time. jQuery is more robust.</p> 
                 <p>7) You said the jQuery code was not efficient. See 3)</p> 
                 <p>And you’re right, a ‘light jQuery’ can be the best solution. (by chance I’m working on one: <a href="https://github.com/edwinm/miq" rel="nofollow">https://github.com/edwinm/miq</a> ).</p> 
                </div> 
               </div> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment odd alt depth-2" id="dsq-comment-28571"> 
           <div id="dsq-comment-header-28571" class="dsq-comment-header"> 
            <cite id="dsq-cite-28571"> <a id="dsq-author-user-28571" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28571" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28571" class="dsq-comment-message">
             <p>If your preference is not to use the jQuery API because you think native DOM api’s are better I am not going to try and convince you other wise. Do what makes sense to your brain. However, objectively, the mass adoption by the developer community would leave your opinion in the minority. The majority of developers (not just advanced developers) found the API easier to work with. They can do more, faster, with it then without it. History seems to prove this true. My assertion is that it is still true based on the value of the API itself outside of updates to browsers or specifications.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-3" id="dsq-comment-28701"> 
             <div id="dsq-comment-header-28701" class="dsq-comment-header"> 
              <cite id="dsq-cite-28701"> <span id="dsq-author-user-28701">Javi Gc</span> </cite> 
             </div> 
             <div id="dsq-comment-body-28701" class="dsq-comment-body"> 
              <div id="dsq-comment-message-28701" class="dsq-comment-message">
               <p>I don’t think that is better or not, jquery have cooler selections that the native API. but is easy to avoid this extras on selectors that jquery brings.</p> 
               <p>The main problem is too much easy, I saw a lot of web developers that never use variables, only use the “$” method, making the code too much slow to run, and only using the methods ‘ready’, ‘getElementByid’ and ‘getElementsByClassName’.</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment odd alt depth-2" id="dsq-comment-28631"> 
           <div id="dsq-comment-header-28631" class="dsq-comment-header"> 
            <cite id="dsq-cite-28631"> <span id="dsq-author-user-28631">Alessandro Pellizzari</span> </cite> 
           </div> 
           <div id="dsq-comment-body-28631" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28631" class="dsq-comment-message">
             <p>What if you only have 1 h2 in your page? undefined everywhere! ?</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-3" id="dsq-comment-28691"> 
             <div id="dsq-comment-header-28691" class="dsq-comment-header"> 
              <cite id="dsq-cite-28691"> <span id="dsq-author-user-28691">Javi Gc</span> </cite> 
             </div> 
             <div id="dsq-comment-body-28691" class="dsq-comment-body"> 
              <div id="dsq-comment-message-28691" class="dsq-comment-message">
               <p>why I would call the function in the first place?</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment odd alt depth-4" id="dsq-comment-28721"> 
               <div id="dsq-comment-header-28721" class="dsq-comment-header"> 
                <cite id="dsq-cite-28721"> <span id="dsq-author-user-28721">Alessandro Pellizzari</span> </cite> 
               </div> 
               <div id="dsq-comment-body-28721" class="dsq-comment-body"> 
                <div id="dsq-comment-message-28721" class="dsq-comment-message">
                 <p>You keep looking at the finger instead of the moon. What I am trying to say is that jQuery not only is shorter, but also safer, as you can reuse that function in every page without bothering to check how many h2 you have. Maybe the content was added via AJAX calls, maybe it was changed by the HTML guy. Your code is not enough to emulate the jQuery functionality, because you need at least a couple of ifs there.</p> 
                </div> 
               </div> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-28513"> 
         <div id="dsq-comment-header-28513" class="dsq-comment-header"> 
          <cite id="dsq-cite-28513"> <span id="dsq-author-user-28513">Erwin Poeze</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28513" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28513" class="dsq-comment-message">
           <p>Thanks for the article. Because constructing your own jQuery version might not be that obvious to everyone, we just launched <a href="http://www.jqueryconfig.com" rel="nofollow">http://www.jqueryconfig.com</a>. It not only helps you pick the necessary modules, but offers insight in the effect that different modules have on its build size.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-28531"> 
           <div id="dsq-comment-header-28531" class="dsq-comment-header"> 
            <cite id="dsq-cite-28531"> <a id="dsq-author-user-28531" href="http://cosmi.nu/" target="_blank" rel="nofollow">Cosmin Nicula</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28531" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28531" class="dsq-comment-message">
             <p>As far as I can see, this tool is creating a bundle that includes the desired modules. However, the bundle has no support for any module format (ES6 Modules / AMD / CommonJS etc.) and is exporting jQuery in a good old fashion global way. A more flexible option would be to have the sub-modules exposed as ES6 Modules / AMD / CommonJS etc. modules and allow the developer to bundle them programmatically. Also, in this way you would give the possibility to have jQuery either exported globally or exported as a module with no global leaks.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment even depth-3" id="dsq-comment-28551"> 
             <div id="dsq-comment-header-28551" class="dsq-comment-header"> 
              <cite id="dsq-cite-28551"> <a id="dsq-author-user-28551" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
             </div> 
             <div id="dsq-comment-body-28551" class="dsq-comment-body"> 
              <div id="dsq-comment-message-28551" class="dsq-comment-message">
               <p>jQuery is divided into AMD modules (<a href="http://developer.telerik.com/featured/jquery-using-only-what-you-need/" rel="nofollow">http://developer.telerik.com/featured/jquery-using-only-what-you-need/</a>). Which means it can be used with systemJS or webpack. No globals.</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment odd alt depth-4" id="dsq-comment-28581"> 
               <div id="dsq-comment-header-28581" class="dsq-comment-header"> 
                <cite id="dsq-cite-28581"> <a id="dsq-author-user-28581" href="http://cosmi.nu/" target="_blank" rel="nofollow">Cosmin Nicula</a> </cite> 
               </div> 
               <div id="dsq-comment-body-28581" class="dsq-comment-body"> 
                <div id="dsq-comment-message-28581" class="dsq-comment-message">
                 <p>Great!</p> 
                </div> 
               </div> </li>
              <!-- #comment-## --> 
              <li class="comment even depth-4" id="dsq-comment-29231"> 
               <div id="dsq-comment-header-29231" class="dsq-comment-header"> 
                <cite id="dsq-cite-29231"> <span id="dsq-author-user-29231">brownieboy</span> </cite> 
               </div> 
               <div id="dsq-comment-body-29231" class="dsq-comment-body"> 
                <div id="dsq-comment-message-29231" class="dsq-comment-message">
                 <p>“Page not found” for your link, Cody. </p> 
                </div> 
               </div> 
               <ul class="children"> 
                <li class="comment odd alt depth-5" id="dsq-comment-29261"> 
                 <div id="dsq-comment-header-29261" class="dsq-comment-header"> 
                  <cite id="dsq-cite-29261"> <a id="dsq-author-user-29261" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
                 </div> 
                 <div id="dsq-comment-body-29261" class="dsq-comment-body"> 
                  <div id="dsq-comment-message-29261" class="dsq-comment-message">
                   <p>Doh. Thanks. Fixed. Appreciate you pointing that out.</p> 
                  </div> 
                 </div> </li>
                <!-- #comment-## --> 
               </ul>
               <!-- .children --> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment even depth-2" id="dsq-comment-28561"> 
           <div id="dsq-comment-header-28561" class="dsq-comment-header"> 
            <cite id="dsq-cite-28561"> <a id="dsq-author-user-28561" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28561" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28561" class="dsq-comment-message">
             <p>Thanks for sharing this. I like options. This is a nice option. With jQuery one can create a custom version of jQuery including only what they want. As the tool you have provided does. Or, they can use AMD and something like systemJS or webpack to include only what is needed.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-3" id="dsq-comment-28591"> 
             <div id="dsq-comment-header-28591" class="dsq-comment-header"> 
              <cite id="dsq-cite-28591"> <span id="dsq-author-user-28591">Erwin Poeze</span> </cite> 
             </div> 
             <div id="dsq-comment-body-28591" class="dsq-comment-body"> 
              <div id="dsq-comment-message-28591" class="dsq-comment-message">
               <p>I’m glad you like the tool, thanks. Yes, you are right that there are different ways to assemble the jQuery modules. We created jqueryconfig.com for the group of jQuery users that are not familiar with nodejs, webpack, etc.</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-28583"> 
         <div id="dsq-comment-header-28583" class="dsq-comment-header"> 
          <cite id="dsq-cite-28583"> <span id="dsq-author-user-28583">Helder Cervantes</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28583" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28583" class="dsq-comment-message">
           <p>jQuery is a pencil. It’s quite simple, really. You can write with it, you can draw with it. You can’t paint a building with it. There are better tools for that. Choose your tools wisely and don’t touch my pencils!</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28611"> 
         <div id="dsq-comment-header-28611" class="dsq-comment-header"> 
          <cite id="dsq-cite-28611"> <span id="dsq-author-user-28611">Mike</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28611" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28611" class="dsq-comment-message">
           <p>I’ve been using jQuery for many years and it has given me back many hours of my life. Now days many folks are used to having new API/SDKs/abstractions appear daily, I wonder how many don’t likeuse it just because it is ‘old’ and ‘not the latest and greatest’. I’ll continue to use this finely worn and honed tool as it is reliable, understandable and gets the job done quickly.</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-28621"> 
         <div id="dsq-comment-header-28621" class="dsq-comment-header"> 
          <cite id="dsq-cite-28621"> <span id="dsq-author-user-28621">HJ</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28621" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28621" class="dsq-comment-message">
           <p>Totally agreed! jQuery makes life so much easier!</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28901"> 
         <div id="dsq-comment-header-28901" class="dsq-comment-header"> 
          <cite id="dsq-cite-28901"> <span id="dsq-author-user-28901">Avi Block</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28901" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28901" class="dsq-comment-message">
           <p>The argument of which would you rather write, is a strawman. Most modern frameworks keep you away from the DOM, and with good reason. There is rarely any good reason to write jQuery(‘h2:eq(1)’).hide(); as your code will probably break next week when the designer decides to change the DOM around. Other reasons to stay away from the DOM are speed…a higher level abstraction like React, angular or vue.js will be able to do what you want to do, much more efficiently, and with much less (of your) code.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-28921"> 
           <div id="dsq-comment-header-28921" class="dsq-comment-header"> 
            <cite id="dsq-cite-28921"> <a id="dsq-author-user-28921" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28921" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28921" class="dsq-comment-message">
             <p>Which argument exactly is a strawman? I’m not exactly sure which sham assertion you are claiming I setup to then defeat. Additionally, I’m not directly trying to refute another argument. If you are referring to my general observation that some people think jQuery is irrelevant, well, isn’t that in fact the case? Don’t you think this? Or, you think I fabricated that?</p> 
             <p>My claim is that the value of jQuery is connected to it’s API and that this value has not changed for those people who need to directly script HTML/DOM (be it app devs or lib devs). Thus it still has relevancy. I made no claim that people should use it instead of X,Y, and Z. You are actually claiming not to use it, and use X, Y, Z over it. Not everything that is done on the web is an application. At a lower level, jQuery is the ideal API to directly script the DOM. It was the purpose of its creation and is what gives it relevancy today for those that need a better solution that the native API’s.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-3" id="dsq-comment-29463"> 
             <div id="dsq-comment-header-29463" class="dsq-comment-header"> 
              <cite id="dsq-cite-29463"> <span id="dsq-author-user-29463">Avi Block</span> </cite> 
             </div> 
             <div id="dsq-comment-body-29463" class="dsq-comment-body"> 
              <div id="dsq-comment-message-29463" class="dsq-comment-message">
               <p>Your question was, what would you rather write, X or Y. Of course you would rather write Y then X therefore Z is a better solution. That’s assuming the problem at hand in modern client side development in 2015 was choosing between X and Y. That may have been the case in 2007, but is not the case in 2015. We’ve evolved, and no serious application will (or should) be doing jQuery(‘h2:eq(1)’).hide(); and certainly not the DOM api equivalent. </p> 
               <p>Library and framework authors are not doing that either.</p> 
               <p>If you want to claim that these frameworks are providing “jquery like” dom abstractions to their work, then that doesn’t prove the relevance of jQuery, which provide 300x more abstractions than are what these frameworks need to do.</p> 
               <p>No series framework needs to do jQuery(‘h2:eq(1)’).hide();</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment even depth-4" id="dsq-comment-29501"> 
               <div id="dsq-comment-header-29501" class="dsq-comment-header"> 
                <cite id="dsq-cite-29501"> <a id="dsq-author-user-29501" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
               </div> 
               <div id="dsq-comment-body-29501" class="dsq-comment-body"> 
                <div id="dsq-comment-message-29501" class="dsq-comment-message">
                 <p>I think the demonstration I gave might be in our way here. My point, let’s set aside the specific code example, was that the value of jQuery is tied up in the API. The fact that it makes any and all DOM scripting easier and faster is where the value lies. My claim is that this value is still relevant today. For example things like Ember (i.e. authors of solutions) and for developers (i.e. not everyone is building an app). jQuery is not needed, it is desired. Just like I don’t need lodash to do functional programming but I desire to use it when I do it. When I need to script the DOM I don’t need jQuery I desire it because of what it can do for me. This translates to a range of contexts that developers find themselves in, not just application development.</p> 
                </div> 
               </div> 
               <ul class="children"> 
                <li class="comment odd alt depth-5" id="dsq-comment-31111"> 
                 <div id="dsq-comment-header-31111" class="dsq-comment-header"> 
                  <cite id="dsq-cite-31111"> <a id="dsq-author-user-31111" href="http://josephrex.me/" target="_blank" rel="nofollow">Joseph Rex</a> </cite> 
                 </div> 
                 <div id="dsq-comment-body-31111" class="dsq-comment-body"> 
                  <div id="dsq-comment-message-31111" class="dsq-comment-message">
                   <p>Your code example may be bad practice when used against but it doesn’t mean it’s irrelevant. Avi Block think of a good use case for what he has said if I have made a plugin that injects a particular set of nodes in the DOM which will always be structured the same way as long as the plugin is used then there can be a case of $(‘.pluginSelector:eq(1)’).hide(); . There’s no point in bashing a solid point that has been made. I don’t use jQuery on my personal website because I have very trivial need for JS and my few DOM manipulations shouldn’t require that I affect my performance with the entire library but when it’s a non-trivial application and there’s obviously a need for jQuery then I’ll go for it. What makes good developers is the ability to get the right tools for the context and use them properly rather than embrace certain methods just to feel cool or be among the majority that use them.</p> 
                  </div> 
                 </div> </li>
                <!-- #comment-## --> 
               </ul>
               <!-- .children --> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment even depth-2" id="dsq-comment-61801"> 
           <div id="dsq-comment-header-61801" class="dsq-comment-header"> 
            <cite id="dsq-cite-61801"> <span id="dsq-author-user-61801">maxcmoi</span> </cite> 
           </div> 
           <div id="dsq-comment-body-61801" class="dsq-comment-body"> 
            <div id="dsq-comment-message-61801" class="dsq-comment-message">
             <p>I agree with you Avi, jQuery is just too prone with errors once changes are done to the HTML by a designer.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-even depth-1" id="dsq-comment-28941"> 
         <div id="dsq-comment-header-28941" class="dsq-comment-header"> 
          <cite id="dsq-cite-28941"> <span id="dsq-author-user-28941">opus131</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28941" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28941" class="dsq-comment-message">
           <p>jQuery was a blessing when it came out; and I will always be grateful to John Resig and hold him in the highest regards for giving it to the community.</p> 
           <p>However, in 2015 is only useful in the following ways:</p> 
           <p>* For identifying which libs and products *not* to use, because they still require it.</p> 
           <p>* For identifying which developers *not* to hire because they have not moved on and still rely on it, while much better alternatives exist for all the use-cases jQuery covers.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-28991"> 
           <div id="dsq-comment-header-28991" class="dsq-comment-header"> 
            <cite id="dsq-cite-28991"> <a id="dsq-author-user-28991" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28991" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28991" class="dsq-comment-message">
             <p>Every angular developer that uses it or jqlite should not be using it and should not be hired?</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-3" id="dsq-comment-29051"> 
             <div id="dsq-comment-header-29051" class="dsq-comment-header"> 
              <cite id="dsq-cite-29051"> <span id="dsq-author-user-29051">opus131</span> </cite> 
             </div> 
             <div id="dsq-comment-body-29051" class="dsq-comment-body"> 
              <div id="dsq-comment-message-29051" class="dsq-comment-message">
               <p>What an unfortunate choice to bring up angular – unless you are trying to help me make my point: when it came out in 2009, embracing jquery/jqlite was a valid design decision. In 2015 it is not, and of course the angular core team is aware of that – which is why there won’t be any jqlite or jquery in Angular2.</p> 
               <p>And yes – when I have the choice between two frontend-dev candidates who are otherwise equally skilled, I’ll hire the one who understands that jquery no longer has a place in the frontend-dev toolchain in 2015, and that it is not a good choice for a new project. </p> 
               <p>ps: Not nice how you were trying to twist my words – I never suggested not to hire angular devs – I like angular a lot…</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment even depth-4" id="dsq-comment-29121"> 
               <div id="dsq-comment-header-29121" class="dsq-comment-header"> 
                <cite id="dsq-cite-29121"> <a id="dsq-author-user-29121" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
               </div> 
               <div id="dsq-comment-body-29121" class="dsq-comment-body"> 
                <div id="dsq-comment-message-29121" class="dsq-comment-message">
                 <p>I asked you a question. I didn’t assert anything. Not sure what you think I twisted when I ask only one question. I was asking for clarification. Suggesting that because Angular 2 does not use jQuery, therefore no one should use does not follow. I’m unclear why you are being so dogmatic about a tool that still helps devs get the job done today. I’m not asserting that it should always be used. However, you are asserting it should never be used. And that you would not hire anyone who uses it today. The first assertion is an objective claim, while the second is rather subjective. Please tell me why you think objectively no should be using jQuery today. I’m open to being wrong if you have a rational argument for such a bold claim. However, just asserting that it is true does not make it true.</p> 
                </div> 
               </div> 
               <ul class="children"> 
                <li class="comment odd alt depth-5" id="dsq-comment-29163"> 
                 <div id="dsq-comment-header-29163" class="dsq-comment-header"> 
                  <cite id="dsq-cite-29163"> <span id="dsq-author-user-29163">opus131</span> </cite> 
                 </div> 
                 <div id="dsq-comment-body-29163" class="dsq-comment-body"> 
                  <div id="dsq-comment-message-29163" class="dsq-comment-message">
                   <p>&gt;&gt; Suggesting that because Angular 2 does not use jQuery,<br> &gt;&gt; therefore no one should use does not follow. </p> 
                   <p>Wow, you are twisting my words yet again. Did I suggest that no one should use jquery because Angular 2 does not use it? I didn’t even mention Angular in my initial comment – you brought it up in your reply.</p> 
                   <p>Anyhow, don’t bother replying, I do not have time for sophistry, I’m out of here…</p> 
                  </div> 
                 </div> </li>
                <!-- #comment-## --> 
                <li class="comment even depth-5" id="dsq-comment-29181"> 
                 <div id="dsq-comment-header-29181" class="dsq-comment-header"> 
                  <cite id="dsq-cite-29181"> <a id="dsq-author-user-29181" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
                 </div> 
                 <div id="dsq-comment-body-29181" class="dsq-comment-body"> 
                  <div id="dsq-comment-message-29181" class="dsq-comment-message">
                   <p>I didn’t twist anything the first time. I asked a question. If my question or statements do not follow from your assertions then you simply need to make a clarification. I can’t perfectly understand your perspective without asking questions or trying to figure out what exactly you are saying and why.</p> 
                   <p>I am open to thinking about your claims if you could support them with reasons. Simply stating something does not make it obviously the case. You seem to think jQuery should not be used and go as far to say a developer should not be hired if they use it. You need to justify that rationality before I just accept it.</p> 
                  </div> 
                 </div> </li>
                <!-- #comment-## --> 
               </ul>
               <!-- .children --> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
          <li class="comment odd alt depth-2" id="dsq-comment-29321"> 
           <div id="dsq-comment-header-29321" class="dsq-comment-header"> 
            <cite id="dsq-cite-29321"> <span id="dsq-author-user-29321">CodeMonkey432</span> </cite> 
           </div> 
           <div id="dsq-comment-body-29321" class="dsq-comment-body"> 
            <div id="dsq-comment-message-29321" class="dsq-comment-message">
             <p>Twisted your words? No, he simply showed the fallacy of your attitude and you had no reply. Man… coders like you…I would never TAKE a job from you with your attitude. You must be a joy to work with – nice rage quit.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-28961"> 
         <div id="dsq-comment-header-28961" class="dsq-comment-header"> 
          <cite id="dsq-cite-28961"> <span id="dsq-author-user-28961">Madara Uchiha</span> </cite> 
         </div> 
         <div id="dsq-comment-body-28961" class="dsq-comment-body"> 
          <div id="dsq-comment-message-28961" class="dsq-comment-message">
           <p>You aren’t really being fair with your examples here.</p> 
           <p>`document.querySelector(‘h2:eq(1)’).hidden = true`</p> 
           <p>Which is supported by anything that supports querySelector. so it’s really a case of whether you need IE8 or not.</p> 
           <p>If you need IE8, you definitely want jQuery to iron out the quirks. But if you don’t, the quirks today aren’t really about the DOM, more of the actual ECMAScript implementation, and jQuery doesn’t really help you there.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-28971"> 
           <div id="dsq-comment-header-28971" class="dsq-comment-header"> 
            <cite id="dsq-cite-28971"> <a id="dsq-author-user-28971" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-28971" class="dsq-comment-body"> 
            <div id="dsq-comment-message-28971" class="dsq-comment-message">
             <p>If one must script the DOM in 2015 in a non-trivial fashion are you suggesting that the native DOM API’s do a better job (ease of use, speed to get something done, semantical readable api..etc…) than jQuery? The DOM did not all of a sudden get better because it offers a few of the patterns jQuery made popular.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
          <li class="comment even depth-2" id="dsq-comment-29311"> 
           <div id="dsq-comment-header-29311" class="dsq-comment-header"> 
            <cite id="dsq-cite-29311"> <span id="dsq-author-user-29311">steve</span> </cite> 
           </div> 
           <div id="dsq-comment-body-29311" class="dsq-comment-body"> 
            <div id="dsq-comment-message-29311" class="dsq-comment-message">
             <p>Native js even with querySelectorAll isnt as elegant or as flexible as traversing sideways with siblings, downwards with children, or upwards with closest parent of the found elements. Multiple binding or delegation is clunky without it. Killing a bind event or resorting thr event order. Jquery isnt just a prime element selector engine. It is terse, compact, easier to read and much more flexible. The only reason developers are dismissing its worth now is due to the abuse of dependencies on elements existing in the dom. Once you change the html, you break the js chain. Thats why data binding evolved to make clear in thr html what the dependencies are. Unfortunately they dictate the formula of javascript structure and its not to everyones taste. Jquery is popular still because it is to most developers taste. The learning curve is tiny. So thats why, despite the abuse and poor architectural decisions made by previous cowboys, it is much easier to read, fix, restore any btml chains even if they do break.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://americanfido.com/web-development-reading-list-111-preconnect-dynamic-responsive-images-dom-event-listeners/" rel="external nofollow" class="url">Web Development Reading List #111: Preconnect, Dynamic Responsive Images, DOM Event Listeners - American Fido</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment odd alt thread-even depth-1" id="dsq-comment-29031"> 
         <div id="dsq-comment-header-29031" class="dsq-comment-header"> 
          <cite id="dsq-cite-29031"> <a id="dsq-author-user-29031" href="http://ninjapowa.com" target="_blank" rel="nofollow">Yee Yang</a> </cite> 
         </div> 
         <div id="dsq-comment-body-29031" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29031" class="dsq-comment-message">
           <p>Agreed. Why use a task manager (grunt/gulp)? Because it’s efficient to handle the repetitious tasks that we hate doing. Why use jQuery? Because it’s efficient to handle the repetitious tasks that we hate doing.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-29211"> 
           <div id="dsq-comment-header-29211" class="dsq-comment-header"> 
            <cite id="dsq-cite-29211"> <a id="dsq-author-user-29211" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-29211" class="dsq-comment-body"> 
            <div id="dsq-comment-message-29211" class="dsq-comment-message">
             <p>Good point.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29041"> 
         <div id="dsq-comment-header-29041" class="dsq-comment-header"> 
          <cite id="dsq-cite-29041"> <span id="dsq-author-user-29041">Ben</span> </cite> 
         </div> 
         <div id="dsq-comment-body-29041" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29041" class="dsq-comment-message">
           <p>jQuery is nice if you don’t have any of your presentation tied to data, as most serious applications do. Frameworks like Ember manipulate the DOM based on the state of data and properties, which keeps the developer safe from manually updating certain UI elements when data changes, but forgetting others. If you’re using a framework, introducing jQuery doesn’t do much more than introduce the risk of inconsistency and a UI that don’t property reflect the data backing it.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-29143"> 
           <div id="dsq-comment-header-29143" class="dsq-comment-header"> 
            <cite id="dsq-cite-29143"> <a id="dsq-author-user-29143" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-29143" class="dsq-comment-body"> 
            <div id="dsq-comment-message-29143" class="dsq-comment-message">
             <p>Ember uses jQuery, today, right?</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-3" id="dsq-comment-29171"> 
             <div id="dsq-comment-header-29171" class="dsq-comment-header"> 
              <cite id="dsq-cite-29171"> <span id="dsq-author-user-29171">Ben</span> </cite> 
             </div> 
             <div id="dsq-comment-body-29171" class="dsq-comment-body"> 
              <div id="dsq-comment-message-29171" class="dsq-comment-message">
               <p>Yes, but that’s all handled internally. If I find a situation where I want to use jQuery directly in an Ember app, 99% of the time I’m taking the wrong approach.</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment even depth-4" id="dsq-comment-29191"> 
               <div id="dsq-comment-header-29191" class="dsq-comment-header"> 
                <cite id="dsq-cite-29191"> <a id="dsq-author-user-29191" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
               </div> 
               <div id="dsq-comment-body-29191" class="dsq-comment-body"> 
                <div id="dsq-comment-message-29191" class="dsq-comment-message">
                 <p>Sure. My point in the article is that its mere usage by either dev (hopefully correct) or *libs* still makes it relevant. I’m not claiming more or less.</p> 
                </div> 
               </div> 
               <ul class="children"> 
                <li class="comment odd alt depth-5" id="dsq-comment-29201"> 
                 <div id="dsq-comment-header-29201" class="dsq-comment-header"> 
                  <cite id="dsq-cite-29201"> <span id="dsq-author-user-29201">Ben</span> </cite> 
                 </div> 
                 <div id="dsq-comment-body-29201" class="dsq-comment-body"> 
                  <div id="dsq-comment-message-29201" class="dsq-comment-message">
                   <p>Yes, I agree.</p> 
                  </div> 
                 </div> </li>
                <!-- #comment-## --> 
               </ul>
               <!-- .children --> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-29111"> 
         <div id="dsq-comment-header-29111" class="dsq-comment-header"> 
          <cite id="dsq-cite-29111"> <span id="dsq-author-user-29111">Stephen Tang</span> </cite> 
         </div> 
         <div id="dsq-comment-body-29111" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29111" class="dsq-comment-message">
           <p>Thanks for writing this, Cody. I think the majority of the audience that reads this are web application developers/full-stack, who are accustomed to using React/Angular/Ember, etc. frameworks to write complicated web applications. This audience biases the resulting comments. But, simpler projects involving the DOM without much data-binding and Ajax stuff still exist!</p> 
           <p>There are many developers/designers working out there that are not involved in the web app/SPA development, and jQuery is still very helpful here. The “advanced” and “rock star” developers can continue to argue which framework is great, but the rest of us are just trying to get the job done.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment odd alt depth-2" id="dsq-comment-29141"> 
           <div id="dsq-comment-header-29141" class="dsq-comment-header"> 
            <cite id="dsq-cite-29141"> <a id="dsq-author-user-29141" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-29141" class="dsq-comment-body"> 
            <div id="dsq-comment-message-29141" class="dsq-comment-message">
             <p>Well said. I can’t help but even feel a tingle of elitism going on here in other comments. This is why the bases of my argument is for scripting HTML in non-trivial situations. I made no claim that jQuery should be used when building applications. However, again, today, Ember, Angular, vue.js, Meteor and others all make use of the jQuery API either directly or by mimicking the API. To conclude absolutely that jQuery is not relevant today is logically false. It does not follow from the evidence. It is still very much a needed abstraction. Much like underscore or lodash.</p> 
            </div> 
           </div> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-29351"> 
         <div id="dsq-comment-header-29351" class="dsq-comment-header"> 
          <cite id="dsq-cite-29351"> <span id="dsq-author-user-29351">Cris Moreno</span> </cite> 
         </div> 
         <div id="dsq-comment-body-29351" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29351" class="dsq-comment-message">
           <p>In fact, jQuery helps us develop applications leaving the part of the administration of the DOM, besides being a well tested and maintained by large developers library, which gives us the space to focus on the application, in addition to help us write clean code and good practices using Javascript, and for those who are beginning to understand the jQuery code is too learned, and also for those new to the world of JavaScript, jQuery helps them begin to develop real applications.</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-even depth-1" id="dsq-comment-29371"> 
         <div id="dsq-comment-header-29371" class="dsq-comment-header"> 
          <cite id="dsq-cite-29371"> <a id="dsq-author-user-29371" href="http://dan.cx/" target="_blank" rel="nofollow">Daniel Lo Nigro</a> </cite> 
         </div> 
         <div id="dsq-comment-body-29371" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29371" class="dsq-comment-message">
           <p>The problem with jQuery was that it was all tightly coupled, and all namespaced under the $. There was no way to load just the one piece of jQuery you want to use, without loading all of it. If all you want to do is call that .hide() method you mentioned, you shouldn’t have to load all the other stuff jQuery does. Maybe that’s better now, I’m not sure.</p> 
          </div> 
         </div> 
         <ul class="children"> 
          <li class="comment even depth-2" id="dsq-comment-29471"> 
           <div id="dsq-comment-header-29471" class="dsq-comment-header"> 
            <cite id="dsq-cite-29471"> <a id="dsq-author-user-29471" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
           </div> 
           <div id="dsq-comment-body-29471" class="dsq-comment-body"> 
            <div id="dsq-comment-message-29471" class="dsq-comment-message">
             <p>Have a look at: <a href="http://developer.telerik.com/featured/jquery-using-only-what-you-need/" rel="nofollow">http://developer.telerik.com/featured/jquery-using-only-what-you-need/</a> then use system.js or webpack.</p> 
            </div> 
           </div> 
           <ul class="children"> 
            <li class="comment odd alt depth-3" id="dsq-comment-29481"> 
             <div id="dsq-comment-header-29481" class="dsq-comment-header"> 
              <cite id="dsq-cite-29481"> <a id="dsq-author-user-29481" href="http://dan.cx/" target="_blank" rel="nofollow">Daniel Lo Nigro</a> </cite> 
             </div> 
             <div id="dsq-comment-body-29481" class="dsq-comment-body"> 
              <div id="dsq-comment-message-29481" class="dsq-comment-message">
               <p>Oh, nice. Although, even with that level of modularity, jquery/core is still quite bloated.</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment even depth-4" id="dsq-comment-29491"> 
               <div id="dsq-comment-header-29491" class="dsq-comment-header"> 
                <cite id="dsq-cite-29491"> <a id="dsq-author-user-29491" href="http://www.codylindley.com/" target="_blank" rel="nofollow">cody lindley</a> </cite> 
               </div> 
               <div id="dsq-comment-body-29491" class="dsq-comment-body"> 
                <div id="dsq-comment-message-29491" class="dsq-comment-message">
                 <p>Right. It is not down to the method. However, I’ve found this to be modular enough in my usage. But I am sure a situation could come about where further optimization would be required. I’ve just not been shown one yet.</p> 
                </div> 
               </div> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
           </ul>
           <!-- .children --> </li>
          <!-- #comment-## --> 
         </ul>
         <!-- .children --> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29391"> 
         <div id="dsq-comment-header-29391" class="dsq-comment-header"> 
          <cite id="dsq-cite-29391"> <span id="dsq-author-user-29391">rbrtsmith84</span> </cite> 
         </div> 
         <div id="dsq-comment-body-29391" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29391" class="dsq-comment-message">
           <p>Hit the nail on the head. Abstractions in all forms of programming are necessary, what’s important is that you understand what lies beneath the abstraction, then you can make an informed decision if, when or how to use it.<br> jQuery abstracts over probably (According to Doug Crockford) the worst API ever conceived. One mistake many mid-level developers make is they try to overcomplicate things, sometimes to make themselves look superior. On a large project the last thing you want is technical debt, which is what you get when trying to do anything beyond trivial interactions with the DOM .</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-29441"> 
         <div id="dsq-comment-header-29441" class="dsq-comment-header"> 
          <cite id="dsq-cite-29441"> <a id="dsq-author-user-29441" href="http://nmabhinandan.me/" target="_blank" rel="nofollow">Abhinandan</a> </cite> 
         </div> 
         <div id="dsq-comment-body-29441" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29441" class="dsq-comment-message">
           <p>Nope</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://www.pearltrees.com/pplanete/js/id14539793/item160426253" rel="external nofollow" class="url">JS - pplanete | Pearltrees</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29661"> 
         <div id="dsq-comment-header-29661" class="dsq-comment-header"> 
          <cite id="dsq-cite-29661"> <a id="dsq-author-user-29661" href="http://www.syntaxsuccess.com/" target="_blank" rel="nofollow">Torgeir Helgevold</a> </cite> 
         </div> 
         <div id="dsq-comment-body-29661" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29661" class="dsq-comment-message">
           <p>I am not against using jquery for DOM manipulation, but I generally recommend a declerative approach with data binding instead. The biggest problem with jquery is the tight relationship between DOM and code since it assumes a fixed DOM structure. This makes the code fragile since the slightest change in the markup might cause your code to fail. It’s also hard to unit test because of the hard dependency on the DOM.</p> 
           <p>I have a few more thoughts here: <a href="http://www.syntaxsuccess.com/viewarticle/is-jquery-still-relevant" rel="nofollow">http://www.syntaxsuccess.com/viewarticle/is-jquery-still-relevant</a></p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-29671"> 
         <div id="dsq-comment-header-29671" class="dsq-comment-header"> 
          <cite id="dsq-cite-29671"> <span id="dsq-author-user-29671">Dale Anderson</span> </cite> 
         </div> 
         <div id="dsq-comment-body-29671" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29671" class="dsq-comment-message">
           <p>The problem with jQuery as it stands is its bloat. It contains implementations for features that overlap with other, potentially “better” implementations. Promises is a good example – the jQuery implementation is not standards compliant and causes headaches when interacting with other promise libraries. </p> 
           <p>With modern browser UI frameworks that support data binding, or virtual DOM diffing, or whatever, direct DOM manipulation is generally not required. jQuery IS irrelevant, except for smaller projects.</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29871"> 
         <div id="dsq-comment-header-29871" class="dsq-comment-header"> 
          <cite id="dsq-cite-29871"> <span id="dsq-author-user-29871">Alex Kloss</span> </cite> 
         </div> 
         <div id="dsq-comment-body-29871" class="dsq-comment-body"> 
          <div id="dsq-comment-message-29871" class="dsq-comment-message">
           <p>The primary example only fails in IE because you used .setProperty. Had you used `document.getElementsByTagName(‘h2?)[1].style.display=’none’;`, it would even have worked in IE6.</p> 
           <p>Yes, you can speed up development. You can also slow down page performance (I know, that’s mostly negligible, but faster is always better). What I want to say is: know when and when not to use it.</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://davidakennedy.com/2015/11/15/jquerys-relevancy/" rel="external nofollow" class="url">jQuery’s Relevancy | David A. Kennedy</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://www.pearltrees.com/pplanete/js/id14539793/item162245305" rel="external nofollow" class="url">JS - pplanete | Pearltrees</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://snow-tips.com/link-round-up-5/" rel="external nofollow" class="url">Link Round Up #5 » Blog » Snow Tips</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-31561"> 
         <div id="dsq-comment-header-31561" class="dsq-comment-header"> 
          <cite id="dsq-cite-31561"> <span id="dsq-author-user-31561">Mike Cavaliere</span> </cite> 
         </div> 
         <div id="dsq-comment-body-31561" class="dsq-comment-body"> 
          <div id="dsq-comment-message-31561" class="dsq-comment-message">
           <p>I love this article – very relevant topic and important point. We’re in an age of Javascript frameworks &amp; libraries, and there are a fair amount of them. </p> 
           <p>It’s easy to jump on the bandwagon of “what’s the hot new tech” and always ride that wave. But while Angular or React or the others are phenomenal, for some projects they’re complete overkill. </p> 
           <p>And while Javascript itself is evolving and some people like using vanilla JS to lean things up, you can still save a ton of time and hassle on a great many projects using jQuery. Technology is best when using the appropriate tool for the job at hand whenever possible.</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://developer.telerik.com/featured/what-to-expect-from-javascript-in-2016-frameworks/" rel="external nofollow" class="url">What To Expect From JavaScript In 2016 - Frameworks - Telerik Developer NetworkTelerik Developer Network</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-33771"> 
         <div id="dsq-comment-header-33771" class="dsq-comment-header"> 
          <cite id="dsq-cite-33771"> <span id="dsq-author-user-33771">Edwin Reynoso</span> </cite> 
         </div> 
         <div id="dsq-comment-body-33771" class="dsq-comment-body"> 
          <div id="dsq-comment-message-33771" class="dsq-comment-message">
           <p>Hey Cody I’m wondering what you think about NodeList.js (<a href="https://github.com/eorroe/NodeList.js" rel="nofollow">https://github.com/eorroe/NodeList.js</a>)</p> 
           <p>To quickly compare your example:</p> 
           <p><code><br> document.querySelectorAll('h2')[1].style.setProperty('display','none');<br> </code></p> 
           <p>NodeList.js Which makes using the native DOM like jQuery:<br> <code><br> $$('h2').item(1).style.set('display', 'none');<br> </code></p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-61791"> 
         <div id="dsq-comment-header-61791" class="dsq-comment-header"> 
          <cite id="dsq-cite-61791"> <span id="dsq-author-user-61791">maxcmoi</span> </cite> 
         </div> 
         <div id="dsq-comment-body-61791" class="dsq-comment-body"> 
          <div id="dsq-comment-message-61791" class="dsq-comment-message">
           <p>I can see some cases in which Jquery may still be usefull in smaller projects. Nonetheless I believe in bigger projects jQuery is just outdated and not the best solution to make applications that are meant to last. Note that on newer frameworks best practices are embedded and that it is much more easy for anyone to write understandable and bug free code than it is with jQuery where you sometimes end up with really ugly spaghetti code.</p> 
           <p>Other examples: – the jQuery Ajax calls, nowadays one would use something like Fetch which makes api calls a lot easier and cleaner for the developer.<br> – For the DOM manipulation you are most certainly better off with learning reactjs or Angular (even for small projects). You can use reactjs without making an SPA btw.</p> 
           <p>See this very interesting article on why jQuery is better avoided: <a href="http://write.ralphsaunders.co.uk/jquery-is-dead.html" rel="nofollow">http://write.ralphsaunders.co.uk/jquery-is-dead.html</a></p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
       </ul> 
      </div> 
     </div> 
     <script type="text/javascript">
var disqus_url = 'https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/';
var disqus_identifier = '61821 http://developer.telerik.com/?p=61821';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'telerikdev';
var disqus_title = "jQuery&#8217;s Relevancy &#8211; There and Back Again";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=61821';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script> 
    </div> 
    <div class="col-1"> 
     <div class="Content-sidebar"> 
      <div id="banner" style="text-align:center;margin-bottom: 20px;"> 
       <div class="widget">
        <div id="CMACWidget">
         <a href="http://devreach.com/" data-href="http://devreach.com/" banner_id="1344" class="acc_banner_linka5ebdb9f28e22c36ab40624ca73bc469 "><img src="https://developer.telerik.com/wp-content/uploads/ac_uploads/559340026.png" alt="DevReach 2017" title="DevReach 2017"></a>
         <script type="text/javascript">
                            jQuery(document).ready(function(){cm_bind_click_bannera5ebdb9f28e22c36ab40624ca73bc469();cm_init_slidera5ebdb9f28e22c36ab40624ca73bc469();
                            });
                          </script>
         <script type="text/javascript">
            function cm_bind_click_bannera5ebdb9f28e22c36ab40624ca73bc469(){
                    var currentEl = jQuery(".acc_banner_linka5ebdb9f28e22c36ab40624ca73bc469");
                    jQuery(currentEl).on("click",function(e){
                            meBannerObject = this;
                            if (meBannerObject.getAttribute("target") == "_blank"){
                            var newWindowObject = window.open("", "_blank");
                            }
                            jQuery.ajax({url: "https://developer.telerik.com/wp-admin/admin-ajax.php?action=acc_trigger_click_event",
                                              type: "post",
                                              async: false,
                                              data: {campaign_id: 21, banner_id: jQuery(this).attr("banner_id")},
                                              complete:
                                                function(){
                                                    var href = meBannerObject.dataset.href;

                                                    if(!href){
                                                        return false;
                                                    }

                                                    if (meBannerObject.getAttribute("target") == "_blank"){
                                                        newWindowObject.location = href;
                                                    }else {
                                                        document.location = meBannerObject.href;
                                                    }
                                                }
                            });
                            e.preventDefault();
                            return false;
                    });
            }function cm_bind_impression_bannera5ebdb9f28e22c36ab40624ca73bc469(){jQuery.ajax({url: "https://developer.telerik.com/wp-admin/admin-ajax.php?action=acc_trigger_impression_event",
                                            type: "post",
                                            data: {
                                                campaign_id: 21,
                                                banner_id: jQuery(".acc_banner_linka5ebdb9f28e22c36ab40624ca73bc469").attr("banner_id")
                                            }
                                        });}
                function cm_init_slidera5ebdb9f28e22c36ab40624ca73bc469(){}</script>
        </div>
       </div> 
      </div> 
      <h4>Telerik Developer Digest</h4> 
      <p class="newsletter-sidebar">Software development articles from the Telerik Developer Network and around the web.</p> 
      <div class="List"> 
       <span id="newsletterNotification"></span> 
       <script>
        jQuery(document).ready(function() {
            var newsletterNotification = jQuery("#newsletterNotification").kendoNotification({
                    autoHideAfter: 0
                }).data("kendoNotification");
            });
    </script> 
       <form method="post" action="https://digest.telerik.com/subscribe"> 
        <input type="hidden" name="redirectTo" value="https://developer.telerik.com/featured/jquerys-relevancy-there-and-back-again/"> 
        <input type="email" name="email" placeholder="Email"> 
        <input type="submit" value="Sign Up"> 
       </form> 
       <br> 
       <p class="newsletter-sidebar"><a href="https://digest.telerik.com/latest">Click here</a> to sample the latest issue.</p> 
      </div> 
      <h4>Featured Opinions</h4> 
      <div class="List"> 
       <div> 
        <h5><a href="https://developer.telerik.com/category/content-types/opinion/">Opinion</a></h5> 
        <a href="https://developer.telerik.com/content-types/opinion/tech-event-needs-money/">So Your Tech Event Needs Money?</a> 
        <h6>August 15, 2017</h6> 
       </div> 
       <div> 
        <h5><a href="https://developer.telerik.com/category/content-types/podcast/">Podcast</a></h5> 
        <a href="https://developer.telerik.com/content-types/podcast/developer-digest-net-core-nativescript/">Developer Digest .NET Core and NativeScript</a> 
        <h6>July 26, 2017</h6> 
       </div> 
      </div>
      <h4 class="u-pt4">Telerik Announcements</h4> 
      <div class="List"> 
       <div> 
        <!--<img src="http://placehold.it/40x40" class="Thumb" />--> 
        <a href="http://www.telerik.com/blogs/progress-telerik-ui-for-uwp-joins-net-foundation">Progress Telerik UI for UWP Joins the .NET Foundation</a> 
       </div> 
       <div> 
        <!--<img src="http://placehold.it/40x40" class="Thumb" />--> 
        <a href="http://www.telerik.com/blogs/react-and-vue-support-coming-to-kendo-ui">React and Vue Support Coming to Kendo UI</a> 
       </div> 
      </div> 
      <h4>Follow Us</h4> 
      <div class="SocialIcons"> 
       <a href="https://www.facebook.com/Telerik" class="icon-facebook"></a> 
       <a href="https://twitter.com/telerik" class="icon-twitter"></a> 
       <a href="https://plus.google.com/+telerik" class="icon-google"></a> 
       <a href="https://github.com/telerik" class="icon-github"></a> 
       <a href="https://www.linkedin.com/company/telerik" class="icon-linkedin"></a> 
       <a href="http://developer.telerik.com/feed" class="icon-rss"></a> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="Footer"> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-1"> 
      <h4>Browse by Topic</h4> 
      <a href="https://developer.telerik.com/category/topics/net/">.NET</a> 
      <a href="https://developer.telerik.com/category/topics/cloud/">Cloud</a> 
      <a href="https://developer.telerik.com/category/topics/desktop/">Desktop</a> 
      <a href="https://developer.telerik.com/category/topics/iot/">IoT &amp; Bots</a> 
      <a href="https://developer.telerik.com/category/topics/machine-learning/">Machine Learning</a> 
      <a href="https://developer.telerik.com/category/topics/mobile-development/">Mobile</a> 
      <a href="https://developer.telerik.com/category/topics/progress-labs/">Progress Labs</a> 
      <a href="https://developer.telerik.com/category/topics/testing/">Testing</a> 
      <a href="https://developer.telerik.com/category/topics/web-development/">Web</a> 
     </div> 
     <div class="col-1"> 
      <h4>Browse by Content Type</h4> 
      <a href="https://developer.telerik.com/category/content-types/opinion/">Opinion</a> 
      <a href="https://developer.telerik.com/category/content-types/podcast/">Podcast</a> 
      <a href="https://developer.telerik.com/category/content-types/slackchats/">Slack Chats</a> 
      <a href="https://developer.telerik.com/category/content-types/tutorials/">Tutorials</a> 
      <a href="https://developer.telerik.com/category/content-types/video/">Video</a> 
     </div> 
     <div class="col-1 col--offset-1"> 
      <h4>Contact</h4> 
      <ul class="ListClean"> 
       <li><span>USA: </span>+1 888 365 2779</li> 
       <li><span>UK: </span>+44 13 4436 0444</li> 
       <li><span>India: </span>+91 124 4300987</li> 
       <li><span>Bulgaria: </span>+359 2 8099850</li> 
       <li><span>Australia: </span>+61 3 9805 8670</li> 
       <li><a href="mailto:sales@telerik.com">sales@telerik.com</a></li> 
      </ul> 
     </div> 
    </div> 
    <div class="Footer-Info"> 
     <a href="http://www.telerik.com/company/terms-of-use">Terms of Use</a>|
     <a href="http://www.telerik.com/company/feedback">Site Feedback</a>|
     <a href="http://www.telerik.com/company/privacy-policy">Privacy Policy</a> 
     <p>Copyright © , Progress Software Corporation and/or its subsidiaries or affiliates. All Rights Reserved.</p> 
     <p>Progress, Telerik, and certain product names used herein are trademarks or registered trademarks of Progress Software Corporation and/or one of its subsidiaries or affiliates in the U.S. and/or other countries. See <a href="https://www.progress.com/legal/trademarks">Trademarks</a> or appropriate markings.</p> 
    </div> 
   </div> 
  </div> 
  <script type="text/javascript">
var disqus_shortname = 'telerikdev';
/* * * DON'T EDIT BELOW THIS LINE * * */
(function () {
var s = document.createElement('script'); s.async = true;
s.type = 'text/javascript';
s.src = '//' + disqus_shortname + '.disqus.com/count.js';
(document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
}());
</script> 
  <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'telerikdev';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1 && nodes[i].parentNode.tagName == 'A') {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script');
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/jquery/ui/core.min.js?ver=1.11.4"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/jquery/ui/datepicker.min.js?ver=1.11.4"></script> 
  <script type="text/javascript">
jQuery(document).ready(function(jQuery){jQuery.datepicker.setDefaults({"closeText":"Close","currentText":"Today","monthNames":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthNamesShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"nextText":"Next","prevText":"Previous","dayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"dayNamesShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"dayNamesMin":["S","M","T","W","T","F","S"],"dateFormat":"MM d, yy","firstDay":1,"isRTL":false});});
</script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/page-links-to/js/new-tab.min.js?ver=2.9.8"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/uploads/minqueue-cache/minqueue-d6bfbe77-a0e32db9.js"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-content/plugins/prism-wp/libs/prism/plugins/line-numbers/prism-line-numbers.min.js?ver=1.0.0"></script> 
  <script type="text/javascript" src="https://developer.telerik.com/wp-includes/js/wp-embed.min.js?ver=4.8.2"></script> 
  <script>
window.onload = function() {
    Gifffer();
}
</script>   
 </body>
</html>