<!doctype html>
<html lang="en-us">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
  <meta name="viewport" content="width=device-width, minimum-scale=0.75, maximum-scale=1"> 
  <meta name="format-detection" content="telephone=no"> 
  <link rel="shortcut icon" href="/images/favicon.png" type="image/png"> 
  <link rel="logo" type="image/svg" href="http://www.sitepen.com/images/sitepen.svg"> 
  <link rel="stylesheet" href="/css/main.css?v=1504039164" media="screen, print"> 
  <script>var dojoConfig = { async: 1, selectorEngine: 'lite' }; 'ontouchstart' in document && (document.documentElement.className += ' has-touch');</script> 
  <link rel="stylesheet" type="text/css" href="/css/syntaxHighlighter.css"> 
  <title>  Understanding dojo.require - Blog | SitePen</title> 
  <link rel="pingback" href="https://www.sitepen.com/blog/xmlrpc.php"> 
  <!-- BEGIN Metadata added by the Add-Meta-Tags WordPress plugin --> 
  <meta name="description" content="Dojo provides a feature-rich system for including JavaScript modules. Before we begin this journey to explore this concept in depth, you should know that absolutely no knowledge of the Dojo module, packaging, and build system are required to use Dojo."> 
  <meta name="keywords" content="dojo, javascript, performance, dojo, requirejs"> 
  <meta property="og:site_name" content="SitePen Blog"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Understanding dojo.require"> 
  <meta property="og:url" content="https://www.sitepen.com/blog/2010/03/29/understanding-dojo-require/"> 
  <meta property="og:description" content="Dojo provides a feature-rich system for including JavaScript modules. Before we begin this journey to explore this concept in depth, you should know that absolutely no knowledge of the Dojo module, packaging, and build system are required to use Dojo."> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:updated_time" content="2010-03-29T08:25:05+00:00"> 
  <meta property="og:image" content="https://www.sitepen.com/blog/wp-content/uploads/2010/03/file1.png"> 
  <meta property="og:image:secure_url" content="https://www.sitepen.com/blog/wp-content/uploads/2010/03/file1.png"> 
  <meta property="og:image:width" content="187"> 
  <meta property="og:image:height" content="38"> 
  <meta property="og:image:type" content="image/png"> 
  <meta property="article:published_time" content="2010-03-29T00:01:23+00:00"> 
  <meta property="article:modified_time" content="2010-03-29T08:25:05+00:00"> 
  <meta property="article:author" content="https://www.sitepen.com/blog/author/clindley/"> 
  <meta property="article:publisher" content="https://www.facebook.com/SitePen"> 
  <meta property="article:section" content="Dojo"> 
  <meta property="article:section" content="JavaScript"> 
  <meta property="article:section" content="Performance"> 
  <meta property="article:tag" content="dojo"> 
  <meta property="article:tag" content="javascript"> 
  <meta property="article:tag" content="performance"> 
  <meta property="article:tag" content="dojo"> 
  <meta property="article:tag" content="requirejs"> 
  <!-- END Metadata added by the Add-Meta-Tags WordPress plugin --> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="SitePen Blog » Understanding dojo.require Comments Feed" href="https://www.sitepen.com/blog/2010/03/29/understanding-dojo-require/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.sitepen.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.8"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b===c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="avatar-manager-css" href="https://www.sitepen.com/blog/wp-content/plugins/avatar-manager/assets/css/avatar-manager.min.css?ver=1.2.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="light-style-css" href="https://www.sitepen.com/blog/wp-content/plugins/organize-series/orgSeriesLightTheme.css?ver=4.8" type="text/css" media="all"> 
  <script type="text/javascript" src="https://www.sitepen.com/blog/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="https://www.sitepen.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript" src="https://www.sitepen.com/blog/wp-content/plugins/avatar-manager/assets/js/avatar-manager.min.js?ver=1.2.1"></script> 
  <link rel="https://api.w.org/" href="https://www.sitepen.com/blog/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.sitepen.com/blog/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.sitepen.com/blog/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Can Flash Thrive Going Forward?" href="https://www.sitepen.com/blog/2010/03/10/can-flash-thrive-going-forward/"> 
  <link rel="next" title="Thoughts on Apple vs. Adobe" href="https://www.sitepen.com/blog/2010/04/30/thoughts-on-apple-vs-adobe/"> 
  <meta name="generator" content="WordPress 4.8"> 
  <link rel="canonical" href="https://www.sitepen.com/blog/2010/03/29/understanding-dojo-require/"> 
  <link rel="shortlink" href="https://www.sitepen.com/blog/?p=1139"> 
  <link rel="alternate" type="application/json+oembed" href="https://www.sitepen.com/blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.sitepen.com%2Fblog%2F2010%2F03%2F29%2Funderstanding-dojo-require%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="https://www.sitepen.com/blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.sitepen.com%2Fblog%2F2010%2F03%2F29%2Funderstanding-dojo-require%2F&amp;format=xml"> 
  <script type="text/javascript"><!--
function powerpress_pinw(pinw_url){window.open(pinw_url, 'PowerPressPlayer','toolbar=0,status=0,resizable=1,width=460,height=320');	return false;}
//-->
</script> 
  <style type="text/css" id="syntaxhighlighteranchor"></style> 
  <!-- Start of Google Analytics Code --> 
  <script async>
		(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
		})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

		/* global ga */
		ga('create', 'UA-3242977-2', 'auto');
		ga('send', 'pageview');
	</script> 
  <!-- End of Google Analytics Code --> 
 </head> 
 <body class="page-blog"> 
  <header class="site-header"> 
   <div class="container"> 
    <nav class="navbar is-transparent"> 
     <div class="navbar-brand"> 
      <a class="navbar-item siteLogo" href="/"> 
       <svg width="117" height="31" xmlns="http://www.w3.org/2000/svg" role="img" aria-labelledby="logo-title"> 
        <title id="logo-title">Sitepen Logo</title> 
        <g fill="none" fill-rule="evenodd"> 
         <g fill="#fff" class="logo"> 
          <path d="M18 11.4l-5.6.6L6 18.4c-1.2 1.2-2.6.7-2.4 1l6.2-.5 6.7-6.8c.5-.4 1-.7 1.6-.8z" opacity=".4" /> 
          <path d="M14.5 1L1 14.4C-.4 15.8-.4 17.8 1 19 2 20.4 4 20.4 5.4 19L19 5.6c1.3-1.3 1.3-3.3 0-4.6C18-.4 16-.4 14.6 1zM3 25.5c-1.3 1.3-1.3 3.3 0 4.6C4 31.4 6 31.4 7.4 30L21 16.6c1.3-1.3 1.3-3.3 0-4.6-1.2-1.3-3.2-1.3-4.5 0L3 25.4z" /> 
         </g> 
         <g fill="#fff" class="logoType"> 
          <path d="M37 23c1 .5 2.3 1 3.8 1 3.3 0 5-1.7 5-4 0-2-1-3.2-3.4-4-2-.8-2.7-1.3-2.7-2.4 0-1 .8-2 2.3-2 1.4 0 2.3.6 3 1l.4-1.8c-.7-.5-2-.8-3.3-.8-3 0-4.6 1.7-4.6 4 0 1.5 1 2.8 3.6 3.7 2 .7 2.6 1.3 2.6 2.5 0 1-1 2-2.7 2-1.4 0-2.7-.5-3.4-1L37 23zM50.6 24V10.5h-2.3V24h2.3zm-1-19c-1 0-1.6.7-1.6 1.5S48.6 8 49.4 8c1 0 1.5-.7 1.5-1.5 0-1-.7-1.5-1.5-1.5zM55 7.7v2.6h-2V12h2v7.4c0 1.8.4 3 1 3.6.6.6 1.5 1 2.7 1 1 0 1.7-.3 2.2-.4l-.2-1.6-1.5.2c-1.3 0-1.8-1-1.8-2.7V12H61v-1.7h-3.5V7l-2.4.7zM74 17.3v-1c0-2.5-1-6.3-5.5-6.3-4 0-6.5 3-6.5 7 0 4.4 2.5 7 6.8 7 2.2 0 3.7-.5 4.6-.8l-.5-1.7c-1 .4-2 .7-4 .7-2.4 0-4.6-1.4-4.7-5H74zm-9.6-1.7c.2-1.7 1.3-4 4-4s3.4 2.5 3.4 4h-7.4zM76 29.3h2.4V22c1 1.2 2.6 2 4.5 2 3.3 0 6-2.3 6-7.3 0-4-2.2-6.7-5.7-6.7-2.3 0-4 .8-5 2.4l-.2-2.2h-2v19.1zM78.5 16c0-.4 0-.7.2-1 .5-2 2.2-3.3 4-3.3 2.7 0 4.2 2.4 4.2 5 0 3.3-1.6 5.5-4.3 5.5-2 0-3.5-1.2-4-3V16zM103 17.3v-1c0-2.5-1-6.3-5.5-6.3-4 0-6.5 3-6.5 7 0 4.4 2.5 7 6.8 7 2.2 0 3.7-.5 4.6-.8l-.5-1.7c-1 .4-2 .7-4 .7-2.4 0-4.6-1.4-4.7-5h9.7zm-9.6-1.7c.2-1.7 1.3-4 4-4s3.4 2.5 3.4 4h-7.4zM105 23.7h2.4v-8.3c0-.4 0-.8.2-1 .5-1.5 1.8-2.7 3.5-2.7 2.5 0 3.3 2 3.3 4v8h2.3v-8.2c0-4.5-2.8-5.5-4.7-5.5-2.4 0-4 1-4.7 2.2l-.2-2h-2V23.6z" /> 
         </g> 
        </g> 
       </svg> </a> 
      <div class="nav-toggle navbar-burger"> 
       <span></span> 
       <span></span> 
       <span></span> 
      </div> 
     </div> 
     <div class="navbar-menu"> 
      <div class="navbar-start"></div> 
      <div class="navbar-end"> 
       <div class="navbar-item has-dropdown is-hoverable"> 
        <a class="navbar-link">Solutions</a> 
        <div class="navbar-dropdown"> 
         <a class="navbar-item " href="/support/index"> <img src="/images/icons/icon-ondemand.svg" class="service-icon"> <span>On-Demand Development</span> </a> 
         <a class="navbar-item " href="/development/index"> <img src="/images/icons/icon-webappdev.svg" class="service-icon"> <span>Web App Development</span> </a> 
         <a class="navbar-item " href="/development/mobile"> <img src="/images/icons/icon-mobileappdev.svg" class="service-icon"> <span>Mobile App Development</span> </a> 
         <a class="navbar-item " href="/workshops/index"> <img src="/images/icons/icon-teamtraining.svg" class="service-icon"> <span>Team Training</span> </a> 
         <a class="navbar-item " href="/development/modernization"> <img src="/images/icons/icon-techstack.svg" class="service-icon"> <span>Tech Stack Modernization</span> </a> 
         <a class="navbar-item " href="/development/consulting"> <img src="/images/icons/icon-consulting.svg" class="service-icon"> <span>Technical Consulting</span> </a> 
        </div> 
       </div> 
       <a href="/about/index" class="navbar-item nav-about">Our Work</a> 
       <a href="/blog/" class="navbar-item nav-blog">Blog</a> 
       <a href="/site/contact" class="navbar-item nav-contact">Contact</a> 
      </div> 
     </div> 
    </nav> 
   </div> 
  </header> 
  <div class="main-content"> 
   <div class="hero header-blog-single" id="header-blog-single"> 
    <div class="hero-body"> 
     <div class="container"> 
      <div class="headerText"> 
       <h3 class="title">Understanding dojo.require</h3> 
       <div class="author">
        By 
        <a href="https://www.sitepen.com/blog/author/clindley/" title="Posts by Cody Lindley" rel="author">Cody Lindley</a> on March 29, 2010 12:01 am 
        <div class="postMetadata">
         <a href="https://www.sitepen.com/blog/category/dojo/" rel="category tag">Dojo</a> 
         <a href="https://www.sitepen.com/blog/category/javascript/" rel="category tag">JavaScript</a> 
         <a href="https://www.sitepen.com/blog/category/performance/" rel="category tag">Performance</a>
        </div> 
       </div> 
      </div> 
     </div> 
    </div> 
   </div> 
   <section class="section"> 
    <div class="container blog-single-container"> 
     <article class="blog-single post-1139 post type-post status-publish format-standard hentry category-dojo category-javascript category-performance tag-dojo tag-requirejs"> 
      <div class="post-content"> 
       <p><a href="http://dojotoolkit.org/">Dojo</a> provides a feature-rich system for including JavaScript modules. Before we begin this journey to explore this concept in depth, you should know that absolutely no knowledge of the Dojo module, packaging, and build system are required to use Dojo.</p> 
       <p>You can easily get started using Dojo by using a script element referring to a copy of Dojo on the AOL or Google CDNs. If you want to host your own version of Dojo, you can easily download <code>dojo.js</code>, include it in a web page using a script element, and be off and running with Dojo Base.</p> 
       <p>For those new to Dojo, the following resources give a quick overview of Dojo Base:</p> 
       <ul> 
        <li><a id="qcg2" title="Dojo 1.4 Cheat Sheet" href="http://download.dojotoolkit.org/release-1.4.0/cheat.html">Dojo 1.4 Cheat Sheet</a></li> 
        <li><a id="kh1h" title="Dojo Base Source Tree (1.4.3)" href="http://download.dojotoolkit.org/release-1.4.3/dojo-release-1.4.3/dojo/_base/">Dojo Base Source Tree (1.4.3)</a></li> 
        <li><a id="nqaa" title="Dojo Reference Guide" href="http://www.dojotoolkit.org/reference-guide/dojo/index.html">Dojo Reference Guide</a></li> 
       </ul> 
       <p>In general, dojo.js is a lot like jquery.js or prototype js: you get a competitive set of features founds in most JavaScript libraries that are essential for building great web applications. Those features include:</p> 
       <ul> 
        <li>JavaScript Language Helpers</li> 
        <li>Object utilities</li> 
        <li>Array utilities</li> 
        <li>DOM Manipulation</li> 
        <li>A normalized event system</li> 
        <li>Ajax &amp; Cross domain requests</li> 
        <li>JSON utilities</li> 
        <li>Simple effects</li> 
        <li>Browser sniffing</li> 
       </ul> 
       <p><span id="more-1139"></span></p> 
       <p>However, Dojo is much more than dojo.js, including tools that are not common among most JavaScript libraries. One of these tools is a module system (aka&nbsp;<code>dojo.require()</code>). JavaScript and web browsers do not offer the module loading conveniences found in other programming environments, and Dojo helps solve this problem.</p> 
       <h2>Module System</h2> 
       <p>In a nutshell, the module system leverages&nbsp;<code>dojo.require('my.module')</code> to include JavaScript files into a web page. Conceptually, this is really no different than placing a script element in an HTML page that includes an external JavaScript file.</p> 
       <p>Lets assume that you are running a local development environment on your computer at <code>http://localhost:8888</code>. At the root of this web directory, lets say you have a copy of the <a id="chb." title="Dojo directory" href="http://download.dojotoolkit.org/release-1.4.3/dojo-release-1.4.3/dojo/">Dojo directory</a> (<a id="hxyn" title="Download Dojo" href="http://download.dojotoolkit.org/release-1.4.3/dojo-release-1.4.3.zip">download Dojo 1.4.3</a> if youd like to follow along) and an HTML page, index.html.</p> 
       <p><img class="alignnone size-full wp-image-1180" title="file1" src="http://www.sitepen.com/blog/wp-content/uploads/2010/03/file1.png" alt="file1" width="187" height="38"></p> 
       <p><code>index.html</code> is a simple HTML page that includes <code>dojo.js</code>.</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> 
        <span style="color: #b45f06;">&lt;script src=dojo/dojo.js&gt;&lt;/script&gt;</span>
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>We now have Dojo Base included in the HTML page and have access to all the <a id="cbq_" title="functionality" href="http://download.dojotoolkit.org/release-1.4.0/cheat.html">functionality</a> that it provides us.&nbsp;Life is good, until we require additional functionality.&nbsp; As an example, I would like to use some of the functionality that is contained in Dojo Core, anything inside of the <a id="how_" title="Dojo directory" href="http://download.dojotoolkit.org/release-1.4.3/dojo-release-1.4.3/dojo/">dojo directory</a> that is not directly provided when including <code>dojo.js</code>.</p> 
       <p>Suppose we are building an application that pulls data from the Flickr API. If we use this API, we will need to go cross-domain to get data from the API. Since the ability to do a cross-domain request for JSON data is not built into Dojo Base, we need to include code from Dojo Core. So, lets get back to our <code>index.html</code> page. To load cross-domain functionality, we could simply use a script element and include the needed Dojo file:</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> &lt;script src=/dojo/dojo.js&gt;&lt;/script&gt;
        <br> 
        <span style="color: #b45f06;">&lt;script src=/dojo/io/script.js&gt;&lt;/script&gt;</span>
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>Using a script element gets the job done, but it does not leverage the module system included with Dojo Base. From the viewpoint of Dojoers the <code>/dojo/io/script.js</code> file is a module, and as such can be loaded into a web page using&nbsp;<code>dojo.require()</code>. Below we load <code>dojo.io.script</code> using <code>dojo.require()</code>.</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> &lt;script src=/dojo/dojo.js&gt;&lt;/script&gt;
        <br> &lt;script&gt;
        <br> 
        <span style="color: #b45f06;">dojo.require(dojo.io.script);</span>
        <br> //Note: do not include the .js
        <br> &lt;/script&gt;
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>But what have we gained?&nbsp; Two ways of doing the same exact thing? Well, using the <code>dojo.require()</code> method actually provides us with some functionality that using a simple script element does not.&nbsp; By using the <code>dojo.require()</code> method we gain a module system, which provides a few very important features that can help facilitate the building of complex web applications. We are going to examine these features throughout the rest of this article:</p> 
       <ul> 
        <li>Cache management</li> 
        <li>Namespace Management (<a id="b68m" title="isolated example of namespace code" href="http://perfectionkills.com/namespacing-made-easy/">isolated example of namespace code</a>)</li> 
        <li>Path Management</li> 
        <li>Dependency Management</li> 
       </ul> 
       <p>Lets start with cache management, as this feature is relatively simple and does not require significant explanation. By using <code>dojo.require()</code>, Dojo will prevent the same script from loading twice.&nbsp; If a script is cached in the browser, it uses the cached resource and thus optimizes our code by removing unnecessary HTTP requests. Essentially you can use as many <code>dojo.require()</code>s as youd like to include the same modules, and Dojo is intelligent enough to only request it once!</p> 
       <p>The next feature we will investigate requires us to create our own modules.&nbsp; Before we begin, let me remind you that when dealing with browsers and JavaScript, namespaces are critical so as not to risk polluting the global window scope.&nbsp; If you are curious about modules and namespaces, just review the Dojo source code.&nbsp; All of Dojo is organized into modules/namespaces.&nbsp; And, remember, we have already used <code>dojo.require()</code> to include the predefined <code>dojo.io.script.js</code> module.</p> 
       <p>Lets continue with our Flickr API example.&nbsp; Since we intend to build a very large web application that uses Flickr photo data, we want to organize the code so that it is easy to manage.&nbsp; Essentially, we want to create a flickrApp namespace to store all of the application programming logic.&nbsp; To do this, we update the directory structure to include the file <code>flickrApp.js</code>.</p> 
       <p><img class="alignnone size-full wp-image-1181" title="file2" src="http://www.sitepen.com/blog/wp-content/uploads/2010/03/file2.png" alt="file2" width="156" height="57"></p> 
       <p>If you look at JavaScript development in the Dojo way, the flickrApp.js file is actually a module.&nbsp; However, in order for Dojo to truly consider it a module, we have to tell Dojo. To do that, we use the <code><a id="jhg." title="dojo.provide()" href="http://www.dojotoolkit.org/reference-guide/dojo/provide.html">dojo.provide()</a></code> method to initialize the file as a Dojo module.&nbsp;We do that by adding the following to the flickrApp.js file:</p> 
       <div class="dean_ch">
        dojo.provide(
        <span style="color: #b45f06;">flickrApp</span>); //similar to doing flickrApp = {};
       </div> 
       <p>Basically, <code>dojo.provide()</code> creates an object structure (namespace) based on the string that you pass it.&nbsp; In our situation, it creates an object called flickrApp.&nbsp; With that object created, we can now define aspects of the Flickr application as properties of this object.&nbsp; Heres an example of what the flickrApp.js file could look like:</p> 
       <div class="dean_ch">
        dojo.provide(flickrApp);
        <br> //start creating the application logic for my flickr app
        <br> 
        <span style="color: #b45f06;">flickrApp.getData = function(){};</span> 
       </div> 
       <p>Now that we have our module namespace defined we can leverage <code>dojo.require()</code> and include our custom module in an HTML page:</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> &lt;script src=/dojo/dojo.js&gt;&lt;/script&gt;
        <br> &lt;script&gt;
        <br> dojo.require(dojo.io.script);
        <br> 
        <span style="color: #b45f06;">dojo.require(flickrApp);</span>
        <br> &lt;/script&gt;
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>Do not be fooled,&nbsp;there is some magic here.&nbsp;How is it possible for Dojo to know where in the file system (or web directory) the <code>flickrApp.js</code> module is located?&nbsp; This is where path management comes into to play.&nbsp; Dojo assumes by default that the string you pass <code>dojo.provide()</code> mimics the directory structure located one directory up from the <code>dojo.js</code> file.&nbsp; What is one directory up from the <code>dojo.js</code> file?&nbsp; The directory that contains the dojo folder.</p> 
       <p>In other words, <code>dojo.js</code> is located at <code>http://localhost:8888/dojo/dojo.js</code>, Dojo will look for modules at <code>http://localhost:8888/</code>, one directory up from <code>dojo.js</code>. To reinforce this concept, lets change the file structure so that it is more organized.&nbsp; Lets now consider the changes required if our directory structure looked like this:</p> 
       <p><img class="alignnone size-full wp-image-1182" title="file3" src="http://www.sitepen.com/blog/wp-content/uploads/2010/03/file3.png" alt="file3" width="133" height="75"></p> 
       <p>With this change all of the application code is inside a directory (<a id="igiu" title="namepace" href="http://snook.ca/archives/javascript/javascript_name/">namespace</a>) called flickrApp. Within this directory, we can further separate the application logic into modules. The first module we will need is the <code>data.js</code> module containing the logic for getting Flickr photo data, cross-domain, and returning that data to the application.&nbsp; With this change, we need to place inside of <code>data.js</code> a <code>dojo.provide()</code> statement passing it the new directory structure.&nbsp; The contents of the <code>data.js</code> file could look like this:</p> 
       <div class="dean_ch">
        //below is similar to doing var flickrApp = {}; flickrApp.data = {};
        <br> dojo.provide(
        <span style="color: #b45f06;">flickrApp.data</span>);
        <br> // Note: do not include the .js
        <br> flickrApp.data.getData = function(){};
       </div> 
       <p>Remember, Dojo assumes by default that the string passed to <code>dojo.provide()</code> mimics the directory structure one directory up from the <code>dojo.js</code> file.&nbsp; In other words, <code>dojo.js</code> is located at <code>http://localhost:8888/dojo/dojo.js</code>, so Dojo will look for our new <code>data.js</code> module at <code>http://localhost:8888/flickrApp/data.js</code>.</p> 
       <p>Now, our HTML markup will be changed to reflect the new organization of the code.</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> &lt;script src=/dojo/dojo.js&gt;&lt;/script&gt;
        <br> &lt;script&gt;
        <br> dojo.require(dojo.io.script);
        <br> dojo.require(flickrApp.
        <span style="color: #b45f06;">data</span>);
        <br> &lt;/script&gt;
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>OK, a quick sanity check: is all this really necessary?&nbsp; Why not just include a single JavaScript file that contains all of the application logic and forget this module system?&nbsp; You could, and the application could run with or without the module system.&nbsp; However, Dojo uses the module system because separating web applications into organized modules makes building and maintaining applications easier, and it also helps to optimize the code using the build tools.&nbsp; This is essentially the difference between storing paperwork in a stack or in a file cabinet.&nbsp; The file cabinet requires more work to initially setup and to keep organized, but it saves time as the number of papers increases.&nbsp; Unless, of course, you only need to manage a handful of papers.</p> 
       <p>I hope you are starting to see the purpose of the module system.&nbsp; But were not done yet.&nbsp; Next up is the most important part: dependency management.</p> 
       <p>Modules can contain references to other modules.&nbsp; Or, stated another way, you can <code>require()</code> modules that can <code>require()</code> other modules.&nbsp; And Dojo can help you manage these dependencies!&nbsp; Lets examine our HTML markup again.</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> &lt;script src=/dojo/dojo.js&gt;&lt;/script&gt;
        <br> &lt;script&gt;
        <br> 
        <span style="color: #b45f06;">dojo.require(dojo.io.script);</span>
        <br> dojo.require(flickrApp.data);
        <br> &lt;/script&gt;
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>Remember we are including the <code>dojo.io.script.js</code> module from Dojo Core.&nbsp; We did this because the Flickr application will need this module.&nbsp; Leveraging the module system and dependency management we can actually remove this <code>require()</code> statement and place it inside of the <code>data.js</code> module.&nbsp; Essentially we are saying that the <code>data.js</code> module is dependent upon the <code>dojo.io.script.js</code> module.&nbsp; Dojo will manage this dependency, so <code>data.js </code> could look like this:</p> 
       <div class="dean_ch">
        dojo.provide(flickrApp.data);
        <br> 
        <span style="color: #b45f06;">dojo.require(dojo.io.script);</span>
        <br> // Note: dojo.require() should be used after dojo.provide()
        <br> flickrApp.data.getData = function(){};
       </div> 
       <p>The HTML will now contain only a single <code>require()</code> statement to include <code>data.js</code> module.</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> 
        <span style="color: #b45f06;">&lt;script src=/dojo/dojo.js&gt;&lt;/script&gt;<br> &lt;script&gt;<br> dojo.require(flickrApp.data);<br> &lt;/script&gt;</span>
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>Dojo will now handle the dependency and make sure <code>data.js</code> is in fact dependent on <code>dojo.io.script.js</code>.</p> 
       <p>But wait, there is more.&nbsp; The dependency management provided by the module system needs to be notified when all <code>dojo.require()</code>statements (and their recursive dependencies) have loaded.&nbsp; This is done by leveraging the&nbsp;<code>dojo.ready()</code> method which will register a function to be invoked once the DOM is ready and all modules and their dependencies have been loaded and parsed by the JavaScript engine.&nbsp; So, when using the module system it is a best practice to use the <code>dojo.ready()</code> before making use of any of the functionality provided by predefined or custom modules.</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> &lt;script src=/dojo/dojo.js&gt;&lt;/script&gt;
        <br> &lt;script&gt;
        <br> dojo.require(flickrApp.data);
        <br> 
        <span style="color: #b45f06;">dojo.ready(function(){</span>
        <br> // Note that dojo.ready() is a shortcut for dojo.addOnLoad() added in Dojo 1.4
        <br> // Run code from data.js and all its dependencies safely
        <br> 
        <span style="color: #b45f06;">});</span>
        <br> &lt;/script&gt;
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>Before we move on, its worth noting that <code>dojo.ready()</code> can be used anytime, even from within the callback function of a <code>dojo.ready()</code>. This means that you can embed a <code>dojo.ready()</code> inside of an <code>dojo.ready()</code>.&nbsp; This allows us to have a tree structure of dependencies and loading phases. For example:</p> 
       <div class="dean_ch">
        dojo.require(some.module);
        <br> dojo.ready(function(){
        <br> //run code from some.module.js and all its dependencies safely
        <br> dojo.require(some.other.module);
        <br> 
        <span style="color: #b45f06;">dojo.ready(function(){</span>
        <br> //run code from some.other.module.js and all its dependencies safely
        <br> 
        <span style="color: #b45f06;">});</span>
        <br> });
       </div> 
       <p>We have come a long way.&nbsp;Now, lets go a bit futher. As previously mentioned, the module system does some path management for us.&nbsp; And, by default, this path is set to the parent directory of <code>dojo.js</code>.&nbsp; This means that when you <code>require()</code> anything, Dojo by default will look for it in the parent directory of (relative to) <code>dojo.js</code>.&nbsp; As an example, if we <code>require('some.other.module')</code> by default it will look for <code>some/other/module.js</code> starting one directory up from <code>dojo.js</code>:</p> 
       <p><img class="alignnone size-full wp-image-1183" title="file4" src="http://www.sitepen.com/blog/wp-content/uploads/2010/03/file4.png" alt="file4" width="176" height="95"></p> 
       <p>We can now begin to look at how to override the default path used by Dojo to include custom modules, allowing us to customize the location Dojo will look for modules.&nbsp; Lets update our directory to something more typical of a Dojo application:</p> 
       <p><img class="alignnone size-full wp-image-1184" title="file5" src="http://www.sitepen.com/blog/wp-content/uploads/2010/03/file5.png" alt="file5" width="218" height="190"></p> 
       <p>Based on this new directory structure, we have taken our <code>some.other.module.js</code> out of the Dojo parent directory where Dojo will search for modules. Our&nbsp;<code>some.other.module.js</code> is actually another directory up, inside of the <code>js</code> directory.&nbsp; Because of this we have to notify Dojo of this change.&nbsp; To understand how this is done, lets open up the index.html. Before we <code>dojo.require()</code> the <code>some.other.module.js</code> file, lets tell Dojo the location of the <code>some</code> directory.&nbsp; This is done by using <code>dojo.registerModulePath()</code>:</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> &lt;script src=/dojo/dojo1.4.1/dojo.js&gt;&lt;/script&gt;
        <br> &lt;script&gt;
        <br> 
        <span style="color: #b45f06;">dojo.registerModulePath(some, ../../some/);</span>
        <br> dojo.require(some.other.module);
        <br> &lt;/script&gt;
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>Based on our directory structure, the <code>dojo.registerModulePath("some", "../../some/")</code>statement is necessary so that Dojo knows where to find the custom module.&nbsp; We are telling Dojo that the <code>some</code> namespace/module can be found two directories up (<code>../../</code>) from dojo.js.&nbsp; Now that Dojo knows where to look, it can resolve the entire namespace <code>some.other.module</code> and include the <code>some.other.module.js</code> file.&nbsp; From this point on, Dojo will find any module contained within the&nbsp;<code>some</code> namespace two directories up from <code>dojo.js</code>. This is all required because, for security reasons, JavaScript applications in the browser do not have access to the file system structure on your web server.</p> 
       <p>If you are familiar with using <a id="jrq_" style="font-family: Courier New;" title="djConfig" href="http://docs.dojocampus.org/djConfig">djConfig</a> then this configuration object can also be used to register module paths.&nbsp; All paths set using <code>djConfig</code> automatically call <code>dojo.registerModulePath()</code>:</p> 
       <div class="dean_ch">
        &lt;!DOCTYPE html&gt;
        <br> &lt;html lang=en&gt;
        <br> &lt;head&gt;
        <br> &lt;meta charset=utf-8? /&gt;
        <br> &lt;title&gt;Dojo&lt;/title&gt;
        <br> &lt;/head&gt;
        <br> &lt;body&gt;
        <br> &lt;script type=text/javascript&gt;
        <br> 
        <span style="color: #b45f06;">var djConfig = {modulePaths:{some:../../some/}};</span>
        <br> &lt;/script&gt;
        <br> &lt;script src=/dojo/dojo1.4.1/dojo.js&gt;&lt;/script&gt;
        <br> &lt;script&gt;
        <br> dojo.require(some.other.module);
        <br> &lt;/script&gt;
        <br> &lt;/body&gt;
        <br> &lt;/html&gt;
       </div> 
       <p>You might think I have covered everything related to the module system, however, there are many other facets.&nbsp; One thing I will mention is that everything we have done in this article assumes you are working with a local version of Dojo.&nbsp; Since Dojo can be included cross-domain from the AOL or Google CDN, the module system has to adjust to support this flexibility.&nbsp; Behind the scenes, the module system is based on making XHR requests for modules.&nbsp; This changes if you are using a CDN version of Dojo, as the module system will then switch over to cross-domain mode and include modules using on-demand script elements.&nbsp; This is a topic for another article, but if you are including Dojo from a <a id="c8vf" title="CDN you'll have to register all modules paths and set  the baseURL in Dojo" href="http://doc-staging.dojocampus.org/quickstart/cross-domain.html#using-cdn-with-local-modules">CDN, youll have to register all modules paths and set the baseURL in Dojo</a>.</p> 
       <h2>Beyond Dojo</h2> 
       <p>Finally, these ideas from Dojo can also be used without Dojo at all. YUI 3.0 has taken a similar approach, and there are stand-alone systems that can be used with any library or toolkit. One such system is <a id="uo.0" title="RequireJS" href="http://requirejs.org/">RequireJS</a>, which is based on the Dojo module system. If youd like to isolate the concept of a module loading system in order to understand its capabilities, check out <a id="ho1b" title="requireJS" href="http://requirejs.org/">RequireJS</a> for more information.</p> 
      </div> 
     </article> 
    </div> 
   </section> 
   <section class="section"> 
    <div class="container blog-single-container comments"> 
     <h1 class="title is-2">Comments</h1> 
     <div id="disqus_thread"> 
      <div id="dsq-content"> 
       <ul id="dsq-comments"> 
        <li class="comment even thread-even depth-1" id="dsq-comment-94394"> 
         <div id="dsq-comment-header-94394" class="dsq-comment-header"> 
          <cite id="dsq-cite-94394"> <span id="dsq-author-user-94394">sovanndt</span> </cite> 
         </div> 
         <div id="dsq-comment-body-94394" class="dsq-comment-body"> 
          <div id="dsq-comment-message-94394" class="dsq-comment-message">
           <p>Dojo error at char: 17528</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="post pingback"> <p>Pingback: <a href="http://www.enterprisedojo.com/2010/08/24/writing-modular-javascript-with-dojo/" rel="external nofollow" class="url">Writing Modular JavaScript with Dojo « Enterprise Dojo</a>()</p> </li> 
        <!-- #comment-## --> 
        <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-270704"> 
         <div id="dsq-comment-header-270704" class="dsq-comment-header"> 
          <cite id="dsq-cite-270704"> <span id="dsq-author-user-270704">Charlie</span> </cite> 
         </div> 
         <div id="dsq-comment-body-270704" class="dsq-comment-body"> 
          <div id="dsq-comment-message-270704" class="dsq-comment-message">
           <p>Im using an xdomain build and Im trying to use dojo.require to load some non-dojo scripts. Im doing whats described above but dojo.require inserts .xd before appending .js and attempting to load the script.</p> 
           <p>Do I have to duplicate all my scripts adding .xd to the name or is there a way to disable this on a module by module basis?</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
        <li class="comment even thread-even depth-1" id="dsq-comment-315604"> 
         <div id="dsq-comment-header-315604" class="dsq-comment-header"> 
          <cite id="dsq-cite-315604"> <span id="dsq-author-user-315604">Michael</span> </cite> 
         </div> 
         <div id="dsq-comment-body-315604" class="dsq-comment-body"> 
          <div id="dsq-comment-message-315604" class="dsq-comment-message">
           <p>I have the same issue as Charlie above  if I include a Dojo(XD) from a CDN all local modules are loaded using XD as well. This was working fine in Dojo 1.4 and below, but now starting with 1.6 I have to compile my local code as well, even for development and testing :(<br> Any idea how to fix this?</p> 
          </div> 
         </div> </li>
        <!-- #comment-## --> 
       </ul> 
      </div> 
     </div> 
     <script type="text/javascript">
var disqus_url = 'https://www.sitepen.com/blog/2010/03/29/understanding-dojo-require/';
var disqus_identifier = '1139 http://www.sitepen.com/blog/?p=1139';
var disqus_container_id = 'disqus_thread';
var disqus_shortname = 'sitepen';
var disqus_title = "Understanding dojo.require";
var disqus_config_custom = window.disqus_config;
var disqus_config = function () {
    /*
    All currently supported events:
    onReady: fires when everything is ready,
    onNewComment: fires when a new comment is posted,
    onIdentify: fires when user is authenticated
    */
    
    
    this.language = '';
        this.callbacks.onReady.push(function () {

        // sync comments in the background so we don't block the page
        var script = document.createElement('script');
        script.async = true;
        script.src = '?cf_action=sync_comments&post_id=1139';

        var firstScript = document.getElementsByTagName('script')[0];
        firstScript.parentNode.insertBefore(script, firstScript);
    });
    
    if (disqus_config_custom) {
        disqus_config_custom.call(this);
    }
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script> 
    </div> 
   </section> 
  </div> 
  <footer class="section masterFooter dark"> 
   <div class="container"> 
    <div class="columns is-mobile is-multiline"> 
     <div class="column is-half-mobile company"> 
      <h4 class="title is-4">Company</h4> 
      <nav class="noPrint"> 
       <ul id="yw0"> 
        <li><a href="/about/jobs.html">Join Our Team</a></li> 
        <li><a href="/site/page.html?view=privacy">Privacy Policy</a></li> 
        <li><a href="/site/page.html?view=tos">Terms of Use</a></li> 
       </ul> 
      </nav> 
     </div> 
     <div class="column is-half-mobile customers"> 
      <h4 class="title is-4">Customers</h4> 
      <nav> 
       <ul> 
        <li><a href="http://hub.sitepen.com/">Hub Login</a></li> 
        <li><a href="http://support.sitepen.com/">Support Login</a></li> 
       </ul> 
      </nav> 
     </div> 
     <div class="column is-half-mobile services"> 
      <h4 class="title is-4">Let's Connect</h4> 
      <nav class="noPrint"> 
       <ul> 
        <li>530 Lytton Avenue</li> 
        <li>Second Floor</li> 
        <li>Palo Alto, CA 94301</li> 
       </ul> 
      </nav> 
     </div> 
     <div class="column is-half-mobile services"> 
      <nav class="noPrint no-header"> 
       <ul> 
        <li>650-968-8787</li> 
        <li>hello@sitepen.com</li> 
       </ul> 
      </nav> 
      <div class="action"> 
       <a href="http://www.twitter.com/sitepen" class="icon-twitter"><span class="visually-hidden">Sitepen Twitter</span></a> 
       <a href="https://www.facebook.com/SitePen" class="icon-facebook"><span class="visually-hidden">Sitepen Facebook</span></a> 
       <a href="https://plus.google.com/103329577501148757527/posts" class="icon-google"><span class="visually-hidden">Sitepen Google Plus</span></a> 
       <a href="/blog/feed/" class="icon-rss"><span class="visually-hidden">Blog RSS feed</span></a> 
      </div> 
     </div> 
    </div> 
    <p class="copyright">© 2017 SitePen, Inc. All Rights Reserved</p> 
   </div> 
  </footer> 
  <script type="text/javascript"><!--
			var seriesdropdown = document.getElementById("orgseries_dropdown");
			if (seriesdropdown) {
			 function onSeriesChange() {
					if ( seriesdropdown.options[seriesdropdown.selectedIndex].value != ( 0 || -1 ) ) {
						location.href = "http://www.sitepen.com/blog/series/"+seriesdropdown.options[seriesdropdown.selectedIndex].value;
					}
				}
				seriesdropdown.onchange = onSeriesChange;
			}
			--></script> 
  <script type="text/javascript">
        // <![CDATA[
        var disqus_shortname = 'sitepen';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1 && nodes[i].parentNode.tagName == 'A') {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('data-dsqidentifier'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script');
            s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
        // ]]>
        </script> 
  <script type="text/javascript" src="https://www.sitepen.com/blog/wp-includes/js/comment-reply.min.js?ver=4.8"></script> 
  <script type="text/javascript" src="https://www.sitepen.com/blog/wp-includes/js/wp-embed.min.js?ver=4.8"></script> 
  <!-- Start of Async HubSpot Analytics Code --> 
  <script type="text/javascript" async>
	(function(d,s,i,r) {
		if (d.getElementById(i)){return;}
		var n=d.createElement(s),e=d.getElementsByTagName(s)[0];
		n.id=i;n.src='//js.hs-analytics.net/analytics/'+(Math.ceil(new Date()/r)*r)+'/2059467.js';
		e.parentNode.insertBefore(n, e);
	})(document,"script","hs-analytics",300000);
</script> 
  <!-- End of Async HubSpot Analytics Code --> 
  <!-- Start of LinkedIn Code --> 
  <script type="text/javascript" async>
_linkedin_data_partner_id = "26438";
</script>
  <script type="text/javascript">
(function(){var s = document.getElementsByTagName("script")[0];
var b = document.createElement("script");
b.type = "text/javascript";b.async = true;
b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js";
s.parentNode.insertBefore(b, s);})();
</script> 
  <!-- End of LinkedIn Code --> 
  <!-- Facebook Pixel Code --> 
  <script async>
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');

fbq('init', '610366229111803');
fbq('track', "PageView");</script> 
  <noscript>
   <img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=610366229111803&amp;ev=PageView&amp;noscript=1">
  </noscript> 
  <!-- End Facebook Pixel Code --> 
  <script type="text/javascript" src="/js/syntaxHighlighter.js"></script> 
  <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/dojo/1.10.3/dojo/dojo.js"></script> 
  <script type="text/javascript" src="/js/site.js"></script> 
  <script type="text/javascript" src="/js/blog.js"></script>   
 </body>
</html>