<!doctype html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
 <head> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
  <title>Skuid and JavaScript — Skuid v10.0.4 Documentation</title> 
  <link rel="stylesheet" href="../../_static/skuid.css" type="text/css"> 
  <link rel="stylesheet" href="../../_static/pygments.css" type="text/css"> 
  <link rel="stylesheet" href="../../_static/skuid.css" type="text/css"> 
  <link rel="stylesheet" href="../../_static/bootstrap-theme.css" type="text/css"> 
  <link rel="stylesheet" href="../../_static/bootstrap.css" type="text/css"> 
  <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../../',
        VERSION:     '10.0.4',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script> 
  <script type="text/javascript" src="../../_static/jquery.js"></script> 
  <script type="text/javascript" src="../../_static/underscore.js"></script> 
  <script type="text/javascript" src="../../_static/doctools.js"></script> 
  <script type="text/javascript" src="../../_static/js/jquery-1.11.0.min.js"></script> 
  <script type="text/javascript" src="../../_static/js/jquery-fix.js"></script> 
  <script type="text/javascript" src="../../_static/js/skuid-sphinx.js"></script> 
  <script type="text/javascript" src="../../_static/js/bootstrap.js"></script> 
  <link rel="shortcut icon" href="../../_static/favicon.ico"> 
  <link rel="index" title="Index" href="../../genindex.html"> 
  <link rel="search" title="Search" href="../../search.html"> 
  <link rel="top" title="Skuid v10.0.4 Documentation" href="../../index.html"> 
  <link rel="up" title="The Skuid Developer Guide" href="../../guide-dev/index.html"> 
  <link rel="next" title="Using Snippets with Skuid" href="snippets/using-snippets-intro.html"> 
  <link rel="prev" title="The Skuid Developer Guide" href="../../guide-dev/index.html"> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"> 
  <meta name="apple-mobile-web-app-capable" content="yes"> 
  <script src="https://use.fontawesome.com/685baec918.js"></script> 
  <link href="https://fonts.googleapis.com/css?family=Roboto:400,400i,500,500i" rel="stylesheet"> 
 </head> 
 <body role="document"> 
  <div id="app"> 
   <header class="navbar"> 
    <a class="navbar-brand" href="../../index.html"> <img src="../../_static/img/skuid_docs_logo_white.png" alt="Skuid Help Home"> </a> 
    <form action="../../search.html" method="get" class="navbar-search-form" style="padding-bottom: 1rem;"> 
     <div id="searchbar"> 
      <label for="navbar-search" class="sr-only">Search Skuid documentation</label> 
      <div class="search-icon" style=""></div> 
      <input type="text" name="q" id="navbar-search" class="search" placeholder="Search" style="
    \: rgba(0,0,0,.8);
"> 
      <input type="hidden" name="check_keywords" value="yes"> 
      <input type="hidden" name="area" value="default"> 
     </div> 
    </form> 
    <ul class="navbar-nav"> 
     <li role="toolbar" aria-haspopup="true" class="nav-dropdown" tabindex="0">Guides 
      <ul aria-hidden="true" aria-label="submenu" id="guides" class="nav-sub-menu">
       <li><a href="../../guide-admin/">User Guide</a></li>
       <li><a href="../../guide-dev/">Developer Guide</a></li>
       <li><a href="../docs_style/">Style Guide</a></li> 
      </ul> </li> 
     <li><a href="../api/">API Reference</a></li>
     <li><a href="../../release-notes.html">Release Notes</a></li> 
    </ul> 
   </header> 
   <div class="container"> 
    <div class="sidebar-global" role="complementary"> 
     <div class="version-and-toc"> 
      <div class="dropdown"> 
       <button class="btn btn-secondary dropdown-toggle version-select" type="button" tabindex="0" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Skuid Version: v10.0.4 <span class="caret"></span></button>  
       <div class="dropdown-menu" aria-labelledby="dropdownMenuButton"> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v10.0.4</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v10.0.3</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v10.0.2</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v10.0.1</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v10.0.0</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v9.5.11</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v9.5.10</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v9.5.9</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v9.5.8</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v9.3.8</a> 
        <a class="dropdown-item" href="#" onclick="versionPick(this)">v9.1.0</a> 
       </div> 
      </div> 
      <div id="quickfind-container"> 
       <input id="quickfind" placeholder="Quick Find ..."> 
      </div> 
      <div id="globaltoc" class="toc"> 
       <ul> 
        <li class="toctree-l1"><a class="reference internal" href="../../guide-admin/index.html">The Skuid User Guide</a>
         <ul> 
          <li class="toctree-l2"><a class="reference internal" href="../getting-started/index.html">Getting Started</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../../skuid-platform/index.html">Skuid Platform: Quickstart</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../../skuid-platform/data-source-tutorial.html">Creating a data source connection in Skuid Platform</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../../skuid-platform/navigating-skuid-platform.html">Tour of Skuid Platform</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../../skuid-platform/subscriptions-usage.html">Skuid Platform Subscriptions and Usage</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../install.html">Install and Update Skuid on Salesforce</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../app-composer.html">The App Composer</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../keyboard-shortcuts.html">Keyboard Shortcuts and Accessibility</a></li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../action-framework/action-framework.html">Action Framework</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../merge-syntax.html">Merge Syntax</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../merge-syntax/global-merge-variables.html">Global Merge Variables / Functions</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../merge-syntax/data-source-merge-api.html">Data source Merge API Reference</a></li> 
             </ul> </li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../models/index.html">Models</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../models/conditions.html">Conditions</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../models/model-actions.html">Model Actions</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../models/child-relationships.html">Child Relationships</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../models/aggregate-model/index.html">Aggregate Models</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../models/aggregate-model/aggregate-model-use-case.html">Aggregate Model Use Case</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../models/template-fields.html">Template Fields</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../models/ui-only-models-fields.html">UI-Only Models and Fields</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../fields/field-metadata-overrides.html">Field Metadata Overrides and Cross-Object References</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../fields/lookup-fields.html">Lookup Fields</a></li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../components/index.html">Components</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../components/button-set/index.html">Button Set</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/calendar/index.html">Calendar</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../components/calendar/add-event.html">Calendar: Add Additional Event Sources</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/chatter-feed/index.html">Chatter Feed</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/deck/index.html">Deck</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/field-editor/index.html">Field Editor</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/file-upload/index.html">File upload</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../components/file-upload/attach-file.html">File Upload: Attach Files to a Record</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/file-upload/add-image.html">File Upload: Add and Display Images</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/filter-set/index.html">Filter Set</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/image/index.html">Image</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../components/image/context-image.html">Image: Record-Context Sensitive Image</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/navigation/index.html">Navigation</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/page-include/index.html">Page Include</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/page-title/index.html">Page Title</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../components/page-title/page-title-actions.html">Page Title Actions</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/panel-set/index.html">Panel Set</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/popup/index.html">Popups</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/queue/index.html">Queue</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/responsive-grid/index.html">Responsive Grid</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/rich-text/index.html">Rich Text</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/search/index.html">Search</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/sliding-panels/index.html">Sliding Panels</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/tab-set/index.html">Tab Set</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/table/index.html">Table</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../components/table/attach-file-table.html">Fancy Table Global Actions: “Attach a File”</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/drawers/index.html">Add Nested Rows to your Table with Drawers</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/table/export-data-from-table.html">Export Data from a Table</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/table/photo-view-table.html">Add Photo View to a Table</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/table/summarize-data-in-table.html">Summarize the Data in your Tables</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/table/table-actions.html">Table Actions</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/table/table-search.html">Table Search</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/template/index.html">Template</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/visualizations/index.html">Visualizations</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../components/visualizations/chart/index.html">Visualizations: Charts and Graphs</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/visualizations/geochart/index.html">Visualizations: Geocharts</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/visualizations/visualization-drilldown.html">Visualization Drilldown</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../components/visualizations/visualization-on-click.html">Visualizations: On-Click Actions</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/wizard/index.html">Wizard</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../components/wizard/contact-wizard.html">Wizard: Create New Contact Wizard</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/wrapper/index.html">Wrapper</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/build-component-packs.html">Build Component Packs</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/manage-component-packs.html">Manage and Upload Component Packs</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../pages/header-footer.html">Create a Custom Header and Footer</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../fields/field-renderers.html">Field Rendering Options</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../conditional-rendering/index.html">Conditional Rendering: Display of Components</a></li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../../data/index.html">Data</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/authentication-and-skuid.html">Authentication and Skuid</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/callback-urls-redirect-uris.html">Callback URLs/Redirect URIs</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../single-sign-on/index.html">Single Sign-On</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../single-sign-on/saml-example-idp-okta.html">IdP Example: Okta</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../single-sign-on/saml-example-idp-azure-ad.html">IdP Example: Azure Active Directory</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../single-sign-on/saml-example-salesforce-data-source.html">Accessing a Salesforce org through SSO</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../single-sign-on/implementation-expectations-saml.html">Implementation Expectations</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/aws/index.html">Amazon Web Services</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/aws/dynamodb.html">DynamoDB</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/aws/polly.html">Polly</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/aws/s3.html">Simple Storage Service (S3)</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/aws/sns.html">Simple Notification Service (SNS)</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/box/index.html">Box</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/google/index.html">Google</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/microsoft/index.html">Microsoft</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/microsoft/dynamics.html">Dynamics</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/microsoft/excel.html">Excel</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/microsoft/onedrive.html">OneDrive</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/microsoft/outlook.html">Outlook</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/salesforce/index.html">Salesforce</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/sap/index.html">SAP</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/slack/index.html">Slack</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/sharepoint/index.html">Sharepoint</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/rest/index.html">REST</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/rest/rest-oracle.html">REST API Use Case: Create, update and delete records from Oracle</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/odata/index.html">OData</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../../data/odata/odata-sql.html">Create, update, and delete records from SQL Server</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../../data/troubleshoot/index.html">Troubleshooting</a></li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../pages/index.html">Pages</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../pages/header-footer.html">Create a Custom Header and Footer</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../pages/master-child-pages.html">Master and Child Pages</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../pages/page-versions.html">Roll Back to Previous Page Versions</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../pages/page-templates.html">Use Page Templates to Compose Pages</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../pages/create-module.html">Create a Skuid Module</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../pages/import-export-page-packs-modules.html">Import/Export Page Packs and Modules</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../pages/personalization-and-caching.html">Optimize Personalization and Caching</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../themes/index.html">Themes</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../themes/themes-overview.html">Skuid Theme Options</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../themes/theme-composer.html">Theme Composer</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../themes/clone-theme.html">Clone a Theme</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../themes/delete-theme.html">Delete a Theme</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../themes/export-import-themes.html">Export and Import Themes</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../themes/add-web-fonts.html">Add Web Fonts</a></li> 
             </ul> </li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../filters/index.html">Filters</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../filters/date-range.html">Create a Date-Range Table Filter</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../filters/multi-select.html">Multiselect Filters with Automatically Created Conditions</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../filters/related-objects.html">Filter by Related Objects</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../filters/select-option.html">Filter a table from a list of options</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../filters/snippet-as-item-source.html">Use a Snippet as a Filter Item Source to create “Dependent Filters”</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../filters/table-filter.html">Create a Filterable Table</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../filters/toggle-filter.html">Make a Toggle Filter from a Subquery Condition</a></li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../localization.html">Label Localization</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../../skuid-platform/user-and-permission-management.html">User and Permission Management in Skuid Platform</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../deploy/index.html">Deploy</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../../skuid-platform/deploying-apps-in-skuid-platform.html">Skuid Platform</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../deploy/salesforce/index.html">Skuid on Salesforce</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../deploy/salesforce/lightning/index.html">Salesforce Lightning</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../deploy/salesforce/visualforce/index.html">Salesforce Classic</a>
               <ul> 
                <li class="toctree-l5"><a class="reference internal" href="../deploy/salesforce/visualforce/skuid-page-visualforce-component.html">skuid:page Visualforce component</a></li> 
                <li class="toctree-l5"><a class="reference internal" href="../deploy/salesforce/visualforce/dashboard.html">Salesforce Dashboards</a></li> 
                <li class="toctree-l5"><a class="reference internal" href="../deploy/salesforce/visualforce/force-com-site.html">Force.com Sites</a></li> 
               </ul> </li> 
              <li class="toctree-l4"><a class="reference internal" href="../deploy/salesforce/visualforce/page-assignments/index.html">Page Assignments</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../deploy/salesforce/salesforce-communities.html">Salesforce Communities</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../deploy/salesforce/org-to-org.html">Sandboxes and Connected Orgs</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../deploy/salesforce/user-access/index.html">License and Permission Assignments</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../deploy/salesforce/isv/index.html">ISV and Managed Packages</a></li> 
             </ul> </li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../tutorials.html">Tutorials</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../tutorials/pages/index.html">Skuid Page Tutorials</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/related-list-table.html">Add Related Lists with the Table Component</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/activities-related-list-tab.html">Build an Activities Related List Tab</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/create-new-record.html">Build a Custom “Create New Record” Page</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/detail-page.html">Build a Custom Detail Page</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/tab-page.html">Build a Custom Tab Page</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/compose-branded-header.html">Compose a Branded Header and Navigation</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/one-page-app.html">Compose a One-Page App Using Tab Actions and Conditional Rendering</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/conditionally-display-fields.html">Conditionally Display Fields</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/custom-clone-page.html">Create a Custom Clone Page</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/clone-account-page.html">Create a Custom “Clone Account” page</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/highlight-critical-data-management-dashboard.html">Highlight Critical Data: Wrappers, Rich Text, and Ui-Only Fields</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/mass-create-records.html">Mass Create Records</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/products-in-opportunity-page.html">Show Products in an Opportunity Page</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/pages/skuid-for-crm.html">Skuid Pages for standard Salesforce CRM</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../tutorials/salesforce/index.html">Salesforce Tutorials</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/salesforce/product-line-items.html">Add Product Line Items to Opportunities with a Popup</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/salesforce/gmail-to-salesforce.html">Add Gmail to Salesforce functionality in your email fields</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/salesforce/custom-edit-page.html">Create a Custom Edit Page and Set Visualforce Overrides</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/salesforce/login-rights.html">Getting Help: Grant Skuid Login Rights to your Org</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/salesforce/homepage-dashboard.html">Reclaim the Salesforce Home Page</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/salesforce/redirect-to-salesforce-actions.html">Redirect to Salesforce Processes</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/salesforce/skuid-for-sales-lightning.html">Skuid for Sales: A Turn-Key Template to Augment Lightning Sales Cloud</a></li> 
             </ul> </li> 
            <li class="toctree-l3"><a class="reference internal" href="../tutorials/javascript/index.html">JavaScript Tutorials</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/javascript/progress-indicator-component.html">Progress Indicator Component</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/javascript/simple-map-component.html">Simple Map Component</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/javascript/snippet-filter-item-source.html">Use a Snippet as a Filter Item Source to create “Dependent Filters”</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="../tutorials/javascript/field-renderer-slider.html">Use Inline Javascript to Create a Slider Field Renderer</a></li> 
             </ul> </li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../best-practices/index.html">Best Practices</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="../best-practices/skuid-page-performance-guide.html">Page Performance Guide</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../best-practices/one-save-button.html">One Save Button Per Page</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../best-practices/styling.html">Styling Best Practices</a></li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="../glossary.html">Skuid Glossary</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../deprecated-features-api.html">Deprecated in Skuid</a></li> 
         </ul> </li> 
       </ul> 
       <ul class="current"> 
        <li class="toctree-l1 current"><a class="reference internal" href="../../guide-dev/index.html">The Skuid Developer Guide</a>
         <ul class="current"> 
          <li class="toctree-l2 current"><a class="current reference internal" href="#">Skuid and JavaScript</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="snippets/using-snippets-intro.html">Using Snippets with Skuid</a>
             <ul> 
              <li class="toctree-l4"><a class="reference internal" href="snippets/table-custom-views.html">Table Component: Custom Views</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="snippets/table-custom-field.html">Table Component: Custom Field Renderers</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="snippets/table-custom-global.html">Table Component: Custom Global Actions</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="snippets/table-custom-mass.html">Table Component: Custom Mass Actions</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="snippets/table-custom-row.html">Table Component: Custom Row Actions</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="snippets/title-custom-button.html">Page Title Component: Custom Button Actions</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="snippets/queue-custom-item.html">Queue Component: Custom Item Renderers</a></li> 
              <li class="toctree-l4"><a class="reference internal" href="snippets/wizard-custom-button.html">Wizard Component: Custom Button Actions</a></li> 
             </ul> </li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="create-custom-comp.html">Create a Skuid Custom Component</a>
           <ul> 
            <li class="toctree-l3"><a class="reference internal" href="component-property-ref.html">Component Property Reference</a></li> 
            <li class="toctree-l3"><a class="reference internal" href="../components/build-component-packs.html">Build Component Packs</a></li> 
           </ul> </li> 
          <li class="toctree-l2"><a class="reference internal" href="dynamic-model-component-creation.html">Dynamic Creation of Models and Components</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../css/index.html">Including Custom CSS in a Skuid Page</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/page-xml/index.html">Page XML API</a></li> 
         </ul> </li> 
       </ul> 
       <ul> 
        <li class="toctree-l1"><a class="reference internal" href="../api/index.html">API Reference</a>
         <ul> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_$.html">skuid.$</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_actions.html">skuid.actions</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_ajax.html">skuid.ajax</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_builder_core.html">skuid.builder.core</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_builder_core_coreProps.html">skuid.builder.core.coreProps</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_calendar.html">skuid.calendar</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_collaboration.html">skuid.collaboration</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_component.html">skuid.component</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_componentType.html">skuid.componentType</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_events.html">skuid.events</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_formula.html">skuid.formula</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_hotkeys.html">skuid.hotkeys</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_label.html">skuid.label</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_load.html">skuid.load</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_model.html">skuid.model</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_model_model.html">skuid.model.Model</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_Mustache.html">skuid.mustache</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_page.html">skuid.page</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_sfdc.html">skuid.sfdc</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_snippet.html">skuid.snippet</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_time.html">skuid.time</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_ui.html">skuid.ui</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_utils.html">skuid.utils</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/skuid_version.html">skuid.version</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/metadata_skuid_model.html">Skuid Model Metadata Object</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/metadata_skuid_model_child_relationship.html">Skuid Model Child Relationship Metadata Object</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/metadata_skuid_model_condition.html">Skuid Model Condition Metadata Object</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/metadata_skuid_model_field.html">Skuid Model Field Metadata Object</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../api/metadata_skuid_model_record_type.html">Skuid Model Record Type Metadata Object</a></li> 
         </ul> </li> 
       </ul> 
       <ul> 
        <li class="toctree-l1"><a class="reference internal" href="../docs_style/index.html">The Skuid Documentation and User Interface Style Guide</a>
         <ul> 
          <li class="toctree-l2"><a class="reference internal" href="../docs_style/style_guide_grammar.html">Grammar and Usage</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../docs_style/style_guide_punct.html">Punctuation</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../docs_style/style_guide_terms.html">Terminology</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../docs_style/style_guide_ui.html">The User Interface</a></li> 
          <li class="toctree-l2"><a class="reference internal" href="../docs_style/style_guide_voice.html">Voice and Tone</a></li> 
         </ul> </li> 
       </ul> 
      </div> 
     </div> 
    </div> 
    <div class="sidebar-local" role="complementary">
     <div class="menu-btn" id="menu-btn"> 
      <p style="
    margin-left: auto;
    position: absolute;
    margin-top: 0;
    margin-bottom: 0;
">Local Table of Contents</p> 
      <i id="closedMenu" class="fa fa-bars" aria-hidden="true"></i> 
      <i id="openMenu" class="fa fa-times" aria-hidden="true"></i> 
     </div> 
     <div id="menu" data-spy="affix" data-offset-top="128" data-offset-bottom="368"> 
      <ul> 
       <li><a class="reference internal" href="#">Skuid and JavaScript</a>
        <ul> 
         <li><a class="reference internal" href="#how-skuid-accesses-your-javascript">How Skuid Accesses Your JavaScript</a>
          <ul> 
           <li><a class="reference internal" href="#get-familiar-with-the-console">Get familiar with the console</a></li> 
          </ul> </li> 
         <li><a class="reference internal" href="#the-skuid-javascript-api">The Skuid JavaScript API</a>
          <ul> 
           <li><a class="reference internal" href="#strict-mode">Strict Mode</a></li> 
          </ul> </li> 
         <li><a class="reference internal" href="#best-practices">Best Practices</a>
          <ul> 
           <li><a class="reference internal" href="#favor-the-action-framework-over-writing-javascript">Favor the Action Framework over writing JavaScript</a>
            <ul> 
             <li><a class="reference internal" href="#so-when-should-i-use-javascript-instead-of-the-action-framework">So when should I use JavaScript instead of the Action Framework?</a></li> 
            </ul> </li> 
           <li><a class="reference internal" href="#use-variables-to-access-objects-whenever-possible">Use variables to access objects whenever possible</a></li> 
          </ul> </li> 
         <li><a class="reference internal" href="#jquery-and-skuid">jQuery and Skuid</a></li> 
         <li><a class="reference internal" href="#using-skuid-with-javascript-a-primer">Using Skuid with JavaScript: A Primer</a>
          <ul> 
           <li><a class="reference internal" href="#create-a-test-page">Create a test page</a></li> 
           <li><a class="reference internal" href="#some-basics">Some Basics</a></li> 
           <li><a class="reference internal" href="#accessing-model-data">Accessing model data</a>
            <ul> 
             <li><a class="reference internal" href="#seeing-all-models-on-a-page">Seeing all models on a page</a></li> 
             <li><a class="reference internal" href="#accessing-a-single-models-data">Accessing a single model’s data</a></li> 
            </ul> </li> 
           <li><a class="reference internal" href="#interacting-with-your-model">Interacting with your model</a>
            <ul> 
             <li><a class="reference internal" href="#updating-a-row">Updating a row</a></li> 
             <li><a class="reference internal" href="#canceling-specific-rows-and-saving">Canceling specific rows and saving</a></li> 
             <li><a class="reference internal" href="#retrieving-data-from-a-row">Retrieving data from a row</a></li> 
             <li><a class="reference internal" href="#creating-a-popup">Creating a popup</a></li> 
             <li><a class="reference internal" href="#now-go-develop">Now, go develop!</a></li> 
            </ul> </li> 
          </ul> </li> 
        </ul> </li> 
      </ul> 
     </div> 
    </div> 
    <div id="main" data-spy="scroll" data-target="#menu"> 
     <div class="section" id="skuid-and-javascript"> 
      <span id="skuid-javascript-intro"></span>
      <h1>Skuid and JavaScript<a class="headerlink" href="#skuid-and-javascript" title="Permalink to this headline">¶</a></h1> 
      <p>JavaScript is the key to developer greatness with Skuid. Our robust JavaScript API provides simple functions for performing client-side CRUD operations on any data object from a connected data source, as well as saving this data to your data sources’ servers. And with snippets and custom components, you can utilize JavaScript for programmatic control and extension of your Skuid implementation.</p> 
      <p>In this article, we will cover the basics of navigating and interacting with data in Skuid using JavaScript. However, the intricacies of the language are beyond the scope of this documentation. If you are JavaScript beginner, or if you just need a refresher course, please refer to your favorite JavaScript resource. <a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">MDN’s JavaScript portal</a> is just one of many great options.</p> 
      <div class="section" id="how-skuid-accesses-your-javascript"> 
       <h2>How Skuid Accesses Your JavaScript<a class="headerlink" href="#how-skuid-accesses-your-javascript" title="Permalink to this headline">¶</a></h2> 
       <p>So, how does Skuid access your JavaScript? In the same way it <a class="reference internal" href="../../guide-dev/index.html"><span class="doc">accesses other custom code</span></a>:</p> 
       <ul class="simple"> 
        <li>In-line resources</li> 
        <li>External resources</li> 
        <li>Static resources</li> 
       </ul> 
       <div class="section" id="get-familiar-with-the-console"> 
        <span id="browser-console"></span>
        <h3>Get familiar with the console<a class="headerlink" href="#get-familiar-with-the-console" title="Permalink to this headline">¶</a></h3> 
        <p>In addition to these resource types, you can also utilize JavaScript (and Skuid’s JavaScript API) through your browser’s console. <strong>The console is an essential tool in leveraging Skuid’s JavaScript API.</strong> Make sure you are familiar with the console in your browser of choice:</p> 
        <ul class="simple"> 
         <li><a class="reference external" href="https://developers.google.com/web/tools/chrome-devtools/debug/console/?hl=en">Chrome</a></li> 
         <li><a class="reference external" href="https://developer.mozilla.org/en-US/docs/Tools/Web_Console">Firefox</a></li> 
         <li><a class="reference external" href="https://developer.apple.com/library/iad/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/GettingStarted/GettingStarted.html">Safari</a></li> 
         <li><a class="reference external" href="https://developer.microsoft.com/en-us/microsoft-edge/platform/documentation/f12-devtools-guide/console/">Edge</a></li> 
         <li><a class="reference external" href="http://www.opera.com/dragonfly/documentation/console/">Opera</a></li> 
        </ul> 
        <div class="admonition note"> 
         <p class="first admonition-title">Note</p> 
         <ul class="last simple"> 
          <li>Chrome’s console will sometimes <a class="reference external" href="https://developers.google.com/web/tools/chrome-devtools/debug/console/console-ui?hl=en#selecting-the-right-target">select the wrong target.</a> Make sure that you have selected the <strong>top frame.</strong></li> 
          <li><strong>Chrome pre-version 53 will not be able to access the Skuid object with a Salesforce header enabled.</strong> You may choose to <a class="reference external" href="https://docs.skuid.com/v10.0.4/en/skuid/pages/header-footer.html">disable the Salesforce header</a> or <a class="reference external" href="https://www.google.com/chrome/browser/canary.html">use a Canary build of Chrome</a>.</li> 
         </ul> 
        </div> 
        <p>Pull up your browser’s console and type <strong>skuid</strong>. Now press <strong>Enter</strong> on your keyboard. You’ll see the “skuid” JavaScript object—a powerful artifact containing all of the objects and functions to make you a Skuid development superhero. Depending on your browser, you’ll also notice that you can click through to those objects and functions within it.</p> 
        <p>Guess what? You’ve just had your first experience with...</p> 
       </div> 
      </div> 
      <div class="section" id="the-skuid-javascript-api"> 
       <h2>The Skuid JavaScript API<a class="headerlink" href="#the-skuid-javascript-api" title="Permalink to this headline">¶</a></h2> 
       <p>Within each Skuid page—both in the App Composer and at runtime—there is a JavaScript object called <strong>skuid</strong> which houses <em>all</em> of the functions, data, and objects of the page. While JavaScript can be used for a variety of purposes (such as <a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model">DOM</a> manipulation), in Skuid you’ll mostly work with <a class="reference internal" href="../api/index.html"><span class="doc">Skuid’s JavaScript API reference</span></a> through that <strong>skuid</strong> object.</p> 
       <p>The Skuid JavaScript API can do all of the basic, declarative actions of Skuid, including:</p> 
       <ul class="simple"> 
        <li>Query and update data from your data sources through models</li> 
        <li>Save and cancel data changes</li> 
        <li>Set and activate model conditions</li> 
       </ul> 
       <p>But it’s also used to make the magic happen. Once you’ve mastered the JavaScript API, you can use it to:</p> 
       <ul class="simple"> 
        <li>Easily debug issues—even declarative ones—on your Skuid pages</li> 
        <li>Write JavaScript snippets for page-specific use cases or custom field renderers</li> 
        <li>Build custom components that read, display, and write data in almost any way you can imagine.</li> 
       </ul> 
       <div class="section" id="strict-mode"> 
        <h3>Strict Mode<a class="headerlink" href="#strict-mode" title="Permalink to this headline">¶</a></h3> 
        <p>Skuid enforces <a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode">strict mode</a> on its own code. Strict mode will be enforced on <em>custom code</em> within pages deployed through the <a class="reference external" href="https://docs.skuid.com/v10.0.4/en/skuid/deploy/salesforce/lightning/#the-skuid-page-lightning-component">Skuid Page Lightning component</a> in orgs that have LockerService enabled. Because of this, any custom code used in these pages that does not follow strict mode standards <strong>will break</strong> until it is revised.</p> 
        <p>We recommend users <strong>consistently follow strict mode standards</strong> throughout all of their custom code, regardless of deployment context.</p> 
       </div> 
      </div> 
      <div class="section" id="best-practices"> 
       <h2>Best Practices<a class="headerlink" href="#best-practices" title="Permalink to this headline">¶</a></h2> 
       <div class="section" id="favor-the-action-framework-over-writing-javascript"> 
        <h3>Favor the Action Framework over writing JavaScript<a class="headerlink" href="#favor-the-action-framework-over-writing-javascript" title="Permalink to this headline">¶</a></h3> 
        <p>While it may seem counter-intuitive as a developer, you should always check to see if the <a class="reference external" href="https://docs.skuid.com/v10.0.4/en/skuid/action-framework/action-framework.html">Action Framework</a> can do what you need before writing any JavaScript. The Action Framework has the advantage of being written by the same people who wrote our API, and it has been tested across thousands of orgs in every possible configuration. It’s incredibly robust, and it is constantly being updated and refined to work as efficiently as possible.</p> 
        <p>If you need to run straightforward action sequences, such as creating records, querying and emptying models, activating conditions, or even actions that require heavy manipulation of the UI (like messages and popups), then the Action Framework will suit your purposes just fine. Skuid’s App Composer can be used to create these types of user experiences much more quickly than writing code.</p> 
        <p>In fact, as the Action Framework’s capabilities expand, it’s a best practice to revisit existing JavaScript code snippets and replace them with Action Framework actions whenever possible.</p> 
        <div class="section" id="so-when-should-i-use-javascript-instead-of-the-action-framework"> 
         <h4>So when should I use JavaScript instead of the Action Framework?<a class="headerlink" href="#so-when-should-i-use-javascript-instead-of-the-action-framework" title="Permalink to this headline">¶</a></h4> 
         <p>Use JavaScript for more complex actions or conditional branching of the action sequence, or when you want the sequence to be triggered in a scenario or component where the Action Framework isn’t available. If you have ideas for a component that takes your user experience further, don’t hesitate to use JavaScript to <a class="reference external" href="create_custom_comp.html">create a custom component</a>.</p> 
        </div> 
       </div> 
       <div class="section" id="use-variables-to-access-objects-whenever-possible"> 
        <span id="use-variables"></span>
        <h3>Use variables to access objects whenever possible<a class="headerlink" href="#use-variables-to-access-objects-whenever-possible" title="Permalink to this headline">¶</a></h3> 
        <p>Skuid’s API will return objects and data you’ll want to work with <strong>as the result of a function.</strong> Functions can return JavaScript objects that represent models, components, rows, field data, and other modifiable data:</p> 
        <div class="highlight-javascript">
         <table class="highlighttable">
          <tbody>
           <tr>
            <td class="linenos">
             <div class="linenodiv">
              <pre>1
2
3</pre>
             </div></td>
            <td class="code">
             <div class="highlight">
              <pre><span></span><span class="nx">skuid</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">getModel</span><span class="p">(</span><span class="s1">'Opportunity'</span><span class="p">)</span> <span class="c1">// Accessing a model //</span>
<span class="nx">skuid</span><span class="p">.</span><span class="nx">component</span><span class="p">.</span><span class="nx">getById</span><span class="p">(</span><span class="s1">'sk-1IioRB-76'</span><span class="p">)</span> <span class="c1">// Accessing a component //</span>
<span class="nx">skuid</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">getModel</span><span class="p">(</span><span class="s1">'Opportunity'</span><span class="p">).</span><span class="nx">getFirstRow</span><span class="p">().</span><span class="nx">Name</span> <span class="c1">// Accessing the "Name" field from the first row of the Opportunity model//</span>
</pre>
             </div> </td>
           </tr>
          </tbody>
         </table>
        </div> 
        <p>Clearly, this can get convoluted very quickly. So for both readability and convenience, use variables for Skuid functions:</p> 
        <div class="highlight-javascript">
         <table class="highlighttable">
          <tbody>
           <tr>
            <td class="linenos">
             <div class="linenodiv">
              <pre>1
2
3</pre>
             </div></td>
            <td class="code">
             <div class="highlight">
              <pre><span></span><span class="kd">var</span> <span class="nx">Opps</span> <span class="o">=</span> <span class="nx">skuid</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">getModel</span><span class="p">(</span><span class="s1">'Opportunity'</span><span class="p">)</span> <span class="c1">// Accessing a model //</span>
<span class="nx">Opps</span><span class="p">.</span><span class="nx">getFirstRow</span><span class="p">().</span><span class="nx">Name</span> <span class="c1">// Accessing the "Name" field from the first row of the Opportunity model, but easier!//</span>
<span class="kd">var</span> <span class="nx">bc</span> <span class="o">=</span> <span class="nx">skuid</span><span class="p">.</span><span class="nx">builder</span><span class="p">.</span><span class="nx">core</span> <span class="c1">//For cleanliness in Skuid custom component builders</span>
</pre>
             </div> </td>
           </tr>
          </tbody>
         </table>
        </div> 
       </div> 
      </div> 
      <div class="section" id="jquery-and-skuid"> 
       <h2>jQuery and Skuid<a class="headerlink" href="#jquery-and-skuid" title="Permalink to this headline">¶</a></h2> 
       <p>Skuid includes the most up-to-date version of jQuery 3, and jQuery functions are accessible by using the skuid.$ API call. Because Skuid uses this custom namespace to avoid conflicts, you are free to load in any version of jQuery, or any other library, that you’d like to use alongside your Skuid page.</p> 
       <p>If you choose not load in any other libraries, it’s common practice to create a more standard shortcut to JQuery:</p> 
       <div class="highlight-javascript">
        <div class="highlight">
         <pre><span></span><span class="kd">var</span> <span class="nx">$</span> <span class="o">=</span> <span class="nx">skuid</span><span class="p">.</span><span class="nx">$</span><span class="p">;</span>
</pre>
        </div> 
       </div> 
       <p>After calling this, you have access to all jQuery functions, simply using the $. For example, you can now call <code class="docutils literal"><span class="pre">$('#unique-id').hide()</span></code> rather than <code class="docutils literal"><span class="pre">skuid.$('#unique-id').hide()</span></code></p> 
       <div class="admonition warning"> 
        <p class="first admonition-title">Warning</p> 
        <p class="last">Previous versions of Skuid included jQuery 1. If your code references jQuery 1, read the <a class="reference external" href="https://jquery.com/upgrade-guide/3.0/">jQuery Upgrade Guide</a> to ensure your code is properly written for jQuery 3.</p> 
       </div> 
      </div> 
      <div class="section" id="using-skuid-with-javascript-a-primer"> 
       <h2>Using Skuid with JavaScript: A Primer<a class="headerlink" href="#using-skuid-with-javascript-a-primer" title="Permalink to this headline">¶</a></h2> 
       <p>The Skuid JavaScript API is powerful, but with that power comes complexity. The best way to overcome that complexity and illustrate some of its concepts and uses is by trying it. So let’s do that!</p> 
       <div class="section" id="create-a-test-page"> 
        <h3>Create a test page<a class="headerlink" href="#create-a-test-page" title="Permalink to this headline">¶</a></h3> 
        <div class="admonition note"> 
         <p class="first admonition-title">Note</p> 
         <p class="last">To protect your data, create this test page in <strong>a personal developer org or a sandbox org</strong> .</p> 
        </div> 
        <ol class="arabic simple"> 
         <li>From the Skuid navbar, click Compose &gt; New Page</li> 
         <li>Enter a <strong>Page Name</strong>—any name will work.</li> 
         <li>Click <strong>Next Step</strong>.</li> 
         <li>As your <strong>Starting point</strong>, select <strong>Use a page template</strong>.</li> 
         <li>Click <strong>Select Page Template.</strong></li> 
         <li>In the Create New Page dialog, set your <strong>Primary Object</strong> to any data object with multiple records, e.g. <strong>Account.</strong> Leave everything else at their default settings.</li> 
        </ol> 
        <div class="admonition note"> 
         <p class="first admonition-title">Note</p> 
         <p class="last">In the examples that follow, it’s assumed you are using the <strong>Account</strong> object, with your model also named <strong>Account.</strong> If you are using a different data object, <strong>substitute the name of the object/model you used.</strong></p> 
        </div> 
        <ol class="arabic simple" start="7"> 
         <li>Click Create Page.</li> 
         <li>In your new page, in the properties pane, click <strong>Layout</strong>.</li> 
         <li>Unclick the <strong>Show Salesforce Header</strong> and <strong>Show Salesforce sidebar</strong> checkboxes.
          <ul> 
           <li>This ensures compatibility across browser consoles.</li> 
          </ul> </li> 
         <li><strong>Preview</strong> your newly created Skuid page.</li> 
        </ol> 
        <p>With this Skuid page, you’ll be able to learn the basics of how to use the Skuid JavaScript API.</p> 
        <p>To ensure the page is set up correctly:</p> 
        <ol class="arabic simple"> 
         <li>In your preview, <strong>open your browser’s console</strong></li> 
         <li>Type <strong>skuid</strong> in the console. The skuid object should be returned in your console.</li> 
        </ol> 
       </div> 
       <div class="section" id="some-basics"> 
        <h3>Some Basics<a class="headerlink" href="#some-basics" title="Permalink to this headline">¶</a></h3> 
        <p>When you preview your page, you’ll see a basic table, with a list of accounts, attached to the account model. As a user this is a handy way to see the information, but how can a developer access model data programmatically? How can they update rows of data within a model programmatically? How can they control the UI to display appropriate popup messages to the user? Whether you’re writing a small snippet or a completely custom component, you’ll need to have a grasp on these basic Skuid actions.</p> 
        <p>Let’s look at how to do all that using the API.</p> 
       </div> 
       <div class="section" id="accessing-model-data"> 
        <h3>Accessing model data<a class="headerlink" href="#accessing-model-data" title="Permalink to this headline">¶</a></h3> 
        <div class="section" id="seeing-all-models-on-a-page"> 
         <h4>Seeing all models on a page<a class="headerlink" href="#seeing-all-models-on-a-page" title="Permalink to this headline">¶</a></h4> 
         <p>First, let’s see which models are on the page.</p> 
         <ol class="arabic simple"> 
          <li>Open your browser’s console.</li> 
          <li>Type <a class="reference internal" href="../api/skuid_model.html#skuid.model.map" title="skuid.model.map"><code class="xref js js-func docutils literal"><span class="pre">skuid.model.map()</span></code></a>. Skuid will return <strong>an object that has all of your model IDs as its properties, with the model data as values of those properties.</strong></li> 
         </ol> 
         <p>What if—for your use case—you’d like to receive that data as an array? Then type</p> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="nx">skuid</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">getModelList</span><span class="p">()</span>
</pre>
          </div> 
         </div> 
         <p>Again you’ll all of your model’s data listed, but this time as an array. You can often access the same data in a variety of ways, so choose the data type most appropriate for your use.</p> 
         <p>For example, enter the following:</p> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="nx">modelsObject</span> <span class="o">=</span> <span class="nx">skuid</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">map</span><span class="p">();</span>
<span class="nx">modelsArray</span> <span class="o">=</span> <span class="nx">skuid</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">getModelList</span><span class="p">();</span>
</pre>
          </div> 
         </div> 
         <p>Now you’ll find that you reach your Account object in two ways:</p> 
         <blockquote> 
          <div>
           <div class="line-block"> 
            <div class="line">
             <code class="docutils literal"><span class="pre">modelsObject.Account</span></code>
            </div> 
            <div class="line">
             or
            </div> 
            <div class="line">
             <code class="docutils literal"><span class="pre">modelsArray[0]</span></code>
            </div> 
           </div> 
          </div>
         </blockquote> 
         <p>But this isn’t the most efficient—or in the case of the array, the most accurate—way to reach a specific model’s data.</p> 
        </div> 
        <div class="section" id="accessing-a-single-models-data"> 
         <h4>Accessing a single model’s data<a class="headerlink" href="#accessing-a-single-models-data" title="Permalink to this headline">¶</a></h4> 
         <p>If you know the ID of your model—or if your code will eventually be used as a snippet or custom component across pages—you’ll likely be using it to access or update the data of one or more models. To do that, <strong>you’ll need to access that model as a JavaScript object.</strong></p> 
         <p>Type the following:</p> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="nx">skuid</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">getModel</span><span class="p">(</span><span class="s1">'Account'</span><span class="p">);</span>
</pre>
          </div> 
         </div> 
         <p>This function will return our model data as an <a class="reference external" href="../../skuid/api/skuid_model_model.html">skuid.model.Model</a> object, much like the above code, but we’re reaching it in one step. Now let’s use a variable to refer to this function so everything we do moving forward is much more readable.</p> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="kd">var</span> <span class="nx">account</span> <span class="o">=</span> <span class="nx">skuid</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">getModel</span><span class="p">(</span><span class="s1">'Account'</span><span class="p">);</span>
</pre>
          </div> 
         </div> 
         <div class="admonition note"> 
          <p class="first admonition-title">Note</p> 
          <p class="last">When creating variable shortcuts, <code class="docutils literal"><span class="pre">undefined</span></code> will often be returned by the console. This is normal, and entering your variable after defining it will return the object you created a shortcut to.</p> 
         </div> 
         <p>A key point to remember here is that—when using the JavaScript API—<strong>you invoke functions and then work with the data returned by those functions</strong>.</p> 
         <p>When you work declaratively, referring to models, pages, and other elements by their IDs is enough to access and modify them because they exist as unique, concrete entities that you can modify. In contrast, when working with data programmatically using the JavaScript API, you must invoke a function <strong>that then returns the element</strong>—in essence, you must first <em>ask</em> for an element before you can modify it. (Depending on your experience with JavaScript, you may have already run across this concept, particularly with the often-used <a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById">document.getElementByID()</a> function.)</p> 
         <p>Because of this difference in how you handle data when working programmatically, it’s best practice to <strong>use appropriate variable shortcuts for both clarity and convenience.</strong></p> 
         <p>After declaring our shortcut variables, typing either the <code class="docutils literal"><span class="pre">skuid.model.getModel('Account').id</span></code> or <code class="docutils literal"><span class="pre">account.id</span></code>, would return the same data. As listed in the Best Practices section, using the <a class="reference internal" href="#use-variables"><span class="std std-ref">variable shortcut</span></a> is the <strong>preferable option</strong>.</p> 
         <p>Whenever you invoke skuid.model.getModel(), you can be able to browse the model object within your console. But to demonstrate how your new shortcut variable works, try entering some of the following in your browser’s console:</p> 
         <div class="highlight-javascript">
          <table class="highlighttable">
           <tbody>
            <tr>
             <td class="linenos">
              <div class="linenodiv">
               <pre>1
2
3
4</pre>
              </div></td>
             <td class="code">
              <div class="highlight">
               <pre><span></span><span class="nx">account</span><span class="p">.</span><span class="nx">objectName</span> <span class="c1">//Returns the name of the data source object retrieved by the model//;</span>
<span class="nx">account</span><span class="p">.</span><span class="nx">data</span> <span class="c1">//Returns all the record rows inside your model as an array of objects.//;</span>
<span class="nx">account</span><span class="p">.</span><span class="nx">dataMap</span> <span class="c1">//Returns all the record rows inside your model as an object, with each row as a property.//;</span>
<span class="nx">account</span><span class="p">.</span><span class="nx">conditions</span> <span class="c1">//Returns all of the model’s conditions as an array of objects. //;</span>
</pre>
              </div> </td>
            </tr>
           </tbody>
          </table>
         </div> 
        </div> 
       </div> 
       <div class="section" id="interacting-with-your-model"> 
        <h3>Interacting with your model<a class="headerlink" href="#interacting-with-your-model" title="Permalink to this headline">¶</a></h3> 
        <p>Now that we know how to reach our model’s data, let’s look at how we can interact with that data <em>programmatically</em>.</p> 
        <p>First, create a new row on your table by typing <code class="docutils literal"><span class="pre">account.</span></code><a class="reference internal" href="../api/skuid_model_model.html#skuid.model.Model.createRow" title="skuid.model.Model.createRow"><code class="xref js js-func docutils literal"><span class="pre">createRow()</span></code></a> in your console. Simple enough, but how do we input data into our newly created row?</p> 
        <div class="section" id="updating-a-row"> 
         <h4>Updating a row<a class="headerlink" href="#updating-a-row" title="Permalink to this headline">¶</a></h4> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="nx">account</span><span class="p">.</span><span class="nx">updateRow</span><span class="p">(</span><span class="nx">account</span><span class="p">.</span><span class="nx">getFirstRow</span><span class="p">(),{</span><span class="nx">Name</span><span class="o">:</span><span class="s1">'My First API Row Update!'</span><span class="p">})</span> <span class="c1">//updateRow accepts two parameters: the row to update (as a JavaScript object), and the updates to make (also as a JavaScript object) //;</span>
</pre>
          </div> 
         </div> 
         <p>So let’s break down how this works:</p> 
         <ul class="simple"> 
          <li>the <a class="reference internal" href="../api/skuid_model_model.html#skuid.model.Model.updateRow" title="skuid.model.Model.updateRow"><code class="xref js js-func docutils literal"><span class="pre">updateRow()</span></code></a> function tells Skuid we want to update a row, so our first parameter must be that row as an object.</li> 
          <li>Using the <a class="reference internal" href="../api/skuid_model_model.html#skuid.model.Model.getFirstRow" title="skuid.model.Model.getFirstRow"><code class="xref js js-func docutils literal"><span class="pre">getFirstRow()</span></code></a> function as the first parameter tells Skuid to look for the row at the top of that model’s data and return it as an object that the <a class="reference internal" href="../api/skuid_model_model.html#skuid.model.Model.updateRow" title="skuid.model.Model.updateRow"><code class="xref js js-func docutils literal"><span class="pre">updateRow()</span></code></a> function can recognize.</li> 
          <li>The second parameter is a JavaScript object with properties that correlate to
           <ul> 
            <li>The data field ID, “Name”</li> 
            <li>The value to update that field to, “My First API Update!’</li> 
           </ul> </li> 
         </ul> 
         <p>You could also:</p> 
         <ul> 
          <li><p class="first">Use an explicit object literal for your row ID paramater, e.g. <code class="docutils literal"><span class="pre">{Id:”"0012603000X4aYYAAZ"”}</span></code>.</p> </li> 
          <li><p class="first">Update more than one field in a row at a time, e.g. <code class="docutils literal"><span class="pre">{Name:”aName”,BillingCity:”aCity”,CustomField__c:”A</span> <span class="pre">custom</span> <span class="pre">value”}</span></code>.</p> </li> 
          <li>
           <dl class="first docutils"> 
            <dt>
             Create and update your row in one line:
            </dt> 
            <dd>
             <div class="first last highlight-javascript">
              <div class="highlight">
               <pre><span></span><span class="nx">account</span><span class="p">.</span><span class="nx">updateRow</span><span class="p">(</span><span class="nx">account</span><span class="p">.</span><span class="nx">createRow</span><span class="p">(),{</span><span class="nx">Name</span><span class="o">:</span><span class="s1">'Created in one line'</span><span class="p">});</span>
</pre>
              </div> 
             </div> 
            </dd> 
           </dl> </li> 
         </ul> 
         <p>Since our table is currently in in-line edit mode, let’s cancel all of our changes to the model so far by using the <a class="reference internal" href="../api/skuid_model_model.html#skuid.model.Model.cancel" title="skuid.model.Model.cancel"><code class="xref js js-func docutils literal"><span class="pre">cancel()</span></code></a> function.</p> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="nx">account</span><span class="p">.</span><span class="nx">cancel</span><span class="p">();</span>
</pre>
          </div> 
         </div> 
        </div> 
        <div class="section" id="canceling-specific-rows-and-saving"> 
         <h4>Canceling specific rows and saving<a class="headerlink" href="#canceling-specific-rows-and-saving" title="Permalink to this headline">¶</a></h4> 
         <p>Now, <strong>let’s create two rows that are stored within variables</strong> so we can have more granular control over what we do and do not cancel. Copy and paste the following in your console:</p> 
         <div class="highlight-javascript">
          <table class="highlighttable">
           <tbody>
            <tr>
             <td class="linenos">
              <div class="linenodiv">
               <pre>1
2
3
4</pre>
              </div></td>
             <td class="code">
              <div class="highlight">
               <pre><span></span><span class="kd">var</span> <span class="nx">workingRow</span> <span class="o">=</span> <span class="nx">account</span><span class="p">.</span><span class="nx">createRow</span><span class="p">()</span> <span class="c1">//The newly created row returned by this function will be known as "workingRow" //;</span>
<span class="nx">account</span><span class="p">.</span><span class="nx">updateRow</span><span class="p">(</span><span class="nx">workingRow</span><span class="p">,{</span><span class="nx">Name</span><span class="o">:</span><span class="s1">'Working Row'</span><span class="p">})</span> <span class="c1">//We are now using our newly created and identified row object as our updateRow parameter // ;</span>
<span class="kd">var</span> <span class="nx">anotherRow</span> <span class="o">=</span> <span class="nx">account</span><span class="p">.</span><span class="nx">createRow</span><span class="p">()</span> <span class="c1">//A second created row stored in another unique variable //;</span>
<span class="nx">account</span><span class="p">.</span><span class="nx">updateRow</span><span class="p">(</span><span class="nx">anotherRow</span><span class="p">,{</span><span class="nx">Name</span><span class="o">:</span><span class="s1">'Another Row'</span><span class="p">})</span> <span class="p">;</span>
</pre>
              </div> </td>
            </tr>
           </tbody>
          </table>
         </div> 
        </div> 
        <div class="section" id="retrieving-data-from-a-row"> 
         <h4>Retrieving data from a row<a class="headerlink" href="#retrieving-data-from-a-row" title="Permalink to this headline">¶</a></h4> 
         <p>Now we have consistent identifiers for the rows our JavaScript has created. <strong>This can be essential when writing snippets or custom component that manipulate model data</strong>. By using these row identifiers, we can update—even using data from one row in the other—and abandon these rows easily.</p> 
         <p>First, let’s look at how we can retrieve data from a particular row:</p> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="nx">anotherRow</span><span class="p">.</span><span class="nx">Name</span><span class="p">;</span>
</pre>
          </div> 
         </div> 
         <p>Entering this will return the value of the <strong>Name</strong> field on our anotherRow row in our account model. As you can see, by using the functions you’ve learned thus far, along with variable shortcuts, you can easily drill down into your data as far as you’d like.</p> 
         <p>Now that we know we can access that data programmatically, let’s use it to update our workingRow’s Name field. Then we can cancel our extra row by using <a class="reference internal" href="../api/skuid_model_model.html#skuid.model.Model.abandonRow" title="skuid.model.Model.abandonRow"><code class="xref js js-func docutils literal"><span class="pre">abandonRow()</span></code></a>.</p> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="nx">account</span><span class="p">.</span><span class="nx">updateRow</span><span class="p">(</span><span class="nx">workingRow</span><span class="p">,{</span><span class="nx">Name</span><span class="o">:</span><span class="nx">anotherRow</span><span class="p">.</span><span class="nx">Name</span><span class="p">})</span> <span class="c1">//Updating the workingRow using data from a different row that is stored in a variable, as opposed to using an explicit string //;</span>
<span class="nx">account</span><span class="p">.</span><span class="nx">abandonRow</span><span class="p">(</span><span class="nx">anotherRow</span><span class="p">)</span> <span class="c1">//Abandoning a specific row allows us to cancel one row without destroying them all //;</span>
</pre>
          </div> 
         </div> 
         <p>And with that, in our hypothetical use case, we’ve made all the changes we want to in our data object.</p> 
         <p>Let’s save those changes with a function that may be the simplest thus far</p> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="nx">account</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>
</pre>
          </div> 
         </div> 
         <p>But wait! Changed your mind? Don’t want that garbage row you just saved in your data? Easy fix: delete it instead.</p> 
         <div class="highlight-javascript">
          <table class="highlighttable">
           <tbody>
            <tr>
             <td class="linenos">
              <div class="linenodiv">
               <pre>1
2
3</pre>
              </div></td>
             <td class="code">
              <div class="highlight">
               <pre><span></span><span class="nx">workingRow</span> <span class="c1">//First, enter this to see that the row—even after being saved—is still stored within its variable. The row's Id field was updated when it was saved, but that field is also updated within your object as well. //;</span>
<span class="nx">account</span><span class="p">.</span><span class="nx">deleteRow</span><span class="p">(</span><span class="nx">workingRow</span><span class="p">)</span> <span class="c1">//This function will mark the row for deletion, but it won't be deleted from your data object until you use save()//;</span>
<span class="nx">account</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>
</pre>
              </div> </td>
            </tr>
           </tbody>
          </table>
         </div> 
        </div> 
        <div class="section" id="creating-a-popup"> 
         <h4>Creating a popup<a class="headerlink" href="#creating-a-popup" title="Permalink to this headline">¶</a></h4> 
         <p>And with that, you’ve accomplished a few common Skuid activities entirely through JavaScript. Let’s display a celebratory message with the <a class="reference external" href="../api/skuid_$.html">blockUI()</a> function.</p> 
         <div class="highlight-none">
          <div class="highlight">
           <pre><span></span>skuid.$.blockUI({ message: '&lt;h1&gt;You\\'ve used Skuid exclusively through JavaScript!&lt;/h1&gt;&lt;h2&gt;You\\'re on your way to becoming a pro Skuid developer&lt;/h2&gt;&lt;h3&gt;Also notice how you can use HTML within your blockUI message!&lt;/h3&gt;&lt;br/&gt;How &lt;i&gt;cool&lt;/i&gt; is that?' });
</pre>
          </div> 
         </div> 
         <p>Okay, so when you’re finished admiring your work, you can unblock your UI just as easily:</p> 
         <div class="highlight-javascript">
          <div class="highlight">
           <pre><span></span><span class="nx">skuid</span><span class="p">.</span><span class="nx">$</span><span class="p">.</span><span class="nx">unblockUI</span><span class="p">()</span>
</pre>
          </div> 
         </div> 
        </div> 
        <div class="section" id="now-go-develop"> 
         <h4>Now, go develop!<a class="headerlink" href="#now-go-develop" title="Permalink to this headline">¶</a></h4> 
         <p>Though the Skuid JavaScript API is far too vast to cover its intricacies in this overview, you’ve now seen how you can use some of its functions in a basic sense. You can create powerful snippets or intricate custom components using the above functions; doing so just requires that you build on the knowledge you’ve established here.</p> 
         <div class="toctree-wrapper compound"> 
         </div> 
        </div> 
       </div> 
      </div> 
     </div> 
    </div> 
   </div> 
   <footer> 
    <div class="footer-page"> 
     <p class="back-to-top"><a href="#">Back to top</a></p> 
     <p>Last updated on Sep 27, 2017.</p> 
    </div> 
    <div class="footer-site"> 
     <div class="footer-content"> 
      <h3>About Skuid</h3> 
      <p>Bespoke UX at blazing speed.™ It means giving you tailored solutions at the speed of your business. It's what Skuid believes in. It's what we enjoy doing. We create the tools. You invent the solutions. No code. No kidding.™</p> 
      <p>Chattanooga | San Francisco | London | Zürich</p> 
      <p>Have feedback? Contact us at <a href="mailto:documentation@skuid.com" style="color: #ee8b21;">documentation@skuid.com</a>.</p> 
      <p class="copyright"> © Copyright Skuid, Inc. 2015-2017 | All rights reserved. <a href="https://docs.skuid.com/latest/en/skuid/skuid_terms_conditions.html">Legal terms and conditions.</a></p> 
     </div> 
     <a href="https://www.skuid.com" class="btn-visit">Visit Skuid.com</a> 
    </div> 
   </footer> 
  </div> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-39143513-3', 'auto');
  ga('send', 'pageview');
</script>  
 </body>
</html>