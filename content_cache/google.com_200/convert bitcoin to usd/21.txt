<!doctype html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="https://www.facebook.com/2008/fbml" itemscope itemtype="http://schema.org/Product" ng-app="hub">
 <head prefix="og: http://ogp.me/ns# nodejsexpressdemo: http://ogp.me/ns/apps/nodejsexpressdemo#">
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="readme-deploy" content="cc6c0184baf8865c9d7f25ae372295984ae888da">
  <title>API Introduction · Open Exchange Rates</title>
  <meta http-equiv="Content-type" content="text/html;charset=UTF-8">
  <meta name="description" content="Open Exchange Rates provides a simple, lightweight and portable JSON API with live and historical foreign exchange (forex) rates, via a simple and easy-to-integrate API, in JSON format. Data are tracked and blended algorithmically from multiple reliable sources, ensuring fair and unbiased consistency.">
  <link href="/favicon.ico" rel="shortcut icon" type="image/x-icon">
  <meta property="og:title" content="API Introduction · Open Exchange Rates">
  <meta property="og:description" content="Open Exchange Rates provides a simple, lightweight and portable JSON API with live and historical foreign exchange (forex) rates, via a simple and easy-to-integrate API, in JSON format. Data are tracked and blended algorithmically from multiple reliable sources, ensuring fair and unbiased consistency.">
  <!-- Removed due to XSS-->
  <!--meta(property="og:url", content=og('url'))-->
  <meta property="og:image" content="https://files.readme.io/dzBKJT7KT6iBHPSakefH_logo-oxr-docs-white.png">
  <meta property="og:site_name" content="Open Exchange Rates">
  <meta id="config-proxy-url" content="https://proxy.readme.io/proxy">
  <link rel="canonical" href="https://docs.openexchangerates.org/">
  <link rel="alternate" type="application/rss+xml" title="RSS Feed for Open Exchange Rates" href="/blog.rss">
  <!-- Application styles-->
  <link rel="stylesheet" href="https://d2sl9eawlu179j.cloudfront.net/css/bundle-hub.css?1506643237790">
  <!--if lt IE 9script(src="http://html5shim.googlecode.com/svn/trunk/html5.js")
-->
  <script>var is_hub = true;
var is_hub_edit = false;
var is_hub2 = false;

</script>
  <script src="https://d2sl9eawlu179j.cloudfront.net/js/bundle-hub1.js?1506643237790"></script>
  <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-52479696-1', 'auto');
ga('send', 'pageview');
</script>
  <link href="//fonts.googleapis.com/css?family=Open+Sans:400:sans-serif|Open+Sans:400:sans-serif" rel="stylesheet" type="text/css">
  <style>.theme-line header {  border-bottom-color: #000f1f;}.theme-line header a.btn {  background-color: #000f1f;}.theme-line header a.btn:hover {  background-color: #000000;}.theme-line header .navbar-nav a:hover ,.theme-line header .navbar-nav .open > a {  color: #000f1f;}.theme-line header .navbar-nav .tt-cursor {  background-color: #000f1f;}.theme-line .navbar-nav .active a {  font-weight: bold;  color: #208afc;}.theme-line .navbar-nav .active a:hover {  color: #0258b4;}.theme-line .main-links .links a:hover {  color: #208afc;}.theme-line .main-content a {  color: #208afc;}.theme-line .main-content a:hover {  color: #0258b4;}.theme-line .sidebar-nav ul li a.active:before {  background-color: #208afc;}.theme-line .sidebar-nav ul li a.active {  color: #208afc;}.theme-line .sidebar-nav ul li a:hover,.theme-line .sidebar-nav ul li a.active:hover {  color: #0258b4;}.theme-line .btn-primary {  background-color: #208afc;}.theme-line .btn-primary:hover {  background-color: #0258b4;}.theme-line .main-content .nav-horizontal a.active {  border-color: #208afc;  color: #208afc;}.theme-line .main-content .nav-horizontal a:hover {  color: #0258b4;}.theme-line .main-content .nav-horizontal a.active:hover {  border-color: #0258b4;}.theme-line header .navbar-nav a.active ,.theme-line #versions-list li a:hover strong,.theme-line #versions-list li a.active .current,.theme-line #versions-list li a:active .current {  color: #208afc;}.theme-line.body-threes .section-right .threes-nav .btn-default:hover,.theme-line.page-docs.body-threes .section-right .threes-nav .pull-right a:hover {  color: #208afc;  border-color: #208afc;}.theme-solid header {  background-color: #000f1f;}.theme-solid.header-custom header a.btn {  background-color: #000000;}.theme-solid.header-custom header a.btn:hover {  background-color: #000000;}.theme-solid header .navbar-nav .dropdown-menu a:hover {  color: #208afc;}.theme-line.lumosity-light header .navbar-nav a:hover,.theme-line.lumosity-light header .navbar-nav .open > a {  color: #208afc;}.theme-line.lumosity-light header a.btn {  background-color: #208afc;}.theme-line.lumosity-light header a.btn:hover {  background-color: #0258b4;}.theme-solid .main-links .links a:hover {  color: #208afc;}.theme-solid .main-content a {  color: #208afc;}.theme-solid .main-content a:hover {  color: #0258b4;}.theme-solid .sidebar-nav ul li a.active:before {  background-color: #208afc;}.theme-solid .sidebar-nav ul li a.active {  color: #208afc;}.theme-solid .sidebar-nav ul li a:hover,.theme-solid .sidebar-nav ul li a.active:hover {  color: #0258b4;}.theme-solid .btn-primary {  background-color: #208afc;}.theme-solid .btn-primary:hover {  background-color: #0258b4;}.theme-solid .main-content .nav-horizontal a.active {  border-color: #208afc;  color: #208afc;}.theme-solid .main-content .nav-horizontal a:hover {  color: #0258b4;}.theme-solid .main-content .nav-horizontal a.active:hover {  border-color: #0258b4;}.theme-solid header .navbar-nav a.active ,.theme-solid #versions-list li a:hover strong,.theme-solid #versions-list li a.active .current,.theme-solid #versions-list li a:active .current {  color: #208afc;}.theme-solid.body-threes .section-right .threes-nav .btn-default:hover,.theme-solid.page-docs.body-threes .section-right .threes-nav .pull-right a:hover {  color: #208afc;  border-color: #208afc;}.theme-solid.header-gradient header {  background: -moz-linear-gradient(top, #000f1f, #000000);  background: -webkit-gradient(linear, left top, #000f1f, #000000);  background: -webkit-linear-gradient(top, #000f1f, #000000);  background: linear-gradient(to bottom, #000f1f, #000000);}.theme-solid.header-custom .header {  background-image: url("undefined");  background-position: center center;}body {  font-weight: 400;font-family: Open Sans, sans-serif;;}h1, h2, h3, h4, h5, h6 {  font-weight: 400;font-family: Open Sans, sans-serif;;}.submit-vote.submit-vote-parent.voted a.submit-vote-button,.submit-vote.submit-vote-parent a.submit-vote-button:hover {  background-color: #208afc;}div.submit-vote.submit-vote-parent.voted a.submit-vote-button:hover {  background-color: #0258b4;}a,.link .title {  color: #208afc;}a:hover,.link:hover .title {  color: #0258b4;}.header h1.navbar-brand a {  background-image: url("https://files.readme.io/dzBKJT7KT6iBHPSakefH_logo-oxr-docs-white.png")}.header h1.navbar-brand {  width: 189px;}
</style>
 </head>
 <body ng-controller="Root" class="layout page-docs body-none theme-solid header-solid header-bg-size-auto header-bg-pos-tl header-overlay-map lumosity-dark undefined theme-threes">
  <div class="wrapper">
   <header id="header" class="header">
    <div class="container">
     <h1 class="navbar-brand"><a href="/">Open Exchange Rates</a></h1>
     <div class="navbar-collapse collapse">
      <div id="project-info">
       {"id":"55312174c68f493900aebb3f","name":"Open Exchange Rates","subdomain":"oxr","versions":[{"_id":"55312174c68f493900aebb42","releaseDate":"2015-04-17T15:06:28.598Z","is_deprecated":false,"is_hidden":false,"is_beta":false,"is_stable":true,"codename":"","version_clean":"0.7.0","version":"0.7"},{"_id":"5531233bd587b521004f654c","releaseDate":"2015-04-17T15:14:03.869Z","is_deprecated":false,"is_hidden":true,"is_beta":true,"is_stable":false,"codename":"","version_clean":"1.0.0","version":"1.0"},{"_id":"56b9b27f6578b90d00bceaca","releaseDate":"2016-02-09T09:33:51.281Z","is_deprecated":false,"is_hidden":true,"is_beta":true,"is_stable":false,"codename":"","version_clean":"1.1.0","version":"1.1"}],"doc_slug":"","current_version":{"version_clean":"0.7.0","version":"0.7"},"oauth":{"enabled":false},"api":{"name":"","url":"https://openexchangerates.org/api","contenttype":"form","auth":"token","explorer":true,"proxyEnabled":true,"jwt":false,"authextra":[{"_id":"566b41ba03b4b20d00d02c30","type":"query","default":"","key":"app_id"}],"headers":[],"object_definitions":[]},"apiAlt":[],"plan_details":{"name":"Developer Hub","is_active":true,"cost":59,"versions":10000,"custom_domain":true,"custom_pages":true,"whitelabel":false,"errors":false,"password":true,"landing_page":true,"themebuilder":true,"stylesheet":true,"javascript":false,"html":true,"extra_html":false,"admins":true,"apps":true},"apps":{"enabled":false},"intercom":"","intercom_secure_emailonly":false,"flags":{"allow_hub2":false,"hub2":false,"migrationRun":true,"oauth":false,"swagger":false,"correctnewlines":false,"speedyRender":false,"allowXFrame":false,"jwt":false,"hideGoogleAnalytics":false,"stripe":false,"ssl":true},"asset_base_url":""}
      </div>
      <ul class="nav navbar-nav">
       <li><a href="https://openexchangerates.org">Home</a></li>
       <li class="active"><a href="/docs" title="Documentation">Documentation</a></li>
       <li><a href="https://status.openexchangerates.org/">API Status</a></li>
       <li><a href="http://support.openexchangerates.org/">Help &amp; Support</a></li>
      </ul>
      <ul class="nav navbar-nav pull-right">
       <li>
        <div class="searchbox">
         <div class="fa fa-search"></div>
         <input type="text" placeholder="Search" class="typeahead">
        </div></li>
      </ul>
     </div>
    </div>
   </header>
   <div class="container body-container">
    <div class="main-content">
     <div class="main-head">
      <div ng-controller="ShowPage">
       <div scope-scoop>
        <pre var="page" ng-non-bindable>{"_id":"55312175c68f493900aebb45","api":{"url":"","auth":"required","params":[],"results":{"codes":[]},"settings":""},"isReference":true,"user":"5531215e29603d2300011341","__v":11,"excerpt":"Open Exchange Rates provides a simple, lightweight and portable JSON API with live and historical foreign exchange (forex) rates, via a simple and easy-to-integrate API, in JSON format. Data are tracked and blended algorithmically from multiple reliable sources, ensuring fair and unbiased consistency.","hidden":false,"version":"55312174c68f493900aebb42","body":"Exchange rates published through the Open Exchange Rates API are collected from multiple reliable providers, blended together and served up in JSON format for everybody to use. There are no complex queries, confusing authentication methods or long-term contracts.\n\nEnd-of-day rates are available historically for all days going back to 1st January, 1999.\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Common Use Cases\"\n}\n[/block]\nData from the Open Exchange Rates API are suitable for use in every framework, language and application, and have been successfully integrated in:\n\n  * Shopping carts from WooCommerce to Shopify, and thousands of individual web stores\n  * Overseas campaigns from the smallest startups to Fortune 500 heavyweights\n  * Accounting departments for multinational brands and shipping/logistics firms\n  * Open source projects and charities\n  * Enterprise-level analytics software\n  * Hundreds of smartphone, tablet and desktop apps\n  * School and university research projects across the world\n\nOur clients range from freelancers and the smallest one-man development shops, to international sports networks and post-IPO startups.\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"Connecting To The API\"\n}\n[/block]\nWe serve our data in JSON format via a simple URL-based interface over HTTPS, which enables you to use the rates in whichever way you require.\n\nThis is the high-level introduction  for more in-depth guides, please see the relevant Documentation sections.\n\n**Connection Types**\n\nAny language or software that can make HTTP requests or fetch web addresses can access our API (for example, you can visit any of the API routes in your browser to verify theyre working as expected). \n\nFor your integration, you can use whichever library you require. This will vary depending on your development environment. There are guides and  a wide range of open source integrations available, also covered in our documentation.\n\nURLs (routes) are requested once over HTTPS, and deliver all their data in one go, just like a normal web request. \n\nWe do not currently support websockets, webhooks or any other keep-alive or push-notification style connections  in other words, when you want fresh data, you simply request it from our server. We're considering these methods for a future version of our API, so please email us if interested.\n\n**URL Format**\n\nThe API base path is `https://openexchangerates.org/api/`.\n\nAPI routes/endpoints are then appended to this base path, like so:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://openexchangerates.org/api/\\n                                  latest.json\\n                                  currencies.json\\n                                  historical/2013-02-16.json\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\nQuery parameters (such as your App ID, requested base currency, or JSONP callback) are appended as GET request parameters, for example:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://openexchangerates.org/api/latest.json\\n                                             ?app_id=YOUR_APP_ID\\n                                             &amp;base=GBP\\n                                             &amp;callback=someCallbackFunction\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\nIf your request is valid and permitted, you will receive a JSON-formatted response to work with. If something is wrong with the request, you will receive an error message.\n[block:api-header]\n{\n  \"type\": \"basic\",\n  \"title\": \"API Response Formats\"\n}\n[/block]\nResponses are delivered over HTTPS as plain-text JSON (**J**ava**S**cript **O**bject **N**otation) format, ready to be used however your integration requires.\n\nThis format doesn't limit how and where you can use the data in any way: JSON is simply a fast, simple and lightweight delivery mechanism, which is supported in every major language and framework.\n\nWe designed these responses to be simple to integrate into a variety of apps and software. If needed, you can also programmatically convert JSON data to CSV/spreadsheet format, or any other format.\n\nThere are several main response styles/formats: latest/historical rates, currencies list, time-series and currency conversion. These are detailed individually on each relevant documentation page, and you can see an example (for `latest.json`) below.\n\nHere's an example basic API request for all the latest rates, relative to USD (default):\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"https://openexchangerates.org/api/latest.json?app_id=YOUR_APP_ID\",\n      \"language\": \"http\"\n    }\n  ]\n}\n[/block]\nWhen requesting this URL (assuming your App ID is valid) you will receive a JSON object containing a UNIX timestamp (UTC seconds), base currency (3-letter ISO code), and a rates object with symbol:value pairs, relative to the requested base currency:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n    disclaimer: \\\"https://openexchangerates.org/terms/\\\",\\n    license: \\\"https://openexchangerates.org/license/\\\",\\n    timestamp: 1449877801,\\n    base: \\\"USD\\\",\\n    rates: {\\n        AED: 3.672538,\\n        AFN: 66.809999,\\n        ALL: 125.716501,\\n        AMD: 484.902502,\\n        ANG: 1.788575,\\n        AOA: 135.295998,\\n        ARS: 9.750101,\\n        AUD: 1.390866,\\n        /* ... */\\n    }\\n}\",\n      \"language\": \"json\",\n      \"name\": \"JSON - latest.json\"\n    }\n  ]\n}\n[/block]\nThe response format is the same for Historical Data (`historical/YYYY-MM-DD.json`) requests.\n\nOther API routes  i.e. `currencies.json`, `time-series.json` and `convert/`  have a different request and response format. Please see their relevant pages for details and examples.","createdAt":"2015-04-17T15:06:29.836Z","githubsync":"","link_url":"","order":0,"project":"55312174c68f493900aebb3f","slug":"api-introduction","category":"55312175c68f493900aebb43","link_external":false,"sync_unique":"","title":"API Introduction","type":"basic","updates":["56e30913cb6ef20e0084f231","576e09c2fa2f0b0e00dd1239","57ed7eb35760ab190017b6df","587ce3c6e03b8c2500b553ae","591d1de91e0dc20f00479080"],"parentDoc":null,"childrenPages":[]}</pre>
       </div>
       <div class="row">
        <div class="col-sm-3 border-right section-left">
         <div saveheight="1" class="sidebar-nav">
          <h4>Documentation</h4>
          <ul>
           <li><a href="/docs/api-introduction" class="active"><span>API Introduction</span></a></li>
           <li><a href="/docs/authentication"><span>Authentication</span></a></li>
           <li><a href="/docs/supported-currencies"><span>Supported Currencies</span></a></li>
           <li><a href="/docs/errors"><span>Errors</span></a></li>
          </ul>
          <h4>API Endpoints</h4>
          <ul>
           <li><a href="/docs/latest-json"><span title="get" class="pg-type type-get">get</span><span>/latest.json</span></a></li>
           <li><a href="/docs/historical-json"><span title="get" class="pg-type type-get">get</span><span>/historical/*.json</span></a></li>
           <li><a href="/docs/currencies-json"><span title="get" class="pg-type type-get">get</span><span>/currencies.json</span></a></li>
           <li><a href="/docs/time-series-json"><span title="get" class="pg-type type-get">get</span><span>/time-series.json</span></a></li>
           <li><a href="/docs/convert"><span title="get" class="pg-type type-get">get</span><span>/convert</span></a></li>
           <li><a href="/docs/ohlc-json"><span title="get" class="pg-type type-get">get</span><span>/ohlc.json</span></a></li>
           <li><a href="/docs/usage-json"><span title="get" class="pg-type type-get">get</span><span>/usage.json</span></a></li>
          </ul>
          <h4>Extra Parameters</h4>
          <ul>
           <li><a href="/docs/set-base-currency"><span>Set Base Currency ('base')</span></a></li>
           <li><a href="/docs/get-specific-currencies"><span>Get Specific Currencies ('symbols')</span></a></li>
           <li><a href="/docs/bid-ask-prices"><span>Bid-Ask Prices ('show_bid_ask')</span></a></li>
           <li><a href="/docs/alternative-currencies"><span>Alternative Rates ('show_alternative')</span></a></li>
           <li><a href="/docs/prettyprint"><span>Minified Response ('prettyprint')</span></a></li>
           <li><a href="/docs/jsonp-callbacks"><span>JSONP Requests ('callback')</span></a></li>
           <li><a href="/docs/etags"><span>ETags / Cache Control</span></a></li>
          </ul>
          <h4>API Integrations</h4>
          <ul>
           <li><a href="/docs/api-libraries-extensions"><span>Client Libraries &amp; Extensions</span></a></li>
           <li><a href="https://openexchangerates.github.io/money.js/" target="_self"><span>money.js</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://openexchangerates.github.io/accounting.js/" target="_self"><span>accounting.js</span>
             <div class="fa fa-external-link-square external"></div></a></li>
          </ul>
          <h4>Help &amp; Support</h4>
          <ul>
           <li><a href="https://status.openexchangerates.org" target="_self"><span>API Status</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="mailto:support@openexchangerates.org" target="_self"><span>Contact Us</span>
             <div class="fa fa-external-link-square external"></div></a></li>
           <li><a href="https://twitter.com/OXR_Team" target="_self"><span>Twitter (@oxr_team)</span>
             <div class="fa fa-external-link-square external"></div></a></li>
          </ul>
         </div>
        </div>
        <div class="col-sm-9 border-left section-right">
         <div class="docs-content">
          <div class="docs-header">
           <nav class="pull-right">
            <a href="https://dash.readme.io/project/oxr/v0.7/docs/api-introduction" require-login ng-show="u.user.is_admin" ng-cloak class="suggest">
             <div class="fa fa-pencil fa-right"></div>Edit this Page</a>
            <a href="/docs/api-introduction/edit" require-login ng-hide="u.user.is_admin" class="suggest">
             <div class="fa fa-pencil fa-right"></div>Suggest Edits</a>
           </nav>
           <h1>API Introduction</h1>
           <div marked>
            Open Exchange Rates provides a simple, lightweight and portable JSON API with live and historical foreign exchange (forex) rates, via a simple and easy-to-integrate API, in JSON format. Data are tracked and blended algorithmically from multiple reliable sources, ensuring fair and unbiased consistency.
           </div>
           <hr>
          </div>
          <div class="docs-body">
           <content ng-cloak class="content">
            Exchange rates published through the Open Exchange Rates API are collected from multiple reliable providers, blended together and served up in JSON format for everybody to use. There are no complex queries, confusing authentication methods or long-term contracts. End-of-day rates are available historically for all days going back to 1st January, 1999. [block:api-header] { "type": "basic", "title": "Common Use Cases" } [/block] Data from the Open Exchange Rates API are suitable for use in every framework, language and application, and have been successfully integrated in: * Shopping carts from WooCommerce to Shopify, and thousands of individual web stores * Overseas campaigns from the smallest startups to Fortune 500 heavyweights * Accounting departments for multinational brands and shipping/logistics firms * Open source projects and charities * Enterprise-level analytics software * Hundreds of smartphone, tablet and desktop apps * School and university research projects across the world Our clients range from freelancers and the smallest one-man development shops, to international sports networks and post-IPO startups. [block:api-header] { "type": "basic", "title": "Connecting To The API" } [/block] We serve our data in JSON format via a simple URL-based interface over HTTPS, which enables you to use the rates in whichever way you require. This is the high-level introduction  for more in-depth guides, please see the relevant Documentation sections. **Connection Types** Any language or software that can make HTTP requests or fetch web addresses can access our API (for example, you can visit any of the API routes in your browser to verify theyre working as expected). For your integration, you can use whichever library you require. This will vary depending on your development environment. There are guides and a wide range of open source integrations available, also covered in our documentation. URLs (routes) are requested once over HTTPS, and deliver all their data in one go, just like a normal web request. We do not currently support websockets, webhooks or any other keep-alive or push-notification style connections  in other words, when you want fresh data, you simply request it from our server. We're considering these methods for a future version of our API, so please email us if interested. **URL Format** The API base path is `https://openexchangerates.org/api/`. API routes/endpoints are then appended to this base path, like so: [block:code] { "codes": [ { "code": "https://openexchangerates.org/api/\n latest.json\n currencies.json\n historical/2013-02-16.json", "language": "http" } ] } [/block] Query parameters (such as your App ID, requested base currency, or JSONP callback) are appended as GET request parameters, for example: [block:code] { "codes": [ { "code": "https://openexchangerates.org/api/latest.json\n ?app_id=YOUR_APP_ID\n &amp;base=GBP\n &amp;callback=someCallbackFunction", "language": "http" } ] } [/block] If your request is valid and permitted, you will receive a JSON-formatted response to work with. If something is wrong with the request, you will receive an error message. [block:api-header] { "type": "basic", "title": "API Response Formats" } [/block] Responses are delivered over HTTPS as plain-text JSON (**J**ava**S**cript **O**bject **N**otation) format, ready to be used however your integration requires. This format doesn't limit how and where you can use the data in any way: JSON is simply a fast, simple and lightweight delivery mechanism, which is supported in every major language and framework. We designed these responses to be simple to integrate into a variety of apps and software. If needed, you can also programmatically convert JSON data to CSV/spreadsheet format, or any other format. There are several main response styles/formats: latest/historical rates, currencies list, time-series and currency conversion. These are detailed individually on each relevant documentation page, and you can see an example (for `latest.json`) below. Here's an example basic API request for all the latest rates, relative to USD (default): [block:code] { "codes": [ { "code": "https://openexchangerates.org/api/latest.json?app_id=YOUR_APP_ID", "language": "http" } ] } [/block] When requesting this URL (assuming your App ID is valid) you will receive a JSON object containing a UNIX timestamp (UTC seconds), base currency (3-letter ISO code), and a rates object with symbol:value pairs, relative to the requested base currency: [block:code] { "codes": [ { "code": "{\n disclaimer: \"https://openexchangerates.org/terms/\",\n license: \"https://openexchangerates.org/license/\",\n timestamp: 1449877801,\n base: \"USD\",\n rates: {\n AED: 3.672538,\n AFN: 66.809999,\n ALL: 125.716501,\n AMD: 484.902502,\n ANG: 1.788575,\n AOA: 135.295998,\n ARS: 9.750101,\n AUD: 1.390866,\n /* ... */\n }\n}", "language": "json", "name": "JSON - latest.json" } ] } [/block] The response format is the same for Historical Data (`historical/YYYY-MM-DD.json`) requests. Other API routes  i.e. `currencies.json`, `time-series.json` and `convert/`  have a different request and response format. Please see their relevant pages for details and examples.
           </content>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <!-- Include partials-->
  <div>
   <script type="text/ng-template" id="content"><div class="block-content"><div class="blocks-parent"><div ng-repeat="(k, section) in sections" data-pos="{{ k }}" ng-if="is_sidebar === undefined || is_sidebar == !!section.sidebar" class="block section"><div ng-switch="section.type"><div ng-switch-when="textarea"><div marked="section.text"></div></div><!-- TODO: Make this generic using 'default' --><div ng-switch-when="api-header"><div type="section.type" ng-model="section.data" class="block-api-header"></div></div><div ng-switch-when="code"><div type="section.type" ng-model="section.data" class="block-code"></div></div><div ng-switch-when="image"><div type="section.type" ng-model="section.data" class="block-image"></div></div><div ng-switch-when="embed"><div type="section.type" ng-model="section.data" class="block-embed"></div></div><div ng-switch-when="callout"><div type="section.type" ng-model="section.data" class="block-callout"></div></div><div ng-switch-when="parameters"><div type="section.type" ng-model="section.data" class="block-parameters"></div></div><div ng-switch-when="html"><div type="section.type" ng-model="section.data" class="block-html"></div></div></div></div></div></div></script>
  </div>
  <div>
   <script type="text/ng-template" id="blocks/api-header/show"><div class="block-display-api-header">
  <!--
  <div class="picker-offset">
    <input type-picker ng-cloak ng-model="doc.type">
  </div>
  -->
  <h2 id="{{ slugify(data.title) }}">
    <span ng-show="data.type && data.type != 'basic'" class="pg-type-big pg-type type-{{data.type}}">{{data.type}}</span>
    {{ data.title }}
    <a class="fa fa-anchor fa-left" href="#{{ slugify(data.title) }}"></a>
  </h2>
  <hr>
</div>
</script>
   <script type="text/ng-template" id="blocks/callout/show"><div class="block-show-callout {{ !data.title? 'no-title' : ''}} type-{{data.type}}">
  <h3>
    <i class="fa fa-info-circle {{data.type == 'info' ? 'on' : ''}}" title="Info"></i>
    <i class="fa fa-exclamation-circle {{data.type == 'warning' ? 'on' : ''}}" title="Warning"></i>
    <i class="fa fa-exclamation-triangle {{data.type == 'danger' ? 'on' : ''}}" title="Danger"></i>
    <i class="fa fa-check-square {{data.type == 'success' ? 'on' : ''}}" title="Success"></i>

    <span>{{ data.title }}</span>
  </h3>

  <div marked="data.body"></div>
</div>
</script>
   <script type="text/ng-template" id="blocks/code/show"><div class="block-show-code">
  <div class="code-tabs">
    <div ng-class="{tab: true, on:$index==current, off:$index!=current}" ng-repeat="tab in data.codes track by $id($index)">
      <a href="" ng-click="choose($index)">
        <span ng-if="tab.status">
          <span ng-if="tab.status" class="status-icon status-icon-{{ getStatusCode(tab.status)[2] }}"></span>
          <em ng-if="!getStatusCode(tab.status)[3]">{{getStatusCode(tab.status)[0]}}</em>
          {{ tab.name ? tab.name : getStatusCode(tab.status)[1] }}
        </span>
        <span ng-if="!tab.status">
          {{ tab.name ? tab.name : code_types_obj[tab.language] }}
        </span>
      </a><span ng-hide="$last">&middot;</span>
    </div>
  </div>

  <div ng-repeat="tab in data.codes track by $id($index)" ng-show="$index==current">
  <pre ng-if='data.codes[$index].code == ""' class="{{theme}}" data-mode='text'><div class='text-muted'>No Content</div></pre>
  <pre ng-if='data.codes[$index].code != ""' class="{{theme}}" data-mode="{{ data.codes[$index].language }}">{{ data.codes[$index].code }}</pre>
</div>
</div>
</script>
   <script type="text/ng-template" id="blocks/image/show"><div class="block-display-image" ng-show="data.images.length > 0">
  <figure ng-show="data.images[0].image.length">
    <a href="{{ data.images[0].image[0] }}" class="block-display-image-parent block-display-image-size-{{data.images[0].sizing || 'smart'}} {{data.images[0].border ? 'block-display-image-border' : ''}}">
      <img ng-src="{{ data.images[0].image[0] }}">
    </a>
    <figcaption>{{ data.images[0].caption }}</figcaption>
  </figure>
</div>
</script>
   <script type="text/ng-template" id="blocks/parameters/show"><div class="block-display-parameters">
  <table>
    <tr ng-if="data.data['h-0'] || data.data['h-1']"> <!-- Rough check -->
      <th ng-repeat="(c, col) in getNumber(data.cols) track by $index">
        {{ data.data['h-' + c] }}
      </th>
    </tr>
    <tr ng-repeat="(r, row) in getNumber(data.rows) track by $index">
      <td ng-repeat="(c, col) in getNumber(data.cols) track by $index">
        <div marked="data.data[r + '-' + c]"></div>
      </th>
    </tr>
  </table>
</div>

</script>
   <script type="text/ng-template" id="blocks/html/show"><div class="block-display-html"></div>

</script>
   <script type="text/ng-template" id="blocks/embed/show"><div class="block-display-embed">
  <div class="html-replace" ng-if="data.html"></div>
  <div ng-if="!data.html">
    <div ng-if="data.iframe" class="iframe-replace"></div>
    <div ng-if="!data.iframe">
      <strong>
        <img ng-src="{{data.favicon}}" class="favicon" ng-if="data.favicon">
        <a href="{{ data.url }}" target="_new">{{ data.title || data.url }}</a>
      </strong>
    </div>
  </div>
</div>

</script>
  </div>
  <div class="container container-footer">
   <footer>
    <div class="pull-right">
     <a href="https://readme.io" class="poweredby">readme.io</a>
    </div>
   </footer>
  </div>
 </body>
</html>