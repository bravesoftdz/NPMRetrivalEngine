<!doctype html>
<html xmlns:cc="http://creativecommons.org/ns#">
 <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# medium-com: http://ogp.me/ns/fb/medium-com#">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Elements of JavaScript Style – JavaScript Scene – Medium</title>
  <link rel="canonical" href="https://medium.com/javascript-scene/elements-of-javascript-style-caa8821cb99f">
  <meta name="title" content="Elements of JavaScript Style – JavaScript Scene – Medium">
  <meta name="referrer" content="unsafe-url">
  <meta name="description" content="In 1920, “The Elements of Style” by William Strunk Jr. was published, which set guidelines for English language style that have lasted the test of time. You can improve your code by applying similar…">
  <meta name="theme-color" content="#000000">
  <meta property="og:title" content="Elements of JavaScript Style – JavaScript Scene – Medium">
  <meta property="og:url" content="https://medium.com/javascript-scene/elements-of-javascript-style-caa8821cb99f">
  <meta property="og:image" content="https://cdn-images-1.medium.com/max/1200/1*7qYONdlJuS0pkUpdav-LQQ.jpeg">
  <meta property="fb:app_id" content="542599432471018">
  <meta property="og:description" content="In 1920, “The Elements of Style” by William Strunk Jr. was published, which set guidelines for English language style that have lasted the…">
  <meta name="twitter:description" content="In 1920, “The Elements of Style” by William Strunk Jr. was published, which set guidelines for English language style that have lasted the…">
  <meta name="twitter:image:src" content="https://cdn-images-1.medium.com/max/1200/1*7qYONdlJuS0pkUpdav-LQQ.jpeg">
  <link rel="publisher" href="https://plus.google.com/103654360130207659246">
  <link rel="author" href="https://medium.com/@_ericelliott">
  <meta property="author" content="Eric Elliott">
  <meta property="og:type" content="article">
  <meta name="twitter:card" content="summary_large_image">
  <meta property="article:publisher" content="https://www.facebook.com/medium">
  <meta property="article:author" content="https://medium.com/@_ericelliott">
  <meta name="robots" content="index, follow">
  <meta property="article:published_time" content="2017-05-03T04:54:27.256Z">
  <meta name="twitter:creator" content="@_ericelliott">
  <meta name="twitter:site" content="@Medium">
  <meta property="og:site_name" content="Medium">
  <meta name="twitter:label1" value="Reading time">
  <meta name="twitter:data1" value="14 min read">
  <meta name="twitter:app:name:iphone" content="Medium">
  <meta name="twitter:app:id:iphone" content="828256236">
  <meta name="twitter:app:url:iphone" content="medium://p/caa8821cb99f">
  <meta property="al:ios:app_name" content="Medium">
  <meta property="al:ios:app_store_id" content="828256236">
  <meta property="al:android:package" content="com.medium.reader">
  <meta property="al:android:app_name" content="Medium">
  <meta property="al:ios:url" content="medium://p/caa8821cb99f">
  <meta property="al:android:url" content="medium://p/caa8821cb99f">
  <meta property="al:web:url" content="https://medium.com/javascript-scene/elements-of-javascript-style-caa8821cb99f">
  <link rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml">
  <link rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/caa8821cb99f">
  <script type="application/ld+json">{"@context":"http://schema.org","@type":"NewsArticle","image":{"@type":"ImageObject","width":1200,"height":800,"url":"https://cdn-images-1.medium.com/max/2000/1*7qYONdlJuS0pkUpdav-LQQ.jpeg"},"datePublished":"2017-05-03T04:54:27.256Z","dateModified":"2017-09-29T02:06:42.805Z","headline":"Elements of JavaScript Style","name":"Elements of JavaScript Style","keywords":["JavaScript","Tech","Technology"],"author":{"@type":"Person","name":"Eric Elliott","url":"https://medium.com/@_ericelliott"},"creator":["Eric Elliott"],"publisher":{"@type":"Organization","name":"JavaScript Scene","url":"https://medium.com/javascript-scene","logo":{"@type":"ImageObject","width":500,"height":60,"url":"https://cdn-images-1.medium.com/max/1000/1*k98ylK8u1sha-tSDD4UiBA.png"}},"mainEntityOfPage":"https://medium.com/javascript-scene/elements-of-javascript-style-caa8821cb99f"}</script>
  <link rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/e/sr/latin/e/ssr/latin/e/ssb/latin/m.css">
  <link rel="stylesheet" href="https://cdn-static-1.medium.com/_/fp/css/main-branding-base.KaG5owo1xJGIHfGeaAmI2A.css">
  <script>if (window.top !== window.self) window.top.location = window.self.location.href;var OB_startTime = new Date().getTime(); var OB_loadErrors = []; function _onerror(e) { OB_loadErrors.push(e) }; if (document.addEventListener) document.addEventListener("error", _onerror, true); else if (document.attachEvent) document.attachEvent("onerror", _onerror); function _asyncScript(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("script"); s.type = "text/javascript"; s.async = true; s.src = u; f.parentNode.insertBefore(s, f);}function _asyncStyles(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("link"); s.rel = "stylesheet"; s.href = u; f.parentNode.insertBefore(s, f); return s}(new Image()).src = "/_/stat?event=pixel.load&origin=" + encodeURIComponent(location.origin);</script>
  <script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date; ga("create", "UA-24232453-2", "auto", {"allowLinker": true, "legacyCookieDomain": window.location.hostname}); ga("send", "pageview");</script>
  <script async src="https://www.google-analytics.com/analytics.js"></script>
  <!--[if lt IE 9]><script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js"></script><![endif]-->
  <link rel="icon" href="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="js-favicon">
  <link rel="apple-touch-icon" sizes="152x152" href="https://cdn-images-1.medium.com/fit/c/304/304/1*fegbK6HDD8crwrwARuMhaQ.png">
  <link rel="apple-touch-icon" sizes="120x120" href="https://cdn-images-1.medium.com/fit/c/240/240/1*fegbK6HDD8crwrwARuMhaQ.png">
  <link rel="apple-touch-icon" sizes="76x76" href="https://cdn-images-1.medium.com/fit/c/152/152/1*fegbK6HDD8crwrwARuMhaQ.png">
  <link rel="apple-touch-icon" sizes="60x60" href="https://cdn-images-1.medium.com/fit/c/120/120/1*fegbK6HDD8crwrwARuMhaQ.png">
  <link rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/favicon.KjTfUJo7yJH_fCoUzzH3cg.svg" color="#171717">
 </head>
 <body itemscope class=" postShowScreen browser-chrome os-windows is-withMagicUnderlines v-glyph v-glyph--m is-noJs">
  <script>document.body.className = document.body.className.replace(/(^|\s)is-noJs(\s|$)/, "$1is-js$2")</script>
  <div class="site-main" id="container">
   <div class="butterBar butterBar--error"></div>
   <div class="surface">
    <div id="prerendered" class="screenContent">
     <canvas class="canvas-renderer"></canvas>
     <div class="container u-maxWidth740 u-xs-margin0 notesPositionContainer js-notesPositionContainer"></div>
     <div class="metabar u-clearfix js-metabar u-boxShadowBottomThinLighter u-fixed u-backgroundTransparentWhiteDarkest u-xs-sizeFullViewportWidth">
      <div class="metabar-inner u-marginAuto u-maxWidth1000 u-flexCenter u-justifyContentSpaceBetween u-paddingLeft20 u-paddingRight20 u-height65 u-xs-height56 js-metabarMiddle">
       <div class="metabar-block u-flex1 u-flexCenter">
        <div class="js-metabarLogoLeft">
         <a href="https://medium.com/" data-log-event="home" class="siteNav-logo u-flexCenter u-paddingTop0"><span class="svgIcon svgIcon--logoMonogram svgIcon--45px is-flushLeft u-textColorDarker">
           <svg class="svgIcon-use" width="45" height="45" viewbox="0 0 45 45">
            <path d="M5 40V5h35v35H5zm8.56-12.627c0 .555-.027.687-.318 1.03l-2.457 2.985v.396h6.974v-.396l-2.456-2.985c-.291-.343-.344-.502-.344-1.03V18.42l6.127 13.364h.714l5.256-13.364v10.644c0 .29 0 .342-.185.528l-1.848 1.796v.396h9.19v-.396l-1.822-1.796c-.184-.186-.21-.238-.21-.528V15.937c0-.291.026-.344.21-.528l1.823-1.797v-.396h-6.471l-4.622 11.542-5.203-11.542h-6.79v.396l2.14 2.64c.239.292.291.37.291.768v10.353z" />
           </svg></span><span class="u-textScreenReader">Homepage</span></a>
        </div>
        <div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56">
         <div class="u-alignBlock">
          <span class="u-inlineBlock u-height28 u-xs-height24 u-verticalAlignTop u-marginRight20 u-borderRightLighter"></span>
         </div>
        </div>
        <div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56 u-marginRight18">
         <div class="u-alignBlock">
          <a class="js-collectionLogoOrName" href="https://medium.com/javascript-scene?source=logo-lo_940b0da8b70c---c0aeac5284ad"><img height="36" width="300" class="u-paddingTop5" src="https://cdn-images-1.medium.com/letterbox/600/72/50/50/1*k98ylK8u1sha-tSDD4UiBA.png?source=logoAvatar-lo_940b0da8b70c---c0aeac5284ad" alt="JavaScript Scene"></a>
         </div>
        </div>
        <div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56 u-xs-hide">
         <div class="u-alignBlock">
          <div class="buttonSet u-lineHeightInherit u-marginLeft0">
           <div class="buttonSet-inner">
            <button class="button button--primary u-paddingLeft10 u-paddingRight10 u-height19 u-lineHeight13 u-verticalAlignMiddle u-fontSize12 u-uiTextMedium button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal js-relationshipButton is-smallPill" data-action="sign-up-prompt" data-sign-in-action="toggle-follow-collection" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/collection/javascript-scene" data-action-source="----c0aeac5284ad----------------------follow_header" data-collection-id="c0aeac5284ad"><span class="button-label  js-buttonLabel">Follow</span></button>
           </div>
           <a class="button button--chromeless is-touchIconBlackPulse u-baseColor--buttonNormal button--withIcon button--withSvgIcon" href="https://twitter.com/JS_Cheerleader" title="Visit “JavaScript Scene” on Twitter" aria-label="Visit “JavaScript Scene” on Twitter" rel="me" target="_blank"><span class="button-defaultState"><span class="svgIcon svgIcon--twitterFilled svgIcon--25px">
              <svg class="svgIcon-use" width="25" height="25" viewbox="0 0 25 25">
               <path d="M21.725 5.338c-.744.47-1.605.804-2.513 1.006a3.978 3.978 0 0 0-2.942-1.293c-2.22 0-4.02 1.81-4.02 4.02 0 .32.034.63.07.94-3.31-.18-6.27-1.78-8.255-4.23a4.544 4.544 0 0 0-.574 2.01c.04 1.43.74 2.66 1.8 3.38-.63-.01-1.25-.19-1.79-.5v.08c0 1.93 1.38 3.56 3.23 3.95-.34.07-.7.12-1.07.14-.25-.02-.5-.04-.72-.07.49 1.58 1.97 2.74 3.74 2.8a8.49 8.49 0 0 1-5.02 1.72c-.3-.03-.62-.04-.93-.07A11.447 11.447 0 0 0 8.88 21c7.386 0 11.43-6.13 11.414-11.414.015-.21.01-.38 0-.578a7.604 7.604 0 0 0 2.01-2.08 7.27 7.27 0 0 1-2.297.645 3.856 3.856 0 0 0 1.72-2.23" />
              </svg></span></span></a>
          </div>
         </div>
        </div>
       </div>
       <div class="metabar-block u-flex0 u-flexCenter">
        <div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56">
         <div class="u-alignBlock">
          <div class="buttonSet u-lineHeightInherit u-block u-margin0 u-flexCenter">
           <a class="button button--primary button--chromeless u-accentColor--buttonNormal is-inSiteNavBar js-signUpButton" href="https://medium.com/m/signin?redirect=https%3A%2F%2Fmedium.com%2Fjavascript-scene%2Felements-of-javascript-style-caa8821cb99f&amp;source=--------------------------nav_reg">Sign in / Sign up</a>
          </div>
         </div>
        </div>
       </div>
       <div class="u-absolute u-sizeFullWidth u-top0 u-right0 u-textAlignCenter js-metabarLogoCentered u-hide">
        <a href="https://medium.com/" data-log-event="home" class="siteNav-logo u-flexCenter u-paddingTop0"><span class="svgIcon svgIcon--logoMonogram svgIcon--45px is-flushLeft u-textColorDarker">
          <svg class="svgIcon-use" width="45" height="45" viewbox="0 0 45 45">
           <path d="M5 40V5h35v35H5zm8.56-12.627c0 .555-.027.687-.318 1.03l-2.457 2.985v.396h6.974v-.396l-2.456-2.985c-.291-.343-.344-.502-.344-1.03V18.42l6.127 13.364h.714l5.256-13.364v10.644c0 .29 0 .342-.185.528l-1.848 1.796v.396h9.19v-.396l-1.822-1.796c-.184-.186-.21-.238-.21-.528V15.937c0-.291.026-.344.21-.528l1.823-1.797v-.396h-6.471l-4.622 11.542-5.203-11.542h-6.79v.396l2.14 2.64c.239.292.291.37.291.768v10.353z" />
          </svg></span><span class="u-textScreenReader">Homepage</span></a>
       </div>
      </div>
      <div class="metabar-inner u-marginAuto u-maxWidth1000 js-metabarBottom">
       <nav role="navigation" class="metabar-block metabar-block--below u-overflowHiddenY u-height40">
        <ul class="u-textAlignLeft u-noWrap u-overflowX js-collectionNavItems u-sm-paddingLeft20 u-sm-paddingRight20 u-paddingBottom100">
         <li class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="link link--darken u-accentColor--textDarken js-homeNav u-baseColor--link" href="https://medium.com/javascript-scene">Home</a></li>
         <li class="metabar-navItem js-collectionNavItem  u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="link link--darken u-accentColor--textDarken link--noUnderline js-navItemLink u-baseColor--link" href="https://medium.com/javascript-scene/tagged/learnjs">Learn JS</a></li>
         <span class="u-borderLeft1 u-paddingLeft22 u-xs-paddingLeft12 u-baseColor--borderLight"></span>
         <li class="metabar-navItem js-collectionNavItem  is-external u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="link link--darkenOnHover u-accentColor--textDarken link--noUnderline js-navItemLink u-baseColor--link" href="https://ericelliottjs.com/product/lifetime-access-pass/" rel="nofollow noopener" target="_blank">Video Lessons</a></li>
         <li class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-top1" href="https://medium.com/javascript-scene/search" title="Search" aria-label="Search"><span class="button-defaultState"><span class="svgIcon svgIcon--search svgIcon--25px">
             <svg class="svgIcon-use" width="25" height="25" viewbox="0 0 25 25">
              <path d="M20.067 18.933l-4.157-4.157a6 6 0 1 0-.884.884l4.157 4.157a.624.624 0 1 0 .884-.884zM6.5 11c0-2.62 2.13-4.75 4.75-4.75S16 8.38 16 11s-2.13 4.75-4.75 4.75S6.5 13.62 6.5 11z" />
             </svg></span></span></a></li>
        </ul>
       </nav>
      </div>
     </div>
     <div class="metabar metabar--spacer js-metabarSpacer  u-height105 u-xs-height95"></div>
     <main role="main">
      <article class=" u-sizeViewHeightMin100 u-overflowHidden postArticle postArticle--full is-withAccentColors u-marginBottom40" lang="en">
       <header class="container u-maxWidth740">
        <div class="postMetaHeader u-paddingBottom10 row">
         <div class="col u-size12of12 js-postMetaLockup">
          <div class="postMetaLockup postMetaLockup--authorWithBio u-flex js-postMetaLockup">
           <div class="u-flex0">
            <a class="link avatar u-baseColor--link" href="https://medium.com/@_ericelliott?source=post_header_lockup" data-action="show-user-card" data-action-source="post_header_lockup" data-action-value="c359511de780" data-action-type="hover" data-user-id="c359511de780" dir="auto"><img src="https://cdn-images-1.medium.com/fit/c/120/120/0*WgY9B-Lm4DnCEHlO.jpeg" class="avatar-image avatar-image--small" alt="Go to the profile of Eric Elliott"></a>
           </div>
           <div class="u-flex1 u-paddingLeft15 u-overflowHidden">
            <a class="link link link--darken link--darker u-baseColor--link" href="https://medium.com/@_ericelliott?source=post_header_lockup" data-action="show-user-card" data-action-source="post_header_lockup" data-action-value="c359511de780" data-action-type="hover" data-user-id="c359511de780" dir="auto">Eric Elliott</a>
            <span class="followState js-followState" data-user-id="c359511de780"><button class="button u-paddingLeft10 u-paddingRight10 u-height19 u-lineHeight13 u-verticalAlignMiddle u-fontSize12 u-uiTextMedium u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton u-marginLeft10 u-marginTopNegative2 u-xs-hide" data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.com/javascript-scene/elements-of-javascript-style-caa8821cb99f" data-action-source="post_header_lockup"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary u-paddingLeft10 u-paddingRight10 u-height19 u-lineHeight13 u-verticalAlignMiddle u-fontSize12 u-uiTextMedium u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton u-marginLeft10 u-marginTopNegative2 u-xs-hide" data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/c359511de780" data-action-source="post_header_lockup-c359511de780-------------------------follow_byline"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span>
            <div class="postMetaInline u-noWrapWithEllipsis u-xs-normalWrap u-xs-lineClamp2 u-xs-maxHeight2LineHeightBase">
             Compassionate entrepreneur on a mission to end homelessness. #jshomes Javascript, tech education, electronic music, photography, film, viral apps.
            </div>
            <div class="postMetaInline js-testPostMetaInlineSupplemental">
             <time datetime="2017-05-03T04:54:27.256Z">May 2</time>
             <span class="middotDivider u-fontSize12"></span>
             <span class="readingTime" title="14 min read"></span>
            </div>
           </div>
          </div>
         </div>
        </div>
       </header>
       <div class="postArticle-content js-postField js-notesSource js-trackedPost" data-post-id="caa8821cb99f" data-source="post_page" data-collection-id="c0aeac5284ad" data-tracking-context="postPage">
        <section name="4cd5" class="section section--body section--first">
         <div class="section-divider">
          <hr class="section-divider">
         </div>
         <div class="section-content">
          <div class="section-inner sectionLayout--insetColumn">
           <h1 name="a97e" id="a97e" class="graf graf--h3 graf--leading graf--title">Elements of JavaScript Style</h1>
           <figure name="a8d8" id="a8d8" class="graf graf--figure graf-after--h3">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 467px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 66.7%;"></div>
             <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*7qYONdlJuS0pkUpdav-LQQ.jpeg" data-width="1200" data-height="800" data-is-featured="true" data-action="zoom" data-action-value="1*7qYONdlJuS0pkUpdav-LQQ.jpeg">
              <img src="https://cdn-images-1.medium.com/freeze/max/60/1*7qYONdlJuS0pkUpdav-LQQ.jpeg?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
              <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
              <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/1*7qYONdlJuS0pkUpdav-LQQ.jpeg">
              <noscript class="js-progressiveMedia-inner">
               <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/1*7qYONdlJuS0pkUpdav-LQQ.jpeg">
              </noscript>
             </div>
            </div>
            <figcaption class="imageCaption">
             Out of the Blue?—?In?aki Bolumburu (CC BY-NC-ND&nbsp;2.0)
            </figcaption>
           </figure>
           <p name="0f2d" id="0f2d" class="graf graf--p graf-after--figure">In 1920, <a href="https://www.amazon.com/Elements-Style-Fourth-William-Strunk/dp/020530902X/ref=as_li_ss_tl?ie=UTF8&amp;qid=1493260884&amp;sr=8-1&amp;keywords=the+elements+of+style&amp;linkCode=ll1&amp;tag=eejs-20&amp;linkId=f7eb0eacba0eab243899626551113119" data-href="https://www.amazon.com/Elements-Style-Fourth-William-Strunk/dp/020530902X/ref=as_li_ss_tl?ie=UTF8&amp;qid=1493260884&amp;sr=8-1&amp;keywords=the+elements+of+style&amp;linkCode=ll1&amp;tag=eejs-20&amp;linkId=f7eb0eacba0eab243899626551113119" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">“The Elements of Style” by William Strunk Jr</a>. was published, which set guidelines for English language style that have lasted the test of time. You can improve your code by applying similar standards to your code style.</p>
           <p name="d144" id="d144" class="graf graf--p graf-after--p">The following are guidelines, not immutable laws. There may be valid reasons to deviate from them if doing so clarifies the meaning of the code, but <a href="https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75" data-href="https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75" class="markup--anchor markup--p-anchor" target="_blank">be vigilant and self-aware</a>. These guidelines have stood the test of time for good reason: They’re usually right. Deviate from them only for good reason?—?not simply on a whim or a personal style preference.</p>
           <p name="adf3" id="adf3" class="graf graf--p graf-after--p">Almost every guideline from <strong class="markup--strong markup--p-strong">the elementary principles of composition</strong> applies to source code:</p>
           <ul class="postList">
            <li name="cc4e" id="cc4e" class="graf graf--li graf-after--p">Make the paragraph the unit of composition: One paragraph to each topic.</li>
            <li name="5a49" id="5a49" class="graf graf--li graf-after--li">Omit needless words.</li>
            <li name="0166" id="0166" class="graf graf--li graf-after--li">Use active voice.</li>
            <li name="f837" id="f837" class="graf graf--li graf-after--li">Avoid a succession of loose sentences.</li>
            <li name="9ca8" id="9ca8" class="graf graf--li graf-after--li">Keep related words together.</li>
            <li name="0773" id="0773" class="graf graf--li graf-after--li">Put statements in positive form.</li>
            <li name="15b0" id="15b0" class="graf graf--li graf-after--li">Use parallel construction on parallel concepts.</li>
           </ul>
           <p name="cb93" id="cb93" class="graf graf--p graf-after--li">We can apply nearly identical concepts to code style:</p>
           <ol class="postList">
            <li name="8b91" id="8b91" class="graf graf--li graf-after--p">Make the function the unit of composition. One job for each function.</li>
            <li name="41e6" id="41e6" class="graf graf--li graf-after--li">Omit needless code.</li>
            <li name="1811" id="1811" class="graf graf--li graf-after--li">Use active voice.</li>
            <li name="a7d0" id="a7d0" class="graf graf--li graf-after--li">Avoid a succession of loose statements.</li>
            <li name="c612" id="c612" class="graf graf--li graf-after--li">Keep related code together.</li>
            <li name="1e1f" id="1e1f" class="graf graf--li graf-after--li">Put statements and expressions in positive form.</li>
            <li name="4867" id="4867" class="graf graf--li graf-after--li">Use parallel code for parallel concepts.</li>
           </ol>
           <h3 name="711c" id="711c" class="graf graf--h3 graf-after--li">1. Make the function the unit of composition. One job for each function.</h3>
           <blockquote name="feed" id="feed" class="graf graf--pullquote graf-after--h3">
            The essence of software development is composition. We build software by composing modules, functions, and data structures together.
           </blockquote>
           <blockquote name="9fdf" id="9fdf" class="graf graf--pullquote graf-after--pullquote">
            Understanding how to write and compose functions is a fundamental skill for software developers.
           </blockquote>
           <p name="9ce2" id="9ce2" class="graf graf--p graf-after--pullquote">Modules are simply collections of one or more functions or data structures, and data structures are how we represent program state, but nothing interesting happens until we apply a function.</p>
           <p name="d0fe" id="d0fe" class="graf graf--p graf-after--p">In JavaScript, there are three kinds of functions:</p>
           <ul class="postList">
            <li name="119b" id="119b" class="graf graf--li graf-after--p">Communicating functions: Functions which perform I/O.</li>
            <li name="b85b" id="b85b" class="graf graf--li graf-after--li">Procedural functions: A list of instructions, grouped together.</li>
            <li name="e9ae" id="e9ae" class="graf graf--li graf-after--li">Mapping functions: Given some input, return some corresponding output.</li>
           </ul>
           <p name="6eb9" id="6eb9" class="graf graf--p graf-after--li">While all useful programs need I/O, and many programs follow some procedural sequences, the majority of your functions should be mapping functions: Given some input, the function will return some corresponding output.</p>
           <p name="b274" id="b274" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">One thing for each function</strong>: If your function is for I/O, don’t mix that I/O with mapping (calculation). If your function is for mapping, don’t mix it with I/O. By definition, procedural functions violate this guideline. Procedural functions also violate another guideline: Avoid a succession of loose statements.</p>
           <p name="cd4f" id="cd4f" class="graf graf--p graf-after--p">The ideal function is a simple, deterministic, pure function:</p>
           <ul class="postList">
            <li name="ee24" id="ee24" class="graf graf--li graf-after--p">Given the same input, always return the same output</li>
            <li name="edd6" id="edd6" class="graf graf--li graf-after--li">No side-effects</li>
           </ul>
           <p name="c99d" id="c99d" class="graf graf--p graf-after--li">See also, <a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976" data-href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976" class="markup--anchor markup--p-anchor" target="_blank">“What is a Pure Function?”</a></p>
           <h3 name="a116" id="a116" class="graf graf--h3 graf-after--p">2. Omit needless&nbsp;code.</h3>
           <blockquote name="0d6b" id="0d6b" class="graf graf--blockquote graf--startsWithDoubleQuote graf-after--h3">
            “Vigorous writing is concise. A sentence should contain no unnecessary words, a paragraph no unnecessary sentences, for the same reason that a drawing should have no unnecessary lines and a machine no unnecessary parts. This requires not that the writer make all sentences short, or avoid all detail and treat subjects only in outline, but that every word tell.” [Needless words omitted.]
            <br>~ William Strunk, Jr., The Elements of Style
           </blockquote>
           <p name="e8b8" id="e8b8" class="graf graf--p graf-after--blockquote">Concise code is critical in software because more code creates more surface area for bugs to hide in. <em class="markup--em markup--p-em">Less code= fewer places for bugs to hide = fewer bugs.</em></p>
           <p name="8327" id="8327" class="graf graf--p graf-after--p">Concise code is more legible because it has a higher signal-to-noise ratio: The reader must sift through less syntax noise to reach the meaning. <em class="markup--em markup--p-em">Less code = less syntax noise = stronger signal for meaning transmission.</em></p>
           <p name="0b37" id="0b37" class="graf graf--p graf-after--p">To borrow a word from The Elements of Style: Concise code is more <em class="markup--em markup--p-em">vigorous.</em></p>
           <pre name="b871" id="b871" class="graf graf--pre graf-after--p">function secret (message) {<br>  return function () {<br>    return message;<br>  }<br>};</pre>
           <p name="d62f" id="d62f" class="graf graf--p graf-after--pre">Can be reduced to:</p>
           <pre name="e53e" id="e53e" class="graf graf--pre graf-after--p">const secret = msg =&gt; () =&gt; msg;</pre>
           <p name="c80d" id="c80d" class="graf graf--p graf-after--pre">This is much more readable to those familiar with concise arrow functions (introduced in 2015 with ES6). It omits unnecessary syntax: Braces, the <code class="markup--code markup--p-code">function</code> keyword, and the <code class="markup--code markup--p-code">return</code> statement.</p>
           <p name="40b9" id="40b9" class="graf graf--p graf-after--p">The first includes unnecessary syntax. Braces, the <code class="markup--code markup--p-code">function</code> keyword, and the <code class="markup--code markup--p-code">return</code> statement serve no purpose to those familiar with concise arrow syntax. It exists only to make the code familiar to those who are not yet fluent with ES6.</p>
           <p name="9d40" id="9d40" class="graf graf--p graf-after--p">ES6 has been the language standard since 2015. It’s time to <a href="https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75" data-href="https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75" class="markup--anchor markup--p-anchor" target="_blank">get familiar</a>.</p>
           <h4 name="7468" id="7468" class="graf graf--h4 graf-after--p">Omit Needless Variables</h4>
           <p name="9b40" id="9b40" class="graf graf--p graf-after--h4">Sometimes we’re tempted to assign names to things that don’t really need to be named. The problem is that <a href="http://www.nature.com/neuro/journal/v17/n3/fig_tab/nn.3655_F2.html" data-href="http://www.nature.com/neuro/journal/v17/n3/fig_tab/nn.3655_F2.html" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">the human brain has a limited number of resources available in working memory</a>, and each variable must be stored as a discrete quanta, occupying one of the available working memory slots.</p>
           <p name="228f" id="228f" class="graf graf--p graf-after--p">For this reason, experienced developers learn to eliminate variables that don’t need to exist.</p>
           <p name="4b62" id="4b62" class="graf graf--p graf-after--p">For example, in most situations, you should omit variables created only to name return values. The name of your function should provide adequate information about what the function will return. Consider the following:</p>
           <pre name="0551" id="0551" class="graf graf--pre graf-after--p">const getFullName = ({firstName, lastName}) =&gt; {<br>  const fullName = firstName + ' ' + lastName;<br>  return fullName;<br>};</pre>
           <p name="83bf" id="83bf" class="graf graf--p graf-after--pre">vs…</p>
           <pre name="f2c3" id="f2c3" class="graf graf--pre graf-after--p">const getFullName = ({firstName, lastName}) =&gt; (<br>  firstName + ' ' + lastName<br>);</pre>
           <p name="b0c4" id="b0c4" class="graf graf--p graf-after--pre">Another common way developers can reduce variables is to take advantage of function composition and point-free style.</p>
           <p name="2f84" id="2f84" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Point-free style</strong> is a way of defining functions without referencing the arguments on which the functions operate. Common ways of achieving point-free style include currying and function composition.</p>
           <p name="791d" id="791d" class="graf graf--p graf-after--p">Let’s look at an example using curry:</p>
           <pre name="7db7" id="7db7" class="graf graf--pre graf-after--p">const add2 = a =&gt; b =&gt; a + b;</pre>
           <pre name="d928" id="d928" class="graf graf--pre graf-after--pre">// Now we can define a point-free inc()<br>// that adds 1 to any number.<br>const inc = add2(1);</pre>
           <pre name="ffb9" id="ffb9" class="graf graf--pre graf-after--pre">inc(3); // 4</pre>
           <p name="b73c" id="b73c" class="graf graf--p graf-after--pre">Take a look at the definition of the <code class="markup--code markup--p-code">inc()</code> function. Notice that it doesn’t use the <code class="markup--code markup--p-code">function</code> keyword, or the <code class="markup--code markup--p-code">=&gt;</code> syntax. There’s no place to list parameters, because the function doesn’t make use of a parameter list internally. Instead, it returns a function that knows how to deal with arguments.</p>
           <p name="97c5" id="97c5" class="graf graf--p graf-after--p">Let’s look at another example using function composition. <strong class="markup--strong markup--p-strong">Function composition</strong> is the process of applying a function to the result of another function application. Whether you realize it or not, you use function composition all the time. You use it whenever you chain methods like&nbsp;<code class="markup--code markup--p-code">.map()</code> or <code class="markup--code markup--p-code">promise.then()</code>, for example. In it’s most basic form, it looks like this: <code class="markup--code markup--p-code">f(g(x))</code>. In algebra this composition is usually written <code class="markup--code markup--p-code">f ? g</code> (often pronounced, “f <em class="markup--em markup--p-em">after</em> g” or “f <em class="markup--em markup--p-em">composed with</em> g”).</p>
           <p name="99a1" id="99a1" class="graf graf--p graf-after--p">When you compose two functions together, you eliminate the need to create a variable to hold the intermediary value between the two function applications. Let’s see how function composition can clean up some code:</p>
           <pre name="f4b5" id="f4b5" class="graf graf--pre graf-after--p">const g = n =&gt; n + 1;<br>const f = n =&gt; n * 2;</pre>
           <pre name="d4ba" id="d4ba" class="graf graf--pre graf-after--pre">// With points:<br>const incThenDoublePoints = n =&gt; {<br>  const incremented = g(n);<br>  return f(incremented);<br>};</pre>
           <pre name="5c77" id="5c77" class="graf graf--pre graf-after--pre">incThenDoublePoints(20); // 42</pre>
           <pre name="cf88" id="cf88" class="graf graf--pre graf-after--pre">// compose2 - Take two functions and return their composition<br>const compose2 = (f, g) =&gt; x =&gt; f(g(x));</pre>
           <pre name="d241" id="d241" class="graf graf--pre graf-after--pre">// Point-free:<br>const incThenDoublePointFree = compose2(f, g);</pre>
           <pre name="76cd" id="76cd" class="graf graf--pre graf-after--pre">incThenDoublePointFree(20); // 42</pre>
           <p name="fd1a" id="fd1a" class="graf graf--p graf-after--pre">You can do the same thing with any functor. A <a href="https://medium.com/javascript-scene/functors-categories-61e031bac53f" data-href="https://medium.com/javascript-scene/functors-categories-61e031bac53f" class="markup--anchor markup--p-anchor" target="_blank"><strong class="markup--strong markup--p-strong">functor</strong></a> is anything you can map over, e.g., arrays (<code class="markup--code markup--p-code">Array.map()</code>) or promises (<code class="markup--code markup--p-code">promise.then()</code>). Let’s write another version of <code class="markup--code markup--p-code">compose2</code> using map chaining for function composition:</p>
           <pre name="0775" id="0775" class="graf graf--pre graf-after--p">const compose2 = (f, g) =&gt; x =&gt; [x].map(g).map(f).pop();</pre>
           <pre name="294d" id="294d" class="graf graf--pre graf-after--pre">const incThenDoublePointFree = compose2(f, g);</pre>
           <pre name="fa03" id="fa03" class="graf graf--pre graf-after--pre">incThenDoublePointFree(20); // 42</pre>
           <p name="4967" id="4967" class="graf graf--p graf-after--pre">You’re doing much the same thing every time you use promise chains.</p>
           <p name="5f9a" id="5f9a" class="graf graf--p graf-after--p">Virtually every functional programming library has at least two versions of compose utilities: <code class="markup--code markup--p-code">compose()</code> which applies functions right-to-left, and <code class="markup--code markup--p-code">pipe()</code>, which applies functions left-to-right.</p>
           <p name="3e73" id="3e73" class="graf graf--p graf-after--p">Lodash calls them <code class="markup--code markup--p-code">compose()</code> and <code class="markup--code markup--p-code">flow()</code>. When I use them from Lodash, I always import it like this:</p>
           <pre name="4b36" id="4b36" class="graf graf--pre graf-after--p">import pipe from 'lodash/fp/flow';<br>pipe(g, f)(20); // 42</pre>
           <p name="99c0" id="99c0" class="graf graf--p graf-after--pre">However, this isn’t much more code, and it does the same thing:</p>
           <pre name="9ec8" id="9ec8" class="graf graf--pre graf-after--p">const pipe = (...fns) =&gt; x =&gt; fns.reduce((acc, fn) =&gt; fn(acc), x);<br>pipe(g, f)(20); // 42</pre>
           <p name="5086" id="5086" class="graf graf--p graf-after--pre">If this function composition stuff sounds alien to you, and you’re not sure how you’d use it, give this careful thought:</p>
           <blockquote name="795a" id="795a" class="graf graf--pullquote graf-after--p">
            The essence of software development is composition. We build applications by composing smaller modules, functions, and data structures.
           </blockquote>
           <p name="dacb" id="dacb" class="graf graf--p graf-after--pullquote">From that you can conclude that understanding the tools of function and object composition are as fundamental as a home builder understanding drills and nail guns.</p>
           <p name="6bd7" id="6bd7" class="graf graf--p graf-after--p">When you use imperative code to piece together functions with intermediary variables, that’s like composing those pieces with duct tape and crazy glue.</p>
           <p name="5c5e" id="5c5e" class="graf graf--p graf-after--p">Remember:</p>
           <ul class="postList">
            <li name="e4ed" id="e4ed" class="graf graf--li graf-after--p">If you can say the same thing with less code, without changing or obfuscating the meaning, you should.</li>
            <li name="0638" id="0638" class="graf graf--li graf-after--li">If you can say the same thing with fewer variables, without changing or obfuscating the meaning, you should.</li>
           </ul>
           <h3 name="0b4d" id="0b4d" class="graf graf--h3 graf-after--li">3. Use Active&nbsp;Voice</h3>
           <blockquote name="32c9" id="32c9" class="graf graf--blockquote graf--startsWithDoubleQuote graf-after--h3">
            “The active voice is usually more direct and vigorous than the passive.” ~ William Strunk, Jr., The Elements of Style
           </blockquote>
           <p name="fd68" id="fd68" class="graf graf--p graf-after--blockquote">Name things as directly as possible.</p>
           <ul class="postList">
            <li name="3b35" id="3b35" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">myFunction.wasCalled()</code> is better than <code class="markup--code markup--li-code">myFunction.hasBeenCalled()</code></li>
            <li name="727e" id="727e" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">createUser()</code> is better than <code class="markup--code markup--li-code">User.create()</code></li>
            <li name="7d45" id="7d45" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">notify()</code> is better than <code class="markup--code markup--li-code">Notifier.doNotification()</code></li>
           </ul>
           <p name="8b38" id="8b38" class="graf graf--p graf-after--li">Name predicates and booleans as if they are yes or no questions:</p>
           <ul class="postList">
            <li name="429e" id="429e" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">isActive(user)</code> is better than <code class="markup--code markup--li-code">getActiveStatus(user)</code></li>
            <li name="bf72" id="bf72" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">isFirstRun = false;</code> is better than <code class="markup--code markup--li-code">firstRun = false;</code></li>
           </ul>
           <p name="3475" id="3475" class="graf graf--p graf-after--li">Name functions using verb forms:</p>
           <ul class="postList">
            <li name="2e6a" id="2e6a" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">increment()</code> is better than <code class="markup--code markup--li-code">plusOne()</code></li>
            <li name="fe78" id="fe78" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">unzip()</code> is better than <code class="markup--code markup--li-code">filesFromZip()</code></li>
            <li name="ba9e" id="ba9e" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">filter(fn, array)</code> is better than <code class="markup--code markup--li-code">matchingItemsFromArray(fn, array)</code></li>
           </ul>
           <p name="f9cc" id="f9cc" class="graf graf--p graf-after--li"><strong class="markup--strong markup--p-strong">Event Handlers</strong></p>
           <p name="6dac" id="6dac" class="graf graf--p graf-after--p">Event handlers and lifecycle methods are an exception to the verb rule because they’re used as qualifiers; instead of expressing what to do, they express <em class="markup--em markup--p-em">when</em> to do it. They should be named so that they read, “&lt;when to act&gt;, &lt;verb&gt;”.</p>
           <ul class="postList">
            <li name="a2ed" id="a2ed" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">element.onClick(handleClick)</code> is better than <code class="markup--code markup--li-code">element.click(handleClick)</code></li>
            <li name="0c67" id="0c67" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">component.onDragStart(handleDragStart)</code> is better than <code class="markup--code markup--li-code">component.startDrag(handleDragStart)</code></li>
           </ul>
           <p name="1c88" id="1c88" class="graf graf--p graf-after--li">In the second forms, it looks like we’re trying to trigger the event, rather than respond to it.</p>
           <h4 name="457e" id="457e" class="graf graf--h4 graf-after--p">Lifecycle Methods</h4>
           <p name="fb89" id="fb89" class="graf graf--p graf-after--h4">Consider the following alternatives for a component hypothetical lifecycle method which exists to call a handler function before a component updates:</p>
           <ul class="postList">
            <li name="509d" id="509d" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">componentWillBeUpdated(doSomething)</code></li>
            <li name="e33c" id="e33c" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">componentWillUpdate(doSomething)</code></li>
            <li name="1b7b" id="1b7b" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">beforeUpdate(doSomething)</code></li>
           </ul>
           <p name="6161" id="6161" class="graf graf--p graf-after--li">In the first example, we use passive voice (will be updated instead of will update). It is a mouthful, and not any more clear than the other alternatives.</p>
           <p name="8677" id="8677" class="graf graf--p graf-after--p">The second example is much better, but the whole point of this lifecycle method is to call a handler. <code class="markup--code markup--p-code">componentWillUpdate(handler)</code> reads as if it will update the handler, but that’s not what we mean. We mean, “before the component updates, call the handler”. <code class="markup--code markup--p-code">beforeComponentUpdate()</code> expresses the intention more clearly.</p>
           <p name="6e41" id="6e41" class="graf graf--p graf-after--p">We can simplify even further. Since these are methods, the subject (the component) is built-in. Referring to it in the method name is redundant. Think about how it would read if you called these methods directly: <code class="markup--code markup--p-code">component.componentWillUpdate()</code>. That’s like saying, “Jimmy Jimmy will have steak for dinner.” You don’t need to hear the subject’s name twice.</p>
           <ul class="postList">
            <li name="a984" id="a984" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">component.beforeUpdate(doSomething)</code> is better than <code class="markup--code markup--li-code">component.beforeComponentUpdate(doSomething)</code></li>
           </ul>
           <p name="0078" id="0078" class="graf graf--p graf-after--li"><strong class="markup--strong markup--p-strong">Functional mixins</strong> are functions that add properties and methods to an object. The functions are applied one after the other in an pipeline?—?like an assembly line. Each functional mixin takes the <code class="markup--code markup--p-code">instance</code> as an input, and tacks some stuff onto it before passing it on to the next function in the pipeline.</p>
           <p name="a8a9" id="a8a9" class="graf graf--p graf-after--p">I like to name functional mixins using adjectives. You can often use “ing” or “able” suffixes to find useful adjectives. Examples:</p>
           <ul class="postList">
            <li name="2dc1" id="2dc1" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">const duck = composeMixins(flying, quacking);</code></li>
            <li name="4170" id="4170" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">const box = composeMixins(iterable, mappable);</code></li>
           </ul>
           <h3 name="c737" id="c737" class="graf graf--h3 graf-after--li">4. Avoid a Succession of Loose Statements</h3>
           <blockquote name="9a2b" id="9a2b" class="graf graf--blockquote graf--startsWithDoubleQuote graf-after--h3">
            “…a series soon becomes monotonous and tedious.”
            <br>~ William Strunk, Jr., The Elements of Style
           </blockquote>
           <p name="2da7" id="2da7" class="graf graf--p graf-after--blockquote">Developers frequently string together sequences of events in a procedure: a group of loosely related statements designed to run one after the other. An excess of procedures is a recipe for spaghetti code.</p>
           <p name="5b9f" id="5b9f" class="graf graf--p graf-after--p">Such sequences are frequently repeated by many parallel forms, each of them subtly and sometimes unexpectedly divergent. For example, a user interface component shares the same core needs with virtually all other user interface components. Its concerns can be broken up into lifecycle stages and managed by separate functions.</p>
           <p name="dffe" id="dffe" class="graf graf--p graf-after--p">Consider the following sequence:</p>
           <pre name="7ddb" id="7ddb" class="graf graf--pre graf-after--p">const drawUserProfile = ({ userId }) =&gt; {<br>  const userData = loadUserData(userId);<br>  const dataToDisplay = calculateDisplayData(userData);<br>  renderProfileData(dataToDisplay);<br>};</pre>
           <p name="d031" id="d031" class="graf graf--p graf-after--pre">This function is really handling three different things: loading data, calculating view state from loaded data, and rendering.</p>
           <p name="5879" id="5879" class="graf graf--p graf-after--p">In most modern front-end application architectures, each of these concerns is considered separately. By separating these concerns, we can easily mix and match different functions for each concern.</p>
           <p name="5ebd" id="5ebd" class="graf graf--p graf-after--p">For example, we could replace the renderer completely, and it would not impact the other parts of the program, e.g., React’s wealth of custom renderers: ReactNative for native iOS &amp; Android apps, AFrame for WebVR, ReactDOM/Server for server-side rendering, etc…</p>
           <p name="b03c" id="b03c" class="graf graf--p graf-after--p">Another problem with this function is that you can’t simply calculate the data to be displayed and generate the markup without first loading the data. What if you’ve already loaded the data? You end up doing work that you didn’t need to do in subsequent calls.</p>
           <p name="db67" id="db67" class="graf graf--p graf-after--p">Separating the concerns also makes them independently testable. I like to unit test my applications and display test results with each change as I’m writing the code. However, if we’re tying <em class="markup--em markup--p-em">render code</em> to <em class="markup--em markup--p-em">data loading code</em>, I can’t simply pass some fake data to the rendering code for testing purposes. I have to test the whole component end-to-end?—?a process which can be time consuming due to browser loading, asynchronous network I/O, etc…</p>
           <p name="ea97" id="ea97" class="graf graf--p graf-after--p">I won’t get immediate feedback from my unit tests. Separating the functions allows you to test units in isolation from each other.</p>
           <p name="3aff" id="3aff" class="graf graf--p graf-after--p">This example already has separate functions which we can feed to different lifecycle hooks in the application. Loading can be triggered when the component is mounted by the application. Calculating &amp; rendering can happen in response to view state updates.</p>
           <p name="e642" id="e642" class="graf graf--p graf-after--p">The result is software with responsibilities more clearly delineated: Each component can reuse the same structure and lifecycle hooks, and the software performs better; we don’t repeat work that doesn’t need to be repeated in subsequent cycles.</p>
           <h3 name="6255" id="6255" class="graf graf--h3 graf-after--p">5. Keep related code together.</h3>
           <p name="2c13" id="2c13" class="graf graf--p graf-after--h3">Many frameworks and boilerplates prescribe a method of program organization where files are grouped by technical type. This is fine if you’re building a small calculator or To Do app, but for larger projects, it’s usually better to group files together by feature.</p>
           <p name="6702" id="6702" class="graf graf--p graf-after--p">For example, here are two alternative file hierarchies for a To Do app by type and feature:</p>
           <p name="b62e" id="b62e" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Grouped by type:</strong></p>
           <pre name="0567" id="0567" class="graf graf--pre graf-after--p">.<br>??? components<br>?   ??? todos<br>?   ??? user<br>??? reducers<br>?   ??? todos<br>?   ??? user<br>??? tests<br>    ??? todos<br>    ??? user</pre>
           <p name="9f21" id="9f21" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Grouped by feature:</strong></p>
           <pre name="aa6e" id="aa6e" class="graf graf--pre graf-after--p">.<br>??? todos<br>?   ??? component<br>?   ??? reducer<br>?   ??? test<br>??? user<br>    ??? component<br>    ??? reducer<br>    ??? test</pre>
           <p name="40ee" id="40ee" class="graf graf--p graf-after--pre">When you group files together by feature, you avoid scrolling up and down in your file list to find all the files you need to edit to get a single feature working.</p>
           <blockquote name="3249" id="3249" class="graf graf--pullquote graf-after--p">
            Colocate files related by&nbsp;feature.
           </blockquote>
           <h3 name="01e8" id="01e8" class="graf graf--h3 graf-after--pullquote">6. Put statements and expressions in positive&nbsp;form.</h3>
           <blockquote name="3b88" id="3b88" class="graf graf--blockquote graf--startsWithDoubleQuote graf-after--h3">
            “Make definite assertions. Avoid tame, colorless, hesitating, non-committal language. Use the word 
            <em class="markup--em markup--blockquote-em">not</em> as a means of denial or in antithesis, never as a means of evasion.”
            <br>~ William Strunk, Jr., The Elements of Style
           </blockquote>
           <ul class="postList">
            <li name="44f5" id="44f5" class="graf graf--li graf-after--blockquote"><code class="markup--code markup--li-code">isFlying</code> is better than <code class="markup--code markup--li-code">isNotFlying</code></li>
            <li name="ff58" id="ff58" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">late</code> is better than <code class="markup--code markup--li-code">notOnTime</code></li>
           </ul>
           <h4 name="5f1a" id="5f1a" class="graf graf--h4 graf-after--li">If Statements</h4>
           <pre name="029a" id="029a" class="graf graf--pre graf-after--h4">if (err) return reject(err);</pre>
           <pre name="ef43" id="ef43" class="graf graf--pre graf-after--pre">// do something...</pre>
           <p name="6de5" id="6de5" class="graf graf--p graf-after--pre">…is better than:</p>
           <pre name="8de6" id="8de6" class="graf graf--pre graf-after--p">if (!err) {<br>  // ... do something<br>} else {<br>  return reject(err);<br>}</pre>
           <h4 name="1b74" id="1b74" class="graf graf--h4 graf-after--pre">Ternaries</h4>
           <pre name="34ae" id="34ae" class="graf graf--pre graf-after--h4">{<br>  [Symbol.iterator]: iterator ? iterator : defaultIterator<br>}</pre>
           <p name="ea44" id="ea44" class="graf graf--p graf-after--pre">…is better than:</p>
           <pre name="eac4" id="eac4" class="graf graf--pre graf-after--p">{<br>  [Symbol.iterator]: (!iterator) ? defaultIterator : iterator<br>}</pre>
           <h4 name="96ab" id="96ab" class="graf graf--h4 graf-after--pre">Prefer Strong Negative Statements</h4>
           <p name="3cb4" id="3cb4" class="graf graf--p graf-after--h4">Sometimes we only care about a variable if it’s missing, so using a positive name would force us to negate it with the&nbsp;<code class="markup--code markup--p-code">!</code> operator. In those cases, prefer a strong negative form. The word “not” and the&nbsp;<code class="markup--code markup--p-code">!</code> operator create weak expressions.</p>
           <ul class="postList">
            <li name="b7a9" id="b7a9" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">if (missingValue)</code> is better than <code class="markup--code markup--li-code">if (!hasValue)</code></li>
            <li name="4bf2" id="4bf2" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">if (anonymous)</code> is better than <code class="markup--code markup--li-code">if (!user)</code></li>
            <li name="021b" id="021b" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">if (isEmpty(thing))</code> is better than <code class="markup--code markup--li-code">if (notDefined(thing))</code></li>
           </ul>
           <h4 name="6bde" id="6bde" class="graf graf--h4 graf-after--li">Avoid null and undefined arguments in function&nbsp;calls</h4>
           <p name="9241" id="9241" class="graf graf--p graf-after--h4">Don’t require function callers to pass <code class="markup--code markup--p-code">undefined</code> or <code class="markup--code markup--p-code">null</code> in place of an optional parameter. Prefer named options objects instead:</p>
           <pre name="ee9f" id="ee9f" class="graf graf--pre graf-after--p">const createEvent = ({<br>  title = 'Untitled',<br>  timeStamp = Date.now(),<br>  description = ''<br>}) =&gt; ({ title, description, timeStamp });</pre>
           <pre name="bedb" id="bedb" class="graf graf--pre graf-after--pre">// later...<br>const birthdayParty = createEvent({<br>  title: 'Birthday Party',<br>  description: 'Best party ever!'<br>});</pre>
           <p name="728e" id="728e" class="graf graf--p graf-after--pre">…is better than:</p>
           <pre name="6bd9" id="6bd9" class="graf graf--pre graf-after--p">const createEvent = (<br>  title = 'Untitled',<br>  timeStamp = Date.now(),<br>  description = ''<br>) =&gt; ({ title, description, timeStamp });</pre>
           <pre name="fd1b" id="fd1b" class="graf graf--pre graf-after--pre">// later...<br>const birthdayParty = createEvent(<br>  'Birthday Party',<br>  undefined, // This was avoidable<br>  'Best party ever!'  <br>);</pre>
           <h3 name="f2b3" id="f2b3" class="graf graf--h3 graf-after--pre">Use Parallel Code for Parallel&nbsp;Concepts</h3>
           <blockquote name="69ea" id="69ea" class="graf graf--blockquote graf--startsWithDoubleQuote graf-after--h3">
            “…parallel construction requires that expressions of similar content and function should be outwardly similar. The likeness of form enables the reader to recognize more readily the likeness of content and function.”
            <br>~ William Strunk, Jr., The Elements of Style
           </blockquote>
           <p name="4b51" id="4b51" class="graf graf--p graf-after--blockquote">There are few problems in applications that have not been solved before. We end up doing the same things over and over again. When that happens, it’s an opportunity for abstraction. Identify the parts that are the same, and build an abstraction that allows you to supply only the parts that are different. This is exactly what libraries and frameworks do for us.</p>
           <p name="1771" id="1771" class="graf graf--p graf-after--p">UI components are a great example. Less than a decade ago, it was common to mingle UI updates using jQuery with application logic and network I/O. Then people began to realize that we could apply MVC to web apps on the client-side, and people began to separate models from UI update logic.</p>
           <p name="7e64" id="7e64" class="graf graf--p graf-after--p">Eventually, web apps landed on a component model approach, which lets us declaratively model our components using things like JSX or HTML templates.</p>
           <p name="ee2e" id="ee2e" class="graf graf--p graf-after--p">What we ended up with is a way of expressing UI update logic the same way for every component, rather than different imperative code for each one.</p>
           <p name="773e" id="773e" class="graf graf--p graf-after--p">For those familiar with components, it’s pretty easy to see how each component works: There’s some declarative markup expressing the UI elements, event handlers for hooking up behaviors, and lifecycle hooks for attaching callbacks that will run when we need them to.</p>
           <p name="838e" id="838e" class="graf graf--p graf-after--p">When we repeat similar pattern for similar problems, anybody familiar with the pattern should be able to quickly learn what the code does.</p>
           <h3 name="d4f3" id="d4f3" class="graf graf--h3 graf-after--p">Conclusion: Code Should Be Simple, Not Simplistic</h3>
           <blockquote name="1365" id="1365" class="graf graf--blockquote graf-after--h3">
            Vigorous writing is concise. A sentence should contain no unnecessary words, a paragraph no unnecessary sentences, for the same reason that a drawing should have no unnecessary lines and a machine no unnecessary parts. 
            <strong class="markup--strong markup--blockquote-strong">This requires not that the writer make all sentences short, or avoid all detail and treat subjects only in outline, but that every word tell. </strong>[Emphasis added.]
            <br>~ William Strunk, Jr., The Elements of Style
           </blockquote>
           <p name="c930" id="c930" class="graf graf--p graf-after--blockquote">ES6 was standardized in 2015, yet in 2017, many developers avoid features such as concise arrow functions, implicit return, rest and spread operators, etc… in the guise of writing code that is easier to read because it is <a href="https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75" data-href="https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75" class="markup--anchor markup--p-anchor" target="_blank">more familiar</a>. That is a big mistake. Familiarity comes with practice, and with familiarity, the concise features in ES6 are clearly superior to the ES5 alternatives: <em class="markup--em markup--p-em">concise code is simple</em> compared to the syntax-heavy alternative.</p>
           <p name="5c76" id="5c76" class="graf graf--p graf-after--p">Code should be simple, not simplistic.</p>
           <p name="c717" id="c717" class="graf graf--p graf-after--p">Given that concise code is:</p>
           <ul class="postList">
            <li name="ba39" id="ba39" class="graf graf--li graf-after--p">Less bug prone</li>
            <li name="ca6d" id="ca6d" class="graf graf--li graf-after--li">Easier to debug</li>
           </ul>
           <p name="a5be" id="a5be" class="graf graf--p graf-after--li">And given that bugs:</p>
           <ul class="postList">
            <li name="0125" id="0125" class="graf graf--li graf-after--p">Are extremely expensive to fix</li>
            <li name="b3a9" id="b3a9" class="graf graf--li graf-after--li">Tend to cause more bugs</li>
            <li name="558d" id="558d" class="graf graf--li graf-after--li">Interrupt the flow of normal feature development</li>
           </ul>
           <p name="5ab0" id="5ab0" class="graf graf--p graf-after--li">And given that concise code is also:</p>
           <ul class="postList">
            <li name="398a" id="398a" class="graf graf--li graf-after--p">Easier to write</li>
            <li name="0348" id="0348" class="graf graf--li graf-after--li">Easier to read</li>
            <li name="d95c" id="d95c" class="graf graf--li graf-after--li">Easier to maintain</li>
           </ul>
           <p name="7b13" id="7b13" class="graf graf--p graf-after--li">It is worth the training investment to bring developers up to speed using techniques such as concise syntax, currying &amp; composition. When we fail to do so for the sake of familiarity, we talk down to readers of our code so that they can better understand it, like an adult speaking baby-talk to a toddler.</p>
           <p name="b19b" id="b19b" class="graf graf--p graf-after--p">Assume the reader knows nothing about the implementation, but do not assume that the reader is stupid, or that the reader doesn’t know the language.</p>
           <p name="1938" id="1938" class="graf graf--p graf-after--p">Be clear, but don’t dumb it down. To dumb things down is both wasteful and insulting. Make the investment in practice and familiarity in order to gain a better programming vocabulary, and a more vigorous style.</p>
           <blockquote name="87d1" id="87d1" class="graf graf--pullquote graf-after--p">
            Code should be simple, not simplistic.
           </blockquote>
           <h3 name="13b4" id="13b4" class="graf graf--h3 graf-after--pullquote">Level Up Your Skills with Live 1:1 Mentorship</h3>
           <p name="2db8" id="2db8" class="graf graf--p graf-after--h3">DevAnywhere is the fastest way to level up to advanced JavaScript skills:</p>
           <ul class="postList">
            <li name="5aa2" id="5aa2" class="graf graf--li graf-after--p">Live lessons</li>
            <li name="58c2" id="58c2" class="graf graf--li graf-after--li">Flexible hours</li>
            <li name="b984" id="b984" class="graf graf--li graf-after--li">1:1 mentorship</li>
            <li name="cdc0" id="cdc0" class="graf graf--li graf-after--li">Build real production apps</li>
           </ul>
           <figure name="154a" id="154a" class="graf graf--figure graf-after--li graf--trailing">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 394px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 56.3%;"></div>
             <a href="https://devanywhere.io/" data-href="https://devanywhere.io/" class="graf-imageAnchor" data-action="image-link" data-action-observe-only="true" rel="nofollow">
              <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*pskrI-ZjRX_Y0I0zZqVTcQ.png" data-width="2470" data-height="1390">
               <img src="https://cdn-images-1.medium.com/freeze/max/60/1*pskrI-ZjRX_Y0I0zZqVTcQ.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
               <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
               <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/1*pskrI-ZjRX_Y0I0zZqVTcQ.png">
               <noscript class="js-progressiveMedia-inner">
                <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/1*pskrI-ZjRX_Y0I0zZqVTcQ.png">
               </noscript>
              </div></a>
            </div>
            <figcaption class="imageCaption">
             <a href="https://devanywhere.io/" data-href="https://devanywhere.io/" class="markup--anchor markup--figure-anchor" rel="nofollow noopener noopener nofollow noopener nofollow noopener noopener nofollow noopener nofollow noopener" target="_blank">https://devanywhere.io/</a>
            </figcaption>
           </figure>
          </div>
         </div>
        </section>
        <section name="778a" class="section section--body section--last">
         <div class="section-divider">
          <hr class="section-divider">
         </div>
         <div class="section-content">
          <div class="section-inner sectionLayout--insetColumn">
           <p name="b215" id="b215" class="graf graf--p graf--leading"><strong class="markup--strong markup--p-strong"><em class="markup--em markup--p-em">Eric Elliott</em></strong><em class="markup--em markup--p-em"> is the author of </em><a href="http://pjabook.com" data-href="http://pjabook.com" class="markup--anchor markup--p-anchor" rel="nofollow noopener noopener noopener nofollow noopener nofollow noopener" target="_blank"><em class="markup--em markup--p-em">“Programming JavaScript Applications”</em></a><em class="markup--em markup--p-em"> (O’Reilly), and cofounder of </em><a href="https://devanywhere.io/" data-href="https://devanywhere.io/" class="markup--anchor markup--p-anchor" rel="noopener nofollow nofollow noopener" target="_blank"><em class="markup--em markup--p-em">DevAnywhere.io</em></a><em class="markup--em markup--p-em">. He has contributed to software experiences for </em><strong class="markup--strong markup--p-strong"><em class="markup--em markup--p-em">Adobe Systems</em></strong><em class="markup--em markup--p-em">, </em><strong class="markup--strong markup--p-strong"><em class="markup--em markup--p-em">Zumba Fitness</em></strong><em class="markup--em markup--p-em">, </em><strong class="markup--strong markup--p-strong"><em class="markup--em markup--p-em">The Wall Street Journal</em></strong><em class="markup--em markup--p-em">, </em><strong class="markup--strong markup--p-strong"><em class="markup--em markup--p-em">ESPN</em></strong><em class="markup--em markup--p-em">, </em><strong class="markup--strong markup--p-strong"><em class="markup--em markup--p-em">BBC</em></strong><em class="markup--em markup--p-em">, and top recording artists including </em><strong class="markup--strong markup--p-strong"><em class="markup--em markup--p-em">Usher</em></strong><em class="markup--em markup--p-em">, </em><strong class="markup--strong markup--p-strong"><em class="markup--em markup--p-em">Frank Ocean</em></strong><em class="markup--em markup--p-em">, </em><strong class="markup--strong markup--p-strong"><em class="markup--em markup--p-em">Metallica</em></strong><em class="markup--em markup--p-em">, and many more.</em></p>
           <p name="98ef" id="98ef" class="graf graf--p graf-after--p graf--trailing"><em class="markup--em markup--p-em">He works anywhere he wants with the most beautiful woman in the world.</em></p>
          </div>
         </div>
        </section>
       </div>
       <footer class="u-paddingTop10">
        <div class="container u-maxWidth740">
         <div class="row">
          <div class="col u-size12of12"></div>
         </div>
         <div class="row">
          <div class="col u-size12of12 js-postTags">
           <div class="u-paddingBottom10">
            <ul class="tags tags--postTags tags--borderless">
             <li><a class="link u-baseColor--link" href="https://medium.com/tag/javascript?source=post" data-action-source="post">JavaScript</a></li>
             <li><a class="link u-baseColor--link" href="https://medium.com/tag/tech?source=post" data-action-source="post">Tech</a></li>
             <li><a class="link u-baseColor--link" href="https://medium.com/tag/technology?source=post" data-action-source="post">Technology</a></li>
            </ul>
           </div>
          </div>
         </div>
         <section class="u-paddingTop20 u-borderTopLightest u-marginTop10">
          <div class="u-textColorDarker u-fontSize22 u-marginBottom7">
           Show your support
          </div>
          <p class="u-textColorDark u-fontSize16">Clapping shows how much you appreciated Eric Elliott’s story.</p>
         </section>
         <div class="postActions u-flexCenter js-postActionsFooter">
          <div class="u-flex1">
           <div class="multirecommend js-actionMultirecommend u-flexCenter u-width60" data-post-id="caa8821cb99f" data-is-icon-29px="true" data-is-circle="true" data-has-recommend-list="true" data-source="post_actions_footer-----caa8821cb99f---------------------clap_footer">
            <div class="u-relative u-foreground">
             <button class="button button--large button--circle button--withChrome u-baseColor--buttonNormal button--withIcon button--withSvgIcon clapButton js-actionMultirecommendButton clapButton--largePill u-relative u-foreground u-width60 u-height60 u-accentColor--textNormal u-accentColor--buttonNormal" data-action="sign-up-prompt" data-sign-in-action="multivote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/caa8821cb99f" data-action-source="post_actions_footer-----caa8821cb99f---------------------clap_footer" aria-label="Clap"><span class="button-defaultState"><span class="svgIcon svgIcon--clap svgIcon--33px u-relative u-topNegative2 u-xs-top0">
                <svg class="svgIcon-use" width="33" height="33" viewbox="0 0 33 33">
                 <path d="M28.86 17.342l-3.64-6.402c-.292-.433-.712-.729-1.163-.8a1.124 1.124 0 0 0-.889.213c-.63.488-.742 1.181-.33 2.061l1.222 2.587 1.4 2.46c2.234 4.085 1.511 8.007-2.145 11.663-.26.26-.526.49-.797.707 1.42-.084 2.881-.683 4.292-2.094 3.822-3.823 3.565-7.876 2.05-10.395zm-6.252 11.075c3.352-3.35 3.998-6.775 1.978-10.469l-3.378-5.945c-.292-.432-.712-.728-1.163-.8a1.122 1.122 0 0 0-.89.213c-.63.49-.742 1.182-.33 2.061l1.72 3.638a.502.502 0 0 1-.806.568l-8.91-8.91a1.335 1.335 0 0 0-1.887 1.886l5.292 5.292a.5.5 0 0 1-.707.707l-5.292-5.292-1.492-1.492c-.503-.503-1.382-.505-1.887 0a1.337 1.337 0 0 0 0 1.886l1.493 1.492 5.292 5.292a.499.499 0 0 1-.353.854.5.5 0 0 1-.354-.147L5.642 13.96a1.338 1.338 0 0 0-1.887 0 1.338 1.338 0 0 0 0 1.887l2.23 2.228 3.322 3.324a.499.499 0 0 1-.353.853.502.502 0 0 1-.354-.146l-3.323-3.324a1.333 1.333 0 0 0-1.886 0 1.325 1.325 0 0 0-.39.943c0 .356.138.691.39.943l6.396 6.397c3.528 3.53 8.86 5.313 12.821 1.353zM12.73 9.26l5.68 5.68-.49-1.037c-.518-1.107-.426-2.13.224-2.89l-3.303-3.304a1.337 1.337 0 0 0-1.886 0 1.326 1.326 0 0 0-.39.944c0 .217.067.42.165.607zm14.787 19.184c-1.599 1.6-3.417 2.392-5.353 2.392-.349 0-.7-.03-1.058-.082a7.922 7.922 0 0 1-3.667.887c-3.049 0-6.115-1.626-8.359-3.87l-6.396-6.397A2.315 2.315 0 0 1 2 19.724a2.327 2.327 0 0 1 1.923-2.296l-.875-.875a2.339 2.339 0 0 1 0-3.3 2.33 2.33 0 0 1 1.24-.647l-.139-.139c-.91-.91-.91-2.39 0-3.3.884-.884 2.421-.882 3.301 0l.138.14a2.335 2.335 0 0 1 3.948-1.24l.093.092c.091-.423.291-.828.62-1.157a2.336 2.336 0 0 1 3.3 0l3.384 3.386a2.167 2.167 0 0 1 1.271-.173c.534.086 1.03.354 1.441.765.11-.549.415-1.034.911-1.418a2.12 2.12 0 0 1 1.661-.41c.727.117 1.385.565 1.853 1.262l3.652 6.423c1.704 2.832 2.025 7.377-2.205 11.607zM13.217.484l-1.917.882 2.37 2.837-.454-3.719zm8.487.877l-1.928-.86-.44 3.697 2.368-2.837zM16.5 3.293L15.478-.005h2.044L16.5 3.293z" fill-rule="evenodd" />
                </svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--clapFilled svgIcon--33px u-relative u-topNegative2 u-xs-top0">
                <svg class="svgIcon-use" width="33" height="33" viewbox="0 0 33 33">
                 <g fill-rule="evenodd">
                  <path d="M29.58 17.1l-3.854-6.78c-.365-.543-.876-.899-1.431-.989a1.491 1.491 0 0 0-1.16.281c-.42.327-.65.736-.7 1.207v.001l3.623 6.367c2.46 4.498 1.67 8.802-2.333 12.807-.265.265-.536.505-.81.728 1.973-.222 3.474-1.286 4.45-2.263 4.166-4.165 3.875-8.6 2.215-11.36zm-4.831.82l-3.581-6.3c-.296-.439-.725-.742-1.183-.815a1.105 1.105 0 0 0-.89.213c-.647.502-.755 1.188-.33 2.098l1.825 3.858a.601.601 0 0 1-.197.747.596.596 0 0 1-.77-.067L10.178 8.21c-.508-.506-1.393-.506-1.901 0a1.335 1.335 0 0 0-.393.95c0 .36.139.698.393.95v.001l5.61 5.61a.599.599 0 1 1-.848.847l-5.606-5.606c-.001 0-.002 0-.003-.002L5.848 9.375a1.349 1.349 0 0 0-1.902 0 1.348 1.348 0 0 0 0 1.901l1.582 1.582 5.61 5.61a.6.6 0 0 1-.848.848l-5.61-5.61c-.51-.508-1.393-.508-1.9 0a1.332 1.332 0 0 0-.394.95c0 .36.139.697.393.952l2.363 2.362c.002.001.002.002.002.003l3.52 3.52a.6.6 0 0 1-.848.847l-3.522-3.523h-.001a1.336 1.336 0 0 0-.95-.393 1.345 1.345 0 0 0-.949 2.295l6.779 6.78c3.715 3.713 9.327 5.598 13.49 1.434 3.527-3.528 4.21-7.13 2.086-11.015zM11.817 7.727c.06-.328.213-.64.466-.893.64-.64 1.755-.64 2.396 0l3.232 3.232c-.82.783-1.09 1.833-.764 2.992l-5.33-5.33z" />
                  <path d="M13.285.48l-1.916.881 2.37 2.837z" />
                  <path d="M21.719 1.361L19.79.501l-.44 3.697z" />
                  <path d="M16.502 3.298L15.481 0h2.043z" />
                 </g>
                </svg></span></span></button>
             <div class="clapUndo u-width60 u-round u-height32 u-absolute u-borderBox u-paddingRight5 u-transition--transform200Spring u-background--brandSageLighter js-clapUndo" style="top: 14px; padding: 2px;">
              <button class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-floatRight" data-action="multivote-undo" data-action-value="caa8821cb99f"><span class="svgIcon svgIcon--removeThin svgIcon--29px">
                <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
                 <path d="M20.13 8.11l-5.61 5.61-5.609-5.61-.801.801 5.61 5.61-5.61 5.61.801.8 5.61-5.609 5.61 5.61.8-.801-5.609-5.61 5.61-5.61" fill-rule="evenodd" />
                </svg></span></button>
             </div>
            </div>
            <span class="u-textAlignCenter u-relative u-background js-actionMultirecommendCount u-marginLeft10"><button class="button button--chromeless u-baseColor--buttonNormal js-multirecommendCountButton" data-action="show-recommends" data-action-value="caa8821cb99f">1.3K</button></span>
           </div>
          </div>
          <div class="u-flex0 buttonSet buttonSet--narrow">
           <div class="buttonSet-inner">
            <button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" data-action="scroll-to-responses" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--response svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M21.27 20.058c1.89-1.826 2.754-4.17 2.754-6.674C24.024 8.21 19.67 4 14.1 4 8.53 4 4 8.21 4 13.384c0 5.175 4.53 9.385 10.1 9.385 1.007 0 2-.14 2.95-.41.285.25.592.49.918.7 1.306.87 2.716 1.31 4.19 1.31.276-.01.494-.14.6-.36a.625.625 0 0 0-.052-.65c-.61-.84-1.042-1.71-1.282-2.58a5.417 5.417 0 0 1-.154-.75zm-3.85 1.324l-.083-.28-.388.12a9.72 9.72 0 0 1-2.85.424c-4.96 0-8.99-3.706-8.99-8.262 0-4.556 4.03-8.263 8.99-8.263 4.95 0 8.77 3.71 8.77 8.27 0 2.25-.75 4.35-2.5 5.92l-.24.21v.32c0 .07 0 .19.02.37.03.29.1.6.19.92.19.7.49 1.4.89 2.08-.93-.14-1.83-.49-2.67-1.06-.34-.22-.88-.48-1.16-.74z" />
              </svg></span></button>
            <button class="button button--chromeless u-baseColor--buttonNormal" data-action="scroll-to-responses">40</button>
           </div>
           <div class="buttonSet-inner u-xs-hide">
            <button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" title="Share on Twitter" aria-label="Share on Twitter" data-action="share-on-twitter" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--twitter svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M21.967 11.8c.018 5.93-4.607 11.18-11.177 11.18-2.172 0-4.25-.62-6.047-1.76l-.268.422-.038.5.186.013.168.012c.3.02.44.032.6.046 2.06-.026 3.95-.686 5.49-1.86l1.12-.85-1.4-.048c-1.57-.055-2.92-1.08-3.36-2.51l-.48.146-.05.5c.22.03.48.05.75.08.48-.02.87-.07 1.25-.15l2.33-.49-2.32-.49c-1.68-.35-2.91-1.83-2.91-3.55 0-.05 0-.01-.01.03l-.49-.1-.25.44c.63.36 1.35.57 2.07.58l1.7.04L7.4 13c-.978-.662-1.59-1.79-1.618-3.047a4.08 4.08 0 0 1 .524-1.8l-.825.07a12.188 12.188 0 0 0 8.81 4.515l.59.033-.06-.59v-.02c-.05-.43-.06-.63-.06-.87a3.617 3.617 0 0 1 6.27-2.45l.2.21.28-.06c1.01-.22 1.94-.59 2.73-1.09l-.75-.56c-.1.36-.04.89.12 1.36.23.68.58 1.13 1.17.85l-.21-.45-.42-.27c-.52.8-1.17 1.48-1.92 2L22 11l.016.28c.013.2.014.35 0 .52v.04zm.998.038c.018-.22.017-.417 0-.66l-.498.034.284.41a8.183 8.183 0 0 0 2.2-2.267l.97-1.48-1.6.755c.17-.08.3-.02.34.03a.914.914 0 0 1-.13-.292c-.1-.297-.13-.64-.1-.766l.36-1.254-1.1.695c-.69.438-1.51.764-2.41.963l.48.15a4.574 4.574 0 0 0-3.38-1.484 4.616 4.616 0 0 0-4.61 4.613c0 .29.02.51.08.984l.01.02.5-.06.03-.5c-3.17-.18-6.1-1.7-8.08-4.15l-.48-.56-.36.64c-.39.69-.62 1.48-.65 2.28.04 1.61.81 3.04 2.06 3.88l.3-.92c-.55-.02-1.11-.17-1.6-.45l-.59-.34-.14.67c-.02.08-.02.16 0 .24-.01 2.12 1.55 4.01 3.69 4.46l.1-.49-.1-.49c-.33.07-.67.12-1.03.14-.18-.02-.43-.05-.64-.07l-.76-.09.23.73c.57 1.84 2.29 3.14 4.28 3.21l-.28-.89a8.252 8.252 0 0 1-4.85 1.66c-.12-.01-.26-.02-.56-.05l-.17-.01-.18-.01L2.53 21l1.694 1.07a12.233 12.233 0 0 0 6.58 1.917c7.156 0 12.2-5.73 12.18-12.18l-.002.04z" />
              </svg></span></button>
           </div>
           <div class="buttonSet-inner u-xs-hide">
            <button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" title="Share on Facebook" aria-label="Share on Facebook" data-action="share-on-facebook" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--facebook svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M16.39 23.61v-5.808h1.846a.55.55 0 0 0 .546-.48l.36-2.797a.551.551 0 0 0-.547-.62H16.39V12.67c0-.67.12-.813.828-.813h1.474a.55.55 0 0 0 .55-.55V8.803a.55.55 0 0 0-.477-.545c-.436-.06-1.36-.116-2.22-.116-2.5 0-4.13 1.62-4.13 4.248v1.513H10.56a.551.551 0 0 0-.55.55v2.797c0 .304.248.55.55.55h1.855v5.76c-4.172-.96-7.215-4.7-7.215-9.1 0-5.17 4.17-9.36 9.31-9.36 5.14 0 9.31 4.19 9.31 9.36 0 4.48-3.155 8.27-7.43 9.15M14.51 4C8.76 4 4.1 8.684 4.1 14.46c0 5.162 3.75 9.523 8.778 10.32a.55.55 0 0 0 .637-.543v-6.985a.551.551 0 0 0-.55-.55H11.11v-1.697h1.855a.55.55 0 0 0 .55-.55v-2.063c0-2.02 1.136-3.148 3.03-3.148.567 0 1.156.027 1.597.06v1.453h-.924c-1.363 0-1.93.675-1.93 1.912v1.78c0 .3.247.55.55.55h2.132l-.218 1.69H15.84c-.305 0-.55.24-.55.55v7.02c0 .33.293.59.623.54 5.135-.7 9.007-5.11 9.007-10.36C24.92 8.68 20.26 4 14.51 4" />
              </svg></span></button>
           </div>
           <div class="buttonSet-inner u-xs-show">
            <button class="button button--large button--dark button--chromeless u-baseColor--buttonDark button--withIcon button--withSvgIcon js-shareStoryButton" title="Share this story on Twitter or Facebook" aria-label="Share this story on Twitter or Facebook" data-action="show-share-popover" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--share svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M20.385 8H19a.5.5 0 1 0 .011 1h1.39c.43 0 .84.168 1.14.473.31.305.48.71.48 1.142v10.77c0 .43-.17.837-.47 1.142-.3.305-.71.473-1.14.473H8.62c-.43 0-.84-.168-1.144-.473a1.603 1.603 0 0 1-.473-1.142v-10.77c0-.43.17-.837.48-1.142A1.599 1.599 0 0 1 8.62 9H10a.502.502 0 0 0 0-1H8.615c-.67 0-1.338.255-1.85.766-.51.51-.765 1.18-.765 1.85v10.77c0 .668.255 1.337.766 1.848.51.51 1.18.766 1.85.766h11.77c.668 0 1.337-.255 1.848-.766.51-.51.766-1.18.766-1.85v-10.77c0-.668-.255-1.337-.766-1.848A2.61 2.61 0 0 0 20.384 8zm-8.67-2.508L14 3.207v8.362c0 .27.224.5.5.5s.5-.23.5-.5V3.2l2.285 2.285a.49.49 0 0 0 .704-.001.511.511 0 0 0 0-.708l-3.14-3.14a.504.504 0 0 0-.71 0L11 4.776a.501.501 0 0 0 .71.706" fill-rule="evenodd" />
              </svg></span></button>
           </div>
          </div>
         </div>
        </div>
        <div class="js-postPromotionWrapper postPromotionWrapper" data-location-id="footer_above_post_attribution"></div>
        <div class="u-maxWidth740 u-paddingTop20 u-marginTop10 u-borderTopLightest container u-paddingBottom20 u-xs-paddingBottom10 js-postAttributionFooterContainer">
         <div class="row js-postFooterInfo">
          <div class="col u-size6of12 u-xs-size12of12">
           <li class="u-block u-paddingBottom18 js-cardUser">
            <div class="u-marginLeft20 u-floatRight">
             <span class="followState js-followState" data-user-id="c359511de780"><button class="button button--small u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton" data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.com/javascript-scene/elements-of-javascript-style-caa8821cb99f" data-action-source="footer_card"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton" data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/c359511de780" data-action-source="footer_card-c359511de780-------------------------follow_footer"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span>
            </div>
            <div class="u-tableCell ">
             <a class="link avatar u-baseColor--link" href="https://medium.com/@_ericelliott?source=footer_card" title="Go to the profile of Eric Elliott" aria-label="Go to the profile of Eric Elliott" data-action-source="footer_card" data-user-id="c359511de780" dir="auto"><img src="https://cdn-images-1.medium.com/fit/c/120/120/0*WgY9B-Lm4DnCEHlO.jpeg" class="avatar-image avatar-image--small" alt="Go to the profile of Eric Elliott"></a>
            </div>
            <div class="u-tableCell u-verticalAlignMiddle u-breakWord u-paddingLeft15">
             <h3 class="u-fontSize18 u-lineHeightTighter u-marginBottom4"><a class="link link--primary u-accentColor--hoverTextNormal" href="https://medium.com/@_ericelliott" property="cc:attributionName" title="Go to the profile of Eric Elliott" aria-label="Go to the profile of Eric Elliott" rel="author cc:attributionUrl" data-user-id="c359511de780" dir="auto">Eric Elliott</a></h3>
             <p class="u-fontSize14 u-lineHeightBaseSans u-textColorDark u-marginBottom4">Compassionate entrepreneur on a mission to end homelessness. #jshomes Javascript, tech education, electronic music, photography, film, viral apps.</p>
            </div></li>
          </div>
          <div class="col u-size6of12 u-xs-size12of12 u-xs-marginTop30">
           <li class="u-block u-paddingBottom18 js-cardCollection">
            <div class="u-marginLeft20 u-floatRight">
             <button class="button button--primary button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal js-relationshipButton" data-action="sign-up-prompt" data-sign-in-action="toggle-follow-collection" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/collection/javascript-scene" data-action-source="----c0aeac5284ad----------------------follow_footer" data-collection-id="c0aeac5284ad"><span class="button-label  js-buttonLabel">Follow</span></button>
            </div>
            <div class="u-tableCell ">
             <a class="link avatar avatar--roundedRectangle u-baseColor--link" href="https://medium.com/javascript-scene?source=footer_card" title="Go to JavaScript Scene" aria-label="Go to JavaScript Scene" data-action-source="footer_card"><img src="https://cdn-images-1.medium.com/fit/c/120/120/1*fegbK6HDD8crwrwARuMhaQ.png" class="avatar-image u-size60x60" alt="JavaScript Scene"></a>
            </div>
            <div class="u-tableCell u-verticalAlignMiddle u-breakWord u-paddingLeft15">
             <h3 class="u-fontSize18 u-lineHeightTighter u-marginBottom4"><a class="link link--primary u-accentColor--hoverTextNormal" href="https://medium.com/javascript-scene?source=footer_card" rel="collection" data-action-source="footer_card">JavaScript Scene</a></h3>
             <p class="u-fontSize14 u-lineHeightBaseSans u-textColorDark u-marginBottom4">To submit, DM your proposal to <a href="https://medium.com/@JS_Cheerleader" title="Medium profile for @JS_Cheerleader">@JS_Cheerleader</a> on Twitter</p>
             <div class="buttonSet"></div>
            </div></li>
          </div>
         </div>
        </div>
        <div class="js-postFooterPlacements"></div>
        <div class="u-padding0 u-clearfix u-backgroundGrayLightest u-print-hide supplementalPostContent js-responsesWrapper"></div>
        <div class="supplementalPostContent js-heroPromo"></div>
       </footer>
      </article>
     </main>
     <div class="u-marginAuto u-maxWidth1000">
      <div class="js-postShareWidget u-foreground u-sm-hide u-transition--fadeOut300 u-fixed">
       <ul>
        <li class="u-textAlignCenter">
         <div class="multirecommend js-actionMultirecommend u-flexColumn u-marginBottom10 u-width60" data-post-id="caa8821cb99f" data-is-icon-29px="true" data-is-vertical="true" data-is-circle="true" data-is-compressed="true" data-has-recommend-list="true" data-source="post_share_widget-----caa8821cb99f---------------------clap_sidebar">
          <div class="u-relative u-foreground">
           <button class="button button--large button--circle button--withChrome u-baseColor--buttonNormal button--withIcon button--withSvgIcon clapButton js-actionMultirecommendButton clapButton--largePill u-relative u-foreground u-width60 u-height60 u-accentColor--textNormal u-accentColor--buttonNormal" data-action="sign-up-prompt" data-sign-in-action="multivote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/caa8821cb99f" data-action-source="post_share_widget-----caa8821cb99f---------------------clap_sidebar" aria-label="Clap"><span class="button-defaultState"><span class="svgIcon svgIcon--clap svgIcon--33px u-relative u-topNegative2 u-xs-top0">
              <svg class="svgIcon-use" width="33" height="33" viewbox="0 0 33 33">
               <path d="M28.86 17.342l-3.64-6.402c-.292-.433-.712-.729-1.163-.8a1.124 1.124 0 0 0-.889.213c-.63.488-.742 1.181-.33 2.061l1.222 2.587 1.4 2.46c2.234 4.085 1.511 8.007-2.145 11.663-.26.26-.526.49-.797.707 1.42-.084 2.881-.683 4.292-2.094 3.822-3.823 3.565-7.876 2.05-10.395zm-6.252 11.075c3.352-3.35 3.998-6.775 1.978-10.469l-3.378-5.945c-.292-.432-.712-.728-1.163-.8a1.122 1.122 0 0 0-.89.213c-.63.49-.742 1.182-.33 2.061l1.72 3.638a.502.502 0 0 1-.806.568l-8.91-8.91a1.335 1.335 0 0 0-1.887 1.886l5.292 5.292a.5.5 0 0 1-.707.707l-5.292-5.292-1.492-1.492c-.503-.503-1.382-.505-1.887 0a1.337 1.337 0 0 0 0 1.886l1.493 1.492 5.292 5.292a.499.499 0 0 1-.353.854.5.5 0 0 1-.354-.147L5.642 13.96a1.338 1.338 0 0 0-1.887 0 1.338 1.338 0 0 0 0 1.887l2.23 2.228 3.322 3.324a.499.499 0 0 1-.353.853.502.502 0 0 1-.354-.146l-3.323-3.324a1.333 1.333 0 0 0-1.886 0 1.325 1.325 0 0 0-.39.943c0 .356.138.691.39.943l6.396 6.397c3.528 3.53 8.86 5.313 12.821 1.353zM12.73 9.26l5.68 5.68-.49-1.037c-.518-1.107-.426-2.13.224-2.89l-3.303-3.304a1.337 1.337 0 0 0-1.886 0 1.326 1.326 0 0 0-.39.944c0 .217.067.42.165.607zm14.787 19.184c-1.599 1.6-3.417 2.392-5.353 2.392-.349 0-.7-.03-1.058-.082a7.922 7.922 0 0 1-3.667.887c-3.049 0-6.115-1.626-8.359-3.87l-6.396-6.397A2.315 2.315 0 0 1 2 19.724a2.327 2.327 0 0 1 1.923-2.296l-.875-.875a2.339 2.339 0 0 1 0-3.3 2.33 2.33 0 0 1 1.24-.647l-.139-.139c-.91-.91-.91-2.39 0-3.3.884-.884 2.421-.882 3.301 0l.138.14a2.335 2.335 0 0 1 3.948-1.24l.093.092c.091-.423.291-.828.62-1.157a2.336 2.336 0 0 1 3.3 0l3.384 3.386a2.167 2.167 0 0 1 1.271-.173c.534.086 1.03.354 1.441.765.11-.549.415-1.034.911-1.418a2.12 2.12 0 0 1 1.661-.41c.727.117 1.385.565 1.853 1.262l3.652 6.423c1.704 2.832 2.025 7.377-2.205 11.607zM13.217.484l-1.917.882 2.37 2.837-.454-3.719zm8.487.877l-1.928-.86-.44 3.697 2.368-2.837zM16.5 3.293L15.478-.005h2.044L16.5 3.293z" fill-rule="evenodd" />
              </svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--clapFilled svgIcon--33px u-relative u-topNegative2 u-xs-top0">
              <svg class="svgIcon-use" width="33" height="33" viewbox="0 0 33 33">
               <g fill-rule="evenodd">
                <path d="M29.58 17.1l-3.854-6.78c-.365-.543-.876-.899-1.431-.989a1.491 1.491 0 0 0-1.16.281c-.42.327-.65.736-.7 1.207v.001l3.623 6.367c2.46 4.498 1.67 8.802-2.333 12.807-.265.265-.536.505-.81.728 1.973-.222 3.474-1.286 4.45-2.263 4.166-4.165 3.875-8.6 2.215-11.36zm-4.831.82l-3.581-6.3c-.296-.439-.725-.742-1.183-.815a1.105 1.105 0 0 0-.89.213c-.647.502-.755 1.188-.33 2.098l1.825 3.858a.601.601 0 0 1-.197.747.596.596 0 0 1-.77-.067L10.178 8.21c-.508-.506-1.393-.506-1.901 0a1.335 1.335 0 0 0-.393.95c0 .36.139.698.393.95v.001l5.61 5.61a.599.599 0 1 1-.848.847l-5.606-5.606c-.001 0-.002 0-.003-.002L5.848 9.375a1.349 1.349 0 0 0-1.902 0 1.348 1.348 0 0 0 0 1.901l1.582 1.582 5.61 5.61a.6.6 0 0 1-.848.848l-5.61-5.61c-.51-.508-1.393-.508-1.9 0a1.332 1.332 0 0 0-.394.95c0 .36.139.697.393.952l2.363 2.362c.002.001.002.002.002.003l3.52 3.52a.6.6 0 0 1-.848.847l-3.522-3.523h-.001a1.336 1.336 0 0 0-.95-.393 1.345 1.345 0 0 0-.949 2.295l6.779 6.78c3.715 3.713 9.327 5.598 13.49 1.434 3.527-3.528 4.21-7.13 2.086-11.015zM11.817 7.727c.06-.328.213-.64.466-.893.64-.64 1.755-.64 2.396 0l3.232 3.232c-.82.783-1.09 1.833-.764 2.992l-5.33-5.33z" />
                <path d="M13.285.48l-1.916.881 2.37 2.837z" />
                <path d="M21.719 1.361L19.79.501l-.44 3.697z" />
                <path d="M16.502 3.298L15.481 0h2.043z" />
               </g>
              </svg></span></span></button>
           <div class="clapUndo u-width60 u-round u-height32 u-absolute u-borderBox u-paddingRight5 u-transition--transform200Spring u-background--brandSageLighter js-clapUndo" style="top: 14px; padding: 2px;">
            <button class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-floatRight" data-action="multivote-undo" data-action-value="caa8821cb99f"><span class="svgIcon svgIcon--removeThin svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M20.13 8.11l-5.61 5.61-5.609-5.61-.801.801 5.61 5.61-5.61 5.61.801.8 5.61-5.609 5.61 5.61.8-.801-5.609-5.61 5.61-5.61" fill-rule="evenodd" />
              </svg></span></button>
           </div>
          </div>
          <span class="u-textAlignCenter u-relative u-background js-actionMultirecommendCount u-flexOrderNegative1 u-height20 u-marginBottom7"><button class="button button--chromeless u-baseColor--buttonNormal js-multirecommendCountButton u-block u-marginAuto" data-action="show-recommends" data-action-value="caa8821cb99f">1.3K</button></span>
         </div></li>
        <li class="u-textAlignCenter"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" title="Share on Twitter" aria-label="Share on Twitter" data-action="share-on-twitter" data-action-source="post_share_widget"><span class="svgIcon svgIcon--twitter svgIcon--29px">
           <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
            <path d="M21.967 11.8c.018 5.93-4.607 11.18-11.177 11.18-2.172 0-4.25-.62-6.047-1.76l-.268.422-.038.5.186.013.168.012c.3.02.44.032.6.046 2.06-.026 3.95-.686 5.49-1.86l1.12-.85-1.4-.048c-1.57-.055-2.92-1.08-3.36-2.51l-.48.146-.05.5c.22.03.48.05.75.08.48-.02.87-.07 1.25-.15l2.33-.49-2.32-.49c-1.68-.35-2.91-1.83-2.91-3.55 0-.05 0-.01-.01.03l-.49-.1-.25.44c.63.36 1.35.57 2.07.58l1.7.04L7.4 13c-.978-.662-1.59-1.79-1.618-3.047a4.08 4.08 0 0 1 .524-1.8l-.825.07a12.188 12.188 0 0 0 8.81 4.515l.59.033-.06-.59v-.02c-.05-.43-.06-.63-.06-.87a3.617 3.617 0 0 1 6.27-2.45l.2.21.28-.06c1.01-.22 1.94-.59 2.73-1.09l-.75-.56c-.1.36-.04.89.12 1.36.23.68.58 1.13 1.17.85l-.21-.45-.42-.27c-.52.8-1.17 1.48-1.92 2L22 11l.016.28c.013.2.014.35 0 .52v.04zm.998.038c.018-.22.017-.417 0-.66l-.498.034.284.41a8.183 8.183 0 0 0 2.2-2.267l.97-1.48-1.6.755c.17-.08.3-.02.34.03a.914.914 0 0 1-.13-.292c-.1-.297-.13-.64-.1-.766l.36-1.254-1.1.695c-.69.438-1.51.764-2.41.963l.48.15a4.574 4.574 0 0 0-3.38-1.484 4.616 4.616 0 0 0-4.61 4.613c0 .29.02.51.08.984l.01.02.5-.06.03-.5c-3.17-.18-6.1-1.7-8.08-4.15l-.48-.56-.36.64c-.39.69-.62 1.48-.65 2.28.04 1.61.81 3.04 2.06 3.88l.3-.92c-.55-.02-1.11-.17-1.6-.45l-.59-.34-.14.67c-.02.08-.02.16 0 .24-.01 2.12 1.55 4.01 3.69 4.46l.1-.49-.1-.49c-.33.07-.67.12-1.03.14-.18-.02-.43-.05-.64-.07l-.76-.09.23.73c.57 1.84 2.29 3.14 4.28 3.21l-.28-.89a8.252 8.252 0 0 1-4.85 1.66c-.12-.01-.26-.02-.56-.05l-.17-.01-.18-.01L2.53 21l1.694 1.07a12.233 12.233 0 0 0 6.58 1.917c7.156 0 12.2-5.73 12.18-12.18l-.002.04z" />
           </svg></span></button></li>
        <li class="u-textAlignCenter"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" title="Share on Facebook" aria-label="Share on Facebook" data-action="share-on-facebook" data-action-source="post_share_widget"><span class="svgIcon svgIcon--facebook svgIcon--29px">
           <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
            <path d="M16.39 23.61v-5.808h1.846a.55.55 0 0 0 .546-.48l.36-2.797a.551.551 0 0 0-.547-.62H16.39V12.67c0-.67.12-.813.828-.813h1.474a.55.55 0 0 0 .55-.55V8.803a.55.55 0 0 0-.477-.545c-.436-.06-1.36-.116-2.22-.116-2.5 0-4.13 1.62-4.13 4.248v1.513H10.56a.551.551 0 0 0-.55.55v2.797c0 .304.248.55.55.55h1.855v5.76c-4.172-.96-7.215-4.7-7.215-9.1 0-5.17 4.17-9.36 9.31-9.36 5.14 0 9.31 4.19 9.31 9.36 0 4.48-3.155 8.27-7.43 9.15M14.51 4C8.76 4 4.1 8.684 4.1 14.46c0 5.162 3.75 9.523 8.778 10.32a.55.55 0 0 0 .637-.543v-6.985a.551.551 0 0 0-.55-.55H11.11v-1.697h1.855a.55.55 0 0 0 .55-.55v-2.063c0-2.02 1.136-3.148 3.03-3.148.567 0 1.156.027 1.597.06v1.453h-.924c-1.363 0-1.93.675-1.93 1.912v1.78c0 .3.247.55.55.55h2.132l-.218 1.69H15.84c-.305 0-.55.24-.55.55v7.02c0 .33.293.59.623.54 5.135-.7 9.007-5.11 9.007-10.36C24.92 8.68 20.26 4 14.51 4" />
           </svg></span></button></li>
        <li class="u-textAlignCenter"><button class="button button--large button--dark button--chromeless is-touchIconFadeInPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon button--bookmark js-bookmarkButton" title="Bookmark this story to read later" aria-label="Bookmark this story to read later" data-action="sign-up-prompt" data-sign-in-action="add-to-bookmarks" data-requires-token="true" data-redirect="https://medium.com/_/bookmark/p/caa8821cb99f" data-action-source="post_share_widget-----caa8821cb99f---------------------bookmark_sidebar"><span class="button-defaultState"><span class="svgIcon svgIcon--bookmark svgIcon--29px">
            <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
             <path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4zM21 23l-5.91-3.955-.148-.107a.751.751 0 0 0-.884 0l-.147.107L8 23V6.615C8 5.725 8.725 5 9.615 5h9.77C20.275 5 21 5.725 21 6.615V23z" fill-rule="evenodd" />
            </svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--bookmarkFilled svgIcon--29px">
            <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
             <path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4z" fill-rule="evenodd" />
            </svg></span></span></button></li>
       </ul>
      </div>
     </div>
     <div class="u-fixed u-bottom0 u-sizeFullWidth u-backgroundWhite u-boxShadowTop u-borderBox u-paddingTop10 u-paddingBottom10 u-zIndexMetabar u-xs-paddingLeft10 u-xs-paddingRight10 js-stickyFooter">
      <div class="u-maxWidth700 u-marginAuto u-flexCenter">
       <div class="u-fontSize16 u-flex1 u-flexCenter">
        <div class="u-flex0 u-inlineBlock u-paddingRight20 u-xs-paddingRight10">
         <a class="link avatar avatar--roundedRectangle u-baseColor--link" href="https://medium.com/javascript-scene" title="Go to JavaScript Scene" aria-label="Go to JavaScript Scene"><img src="https://cdn-images-1.medium.com/fit/c/80/80/1*fegbK6HDD8crwrwARuMhaQ.png" class="avatar-image avatar-image--smaller" alt="JavaScript Scene"></a>
        </div>
        <div class="u-flex1 u-inlineBlock">
         <div class="u-xs-hide">
          Never miss a story from
          <strong> JavaScript Scene</strong>, when you sign up for Medium. 
          <a class="link link--accent u-accentColor--textNormal u-accentColor--textDarken u-baseColor--link" href="https://medium.com/@Medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg" data-action-source="sticky_footer">Learn more</a>
         </div>
         <div class="u-xs-show">
          Never miss a story from
          <strong> JavaScript Scene</strong>
         </div>
        </div>
       </div>
       <div class="u-marginLeft50 u-xs-marginAuto">
        <button class="button button--primary button--dark is-active u-noUserSelect button--withChrome u-accentColor--buttonDark u-uiTextSemibold u-textUppercase u-fontSize12 button--followCollection js-followCollectionButton" data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-collection" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/collection/javascript-scene" data-action-source="sticky_footer----c0aeac5284ad----------------------follow_metabar"><span class="button-label  button-defaultState js-buttonLabel">Get updates</span><span class="button-label button-activeState">Get updates</span></button>
       </div>
      </div>
     </div>
     <style class="js-collectionStyle">
.u-accentColor--borderLight {border-color: #02B875 !important;}
.u-accentColor--borderNormal {border-color: #02B875 !important;}
.u-accentColor--borderDark {border-color: #1C9963 !important;}
.u-accentColor--iconLight .svgIcon,.u-accentColor--iconLight.svgIcon {fill: #02B875 !important;}
.u-accentColor--iconNormal .svgIcon,.u-accentColor--iconNormal.svgIcon {fill: #02B875 !important;}
.u-accentColor--iconDark .svgIcon,.u-accentColor--iconDark.svgIcon {fill: #1C9963 !important;}
.u-accentColor--textNormal {color: #1C9963 !important;}
.u-accentColor--hoverTextNormal:hover {color: #1C9963 !important;}
.u-accentColor--textNormal.u-accentColor--textDarken:hover {color: #1C9963 !important;}
.u-accentColor--textDark {color: #1C9963 !important;}
.u-accentColor--backgroundLight {background-color: #02B875 !important;}
.u-accentColor--backgroundNormal {background-color: #02B875 !important;}
.u-accentColor--backgroundDark {background-color: #1C9963 !important;}
.u-accentColor--buttonDark {border-color: #1C9963 !important; color: #1C9963 !important;}
.u-accentColor--buttonDark:hover {border-color: #1C9963 !important;}
.u-accentColor--buttonDark .icon:before,.u-accentColor--buttonDark .svgIcon{color: #1C9963 !important; fill: #1C9963 !important;}
.u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: #02B875 !important; color: #1C9963 !important;}
.u-accentColor--buttonNormal:hover {border-color: #1C9963 !important;}
.u-accentColor--buttonNormal .icon:before,.u-accentColor--buttonNormal .svgIcon{color: #02B875 !important; fill: #02B875 !important;}
.u-accentColor--buttonNormal.button--filled .icon:before,.u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-accentColor--buttonDark.button--filled,.u-accentColor--buttonDark.button--withChrome.is-active,.u-accentColor--fillWhenActive.is-active {background-color: #1C9963 !important; border-color: #1C9963 !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: #02B875 !important; border-color: #02B875 !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.postArticle.is-withAccentColors .markup--user,.postArticle.is-withAccentColors .markup--query {color: #1C9963 !important;}
.u-accentColor--highlightFaint {background-color: rgba(233, 253, 240, 1) !important;}
.u-accentColor--highlightStrong.is-active .svgIcon {fill: rgba(125, 255, 179, 1) !important;}
.postArticle.is-withAccentColors .markup--quote.is-other {background-color: rgba(233, 253, 240, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-other {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(233, 253, 240, 1), rgba(233, 253, 240, 1));}
.postArticle.is-withAccentColors .markup--quote.is-me {background-color: rgba(173, 255, 207, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-me {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(173, 255, 207, 1), rgba(173, 255, 207, 1));}
.postArticle.is-withAccentColors .markup--quote.is-targeted {background-color: rgba(125, 255, 179, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-targeted {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(125, 255, 179, 1), rgba(125, 255, 179, 1));}
.postArticle.is-withAccentColors .markup--quote.is-selected {background-color: rgba(125, 255, 179, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-selected {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(125, 255, 179, 1), rgba(125, 255, 179, 1));}
.postArticle.is-withAccentColors .markup--highlight {background-color: rgba(125, 255, 179, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--highlight {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(125, 255, 179, 1), rgba(125, 255, 179, 1));}.u-baseColor--iconNormal.avatar-halo {fill: rgba(0, 0, 0, 0.4980392156862745) !important;}</style>
     <style class="js-collectionStyleConstant">.u-imageBgColor {background-color: rgba(0, 0, 0, 0.24705882352941178);}
.u-imageSpectrum .u-baseColor--borderLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .u-baseColor--borderNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-baseColor--borderDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--iconLight .svgIcon,.u-imageSpectrum .u-baseColor--iconLight.svgIcon {fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-baseColor--iconNormal .svgIcon,.u-imageSpectrum .u-baseColor--iconNormal.svgIcon {fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--iconDark .svgIcon,.u-imageSpectrum .u-baseColor--iconDark.svgIcon {fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--textNormal {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--textDark {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--textDarker {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--backgroundLight {background-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-baseColor--backgroundNormal {background-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--backgroundDark {background-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important; color: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-baseColor--buttonLight:hover {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .u-baseColor--buttonLight .icon:before,.u-imageSpectrum .u-baseColor--buttonLight .svgIcon {color: rgba(255, 255, 255, 0.8) !important; fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-baseColor--buttonDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonDark:hover {border-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonDark .icon:before,.u-imageSpectrum .u-baseColor--buttonDark .svgIcon {color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important; color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal:hover {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal .icon:before,.u-imageSpectrum .u-baseColor--buttonNormal .svgIcon {color: rgba(255, 255, 255, 0.9490196078431372) !important; fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--buttonDark.button--filled,.u-imageSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: rgba(255, 255, 255, 1) !important; border-color: rgba(255, 255, 255, 1) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal.button--filled,.u-imageSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: rgba(255, 255, 255, 0.9490196078431372) !important; border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-baseColor--link {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--link.link--darkenOnHover:hover {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--darken:hover,.u-imageSpectrum .u-baseColor--link.link--darken:focus,.u-imageSpectrum .u-baseColor--link.link--darken:active {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--dark {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:active {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--darker {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: rgba(255, 255, 255, 0.8);}
.u-imageSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: rgba(255, 255, 255, 0.8);}
.u-imageSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: rgba(255, 255, 255, 0.8);}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: rgba(255, 255, 255, 0.4) !important;}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: rgba(255, 255, 255, 0.4980392156862745) !important;}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .svgIcon--logoWordmark {stroke: none !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .svgIcon--logoMonogram {stroke: none !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--borderLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .u-accentColor--borderNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-accentColor--borderDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--iconLight .svgIcon,.u-imageSpectrum .u-accentColor--iconLight.svgIcon {fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-accentColor--iconNormal .svgIcon,.u-imageSpectrum .u-accentColor--iconNormal.svgIcon {fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--iconDark .svgIcon,.u-imageSpectrum .u-accentColor--iconDark.svgIcon {fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--textNormal {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--hoverTextNormal:hover {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--textDark {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--backgroundLight {background-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-accentColor--backgroundNormal {background-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--backgroundDark {background-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonDark:hover {border-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonDark .icon:before,.u-imageSpectrum .u-accentColor--buttonDark .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: rgba(255, 255, 255, 0.8980392156862745) !important; color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal:hover {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal .icon:before,.u-imageSpectrum .u-accentColor--buttonNormal .svgIcon{color: rgba(255, 255, 255, 0.9490196078431372) !important; fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-imageSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-accentColor--buttonDark.button--filled,.u-imageSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-imageSpectrum .u-accentColor--fillWhenActive.is-active {background-color: rgba(255, 255, 255, 1) !important; border-color: rgba(255, 255, 255, 1) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-imageSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: rgba(255, 255, 255, 0.9490196078431372) !important; border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .postArticle.is-withAccentColors .markup--user,.u-imageSpectrum .postArticle.is-withAccentColors .markup--query {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--highlightFaint {background-color: rgba(255, 255, 255, 0.2) !important;}
.u-imageSpectrum .u-accentColor--highlightStrong.is-active .svgIcon {fill: rgba(255, 255, 255, 0.6) !important;}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-other {background-color: rgba(255, 255, 255, 0.2) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-other {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-me {background-color: rgba(255, 255, 255, 0.4) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-me {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.4));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-targeted {background-color: rgba(255, 255, 255, 0.6) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-targeted {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-selected {background-color: rgba(255, 255, 255, 0.6) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-selected {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--highlight {background-color: rgba(255, 255, 255, 0.6) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--highlight {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}.u-resetSpectrum .u-tintBgColor {background-color: rgba(255, 255, 255, 1) !important;}.u-resetSpectrum .u-tintBgColor .u-fadeLeft:before {background-image: linear-gradient(to right, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 100%) !important;}.u-resetSpectrum .u-tintBgColor .u-fadeRight:after {background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 100%) !important;}
.u-resetSpectrum .u-baseColor--borderLight {border-color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--borderNormal {border-color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--borderDark {border-color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--iconLight .svgIcon,.u-resetSpectrum .u-baseColor--iconLight.svgIcon {fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--iconNormal .svgIcon,.u-resetSpectrum .u-baseColor--iconNormal.svgIcon {fill: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--iconDark .svgIcon,.u-resetSpectrum .u-baseColor--iconDark.svgIcon {fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--textNormal {color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--textDark {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--textDarker {color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--backgroundLight {background-color: rgba(0, 0, 0, 0.09803921568627451) !important;}
.u-resetSpectrum .u-baseColor--backgroundNormal {background-color: rgba(0, 0, 0, 0.2) !important;}
.u-resetSpectrum .u-baseColor--backgroundDark {background-color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonLight {border-color: rgba(0, 0, 0, 0.2980392156862745) !important; color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonLight:hover {border-color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonLight .icon:before,.u-resetSpectrum .u-baseColor--buttonLight .svgIcon {color: rgba(0, 0, 0, 0.2980392156862745) !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonDark {border-color: rgba(0, 0, 0, 0.6) !important; color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--buttonDark:hover {border-color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--buttonDark .icon:before,.u-resetSpectrum .u-baseColor--buttonDark .svgIcon {color: rgba(0, 0, 0, 0.6) !important; fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal {border-color: rgba(0, 0, 0, 0.4980392156862745) !important; color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal:hover {border-color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal .icon:before,.u-resetSpectrum .u-baseColor--buttonNormal .svgIcon {color: rgba(0, 0, 0, 0.4980392156862745) !important; fill: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonDark.button--filled,.u-resetSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: rgba(0, 0, 0, 0.2980392156862745) !important; border-color: rgba(0, 0, 0, 0.2980392156862745) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal.button--filled,.u-resetSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: rgba(0, 0, 0, 0.2) !important; border-color: rgba(0, 0, 0, 0.2) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-baseColor--link {color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--link.link--darkenOnHover:hover {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--link.link--darken:hover,.u-resetSpectrum .u-baseColor--link.link--darken:focus,.u-resetSpectrum .u-baseColor--link.link--darken:active {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--link.link--dark {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:active {color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--link.link--darker {color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);}
.u-resetSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);}
.u-resetSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: rgba(0, 0, 0, 0.2) !important;}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: rgba(0, 0, 0, 0.4) !important;}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .svgIcon--logoWordmark {stroke: none !important; fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .svgIcon--logoMonogram {stroke: none !important; fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-accentColor--borderLight {border-color: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--borderNormal {border-color: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--borderDark {border-color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--iconLight .svgIcon,.u-resetSpectrum .u-accentColor--iconLight.svgIcon {fill: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--iconNormal .svgIcon,.u-resetSpectrum .u-accentColor--iconNormal.svgIcon {fill: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--iconDark .svgIcon,.u-resetSpectrum .u-accentColor--iconDark.svgIcon {fill: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--textNormal {color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--hoverTextNormal:hover {color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--textDark {color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--backgroundLight {background-color: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--backgroundNormal {background-color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--backgroundDark {background-color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark {border-color: rgba(0, 171, 107, 1) !important; color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark:hover {border-color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark .icon:before,.u-resetSpectrum .u-accentColor--buttonDark .svgIcon{color: rgba(28, 153, 99, 1) !important; fill: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: rgba(2, 184, 117, 1) !important; color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal:hover {border-color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal .icon:before,.u-resetSpectrum .u-accentColor--buttonNormal .svgIcon{color: rgba(0, 171, 107, 1) !important; fill: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-resetSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark.button--filled,.u-resetSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-resetSpectrum .u-accentColor--fillWhenActive.is-active {background-color: rgba(28, 153, 99, 1) !important; border-color: rgba(28, 153, 99, 1) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-resetSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: rgba(0, 171, 107, 1) !important; border-color: rgba(0, 171, 107, 1) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .postArticle.is-withAccentColors .markup--user,.u-resetSpectrum .postArticle.is-withAccentColors .markup--query {color: rgba(0, 171, 107, 1) !important;}</style>
    </div>
   </div>
  </div>
  <div class="loadingBar"></div>
  <script>// <![CDATA[
window["obvInit"] = function (opt_embedded) {window["obvInit"]["embedded"] = opt_embedded; window["obvInit"]["ready"] = true;}
// ]]></script>
  <script>// <![CDATA[
var GLOBALS = {"audioUrl":"https://d1fcbxp97j4nb2.cloudfront.net","baseUrl":"https://medium.com","buildLabel":"30896-984552c","currentUser":{"userId":"lo_940b0da8b70c","isVerified":false,"subscriberEmail":"","hasPastMemberships":false,"isEnrolledInHightower":false,"isEligibleForHightower":false},"currentUserHasUnverifiedEmail":false,"isAuthenticated":false,"isCurrentUserVerified":false,"mediumTwitterScreenName":"medium","miroUrl":"https://cdn-images-1.medium.com","moduleUrls":{"base":"https://cdn-static-1.medium.com/_/fp/gen-js/main-base.bundle.Oty0kW8MpxxfXYEYUCl8gw.js","common-async":"https://cdn-static-1.medium.com/_/fp/gen-js/main-common-async.bundle.Nrpddu7_2oXRI1Nm7-OoBA.js","home-screens":"https://cdn-static-1.medium.com/_/fp/gen-js/main-home-screens.bundle.Fp2Qr5Lg9DQ7xqnIXdNWjg.js","misc-screens":"https://cdn-static-1.medium.com/_/fp/gen-js/main-misc-screens.bundle.b0FeKH3_Mcj-q_sQqwLfbw.js","notes":"https://cdn-static-1.medium.com/_/fp/gen-js/main-notes.bundle.1Y2yt5HlKRYFi3yxDJ2J5A.js","payments":"https://cdn-static-1.medium.com/_/fp/gen-js/main-payments.bundle.ocZz_d_UwVkyjO_n-YN7sQ.js","posters":"https://cdn-static-1.medium.com/_/fp/gen-js/main-posters.bundle.snQNwZGKeDjwgMI3E1_vDA.js","pubs":"https://cdn-static-1.medium.com/_/fp/gen-js/main-pubs.bundle.s3L1rX3BTbilWRdgiYuFug.js","stats":"https://cdn-static-1.medium.com/_/fp/gen-js/main-stats.bundle.YYXgqq3uOhmNJ5GwyXMVkg.js"},"previewConfig":{"weightThreshold":1,"weightImageParagraph":0.51,"weightIframeParagraph":0.8,"weightTextParagraph":0.08,"weightEmptyParagraph":0,"weightP":0.003,"weightH":0.005,"weightBq":0.003,"minPTextLength":60,"truncateBoundaryChars":20,"detectTitle":true,"detectTitleLevThreshold":0.15},"productName":"Medium","supportsEdit":true,"termsUrl":"//medium.com/policy/9db0094a1e0f","textshotHost":"textshot.medium.com","transactionId":"1507032217286:c244c4745855","useragent":{"browser":"chrome","family":"chrome","os":"windows","version":45,"supportsDesktopEdit":true,"supportsInteract":true,"supportsView":true,"isMobile":false,"isTablet":false,"isNative":false,"supportsFileAPI":true,"isTier1":true,"clientVersion":"","unknownParagraphsBad":false,"clientChannel":"","supportsRealScrollEvents":true,"supportsVhUnits":true,"ruinsViewportSections":false,"supportsHtml5Video":true,"supportsMagicUnderlines":true,"isWebView":false,"isFacebookWebView":false,"supportsProgressiveMedia":true,"supportsPromotedPosts":true,"isBot":false,"isNativeIphone":false,"supportsCssVariables":false,"supportsVideoSections":false,"emojiSupportLevel":1,"supportsScrollableMetabar":true},"variants":{"allow_access":true,"allow_signup":true,"allow_test_auth":"disallow","signin_services":"twitter,facebook,google,email,google-fastidv","signup_services":"twitter,facebook,google,email,google-fastidv","android_rating_prompt_recommend_threshold":5,"google_sign_in_android":true,"enable_onboarding":true,"ios_custom_miro_url":"https://cdn-images-1.medium.com","reengagement_notification_duration":3,"enable_adsnative_integration":true,"browsable_stream_config_bucket":"curated-topics","ios_small_post_preview_truncation_length":5.5,"ios_large_post_preview_truncation_length":5.5,"disable_ios_catalog_badging":true,"enable_series_creation":true,"enable_your_series_pages":true,"enable_productionized_series":true,"enable_dedicated_series_tab_api_ios":true,"enable_clap_milestone_notifications":true,"enable_series_stats_page":true,"enable_post_import":true,"enable_sponsored_post_labelling":true,"enable_logged_in_follow_on_collection_post":true,"promoted_story_placement_locations":"POST_PAGE_FOOTER","enable_chunky_home_page":true,"retire_ranked_feed":true,"enable_export_members":true,"enable_series_card_background_creation":true,"available_membership_plans":"60e220181034","available_monthly_plan":"60e220181034","available_annual_plan":"2c754bcc2995","double_write_post_from_followed_tag_items":true,"enable_sms":true,"enable_series_in_user_profiles":true,"enable_new_logged_out_bento_operation":true,"enable_readers_landing_experiment_video":true,"is_not_medium_subscriber":true,"subs_landing_copy_experiments":"long","logged_out_homepage_promo":"content","enable_dynamic_topic_windows":true,"enable_emoji_in_editor":true,"enable_glyph":true,"glyph_font_set":"m","enable_branding":true,"enable_upsell_tracking":true,"enable_nav_upsell":true,"enable_sequence_carousel":true,"enable_multirecommends":true,"enable_updated_homepage_order":true,"enable_auto_grid_on_new_from_your_network":true,"enable_unbundled_you_might_like":true,"enable_noteworthy_promo":true,"enable_interest_graph_vtwo_topic_suggestions":true,"enable_popchunks":true,"enable_hightower":true,"enable_user_post_metering":true,"max_premium_content_per_user_under_metering":3,"enable_welcome_email_v2":true,"enable_topic_writer_onboarding":true,"enable_hightower_onboarding_blinker":true,"enable_direct_signin":true,"enable_strong_graph_chp_reorder":true,"enable_post_page_cleanup":"remove_all"},"xsrfToken":"","iosAppId":"828256236","supportEmail":"yourfriends@medium.com","fp":{"/icons/favicon.svg":"https://cdn-static-1.medium.com/_/fp/icons/favicon.KjTfUJo7yJH_fCoUzzH3cg.svg","/icons/favicon-dev-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-dev-editor.YKKRxBO8EMvIqhyCwIiJeQ.ico","/icons/favicon-hatch-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-hatch-editor.BuEyHIqlyh2s_XEk4Rl32Q.ico","/icons/favicon-medium-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-medium-editor.PiakrZWB7Yb80quUVQWM6g.ico"},"authBaseUrl":"https://medium.com","imageUploadSizeMb":25,"isAuthDomainRequest":true,"algoliaApiEndpoint":"https://MQ57UUUQZ2-dsn.algolia.net","algoliaAppId":"MQ57UUUQZ2","algoliaSearchOnlyApiKey":"394474ced050e3911ae2249ecc774921","iosAppStoreUrl":"https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8","iosAppLinkBaseUrl":"medium:","algoliaIndexPrefix":"medium_","androidPlayStoreUrl":"https://play.google.com/store/apps/details?id=com.medium.reader","googleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","androidPackage":"com.medium.reader","androidPlayStoreMarketScheme":"market://details?id=com.medium.reader","googleAuthUri":"https://accounts.google.com/o/oauth2/auth","androidScheme":"medium","layoutData":{"useDynamicScripts":false,"googleAnalyticsTrackingCode":"UA-24232453-2","jsShivUrl":"https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js","useDynamicCss":false,"faviconUrl":"https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico","faviconImageId":"1*8I-HPL0bfoIzGied-dzOvA.png","fontSets":[{"id":8,"url":"https://glyph.medium.com/css/e/sr/latin/e/ssr/latin/e/ssb/latin/m.css"},{"id":9,"url":"https://glyph.medium.com/css/mkt.css"}],"editorFaviconUrl":"https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium-editor.3Y6xpZ-0FSdWDnPM3hSBIA.ico","glyphUrl":"https://glyph.medium.com"},"authBaseUrlRev":"moc.muidem//:sptth","isDnt":false,"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","archiveUploadSizeMb":100,"paymentData":{"currencies":{"1":{"label":"US Dollar","external":"usd"}},"countries":{"1":{"label":"United States of America","external":"US"}},"accountTypes":{"1":{"label":"Individual","external":"individual"},"2":{"label":"Company","external":"company"}}},"previewConfig2":{"weightThreshold":1,"weightImageParagraph":0.05,"raiseImage":true,"enforceHeaderHierarchy":true,"isImageInsetRight":true},"isAmp":false,"iosScheme":"medium","isSwBoot":false,"lightstep":{"accessToken":"ce5be895bef60919541332990ac9fef2","carrier":"{\"ot-tracer-spanid\":\"5b1da5c973310d20\",\"ot-tracer-traceid\":\"381ef5261c07e65e\",\"ot-tracer-sampled\":\"true\"}","host":"collector-medium.lightstep.com"},"facebook":{"key":"542599432471018","namespace":"medium-com","scope":{"default":["public_profile","email","user_friends"],"connect":["public_profile","email","user_friends"],"login":["public_profile","email","user_friends"],"share":["public_profile","email","user_friends","publish_actions"]}},"mailingListArchiveUploadSizeMb":2,"availableMembershipPlans":["60e220181034"],"editorsPicksTopicId":"3985d2a191c5","popularOnMediumTopicId":"9d34e48ecf94","memberContentTopicId":"13d7efd82fb2","audioContentTopicId":"3792abbd134","brandedSequenceId":"7d337ddf1941","isDoNotAuth":false,"goldfinchUrl":"https://goldfinch.medium.com","buggle":{"url":"https://buggle.medium.com","videoUrl":"https://cdn-videos-1.medium.com","audioUrl":"https://cdn-audio-1.medium.com"}}
// ]]></script>
  <script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/gen-js/main-base.bundle.Oty0kW8MpxxfXYEYUCl8gw.js" async></script>
  <script>// <![CDATA[
window["obvInit"]({"value":{"id":"caa8821cb99f","versionId":"55f8ed938380","creatorId":"c359511de780","creator":{"userId":"c359511de780","name":"Eric Elliott","username":"_ericelliott","createdAt":1382122060445,"lastPostCreatedAt":1506666152047,"imageId":"0*WgY9B-Lm4DnCEHlO.jpeg","backgroundImageId":"","bio":"Compassionate entrepreneur on a mission to end homelessness. #jshomes Javascript, tech education, electronic music, photography, film, viral apps.","twitterScreenName":"_ericelliott","socialStats":{"userId":"c359511de780","usersFollowedCount":6906,"usersFollowedByCount":60425,"type":"SocialStats"},"social":{"userId":"lo_940b0da8b70c","targetUserId":"c359511de780","type":"Social"},"facebookAccountId":"","allowNotes":1,"type":"User"},"homeCollection":{"id":"c0aeac5284ad","name":"JavaScript Scene","slug":"javascript-scene","tags":["JAVASCRIPT","PROGRAMMING","NODE.JS"],"creatorId":"c359511de780","description":"To submit, DM your proposal to @JS_Cheerleader on Twitter","shortDescription":"To submit, DM your proposal to @JS_Cheerleader on Twitter","image":{"imageId":"1*fegbK6HDD8crwrwARuMhaQ.png","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":36616,"activeAt":1506665595828},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false,"canEnrollInHightower":false,"canLockPostsForMediumMembers":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":"","isEnrolledInHightower":false,"isEligibleForHightower":false},"logo":{"imageId":"1*k98ylK8u1sha-tSDD4UiBA.png","filter":"","backgroundSize":"","originalWidth":600,"originalHeight":72,"strategy":"resample","height":0,"width":0},"twitterUsername":"JS_Cheerleader","sections":[{"type":2,"collectionHeaderMetadata":{"title":"JavaScript Scene","description":"To submit, DM your article idea to @JS_Cheerleader","backgroundImage":{},"logoImage":{"id":"1*fegbK6HDD8crwrwARuMhaQ.png","originalWidth":1875,"originalHeight":1871,"alt":"JavaScript Scene"},"alignment":1,"layout":6}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":["92ce799a3e1f","e22de630601a","27b72500d6ea"]}},{"type":1,"postListMetadata":{"source":2,"layout":5,"number":5,"postIds":[],"sectionHeader":"Trending"}}],"favicon":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF02B875","point":0},{"color":"#FF00AB6B","point":0.1},{"color":"#FF1C9963","point":0.2},{"color":"#FF092E20","point":1}],"backgroundColor":"#FFFFFFFF"},"highlightSpectrum":{"colorPoints":[{"color":"#FFFFFFFF","point":0},{"color":"#FFE9FDF0","point":0.1},{"color":"#FFE2FAEE","point":0.2},{"color":"#FFADFFCF","point":0.6},{"color":"#FF7DFFB3","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[{"type":1,"title":"Learn JS","tagSlug":"learnjs","url":"https://medium.com/javascript-scene/tagged/learnjs","source":"tagSlug"},{"type":3,"title":"Video Lessons","url":"https://ericelliottjs.com/product/lifetime-access-pass/"}],"colorBehavior":1,"instantArticlesState":0,"acceleratedMobilePagesState":0,"ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"header":{"title":"JavaScript Scene","description":"To submit, DM your article idea to @JS_Cheerleader","backgroundImage":{},"logoImage":{"id":"1*fegbK6HDD8crwrwARuMhaQ.png","originalWidth":1875,"originalHeight":1871,"alt":"JavaScript Scene"},"alignment":1,"layout":6},"type":"Collection"},"homeCollectionId":"c0aeac5284ad","title":"Elements of JavaScript Style","detectedLanguage":"en","latestVersion":"55f8ed938380","latestPublishedVersion":"55f8ed938380","hasUnpublishedEdits":false,"latestRev":4095,"createdAt":1493011378849,"updatedAt":1506650802805,"acceptedAt":0,"firstPublishedAt":1493787267256,"latestPublishedAt":1503220304510,"vote":false,"experimentalCss":"","displayAuthor":"","content":{"subtitle":"In 1920, “The Elements of Style” by William Strunk Jr. was published, which set guidelines for English language style that have lasted the…","bodyModel":{"paragraphs":[{"name":"a97e","type":3,"text":"Elements of JavaScript Style","markups":[]},{"name":"a8d8","type":4,"text":"Out of the Blue — In?aki Bolumburu (CC BY-NC-ND 2.0)","markups":[],"layout":1,"metadata":{"id":"1*7qYONdlJuS0pkUpdav-LQQ.jpeg","originalWidth":1200,"originalHeight":800,"isFeatured":true}},{"name":"0f2d","type":1,"text":"In 1920, “The Elements of Style” by William Strunk Jr. was published, which set guidelines for English language style that have lasted the test of time. You can improve your code by applying similar standards to your code style.","markups":[{"type":3,"start":9,"end":53,"href":"https://www.amazon.com/Elements-Style-Fourth-William-Strunk/dp/020530902X/ref=as_li_ss_tl?ie=UTF8&qid=1493260884&sr=8-1&keywords=the+elements+of+style&linkCode=ll1&tag=eejs-20&linkId=f7eb0eacba0eab243899626551113119","title":"","rel":"","anchorType":0}]},{"name":"d144","type":1,"text":"The following are guidelines, not immutable laws. There may be valid reasons to deviate from them if doing so clarifies the meaning of the code, but be vigilant and self-aware. These guidelines have stood the test of time for good reason: They’re usually right. Deviate from them only for good reason — not simply on a whim or a personal style preference.","markups":[{"type":3,"start":149,"end":175,"href":"https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75","title":"","rel":"","anchorType":0}]},{"name":"adf3","type":1,"text":"Almost every guideline from the elementary principles of composition applies to source code:","markups":[{"type":1,"start":28,"end":68}]},{"name":"cc4e","type":9,"text":"Make the paragraph the unit of composition: One paragraph to each topic.","markups":[]},{"name":"5a49","type":9,"text":"Omit needless words.","markups":[]},{"name":"0166","type":9,"text":"Use active voice.","markups":[]},{"name":"f837","type":9,"text":"Avoid a succession of loose sentences.","markups":[]},{"name":"9ca8","type":9,"text":"Keep related words together.","markups":[]},{"name":"0773","type":9,"text":"Put statements in positive form.","markups":[]},{"name":"15b0","type":9,"text":"Use parallel construction on parallel concepts.","markups":[]},{"name":"cb93","type":1,"text":"We can apply nearly identical concepts to code style:","markups":[]},{"name":"8b91","type":10,"text":"Make the function the unit of composition. One job for each function.","markups":[]},{"name":"41e6","type":10,"text":"Omit needless code.","markups":[]},{"name":"1811","type":10,"text":"Use active voice.","markups":[]},{"name":"a7d0","type":10,"text":"Avoid a succession of loose statements.","markups":[]},{"name":"c612","type":10,"text":"Keep related code together.","markups":[]},{"name":"1e1f","type":10,"text":"Put statements and expressions in positive form.","markups":[]},{"name":"4867","type":10,"text":"Use parallel code for parallel concepts.","markups":[]},{"name":"711c","type":3,"text":"1. Make the function the unit of composition. One job for each function.","markups":[]},{"name":"feed","type":7,"text":"The essence of software development is composition. We build software by composing modules, functions, and data structures together.","markups":[]},{"name":"9fdf","type":7,"text":"Understanding how to write and compose functions is a fundamental skill for software developers.","markups":[]},{"name":"9ce2","type":1,"text":"Modules are simply collections of one or more functions or data structures, and data structures are how we represent program state, but nothing interesting happens until we apply a function.","markups":[]},{"name":"d0fe","type":1,"text":"In JavaScript, there are three kinds of functions:","markups":[]},{"name":"119b","type":9,"text":"Communicating functions: Functions which perform I/O.","markups":[]},{"name":"b85b","type":9,"text":"Procedural functions: A list of instructions, grouped together.","markups":[]},{"name":"e9ae","type":9,"text":"Mapping functions: Given some input, return some corresponding output.","markups":[]},{"name":"6eb9","type":1,"text":"While all useful programs need I/O, and many programs follow some procedural sequences, the majority of your functions should be mapping functions: Given some input, the function will return some corresponding output.","markups":[]},{"name":"b274","type":1,"text":"One thing for each function: If your function is for I/O, don’t mix that I/O with mapping (calculation). If your function is for mapping, don’t mix it with I/O. By definition, procedural functions violate this guideline. Procedural functions also violate another guideline: Avoid a succession of loose statements.","markups":[{"type":1,"start":0,"end":27}]},{"name":"cd4f","type":1,"text":"The ideal function is a simple, deterministic, pure function:","markups":[]},{"name":"ee24","type":9,"text":"Given the same input, always return the same output","markups":[]},{"name":"edd6","type":9,"text":"No side-effects","markups":[]},{"name":"c99d","type":1,"text":"See also, “What is a Pure Function?”","markups":[{"type":3,"start":10,"end":36,"href":"https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976","title":"","rel":"","anchorType":0}]},{"name":"a116","type":3,"text":"2. Omit needless code.","markups":[]},{"name":"0d6b","type":6,"text":"“Vigorous writing is concise. A sentence should contain no unnecessary words, a paragraph no unnecessary sentences, for the same reason that a drawing should have no unnecessary lines and a machine no unnecessary parts. This requires not that the writer make all sentences short, or avoid all detail and treat subjects only in outline, but that every word tell.” [Needless words omitted.]\n~ William Strunk, Jr., The Elements of Style","markups":[]},{"name":"e8b8","type":1,"text":"Concise code is critical in software because more code creates more surface area for bugs to hide in. Less code= fewer places for bugs to hide = fewer bugs.","markups":[{"type":2,"start":102,"end":156}]},{"name":"8327","type":1,"text":"Concise code is more legible because it has a higher signal-to-noise ratio: The reader must sift through less syntax noise to reach the meaning. Less code = less syntax noise = stronger signal for meaning transmission.","markups":[{"type":2,"start":145,"end":218}]},{"name":"0b37","type":1,"text":"To borrow a word from The Elements of Style: Concise code is more vigorous.","markups":[{"type":2,"start":66,"end":75}]},{"name":"b871","type":8,"text":"function secret (message) {\n  return function () {\n    return message;\n  }\n};","markups":[]},{"name":"d62f","type":1,"text":"Can be reduced to:","markups":[]},{"name":"e53e","type":8,"text":"const secret = msg =\x3e () =\x3e msg;","markups":[]},{"name":"c80d","type":1,"text":"This is much more readable to those familiar with concise arrow functions (introduced in 2015 with ES6). It omits unnecessary syntax: Braces, the function keyword, and the return statement.","markups":[{"type":10,"start":146,"end":154},{"type":10,"start":172,"end":178}]},{"name":"40b9","type":1,"text":"The first includes unnecessary syntax. Braces, the function keyword, and the return statement serve no purpose to those familiar with concise arrow syntax. It exists only to make the code familiar to those who are not yet fluent with ES6.","markups":[{"type":10,"start":51,"end":59},{"type":10,"start":77,"end":83}]},{"name":"9d40","type":1,"text":"ES6 has been the language standard since 2015. It’s time to get familiar.","markups":[{"type":3,"start":60,"end":72,"href":"https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75","title":"","rel":"","anchorType":0}]},{"name":"7468","type":13,"text":"Omit Needless Variables","markups":[]},{"name":"9b40","type":1,"text":"Sometimes we’re tempted to assign names to things that don’t really need to be named. The problem is that the human brain has a limited number of resources available in working memory, and each variable must be stored as a discrete quanta, occupying one of the available working memory slots.","markups":[{"type":3,"start":106,"end":183,"href":"http://www.nature.com/neuro/journal/v17/n3/fig_tab/nn.3655_F2.html","title":"","rel":"","anchorType":0}]},{"name":"228f","type":1,"text":"For this reason, experienced developers learn to eliminate variables that don’t need to exist.","markups":[]},{"name":"4b62","type":1,"text":"For example, in most situations, you should omit variables created only to name return values. The name of your function should provide adequate information about what the function will return. Consider the following:","markups":[]},{"name":"0551","type":8,"text":"const getFullName = ({firstName, lastName}) =\x3e {\n  const fullName = firstName + ' ' + lastName;\n  return fullName;\n};","markups":[]},{"name":"83bf","type":1,"text":"vs…","markups":[]},{"name":"f2c3","type":8,"text":"const getFullName = ({firstName, lastName}) =\x3e (\n  firstName + ' ' + lastName\n);","markups":[]},{"name":"b0c4","type":1,"text":"Another common way developers can reduce variables is to take advantage of function composition and point-free style.","markups":[]},{"name":"2f84","type":1,"text":"Point-free style is a way of defining functions without referencing the arguments on which the functions operate. Common ways of achieving point-free style include currying and function composition.","markups":[{"type":1,"start":0,"end":16}]},{"name":"791d","type":1,"text":"Let’s look at an example using curry:","markups":[]},{"name":"7db7","type":8,"text":"const add2 = a =\x3e b =\x3e a + b;","markups":[]},{"name":"d928","type":8,"text":"// Now we can define a point-free inc()\n// that adds 1 to any number.\nconst inc = add2(1);","markups":[]},{"name":"ffb9","type":8,"text":"inc(3); // 4","markups":[]},{"name":"b73c","type":1,"text":"Take a look at the definition of the inc() function. Notice that it doesn’t use the function keyword, or the =\x3e syntax. There’s no place to list parameters, because the function doesn’t make use of a parameter list internally. Instead, it returns a function that knows how to deal with arguments.","markups":[{"type":10,"start":37,"end":42},{"type":10,"start":84,"end":92},{"type":10,"start":109,"end":111}]},{"name":"97c5","type":1,"text":"Let’s look at another example using function composition. Function composition is the process of applying a function to the result of another function application. Whether you realize it or not, you use function composition all the time. You use it whenever you chain methods like .map() or promise.then(), for example. In it’s most basic form, it looks like this: f(g(x)). In algebra this composition is usually written f ? g (often pronounced, “f after g” or “f composed with g”).","markups":[{"type":10,"start":281,"end":287},{"type":10,"start":291,"end":305},{"type":10,"start":365,"end":372},{"type":10,"start":421,"end":426},{"type":1,"start":58,"end":78},{"type":2,"start":449,"end":454},{"type":2,"start":464,"end":477}]},{"name":"99a1","type":1,"text":"When you compose two functions together, you eliminate the need to create a variable to hold the intermediary value between the two function applications. Let’s see how function composition can clean up some code:","markups":[]},{"name":"f4b5","type":8,"text":"const g = n =\x3e n + 1;\nconst f = n =\x3e n * 2;","markups":[]},{"name":"d4ba","type":8,"text":"// With points:\nconst incThenDoublePoints = n =\x3e {\n  const incremented = g(n);\n  return f(incremented);\n};","markups":[]},{"name":"5c77","type":8,"text":"incThenDoublePoints(20); // 42","markups":[]},{"name":"cf88","type":8,"text":"// compose2 - Take two functions and return their composition\nconst compose2 = (f, g) =\x3e x =\x3e f(g(x));","markups":[]},{"name":"d241","type":8,"text":"// Point-free:\nconst incThenDoublePointFree = compose2(f, g);","markups":[]},{"name":"76cd","type":8,"text":"incThenDoublePointFree(20); // 42","markups":[]},{"name":"fd1a","type":1,"text":"You can do the same thing with any functor. A functor is anything you can map over, e.g., arrays (Array.map()) or promises (promise.then()). Let’s write another version of compose2 using map chaining for function composition:","markups":[{"type":10,"start":98,"end":109},{"type":10,"start":124,"end":138},{"type":10,"start":172,"end":180},{"type":3,"start":46,"end":53,"href":"https://medium.com/javascript-scene/functors-categories-61e031bac53f","title":"","rel":"","anchorType":0},{"type":1,"start":46,"end":53}]},{"name":"0775","type":8,"text":"const compose2 = (f, g) =\x3e x =\x3e [x].map(g).map(f).pop();","markups":[]},{"name":"294d","type":8,"text":"const incThenDoublePointFree = compose2(f, g);","markups":[]},{"name":"fa03","type":8,"text":"incThenDoublePointFree(20); // 42","markups":[]},{"name":"4967","type":1,"text":"You’re doing much the same thing every time you use promise chains.","markups":[]},{"name":"5f9a","type":1,"text":"Virtually every functional programming library has at least two versions of compose utilities: compose() which applies functions right-to-left, and pipe(), which applies functions left-to-right.","markups":[{"type":10,"start":95,"end":104},{"type":10,"start":148,"end":154}]},{"name":"3e73","type":1,"text":"Lodash calls them compose() and flow(). When I use them from Lodash, I always import it like this:","markups":[{"type":10,"start":18,"end":27},{"type":10,"start":32,"end":38}]},{"name":"4b36","type":8,"text":"import pipe from 'lodash/fp/flow';\npipe(g, f)(20); // 42","markups":[]},{"name":"99c0","type":1,"text":"However, this isn’t much more code, and it does the same thing:","markups":[]},{"name":"9ec8","type":8,"text":"const pipe = (...fns) =\x3e x =\x3e fns.reduce((acc, fn) =\x3e fn(acc), x);\npipe(g, f)(20); // 42","markups":[]},{"name":"5086","type":1,"text":"If this function composition stuff sounds alien to you, and you’re not sure how you’d use it, give this careful thought:","markups":[]},{"name":"795a","type":7,"text":"The essence of software development is composition. We build applications by composing smaller modules, functions, and data structures.","markups":[]},{"name":"dacb","type":1,"text":"From that you can conclude that understanding the tools of function and object composition are as fundamental as a home builder understanding drills and nail guns.","markups":[]},{"name":"6bd7","type":1,"text":"When you use imperative code to piece together functions with intermediary variables, that’s like composing those pieces with duct tape and crazy glue.","markups":[]},{"name":"5c5e","type":1,"text":"Remember:","markups":[]},{"name":"e4ed","type":9,"text":"If you can say the same thing with less code, without changing or obfuscating the meaning, you should.","markups":[]},{"name":"0638","type":9,"text":"If you can say the same thing with fewer variables, without changing or obfuscating the meaning, you should.","markups":[]},{"name":"0b4d","type":3,"text":"3. Use Active Voice","markups":[]},{"name":"32c9","type":6,"text":"“The active voice is usually more direct and vigorous than the passive.” ~ William Strunk, Jr., The Elements of Style","markups":[]},{"name":"fd68","type":1,"text":"Name things as directly as possible.","markups":[]},{"name":"3b35","type":9,"text":"myFunction.wasCalled() is better than myFunction.hasBeenCalled()","markups":[{"type":10,"start":0,"end":22},{"type":10,"start":38,"end":64}]},{"name":"727e","type":9,"text":"createUser() is better than User.create()","markups":[{"type":10,"start":0,"end":12},{"type":10,"start":28,"end":41}]},{"name":"7d45","type":9,"text":"notify() is better than Notifier.doNotification()","markups":[{"type":10,"start":0,"end":8},{"type":10,"start":24,"end":49}]},{"name":"8b38","type":1,"text":"Name predicates and booleans as if they are yes or no questions:","markups":[]},{"name":"429e","type":9,"text":"isActive(user) is better than getActiveStatus(user)","markups":[{"type":10,"start":0,"end":14},{"type":10,"start":30,"end":51}]},{"name":"bf72","type":9,"text":"isFirstRun = false; is better than firstRun = false;","markups":[{"type":10,"start":0,"end":19},{"type":10,"start":35,"end":52}]},{"name":"3475","type":1,"text":"Name functions using verb forms:","markups":[]},{"name":"2e6a","type":9,"text":"increment() is better than plusOne()","markups":[{"type":10,"start":0,"end":11},{"type":10,"start":27,"end":36}]},{"name":"fe78","type":9,"text":"unzip() is better than filesFromZip()","markups":[{"type":10,"start":0,"end":7},{"type":10,"start":23,"end":37}]},{"name":"ba9e","type":9,"text":"filter(fn, array) is better than matchingItemsFromArray(fn, array)","markups":[{"type":10,"start":0,"end":17},{"type":10,"start":33,"end":66}]},{"name":"f9cc","type":1,"text":"Event Handlers","markups":[{"type":1,"start":0,"end":14}]},{"name":"6dac","type":1,"text":"Event handlers and lifecycle methods are an exception to the verb rule because they’re used as qualifiers; instead of expressing what to do, they express when to do it. They should be named so that they read, “\x3cwhen to act\x3e, \x3cverb\x3e”.","markups":[{"type":2,"start":154,"end":158}]},{"name":"a2ed","type":9,"text":"element.onClick(handleClick) is better than element.click(handleClick)","markups":[{"type":10,"start":0,"end":28},{"type":10,"start":44,"end":70}]},{"name":"0c67","type":9,"text":"component.onDragStart(handleDragStart) is better than component.startDrag(handleDragStart)","markups":[{"type":10,"start":0,"end":38},{"type":10,"start":54,"end":90}]},{"name":"1c88","type":1,"text":"In the second forms, it looks like we’re trying to trigger the event, rather than respond to it.","markups":[]},{"name":"457e","type":13,"text":"Lifecycle Methods","markups":[]},{"name":"fb89","type":1,"text":"Consider the following alternatives for a component hypothetical lifecycle method which exists to call a handler function before a component updates:","markups":[]},{"name":"509d","type":9,"text":"componentWillBeUpdated(doSomething)","markups":[{"type":10,"start":0,"end":35}]},{"name":"e33c","type":9,"text":"componentWillUpdate(doSomething)","markups":[{"type":10,"start":0,"end":32}]},{"name":"1b7b","type":9,"text":"beforeUpdate(doSomething)","markups":[{"type":10,"start":0,"end":25}]},{"name":"6161","type":1,"text":"In the first example, we use passive voice (will be updated instead of will update). It is a mouthful, and not any more clear than the other alternatives.","markups":[]},{"name":"8677","type":1,"text":"The second example is much better, but the whole point of this lifecycle method is to call a handler. componentWillUpdate(handler) reads as if it will update the handler, but that’s not what we mean. We mean, “before the component updates, call the handler”. beforeComponentUpdate() expresses the intention more clearly.","markups":[{"type":10,"start":102,"end":130},{"type":10,"start":259,"end":282}]},{"name":"6e41","type":1,"text":"We can simplify even further. Since these are methods, the subject (the component) is built-in. Referring to it in the method name is redundant. Think about how it would read if you called these methods directly: component.componentWillUpdate(). That’s like saying, “Jimmy Jimmy will have steak for dinner.” You don’t need to hear the subject’s name twice.","markups":[{"type":10,"start":213,"end":244}]},{"name":"a984","type":9,"text":"component.beforeUpdate(doSomething) is better than component.beforeComponentUpdate(doSomething)","markups":[{"type":10,"start":0,"end":35},{"type":10,"start":51,"end":95}]},{"name":"0078","type":1,"text":"Functional mixins are functions that add properties and methods to an object. The functions are applied one after the other in an pipeline — like an assembly line. Each functional mixin takes the instance as an input, and tacks some stuff onto it before passing it on to the next function in the pipeline.","markups":[{"type":10,"start":196,"end":204},{"type":1,"start":0,"end":17}]},{"name":"a8a9","type":1,"text":"I like to name functional mixins using adjectives. You can often use “ing” or “able” suffixes to find useful adjectives. Examples:","markups":[]},{"name":"2dc1","type":9,"text":"const duck = composeMixins(flying, quacking);","markups":[{"type":10,"start":0,"end":45}]},{"name":"4170","type":9,"text":"const box = composeMixins(iterable, mappable);","markups":[{"type":10,"start":0,"end":46}]},{"name":"c737","type":3,"text":"4. Avoid a Succession of Loose Statements","markups":[]},{"name":"9a2b","type":6,"text":"“…a series soon becomes monotonous and tedious.”\n~ William Strunk, Jr., The Elements of Style","markups":[]},{"name":"2da7","type":1,"text":"Developers frequently string together sequences of events in a procedure: a group of loosely related statements designed to run one after the other. An excess of procedures is a recipe for spaghetti code.","markups":[]},{"name":"5b9f","type":1,"text":"Such sequences are frequently repeated by many parallel forms, each of them subtly and sometimes unexpectedly divergent. For example, a user interface component shares the same core needs with virtually all other user interface components. Its concerns can be broken up into lifecycle stages and managed by separate functions.","markups":[]},{"name":"dffe","type":1,"text":"Consider the following sequence:","markups":[]},{"name":"7ddb","type":8,"text":"const drawUserProfile = ({ userId }) =\x3e {\n  const userData = loadUserData(userId);\n  const dataToDisplay = calculateDisplayData(userData);\n  renderProfileData(dataToDisplay);\n};","markups":[]},{"name":"d031","type":1,"text":"This function is really handling three different things: loading data, calculating view state from loaded data, and rendering.","markups":[]},{"name":"5879","type":1,"text":"In most modern front-end application architectures, each of these concerns is considered separately. By separating these concerns, we can easily mix and match different functions for each concern.","markups":[]},{"name":"5ebd","type":1,"text":"For example, we could replace the renderer completely, and it would not impact the other parts of the program, e.g., React’s wealth of custom renderers: ReactNative for native iOS & Android apps, AFrame for WebVR, ReactDOM/Server for server-side rendering, etc…","markups":[]},{"name":"b03c","type":1,"text":"Another problem with this function is that you can’t simply calculate the data to be displayed and generate the markup without first loading the data. What if you’ve already loaded the data? You end up doing work that you didn’t need to do in subsequent calls.","markups":[]},{"name":"db67","type":1,"text":"Separating the concerns also makes them independently testable. I like to unit test my applications and display test results with each change as I’m writing the code. However, if we’re tying render code to data loading code, I can’t simply pass some fake data to the rendering code for testing purposes. I have to test the whole component end-to-end — a process which can be time consuming due to browser loading, asynchronous network I/O, etc…","markups":[{"type":2,"start":191,"end":202},{"type":2,"start":206,"end":223}]},{"name":"ea97","type":1,"text":"I won’t get immediate feedback from my unit tests. Separating the functions allows you to test units in isolation from each other.","markups":[]},{"name":"3aff","type":1,"text":"This example already has separate functions which we can feed to different lifecycle hooks in the application. Loading can be triggered when the component is mounted by the application. Calculating & rendering can happen in response to view state updates.","markups":[]},{"name":"e642","type":1,"text":"The result is software with responsibilities more clearly delineated: Each component can reuse the same structure and lifecycle hooks, and the software performs better; we don’t repeat work that doesn’t need to be repeated in subsequent cycles.","markups":[]},{"name":"6255","type":3,"text":"5. Keep related code together.","markups":[]},{"name":"2c13","type":1,"text":"Many frameworks and boilerplates prescribe a method of program organization where files are grouped by technical type. This is fine if you’re building a small calculator or To Do app, but for larger projects, it’s usually better to group files together by feature.","markups":[]},{"name":"6702","type":1,"text":"For example, here are two alternative file hierarchies for a To Do app by type and feature:","markups":[]},{"name":"b62e","type":1,"text":"Grouped by type:","markups":[{"type":1,"start":0,"end":16}]},{"name":"0567","type":8,"text":".\n??? components\n?   ??? todos\n?   ??? user\n??? reducers\n?   ??? todos\n?   ??? user\n??? tests\n    ??? todos\n    ??? user","markups":[]},{"name":"9f21","type":1,"text":"Grouped by feature:","markups":[{"type":1,"start":0,"end":19}]},{"name":"aa6e","type":8,"text":".\n??? todos\n?   ??? component\n?   ??? reducer\n?   ??? test\n??? user\n    ??? component\n    ??? reducer\n    ??? test","markups":[]},{"name":"40ee","type":1,"text":"When you group files together by feature, you avoid scrolling up and down in your file list to find all the files you need to edit to get a single feature working.","markups":[]},{"name":"3249","type":7,"text":"Colocate files related by feature.","markups":[]},{"name":"01e8","type":3,"text":"6. Put statements and expressions in positive form.","markups":[]},{"name":"3b88","type":6,"text":"“Make definite assertions. Avoid tame, colorless, hesitating, non-committal language. Use the word not as a means of denial or in antithesis, never as a means of evasion.”\n~ William Strunk, Jr., The Elements of Style","markups":[{"type":2,"start":99,"end":102}]},{"name":"44f5","type":9,"text":"isFlying is better than isNotFlying","markups":[{"type":10,"start":0,"end":8},{"type":10,"start":24,"end":35}]},{"name":"ff58","type":9,"text":"late is better than notOnTime","markups":[{"type":10,"start":0,"end":4},{"type":10,"start":20,"end":29}]},{"name":"5f1a","type":13,"text":"If Statements","markups":[]},{"name":"029a","type":8,"text":"if (err) return reject(err);","markups":[]},{"name":"ef43","type":8,"text":"// do something...","markups":[]},{"name":"6de5","type":1,"text":"…is better than:","markups":[]},{"name":"8de6","type":8,"text":"if (!err) {\n  // ... do something\n} else {\n  return reject(err);\n}","markups":[]},{"name":"1b74","type":13,"text":"Ternaries","markups":[]},{"name":"34ae","type":8,"text":"{\n  [Symbol.iterator]: iterator ? iterator : defaultIterator\n}","markups":[]},{"name":"ea44","type":1,"text":"…is better than:","markups":[]},{"name":"eac4","type":8,"text":"{\n  [Symbol.iterator]: (!iterator) ? defaultIterator : iterator\n}","markups":[]},{"name":"96ab","type":13,"text":"Prefer Strong Negative Statements","markups":[]},{"name":"3cb4","type":1,"text":"Sometimes we only care about a variable if it’s missing, so using a positive name would force us to negate it with the ! operator. In those cases, prefer a strong negative form. The word “not” and the ! operator create weak expressions.","markups":[{"type":10,"start":119,"end":120},{"type":10,"start":201,"end":202}]},{"name":"b7a9","type":9,"text":"if (missingValue) is better than if (!hasValue)","markups":[{"type":10,"start":0,"end":17},{"type":10,"start":33,"end":47}]},{"name":"4bf2","type":9,"text":"if (anonymous) is better than if (!user)","markups":[{"type":10,"start":0,"end":14},{"type":10,"start":30,"end":40}]},{"name":"021b","type":9,"text":"if (isEmpty(thing)) is better than if (notDefined(thing))","markups":[{"type":10,"start":0,"end":19},{"type":10,"start":35,"end":57}]},{"name":"6bde","type":13,"text":"Avoid null and undefined arguments in function calls","markups":[]},{"name":"9241","type":1,"text":"Don’t require function callers to pass undefined or null in place of an optional parameter. Prefer named options objects instead:","markups":[{"type":10,"start":39,"end":48},{"type":10,"start":52,"end":56}]},{"name":"ee9f","type":8,"text":"const createEvent = ({\n  title = 'Untitled',\n  timeStamp = Date.now(),\n  description = ''\n}) =\x3e ({ title, description, timeStamp });","markups":[]},{"name":"bedb","type":8,"text":"// later...\nconst birthdayParty = createEvent({\n  title: 'Birthday Party',\n  description: 'Best party ever!'\n});","markups":[]},{"name":"728e","type":1,"text":"…is better than:","markups":[]},{"name":"6bd9","type":8,"text":"const createEvent = (\n  title = 'Untitled',\n  timeStamp = Date.now(),\n  description = ''\n) =\x3e ({ title, description, timeStamp });","markups":[]},{"name":"fd1b","type":8,"text":"// later...\nconst birthdayParty = createEvent(\n  'Birthday Party',\n  undefined, // This was avoidable\n  'Best party ever!'  \n);","markups":[]},{"name":"f2b3","type":3,"text":"Use Parallel Code for Parallel Concepts","markups":[]},{"name":"69ea","type":6,"text":"“…parallel construction requires that expressions of similar content and function should be outwardly similar. The likeness of form enables the reader to recognize more readily the likeness of content and function.”\n~ William Strunk, Jr., The Elements of Style","markups":[]},{"name":"4b51","type":1,"text":"There are few problems in applications that have not been solved before. We end up doing the same things over and over again. When that happens, it’s an opportunity for abstraction. Identify the parts that are the same, and build an abstraction that allows you to supply only the parts that are different. This is exactly what libraries and frameworks do for us.","markups":[]},{"name":"1771","type":1,"text":"UI components are a great example. Less than a decade ago, it was common to mingle UI updates using jQuery with application logic and network I/O. Then people began to realize that we could apply MVC to web apps on the client-side, and people began to separate models from UI update logic.","markups":[]},{"name":"7e64","type":1,"text":"Eventually, web apps landed on a component model approach, which lets us declaratively model our components using things like JSX or HTML templates.","markups":[]},{"name":"ee2e","type":1,"text":"What we ended up with is a way of expressing UI update logic the same way for every component, rather than different imperative code for each one.","markups":[]},{"name":"773e","type":1,"text":"For those familiar with components, it’s pretty easy to see how each component works: There’s some declarative markup expressing the UI elements, event handlers for hooking up behaviors, and lifecycle hooks for attaching callbacks that will run when we need them to.","markups":[]},{"name":"838e","type":1,"text":"When we repeat similar pattern for similar problems, anybody familiar with the pattern should be able to quickly learn what the code does.","markups":[]},{"name":"d4f3","type":3,"text":"Conclusion: Code Should Be Simple, Not Simplistic","markups":[]},{"name":"1365","type":6,"text":"Vigorous writing is concise. A sentence should contain no unnecessary words, a paragraph no unnecessary sentences, for the same reason that a drawing should have no unnecessary lines and a machine no unnecessary parts. This requires not that the writer make all sentences short, or avoid all detail and treat subjects only in outline, but that every word tell. [Emphasis added.]\n~ William Strunk, Jr., The Elements of Style","markups":[{"type":1,"start":219,"end":361}]},{"name":"c930","type":1,"text":"ES6 was standardized in 2015, yet in 2017, many developers avoid features such as concise arrow functions, implicit return, rest and spread operators, etc… in the guise of writing code that is easier to read because it is more familiar. That is a big mistake. Familiarity comes with practice, and with familiarity, the concise features in ES6 are clearly superior to the ES5 alternatives: concise code is simple compared to the syntax-heavy alternative.","markups":[{"type":3,"start":222,"end":235,"href":"https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75","title":"","rel":"","anchorType":0},{"type":2,"start":389,"end":411}]},{"name":"5c76","type":1,"text":"Code should be simple, not simplistic.","markups":[]},{"name":"c717","type":1,"text":"Given that concise code is:","markups":[]},{"name":"ba39","type":9,"text":"Less bug prone","markups":[]},{"name":"ca6d","type":9,"text":"Easier to debug","markups":[]},{"name":"a5be","type":1,"text":"And given that bugs:","markups":[]},{"name":"0125","type":9,"text":"Are extremely expensive to fix","markups":[]},{"name":"b3a9","type":9,"text":"Tend to cause more bugs","markups":[]},{"name":"558d","type":9,"text":"Interrupt the flow of normal feature development","markups":[]},{"name":"5ab0","type":1,"text":"And given that concise code is also:","markups":[]},{"name":"398a","type":9,"text":"Easier to write","markups":[]},{"name":"0348","type":9,"text":"Easier to read","markups":[]},{"name":"d95c","type":9,"text":"Easier to maintain","markups":[]},{"name":"7b13","type":1,"text":"It is worth the training investment to bring developers up to speed using techniques such as concise syntax, currying & composition. When we fail to do so for the sake of familiarity, we talk down to readers of our code so that they can better understand it, like an adult speaking baby-talk to a toddler.","markups":[]},{"name":"b19b","type":1,"text":"Assume the reader knows nothing about the implementation, but do not assume that the reader is stupid, or that the reader doesn’t know the language.","markups":[]},{"name":"1938","type":1,"text":"Be clear, but don’t dumb it down. To dumb things down is both wasteful and insulting. Make the investment in practice and familiarity in order to gain a better programming vocabulary, and a more vigorous style.","markups":[]},{"name":"87d1","type":7,"text":"Code should be simple, not simplistic.","markups":[]},{"name":"13b4","type":3,"text":"Level Up Your Skills with Live 1:1 Mentorship","markups":[]},{"name":"2db8","type":1,"text":"DevAnywhere is the fastest way to level up to advanced JavaScript skills:","markups":[]},{"name":"5aa2","type":9,"text":"Live lessons","markups":[]},{"name":"58c2","type":9,"text":"Flexible hours","markups":[]},{"name":"b984","type":9,"text":"1:1 mentorship","markups":[]},{"name":"cdc0","type":9,"text":"Build real production apps","markups":[]},{"name":"154a","type":4,"text":"https://devanywhere.io/","markups":[{"type":3,"start":0,"end":23,"href":"https://devanywhere.io/","title":"","rel":"nofollow noopener noopener nofollow noopener nofollow noopener noopener nofollow noopener","anchorType":0}],"layout":1,"metadata":{"id":"1*pskrI-ZjRX_Y0I0zZqVTcQ.png","originalWidth":2470,"originalHeight":1390},"href":"https://devanywhere.io/"},{"name":"b215","type":1,"text":"Eric Elliott is the author of “Programming JavaScript Applications” (O’Reilly), and cofounder of DevAnywhere.io. He has contributed to software experiences for Adobe Systems, Zumba Fitness, The Wall Street Journal, ESPN, BBC, and top recording artists including Usher, Frank Ocean, Metallica, and many more.","markups":[{"type":3,"start":30,"end":67,"href":"http://pjabook.com","title":"","rel":"nofollow noopener noopener noopener nofollow noopener","anchorType":0},{"type":3,"start":97,"end":111,"href":"https://devanywhere.io/","title":"","rel":"noopener nofollow","anchorType":0},{"type":1,"start":0,"end":12},{"type":1,"start":160,"end":173},{"type":1,"start":175,"end":188},{"type":1,"start":190,"end":213},{"type":1,"start":215,"end":219},{"type":1,"start":221,"end":224},{"type":1,"start":262,"end":267},{"type":1,"start":269,"end":280},{"type":1,"start":282,"end":291},{"type":2,"start":0,"end":307}]},{"name":"98ef","type":1,"text":"He works anywhere he wants with the most beautiful woman in the world.","markups":[{"type":2,"start":0,"end":70}]}],"sections":[{"name":"4cd5","startIndex":0},{"name":"778a","startIndex":197}]},"postDisplay":{"coverless":true}},"virtuals":{"statusForCollection":"APPROVED","allowNotes":true,"previewImage":{"imageId":"1*7qYONdlJuS0pkUpdav-LQQ.jpeg","filter":"","backgroundSize":"","originalWidth":1200,"originalHeight":800,"strategy":"resample","height":0,"width":0},"wordCount":3364,"imageCount":2,"readingTime":13.077672955974842,"subtitle":"In 1920, “The Elements of Style” by William Strunk Jr. was published, which set guidelines for English language style that have lasted the…","publishedInCount":1,"usersBySocialRecommends":[],"recommends":1046,"socialRecommends":[],"isBookmarked":false,"tags":[{"slug":"javascript","name":"JavaScript","postCount":43721,"virtuals":{"isFollowing":false},"metadata":{"followerCount":40407,"postCount":43721,"coverImage":{"id":"1*Pmm5N4hr9cANciDL5nbDpw.png","originalWidth":1363,"originalHeight":516}},"type":"Tag"},{"slug":"tech","name":"Tech","postCount":99337,"virtuals":{"isFollowing":false},"metadata":{"followerCount":1071523,"postCount":99337,"coverImage":{"id":"1*ueWmI48uuShON-hX7LwI0w.png","originalWidth":1217,"originalHeight":689}},"type":"Tag"},{"slug":"technology","name":"Technology","postCount":91410,"virtuals":{"isFollowing":false},"metadata":{"followerCount":1831777,"postCount":91410,"coverImage":{"id":"1*yH2cmH1uhoFpR7HIseOAsw.jpeg"}},"type":"Tag"}],"socialRecommendsCount":0,"responsesCreatedCount":40,"links":{"entries":[{"url":"https://devanywhere.io/","alts":[],"httpStatus":200},{"url":"http://www.nature.com/neuro/journal/v17/n3/fig_tab/nn.3655_F2.html","alts":[],"httpStatus":200},{"url":"http://pjabook.com","alts":[],"httpStatus":200},{"url":"https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976","alts":[{"type":2,"url":"medium://p/d1c076bec976"},{"type":3,"url":"medium://p/d1c076bec976"}],"httpStatus":200},{"url":"https://medium.com/javascript-scene/familiarity-bias-is-holding-you-back-its-time-to-embrace-arrow-functions-3d37e1a9bb75","alts":[{"type":2,"url":"medium://p/3d37e1a9bb75"},{"type":3,"url":"medium://p/3d37e1a9bb75"}],"httpStatus":200},{"url":"https://medium.com/javascript-scene/functors-categories-61e031bac53f","alts":[{"type":2,"url":"medium://p/61e031bac53f"},{"type":3,"url":"medium://p/61e031bac53f"}],"httpStatus":200},{"url":"https://www.amazon.com/Elements-Style-Fourth-William-Strunk/dp/020530902X/ref=as_li_ss_tl?ie=UTF8&qid=1493260884&sr=8-1&keywords=the+elements+of+style&linkCode=ll1&tag=eejs-20&linkId=f7eb0eacba0eab243899626551113119","alts":[],"httpStatus":200}],"version":"0.3","generatedAt":1503220319323},"isLockedPreviewOnly":false,"takeoverId":"","metaDescription":"","totalClapCount":1329,"sectionCount":2},"coverless":true,"slug":"elements-of-javascript-style","translationSourcePostId":"","translationSourceCreatorId":"","isApprovedTranslation":false,"inResponseToPostId":"","inResponseToRemovedAt":0,"isTitleSynthesized":true,"allowResponses":true,"importedUrl":"","importedPublishedAt":0,"visibility":0,"uniqueSlug":"elements-of-javascript-style-caa8821cb99f","previewContent":{"bodyModel":{"paragraphs":[{"name":"previewImage","type":4,"text":"","layout":10,"metadata":{"id":"1*7qYONdlJuS0pkUpdav-LQQ.jpeg","originalWidth":1200,"originalHeight":800,"isFeatured":true}},{"name":"a97e","type":3,"text":"Elements of JavaScript Style","markups":[],"alignment":1},{"name":"0f2d","type":1,"text":"In 1920, “The Elements of Style” by William Strunk Jr. was published, which set guidelines for English…","markups":[{"type":3,"start":9,"end":53,"href":"https://www.amazon.com/Elements-Style-Fourth-William-Strunk/dp/020530902X/ref=as_li_ss_tl?ie=UTF8&qid=1493260884&sr=8-1&keywords=the+elements+of+style&linkCode=ll1&tag=eejs-20&linkId=f7eb0eacba0eab243899626551113119","title":"","rel":"","anchorType":0}],"alignment":1}],"sections":[{"startIndex":0}]},"isFullContent":false},"license":0,"inResponseToMediaResourceId":"","canonicalUrl":"https://medium.com/javascript-scene/elements-of-javascript-style-caa8821cb99f","approvedHomeCollectionId":"c0aeac5284ad","approvedHomeCollection":{"id":"c0aeac5284ad","name":"JavaScript Scene","slug":"javascript-scene","tags":["JAVASCRIPT","PROGRAMMING","NODE.JS"],"creatorId":"c359511de780","description":"To submit, DM your proposal to @JS_Cheerleader on Twitter","shortDescription":"To submit, DM your proposal to @JS_Cheerleader on Twitter","image":{"imageId":"1*fegbK6HDD8crwrwARuMhaQ.png","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":36616,"activeAt":1506665595828},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false,"canEnrollInHightower":false,"canLockPostsForMediumMembers":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":"","isEnrolledInHightower":false,"isEligibleForHightower":false},"logo":{"imageId":"1*k98ylK8u1sha-tSDD4UiBA.png","filter":"","backgroundSize":"","originalWidth":600,"originalHeight":72,"strategy":"resample","height":0,"width":0},"twitterUsername":"JS_Cheerleader","sections":[{"type":2,"collectionHeaderMetadata":{"title":"JavaScript Scene","description":"To submit, DM your article idea to @JS_Cheerleader","backgroundImage":{},"logoImage":{"id":"1*fegbK6HDD8crwrwARuMhaQ.png","originalWidth":1875,"originalHeight":1871,"alt":"JavaScript Scene"},"alignment":1,"layout":6}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":["92ce799a3e1f","e22de630601a","27b72500d6ea"]}},{"type":1,"postListMetadata":{"source":2,"layout":5,"number":5,"postIds":[],"sectionHeader":"Trending"}}],"favicon":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF02B875","point":0},{"color":"#FF00AB6B","point":0.1},{"color":"#FF1C9963","point":0.2},{"color":"#FF092E20","point":1}],"backgroundColor":"#FFFFFFFF"},"highlightSpectrum":{"colorPoints":[{"color":"#FFFFFFFF","point":0},{"color":"#FFE9FDF0","point":0.1},{"color":"#FFE2FAEE","point":0.2},{"color":"#FFADFFCF","point":0.6},{"color":"#FF7DFFB3","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[{"type":1,"title":"Learn JS","tagSlug":"learnjs","url":"https://medium.com/javascript-scene/tagged/learnjs","source":"tagSlug"},{"type":3,"title":"Video Lessons","url":"https://ericelliottjs.com/product/lifetime-access-pass/"}],"colorBehavior":1,"instantArticlesState":0,"acceleratedMobilePagesState":0,"ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"header":{"title":"JavaScript Scene","description":"To submit, DM your article idea to @JS_Cheerleader","backgroundImage":{},"logoImage":{"id":"1*fegbK6HDD8crwrwARuMhaQ.png","originalWidth":1875,"originalHeight":1871,"alt":"JavaScript Scene"},"alignment":1,"layout":6},"type":"Collection"},"newsletterId":"","webCanonicalUrl":"https://medium.com/javascript-scene/elements-of-javascript-style-caa8821cb99f","mediumUrl":"https://medium.com/javascript-scene/elements-of-javascript-style-caa8821cb99f","migrationId":"","notifyFollowers":true,"notifyTwitter":false,"isSponsored":false,"isRequestToPubDisabled":false,"notifyFacebook":false,"responseHiddenOnParentPostAt":0,"isSeries":false,"isSubscriptionLocked":false,"seriesLastAppendedAt":0,"audioVersionDurationSec":0,"sequenceId":"","isNsfw":false,"isEligibleForRevenue":false,"isBlockedFromHightower":false,"type":"Post"},"mentionedUsers":[],"collaborators":[],"membershipPlans":[],"topic":{"topicId":"63c6f1f93ee","slug":"javascript","createdAt":1493945704961,"deletedAt":0,"image":{"id":"1*5UyyDJ1ESD11yQNd1UVAaQ@2x.jpeg","originalWidth":5472,"originalHeight":3648},"name":"Javascript","description":"An ode to code.","briefCatalogId":"e6f279670b2b","relatedTopics":[],"visibility":1,"relatedTags":[],"type":"Topic"},"collectionUserRelations":[],"mode":null,"references":{"User":{"c359511de780":{"userId":"c359511de780","name":"Eric Elliott","username":"_ericelliott","createdAt":1382122060445,"lastPostCreatedAt":1506666152047,"imageId":"0*WgY9B-Lm4DnCEHlO.jpeg","backgroundImageId":"","bio":"Compassionate entrepreneur on a mission to end homelessness. #jshomes Javascript, tech education, electronic music, photography, film, viral apps.","twitterScreenName":"_ericelliott","socialStats":{"userId":"c359511de780","usersFollowedCount":6906,"usersFollowedByCount":60425,"type":"SocialStats"},"social":{"userId":"lo_940b0da8b70c","targetUserId":"c359511de780","type":"Social"},"facebookAccountId":"","allowNotes":1,"type":"User"}},"Collection":{"c0aeac5284ad":{"id":"c0aeac5284ad","name":"JavaScript Scene","slug":"javascript-scene","tags":["JAVASCRIPT","PROGRAMMING","NODE.JS"],"creatorId":"c359511de780","description":"To submit, DM your proposal to @JS_Cheerleader on Twitter","shortDescription":"To submit, DM your proposal to @JS_Cheerleader on Twitter","image":{"imageId":"1*fegbK6HDD8crwrwARuMhaQ.png","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":36616,"activeAt":1506665595828},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false,"canEnrollInHightower":false,"canLockPostsForMediumMembers":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":"","isEnrolledInHightower":false,"isEligibleForHightower":false},"logo":{"imageId":"1*k98ylK8u1sha-tSDD4UiBA.png","filter":"","backgroundSize":"","originalWidth":600,"originalHeight":72,"strategy":"resample","height":0,"width":0},"twitterUsername":"JS_Cheerleader","sections":[{"type":2,"collectionHeaderMetadata":{"title":"JavaScript Scene","description":"To submit, DM your article idea to @JS_Cheerleader","backgroundImage":{},"logoImage":{"id":"1*fegbK6HDD8crwrwARuMhaQ.png","originalWidth":1875,"originalHeight":1871,"alt":"JavaScript Scene"},"alignment":1,"layout":6}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":["92ce799a3e1f","e22de630601a","27b72500d6ea"]}},{"type":1,"postListMetadata":{"source":2,"layout":5,"number":5,"postIds":[],"sectionHeader":"Trending"}}],"favicon":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF02B875","point":0},{"color":"#FF00AB6B","point":0.1},{"color":"#FF1C9963","point":0.2},{"color":"#FF092E20","point":1}],"backgroundColor":"#FFFFFFFF"},"highlightSpectrum":{"colorPoints":[{"color":"#FFFFFFFF","point":0},{"color":"#FFE9FDF0","point":0.1},{"color":"#FFE2FAEE","point":0.2},{"color":"#FFADFFCF","point":0.6},{"color":"#FF7DFFB3","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[{"type":1,"title":"Learn JS","tagSlug":"learnjs","url":"https://medium.com/javascript-scene/tagged/learnjs","source":"tagSlug"},{"type":3,"title":"Video Lessons","url":"https://ericelliottjs.com/product/lifetime-access-pass/"}],"colorBehavior":1,"instantArticlesState":0,"acceleratedMobilePagesState":0,"ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"header":{"title":"JavaScript Scene","description":"To submit, DM your article idea to @JS_Cheerleader","backgroundImage":{},"logoImage":{"id":"1*fegbK6HDD8crwrwARuMhaQ.png","originalWidth":1875,"originalHeight":1871,"alt":"JavaScript Scene"},"alignment":1,"layout":6},"type":"Collection"}},"Social":{"c359511de780":{"userId":"lo_940b0da8b70c","targetUserId":"c359511de780","type":"Social"}},"SocialStats":{"c359511de780":{"userId":"c359511de780","usersFollowedCount":6906,"usersFollowedByCount":60425,"type":"SocialStats"}}}})
// ]]></script>
 </body>
</html>