<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link href="https://maxcdn.bootstrapcdn.com/bootswatch/3.3.7/paper/bootstrap.min.css" rel="stylesheet" integrity="sha384-awusxf8AUojygHf2+joICySzB780jVvQaVCAt1clU3QsyAitLGul28Qxb2r1e5g+" crossorigin="anonymous"> 
  <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous"> 
  <link href="https://fonts.googleapis.com/css?family=Source+Code+Pro" rel="stylesheet"> 
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/styles/shCore.min.css"> 
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/styles/shThemeEclipse.min.css"> 
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/styles/shCoreEclipse.min.css"> 
  <link href="/css/custom.css" rel="stylesheet"> 
  <link href="/css/syntax.css" rel="stylesheet"> 
  <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]--> 
  <!-- Begin Jekyll SEO tag v2.0.0 --> 
  <title>How to Create Simple Neural Networks in JavaScript - Progur!</title> 
  <meta property="og:title" content="How to Create Simple Neural Networks in JavaScript"> 
  <meta name="description" content="In this article, you’re going to learn how to use Synaptic, a popular JavaScript machine learning library, to create, train, and use artificial neural networks."> 
  <meta property="og:description" content="In this article, you’re going to learn how to use Synaptic, a popular JavaScript machine learning library, to create, train, and use artificial neural networks."> 
  <link rel="canonical" href="http://progur.com/2016/09/how-to-create-and-use-neural-networks-in-javascript.html"> 
  <meta property="og:url" content="http://progur.com/2016/09/how-to-create-and-use-neural-networks-in-javascript.html"> 
  <meta property="og:site_name" content="Progur!"> 
  <meta property="og:type" content="article"> 
  <meta property="article:published_time" content="2016-09-05T00:00:00+05:30"> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:site" content="@hathibel"> 
  <meta name="twitter:creator" content="@hathibel"> 
  <script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "BlogPosting",
    "headline": "How to Create Simple Neural Networks in JavaScript",
    "datePublished": "2016-09-05T00:00:00+05:30",
    "description": "In this article, you’re going to learn how to use Synaptic, a popular JavaScript machine learning library, to create, train, and use artificial neural networks.",
    "logo": "http://progur.com/assets/logo.jpg",
    "url": "http://progur.com/2016/09/how-to-create-and-use-neural-networks-in-javascript.html"
  }
</script> 
  <!-- End Jekyll SEO tag --> 
 </head> 
 <body> 
  <nav class="navbar navbar-default navbar-fixed-top"> 
   <div class="container"> 
    <div class="navbar-header"> 
     <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="navbar-brand" href="/"><i class="fa fa-terminal logo"></i> PROGUR!</a> 
    </div> 
    <!-- Options --> 
    <div id="navbar" class="collapse navbar-collapse"> 
     <ul class="nav navbar-nav navbar-right"> 
      <li><a target="_blank" href="https://twitter.com/hathibel" title="Follow me on Twitter"><i class="fa fa-lg fa-twitter" style="color: #4099FF"></i> &nbsp; Twitter</a></li> 
      <li><a target="_blank" href="https://plus.google.com/+Progur" title="Follow me on Google+"><i class="fa fa-lg fa-google-plus" style="color: #d34836"></i> &nbsp; Google+</a></li> 
      <li><a target="_blank" href="https://github.com/hathibelagal" title="Follow me on GitHub"><i class="fa fa-lg fa-github" style="color: #999999"></i> &nbsp; GitHub</a></li> 
      <li><a target="_blank" href="https://medium.com/@hathibel" title="Follow me on Medium"><i class="fa fa-lg fa-medium" style="color: #0be370"></i> &nbsp; Medium</a></li> 
      <li><a target="_blank" href="/feed.xml" title="Subscribe to our RSS feed"><i class="fa fa-lg fa-rss" style="color: #FF6600"></i>&nbsp; RSS</a></li> 
     </ul> 
    </div> 
    <!-- End of Options --> 
   </div> 
  </nav> 
  <div class="container"> 
   <div class="row"> 
    <div class="col-md-12"> 
     <div> 
      <div> 
       <h1 class="post-title">How to Create Simple Neural Networks in JavaScript</h1> 
       <div class="post-meta">
        Written by Ashraff Hathibelagal • 05 September 2016
       </div> 
       <p style="margin-bottom: 20px"><span class="label label-info"><i class="fa fa-tag"> </i> &nbsp; Programming </span></p> 
       <div class="post-actual-content"> 
        <p>Let’s face it, if you are an ordinary web or mobile application developer, learning how to use machine learning libraries such as TensorFlow or Caffe isn’t easy. Their APIs are probably intuitive for people who are already quite familiar with neural networks, matrix operations, and advanced mathematics. For the layman, however, they simply don’t make much sense. Fortunately, last week, I found a JavaScript library called Synaptic. I must say, I had a lot of fun using it. In this tutorial, I’m going to show you how to use it create simple neural networks.</p> 
        <h3 id="installation">Installation</h3> 
        <p>You really don’t need to install anything. Synaptic is available on CDNJS, which means, you can simply add the following code to your HTML page:</p> 
        <pre class="brush: javascript">
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/synaptic/1.0.8/synaptic.min.js"&gt;&lt;/script&gt;
</pre> 
        <p>Additionally, let’s add Underscore.js, because we will be needing some of its very handy array-related methods.</p> 
        <pre class="brush: javascript">
&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"&gt;&lt;/script&gt;
</pre> 
        <h3 id="creating-a-simple-neural-network">Creating a Simple Neural Network</h3> 
        <p>Before you create a neural network, you must decide what you want it to do. Now, I won’t be showing you how to perform complex tasks such image classification or sentiment analysis. Instead, let’s do something trivially easy.</p> 
        <p>Imagine you are creating a simple neural network that’s going to be put inside your really dumb hamster. The neural network should make him do the following things:</p> 
        <ul> 
         <li>If you clap, he must sit down.</li> 
         <li>If you whistle, he must run.</li> 
         <li>If you clap AND whistle, he must jump.</li> 
        </ul> 
        <p>To model this behavior, we’re going to need two input neurons (CLAP, WHISTLE), and three output neurons(SIT, RUN, JUMP). That means, we’re going to have two layers of neurons.</p> 
        <p>Let us create the two layers using the <code class="highlighter-rouge">synaptic.Layer</code> class.</p> 
        <pre class="brush: javascript">
var input = new synaptic.Layer(2); // Two inputs
var output = new synaptic.Layer(3); // Three outputs
</pre> 
        <p>Right now, there are no connections between the two layers. To connect them, you must use the <code class="highlighter-rouge">project()</code> method.</p> 
        <pre class="brush: javascript">
input.project(output); // Connect input to output
</pre> 
        <p>At this point, both the layers are fully connected. In other words, every neuron of the input layer is connected to every neuron of the output layer.</p> 
        <h3 id="training-the-neural-network">Training the Neural Network</h3> 
        <p>Our neural network is ready to be trained. So, let’s start creating our training data. It’s going to be two arrays: one for the input, and one for the output. As you might have guessed, input will have two values, and output will have three values. The values must always range from 0 to 1. In this tutorial, we shall stick with exactly 0 and 1.</p> 
        <p>The first element of the input array will be 1 if you are clapping, and 0 otherwise. Similarly, the second element will be 1 if you are whistling, and 0 otherwise.</p> 
        <p>And, the first element of the output will be 1 if the hamster must sit, and 0 otherwise. The second element will be 1 if the hamster must run, and 0 otherwise. Lastly, the third element will be 1 if the hamster must jump, and 0 otherwise.</p> 
        <p>Accordingly, here’s what the training data will look like:</p> 
        <pre class="brush: javascript">
var trainingData = [
    {input: [1, 0], output: [1, 0, 0]}, // Clap -&gt; Sit
    {input: [0, 1], output: [0, 1, 0]}, // Whistle -&gt; Run
    {input: [1, 1], output: [0, 0, 1]}, // Clap+Whistle -&gt; Jump
];
</pre> 
        <p>It looks simple, but spend some time to fully understand the training data’s arrays. Almost every machine learning framework needs training data, and understanding how to create and format that data is extremely important.</p> 
        <p>Before we proceed any further, we should decide how impressionable our neural network should be. In other words, we must give it a <strong>learning rate</strong>. A very low learning rate will usually make the neural network a slow, but very good learner. On the other hand, a very high learning rate will make it learn quickly, but also very erratically. For now, let’s say the learning rate is 0.4.</p> 
        <p>We can now send the <code class="highlighter-rouge">input</code> data to the input layer of our network using the <code class="highlighter-rouge">activate()</code> method. And then, we should call the <code class="highlighter-rouge">propagate()</code> method on the output layer to help the neural network adjust its configuration. The <code class="highlighter-rouge">propagate()</code> method needs the <code class="highlighter-rouge">output</code> data as its input.</p> 
        <pre class="brush: javascript">
var learningRate = 0.4;

function train() {
    for(var i = 0; i &lt; trainingData.length; i++) {
        input.activate(trainingData[i]["input"]);
        output.activate();
        output.propagate(learningRate, trainingData[i]["output"]);
    }
}
</pre> 
        <p>Just like humans, neural networks don’t learn to do things the right way after training just once. Well, they kinda do, but their accuracy will be extremely low. To improve their accuracy levels, they need to be trained repeatedly. Therefore, let’s train our neural network about 1000 times, and also shuffle the order of the <code class="highlighter-rouge">trainingData</code> each time.</p> 
        <pre class="brush: javascript">
function retrain() {
    for(var i = 0; i &lt; 1000; i++) {
        trainingData = _.shuffle(trainingData);
        train();
    }
}

retrain(); // Start the training
</pre> 
        <h3 id="using-the-neural-network">Using the Neural Network</h3> 
        <p>The neural network is now trained and ready to be used. To use it, you must pass an array to the input layer, and then check the neurons of the output layer. The <code class="highlighter-rouge">activate()</code> method can be used for doing both.</p> 
        <p>Let’s say you just whistle. Here’s what you would do:</p> 
        <pre class="brush: javascript">
input.activate([0,1]); // Whistle
var result = output.activate();
</pre> 
        <p>The result will now contain three numbers, all ranging from 0 to 1. Here’s how you can print all of them out as percentages:</p> 
        <pre class="brush: javascript">
console.log("Sit Neuron: " + result[0] * 100 + "%");
console.log("Run Neuron: " + result[1] * 100 + "%");
console.log("Jump Neuron: " + result[2] * 100 + "%");
</pre> 
        <p>I got these values on the console:</p> 
        <pre class="brush: bash">
Sit Neuron: 0.014995911436294706%
Run Neuron: 99.39201708556335%
Jump Neuron: 1.2615268528823826%
</pre> 
        <p>As you can see, the <strong>Run</strong> neuron’s value is really high, which means, the neural network has learned everything correctly. Pass a different input array, say <code class="highlighter-rouge">[1,1]</code>, and you should see the <strong>Jump</strong> neuron’s value very high.</p> 
        <pre class="brush: bash">
Sit Neuron: 0.04761738707168859%
Run Neuron: 0.4768082300857423%
Jump Neuron: 98.24123037285819%
</pre> 
        <h3 id="conclusion">Conclusion</h3> 
        <p>You now know how to create, train, and use a simple neural network using JavaScript and Synaptic. We created something very simple, and trivial, but if you are a beginner, I’m sure you learned to do something new. In my next post, I’ll be showing you how to create more complex neural networks, which contain more layers.</p> 
        <h4 id="related-reading">Related Reading</h4> 
        <ul> 
         <li><a href="/2016/09/how-to-create-deep-neural-networks-in-javascript.html">How to Create Deep Neural Networks in JavaScript</a></li> 
        </ul> 
       </div> 
       <!-- Share --> 
       <div class="post-share"> 
        <p>If you found this article useful, please share it with your friends and colleagues!</p> 
        <a class="btn btn-primary" style="background:#4099FF" target="_blank" href="https://twitter.com/intent/tweet?text=How to Create Simple Neural Networks in JavaScript&amp;url=http://progur.com/2016/09/how-to-create-and-use-neural-networks-in-javascript.html&amp;via=hathibel" onclick="javascript:window.open(this.href,
  '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=450,width=600');return false;"><i class="fa fa-twitter fa-lg"></i></a> 
        <a class="btn btn-primary" style="background:#3b5998" target="_blank" href="https://facebook.com/sharer.php?u=http://progur.com/2016/09/how-to-create-and-use-neural-networks-in-javascript.html" onclick="javascript:window.open(this.href,
  '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=450,width=600');return false;"><i class="fa fa-facebook fa-lg"></i></a> 
        <a class="btn btn-primary" style="background:#dd4b39" target="_blank" href="https://plus.google.com/share?url=http://progur.com/2016/09/how-to-create-and-use-neural-networks-in-javascript.html" onclick="javascript:window.open(this.href,
  '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><i class="fa fa-google-plus fa-lg"></i></a> 
       </div> 
       <!-- End of Share --> 
       <!-- Comments --> 
       <div class="comments"> 
        <div id="disqus_thread"></div> 
        <script>                                    
                                var disqus_config = function () {
                                    this.page.url = "http://progur.com/2016/09/how-to-create-and-use-neural-networks-in-javascript.html";
                                    this.page.identifier = "/2016/09/how-to-create-and-use-neural-networks-in-javascript.html";
                                };
                                (function() {
                                    var d = document, s = d.createElement('script');

                                    s.src = '//progur.disqus.com/embed.js';

                                    s.setAttribute('data-timestamp', +new Date());
                                    (d.head || d.body).appendChild(s);
                                })();
                            </script> 
        <noscript>
         Please enable JavaScript to view the 
         <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a>
        </noscript> 
       </div> 
       <!-- End of comments --> 
      </div> 
     </div> 
    </div> 
   </div> 
  </div> 
  <footer class="footer"> 
   <div class="container"> 
    <p> Copyright © 2016-2017 Progur.com | All rights reserved. <br> Powered by Jekyll, and several secret sauces. </p> 
   </div> 
  </footer> 
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script> 
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shAutoloader.min.js"></script> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shCore.min.js"></script> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushBash.min.js"></script> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushJava.min.js"></script> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushPython.min.js"></script> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushXml.min.js"></script> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushRuby.min.js"></script> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushCpp.min.js"></script> 
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/SyntaxHighlighter/3.0.83/scripts/shBrushJScript.min.js"></script> 
  <script>
              SyntaxHighlighter.defaults.toolbar = false;
              SyntaxHighlighter.all();
          </script> 
  <!-- Analytics --> 
  <script>
          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
          })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

          ga('create', 'UA-46644689-5', 'auto');
          ga('send', 'pageview');

        </script> 
  <!-- End of Analytics -->   
 </body>
</html>