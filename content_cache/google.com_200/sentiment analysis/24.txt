<!doctype html>
<html id="blocks_show">
 <head> 
  <meta charset="utf-8"> 
  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"dcf3db8ebe","applicationID":"7370673","transactionName":"elkNQ0tWWVpQEE5bXFZVCEQWSl1ZQg==","queueTime":3,"applicationTime":234,"agent":""}</script> 
  <script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,n,t){function r(t){if(!n[t]){var o=n[t]={exports:{}};e[t][0].call(o.exports,function(n){var o=e[t][1][n];return r(o||n)},o,o.exports)}return n[t].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<t.length;o++)r(t[o]);return r}({1:[function(e,n,t){function r(){}function o(e,n,t){return function(){return i(e,[c.now()].concat(u(arguments)),n?null:this,t),n?void 0:this}}var i=e("handle"),a=e(2),u=e(3),f=e("ee").get("tracer"),c=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],d="api-",l=d+"ixn-";a(p,function(e,n){s[n]=o(d+n,!0,"api")}),s.addPageAction=o(d+"addPageAction",!0),s.setCurrentRouteName=o(d+"routeName",!0),n.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,n){var t={},r=this,o="function"==typeof n;return i(l+"tracer",[c.now(),e,t],r),function(){if(f.emit((o?"":"no-")+"fn-start",[c.now(),r,o],t),o)try{return n.apply(this,arguments)}finally{f.emit("fn-end",[c.now()],t)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,n){m[n]=o(l+n)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,c.now()])}},{}],2:[function(e,n,t){function r(e,n){var t=[],r="",i=0;for(r in e)o.call(e,r)&&(t[i]=n(r,e[r]),i+=1);return t}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],3:[function(e,n,t){function r(e,n,t){n||(n=0),"undefined"==typeof t&&(t=e?e.length:0);for(var r=-1,o=t-n||0,i=Array(o<0?0:o);++r<o;)i[r]=e[n+r];return i}n.exports=r},{}],4:[function(e,n,t){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,n,t){function r(){}function o(e){function n(e){return e&&e instanceof r?e:e?f(e,u,i):i()}function t(t,r,o,i){if(!d.aborted||i){e&&e(t,r,o);for(var a=n(o),u=m(t),f=u.length,c=0;c<f;c++)u[c].apply(a,r);var p=s[y[t]];return p&&p.push([b,t,r,a]),a}}function l(e,n){v[e]=m(e).concat(n)}function m(e){return v[e]||[]}function w(e){return p[e]=p[e]||o(t)}function g(e,n){c(e,function(e,t){n=n||"feature",y[t]=n,n in s||(s[n]=[])})}var v={},y={},b={on:l,emit:t,get:w,listeners:m,context:n,buffer:g,abort:a,aborted:!1};return b}function i(){return new r}function a(){(s.api||s.feature)&&(d.aborted=!0,s=d.backlog={})}var u="nr@context",f=e("gos"),c=e(2),s={},p={},d=n.exports=o();d.backlog=s},{}],gos:[function(e,n,t){function r(e,n,t){if(o.call(e,n))return e[n];var r=t();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(e,n,t){function r(e,n,t,r){o.buffer([e],r),o.emit(e,n,t)}var o=e("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(e,n,t){function r(e){var n=typeof e;return!e||"object"!==n&&"function"!==n?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");n.exports=r},{}],loader:[function(e,n,t){function r(){if(!x++){var e=h.info=NREUM.info,n=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&n))return s.abort();c(y,function(n,t){e[n]||(e[n]=t)}),f("mark",["onload",a()+h.offset],null,"api");var t=d.createElement("script");t.src="https://"+e.agent,n.parentNode.insertBefore(t,n)}}function o(){"complete"===d.readyState&&i()}function i(){f("mark",["domContent",a()+h.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(u=Math.max((new Date).getTime(),u))-h.offset}var u=(new Date).getTime(),f=e("handle"),c=e(2),s=e("ee"),p=window,d=p.document,l="addEventListener",m="attachEvent",w=p.XMLHttpRequest,g=w&&w.prototype;NREUM.o={ST:setTimeout,SI:p.setImmediate,CT:clearTimeout,XHR:w,REQ:p.Request,EV:p.Event,PR:p.Promise,MO:p.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1044.min.js"},b=w&&g&&g[l]&&!/CriOS/.test(navigator.userAgent),h=n.exports={offset:u,now:a,origin:v,features:{},xhrWrappable:b};e(1),d[l]?(d[l]("DOMContentLoaded",i,!1),p[l]("load",r,!1)):(d[m]("onreadystatechange",o),p[m]("onload",r)),f("mark",["firstbyte",u],null,"api");var x=0,E=e(4)},{}]},{},["loader"]);</script> 
  <meta name="google-site-verification" content="x6MU3M3Y_C3AOzkEF9AX49aPLHHaahQSrGkJnaM7gKc"> 
  <title>Alchemy API - Sentiment Analysis from Text – Blockspring</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link rel="icon" href="/assets/leaf-20c4a896be6e8200c5fb3354c95fb30c7cd502554441539a57ba4a8f12c7e543.png" type="image/x-icon"> 
  <link rel="chrome-webstore-item" href="https://chrome.google.com/webstore/detail/aihldeahgcpbpmimkdpkafaedhbmfhoh"> 
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"> 
  <link rel="stylesheet" media="all" href="/assets/application2-80e55a20f02eae6baade4f902eba1ccca7e9b387bcd564d54b0210421e965fe7.css"> 
  <script>
//<![CDATA[
window.gon={};gon.auth_base_url="https://auth.blockspring.com/";gon.user=null;gon.action="show";gon.controller="blocks";gon.language_templates={"1":{"code":"###### Welcome to Blockspring!\r\n###### To help you get started, below is a fully-commented sample function that prints out a simple welcome message.\r\n\r\n# require the blockspring package.\r\nimport blockspring\r\n\r\ndef block(request, response):\r\n\r\n    # retrieve input parameters and assign to variables for convenience.\r\n    first_name = request.params[\"first_name\"]\r\n    age = request.params[\"age\"]\r\n\r\n    # build our welcome message.\r\n    welcome = \"Hi! My name is %s and my age is %s\" % (first_name, age)\r\n\r\n    # add the message to the function's output.\r\n    response.addOutput(\"intro\", welcome)\r\n\r\n    # return the output.\r\n    response.end()\r\n\r\n# pass your function into blockspring.define. tells blockspring what function to run.\r\nblockspring.define(block)\r\n","conf":[{"type":"text","label":"First Name","name":"first_name","help_text":"Enter your first name.","default":"Paul"},{"type":"number","label":"Age","name":"age","help_text":"Enter your age.","default":26}]},"2":{"code":"###### Welcome to Blockspring!\r\n###### To help you get started, below is a fully-commented sample function that prints out a simple welcome message.\r\n\r\n# require the blockspring library. suppress any loading messages.\r\nsuppressMessages(library(\"blockspring\"))\r\n\r\n# pass your function into blockspringDefine. tells blockspring what function to run.\r\nblockspringDefine(function(request, response){\r\n\r\n    # retrieve input parameters and assign to variables for convenience.\r\n\tfirst_name \u003c- request$params$first_name\r\n    age \u003c- request$params$age\r\n    \r\n    # build our welcome message.\r\n    welcome \u003c- paste(\"Hi! My name is\", first_name, \"and my age is\", age)\r\n\t\r\n    # add the message to the function's output.\r\n\tresponse$addOutput(\"intro\", welcome)\r\n    \r\n    # return the output.\r\n\tresponse$end()\r\n})\r\n","conf":[{"type":"text","label":"First Name","name":"first_name","help_text":"Enter your first name.","default":"Paul"},{"type":"number","label":"Age","name":"age","help_text":"Enter your age.","default":26}]},"3":{"code":"###### Welcome to Blockspring!\r\n###### To help you get started, below is a fully-commented sample function that prints out a simple welcome message.\r\n\r\n# require the blockspring package.\r\nrequire 'blockspring'\r\n\r\nblock = lambda do |request, response|\r\n    \r\n    # retrieve input parameters and assign to variables for convenience.\r\n    first_name = request.params[\"first_name\"]\r\n    age = request.params[\"age\"]\r\n    \r\n    # build our welcome message.\r\n    welcome = \"Hi! My name is #{first_name} and my age is #{age}\"\r\n\r\n    # add the message to the function's output.\r\n    response.addOutput \"intro\", welcome\r\n    \r\n    # return the output.\r\n\tresponse.end\r\nend\r\n\r\n# pass your function into Blockspring.define. tells blockspring what function to run.\r\nBlockspring.define(block)\r\n","conf":[{"type":"text","label":"First Name","name":"first_name","help_text":"Enter your first name.","default":"Paul"},{"type":"number","label":"Age","name":"age","help_text":"Enter your age.","default":26}]},"4":{"code":"//****** Welcome to Blockspring!\r\n//****** To help you get started, below is a fully-commented sample function that prints out a simple welcome message.\r\n\r\n// require the blockspring package.\r\nvar blockspring = require('blockspring');\r\n\r\n// pass your function into blockspring.define. tells blockspring what function to run.\r\nblockspring.define(function(request, response) {\r\n    \r\n    // retrieve input parameters and assign to variables for convenience.\r\n    var first_name = request.params[\"first_name\"];\r\n    var age = request.params[\"age\"];\r\n    \r\n    // build our welcome message.\r\n    var welcome = \"Hi! My name is \" + first_name + \" and my age is \" + age;\r\n\t\r\n    // add the message to the function's output.\r\n\tresponse.addOutput('intro', welcome);\r\n    \r\n    // return the output.\r\n\tresponse.end();\r\n});","conf":[{"type":"text","label":"First Name","name":"first_name","help_text":"Enter your first name.","default":"Paul"},{"type":"number","label":"Age","name":"age","help_text":"Enter your age.","default":26}]},"5":{"code":"\u003c?php\r\n###### Welcome to Blockspring!\r\n###### To help you get started, below is a fully-commented sample function that prints out a simple welcome message.\r\n\r\n# require the blockspring package.\r\nrequire('blockspring.php');\r\n\r\n# pass your function into Blockspring::define. tells blockspring what function to run.\r\nBlockspring::define(function ($request, $response) {\r\n    \r\n    # retrieve input parameters and assign to variables for convenience.\r\n    $first_name = $request-\u003eparams[\"first_name\"];\r\n    $age = $request-\u003eparams[\"age\"];\r\n\r\n    # build our welcome message.\r\n    $welcome = \"Hi! My name is \" . $first_name . \" and my age is \". $age;\r\n    \r\n    # add the message to the function's output.\r\n\t$response-\u003eaddOutput(\"intro\", $welcome);\r\n\r\n    # return the output.\r\n\t$response-\u003eend();\r\n});\r\n","conf":[{"type":"text","label":"First Name","name":"first_name","help_text":"Enter your first name.","default":"Paul"},{"type":"number","label":"Age","name":"age","help_text":"Enter your age.","default":26}]}};gon.cache_time=0;gon.share_url="https://open.blockspring.com/bs/sentiment-analysis-from-text-with-alchemyapi?share=";gon.script_run_id=null;gon.secrets={"94":{"id":94,"name":"AlchemyAPI Key","variable_name":"alchemy_api_key","description":"1) Register to get a free AlchemyAPI key: http://www.alchemyapi.com/api/register.html.\r\n\r\n2) AlchemyAPI will send the key to your email. It may take a few minutes.\r\n\r\n3) Once you get your key, paste into Blockspring.","placeholder_value":"","html_description":"\u003cp\u003e1) Register to get a free AlchemyAPI key: \u003ca rel=\"nofollow\" href=\"http://www.alchemyapi.com/api/register.html\" target=\"_blank\"\u003ehttp://www.alchemyapi.com/api/register.html\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003e2) AlchemyAPI will send the key to your email. It may take a few minutes.\u003c/p\u003e\n\n\u003cp\u003e3) Once you get your key, paste into Blockspring.\u003c/p\u003e\n"}};gon.params=[{"label":"Text","name":"text","type":"area","help_text":"A body of text.","placeholder":"OK, first off: a lion? Swimming in the ocean? Lions don’t like water.","optional":false,"default":"OK, first off: a lion? Swimming in the ocean? Lions don’t like water. If you placed it near a river or some sort of fresh water source, that make sense. But you find yourself in the ocean, 20 foot wave, I’m assuming off the coast of South Africa, coming up against a full grown 800 pound tuna with his 20 or 30 friends, you lose that battle, you lose that battle 9 times out of 10."},{"label":"Score Only","name":"score_only","type":"boolean","help_text":"Only return sentiment strength of text.","placeholder":"","optional":true,"group":null,"options":null,"default":true}];gon.api_url="https://run.blockspring.com/api_v2/blocks/sentiment-analysis-from-text-with-alchemyapi?";gon.block_title="Sentiment Analysis from Text";gon.api_key=null;gon.run_base_url="https://run.blockspring.com/api_v2/blocks/";
//]]>
</script> 
  <script type="text/javascript">
          !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.0.1";
          analytics.load("6AvWGuJAC6AB9B7wgyN9Uz62lIb2qjvf");
          analytics.page()
          }}();
        </script> 
  <!-- Optimizely, must come before Google Analytics for GA custom dimensions to work --> 
  <script src="//cdn.optimizely.com/js/3139421277.js"></script> 
  <!-- Google Analytics --> 
  <script>
          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
          })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

          window.ga && ga('create', 'UA-52871603-1', 'auto');

          if (gon.user) {
            window.ga && ga('set', '&uid', gon.user.id);
            window.ga && ga('set', 'cus_not_id', gon.user.id)
          }

          window.ga && ga('send', 'pageview');
        </script> 
  <!--
        Google Analytics Server Side Goals:

        This lets us push arbitrary URLs to Google Analytics goals by setting flash[:analytics] = "/some/url".

        Useful when you want to log server events like "sign up" or "block created".
      --> 
  <!-- Heap Analytics  --> 
  <script type="text/javascript">
          var heapId = "2552837943";

          window.heap=window.heap||[],heap.load=function(e,t){window.heap.appid=e,window.heap.config=t=t||{};var n=t.forceSSL||"https:"===document.location.protocol,a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src=(n?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";var o=document.getElementsByTagName("script")[0];o.parentNode.insertBefore(a,o);for(var r=function(e){return function(){heap.push([e].concat(Array.prototype.slice.call(arguments,0)))}},p=["clearEventProperties","identify","setEventProperties","track","unsetEventProperty"],c=0;c<p.length;c++)heap[p[c]]=r(p[c])};
        heap.load(heapId);

        if (gon.user) {
          heap.identify({'handle': gon.user.id})
        };
      </script> 
  <script>
        if (gon.user) {
          window.analytics && analytics.identify(gon.user.id, {
            email: gon.user.email
          });
        }
      </script> 
  <meta property="description" content="Work with Alchemy API in Excel, Google Sheets, Tableau and Slack. Get sentiment of text."> 
  <meta property="og:title" content="Sentiment Analysis from Text"> 
  <meta property="og:description" content="Get sentiment of text."> 
  <script src="/assets/application-317eaf64f9196d02e4f64914503fbddf6a91a5d549fc241086343f8925631c9f.js"></script> 
  <script src="/assets/blocks_show-86da42e2dd2f5985bbd09ce87b22f048d16accf814447014035d58c1a5f09ed4.js"></script> 
  <script>
        $(document).ready(function(){
          // API connect buttons
          $('.ga-click-event').click(function(){
            console.log('logging ga event');
            window.ga && ga(
              'send',
              'event',
              $(this).attr('data-ga-event-category'),
              $(this).attr('data-ga-event-action'),
              $(this).attr('data-ga-event-label')
            );
          });
        });
      </script> 
  <meta name="csrf-param" content="authenticity_token"> 
  <meta name="csrf-token" content="azbiZtI2Sg+0BNtfhpr9Tb0cywWNlPibp7+CuhPK7lpPV/LY6gxZClyPiL/qtlkjax6Jeseq4524+wbKPH6QhQ=="> 
 </head> 
 <body> 
  <nav class="navbar navbar-default TopNav" id="topNav" role="navigation"> 
   <!-- Brand and toggle get grouped for better mobile display --> 
   <div class="container"> 
    <div class="navbar-header"> 
     <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="navbar-brand" href="https://www.blockspring.com/"> <img height="17" src="/assets/leaf-20c4a896be6e8200c5fb3354c95fb30c7cd502554441539a57ba4a8f12c7e543.png" alt="Leaf"> Blockspring </a> 
    </div> 
    <div class="hidden-xs"> 
     <div class="navbar-form navbar-left"> 
      <form class="js-search-form"> 
       <div class="form-group"> 
        <div class="input-group"> 
         <input type="text" class="form-control" placeholder="Search" id="SearchTerm" value=""> 
         <span class="input-group-btn"> <button type="submit" class="btn btn-default" id="SearchSubmit"><i class="glyphicon glyphicon-search"></i></button> </span> 
        </div> 
       </div> 
      </form> 
     </div> 
     <script>
        $('.js-search-form').submit(function(e){
          e.preventDefault();
          var term = $('#SearchTerm').val();
          window.location = "/search/blocks?q=" + encodeURI(term);
        })
      </script> 
     <div class="TopNav-AuthButtonContainer pull-right"> 
      <a class="navbar-btn btn btn-default" href="https://open.blockspring.com/users/sign_in">Log in</a> 
      <a class="navbar-btn btn btn-primary" href="https://open.blockspring.com/users/sign_up">Sign up</a> 
     </div> 
     <ul class="nav navbar-nav navbar-right"> 
      <li class=""> <a href="/templates">Templates</a> </li> 
      <li class=""> <a href="https://open.blockspring.com/browse">Connections</a> </li> 
      <li> <a href="/apps">Apps</a> </li> 
      <li class="dropdown hidden-sm"> <a href="#" class="dropdown-toggle" data-toggle="dropdown"> Help <span class="caret"></span> </a> 
       <ul class="dropdown-menu"> 
        <li class="dropdown-header">Getting Started</li> 
        <li><a href="https://www.blockspring.com/help/install_plugins">Installing Blockspring</a></li> 
        <li><a href="https://blockspring-help.readme.io/v1.0">Reference</a></li> 
       </ul> </li> 
     </ul> 
    </div> 
   </div> 
   <!-- Mobile only --> 
   <div class="visible-xs"> 
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1"> 
     <ul class="nav navbar-nav"> 
      <li><a href="/templates">Templates</a></li> 
      <li><a href="https://open.blockspring.com/browse">Connections</a></li> 
      <li><a href="https://open.blockspring.com/users/sign_in">Sign in</a></li> 
      <li><a href="https://open.blockspring.com/users/sign_up">Sign up</a></li> 
      <li><a href="https://www.blockspring.com/docs">Help</a></li> 
     </ul> 
    </div> 
   </div> 
  </nav> 
  <!-- Share with Team modal --> 
  <div class="modal fade invite-team-members-modal"> 
   <div class="modal-dialog"> 
    <div class="modal-content"> 
     <div class="modal-header"> 
      <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button> 
      <h4 class="modal-title">Invite Team Members</h4> 
     </div> 
     <form html="{:class=>&quot;js-user-invite-form&quot;}" action="/user_invites" accept-charset="UTF-8" method="post">
      <input name="utf8" type="hidden" value="?">
      <input type="hidden" name="authenticity_token" value="VTpQBnYQ23PFxmlKl/kmAdB01aUIDn+jmcXOE/OziOFxW0C4TirIdi1NOqr71YJvBnaX2kIwZKWGgUpj3Af2Pg=="> 
      <div class="modal-body"> 
       <div class="form-group"> 
        <label>Email Addresses <small class="text-muted"><i>(Separate with commas, semicolons, or new lines.)</i></small></label> 
        <textarea name="users_to_invite" id="new_user_emails" class="form-control" rows="5"></textarea> 
       </div> 
      </div> 
      <div class="modal-footer"> 
       <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button> 
       <input type="submit" name="commit" value="Invite" class="btn btn-primary"> 
      </div> 
     </form> 
    </div> 
   </div> 
  </div> 
  <script>
$('.js-invite-team-members-button').click(function(){
  window.ga && ga('send', 'event', 'user invite flow', 'clicked user invite in dropdown');
});

$('.js-user-invite-form').submit(function(){
  window.ga && ga('send', 'event', 'user invite flow', 'submitted invite form');
});
</script> 
  <!-- A flash notice is a one-time message for succesful actions. --> 
  <!-- A flash error is a one-time message for unsuccesful actions. --> 
  <!-- A flash error is a one-time message for unsuccesful actions. --> 
  <!-- A megaphone is a persistent message. For site-wide announcements, or a
  required user action like confirming email. --> 
  <div class="modal fade" id="feedbackModal" tabindex="-1"> 
   <div class="modal-dialog"> 
    <div class="modal-content"> 
     <div class="modal-header"> 
      <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button> 
      <h4 class="modal-title">Want change? Tell us.</h4> 
     </div> 
     <form id="feedbackForm" action="/feedback/" accept-charset="UTF-8" method="post">
      <input name="utf8" type="hidden" value="?">
      <input type="hidden" name="authenticity_token" value="EovKdLvncHWo/Il2+GtXv2Wf78SHANW8za5j9hynlW826trKg91jcEB32paUR/PRs52tu80+zrrS6ueGMxPrsA=="> 
      <div class="modal-body"> 
       <input name="authenticity_token" type="hidden" value="qxxZLnJbtrmzR0xhyfa2bg3a8p/OhVPZrZViZzbtKFOPfUmQSmGlvFvMH4Gl2hIA29iw4IS7SN+y0eYXGVlWjA=="> 
       <div class="form-group"> 
        <label>How can we change?</label> 
        <select name="feedback_type" class="form-control"> <option>I want you to support a new module, library, or gem</option> <option>I'd like to use this at my company</option> <option>I want you to support a new programming language</option> <option>I have an awesome idea for you</option> <option>I found a bug</option> <option>Other</option> </select> 
       </div> 
       <div class="form-group"> 
        <label>Please, tell us more...</label> 
        <textarea rows="4" name="more_info" class="form-control" placeholder="I have so much to tell you"></textarea> 
       </div> 
       <div class="form-group"> 
        <label>How do we let you know we've listened?</label> 
        <input type="text" name="email" class="form-control emailFeedbackInput" placeholder="awesome@gmail.com"> 
       </div> 
      </div> 
      <div class="modal-footer"> 
       <button type="button" class="btn btn-default" data-dismiss="modal">Close</button> 
       <input type="submit" value="Send Feedback" class="btn btn-primary"> 
      </div> 
     </form> 
    </div>
    <!-- /.modal-content --> 
   </div>
   <!-- /.modal-dialog --> 
  </div>
  <!-- /.modal --> 
  <!-- Modal --> 
  <div class="modal fade" id="signUpModal" tabindex="-1" role="dialog"> 
   <div class="modal-dialog"> 
    <div class="modal-content"> 
     <div class="modal-header"> 
      <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button> 
      <h4 class="modal-title text-center" id="myModalLabel">Welcome!</h4> 
     </div> 
     <div class="modal-body"> 
      <div class="center text-center authSeparator"> 
       <hr> 
       <span style="display: inline-block; padding: 0 10px; margin: 10px; background: white; ">Sign up with</span> 
      </div> 
      <div class="text-center"> 
       <a class="btn btn-primary" id="githubBtn" href="/users/auth/github"> <img width="20" src="/assets/github-mark-light-cd853a21a44d3c6a91c6ecaae68e90830f73c6089204c6f9f922e59c1eebe834.png" alt="Github mark light"> <span>&nbsp; GitHub</span> </a> 
      </div> 
      <div class="center text-center authSeparator"> 
       <hr> 
       <span style="display: inline-block; padding: 0 10px; margin: 10px; background: white; ">or</span> 
      </div> 
      <div class="errors hidden"> 
       <div class="alert alert-danger"></div> 
      </div> 
      <form id="sign_up_user" class="new_user" action="/users.json" accept-charset="UTF-8" data-remote="true" method="post">
       <input name="utf8" type="hidden" value="?"> 
       <div class="form-group"> 
        <label for="user_email">Email</label>
        <br> 
        <input autofocus class="form-control" type="text" value="" name="user[email]" id="user_email"> 
       </div> 
       <div class="form-group"> 
        <label for="user_username">Username</label>
        <br> 
        <input autofocus class="form-control" type="text" name="user[username]" id="user_username"> 
       </div> 
       <div class="form-group"> 
        <label for="user_password">Password</label>
        <br> 
        <input autocomplete="off" class="form-control" type="password" name="user[password]" id="user_password"> 
       </div> 
       <div> 
        <input type="submit" name="commit" value="Sign up" class="btn btn-success instagramBtn"> 
       </div> 
       <br> 
      </form> 
      <p class="text-muted"> <small> Signing up signifies that you've read and agree to our <a href="/about/tos" target="_blank">Terms of Service</a> and <a href="/about/privacy" target="_blank">Privacy Policy</a>. </small> </p> 
     </div> 
     <div class="modal-footer">
       Already a member? 
      <a href="/users/sign_in">Sign in!</a> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="ContentPage"> 
   <!-- TODO: copy from _newsletter_banner condition for showing if not a member --> 
   <section class="NewsletterBanner-Container"> 
    <div class="container"> 
     <div class="row"> 
      <div class="col-sm-12 hidden-xs"> 
       <div class="NewsletterBanner-InnerContainer flex flex-row"> 
        <span class="NewsletterBanner-Message"> Blockspring lets you get data from web services into the tools you use every day. </span> 
       </div>
       <!-- InnerContainer --> 
      </div> 
      <div class="visible-xs"> 
       <div class="col-sm-12"> 
        <span class="NewsletterBanner-Message"> Blockspring lets you get data from web services into the tools you use every day. </span> 
       </div> 
      </div> 
     </div> 
    </div> 
   </section> 
   <header class="BlockShowSection BlockHeader"> 
    <div class="container"> 
     <div class="row"> 
      <div class="col-sm-12 text-center"> 
       <div class="BlockShowSection-SubSection"> 
        <div class="BlockShowSection-TitleTagIconsContainer"> 
         <div class="BlockShowSection-TagIcon"> 
          <div class="TagIcon-OuterContainer"> 
           <div class="TagIcon-InnerContainer--HasImage" style="background-image: url('https://static.blockspring.com/tag-icons/alchemy.jpg');"></div> 
          </div> 
         </div> 
         <img class="BlockShowSection-TagIcon" src="/assets/tool_group_icon-e074984ebf914f592719b6e84b3986f852149d5f861fca9953d049eb2af26f59.png" alt="Tool group icon"> 
        </div> 
       </div> 
       <div class="BlockShowSection-SubSection--QuarterPadding"> 
        <h2 class="BlockShowSection-SubTitle BlockShowSection-SubTitle--SmallPadding"> <a href="/tags/304-alchemy-api"> Alchemy API </a> </h2> 
       </div> 
       <div class="BlockShowSection-SubSection"> 
        <h1 class="BlockShowSection-Title"> Sentiment Analysis from Text 
         <!-- Private to org icon --> </h1> 
       </div> 
       <div class="BlockShowSection-SubSection hidden-xs"> 
        <!-- Add to organization button --> 
        <!-- Edit button --> 
       </div>
       <!-- BlockHeader-Buttons --> 
      </div> 
     </div> 
     <div class="row"> 
      <div class="col-lg-8 col-lg-offset-2"> 
       <p>Get sentiment of text.</p> 
       <p>Negative scores are negative sentiment, 0 is neutral, and positive are positive.</p> 
       <p>Also, if "mixed" = 1, then there are traces of both positive and negative sentiment in the text.</p> 
      </div> 
     </div> 
    </div> 
   </header> 
   <!-- Setup instructions --> 
   <section class="BlockShowSection BlockShowSection--GreyBackground"> 
    <div class="container"> 
     <div class="BlockShowSection-SubSection"> 
      <h2 class="BlockShowSection-SubTitle text-center"> Access <strong>Alchemy API - Sentiment Analysis from Text</strong> from your tools </h2> 
     </div> 
     <div class="row"> 
      <div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1"> 
       <!-- TODO: only show log-in button if its an org? --> 
       <div class="BlockShowSection-SubSection"> 
        <div class="text-center"> 
         <a class="btn btn-primary btn-lg" href="https://open.blockspring.com/users/sign_up?block=sentiment-analysis-from-text-with-alchemyapi">Sign Up</a> 
         <p>or <a href="https://open.blockspring.com/users/sign_in?block=sentiment-analysis-from-text-with-alchemyapi">Log in</a></p> 
        </div> 
       </div> 
       <div class="BlockShowSection-SubSection"> 
        <div class="BlockSetupGuide"> 
         <!-- Connect your services --> 
         <div class="BlockSetupGuide-Item"> 
          <div class="BlockSetupGuide-Header clearfix BlockSetupGuide-Header--Disabled"> 
           <span>Step 1: Connect your services</span> 
          </div> 
         </div> 
         <!-- Choose your tool --> 
         <div class="BlockSetupGuide-Item"> 
          <div class="BlockSetupGuide-Header clearfix BlockSetupGuide-Header--Disabled"> 
           <span>Step 2: Choose your tool</span> 
           <span class="pull-right BlockSetupGuide-ChangeTool hidden"> <span class="text-success">Tool: <span class="BlockSetupGuide-ToolName"></span></span> <a class="BlockSetupGuide-ChangeToolLink"><small>Change Tool</small></a> </span> 
          </div> 
         </div> 
         <!-- Install --> 
         <div class="BlockSetupGuide-Item"> 
          <div class="BlockSetupGuide-Header clearfix BlockSetupGuide-Header--Disabled"> 
           <span>Step 3: Install Blockspring</span> 
          </div> 
          <div class="BlockSetupGuide-Content BlockSetupGuide-InstallContent hidden "> 
           <div class="BlockSetupGuide-InstallToolInstructions hidden"> 
            <div class="BlockSetupGuide-InstallToolInstructionsItem hidden hidden" data-toggle-tool="3"> 
             <h4>Install Blockspring for Excel</h4> 
             <ul class="list-unstyled"> 
              <li> <p> <strong>Step 1: </strong> Download the Excel for Windows Add-On. </p> <p> <a href="https://s3.amazonaws.com/downloads.blockspring.com/Blockspring+for+Excel+AddIn.msi" data-ga-event-category="onboarding_flow" data-ga-event-action="Open tool add-on button clicked" data-ga-event-label="{type: 'Excel AddIn', not_id: null}" class="btn btn-primary"> Download Add-On </a> </p> </li> 
              <li> <p> <strong>Step 2: </strong> Run the installer (Blockspring for Excel AddIn.msi) </p> </li> 
              <li> <p> <strong>Step 3: </strong> Restart Excel for Windows </p> </li> 
              <li> <p> <strong>Step 4: </strong> In Excel's top toolbar, click the BLOCKSPRING tab. Sign in to get started. </p> </li> 
             </ul> 
             <br> 
             <div> 
              <button data-ga-event-category="onboarding_flow" data-ga-event-action="Tool Continue button clicked" data-ga-event-label="{type: 'Excel AddIn', not_id: null}" class="btn btn-success js-finish-install-step-btn">Complete</button> 
             </div> 
            </div> 
            <div class="BlockSetupGuide-InstallToolInstructionsItem hidden hidden" data-toggle-tool="2"> 
             <h4>Install Blockspring for Google Sheets</h4> 
             <ul class="list-unstyled"> 
              <li> <p> <strong>Step 1: </strong> Visit the Google Sheets Add-In store page </p> <p> <a href="https://chrome.google.com/webstore/detail/blockspring/aihldeahgcpbpmimkdpkafaedhbmfhoh?hl=en-US" data-ga-event-category="onboarding_flow" data-ga-event-action="Open tool add-on button clicked" data-ga-event-label="{type: 'GoogleSheets AddIn', not_id: null}" class="btn btn-primary" target="_blank">View Add-In</a> </p> </li> 
              <li> <p> <strong>Step 2: </strong> Click the blue "+ Free" button to add Blockspring for Google Sheets to your account. </p> </li> 
              <li> <p> <strong>Step 3: </strong> In the new sheet. Click the Add-Ons menu -&gt; Blockspring -&gt; Open Blockspring </p> </li> 
              <li> <p> <strong>Step 4: </strong> Login to your Blockspring account. </p> </li> 
             </ul> 
             <br> 
             <div> 
              <button data-ga-event-category="onboarding_flow" data-ga-event-action="Tool Continue button clicked" data-ga-event-label="{type: 'GoogleSheets AddIn', not_id: not_id: null}" class="btn btn-success js-finish-install-step-btn">Continue</button> 
             </div> 
            </div> 
            <div class="BlockSetupGuide-InstallToolInstructionsItem hidden hidden" data-toggle-tool="5">
              This block isn't compatible with Tableau since it doesn't return tabular data. 
            </div> 
            <div class="text-center BlockSetupGuide-InstallToolInstructionsItem hidden hidden" data-toggle-tool="4"> 
             <p>Create a Slack command for Sentiment Analysis from Text</p> 
             <a href="/slack-command/new/sentiment-analysis-from-text-with-alchemyapi" class="btn btn-primary">Create Slack Command</a> 
            </div> 
            <div class="BlockSetupGuide-InstallToolInstructionsItem hidden hidden" data-toggle-tool="7"> 
             <h4>Install Blockspring for Bubble</h4> 
             <ul class="list-unstyled"> 
              <li> <p> <strong>Step 1: </strong> Go to your <a href="https://bubble.is/home" target="_blank">Bubble dashboard</a> </p> </li> 
              <li> <p> <strong>Step 2: </strong> Create a new app or select an existing app. </p> </li> 
              <li> <p> <strong>Step 3: </strong> Click Plugins in the left sidebar in your Bubble editor. </p> </li> 
              <li> <p> <strong>Step 4: </strong> If you don't already have Blockspring installed, click Add Plugins and Blockspring (should be at the top). </p> </li> 
              <li> <p> <strong>Step 5: </strong> Click to Authenticate with Blockspring to connect your account with your Bubble app. </p> </li> 
             </ul> 
             <br> 
             <div> 
              <button data-ga-event-category="onboarding_flow" data-ga-event-action="Tool Continue button clicked" data-ga-event-label="{type: 'Bubble', not_id: not_id: null}" class="btn btn-success js-finish-install-step-btn">Continue</button> 
             </div> 
            </div> 
            <div class="BlockSetupGuide-InstallToolInstructionsItem hidden hidden" data-toggle-tool="6"> 
             <h4>Install Blockspring for Code</h4> 
             <section class="useInCode"> 
              <br> 
              <div class="btn-group langNav"> 
               <label class="btn btn-primary btn-sm active" data-lang="curl"> Curl </label> 
               <label class="btn btn-primary btn-sm" data-lang="node"> Node </label> 
               <label class="btn btn-primary btn-sm" data-lang="php"> PHP </label> 
               <label class="btn btn-primary btn-sm" data-lang="python"> Python </label> 
               <label class="btn btn-primary btn-sm" data-lang="ruby"> Ruby </label> 
               <label class="btn btn-primary btn-sm" data-lang="r"> R </label> 
               <label class="btn btn-primary btn-sm" data-lang="jquery"> jQuery </label> 
               <label class="btn btn-primary btn-sm" data-lang="webhook"> Webhook </label> 
              </div> 
              <br> 
              <br> 
              <div class="tab-content langTabs"> 
               <div class="tab-pane active curl">
                 No installation needed. 
               </div> 
               <div class="tab-pane node">
                 To install the 
                <b>blockspring</b> module run 
                <code>npm install blockspring</code> from the command line. 
               </div> 
               <div class="tab-pane php">
                 To install the 
                <b>blockspring</b> package, simply 
                <a href="https://raw.githubusercontent.com/blockspring/blockspring-php/master/blockspring.php" download>download it</a> to your working directory. 
               </div> 
               <div class="tab-pane python">
                 To install the 
                <b>blockspring</b> package run 
                <code>pip install blockspring</code> from the command line. 
               </div> 
               <div class="tab-pane ruby">
                 To install the 
                <b>blockspring</b> gem run 
                <code>gem install blockspring</code> from the command line. 
               </div> 
               <div class="tab-pane r">
                 To install the 
                <b>blockspring</b> package run 
                <code>Rscript -e "r &lt;- getOption('repos'); r['CRAN'] &lt;- 'http://cran.us.r-project.org'; options(repos = r); install.packages('devtools'); library('devtools'); install_github('blockspring/blockspring.R')"</code> from the command line. 
               </div> 
               <div class="tab-pane jquery">
                 The 
                <b>blockspring.js</b> library can also be 
                <a href="https://raw.githubusercontent.com/blockspring/blockspring-javascript/master/blockspring.js" download>downloaded</a> from GitHub. 
               </div> 
               <div class="tab-pane webhook">
                 No installation needed. 
               </div> 
              </div> 
             </section> 
             <br> 
             <div> 
              <button data-ga-event-category="onboarding_flow" data-ga-event-action="Tool Continue button clicked" data-ga-event-label="{type: 'Code', not_id: not_id: null}" class="btn btn-success js-finish-install-step-btn">Continue</button> 
             </div> 
            </div> 
           </div> 
          </div> 
         </div> 
         <div class="BlockSetupGuide-UseStep"> 
          <!-- Access button for when no tool is selected --> 
          <div data-toggle-tool="" class=""> 
           <button class="btn btn-primary btn-block js-access-btn disabled" disabled> Use </button> 
          </div> 
          <div data-toggle-tool="3" class="hidden"> 
           <button class="btn btn-primary btn-block js-access-btn disabled" disabled> Use in Excel </button> 
           <br> 
           <div class="alert alert-success js-btn-activated-message hidden">
             Success! Open or return to your Blockspring plugin to use Sentiment Analysis from Text. 
           </div> 
          </div> 
          <div data-toggle-tool="2" class="hidden"> 
           <button class="btn btn-primary btn-block js-access-btn disabled" disabled> Use in Google Sheets </button> 
           <br> 
           <div class="alert alert-success hidden js-btn-activated-message">
             Success! Open or return to your Blockspring plugin to use Sentiment Analysis from Text. 
           </div> 
          </div> 
          <!-- Tableau --> 
          <div data-toggle-tool="5" class="hidden"> 
           <div class="alert alert-warning">
             This block isn't compatible with Tableau since it doesn't return tabular data. 
            <a class="BlockSetupGuide-ChangeToolLink">Choose a different tool.</a> 
           </div> 
          </div> 
          <!-- Slack --> 
          <div data-toggle-tool="4" class="hidden"> 
           <div data-toggle-tool="4" class="completeActionContainer alert alert-success "> 
            <p><b>Slack commands:</b></p> 
            <br> 
            <p> You haven't configured any Slack commands yet. </p> 
            <br> 
            <a href="/slack-command/new/sentiment-analysis-from-text-with-alchemyapi" class="btn btn-primary">Create Slack Command</a> 
           </div> 
           <div data-toggle-tool="4" class="incompleteActionContainer well "> 
            <p>Finish the setup steps to use Sentiment Analysis from Text in Slack.</p> 
           </div> 
          </div> 
          <!-- Bubble --> 
          <div data-toggle-tool="7" class="hidden"> 
           <button class="btn btn-primary btn-block js-access-btn disabled" disabled> Use in Bubble </button> 
           <br> 
           <div class="alert alert-success hidden js-btn-activated-message">
             Success! Open or return to your Bubble app, go to the Blockspring plugin, and click 'Install block from Blockspring'. 
           </div> 
          </div> 
          <!-- Code --> 
          <div data-toggle-tool="6" class="hidden"> 
           <div data-toggle-tool="6" class="completeActionContainer alert alert-success "> 
            <p> </p>
            <section class="useInCode"> 
             <br> 
             <div class="btn-group langNav"> 
              <label class="btn btn-primary btn-sm active" data-lang="curl"> Curl </label> 
              <label class="btn btn-primary btn-sm" data-lang="node"> Node </label> 
              <label class="btn btn-primary btn-sm" data-lang="php"> PHP </label> 
              <label class="btn btn-primary btn-sm" data-lang="python"> Python </label> 
              <label class="btn btn-primary btn-sm" data-lang="ruby"> Ruby </label> 
              <label class="btn btn-primary btn-sm" data-lang="r"> R </label> 
              <label class="btn btn-primary btn-sm" data-lang="jquery"> jQuery </label> 
              <label class="btn btn-primary btn-sm" data-lang="webhook"> Webhook </label> 
             </div> 
             <br> 
             <br> 
             <div class="tab-content langTabs"> 
              <div class="tab-pane active curl"> 
               <pre>curl -H "Content-Type: application/json" -d "{ \"text\": <span data-param="text"></span>, \"score_only\": <span data-param="score_only">false</span>, \"alchemy_api_key\": <span data-param="alchemy_api_key"></span> }" "https://run.blockspring.com/api_v2/blocks/sentiment-analysis-from-text-with-alchemyapi?"</pre> 
               <p> Run this function with a POST request to Blockspring. </p> 
              </div> 
              <div class="tab-pane node"> 
               <pre>var blockspring = require("blockspring");

blockspring.runParsed("sentiment-analysis-from-text-with-alchemyapi", { "text": <span data-param="text"></span>, "score_only": <span data-param="score_only">false</span>, alchemy_api_key: <span data-param="alchemy_api_key"></span> }, function(res) {
  console.log(res.params);
});</pre> 
               <pre class="hidden">var request = require("request");

request.post({
  url: "https://run.blockspring.com/api_v2/blocks/sentiment-analysis-from-text-with-alchemyapi?",
  form: { "text": <span data-param="text"></span>, "score_only": <span data-param="score_only">false</span>, alchemy_api_key: <span data-param="alchemy_api_key"></span>}
},
function(err, response, body) {
  console.log(JSON.parse(body));
});</pre> 
               <p> Visit the <a href="/docs/nodejs-quickstart-run" target="_blank">node.js quickstart</a> to get started fast. </p> 
              </div> 
              <div class="tab-pane php"> 
               <pre class="hidden">&lt;?php
$url = 'https://run.blockspring.com/api_v2/blocks/sentiment-analysis-from-text-with-alchemyapi?';
$data = json_encode(array("text" =&gt; <span data-param="text"></span>, "score_only" =&gt; <span data-param="score_only">false</span>, "alchemy_api_key" =&gt; <span data-param="alchemy_api_key"></span>));

// use key 'http' even if you send the request to https://...
$options = array(
    'http' =&gt; array(
        'header'  =&gt; array("Accept: application/json", "Content-Type: application/json"),
        'method'  =&gt; 'POST',
        'content' =&gt; $data,
    ),
);

$context  = stream_context_create($options);
$result = file_get_contents($url, false, $context);

var_dump(json_decode($result));
?&gt;</pre> 
               <pre>&lt;?php
require('blockspring.php');

var_dump(Blockspring::runParsed("sentiment-analysis-from-text-with-alchemyapi", array("text" =&gt; <span data-param="text"></span>, "score_only" =&gt; <span data-param="score_only">false</span>, "alchemy_api_key" =&gt; <span data-param="alchemy_api_key"></span>))-&gt;params);</pre> 
               <p> Visit the <a href="/docs/php-quickstart-run" target="_blank">php quickstart</a> to get started fast. </p> 
              </div> 
              <div class="tab-pane python"> 
               <pre class="hidden">import json
import urllib2

req = urllib2.Request("https://run.blockspring.com/api_v2/blocks/sentiment-analysis-from-text-with-alchemyapi?")
req.add_header('Content-Type', 'application/json')

data = { "text": <span data-param="text"></span>, "score_only": <span data-param="score_only">False</span>, "alchemy_api_key": <span data-param="alchemy_api_key"></span>}

results = urllib2.urlopen(req, json.dumps(data)).read()

print json.loads(results)</pre> 
               <pre>import blockspring
import json

print blockspring.runParsed("sentiment-analysis-from-text-with-alchemyapi", { "text": <span data-param="text"></span>, "score_only": <span data-param="score_only">False</span>, "alchemy_api_key": <span data-param="alchemy_api_key"></span> }).params
</pre> 
               <p> Visit the <a href="/docs/python-quickstart-run" target="_blank">python quickstart</a> to get started fast. </p> 
              </div> 
              <div class="tab-pane ruby"> 
               <pre class="hidden">require 'rest_client'

response = RestClient.post 'https://run.blockspring.com/api_v2/blocks/sentiment-analysis-from-text-with-alchemyapi?', JSON.dump({ "text" =&gt; <span data-param="text"></span>, "score_only" =&gt; <span data-param="score_only">false</span>, "alchemy_api_key" =&gt; <span data-param="alchemy_api_key"></span> }), :content_type =&gt; :json

puts JSON.load(response)</pre> 
               <pre>require 'blockspring'

puts Blockspring.runParsed("sentiment-analysis-from-text-with-alchemyapi", { "text" =&gt; <span data-param="text"></span>, "score_only" =&gt; <span data-param="score_only">false</span>, "alchemy_api_key" =&gt; <span data-param="alchemy_api_key"></span> } ).params</pre> 
               <p> Visit the <a href="/docs/ruby-quickstart-run" target="_blank">ruby quickstart</a> to get started fast. </p> 
              </div> 
              <div class="tab-pane r"> 
               <pre class="hidden">require 'rest_client'

response = RestClient.post 'https://run.blockspring.com/api_v2/blocks/sentiment-analysis-from-text-with-alchemyapi?', JSON.dump({ "text" = <span data-param="text"></span>, "score_only" = <span data-param="score_only">FALSE</span>, "alchemy_api_key" = <span data-param="alchemy_api_key"></span> }), :content_type =&gt; :json

puts JSON.load(response)</pre> 
               <pre>library('blockspring')
library('rjson')

print(blockspringRunParsed("sentiment-analysis-from-text-with-alchemyapi", list( "text" = <span data-param="text"></span>, "score_only" = <span data-param="score_only">FALSE</span>, "alchemy_api_key" = <span data-param="alchemy_api_key"></span> ))$params)</pre> 
               <p> Visit the <a href="/docs/r-quickstart-run" target="_blank">r quickstart</a> to get started fast. </p> 
              </div> 
              <div class="tab-pane jquery"> 
               <pre>&lt;script src="https://code.jquery.com/jquery-1.10.1.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cdn.blockspring.com/blockspring.js"&gt;&lt;/script&gt;
&lt;script&gt;
  blockspring.runParsed("sentiment-analysis-from-text-with-alchemyapi", { "text": <span data-param="text"></span>, "score_only": <span data-param="score_only">false</span>, alchemy_api_key: <span data-param="alchemy_api_key"></span>}, { "api_key": "" }, function(res){
    console.log(res.params);
  })
&lt;/script&gt;</pre> 
               <p> Visit the <a href="/docs/javascript-quickstart-run" target="_blank">javascript quickstart</a> to get started fast. </p> 
              </div> 
              <div class="tab-pane webhook"> 
               <pre>https://run.blockspring.com/api_v2/blocks/sentiment-analysis-from-text-with-alchemyapi?</pre> 
               <p> Use this URL for webhooks. You'll want to make a POST request. </p> 
              </div> 
             </div> 
            </section> 
            <p></p> 
           </div> 
           <div data-toggle-tool="6" class="incompleteActionContainer well "> 
            <p>Finish the setup steps to use Sentiment Analysis from Text in Code.</p> 
           </div> 
          </div> 
         </div>
         <!-- BlockSetupGuide-UseStep --> 
        </div> 
       </div> 
      </div> 
     </div> 
    </div> 
   </section> 
   <!-- Media & data explorer --> 
   <section class="BlockShowSection BlockMoreInfoSection"> 
    <div class="BlockMoreInfoSection-TabsContainer"> 
     <a class="BlockMoreInfoSection-Tab active" data-toggle="js-demo-section">Demo</a> 
     <a class="BlockMoreInfoSection-Tab" data-toggle="js-data-explorer-section">Data Explorer</a> 
    </div> 
    <!-- Demo section --> 
    <div class="BlockMoreInfoSection-SubSection BlockMoreInfoSection-DemoSection js-demo-section container"> 
     <div class="row"> 
      <div class="col-sm-12"> 
       <br> 
       <p class="text-center">See how Blockspring lets you access <strong>Alchemy API - Sentiment Analysis from Text</strong> in a spreadsheet.</p> 
       <br> 
       <img src="https://static.blockspring.com/media/171.gif" class="BlockMoreInfoSection-DemoGif"> 
      </div> 
     </div> 
    </div> 
    <!-- Data Explorer section --> 
    <div class="BlockMoreInfoSection-SubSection BlockMoreInfoSection-DataExplorerSection js-data-explorer-section container hidden"> 
     <div class="row"> 
      <div class="col-sm-12"> 
       <br> 
       <p class="text-center">You can preview <strong>Alchemy API - Sentiment Analysis from Text</strong> before accessing it from your tools. </p> 
       <br> 
       <section id="testRun" class="BlockTryIt-OuterContainer"> 
        <form id="userInputForm" class="form BlockTryIt-Form" action="/blocks/build_user_inputs" accept-charset="UTF-8" data-remote="true" method="post">
         <input name="utf8" type="hidden" value="?"> 
         <input type="hidden" name="user_input_types" id="user_input_types"> 
         <div> 
          <label>AlchemyAPI Key</label> 
          <span data-secret-id="94" class="pull-right secret-settings-prompt hidden"> <span class="glyphicon glyphicon-ok text-success"></span> </span> 
         </div> 
         <div class="form-group"> 
          <div data-secret-id="94" data-ga-event-category="API Connect" , data-ga-event-action="Connect button click" data-ga-event-label="{type: 'secret', id: 94, name: 'AlchemyAPI Key', not_id: null}" class="ga-click-event set-secret-value-link-wrapper "> 
           <a href="#" class="btn btn-default set-secret-value-link" data-secret-id="94">Set Value</a> 
          </div> 
         </div> 
         <div class="form-group   " data-param-name="text"> 
          <label>Text *</label> 
          <span class="glyphicon glyphicon-info-sign pull-right" data-toggle="tooltip" data-title="A body of text."></span> 
          <textarea type="area" class="form-control" data-type="area" name="_BS_user_inputs[text]" placeholder="OK, first off: a lion? Swimming in the ocean? Lions don’t like water.">OK, first off: a lion? Swimming in the ocean? Lions don’t like water. If you placed it near a river or some sort of fresh water source, that make sense. But you find yourself in the ocean, 20 foot wave, I’m assuming off the coast of South Africa, coming up against a full grown 800 pound tuna with his 20 or 30 friends, you lose that battle, you lose that battle 9 times out of 10.</textarea> 
         </div> 
         <div class="form-group   js-optional-param hidden" data-param-name="score_only"> 
          <label>Score Only </label> 
          <span class="glyphicon glyphicon-info-sign pull-right" data-toggle="tooltip" data-title="Only return sentiment strength of text."></span> 
          <input type="checkbox" class="form-control" data-type="checkbox" name="_BS_user_inputs[score_only]" checked disabled> 
         </div> 
         <div> 
          <select id="optional-parameter-selctor" multiple> <option value="score_only" data-is-param-group="false">Score Only</option> </select> 
         </div> 
         <script>
      $(document).ready(function() {
        $('#optional-parameter-selctor').multiselect({
          onChange: function(option, checked, select) {
            // If option == undefined, it's select all
            $('.js-optional-param').addClass('hidden').find('input').prop('disabled', true);

            $('#optional-parameter-selctor option[data-is-param-group="false"]:selected').map(function(a, item){
              $('.js-optional-param[data-param-name="' + $(item).val() + '"]').removeClass('hidden').find('input').prop('disabled', false);
            });

            $('.js-optional-param-group').addClass('hidden').find('input').prop('disabled', true);
            $('#optional-parameter-selctor option[data-is-param-group="true"]:selected').map(function(a, item){
              $('.js-optional-param-group[data-param-group="' + $(item).val() + '"]').removeClass('hidden').find('input').prop('disabled', false);
            });
          },
          onSelectAll: function(){
            console.log('all selected');
          },
          buttonClass: 'btn btn-primary btn-block',
          buttonWidth: '100%',
          buttonText: function(){ return 'Choose optional parameters' },
          includeSelectAllOption: true,
          enableFiltering: true,
          enableCaseInsensitiveFiltering: true
        });
      });
    </script> 
         <button class="btn btn-success btn-block BlockTryIt-SubmitBtn" id="submit"> <i class="glyphicon glyphicon-play"></i> Run </button> 
        </form> 
        <div class="BlockTryIt-ResultsOuterContainer"> 
         <h1 class="text-center resultsPlaceholder">Result</h1> 
         <h1 class="text-center resultsLoading hidden"> 
          <div class="progress"> 
           <div class="progress-bar progress-bar-striped active" role="progressbar" style="width: 100%"> 
           </div> 
          </div> </h1> 
         <div class="resultsContainer hidden"> 
          <div style="margin-bottom: 5px;"> 
           <a class="showRawResultsBtn hidden"> Show raw results </a> 
           <a class="hideRawResultsBtn hidden"> Hide raw results </a> 
          </div> 
          <div class="results"> 
           <pre class="response hidden alert alert-info"></pre> 
           <pre class="errors alert alert-danger hidden"></pre> 
           <pre class="data alert alert-success hidden"></pre> 
           <div class="table hidden"></div> 
           <div class="files hidden"></div> 
          </div> 
         </div> 
        </div> 
       </section> 
       <!-- Modal --> 
       <div class="modal fade" id="setSecretValueModal"> 
        <div class="modal-dialog"> 
         <div class="modal-content"> 
          <div class="modal-header"> 
           <h4 class="modal-title" id="secretModalLabel"> Set value for <span class="set-secret-value-name"></span> </h4> 
          </div> 
          <div class="modal-body"> 
           <div id="secretValueDetails"> 
            <div class="form-group"> 
             <label>Instructions</label> 
             <div class="set-secret-value-description"></div> 
            </div> 
           </div> 
           <div> 
            <input type="hidden" class="form-control set-secret-block-id" name="user_secret_value[block_id]" value="18823 "> 
            <input type="hidden" class="form-control set-secret-value-id" name="user_secret_value[secret_id]" value=""> 
            <div class="form-group"> 
             <label>Value</label> 
             <input type="text" class="form-control" name="user_secret_value[value]" value="" id="set-secret-value-value"> 
            </div> 
           </div> 
          </div> 
          <div class="modal-footer"> 
           <span class="text-danger hidden secret-value-error">Error saving secret value.</span> 
           <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button> 
           <button type="button" class="btn btn-primary" id="saveSecretValueBtn">Save</button> 
          </div> 
         </div> 
        </div> 
       </div> 
      </div> 
     </div> 
    </div> 
   </section> 
  </div> 
  <!-- Choose tool & install behavior --> 
  <script>
  $(function(){
    $('.BlockSetupGuide-EditConnectionLink').click(function(){
      $('.BlockSetupGuide-ConnectContent').removeClass('hidden');
    });

    $('.BlockSetupGuide-ChangeToolLink').click(function(){
      $('.BlockSetupGuide-ToolSelectorContent').removeClass('hidden');
    });

    $('.BlockSetupGuide-ShowInstructionsLink').click(function() {
      var $this = $(this);
      var toolID = $this.closest('[data-toggle-tool]').attr('data-toggle-tool');

      $('.BlockSetupGuide-InstallToolInstructions').removeClass('hidden');
      $('.BlockSetupGuide-InstallContent').removeClass('hidden');
      $('[data-toggle-tool="' + toolID + '"]').removeClass('hidden');
    })

    $('.BlockSetupGuide-InstallToolSelectorOption').click(function() {

      var $this = $(this);
      var toolID = $this.attr('data-tool-integration-id');
      var toolName = $this.attr('data-tool-name');

      // Set active tool for the user
      $.ajax({
        method: "POST",
        url: "/settings/set_tool",
        data: {
          tool_integration_id: toolID
        }
      });

      $('.BlockSetupGuide-ChangeTool').removeClass('hidden');
      $('.BlockSetupGuide-ToolName').text(toolName);

      // Make instructions appear
      if ($this.attr('data-tool-installed') === "true") {
        $('.BlockSetupGuide-InstallContent').addClass('hidden');
      } else {
        $('.BlockSetupGuide-InstallContent').removeClass('hidden');
      }

      $('.BlockSetupGuide-ToolSelectorContent').addClass('hidden');

      $('.BlockSetupGuide-InstallToolSelectorOption').removeClass('selected');
      $this.addClass('selected');
      window.ga && ga('send', 'event', 'onboarding_flow', 'selected tool', JSON.stringify({tool: $(this).text(), not_id: gon.user && gon.user.id}));


      $('.BlockSetupGuide-InstallToolInstructions').removeClass('hidden');
      $('[data-toggle-tool]').addClass('hidden');
      $('[data-toggle-tool="' + toolID + '"]').removeClass('hidden');

      // only show this toggle if installed
      $('.BlockSetupGuide-InstalledIndicator').addClass('hidden');
      if ($this.attr('data-tool-installed') === "true") {
        $('.BlockSetupGuide-InstalledIndicator[data-toggle-tool="' + toolID + '"]').removeClass('hidden');
        $('.BlockSetupGuide-UseStep .incompleteActionContainer[data-toggle-tool="' + toolID + '"]').addClass('hidden');
        $('.BlockSetupGuide-UseStep .completeActionContainer[data-toggle-tool="' + toolID + '"]').removeClass('hidden');
      } else {
        $('.BlockSetupGuide-UseStep .incompleteActionContainer[data-toggle-tool="' + toolID + '"]').removeClass('hidden');
        $('.BlockSetupGuide-UseStep .completeActionContainer[data-toggle-tool="' + toolID + '"]').addClass('hidden');
      }

      // Always hide the success message
      $('.js-btn-activated-message').addClass('hidden');
    });

    // Finish install button
    $('.js-finish-install-step-btn').click(function(){
      // Create new tool connection
      var toolID = $(this).closest('[data-toggle-tool]').attr('data-toggle-tool');

      $.ajax({
        method: "POST",
        url: "/settings/user_tool_connection",
        data: {
          tool_integration_id: toolID
        }
      });

      // Hide instructions
      $(this).closest('[data-toggle-tool]').addClass('hidden');
      $('.BlockSetupGuide-InstallContent').addClass('hidden');

      // Show "installed"
      $('.BlockSetupGuide-InstalledIndicator[data-toggle-tool="' + toolID + '"]').removeClass('hidden');

      // Enable "access" section
      $('.BlockSetupGuide-UseStep [data-toggle-tool]').addClass('hidden');
      $('.BlockSetupGuide-UseStep [data-toggle-tool="' + toolID + '"]').removeClass('hidden');

      $('.BlockSetupGuide-UseStep .incompleteActionContainer[data-toggle-tool="' + toolID + '"]').addClass('hidden');
      $('.BlockSetupGuide-UseStep .completeActionContainer[data-toggle-tool="' + toolID + '"]').removeClass('hidden');

      $('.BlockSetupGuide-UseStep [data-toggle-tool="' + toolID + '"] button').removeClass('disabled').attr('disabled', false);
    });

    // "Use" button
    $('.js-access-btn').click(function(){
      $.ajax({
        method: "POST",
        url: "/settings/set_block_id_to_open",
        data: {
          block_id: 18823
        }
      });

      $('.js-btn-activated-message').removeClass('hidden');
    });

    $(window).focus(function(){
      var currentToolID = $('.BlockSetupGuide-InstallToolInstructionsItem').not('.hidden').attr('data-toggle-tool');

      var isInstalled = $('.BlockSetupGuide-InstalledIndicator[data-toggle-tool=' + currentToolID + ']').not('.hidden').length > 0;

      if(currentToolID && !isInstalled) {
        $.ajax({
          method: "GET",
          url: "/settings/has_installed_tool/" + currentToolID
        }).success(function(){
          // Hide instructions
          $('.BlockSetupGuide-InstallToolInstructionsItem[data-toggle-tool=' + currentToolID + ']').addClass('hidden');
          $('.BlockSetupGuide-InstallContent').addClass('hidden');

          // Show "installed"
          $('.BlockSetupGuide-InstalledIndicator[data-toggle-tool="' + currentToolID + '"]').removeClass('hidden');

          // Enable "access" section
          $('.BlockSetupGuide-UseStep [data-toggle-tool]').addClass('hidden');
          $('.BlockSetupGuide-UseStep [data-toggle-tool="' + currentToolID + '"]').removeClass('hidden');

          $('.BlockSetupGuide-UseStep .incompleteActionContainer[data-toggle-tool="' + currentToolID + '"]').addClass('hidden');
          $('.BlockSetupGuide-UseStep .completeActionContainer[data-toggle-tool="' + currentToolID + '"]').removeClass('hidden');

          $('.BlockSetupGuide-UseStep [data-toggle-tool="' + currentToolID + '"] button').removeClass('disabled').attr('disabled', false);
        });
      }

    });

  });
</script> 
  <!-- More info section behavior --> 
  <script>
$('.BlockMoreInfoSection-Tab').click(function(){
  // Switch tab state
  $('.BlockMoreInfoSection-Tab').removeClass('active');
  $(this).addClass('active');
  window.ga && ga('send', 'event', 'onboarding_flow', 'data explorer/demo selected', JSON.stringify({'tab': $(this).text(), 'not_id': gon.user && gon.user.id}));

  // Switch section state
  var sectionClass = $(this).attr('data-toggle');
  var $activeSection = $('.BlockMoreInfoSection-SubSection.' + sectionClass);

  $('.BlockMoreInfoSection-SubSection').addClass('hidden');
  $activeSection.removeClass('hidden');
});
</script> 
  <footer class="Footer"> 
   <div class="container"> 
    <div class="row text-center"> 
     <div class="hidden-xs"> 
      <p class="text-center Footer-LogoContainer"><img height="15" src="/assets/leaf-20c4a896be6e8200c5fb3354c95fb30c7cd502554441539a57ba4a8f12c7e543.png" alt="Leaf"></p> 
      <p class="text-center text-green">Blockspring</p> 
     </div> 
     <div class="visible-xs"> 
      <a href="https://open.blockspring.com/library"> <img height="15" src="/assets/leaf-20c4a896be6e8200c5fb3354c95fb30c7cd502554441539a57ba4a8f12c7e543.png" alt="Leaf"> Blockspring </a> 
      <br> 
     </div> 
    </div> 
    <p class="text-center"> Want to use Blockspring with your team? <br class="visible-xs"> <a href="/organization/setup">Create an organization</a>. </p> 
    <div class="row Footer-LinkContainer text-center"> 
     <a href="/blocks/new">Create a Block</a> 
     <a href="/docs">Developer Docs</a> 
     <a href="https://blockspring-help.readme.io/v1.0">Help</a> 
     <a href="/feedback">Request an API</a> 
     <a href="https://status.blockspring.com">System Status</a> 
     <a href="https://www.blockspring.com/blog">Blog</a> 
     <a href="https://www.blockspring.com/about">About</a> 
     <a href="https://www.blockspring.com/about/tos">Terms</a> 
     <a href="https://www.blockspring.com/about/privacy">Privacy</a> 
    </div> 
   </div> 
  </footer> 
  <script>
      window.downtownSettings = {
        siteId: '01BMVKD38W2Z2JYXQA8X2EXEWD'
      };
    </script> 
  <script async src="https://cdn.joindowntown.com/boot.js"></script>   
 </body>
</html>