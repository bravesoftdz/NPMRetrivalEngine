<!doctype html>
<html xmlns:cc="http://creativecommons.org/ns#">
 <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# medium-com: http://ogp.me/ns/fb/medium-com#">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Using api.ai with microsoft bot framework – Akshay Kulkarni – Medium</title>
  <link rel="canonical" href="http://ec2-54-90-231-6.compute-1.amazonaws.com:80/using-api-ai-with-microsoft-bot-framework/">
  <meta name="title" content="Using api.ai with microsoft bot framework – Akshay Kulkarni – Medium">
  <meta name="referrer" content="unsafe-url">
  <meta name="description" content="Unless you have been living in a cave with no internet access, you must have heard about how chatbots are the next biggest thing and how they will completely replace apps. The jury is still out on…">
  <meta name="theme-color" content="#000000">
  <meta property="og:title" content="Using api.ai with microsoft bot framework – Akshay Kulkarni – Medium">
  <meta property="og:url" content="https://medium.com/@akshaykulkarni/using-api-ai-with-microsoft-bot-framework-577a5d9fb66f">
  <meta property="og:image" content="https://cdn-images-1.medium.com/max/1200/0*lNWNxa5Vns7NtFRS.png">
  <meta property="fb:app_id" content="542599432471018">
  <meta property="og:description" content="Unless you have been living in a cave with no internet access, you must have heard about how chatbots are the next biggest thing and how…">
  <meta name="twitter:description" content="Unless you have been living in a cave with no internet access, you must have heard about how chatbots are the next biggest thing and how…">
  <meta name="twitter:image:src" content="https://cdn-images-1.medium.com/max/1200/0*lNWNxa5Vns7NtFRS.png">
  <link rel="publisher" href="https://plus.google.com/103654360130207659246">
  <link rel="author" href="https://medium.com/@akshaykulkarni">
  <meta property="author" content="Akshay Kulkarni">
  <meta property="og:type" content="article">
  <meta name="twitter:card" content="summary_large_image">
  <meta property="article:publisher" content="https://www.facebook.com/medium">
  <meta property="article:author" content="https://medium.com/@akshaykulkarni">
  <meta name="robots" content="index, follow">
  <meta property="article:published_time" content="2016-12-06T08:13:00.000Z">
  <meta name="twitter:creator" content="@akshay2104">
  <meta name="twitter:site" content="@Medium">
  <meta property="og:site_name" content="Medium">
  <meta name="twitter:label1" value="Reading time">
  <meta name="twitter:data1" value="12 min read">
  <meta name="twitter:app:name:iphone" content="Medium">
  <meta name="twitter:app:id:iphone" content="828256236">
  <meta name="twitter:app:url:iphone" content="medium://p/577a5d9fb66f">
  <meta property="al:ios:app_name" content="Medium">
  <meta property="al:ios:app_store_id" content="828256236">
  <meta property="al:android:package" content="com.medium.reader">
  <meta property="al:android:app_name" content="Medium">
  <meta property="al:ios:url" content="medium://p/577a5d9fb66f">
  <meta property="al:android:url" content="medium://p/577a5d9fb66f">
  <meta property="al:web:url" content="https://medium.com/@akshaykulkarni/using-api-ai-with-microsoft-bot-framework-577a5d9fb66f">
  <link rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml">
  <link rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/577a5d9fb66f">
  <script type="application/ld+json">{"@context":"http://schema.org","@type":"NewsArticle","image":{"@type":"ImageObject","width":784,"height":540,"url":"https://cdn-images-1.medium.com/max/1568/0*lNWNxa5Vns7NtFRS.png"},"datePublished":"2016-12-06T08:13:00.000Z","dateModified":"2017-09-20T08:20:47.728Z","headline":"Using api.ai with microsoft bot framework","name":"Using api.ai with microsoft bot framework","keywords":["Bots","Nodejs","Microsoft Bot Framework"],"author":{"@type":"Person","name":"Akshay Kulkarni","url":"https://medium.com/@akshaykulkarni"},"creator":["Akshay Kulkarni"],"publisher":{"@type":"Organization","name":"Medium","url":"https://medium.com/","logo":{"@type":"ImageObject","width":215,"height":60,"url":"https://cdn-images-1.medium.com/max/430/1*5ztbgEt4NqpVaxTc64C-XA.png"}},"mainEntityOfPage":"http://ec2-54-90-231-6.compute-1.amazonaws.com:80/using-api-ai-with-microsoft-bot-framework/"}</script>
  <link rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/e/sr/latin/e/ssr/latin/e/ssb/latin/m.css">
  <link rel="stylesheet" href="https://cdn-static-1.medium.com/_/fp/css/main-branding-base.KaG5owo1xJGIHfGeaAmI2A.css">
  <script>if (window.top !== window.self) window.top.location = window.self.location.href;var OB_startTime = new Date().getTime(); var OB_loadErrors = []; function _onerror(e) { OB_loadErrors.push(e) }; if (document.addEventListener) document.addEventListener("error", _onerror, true); else if (document.attachEvent) document.attachEvent("onerror", _onerror); function _asyncScript(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("script"); s.type = "text/javascript"; s.async = true; s.src = u; f.parentNode.insertBefore(s, f);}function _asyncStyles(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("link"); s.rel = "stylesheet"; s.href = u; f.parentNode.insertBefore(s, f); return s}(new Image()).src = "/_/stat?event=pixel.load&origin=" + encodeURIComponent(location.origin);</script>
  <script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date; ga("create", "UA-24232453-2", "auto", {"allowLinker": true, "legacyCookieDomain": window.location.hostname}); ga("send", "pageview");</script>
  <script async src="https://www.google-analytics.com/analytics.js"></script>
  <!--[if lt IE 9]><script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js"></script><![endif]-->
  <link rel="icon" href="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="js-favicon">
  <link rel="apple-touch-icon" sizes="152x152" href="https://cdn-images-1.medium.com/fit/c/304/304/1*8I-HPL0bfoIzGied-dzOvA.png">
  <link rel="apple-touch-icon" sizes="120x120" href="https://cdn-images-1.medium.com/fit/c/240/240/1*8I-HPL0bfoIzGied-dzOvA.png">
  <link rel="apple-touch-icon" sizes="76x76" href="https://cdn-images-1.medium.com/fit/c/152/152/1*8I-HPL0bfoIzGied-dzOvA.png">
  <link rel="apple-touch-icon" sizes="60x60" href="https://cdn-images-1.medium.com/fit/c/120/120/1*8I-HPL0bfoIzGied-dzOvA.png">
  <link rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/favicon.KjTfUJo7yJH_fCoUzzH3cg.svg" color="#171717">
 </head>
 <body itemscope class=" postShowScreen browser-chrome os-windows is-withMagicUnderlines v-glyph v-glyph--m is-noJs">
  <script>document.body.className = document.body.className.replace(/(^|\s)is-noJs(\s|$)/, "$1is-js$2")</script>
  <div class="site-main" id="container">
   <div class="butterBar butterBar--error"></div>
   <div class="surface">
    <div id="prerendered" class="screenContent">
     <canvas class="canvas-renderer"></canvas>
     <div class="container u-maxWidth740 u-xs-margin0 notesPositionContainer js-notesPositionContainer"></div>
     <div class="metabar u-clearfix js-metabar u-boxShadowBottomThinLighter u-fixed u-backgroundTransparentWhiteDarkest u-xs-sizeFullViewportWidth">
      <div class="metabar-inner u-marginAuto u-maxWidth1000 u-flexCenter u-justifyContentSpaceBetween u-paddingLeft20 u-paddingRight20 u-height65 u-xs-height56 js-metabarMiddle">
       <div class="metabar-block u-flex1 u-flexCenter">
        <div class="js-metabarLogoLeft u-xs-show">
         <a href="https://medium.com/" data-log-event="home" class="siteNav-logo"><span class="svgIcon svgIcon--logoWordmark svgIcon--138x27px is-flushLeft u-xs-hide u-textColorDarker">
           <svg class="svgIcon-use" width="138" height="27" viewbox="0 0 138 27">
            <path d="M130 27V16.96c0-3.26-.154-5.472-2.437-5.472-1.16 0-2.138.57-2.863 1.512.217.906.3 1.968.3 3.127 0 2.247.036 5.11 0 7.973 0 .472-.046.58.244.87L127 27h-8V16.96c0-3.297-.461-5.472-2.708-5.472-1.16 0-1.64.653-2.292 1.595V24.1c0 .472-.026.58.3.87L116 27h-8V11.56c0-.47-.07-.579-.36-.905L106 9h8v3.612c.906-2.537 2.437-4.112 5.372-4.112 2.682 0 4.494 1.466 5.255 4.257.834-2.392 3.008-4.257 6.053-4.257 3.588 0 5.32 2.626 5.32 7.627 0 2.392.036 5.11 0 7.973 0 .472.004.652.25.87L138 27h-8zm-27-3.045c0 .472-.149.617.178.906L105 27h-8v-4c-.906 2.465-2.956 4-5.637 4C87.775 27 86 24.39 86 19.461c0-2.391-.036-5 0-7.936 0-.471-.11-.58-.4-.87L84 9h8v9.628c0 3.225.269 5.4 2.298 5.4 1.16 0 2.086-.725 2.702-1.63V11.56c0-.471-.129-.58-.419-.906L95 9h8v14.955zM78.002.25A3.248 3.248 0 0 1 81.25 3.5 3.25 3.25 0 1 1 78.002.25zM75 27V11.56c0-.47.168-.579-.122-.905L73 9h8v15.1c0 .472-.01.678.24.9L83 27h-8zM64 11.706c-.507-.652-1.418-1.123-2.396-1.123-1.957 0-3.842 1.775-3.842 7.03 0 4.93 1.631 6.669 3.66 6.669.907 0 1.853-.436 2.578-1.378V11.706zm6 12.286c0 .47-.026.58.3.87L72 27h-8v-3.697C62.913 25.804 60.951 27 58.632 27 54.5 27 51.5 23.738 51.5 17.795c0-5.582 3.254-9.314 7.784-9.314 2.356 0 3.919 1.123 4.716 2.899V3.878c0-.471-.077-.617-.403-.906L62 1.305 70 .29v23.702zM43.9 16c.037-.471.037-.67.037-.815 0-4.747-.937-5.435-2.437-5.435-1.5 0-2.854.995-2.927 6.25h5.328zm-5.327 1c0 4.711 2.392 6.63 5.183 6.63 2.174 0 4.313-.943 5.509-3.335h.072c-.942 4.566-3.77 6.705-8.01 6.705-4.566 0-8.879-2.755-8.879-9.133 0-6.705 4.277-9.386 9.097-9.386 3.842 0 7.937 1.811 7.937 7.646 0 .109 0 .438-.036.873H38.573zM31.5 27h-12l2.39-2.646c.084-.084.11-.399.11-.87V7l-7.866 20L5.581 8.372C5.364 7.9 5.181 7.285 5 6.777V20.62c0 .58-.035.653.364 1.196L9 27H0l3.64-5.183c.399-.543.36-.616.36-1.196V6.27c0-.617.095-.69-.195-1.051L1 1h8.495l7.355 16.3L23.24 1h8.26l-2.2 2.75c-.326.326-.3.599-.3 1.106v18.629c0 .47.005.75.138.87L31.5 27z" />
           </svg></span><span class="svgIcon svgIcon--logoWordmark svgIcon--122x45px is-flushLeft u-xs-show u-textColorDarker">
           <svg class="svgIcon-use" width="122" height="45" viewbox="0 0 122 45">
            <path d="M61.6 31.806c0 .412 0 .505.28.758l1.574 1.537v.065h-6.979v-2.95a4.852 4.852 0 0 1-4.627 3.203c-3.588 0-6.192-2.81-6.192-7.981 0-4.843 2.81-8.075 6.754-8.075a4.122 4.122 0 0 1 4.056 2.51v-6.51a.806.806 0 0 0-.319-.787l-1.499-1.443v-.065l6.951-.815v20.553zm-5.125-.937v-9.714a2.614 2.614 0 0 0-2.08-.975c-1.695 0-3.334 1.537-3.334 6.099 0 4.271 1.414 5.78 3.175 5.78a2.81 2.81 0 0 0 2.24-1.19zm9.752 3.297V21.051a.88.88 0 0 0-.281-.786L64.4 18.672v-.065h6.98v13.302c0 .412 0 .505.28.758l1.536 1.443v.066l-6.97-.01zm-.253-20.356a2.81 2.81 0 1 1 5.62 0 2.81 2.81 0 0 1-5.62 0zm24.234 17.967c0 .413 0 .534.281.787l1.574 1.537v.065h-7.017v-3.363a5.077 5.077 0 0 1-4.805 3.616c-3.11 0-4.778-2.267-4.778-6.557 0-2.07 0-4.337.066-6.885a.796.796 0 0 0-.281-.76l-1.546-1.545v-.065h6.923v8.552c0 2.81.412 4.684 2.173 4.684a2.81 2.81 0 0 0 2.267-1.415v-9.367a.88.88 0 0 0-.28-.787l-1.556-1.602v-.065h6.979v13.17zm23.756 2.39c0-.507.094-6.952.094-8.432 0-2.81-.44-4.75-2.417-4.75a3.138 3.138 0 0 0-2.482 1.35c.198.876.292 1.772.28 2.67 0 1.948-.065 4.43-.093 6.913a.796.796 0 0 0 .281.759l1.574 1.442v.066h-7.045c0-.468.094-6.95.094-8.431 0-2.857-.44-4.75-2.389-4.75a2.81 2.81 0 0 0-2.323 1.387v9.555c0 .412 0 .506.281.759l1.537 1.442v.066h-6.97V21.098a.88.88 0 0 0-.281-.787l-1.546-1.639v-.065h6.98v3.334a5.002 5.002 0 0 1 5.002-3.587c2.323 0 3.896 1.292 4.562 3.747a5.433 5.433 0 0 1 5.245-3.747c3.11 0 4.872 2.295 4.872 6.632 0 2.07-.066 4.43-.094 6.913a.75.75 0 0 0 .318.759l1.537 1.443v.065h-7.017zm-87.671-2.043l2.07 1.977v.065H17.862v-.065l2.107-1.977a.796.796 0 0 0 .281-.759V18.728c0-.534 0-1.255.094-1.873l-7.082 17.564h-.084L5.843 18.26c-.16-.402-.206-.43-.31-.702v10.595c-.087.71.034 1.429.348 2.07l2.95 3.879v.065H1v-.065l2.95-3.888a3.69 3.69 0 0 0 .347-2.06v-11.71a2.267 2.267 0 0 0-.487-1.602l-2.089-2.708v-.065h7.494l6.277 13.686 5.527-13.686h7.335v.065l-2.061 2.296a.806.806 0 0 0-.319.786v16.15a.75.75 0 0 0 .319.759zm8.215-6.332v.065c0 4.01 2.07 5.62 4.497 5.62a5.105 5.105 0 0 0 4.777-2.894h.066c-.844 3.963-3.298 5.836-6.97 5.836-3.962 0-7.7-2.389-7.7-7.925 0-5.817 3.747-8.14 7.887-8.14 3.335 0 6.886 1.573 6.886 6.632v.806h-9.443zm0-.806h4.618v-.815c0-4.122-.852-5.218-2.136-5.218-1.555 0-2.5 1.64-2.5 6.033h.018z" />
           </svg></span><span class="u-textScreenReader">Homepage</span></a>
        </div>
        <a class="link link--darken u-accentColor--textDarken u-xs-hide js-upgradeMembershipAction u-baseColor--link" href="https://medium.com/membership?source=upgrade_membership---nav_full">About membership</a>
       </div>
       <div class="metabar-block u-flex0">
        <div class="buttonSet u-block u-margin0 u-flexCenter">
         <a class="button button--primary button--chromeless u-accentColor--buttonNormal is-inSiteNavBar js-signUpButton" href="https://medium.com/m/signin?redirect=https%3A%2F%2Fmedium.com%2F%40akshaykulkarni%2Fusing-api-ai-with-microsoft-bot-framework-577a5d9fb66f&amp;source=--------------------------nav_reg">Sign in / Sign up</a>
        </div>
       </div>
       <div class="u-absolute u-sizeFullWidth u-top0 u-right0 u-textAlignCenter js-metabarLogoCentered u-xs-hide">
        <a href="https://medium.com/" data-log-event="home" class="siteNav-logo"><span class="svgIcon svgIcon--logoWordmark svgIcon--138x27px is-flushLeft u-xs-hide u-textColorDarker">
          <svg class="svgIcon-use" width="138" height="27" viewbox="0 0 138 27">
           <path d="M130 27V16.96c0-3.26-.154-5.472-2.437-5.472-1.16 0-2.138.57-2.863 1.512.217.906.3 1.968.3 3.127 0 2.247.036 5.11 0 7.973 0 .472-.046.58.244.87L127 27h-8V16.96c0-3.297-.461-5.472-2.708-5.472-1.16 0-1.64.653-2.292 1.595V24.1c0 .472-.026.58.3.87L116 27h-8V11.56c0-.47-.07-.579-.36-.905L106 9h8v3.612c.906-2.537 2.437-4.112 5.372-4.112 2.682 0 4.494 1.466 5.255 4.257.834-2.392 3.008-4.257 6.053-4.257 3.588 0 5.32 2.626 5.32 7.627 0 2.392.036 5.11 0 7.973 0 .472.004.652.25.87L138 27h-8zm-27-3.045c0 .472-.149.617.178.906L105 27h-8v-4c-.906 2.465-2.956 4-5.637 4C87.775 27 86 24.39 86 19.461c0-2.391-.036-5 0-7.936 0-.471-.11-.58-.4-.87L84 9h8v9.628c0 3.225.269 5.4 2.298 5.4 1.16 0 2.086-.725 2.702-1.63V11.56c0-.471-.129-.58-.419-.906L95 9h8v14.955zM78.002.25A3.248 3.248 0 0 1 81.25 3.5 3.25 3.25 0 1 1 78.002.25zM75 27V11.56c0-.47.168-.579-.122-.905L73 9h8v15.1c0 .472-.01.678.24.9L83 27h-8zM64 11.706c-.507-.652-1.418-1.123-2.396-1.123-1.957 0-3.842 1.775-3.842 7.03 0 4.93 1.631 6.669 3.66 6.669.907 0 1.853-.436 2.578-1.378V11.706zm6 12.286c0 .47-.026.58.3.87L72 27h-8v-3.697C62.913 25.804 60.951 27 58.632 27 54.5 27 51.5 23.738 51.5 17.795c0-5.582 3.254-9.314 7.784-9.314 2.356 0 3.919 1.123 4.716 2.899V3.878c0-.471-.077-.617-.403-.906L62 1.305 70 .29v23.702zM43.9 16c.037-.471.037-.67.037-.815 0-4.747-.937-5.435-2.437-5.435-1.5 0-2.854.995-2.927 6.25h5.328zm-5.327 1c0 4.711 2.392 6.63 5.183 6.63 2.174 0 4.313-.943 5.509-3.335h.072c-.942 4.566-3.77 6.705-8.01 6.705-4.566 0-8.879-2.755-8.879-9.133 0-6.705 4.277-9.386 9.097-9.386 3.842 0 7.937 1.811 7.937 7.646 0 .109 0 .438-.036.873H38.573zM31.5 27h-12l2.39-2.646c.084-.084.11-.399.11-.87V7l-7.866 20L5.581 8.372C5.364 7.9 5.181 7.285 5 6.777V20.62c0 .58-.035.653.364 1.196L9 27H0l3.64-5.183c.399-.543.36-.616.36-1.196V6.27c0-.617.095-.69-.195-1.051L1 1h8.495l7.355 16.3L23.24 1h8.26l-2.2 2.75c-.326.326-.3.599-.3 1.106v18.629c0 .47.005.75.138.87L31.5 27z" />
          </svg></span><span class="svgIcon svgIcon--logoWordmark svgIcon--122x45px is-flushLeft u-xs-show u-textColorDarker">
          <svg class="svgIcon-use" width="122" height="45" viewbox="0 0 122 45">
           <path d="M61.6 31.806c0 .412 0 .505.28.758l1.574 1.537v.065h-6.979v-2.95a4.852 4.852 0 0 1-4.627 3.203c-3.588 0-6.192-2.81-6.192-7.981 0-4.843 2.81-8.075 6.754-8.075a4.122 4.122 0 0 1 4.056 2.51v-6.51a.806.806 0 0 0-.319-.787l-1.499-1.443v-.065l6.951-.815v20.553zm-5.125-.937v-9.714a2.614 2.614 0 0 0-2.08-.975c-1.695 0-3.334 1.537-3.334 6.099 0 4.271 1.414 5.78 3.175 5.78a2.81 2.81 0 0 0 2.24-1.19zm9.752 3.297V21.051a.88.88 0 0 0-.281-.786L64.4 18.672v-.065h6.98v13.302c0 .412 0 .505.28.758l1.536 1.443v.066l-6.97-.01zm-.253-20.356a2.81 2.81 0 1 1 5.62 0 2.81 2.81 0 0 1-5.62 0zm24.234 17.967c0 .413 0 .534.281.787l1.574 1.537v.065h-7.017v-3.363a5.077 5.077 0 0 1-4.805 3.616c-3.11 0-4.778-2.267-4.778-6.557 0-2.07 0-4.337.066-6.885a.796.796 0 0 0-.281-.76l-1.546-1.545v-.065h6.923v8.552c0 2.81.412 4.684 2.173 4.684a2.81 2.81 0 0 0 2.267-1.415v-9.367a.88.88 0 0 0-.28-.787l-1.556-1.602v-.065h6.979v13.17zm23.756 2.39c0-.507.094-6.952.094-8.432 0-2.81-.44-4.75-2.417-4.75a3.138 3.138 0 0 0-2.482 1.35c.198.876.292 1.772.28 2.67 0 1.948-.065 4.43-.093 6.913a.796.796 0 0 0 .281.759l1.574 1.442v.066h-7.045c0-.468.094-6.95.094-8.431 0-2.857-.44-4.75-2.389-4.75a2.81 2.81 0 0 0-2.323 1.387v9.555c0 .412 0 .506.281.759l1.537 1.442v.066h-6.97V21.098a.88.88 0 0 0-.281-.787l-1.546-1.639v-.065h6.98v3.334a5.002 5.002 0 0 1 5.002-3.587c2.323 0 3.896 1.292 4.562 3.747a5.433 5.433 0 0 1 5.245-3.747c3.11 0 4.872 2.295 4.872 6.632 0 2.07-.066 4.43-.094 6.913a.75.75 0 0 0 .318.759l1.537 1.443v.065h-7.017zm-87.671-2.043l2.07 1.977v.065H17.862v-.065l2.107-1.977a.796.796 0 0 0 .281-.759V18.728c0-.534 0-1.255.094-1.873l-7.082 17.564h-.084L5.843 18.26c-.16-.402-.206-.43-.31-.702v10.595c-.087.71.034 1.429.348 2.07l2.95 3.879v.065H1v-.065l2.95-3.888a3.69 3.69 0 0 0 .347-2.06v-11.71a2.267 2.267 0 0 0-.487-1.602l-2.089-2.708v-.065h7.494l6.277 13.686 5.527-13.686h7.335v.065l-2.061 2.296a.806.806 0 0 0-.319.786v16.15a.75.75 0 0 0 .319.759zm8.215-6.332v.065c0 4.01 2.07 5.62 4.497 5.62a5.105 5.105 0 0 0 4.777-2.894h.066c-.844 3.963-3.298 5.836-6.97 5.836-3.962 0-7.7-2.389-7.7-7.925 0-5.817 3.747-8.14 7.887-8.14 3.335 0 6.886 1.573 6.886 6.632v.806h-9.443zm0-.806h4.618v-.815c0-4.122-.852-5.218-2.136-5.218-1.555 0-2.5 1.64-2.5 6.033h.018z" />
          </svg></span><span class="u-textScreenReader">Homepage</span></a>
       </div>
      </div>
     </div>
     <div class="metabar metabar--spacer js-metabarSpacer u-height65 u-xs-height56"></div>
     <main role="main">
      <article class=" u-sizeViewHeightMin100 u-overflowHidden postArticle postArticle--full u-marginBottom40" lang="en">
       <header class="container u-maxWidth740">
        <div class="postMetaHeader u-paddingBottom10 row">
         <div class="col u-size12of12 js-postMetaLockup">
          <div class="postMetaLockup postMetaLockup--authorWithBio u-flex js-postMetaLockup">
           <div class="u-flex0">
            <a class="link avatar u-baseColor--link" href="https://medium.com/@akshaykulkarni?source=post_header_lockup" data-action="show-user-card" data-action-source="post_header_lockup" data-action-value="e9ca4f68c727" data-action-type="hover" data-user-id="e9ca4f68c727" dir="auto"><img src="https://cdn-images-1.medium.com/fit/c/80/80/1*IpuSaitD7vXaX3nUi1GVJw.jpeg" class="avatar-image avatar-image--smaller" alt="Go to the profile of Akshay Kulkarni"></a>
           </div>
           <div class="u-flex1 u-paddingLeft15 u-overflowHidden">
            <a class="link link link--darken link--darker u-baseColor--link" href="https://medium.com/@akshaykulkarni?source=post_header_lockup" data-action="show-user-card" data-action-source="post_header_lockup" data-action-value="e9ca4f68c727" data-action-type="hover" data-user-id="e9ca4f68c727" dir="auto">Akshay Kulkarni</a>
            <span class="followState js-followState" data-user-id="e9ca4f68c727"><button class="button u-paddingLeft10 u-paddingRight10 u-height19 u-lineHeight13 u-verticalAlignMiddle u-fontSize12 u-uiTextMedium u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton u-marginLeft10 u-marginTopNegative2 u-xs-hide" data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.com/@akshaykulkarni/using-api-ai-with-microsoft-bot-framework-577a5d9fb66f" data-action-source="post_header_lockup"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary u-paddingLeft10 u-paddingRight10 u-height19 u-lineHeight13 u-verticalAlignMiddle u-fontSize12 u-uiTextMedium u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton u-marginLeft10 u-marginTopNegative2 u-xs-hide" data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/e9ca4f68c727" data-action-source="post_header_lockup-e9ca4f68c727-------------------------follow_byline"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span>
            <div class="postMetaInline js-testPostMetaInlineSupplemental">
             <time datetime="2016-12-06T08:13:00.000Z">Dec 6, 2016</time>
             <span class="middotDivider u-fontSize12"></span>
             <span class="readingTime" title="12 min read"></span>
            </div>
           </div>
          </div>
         </div>
        </div>
       </header>
       <div class="postArticle-content js-postField js-notesSource js-trackedPost" data-post-id="577a5d9fb66f" data-source="post_page" data-tracking-context="postPage">
        <section name="1f85" class="section section--body section--first">
         <div class="section-divider">
          <hr class="section-divider">
         </div>
         <div class="section-content">
          <div class="section-inner sectionLayout--insetColumn">
           <h1 name="1520" id="1520" class="graf graf--h3 graf--leading graf--title">Using api.ai with microsoft bot framework</h1>
           <p name="5642" id="5642" class="graf graf--p graf-after--h3">Unless you have been living in a cave with no internet access, you must have heard about how <strong class="markup--strong markup--p-strong">chatbots</strong> are the next biggest thing and how they will completely replace apps. The jury is still out on whether that’s true.</p>
           <p name="0c17" id="0c17" class="graf graf--p graf-after--p">But we can’t ignore the fact that all major companies have been betting on this new field. Facebook, Microsoft, Google, Amazon are all in on the craze.</p>
           <p name="a216" id="a216" class="graf graf--p graf-after--p">Microsoft’s offering ‘Microsoft Bot Framework’ is the most interesting offering according to me <em class="markup--em markup--p-em">(disclaimer: I used to work at Microsoft)</em>. It lets you easily build bots for multiple platforms like</p>
           <ul class="postList">
            <li name="309a" id="309a" class="graf graf--li graf-after--p">Facebook Messenger</li>
            <li name="1682" id="1682" class="graf graf--li graf-after--li">Slack</li>
            <li name="d10f" id="d10f" class="graf graf--li graf-after--li">Telegram</li>
            <li name="3426" id="3426" class="graf graf--li graf-after--li">Kik</li>
            <li name="2f44" id="2f44" class="graf graf--li graf-after--li">SMS (twilio)</li>
            <li name="9abf" id="9abf" class="graf graf--li graf-after--li">Email</li>
            <li name="8bc5" id="8bc5" class="graf graf--li graf-after--li">Skype</li>
            <li name="2d7d" id="2d7d" class="graf graf--li graf-after--li">Skype Teams</li>
           </ul>
           <p name="9c77" id="9c77" class="graf graf--p graf-after--li">You can write code either in node.js or C#. The best thing however about the framework is how easy it makes to maintain and store data through multiple databags like SessionData, UserData and ConversationData.</p>
           <p name="6a02" id="6a02" class="graf graf--p graf-after--p">Natural Language Processing is a very critical piece for building amazing chatbots. Microsoft Bot Framework lets you easily do this by providing built-in support for luis.ai (part of microsoft cognitive services offering for language processing). However not everyone might want to use LUIS as it requires you to have an azure subscription (starting dec 31).</p>
           <p name="c70c" id="c70c" class="graf graf--p graf-after--p">So I coded up a small npm module <a href="https://www.npmjs.com/package/api-ai-recognizer" data-href="https://www.npmjs.com/package/api-ai-recognizer" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">api-ai-recognizer</a> to use api.ai instead of LUIS with microsoft bot framework. In this tutorial I will show you how you can build a simple weather bot using api.ai and Microsoft Bot Framework.</p>
           <h4 name="5c8c" id="5c8c" class="graf graf--h4 graf-after--p">Tutorial</h4>
           <p name="1f86" id="1f86" class="graf graf--p graf-after--h4">I apologize for the long intro but I felt it was important to set context. So let’s get started with building the bot.</p>
           <p name="4669" id="4669" class="graf graf--p graf-after--p">We will be using node.js for building the bot and then deploy it to Microsoft Bot Framework Service. You can then deploy it to a channel of your choice.</p>
           <p name="9f32" id="9f32" class="graf graf--p graf-after--p">Btw, if you are the sort of person who would prefer skipping right to the end, here’s the github link to the code: <a href="https://github.com/GanadiniAkshay/weatherBot/tree/master/api.ai" data-href="https://github.com/GanadiniAkshay/weatherBot/tree/master/api.ai" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">full code link</a></p>
           <p name="c255" id="c255" class="graf graf--p graf-after--p">Step 1: Set up Environment</p>
           <p name="f679" id="f679" class="graf graf--p graf-after--p">Make sure you have node.js and npm installed.</p>
           <p name="3b56" id="3b56" class="graf graf--p graf-after--p">The first thing we have to do is create a directory so lets go ahead and create a directory called weather-bot. Now cd into the directory.</p>
           <pre name="72fd" id="72fd" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">mkdir weather-bot cd weather-bot</code></pre>
           <p name="069d" id="069d" class="graf graf--p graf-after--pre">Now lets initialize npm so we can download the required packages. Run the following command and accept all the defualt options.</p>
           <pre name="edc5" id="edc5" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">npm init</code></pre>
           <p name="59cd" id="59cd" class="graf graf--p graf-after--pre">Verify that npm has been initialized by checking if a file called package.json has been created. Once you have verified that lets install the required packages.</p>
           <p name="5b1d" id="5b1d" class="graf graf--p graf-after--p">To start off we only need two packages</p>
           <p name="899e" id="899e" class="graf graf--p graf-after--p">1) botbuilder?—?For using microsoft bot builder&nbsp;<br>&nbsp;2) api-ai-recognizer?—?For using api.ai for NLP</p>
           <p name="fe6f" id="fe6f" class="graf graf--p graf-after--p">Let’s go ahead and install both packages by running the following command</p>
           <pre name="f803" id="f803" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">npm install --save botbuilder api-ai-recognizer</code></pre>
           <p name="8a5e" id="8a5e" class="graf graf--p graf-after--pre">Step 2: Create a basic echo bot</p>
           <p name="665f" id="665f" class="graf graf--p graf-after--p">So in this step we will create a very basic bot that will just echo what we say. It’s pretty dumb but it’s a start and in the next steps we will build on top of it.</p>
           <p name="2c17" id="2c17" class="graf graf--p graf-after--p">Once the npm packages have installed, create a file called index.js in the root directory and paste in the following code</p>
           <pre name="429f" id="429f" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">var builder = require('botbuilder'); var connector = new builder.ConsoleConnector().listen(); var bot = new builder.UniversalBot(connector); bot.dialog('/',function(session){ session.send("You said %s", session.message.text); });</code></pre>
           <p name="5536" id="5536" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Note</strong>&nbsp;: For this simple case we are using ConsoleConnector as it lets us test the bot from our console directly.</p>
           <p name="5ae9" id="5ae9" class="graf graf--p graf-after--p">You can test the bot by starting the node server and directly chatting on the console.</p>
           <pre name="6bad" id="6bad" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">node index.js hi You said hi hello You said hello</code></pre>
           <p name="877b" id="877b" class="graf graf--p graf-after--pre">Step 3: Create the natural language understanding model</p>
           <p name="0fad" id="0fad" class="graf graf--p graf-after--p">In this step we will be building a natural language processing model on api.ai so that our bot will be able to understand human language queries like</p>
           <blockquote name="7dd7" id="7dd7" class="graf graf--blockquote graf-after--p">
            <em class="markup--em markup--blockquote-em">what’s the weather in new york tomorrow?</em>
           </blockquote>
           <p name="b55a" id="b55a" class="graf graf--p graf-after--blockquote">The first thing is to head to <a href="https://api.ai/" data-href="https://api.ai/" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">api.ai</a> and create an account.</p>
           <p name="0160" id="0160" class="graf graf--p graf-after--p">Next create an agent called weather-bot by filling in the required details</p>
           <figure name="f9c5" id="f9c5" class="graf graf--figure graf-after--p">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 388px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 55.400000000000006%;"></div>
             <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="0*mbgS_hvOTpX2pDQa.png" data-width="1436" data-height="796" data-action="zoom" data-action-value="0*mbgS_hvOTpX2pDQa.png">
              <img src="https://cdn-images-1.medium.com/freeze/max/60/0*mbgS_hvOTpX2pDQa.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
              <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
              <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/0*mbgS_hvOTpX2pDQa.png">
              <noscript class="js-progressiveMedia-inner">
               <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/0*mbgS_hvOTpX2pDQa.png">
              </noscript>
             </div>
            </div>
           </figure>
           <p name="2e9a" id="2e9a" class="graf graf--p graf-after--figure">The next step is to create an intent. An intent is basically a way to figure out what the intended action is for a given natural language text.</p>
           <p name="3e23" id="3e23" class="graf graf--p graf-after--p">So let’s create a intent called whatIsWeather to classify all queries where a user wants to find out the weather. (It’s not neccessary to name your intents without spaces. It’s just a convention I like to follow.)</p>
           <p name="87db" id="87db" class="graf graf--p graf-after--p">Give the following example utterances</p>
           <ul class="postList">
            <li name="e3a9" id="e3a9" class="graf graf--li graf-after--p">What is the weather?</li>
            <li name="7ca9" id="7ca9" class="graf graf--li graf-after--li">what’s weather like now?</li>
            <li name="b79d" id="b79d" class="graf graf--li graf-after--li">how is the climate?</li>
            <li name="8d23" id="8d23" class="graf graf--li graf-after--li">how’s the weather?</li>
           </ul>
           <p name="5f1f" id="5f1f" class="graf graf--p graf-after--li">In a real application you would provide more examples but for the purposes of this demo these should do good.</p>
           <p name="fc70" id="fc70" class="graf graf--p graf-after--p">You can give it a response if you want but we won’t really be using it in this demo.</p>
           <p name="0742" id="0742" class="graf graf--p graf-after--p">Once you have created the intent you can save it and check if it’s working by using the try it now chat section on the right side of the website. You should be able to see that the intent gets recognized.</p>
           <figure name="7658" id="7658" class="graf graf--figure graf-after--p">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 384px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 54.900000000000006%;"></div>
             <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="0*vj_KYX3q3dcWJFmD.png" data-width="1437" data-height="789" data-action="zoom" data-action-value="0*vj_KYX3q3dcWJFmD.png">
              <img src="https://cdn-images-1.medium.com/freeze/max/60/0*vj_KYX3q3dcWJFmD.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
              <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
              <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/0*vj_KYX3q3dcWJFmD.png">
              <noscript class="js-progressiveMedia-inner">
               <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/0*vj_KYX3q3dcWJFmD.png">
              </noscript>
             </div>
            </div>
           </figure>
           <p name="1389" id="1389" class="graf graf--p graf-after--figure">Step 3: Connect api.ai with Microsoft Bot Framework</p>
           <p name="4169" id="4169" class="graf graf--p graf-after--p">This is the step where the magic happens. But before we connect api.ai to our code we need to grab the client token. To do this just click on the agent dropdown and select view all agents.</p>
           <figure name="c4ef" id="c4ef" class="graf graf--figure graf-after--p">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 685px; max-height: 495px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 72.3%;"></div>
             <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="0*_f34AdrwMLlyy1n9.png" data-width="685" data-height="495">
              <img src="https://cdn-images-1.medium.com/freeze/max/60/0*_f34AdrwMLlyy1n9.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
              <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
              <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/0*_f34AdrwMLlyy1n9.png">
              <noscript class="js-progressiveMedia-inner">
               <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/0*_f34AdrwMLlyy1n9.png">
              </noscript>
             </div>
            </div>
           </figure>
           <p name="7590" id="7590" class="graf graf--p graf-after--figure">Select the weather-bot agent from the list of agents and you should be able to find your client access token there</p>
           <figure name="28cb" id="28cb" class="graf graf--figure graf-after--p">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 482px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 68.89999999999999%;"></div>
             <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="0*lNWNxa5Vns7NtFRS.png" data-width="784" data-height="540" data-is-featured="true" data-action="zoom" data-action-value="0*lNWNxa5Vns7NtFRS.png">
              <img src="https://cdn-images-1.medium.com/freeze/max/60/0*lNWNxa5Vns7NtFRS.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
              <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
              <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/0*lNWNxa5Vns7NtFRS.png">
              <noscript class="js-progressiveMedia-inner">
               <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/0*lNWNxa5Vns7NtFRS.png">
              </noscript>
             </div>
            </div>
           </figure>
           <p name="0c30" id="0c30" class="graf graf--p graf-after--figure">Now change index.js as the following code to make the connection</p>
           <pre name="2f7e" id="2f7e" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">var builder = require('botbuilder'); var apiairecognizer = require('api-ai-recognizer'); var connector = new builder.ConsoleConnector().listen(); var bot = new builder.UniversalBot(connector); var recognizer = new apiairecognizer(&lt;api.ai token&gt;); var intents = new builder.IntentDialog({ recognizers: [recognizer] }); bot.dialog('/',function(session){ session.send("You said %s",session.message.text); });</code></pre>
           <p name="3809" id="3809" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Note:</strong> <em class="markup--em markup--p-em">Don’t forget to put in your client token</em></p>
           <p name="6256" id="6256" class="graf graf--p graf-after--p">This code basically creates an intent recognizer which will try to recognize any incoming text based on our api.ai model.</p>
           <p name="2a77" id="2a77" class="graf graf--p graf-after--p">Now lets use it. Replace your previous bot.dialog code with the one below</p>
           <pre name="b94a" id="b94a" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">bot.dialog('/',intents); intents.onDefault(function(session){ session.send("Sorry...can you please rephrase?"); });</code></pre>
           <p name="3895" id="3895" class="graf graf--p graf-after--pre">Basically what we are doing above is pass all the messages to the api.ai intent recognizer and then setting up a default handler. This is where you put your infamous “Sorry..I couldn’t understand” type of messages.</p>
           <p name="ce10" id="ce10" class="graf graf--p graf-after--p">Once having added this code, try to run it. It should give the default response to anything you say, because we only specified the default case.</p>
           <p name="f092" id="f092" class="graf graf--p graf-after--p">Let’s add the handler to recognize the whatIsWeather intent we created earlier.</p>
           <pre name="aebc" id="aebc" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">bot.dialog('/',intents); intents.matches('whatIsWeather',function(session){ session.send("It's 27 degrees celsius"); }); intents.onDefault(function(session){ session.send("Sorry...can you please rephrase?"); });</code></pre>
           <p name="268b" id="268b" class="graf graf--p graf-after--pre">We have hardcoded the response right now but we will hook it up to an API later.</p>
           <p name="ca84" id="ca84" class="graf graf--p graf-after--p">If we run the app now, it should be able to recognize the statements which are similar to the ones we trained the intent with before.</p>
           <pre name="1680" id="1680" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">node index.js whats the weather It's 27 degrees celsius Hi Sorry...can you please rephrase?</code></pre>
           <p name="5266" id="5266" class="graf graf--p graf-after--pre">Even though the bot just says 27 degrees all the time we have made some progress. We have a functional bot.</p>
           <p name="09b4" id="09b4" class="graf graf--p graf-after--p">Before we make it more accurate by getting some real weather data, lets add a few interesting things.</p>
           <p name="3727" id="3727" class="graf graf--p graf-after--p">What I have observed from making a few fun bots is users expect your bot to be good at smalltalk at the least good at handling greetings like hello, good morning and other such stuff.</p>
           <p name="0d2b" id="0d2b" class="graf graf--p graf-after--p">We could train our api.ai models to understand this but there is a easier way, thanks to the good people at api.ai. They have pre-built training for a few domains.</p>
           <p name="e9e1" id="e9e1" class="graf graf--p graf-after--p">You can turn on/off domains by clicking on the domains tab in the left menu. For this demo we will be turning on the smalltalk domain.</p>
           <figure name="05c7" id="05c7" class="graf graf--figure graf-after--p">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 518px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 73.9%;"></div>
             <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="0*nT-pre6QV5nzVN7q.png" data-width="1067" data-height="789" data-action="zoom" data-action-value="0*nT-pre6QV5nzVN7q.png">
              <img src="https://cdn-images-1.medium.com/freeze/max/60/0*nT-pre6QV5nzVN7q.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
              <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
              <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/0*nT-pre6QV5nzVN7q.png">
              <noscript class="js-progressiveMedia-inner">
               <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/0*nT-pre6QV5nzVN7q.png">
              </noscript>
             </div>
            </div>
           </figure>
           <p name="3946" id="3946" class="graf graf--p graf-after--figure">Once you have turned the smalltalk domain on we need to plug in some code to make sure our bot handles this. To handle all smalltalk greetings, we will add a new handler to recognise the intent smalltalk.greetings.</p>
           <pre name="7caf" id="7caf" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">intents.matches('smalltalk.greetings',function(session){ session.send('This is smalltalk'); });</code></pre>
           <p name="d535" id="d535" class="graf graf--p graf-after--pre">Here we are basically logging out the fact that we understand that the phrase user sent is smalltalk of type greetings. Not super useful to the user, but good for us for debugging. Save the file and run the code.</p>
           <pre name="d249" id="d249" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">node index.js hi this is smalltalk good morning this is smalltalk bye this is smalltalk</code></pre>
           <p name="cc5f" id="cc5f" class="graf graf--p graf-after--pre">This is super cool. Even though we have not trained our bot to understand any of these phrases manually, it understands them, thanks to Domains.</p>
           <p name="4d7c" id="4d7c" class="graf graf--p graf-after--p">One more great thing about domains in api.ai is it not only helps your bot understand smalltalk phrases but it also has preconfigured replies (you can edit/customize it though). Let’s use these in our bot. These are called fulfillments. Plugin the following code to use fulfillments.</p>
           <pre name="fa3b" id="fa3b" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">intents.matches('smalltalk.greetings',function(session, args){ var fulfillment = builder.EntityRecognizer.findEntity(args.entities, 'fulfillment'); if (fulfillment){ var speech = fulfillment.entity; session.send(speech); }else{ session.send('Sorry...not sure how to respond to that'); } });</code></pre>
           <p name="69c6" id="69c6" class="graf graf--p graf-after--pre">Please note the additional args argument passed to the callback function in the handler. Don’t worry about all the entity stuff in the code. I will explain that in a while.</p>
           <p name="f019" id="f019" class="graf graf--p graf-after--p">Now save the code and restart the app to test it.</p>
           <pre name="c652" id="c652" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">node index.js hi Hey. good morning Top of the morning to you!</code></pre>
           <p name="c40d" id="c40d" class="graf graf--p graf-after--pre">The exact replies might be different for you because the replies are selected randomly from a list of possible replies. But the reply should be something sensible.</p>
           <p name="fb04" id="fb04" class="graf graf--p graf-after--p">Step 4: Get Weather Data from API</p>
           <p name="0cd7" id="0cd7" class="graf graf--p graf-after--p">In this step we will be getting the real weather data from the <a href="https://www.apixu.com/" data-href="https://www.apixu.com/" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">APIXU</a> current weather api.</p>
           <p name="3713" id="3713" class="graf graf--p graf-after--p">The API will require one parameter, the city name whose current weather data we will need.</p>
           <p name="52ca" id="52ca" class="graf graf--p graf-after--p">We will get these parameter out of the user’s query and if he doesn’t provide it, we will explicitly ask the user to provide a city name.</p>
           <p name="c632" id="c632" class="graf graf--p graf-after--p">These parameters in NLP terms are called entities and we will have to train our api.ai models to understand and extract these entities. So lets do that.</p>
           <p name="7b51" id="7b51" class="graf graf--p graf-after--p">Click on entities in the left menu and select create new entity and create a new entity called cities and put in some example city names.</p>
           <figure name="a173" id="a173" class="graf graf--figure graf-after--p">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 432px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 61.7%;"></div>
             <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="0*yDLQqxmGEJfGUcyG.png" data-width="1081" data-height="667" data-action="zoom" data-action-value="0*yDLQqxmGEJfGUcyG.png">
              <img src="https://cdn-images-1.medium.com/freeze/max/60/0*yDLQqxmGEJfGUcyG.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
              <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
              <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/0*yDLQqxmGEJfGUcyG.png">
              <noscript class="js-progressiveMedia-inner">
               <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/0*yDLQqxmGEJfGUcyG.png">
              </noscript>
             </div>
            </div>
           </figure>
           <p name="031a" id="031a" class="graf graf--p graf-after--figure">In a real world scenario you would be using pre-built entities which have already been trained with a lot of examples. But we will make do with this for the purposes of this bot. Don’t forget to click on the save button once you are done adding examples.</p>
           <p name="2a49" id="2a49" class="graf graf--p graf-after--p">Now lets train api.ai to understand the cities entity. Go back to intents and click on whatIsWeather intent. Let’s add a few examples which have city name in the sentence.</p>
           <p name="eae1" id="eae1" class="graf graf--p graf-after--p">Something like</p>
           <blockquote name="a747" id="a747" class="graf graf--blockquote graf-after--p">
            <em class="markup--em markup--blockquote-em">What’s the weather in paris?</em>
           </blockquote>
           <p name="81d1" id="81d1" class="graf graf--p graf-after--blockquote">The entity should be auto detected. Make sure its your entity and not a prebuilt entities. Prebuilt entity names have the format sys.name. Add a few examples and then save the intent.</p>
           <figure name="eb51" id="eb51" class="graf graf--figure graf-after--p">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 428px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 61.199999999999996%;"></div>
             <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="0*iIXCpbVNtHOoDrG0.png" data-width="1071" data-height="655" data-action="zoom" data-action-value="0*iIXCpbVNtHOoDrG0.png">
              <img src="https://cdn-images-1.medium.com/freeze/max/60/0*iIXCpbVNtHOoDrG0.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
              <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
              <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/0*iIXCpbVNtHOoDrG0.png">
              <noscript class="js-progressiveMedia-inner">
               <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/0*iIXCpbVNtHOoDrG0.png">
              </noscript>
             </div>
            </div>
           </figure>
           <p name="f60e" id="f60e" class="graf graf--p graf-after--figure">Now lets add some code to pull out the entity information from the phrase. It will be very similar to the fulfillments code.</p>
           <pre name="7275" id="7275" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">intents.matches('whatIsWeather',function(session,args){ var city = builder.EntityRecognizer.findEntity(args.entities,'cities'); if (city){ var city_name = city.entity; session.send("It's 27 degrees celsius in " + city_name); }else{ session.send("It's 27 degrees celsius"); } });</code></pre>
           <p name="3c4a" id="3c4a" class="graf graf--p graf-after--pre">Now if you save and restart the app, it should be able to get the city info.</p>
           <pre name="10fe" id="10fe" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">node index.js what is the weather in paris It's 27 degress celsius in Paris</code></pre>
           <p name="2faf" id="2faf" class="graf graf--p graf-after--pre">We however have to still handle the case where city is not given. We can do this by issuing a prompt to user asking him for a city name. Here’s the code to do that</p>
           <pre name="9d4c" id="9d4c" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">intents.matches('whatIsWeather',[ function(session,args){ var city = builder.EntityRecognizer.findEntity(args.entities,'cities'); if (city){ var city_name = city.entity; session.send("It's 27 degrees celsius in " + city_name); }else{ builder.Prompts.text(session, 'Which city do you want the weather for?'); } }, function(session,results){ session.send("It's 27 degrees celsius in " + results.response); } ]);</code></pre>
           <p name="ace4" id="ace4" class="graf graf--p graf-after--pre">Okay there is a lot going on in there. So let me break it down. Microsoft bot framework lets you chain functions for handlers by passing in an array of functions. You can use this to run functions one after other collecting data and using it in the next function. You use prompts to ask for data. You can read more about this in the <a href="https://docs.botframework.com/en-us/node/builder/guides/core-concepts/#navtitle" data-href="https://docs.botframework.com/en-us/node/builder/guides/core-concepts/#navtitle" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">official documentation</a>.</p>
           <p name="a849" id="a849" class="graf graf--p graf-after--p">Now you can save the app and restart and it should prompt for city if you don’t provide it.</p>
           <pre name="57d0" id="57d0" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">node index.js what is the weather? Which city do you want the weather for? orlando It's 27 degrees celsius in orlando</code></pre>
           <p name="f891" id="f891" class="graf graf--p graf-after--pre">Now that we have this working, lets hook it up to the api and get real weather data.</p>
           <p name="9dc9" id="9dc9" class="graf graf--p graf-after--p">So firstly create an account for yourself on <a href="https://www.apixu.com/" data-href="https://www.apixu.com/" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">APIXU</a>. Once you do that you will get a API Access Key and you can play around the API by clicking on getting started. Put in a few city names and get a feel of how it works.</p>
           <figure name="88c8" id="88c8" class="graf graf--figure graf-after--p">
            <div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 397px;">
             <div class="aspectRatioPlaceholder-fill" style="padding-bottom: 56.699999999999996%;"></div>
             <div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="0*XXL7W2SDNVUmRD6f.png" data-width="1371" data-height="777" data-action="zoom" data-action-value="0*XXL7W2SDNVUmRD6f.png">
              <img src="https://cdn-images-1.medium.com/freeze/max/60/0*XXL7W2SDNVUmRD6f.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail">
              <canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas>
              <img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/0*XXL7W2SDNVUmRD6f.png">
              <noscript class="js-progressiveMedia-inner">
               <img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/0*XXL7W2SDNVUmRD6f.png">
              </noscript>
             </div>
            </div>
           </figure>
           <p name="181d" id="181d" class="graf graf--p graf-after--figure">Keep your api access key handy we will be needing it to make the api calls. We will be using the request module on npm to make the calls, so lets start by installing it.</p>
           <pre name="cb51" id="cb51" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">npm install --save request</code></pre>
           <p name="d827" id="d827" class="graf graf--p graf-after--pre">Once we have request installed lets require it by adding in the following lines at the top of index.js</p>
           <pre name="7d4e" id="7d4e" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">var request = require('request');</code></pre>
           <p name="35f8" id="35f8" class="graf graf--p graf-after--pre">Now that we have access to request module lets put in code to get weather data from API</p>
           <pre name="4539" id="4539" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">intents.matches('whatIsWeather',[ function(session,args){ var city = builder.EntityRecognizer.findEntity(args.entities,'cities'); if (city){ var city_name = city.entity; var url = "http://api.apixu.com/v1/current.json?key=&lt;Your API Key&gt;&amp;q=" + city_name; request(url,function(error,response,body){ body = JSON.parse(body); temp = body.current.temp_c; session.send("It's " + temp + " degrees celsius in " + city_name); }); }else{ builder.Prompts.text(session, 'Which city do you want the weather for?'); } }, function(session,results){ var city_name = results.response; var url = "http://api.apixu.com/v1/current.json?key=&lt;Your API key&gt;&amp;q=" + city_name; request(url,function(error,response,body){ body = JSON.parse(body); temp = body.current.temp_c; session.send("It's " + temp + " degrees celsius in " + city_name); }); } ]);</code></pre>
           <p name="050c" id="050c" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">NOTE: Don’t forget to put in your API key</strong></p>
           <p name="5ce5" id="5ce5" class="graf graf--p graf-after--p">Once you save and restart your app, it should be working as expected.</p>
           <pre name="a3b7" id="a3b7" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">node index.js whats the weather in paris It's 4 degrees celsius in Paris whats the weather Which city do you want the weather for? Beijing It's -4 degrees celsius in Beijing</code></pre>
           <p name="3ff8" id="3ff8" class="graf graf--p graf-after--pre">Step 5: Deploy your Bot</p>
           <p name="a48b" id="a48b" class="graf graf--p graf-after--p">In this final step we will be deploying our bot and then you can use Microsoft Bot Connector to connect it to channels of your choice.</p>
           <p name="00f0" id="00f0" class="graf graf--p graf-after--p">We will be using heroku for hosting as it is pretty straightforward and has a free tier.</p>
           <p name="a570" id="a570" class="graf graf--p graf-after--p">First lets set up version control</p>
           <pre name="3342" id="3342" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">git init</code></pre>
           <p name="1dd2" id="1dd2" class="graf graf--p graf-after--pre">Before adding and committing the files lets add a&nbsp;.gitignore to ignore node_modules folder as we don’t want to version control or deploy this.</p>
           <p name="b28d" id="b28d" class="graf graf--p graf-after--p">Add a file called&nbsp;.gitignore in the root folder and paste in the following</p>
           <pre name="ead3" id="ead3" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">node_modules/</code></pre>
           <p name="1db8" id="1db8" class="graf graf--p graf-after--pre">Now lets add and commit the files</p>
           <pre name="c51c" id="c51c" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">git add . git commit -m "basic bot setup done"</code></pre>
           <p name="a901" id="a901" class="graf graf--p graf-after--pre">Download and install heroku on your system following instructions from <a href="https://devcenter.heroku.com/articles/heroku-cli" data-href="https://devcenter.heroku.com/articles/heroku-cli" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">here</a>.</p>
           <p name="b8ae" id="b8ae" class="graf graf--p graf-after--p">While it installs add a new file called Procfile to root folder. This file will tell heroku what command to run to start your web. Paste in the following into the file.</p>
           <pre name="ae31" id="ae31" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">web: node index.js</code></pre>
           <p name="888b" id="888b" class="graf graf--p graf-after--pre">Before we deploy there are a few code changes we need to make in index.js</p>
           <p name="7925" id="7925" class="graf graf--p graf-after--p">We need to install a few npm modules to get this done. So run the following command.</p>
           <pre name="bc45" id="bc45" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">npm install --save restify</code></pre>
           <p name="f3a9" id="f3a9" class="graf graf--p graf-after--pre">Once the install is done, replace the following code</p>
           <pre name="aaba" id="aaba" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">var builder = require('botbuilder'); var apiairecognizer = require('api-ai-recognizer'); var request = require('request'); var connector = new builder.ConsoleConnector().listen();</code></pre>
           <p name="23d5" id="23d5" class="graf graf--p graf-after--pre">with</p>
           <pre name="c7e4" id="c7e4" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">var builder = require('botbuilder'); var restify = require('restify'); var apiairecognizer = require('api-ai-recognizer'); var request = require('request'); //========================================================= // Bot Setup //========================================================= // Setup Restify Server var server = restify.createServer(); server.listen(process.env.port || process.env.PORT || 3978, function () { console.log('%s listening to %s', server.name, server.url); }); // Create chat bot var connector = new builder.ChatConnector({ appId: &lt;MICROSOFT_APP_ID&gt;, appPassword: &lt;MICROSOFT_APP_PASSWORD&gt; });</code></pre>
           <p name="6380" id="6380" class="graf graf--p graf-after--pre">You can get your Microsoft APP ID and APP Password by registering your bot on the <a href="https://dev.botframework.com/bots/new" data-href="https://dev.botframework.com/bots/new" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">Microsoft Bot Framework Service</a></p>
           <p name="50f2" id="50f2" class="graf graf--p graf-after--p"><em class="markup--em markup--p-em">For now leave the Messaging endpoint field empty. We will get back to it.</em></p>
           <p name="22c5" id="22c5" class="graf graf--p graf-after--p">Once you put in the Microsoft App ID and password into the code, run the following commands to deploy to heroku.</p>
           <pre name="8b0e" id="8b0e" class="graf graf--pre graf-after--p"><code class="markup--code markup--pre-code">heroku create git push heroku master heroku open</code></pre>
           <p name="bed3" id="bed3" class="graf graf--p graf-after--pre">The last command must open the heroku url where your bot is hosted. Copy it and go back to your bot registration on Microsoft Bot Framework site.</p>
           <p name="92b9" id="92b9" class="graf graf--p graf-after--p">Paste in the url in the messaging endpoint. <strong class="markup--strong markup--p-strong">Add /api/messages to the end of the url</strong>.</p>
           <p name="7732" id="7732" class="graf graf--p graf-after--p">Messaging Endpoint&nbsp;: <a href="http://.herokuapp.com/api/messages" data-href="http://.herokuapp.com/api/messages" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">http://.herokuapp.com/api/messages</a></p>
           <p name="09cd" id="09cd" class="graf graf--p graf-after--p">Save the configuration and your done. Now you can deploy it to channels of your choice by following the excellent documentation on the site.</p>
           <p name="f5d8" id="f5d8" class="graf graf--p graf-after--p graf--trailing">Congrats on building a fully functional weather bot.</p>
          </div>
         </div>
        </section>
        <section name="010e" class="section section--body section--last">
         <div class="section-divider">
          <hr class="section-divider">
         </div>
         <div class="section-content">
          <div class="section-inner sectionLayout--insetColumn">
           <p name="2bd1" id="2bd1" class="graf graf--p graf--leading graf--trailing"><em class="markup--em markup--p-em">Originally published at </em><a href="http://blog.ozz.ai/using-api-ai-with-microsoft-bot-framework/" data-href="http://blog.ozz.ai/using-api-ai-with-microsoft-bot-framework/" class="markup--anchor markup--p-anchor" rel="nofollow noopener" target="_blank">http://blog.ozz.ai/using-api-ai-with-microsoft-bot-framework/</a><em class="markup--em markup--p-em"> on December 6, 2016.</em></p>
          </div>
         </div>
        </section>
       </div>
       <footer class="u-paddingTop10">
        <div class="container u-maxWidth740">
         <div class="row">
          <div class="col u-size12of12"></div>
         </div>
         <div class="row">
          <div class="col u-size12of12 js-postTags">
           <div class="u-paddingBottom10">
            <ul class="tags tags--postTags tags--borderless">
             <li><a class="link u-baseColor--link" href="https://medium.com/tag/bots?source=post" data-action-source="post">Bots</a></li>
             <li><a class="link u-baseColor--link" href="https://medium.com/tag/nodejs?source=post" data-action-source="post">Nodejs</a></li>
             <li><a class="link u-baseColor--link" href="https://medium.com/tag/microsoft-bot-framework?source=post" data-action-source="post">Microsoft Bot Framework</a></li>
            </ul>
           </div>
          </div>
         </div>
         <section class="u-paddingTop20 u-borderTopLightest u-marginTop10">
          <div class="u-textColorDarker u-fontSize22 u-marginBottom7">
           Show your support
          </div>
          <p class="u-textColorDark u-fontSize16">Clapping shows how much you appreciated Akshay Kulkarni’s story.</p>
         </section>
         <div class="postActions u-flexCenter js-postActionsFooter">
          <div class="u-flex1">
           <div class="multirecommend js-actionMultirecommend u-flexCenter u-width60" data-post-id="577a5d9fb66f" data-is-icon-29px="true" data-is-circle="true" data-has-recommend-list="true" data-source="post_actions_footer-----577a5d9fb66f---------------------clap_footer">
            <div class="u-relative u-foreground">
             <button class="button button--large button--circle button--withChrome u-baseColor--buttonNormal button--withIcon button--withSvgIcon clapButton js-actionMultirecommendButton clapButton--largePill u-relative u-foreground u-width60 u-height60 u-accentColor--textNormal u-accentColor--buttonNormal" data-action="sign-up-prompt" data-sign-in-action="multivote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/577a5d9fb66f" data-action-source="post_actions_footer-----577a5d9fb66f---------------------clap_footer" aria-label="Clap"><span class="button-defaultState"><span class="svgIcon svgIcon--clap svgIcon--33px u-relative u-topNegative2 u-xs-top0">
                <svg class="svgIcon-use" width="33" height="33" viewbox="0 0 33 33">
                 <path d="M28.86 17.342l-3.64-6.402c-.292-.433-.712-.729-1.163-.8a1.124 1.124 0 0 0-.889.213c-.63.488-.742 1.181-.33 2.061l1.222 2.587 1.4 2.46c2.234 4.085 1.511 8.007-2.145 11.663-.26.26-.526.49-.797.707 1.42-.084 2.881-.683 4.292-2.094 3.822-3.823 3.565-7.876 2.05-10.395zm-6.252 11.075c3.352-3.35 3.998-6.775 1.978-10.469l-3.378-5.945c-.292-.432-.712-.728-1.163-.8a1.122 1.122 0 0 0-.89.213c-.63.49-.742 1.182-.33 2.061l1.72 3.638a.502.502 0 0 1-.806.568l-8.91-8.91a1.335 1.335 0 0 0-1.887 1.886l5.292 5.292a.5.5 0 0 1-.707.707l-5.292-5.292-1.492-1.492c-.503-.503-1.382-.505-1.887 0a1.337 1.337 0 0 0 0 1.886l1.493 1.492 5.292 5.292a.499.499 0 0 1-.353.854.5.5 0 0 1-.354-.147L5.642 13.96a1.338 1.338 0 0 0-1.887 0 1.338 1.338 0 0 0 0 1.887l2.23 2.228 3.322 3.324a.499.499 0 0 1-.353.853.502.502 0 0 1-.354-.146l-3.323-3.324a1.333 1.333 0 0 0-1.886 0 1.325 1.325 0 0 0-.39.943c0 .356.138.691.39.943l6.396 6.397c3.528 3.53 8.86 5.313 12.821 1.353zM12.73 9.26l5.68 5.68-.49-1.037c-.518-1.107-.426-2.13.224-2.89l-3.303-3.304a1.337 1.337 0 0 0-1.886 0 1.326 1.326 0 0 0-.39.944c0 .217.067.42.165.607zm14.787 19.184c-1.599 1.6-3.417 2.392-5.353 2.392-.349 0-.7-.03-1.058-.082a7.922 7.922 0 0 1-3.667.887c-3.049 0-6.115-1.626-8.359-3.87l-6.396-6.397A2.315 2.315 0 0 1 2 19.724a2.327 2.327 0 0 1 1.923-2.296l-.875-.875a2.339 2.339 0 0 1 0-3.3 2.33 2.33 0 0 1 1.24-.647l-.139-.139c-.91-.91-.91-2.39 0-3.3.884-.884 2.421-.882 3.301 0l.138.14a2.335 2.335 0 0 1 3.948-1.24l.093.092c.091-.423.291-.828.62-1.157a2.336 2.336 0 0 1 3.3 0l3.384 3.386a2.167 2.167 0 0 1 1.271-.173c.534.086 1.03.354 1.441.765.11-.549.415-1.034.911-1.418a2.12 2.12 0 0 1 1.661-.41c.727.117 1.385.565 1.853 1.262l3.652 6.423c1.704 2.832 2.025 7.377-2.205 11.607zM13.217.484l-1.917.882 2.37 2.837-.454-3.719zm8.487.877l-1.928-.86-.44 3.697 2.368-2.837zM16.5 3.293L15.478-.005h2.044L16.5 3.293z" fill-rule="evenodd" />
                </svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--clapFilled svgIcon--33px u-relative u-topNegative2 u-xs-top0">
                <svg class="svgIcon-use" width="33" height="33" viewbox="0 0 33 33">
                 <g fill-rule="evenodd">
                  <path d="M29.58 17.1l-3.854-6.78c-.365-.543-.876-.899-1.431-.989a1.491 1.491 0 0 0-1.16.281c-.42.327-.65.736-.7 1.207v.001l3.623 6.367c2.46 4.498 1.67 8.802-2.333 12.807-.265.265-.536.505-.81.728 1.973-.222 3.474-1.286 4.45-2.263 4.166-4.165 3.875-8.6 2.215-11.36zm-4.831.82l-3.581-6.3c-.296-.439-.725-.742-1.183-.815a1.105 1.105 0 0 0-.89.213c-.647.502-.755 1.188-.33 2.098l1.825 3.858a.601.601 0 0 1-.197.747.596.596 0 0 1-.77-.067L10.178 8.21c-.508-.506-1.393-.506-1.901 0a1.335 1.335 0 0 0-.393.95c0 .36.139.698.393.95v.001l5.61 5.61a.599.599 0 1 1-.848.847l-5.606-5.606c-.001 0-.002 0-.003-.002L5.848 9.375a1.349 1.349 0 0 0-1.902 0 1.348 1.348 0 0 0 0 1.901l1.582 1.582 5.61 5.61a.6.6 0 0 1-.848.848l-5.61-5.61c-.51-.508-1.393-.508-1.9 0a1.332 1.332 0 0 0-.394.95c0 .36.139.697.393.952l2.363 2.362c.002.001.002.002.002.003l3.52 3.52a.6.6 0 0 1-.848.847l-3.522-3.523h-.001a1.336 1.336 0 0 0-.95-.393 1.345 1.345 0 0 0-.949 2.295l6.779 6.78c3.715 3.713 9.327 5.598 13.49 1.434 3.527-3.528 4.21-7.13 2.086-11.015zM11.817 7.727c.06-.328.213-.64.466-.893.64-.64 1.755-.64 2.396 0l3.232 3.232c-.82.783-1.09 1.833-.764 2.992l-5.33-5.33z" />
                  <path d="M13.285.48l-1.916.881 2.37 2.837z" />
                  <path d="M21.719 1.361L19.79.501l-.44 3.697z" />
                  <path d="M16.502 3.298L15.481 0h2.043z" />
                 </g>
                </svg></span></span></button>
             <div class="clapUndo u-width60 u-round u-height32 u-absolute u-borderBox u-paddingRight5 u-transition--transform200Spring u-background--brandSageLighter js-clapUndo" style="top: 14px; padding: 2px;">
              <button class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-floatRight" data-action="multivote-undo" data-action-value="577a5d9fb66f"><span class="svgIcon svgIcon--removeThin svgIcon--29px">
                <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
                 <path d="M20.13 8.11l-5.61 5.61-5.609-5.61-.801.801 5.61 5.61-5.61 5.61.801.8 5.61-5.609 5.61 5.61.8-.801-5.609-5.61 5.61-5.61" fill-rule="evenodd" />
                </svg></span></button>
             </div>
            </div>
            <span class="u-textAlignCenter u-relative u-background js-actionMultirecommendCount u-marginLeft10"><button class="button button--chromeless u-baseColor--buttonNormal js-multirecommendCountButton" data-action="show-recommends" data-action-value="577a5d9fb66f">32</button></span>
           </div>
          </div>
          <div class="u-flex0 buttonSet buttonSet--narrow">
           <div class="buttonSet-inner">
            <button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" data-action="scroll-to-responses" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--response svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M21.27 20.058c1.89-1.826 2.754-4.17 2.754-6.674C24.024 8.21 19.67 4 14.1 4 8.53 4 4 8.21 4 13.384c0 5.175 4.53 9.385 10.1 9.385 1.007 0 2-.14 2.95-.41.285.25.592.49.918.7 1.306.87 2.716 1.31 4.19 1.31.276-.01.494-.14.6-.36a.625.625 0 0 0-.052-.65c-.61-.84-1.042-1.71-1.282-2.58a5.417 5.417 0 0 1-.154-.75zm-3.85 1.324l-.083-.28-.388.12a9.72 9.72 0 0 1-2.85.424c-4.96 0-8.99-3.706-8.99-8.262 0-4.556 4.03-8.263 8.99-8.263 4.95 0 8.77 3.71 8.77 8.27 0 2.25-.75 4.35-2.5 5.92l-.24.21v.32c0 .07 0 .19.02.37.03.29.1.6.19.92.19.7.49 1.4.89 2.08-.93-.14-1.83-.49-2.67-1.06-.34-.22-.88-.48-1.16-.74z" />
              </svg></span></button>
            <button class="button button--chromeless u-baseColor--buttonNormal" data-action="scroll-to-responses">4</button>
           </div>
           <div class="buttonSet-inner u-xs-hide">
            <button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" title="Share on Twitter" aria-label="Share on Twitter" data-action="share-on-twitter" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--twitter svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M21.967 11.8c.018 5.93-4.607 11.18-11.177 11.18-2.172 0-4.25-.62-6.047-1.76l-.268.422-.038.5.186.013.168.012c.3.02.44.032.6.046 2.06-.026 3.95-.686 5.49-1.86l1.12-.85-1.4-.048c-1.57-.055-2.92-1.08-3.36-2.51l-.48.146-.05.5c.22.03.48.05.75.08.48-.02.87-.07 1.25-.15l2.33-.49-2.32-.49c-1.68-.35-2.91-1.83-2.91-3.55 0-.05 0-.01-.01.03l-.49-.1-.25.44c.63.36 1.35.57 2.07.58l1.7.04L7.4 13c-.978-.662-1.59-1.79-1.618-3.047a4.08 4.08 0 0 1 .524-1.8l-.825.07a12.188 12.188 0 0 0 8.81 4.515l.59.033-.06-.59v-.02c-.05-.43-.06-.63-.06-.87a3.617 3.617 0 0 1 6.27-2.45l.2.21.28-.06c1.01-.22 1.94-.59 2.73-1.09l-.75-.56c-.1.36-.04.89.12 1.36.23.68.58 1.13 1.17.85l-.21-.45-.42-.27c-.52.8-1.17 1.48-1.92 2L22 11l.016.28c.013.2.014.35 0 .52v.04zm.998.038c.018-.22.017-.417 0-.66l-.498.034.284.41a8.183 8.183 0 0 0 2.2-2.267l.97-1.48-1.6.755c.17-.08.3-.02.34.03a.914.914 0 0 1-.13-.292c-.1-.297-.13-.64-.1-.766l.36-1.254-1.1.695c-.69.438-1.51.764-2.41.963l.48.15a4.574 4.574 0 0 0-3.38-1.484 4.616 4.616 0 0 0-4.61 4.613c0 .29.02.51.08.984l.01.02.5-.06.03-.5c-3.17-.18-6.1-1.7-8.08-4.15l-.48-.56-.36.64c-.39.69-.62 1.48-.65 2.28.04 1.61.81 3.04 2.06 3.88l.3-.92c-.55-.02-1.11-.17-1.6-.45l-.59-.34-.14.67c-.02.08-.02.16 0 .24-.01 2.12 1.55 4.01 3.69 4.46l.1-.49-.1-.49c-.33.07-.67.12-1.03.14-.18-.02-.43-.05-.64-.07l-.76-.09.23.73c.57 1.84 2.29 3.14 4.28 3.21l-.28-.89a8.252 8.252 0 0 1-4.85 1.66c-.12-.01-.26-.02-.56-.05l-.17-.01-.18-.01L2.53 21l1.694 1.07a12.233 12.233 0 0 0 6.58 1.917c7.156 0 12.2-5.73 12.18-12.18l-.002.04z" />
              </svg></span></button>
           </div>
           <div class="buttonSet-inner u-xs-hide">
            <button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" title="Share on Facebook" aria-label="Share on Facebook" data-action="share-on-facebook" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--facebook svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M16.39 23.61v-5.808h1.846a.55.55 0 0 0 .546-.48l.36-2.797a.551.551 0 0 0-.547-.62H16.39V12.67c0-.67.12-.813.828-.813h1.474a.55.55 0 0 0 .55-.55V8.803a.55.55 0 0 0-.477-.545c-.436-.06-1.36-.116-2.22-.116-2.5 0-4.13 1.62-4.13 4.248v1.513H10.56a.551.551 0 0 0-.55.55v2.797c0 .304.248.55.55.55h1.855v5.76c-4.172-.96-7.215-4.7-7.215-9.1 0-5.17 4.17-9.36 9.31-9.36 5.14 0 9.31 4.19 9.31 9.36 0 4.48-3.155 8.27-7.43 9.15M14.51 4C8.76 4 4.1 8.684 4.1 14.46c0 5.162 3.75 9.523 8.778 10.32a.55.55 0 0 0 .637-.543v-6.985a.551.551 0 0 0-.55-.55H11.11v-1.697h1.855a.55.55 0 0 0 .55-.55v-2.063c0-2.02 1.136-3.148 3.03-3.148.567 0 1.156.027 1.597.06v1.453h-.924c-1.363 0-1.93.675-1.93 1.912v1.78c0 .3.247.55.55.55h2.132l-.218 1.69H15.84c-.305 0-.55.24-.55.55v7.02c0 .33.293.59.623.54 5.135-.7 9.007-5.11 9.007-10.36C24.92 8.68 20.26 4 14.51 4" />
              </svg></span></button>
           </div>
           <div class="buttonSet-inner u-xs-show">
            <button class="button button--large button--dark button--chromeless u-baseColor--buttonDark button--withIcon button--withSvgIcon js-shareStoryButton" title="Share this story on Twitter or Facebook" aria-label="Share this story on Twitter or Facebook" data-action="show-share-popover" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--share svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M20.385 8H19a.5.5 0 1 0 .011 1h1.39c.43 0 .84.168 1.14.473.31.305.48.71.48 1.142v10.77c0 .43-.17.837-.47 1.142-.3.305-.71.473-1.14.473H8.62c-.43 0-.84-.168-1.144-.473a1.603 1.603 0 0 1-.473-1.142v-10.77c0-.43.17-.837.48-1.142A1.599 1.599 0 0 1 8.62 9H10a.502.502 0 0 0 0-1H8.615c-.67 0-1.338.255-1.85.766-.51.51-.765 1.18-.765 1.85v10.77c0 .668.255 1.337.766 1.848.51.51 1.18.766 1.85.766h11.77c.668 0 1.337-.255 1.848-.766.51-.51.766-1.18.766-1.85v-10.77c0-.668-.255-1.337-.766-1.848A2.61 2.61 0 0 0 20.384 8zm-8.67-2.508L14 3.207v8.362c0 .27.224.5.5.5s.5-.23.5-.5V3.2l2.285 2.285a.49.49 0 0 0 .704-.001.511.511 0 0 0 0-.708l-3.14-3.14a.504.504 0 0 0-.71 0L11 4.776a.501.501 0 0 0 .71.706" fill-rule="evenodd" />
              </svg></span></button>
           </div>
          </div>
         </div>
        </div>
        <div class="js-postPromotionWrapper postPromotionWrapper" data-location-id="footer_above_post_attribution"></div>
        <div class="u-maxWidth740 u-paddingTop20 u-marginTop10 u-borderTopLightest container u-paddingBottom20 u-xs-paddingBottom10 js-postAttributionFooterContainer">
         <div class="row js-postFooterInfo">
          <div class="col u-size12of12">
           <li class="u-block u-paddingBottom18 js-cardUser">
            <div class="u-marginLeft20 u-floatRight">
             <span class="followState js-followState" data-user-id="e9ca4f68c727"><button class="button button--small u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton" data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.com/@akshaykulkarni/using-api-ai-with-microsoft-bot-framework-577a5d9fb66f" data-action-source="footer_card"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton" data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/e9ca4f68c727" data-action-source="footer_card-e9ca4f68c727-------------------------follow_footer"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span>
            </div>
            <div class="u-tableCell ">
             <a class="link avatar u-baseColor--link" href="https://medium.com/@akshaykulkarni?source=footer_card" title="Go to the profile of Akshay Kulkarni" aria-label="Go to the profile of Akshay Kulkarni" data-action-source="footer_card" data-user-id="e9ca4f68c727" dir="auto"><img src="https://cdn-images-1.medium.com/fit/c/120/120/1*IpuSaitD7vXaX3nUi1GVJw.jpeg" class="avatar-image avatar-image--small" alt="Go to the profile of Akshay Kulkarni"></a>
            </div>
            <div class="u-tableCell u-verticalAlignMiddle u-breakWord u-paddingLeft15">
             <h3 class="u-fontSize18 u-lineHeightTighter u-marginBottom4"><a class="link link--primary u-accentColor--hoverTextNormal" href="https://medium.com/@akshaykulkarni" property="cc:attributionName" title="Go to the profile of Akshay Kulkarni" aria-label="Go to the profile of Akshay Kulkarni" rel="author cc:attributionUrl" data-user-id="e9ca4f68c727" dir="auto">Akshay Kulkarni</a></h3>
            </div></li>
          </div>
         </div>
        </div>
        <div class="js-postFooterPlacements"></div>
        <div class="u-padding0 u-clearfix u-backgroundGrayLightest u-print-hide supplementalPostContent js-responsesWrapper"></div>
        <div class="supplementalPostContent js-heroPromo"></div>
       </footer>
      </article>
     </main>
     <div class="u-marginAuto u-maxWidth1000">
      <div class="js-postShareWidget u-foreground u-sm-hide u-transition--fadeOut300 u-fixed">
       <ul>
        <li class="u-textAlignCenter">
         <div class="multirecommend js-actionMultirecommend u-flexColumn u-marginBottom10 u-width60" data-post-id="577a5d9fb66f" data-is-icon-29px="true" data-is-vertical="true" data-is-circle="true" data-is-compressed="true" data-has-recommend-list="true" data-source="post_share_widget-----577a5d9fb66f---------------------clap_sidebar">
          <div class="u-relative u-foreground">
           <button class="button button--large button--circle button--withChrome u-baseColor--buttonNormal button--withIcon button--withSvgIcon clapButton js-actionMultirecommendButton clapButton--largePill u-relative u-foreground u-width60 u-height60 u-accentColor--textNormal u-accentColor--buttonNormal" data-action="sign-up-prompt" data-sign-in-action="multivote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/577a5d9fb66f" data-action-source="post_share_widget-----577a5d9fb66f---------------------clap_sidebar" aria-label="Clap"><span class="button-defaultState"><span class="svgIcon svgIcon--clap svgIcon--33px u-relative u-topNegative2 u-xs-top0">
              <svg class="svgIcon-use" width="33" height="33" viewbox="0 0 33 33">
               <path d="M28.86 17.342l-3.64-6.402c-.292-.433-.712-.729-1.163-.8a1.124 1.124 0 0 0-.889.213c-.63.488-.742 1.181-.33 2.061l1.222 2.587 1.4 2.46c2.234 4.085 1.511 8.007-2.145 11.663-.26.26-.526.49-.797.707 1.42-.084 2.881-.683 4.292-2.094 3.822-3.823 3.565-7.876 2.05-10.395zm-6.252 11.075c3.352-3.35 3.998-6.775 1.978-10.469l-3.378-5.945c-.292-.432-.712-.728-1.163-.8a1.122 1.122 0 0 0-.89.213c-.63.49-.742 1.182-.33 2.061l1.72 3.638a.502.502 0 0 1-.806.568l-8.91-8.91a1.335 1.335 0 0 0-1.887 1.886l5.292 5.292a.5.5 0 0 1-.707.707l-5.292-5.292-1.492-1.492c-.503-.503-1.382-.505-1.887 0a1.337 1.337 0 0 0 0 1.886l1.493 1.492 5.292 5.292a.499.499 0 0 1-.353.854.5.5 0 0 1-.354-.147L5.642 13.96a1.338 1.338 0 0 0-1.887 0 1.338 1.338 0 0 0 0 1.887l2.23 2.228 3.322 3.324a.499.499 0 0 1-.353.853.502.502 0 0 1-.354-.146l-3.323-3.324a1.333 1.333 0 0 0-1.886 0 1.325 1.325 0 0 0-.39.943c0 .356.138.691.39.943l6.396 6.397c3.528 3.53 8.86 5.313 12.821 1.353zM12.73 9.26l5.68 5.68-.49-1.037c-.518-1.107-.426-2.13.224-2.89l-3.303-3.304a1.337 1.337 0 0 0-1.886 0 1.326 1.326 0 0 0-.39.944c0 .217.067.42.165.607zm14.787 19.184c-1.599 1.6-3.417 2.392-5.353 2.392-.349 0-.7-.03-1.058-.082a7.922 7.922 0 0 1-3.667.887c-3.049 0-6.115-1.626-8.359-3.87l-6.396-6.397A2.315 2.315 0 0 1 2 19.724a2.327 2.327 0 0 1 1.923-2.296l-.875-.875a2.339 2.339 0 0 1 0-3.3 2.33 2.33 0 0 1 1.24-.647l-.139-.139c-.91-.91-.91-2.39 0-3.3.884-.884 2.421-.882 3.301 0l.138.14a2.335 2.335 0 0 1 3.948-1.24l.093.092c.091-.423.291-.828.62-1.157a2.336 2.336 0 0 1 3.3 0l3.384 3.386a2.167 2.167 0 0 1 1.271-.173c.534.086 1.03.354 1.441.765.11-.549.415-1.034.911-1.418a2.12 2.12 0 0 1 1.661-.41c.727.117 1.385.565 1.853 1.262l3.652 6.423c1.704 2.832 2.025 7.377-2.205 11.607zM13.217.484l-1.917.882 2.37 2.837-.454-3.719zm8.487.877l-1.928-.86-.44 3.697 2.368-2.837zM16.5 3.293L15.478-.005h2.044L16.5 3.293z" fill-rule="evenodd" />
              </svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--clapFilled svgIcon--33px u-relative u-topNegative2 u-xs-top0">
              <svg class="svgIcon-use" width="33" height="33" viewbox="0 0 33 33">
               <g fill-rule="evenodd">
                <path d="M29.58 17.1l-3.854-6.78c-.365-.543-.876-.899-1.431-.989a1.491 1.491 0 0 0-1.16.281c-.42.327-.65.736-.7 1.207v.001l3.623 6.367c2.46 4.498 1.67 8.802-2.333 12.807-.265.265-.536.505-.81.728 1.973-.222 3.474-1.286 4.45-2.263 4.166-4.165 3.875-8.6 2.215-11.36zm-4.831.82l-3.581-6.3c-.296-.439-.725-.742-1.183-.815a1.105 1.105 0 0 0-.89.213c-.647.502-.755 1.188-.33 2.098l1.825 3.858a.601.601 0 0 1-.197.747.596.596 0 0 1-.77-.067L10.178 8.21c-.508-.506-1.393-.506-1.901 0a1.335 1.335 0 0 0-.393.95c0 .36.139.698.393.95v.001l5.61 5.61a.599.599 0 1 1-.848.847l-5.606-5.606c-.001 0-.002 0-.003-.002L5.848 9.375a1.349 1.349 0 0 0-1.902 0 1.348 1.348 0 0 0 0 1.901l1.582 1.582 5.61 5.61a.6.6 0 0 1-.848.848l-5.61-5.61c-.51-.508-1.393-.508-1.9 0a1.332 1.332 0 0 0-.394.95c0 .36.139.697.393.952l2.363 2.362c.002.001.002.002.002.003l3.52 3.52a.6.6 0 0 1-.848.847l-3.522-3.523h-.001a1.336 1.336 0 0 0-.95-.393 1.345 1.345 0 0 0-.949 2.295l6.779 6.78c3.715 3.713 9.327 5.598 13.49 1.434 3.527-3.528 4.21-7.13 2.086-11.015zM11.817 7.727c.06-.328.213-.64.466-.893.64-.64 1.755-.64 2.396 0l3.232 3.232c-.82.783-1.09 1.833-.764 2.992l-5.33-5.33z" />
                <path d="M13.285.48l-1.916.881 2.37 2.837z" />
                <path d="M21.719 1.361L19.79.501l-.44 3.697z" />
                <path d="M16.502 3.298L15.481 0h2.043z" />
               </g>
              </svg></span></span></button>
           <div class="clapUndo u-width60 u-round u-height32 u-absolute u-borderBox u-paddingRight5 u-transition--transform200Spring u-background--brandSageLighter js-clapUndo" style="top: 14px; padding: 2px;">
            <button class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-floatRight" data-action="multivote-undo" data-action-value="577a5d9fb66f"><span class="svgIcon svgIcon--removeThin svgIcon--29px">
              <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
               <path d="M20.13 8.11l-5.61 5.61-5.609-5.61-.801.801 5.61 5.61-5.61 5.61.801.8 5.61-5.609 5.61 5.61.8-.801-5.609-5.61 5.61-5.61" fill-rule="evenodd" />
              </svg></span></button>
           </div>
          </div>
          <span class="u-textAlignCenter u-relative u-background js-actionMultirecommendCount u-flexOrderNegative1 u-height20 u-marginBottom7"><button class="button button--chromeless u-baseColor--buttonNormal js-multirecommendCountButton u-block u-marginAuto" data-action="show-recommends" data-action-value="577a5d9fb66f">32</button></span>
         </div></li>
        <li class="u-textAlignCenter"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" title="Share on Twitter" aria-label="Share on Twitter" data-action="share-on-twitter" data-action-source="post_share_widget"><span class="svgIcon svgIcon--twitter svgIcon--29px">
           <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
            <path d="M21.967 11.8c.018 5.93-4.607 11.18-11.177 11.18-2.172 0-4.25-.62-6.047-1.76l-.268.422-.038.5.186.013.168.012c.3.02.44.032.6.046 2.06-.026 3.95-.686 5.49-1.86l1.12-.85-1.4-.048c-1.57-.055-2.92-1.08-3.36-2.51l-.48.146-.05.5c.22.03.48.05.75.08.48-.02.87-.07 1.25-.15l2.33-.49-2.32-.49c-1.68-.35-2.91-1.83-2.91-3.55 0-.05 0-.01-.01.03l-.49-.1-.25.44c.63.36 1.35.57 2.07.58l1.7.04L7.4 13c-.978-.662-1.59-1.79-1.618-3.047a4.08 4.08 0 0 1 .524-1.8l-.825.07a12.188 12.188 0 0 0 8.81 4.515l.59.033-.06-.59v-.02c-.05-.43-.06-.63-.06-.87a3.617 3.617 0 0 1 6.27-2.45l.2.21.28-.06c1.01-.22 1.94-.59 2.73-1.09l-.75-.56c-.1.36-.04.89.12 1.36.23.68.58 1.13 1.17.85l-.21-.45-.42-.27c-.52.8-1.17 1.48-1.92 2L22 11l.016.28c.013.2.014.35 0 .52v.04zm.998.038c.018-.22.017-.417 0-.66l-.498.034.284.41a8.183 8.183 0 0 0 2.2-2.267l.97-1.48-1.6.755c.17-.08.3-.02.34.03a.914.914 0 0 1-.13-.292c-.1-.297-.13-.64-.1-.766l.36-1.254-1.1.695c-.69.438-1.51.764-2.41.963l.48.15a4.574 4.574 0 0 0-3.38-1.484 4.616 4.616 0 0 0-4.61 4.613c0 .29.02.51.08.984l.01.02.5-.06.03-.5c-3.17-.18-6.1-1.7-8.08-4.15l-.48-.56-.36.64c-.39.69-.62 1.48-.65 2.28.04 1.61.81 3.04 2.06 3.88l.3-.92c-.55-.02-1.11-.17-1.6-.45l-.59-.34-.14.67c-.02.08-.02.16 0 .24-.01 2.12 1.55 4.01 3.69 4.46l.1-.49-.1-.49c-.33.07-.67.12-1.03.14-.18-.02-.43-.05-.64-.07l-.76-.09.23.73c.57 1.84 2.29 3.14 4.28 3.21l-.28-.89a8.252 8.252 0 0 1-4.85 1.66c-.12-.01-.26-.02-.56-.05l-.17-.01-.18-.01L2.53 21l1.694 1.07a12.233 12.233 0 0 0 6.58 1.917c7.156 0 12.2-5.73 12.18-12.18l-.002.04z" />
           </svg></span></button></li>
        <li class="u-textAlignCenter"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon" title="Share on Facebook" aria-label="Share on Facebook" data-action="share-on-facebook" data-action-source="post_share_widget"><span class="svgIcon svgIcon--facebook svgIcon--29px">
           <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
            <path d="M16.39 23.61v-5.808h1.846a.55.55 0 0 0 .546-.48l.36-2.797a.551.551 0 0 0-.547-.62H16.39V12.67c0-.67.12-.813.828-.813h1.474a.55.55 0 0 0 .55-.55V8.803a.55.55 0 0 0-.477-.545c-.436-.06-1.36-.116-2.22-.116-2.5 0-4.13 1.62-4.13 4.248v1.513H10.56a.551.551 0 0 0-.55.55v2.797c0 .304.248.55.55.55h1.855v5.76c-4.172-.96-7.215-4.7-7.215-9.1 0-5.17 4.17-9.36 9.31-9.36 5.14 0 9.31 4.19 9.31 9.36 0 4.48-3.155 8.27-7.43 9.15M14.51 4C8.76 4 4.1 8.684 4.1 14.46c0 5.162 3.75 9.523 8.778 10.32a.55.55 0 0 0 .637-.543v-6.985a.551.551 0 0 0-.55-.55H11.11v-1.697h1.855a.55.55 0 0 0 .55-.55v-2.063c0-2.02 1.136-3.148 3.03-3.148.567 0 1.156.027 1.597.06v1.453h-.924c-1.363 0-1.93.675-1.93 1.912v1.78c0 .3.247.55.55.55h2.132l-.218 1.69H15.84c-.305 0-.55.24-.55.55v7.02c0 .33.293.59.623.54 5.135-.7 9.007-5.11 9.007-10.36C24.92 8.68 20.26 4 14.51 4" />
           </svg></span></button></li>
        <li class="u-textAlignCenter"><button class="button button--large button--dark button--chromeless is-touchIconFadeInPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon button--bookmark js-bookmarkButton" title="Bookmark this story to read later" aria-label="Bookmark this story to read later" data-action="sign-up-prompt" data-sign-in-action="add-to-bookmarks" data-requires-token="true" data-redirect="https://medium.com/_/bookmark/p/577a5d9fb66f" data-action-source="post_share_widget-----577a5d9fb66f---------------------bookmark_sidebar"><span class="button-defaultState"><span class="svgIcon svgIcon--bookmark svgIcon--29px">
            <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
             <path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4zM21 23l-5.91-3.955-.148-.107a.751.751 0 0 0-.884 0l-.147.107L8 23V6.615C8 5.725 8.725 5 9.615 5h9.77C20.275 5 21 5.725 21 6.615V23z" fill-rule="evenodd" />
            </svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--bookmarkFilled svgIcon--29px">
            <svg class="svgIcon-use" width="29" height="29" viewbox="0 0 29 29">
             <path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4z" fill-rule="evenodd" />
            </svg></span></span></button></li>
       </ul>
      </div>
     </div>
     <div class="u-fixed u-bottom0 u-sizeFullWidth u-backgroundWhite u-boxShadowTop u-borderBox u-paddingTop10 u-paddingBottom10 u-zIndexMetabar u-xs-paddingLeft10 u-xs-paddingRight10 js-stickyFooter">
      <div class="u-maxWidth700 u-marginAuto u-flexCenter">
       <div class="u-fontSize16 u-flex1 u-flexCenter">
        <div class="u-flex0 u-inlineBlock u-paddingRight20 u-xs-paddingRight10">
         <a class="link avatar u-inline u-baseColor--link" href="https://medium.com/@akshaykulkarni" data-action="show-user-card" data-action-value="e9ca4f68c727" data-action-type="hover" data-user-id="e9ca4f68c727" dir="auto"><img src="https://cdn-images-1.medium.com/fit/c/80/80/1*IpuSaitD7vXaX3nUi1GVJw.jpeg" class="avatar-image avatar-image--smaller" alt="Go to the profile of Akshay Kulkarni"></a>
        </div>
        <div class="u-flex1 u-inlineBlock">
         <div class="u-xs-hide">
          Never miss a story from
          <strong> Akshay Kulkarni</strong>, when you sign up for Medium. 
          <a class="link link--accent u-accentColor--textNormal u-accentColor--textDarken u-baseColor--link" href="https://medium.com/@Medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg" data-action-source="sticky_footer">Learn more</a>
         </div>
         <div class="u-xs-show">
          Never miss a story from
          <strong> Akshay Kulkarni</strong>
         </div>
        </div>
       </div>
       <div class="u-marginLeft50 u-xs-marginAuto">
        <span class="followState js-followState" data-user-id="e9ca4f68c727"><button class="button u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton u-uiTextSemibold u-textUppercase u-fontSize12" data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.com/@akshaykulkarni/using-api-ai-with-microsoft-bot-framework-577a5d9fb66f" data-action-source="sticky_footer"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary is-active u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton u-uiTextSemibold u-textUppercase u-fontSize12" data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/e9ca4f68c727" data-action-source="sticky_footer-e9ca4f68c727-------------------------follow_metabar"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Get updates</span></button></span>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="loadingBar"></div>
  <script>// <![CDATA[
window["obvInit"] = function (opt_embedded) {window["obvInit"]["embedded"] = opt_embedded; window["obvInit"]["ready"] = true;}
// ]]></script>
  <script>// <![CDATA[
var GLOBALS = {"audioUrl":"https://d1fcbxp97j4nb2.cloudfront.net","baseUrl":"https://medium.com","buildLabel":"30896-984552c","currentUser":{"userId":"lo_ed81515c2ff","isVerified":false,"subscriberEmail":"","hasPastMemberships":false,"isEnrolledInHightower":false,"isEligibleForHightower":false},"currentUserHasUnverifiedEmail":false,"isAuthenticated":false,"isCurrentUserVerified":false,"mediumTwitterScreenName":"medium","miroUrl":"https://cdn-images-1.medium.com","moduleUrls":{"base":"https://cdn-static-1.medium.com/_/fp/gen-js/main-base.bundle.Oty0kW8MpxxfXYEYUCl8gw.js","common-async":"https://cdn-static-1.medium.com/_/fp/gen-js/main-common-async.bundle.Nrpddu7_2oXRI1Nm7-OoBA.js","home-screens":"https://cdn-static-1.medium.com/_/fp/gen-js/main-home-screens.bundle.Fp2Qr5Lg9DQ7xqnIXdNWjg.js","misc-screens":"https://cdn-static-1.medium.com/_/fp/gen-js/main-misc-screens.bundle.b0FeKH3_Mcj-q_sQqwLfbw.js","notes":"https://cdn-static-1.medium.com/_/fp/gen-js/main-notes.bundle.1Y2yt5HlKRYFi3yxDJ2J5A.js","payments":"https://cdn-static-1.medium.com/_/fp/gen-js/main-payments.bundle.ocZz_d_UwVkyjO_n-YN7sQ.js","posters":"https://cdn-static-1.medium.com/_/fp/gen-js/main-posters.bundle.snQNwZGKeDjwgMI3E1_vDA.js","pubs":"https://cdn-static-1.medium.com/_/fp/gen-js/main-pubs.bundle.s3L1rX3BTbilWRdgiYuFug.js","stats":"https://cdn-static-1.medium.com/_/fp/gen-js/main-stats.bundle.YYXgqq3uOhmNJ5GwyXMVkg.js"},"previewConfig":{"weightThreshold":1,"weightImageParagraph":0.51,"weightIframeParagraph":0.8,"weightTextParagraph":0.08,"weightEmptyParagraph":0,"weightP":0.003,"weightH":0.005,"weightBq":0.003,"minPTextLength":60,"truncateBoundaryChars":20,"detectTitle":true,"detectTitleLevThreshold":0.15},"productName":"Medium","supportsEdit":true,"termsUrl":"//medium.com/policy/9db0094a1e0f","textshotHost":"textshot.medium.com","transactionId":"1507035176935:38b63c35fd00","useragent":{"browser":"chrome","family":"chrome","os":"windows","version":45,"supportsDesktopEdit":true,"supportsInteract":true,"supportsView":true,"isMobile":false,"isTablet":false,"isNative":false,"supportsFileAPI":true,"isTier1":true,"clientVersion":"","unknownParagraphsBad":false,"clientChannel":"","supportsRealScrollEvents":true,"supportsVhUnits":true,"ruinsViewportSections":false,"supportsHtml5Video":true,"supportsMagicUnderlines":true,"isWebView":false,"isFacebookWebView":false,"supportsProgressiveMedia":true,"supportsPromotedPosts":true,"isBot":false,"isNativeIphone":false,"supportsCssVariables":false,"supportsVideoSections":false,"emojiSupportLevel":1,"supportsScrollableMetabar":true},"variants":{"allow_access":true,"allow_signup":true,"allow_test_auth":"disallow","signin_services":"twitter,facebook,google,email,google-fastidv","signup_services":"twitter,facebook,google,email,google-fastidv","android_rating_prompt_recommend_threshold":5,"google_sign_in_android":true,"enable_onboarding":true,"ios_custom_miro_url":"https://cdn-images-1.medium.com","reengagement_notification_duration":3,"enable_adsnative_integration":true,"browsable_stream_config_bucket":"curated-topics","ios_small_post_preview_truncation_length":5.5,"ios_large_post_preview_truncation_length":5.5,"disable_ios_catalog_badging":true,"enable_series_creation":true,"enable_your_series_pages":true,"enable_productionized_series":true,"enable_dedicated_series_tab_api_ios":true,"enable_clap_milestone_notifications":true,"enable_series_stats_page":true,"enable_post_import":true,"enable_sponsored_post_labelling":true,"enable_logged_in_follow_on_collection_post":true,"promoted_story_placement_locations":"POST_PAGE_FOOTER","enable_chunky_home_page":true,"retire_ranked_feed":true,"enable_export_members":true,"enable_series_card_background_creation":true,"enable_ios_onboarding_notifications":true,"available_membership_plans":"60e220181034","available_monthly_plan":"60e220181034","available_annual_plan":"2c754bcc2995","double_write_post_from_followed_tag_items":true,"enable_sms":true,"enable_series_in_user_profiles":true,"enable_new_logged_out_bento_operation":true,"is_not_medium_subscriber":true,"subs_landing_copy_experiments":"short","logged_out_homepage_promo":"content","enable_dynamic_topic_windows":true,"enable_emoji_in_editor":true,"enable_glyph":true,"glyph_font_set":"m","enable_branding":true,"enable_upsell_tracking":true,"enable_nav_upsell":true,"enable_post_page_signin":true,"post_page_signin_copy_count":true,"enable_sequence_carousel":true,"enable_multirecommends":true,"enable_updated_homepage_order":true,"enable_auto_grid_on_new_from_your_network":true,"enable_unbundled_you_might_like":true,"enable_noteworthy_promo":true,"enable_interest_graph_vtwo_topic_suggestions":true,"enable_popchunks":true,"enable_hightower":true,"enable_user_post_metering":true,"max_premium_content_per_user_under_metering":3,"enable_welcome_email_v2":true,"enable_topic_writer_onboarding":true,"enable_hightower_onboarding_blinker":true,"enable_algolia_search_reporting":true,"enable_direct_signin":true,"enable_strong_graph_chp_reorder":true,"enable_post_page_cleanup":"control"},"xsrfToken":"","iosAppId":"828256236","supportEmail":"yourfriends@medium.com","fp":{"/icons/favicon.svg":"https://cdn-static-1.medium.com/_/fp/icons/favicon.KjTfUJo7yJH_fCoUzzH3cg.svg","/icons/favicon-dev-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-dev-editor.YKKRxBO8EMvIqhyCwIiJeQ.ico","/icons/favicon-hatch-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-hatch-editor.BuEyHIqlyh2s_XEk4Rl32Q.ico","/icons/favicon-medium-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-medium-editor.PiakrZWB7Yb80quUVQWM6g.ico"},"authBaseUrl":"https://medium.com","imageUploadSizeMb":25,"isAuthDomainRequest":true,"algoliaApiEndpoint":"https://MQ57UUUQZ2-dsn.algolia.net","algoliaAppId":"MQ57UUUQZ2","algoliaSearchOnlyApiKey":"394474ced050e3911ae2249ecc774921","iosAppStoreUrl":"https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8","iosAppLinkBaseUrl":"medium:","algoliaIndexPrefix":"medium_","androidPlayStoreUrl":"https://play.google.com/store/apps/details?id=com.medium.reader","googleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","androidPackage":"com.medium.reader","androidPlayStoreMarketScheme":"market://details?id=com.medium.reader","googleAuthUri":"https://accounts.google.com/o/oauth2/auth","androidScheme":"medium","layoutData":{"useDynamicScripts":false,"googleAnalyticsTrackingCode":"UA-24232453-2","jsShivUrl":"https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js","useDynamicCss":false,"faviconUrl":"https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico","faviconImageId":"1*8I-HPL0bfoIzGied-dzOvA.png","fontSets":[{"id":8,"url":"https://glyph.medium.com/css/e/sr/latin/e/ssr/latin/e/ssb/latin/m.css"},{"id":9,"url":"https://glyph.medium.com/css/mkt.css"}],"editorFaviconUrl":"https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium-editor.3Y6xpZ-0FSdWDnPM3hSBIA.ico","glyphUrl":"https://glyph.medium.com"},"authBaseUrlRev":"moc.muidem//:sptth","isDnt":false,"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","archiveUploadSizeMb":100,"paymentData":{"currencies":{"1":{"label":"US Dollar","external":"usd"}},"countries":{"1":{"label":"United States of America","external":"US"}},"accountTypes":{"1":{"label":"Individual","external":"individual"},"2":{"label":"Company","external":"company"}}},"previewConfig2":{"weightThreshold":1,"weightImageParagraph":0.05,"raiseImage":true,"enforceHeaderHierarchy":true,"isImageInsetRight":true},"isAmp":false,"iosScheme":"medium","isSwBoot":false,"lightstep":{"accessToken":"ce5be895bef60919541332990ac9fef2","carrier":"{\"ot-tracer-spanid\":\"30ac3e117e607738\",\"ot-tracer-traceid\":\"6d74b6af44c94ede\",\"ot-tracer-sampled\":\"true\"}","host":"collector-medium.lightstep.com"},"facebook":{"key":"542599432471018","namespace":"medium-com","scope":{"default":["public_profile","email","user_friends"],"connect":["public_profile","email","user_friends"],"login":["public_profile","email","user_friends"],"share":["public_profile","email","user_friends","publish_actions"]}},"mailingListArchiveUploadSizeMb":2,"availableMembershipPlans":["60e220181034"],"editorsPicksTopicId":"3985d2a191c5","popularOnMediumTopicId":"9d34e48ecf94","memberContentTopicId":"13d7efd82fb2","audioContentTopicId":"3792abbd134","brandedSequenceId":"7d337ddf1941","isDoNotAuth":false,"goldfinchUrl":"https://goldfinch.medium.com","buggle":{"url":"https://buggle.medium.com","videoUrl":"https://cdn-videos-1.medium.com","audioUrl":"https://cdn-audio-1.medium.com"}}
// ]]></script>
  <script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/gen-js/main-base.bundle.Oty0kW8MpxxfXYEYUCl8gw.js" async></script>
  <script>// <![CDATA[
window["obvInit"]({"value":{"id":"577a5d9fb66f","versionId":"3368c2a8ef4c","creatorId":"e9ca4f68c727","creator":{"userId":"e9ca4f68c727","name":"Akshay Kulkarni","username":"akshaykulkarni","createdAt":1433228016775,"lastPostCreatedAt":1500636856155,"imageId":"1*IpuSaitD7vXaX3nUi1GVJw.jpeg","backgroundImageId":"","bio":"","twitterScreenName":"akshay2104","socialStats":{"userId":"e9ca4f68c727","usersFollowedCount":179,"usersFollowedByCount":263,"type":"SocialStats"},"social":{"userId":"lo_ed81515c2ff","targetUserId":"e9ca4f68c727","type":"Social"},"facebookAccountId":"10202974944973883","allowNotes":1,"type":"User"},"homeCollectionId":"","title":"Using api.ai with microsoft bot framework","detectedLanguage":"en","latestVersion":"3368c2a8ef4c","latestPublishedVersion":"3368c2a8ef4c","hasUnpublishedEdits":false,"latestRev":232,"createdAt":1483025644959,"updatedAt":1505895647728,"acceptedAt":0,"firstPublishedAt":1481011980000,"latestPublishedAt":1500636907099,"vote":false,"experimentalCss":"","displayAuthor":"","content":{"subtitle":"Unless you have been living in a cave with no internet access, you must have heard about how chatbots are the next biggest thing and how…","bodyModel":{"paragraphs":[{"name":"1520","type":3,"text":"Using api.ai with microsoft bot framework","markups":[]},{"name":"5642","type":1,"text":"Unless you have been living in a cave with no internet access, you must have heard about how chatbots are the next biggest thing and how they will completely replace apps. The jury is still out on whether that’s true.","markups":[{"type":1,"start":93,"end":101}]},{"name":"0c17","type":1,"text":"But we can’t ignore the fact that all major companies have been betting on this new field. Facebook, Microsoft, Google, Amazon are all in on the craze.","markups":[]},{"name":"a216","type":1,"text":"Microsoft’s offering ‘Microsoft Bot Framework’ is the most interesting offering according to me (disclaimer: I used to work at Microsoft). It lets you easily build bots for multiple platforms like","markups":[{"type":2,"start":96,"end":137}]},{"name":"309a","type":9,"text":"Facebook Messenger","markups":[]},{"name":"1682","type":9,"text":"Slack","markups":[]},{"name":"d10f","type":9,"text":"Telegram","markups":[]},{"name":"3426","type":9,"text":"Kik","markups":[]},{"name":"2f44","type":9,"text":"SMS (twilio)","markups":[]},{"name":"9abf","type":9,"text":"Email","markups":[]},{"name":"8bc5","type":9,"text":"Skype","markups":[]},{"name":"2d7d","type":9,"text":"Skype Teams","markups":[]},{"name":"9c77","type":1,"text":"You can write code either in node.js or C#. The best thing however about the framework is how easy it makes to maintain and store data through multiple databags like SessionData, UserData and ConversationData.","markups":[]},{"name":"6a02","type":1,"text":"Natural Language Processing is a very critical piece for building amazing chatbots. Microsoft Bot Framework lets you easily do this by providing built-in support for luis.ai (part of microsoft cognitive services offering for language processing). However not everyone might want to use LUIS as it requires you to have an azure subscription (starting dec 31).","markups":[]},{"name":"c70c","type":1,"text":"So I coded up a small npm module api-ai-recognizer to use api.ai instead of LUIS with microsoft bot framework. In this tutorial I will show you how you can build a simple weather bot using api.ai and Microsoft Bot Framework.","markups":[{"type":3,"start":33,"end":50,"href":"https://www.npmjs.com/package/api-ai-recognizer","title":"","rel":"","anchorType":0}]},{"name":"5c8c","type":13,"text":"Tutorial","markups":[]},{"name":"1f86","type":1,"text":"I apologize for the long intro but I felt it was important to set context. So let’s get started with building the bot.","markups":[]},{"name":"4669","type":1,"text":"We will be using node.js for building the bot and then deploy it to Microsoft Bot Framework Service. You can then deploy it to a channel of your choice.","markups":[]},{"name":"9f32","type":1,"text":"Btw, if you are the sort of person who would prefer skipping right to the end, here’s the github link to the code: full code link","markups":[{"type":3,"start":115,"end":129,"href":"https://github.com/GanadiniAkshay/weatherBot/tree/master/api.ai","title":"","rel":"","anchorType":0}]},{"name":"c255","type":1,"text":"Step 1: Set up Environment","markups":[]},{"name":"f679","type":1,"text":"Make sure you have node.js and npm installed.","markups":[]},{"name":"3b56","type":1,"text":"The first thing we have to do is create a directory so lets go ahead and create a directory called weather-bot. Now cd into the directory.","markups":[]},{"name":"72fd","type":8,"text":"mkdir weather-bot cd weather-bot","markups":[{"type":10,"start":0,"end":32}]},{"name":"069d","type":1,"text":"Now lets initialize npm so we can download the required packages. Run the following command and accept all the defualt options.","markups":[]},{"name":"edc5","type":8,"text":"npm init","markups":[{"type":10,"start":0,"end":8}]},{"name":"59cd","type":1,"text":"Verify that npm has been initialized by checking if a file called package.json has been created. Once you have verified that lets install the required packages.","markups":[]},{"name":"5b1d","type":1,"text":"To start off we only need two packages","markups":[]},{"name":"899e","type":1,"text":"1) botbuilder — For using microsoft bot builder \n 2) api-ai-recognizer — For using api.ai for NLP","markups":[]},{"name":"fe6f","type":1,"text":"Let’s go ahead and install both packages by running the following command","markups":[]},{"name":"f803","type":8,"text":"npm install --save botbuilder api-ai-recognizer","markups":[{"type":10,"start":0,"end":47}]},{"name":"8a5e","type":1,"text":"Step 2: Create a basic echo bot","markups":[]},{"name":"665f","type":1,"text":"So in this step we will create a very basic bot that will just echo what we say. It’s pretty dumb but it’s a start and in the next steps we will build on top of it.","markups":[]},{"name":"2c17","type":1,"text":"Once the npm packages have installed, create a file called index.js in the root directory and paste in the following code","markups":[]},{"name":"429f","type":8,"text":"var builder = require('botbuilder'); var connector = new builder.ConsoleConnector().listen(); var bot = new builder.UniversalBot(connector); bot.dialog('/',function(session){ session.send(\"You said %s\", session.message.text); });","markups":[{"type":10,"start":0,"end":229}]},{"name":"5536","type":1,"text":"Note : For this simple case we are using ConsoleConnector as it lets us test the bot from our console directly.","markups":[{"type":1,"start":0,"end":4}]},{"name":"5ae9","type":1,"text":"You can test the bot by starting the node server and directly chatting on the console.","markups":[]},{"name":"6bad","type":8,"text":"node index.js hi You said hi hello You said hello","markups":[{"type":10,"start":0,"end":49}]},{"name":"877b","type":1,"text":"Step 3: Create the natural language understanding model","markups":[]},{"name":"0fad","type":1,"text":"In this step we will be building a natural language processing model on api.ai so that our bot will be able to understand human language queries like","markups":[]},{"name":"7dd7","type":6,"text":"what’s the weather in new york tomorrow?","markups":[{"type":2,"start":0,"end":40}]},{"name":"b55a","type":1,"text":"The first thing is to head to api.ai and create an account.","markups":[{"type":3,"start":30,"end":36,"href":"https://api.ai/","title":"","rel":"","anchorType":0}]},{"name":"0160","type":1,"text":"Next create an agent called weather-bot by filling in the required details","markups":[]},{"name":"f9c5","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"0*mbgS_hvOTpX2pDQa.png","originalWidth":1436,"originalHeight":796}},{"name":"2e9a","type":1,"text":"The next step is to create an intent. An intent is basically a way to figure out what the intended action is for a given natural language text.","markups":[]},{"name":"3e23","type":1,"text":"So let’s create a intent called whatIsWeather to classify all queries where a user wants to find out the weather. (It’s not neccessary to name your intents without spaces. It’s just a convention I like to follow.)","markups":[]},{"name":"87db","type":1,"text":"Give the following example utterances","markups":[]},{"name":"e3a9","type":9,"text":"What is the weather?","markups":[]},{"name":"7ca9","type":9,"text":"what’s weather like now?","markups":[]},{"name":"b79d","type":9,"text":"how is the climate?","markups":[]},{"name":"8d23","type":9,"text":"how’s the weather?","markups":[]},{"name":"5f1f","type":1,"text":"In a real application you would provide more examples but for the purposes of this demo these should do good.","markups":[]},{"name":"fc70","type":1,"text":"You can give it a response if you want but we won’t really be using it in this demo.","markups":[]},{"name":"0742","type":1,"text":"Once you have created the intent you can save it and check if it’s working by using the try it now chat section on the right side of the website. You should be able to see that the intent gets recognized.","markups":[]},{"name":"7658","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"0*vj_KYX3q3dcWJFmD.png","originalWidth":1437,"originalHeight":789}},{"name":"1389","type":1,"text":"Step 3: Connect api.ai with Microsoft Bot Framework","markups":[]},{"name":"4169","type":1,"text":"This is the step where the magic happens. But before we connect api.ai to our code we need to grab the client token. To do this just click on the agent dropdown and select view all agents.","markups":[]},{"name":"c4ef","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"0*_f34AdrwMLlyy1n9.png","originalWidth":685,"originalHeight":495}},{"name":"7590","type":1,"text":"Select the weather-bot agent from the list of agents and you should be able to find your client access token there","markups":[]},{"name":"28cb","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"0*lNWNxa5Vns7NtFRS.png","originalWidth":784,"originalHeight":540,"isFeatured":true}},{"name":"0c30","type":1,"text":"Now change index.js as the following code to make the connection","markups":[]},{"name":"2f7e","type":8,"text":"var builder = require('botbuilder'); var apiairecognizer = require('api-ai-recognizer'); var connector = new builder.ConsoleConnector().listen(); var bot = new builder.UniversalBot(connector); var recognizer = new apiairecognizer(\x3capi.ai token\x3e); var intents = new builder.IntentDialog({ recognizers: [recognizer] }); bot.dialog('/',function(session){ session.send(\"You said %s\",session.message.text); });","markups":[{"type":10,"start":0,"end":405}]},{"name":"3809","type":1,"text":"Note: Don’t forget to put in your client token","markups":[{"type":1,"start":0,"end":5},{"type":2,"start":6,"end":46}]},{"name":"6256","type":1,"text":"This code basically creates an intent recognizer which will try to recognize any incoming text based on our api.ai model.","markups":[]},{"name":"2a77","type":1,"text":"Now lets use it. Replace your previous bot.dialog code with the one below","markups":[]},{"name":"b94a","type":8,"text":"bot.dialog('/',intents); intents.onDefault(function(session){ session.send(\"Sorry...can you please rephrase?\"); });","markups":[{"type":10,"start":0,"end":115}]},{"name":"3895","type":1,"text":"Basically what we are doing above is pass all the messages to the api.ai intent recognizer and then setting up a default handler. This is where you put your infamous “Sorry..I couldn’t understand” type of messages.","markups":[]},{"name":"ce10","type":1,"text":"Once having added this code, try to run it. It should give the default response to anything you say, because we only specified the default case.","markups":[]},{"name":"f092","type":1,"text":"Let’s add the handler to recognize the whatIsWeather intent we created earlier.","markups":[]},{"name":"aebc","type":8,"text":"bot.dialog('/',intents); intents.matches('whatIsWeather',function(session){ session.send(\"It's 27 degrees celsius\"); }); intents.onDefault(function(session){ session.send(\"Sorry...can you please rephrase?\"); });","markups":[{"type":10,"start":0,"end":211}]},{"name":"268b","type":1,"text":"We have hardcoded the response right now but we will hook it up to an API later.","markups":[]},{"name":"ca84","type":1,"text":"If we run the app now, it should be able to recognize the statements which are similar to the ones we trained the intent with before.","markups":[]},{"name":"1680","type":8,"text":"node index.js whats the weather It's 27 degrees celsius Hi Sorry...can you please rephrase?","markups":[{"type":10,"start":0,"end":91}]},{"name":"5266","type":1,"text":"Even though the bot just says 27 degrees all the time we have made some progress. We have a functional bot.","markups":[]},{"name":"09b4","type":1,"text":"Before we make it more accurate by getting some real weather data, lets add a few interesting things.","markups":[]},{"name":"3727","type":1,"text":"What I have observed from making a few fun bots is users expect your bot to be good at smalltalk at the least good at handling greetings like hello, good morning and other such stuff.","markups":[]},{"name":"0d2b","type":1,"text":"We could train our api.ai models to understand this but there is a easier way, thanks to the good people at api.ai. They have pre-built training for a few domains.","markups":[]},{"name":"e9e1","type":1,"text":"You can turn on/off domains by clicking on the domains tab in the left menu. For this demo we will be turning on the smalltalk domain.","markups":[]},{"name":"05c7","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"0*nT-pre6QV5nzVN7q.png","originalWidth":1067,"originalHeight":789}},{"name":"3946","type":1,"text":"Once you have turned the smalltalk domain on we need to plug in some code to make sure our bot handles this. To handle all smalltalk greetings, we will add a new handler to recognise the intent smalltalk.greetings.","markups":[]},{"name":"7caf","type":8,"text":"intents.matches('smalltalk.greetings',function(session){ session.send('This is smalltalk'); });","markups":[{"type":10,"start":0,"end":95}]},{"name":"d535","type":1,"text":"Here we are basically logging out the fact that we understand that the phrase user sent is smalltalk of type greetings. Not super useful to the user, but good for us for debugging. Save the file and run the code.","markups":[]},{"name":"d249","type":8,"text":"node index.js hi this is smalltalk good morning this is smalltalk bye this is smalltalk","markups":[{"type":10,"start":0,"end":87}]},{"name":"cc5f","type":1,"text":"This is super cool. Even though we have not trained our bot to understand any of these phrases manually, it understands them, thanks to Domains.","markups":[]},{"name":"4d7c","type":1,"text":"One more great thing about domains in api.ai is it not only helps your bot understand smalltalk phrases but it also has preconfigured replies (you can edit/customize it though). Let’s use these in our bot. These are called fulfillments. Plugin the following code to use fulfillments.","markups":[]},{"name":"fa3b","type":8,"text":"intents.matches('smalltalk.greetings',function(session, args){ var fulfillment = builder.EntityRecognizer.findEntity(args.entities, 'fulfillment'); if (fulfillment){ var speech = fulfillment.entity; session.send(speech); }else{ session.send('Sorry...not sure how to respond to that'); } });","markups":[{"type":10,"start":0,"end":290}]},{"name":"69c6","type":1,"text":"Please note the additional args argument passed to the callback function in the handler. Don’t worry about all the entity stuff in the code. I will explain that in a while.","markups":[]},{"name":"f019","type":1,"text":"Now save the code and restart the app to test it.","markups":[]},{"name":"c652","type":8,"text":"node index.js hi Hey. good morning Top of the morning to you!","markups":[{"type":10,"start":0,"end":61}]},{"name":"c40d","type":1,"text":"The exact replies might be different for you because the replies are selected randomly from a list of possible replies. But the reply should be something sensible.","markups":[]},{"name":"fb04","type":1,"text":"Step 4: Get Weather Data from API","markups":[]},{"name":"0cd7","type":1,"text":"In this step we will be getting the real weather data from the APIXU current weather api.","markups":[{"type":3,"start":63,"end":68,"href":"https://www.apixu.com/","title":"","rel":"","anchorType":0}]},{"name":"3713","type":1,"text":"The API will require one parameter, the city name whose current weather data we will need.","markups":[]},{"name":"52ca","type":1,"text":"We will get these parameter out of the user’s query and if he doesn’t provide it, we will explicitly ask the user to provide a city name.","markups":[]},{"name":"c632","type":1,"text":"These parameters in NLP terms are called entities and we will have to train our api.ai models to understand and extract these entities. So lets do that.","markups":[]},{"name":"7b51","type":1,"text":"Click on entities in the left menu and select create new entity and create a new entity called cities and put in some example city names.","markups":[]},{"name":"a173","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"0*yDLQqxmGEJfGUcyG.png","originalWidth":1081,"originalHeight":667}},{"name":"031a","type":1,"text":"In a real world scenario you would be using pre-built entities which have already been trained with a lot of examples. But we will make do with this for the purposes of this bot. Don’t forget to click on the save button once you are done adding examples.","markups":[]},{"name":"2a49","type":1,"text":"Now lets train api.ai to understand the cities entity. Go back to intents and click on whatIsWeather intent. Let’s add a few examples which have city name in the sentence.","markups":[]},{"name":"eae1","type":1,"text":"Something like","markups":[]},{"name":"a747","type":6,"text":"What’s the weather in paris?","markups":[{"type":2,"start":0,"end":28}]},{"name":"81d1","type":1,"text":"The entity should be auto detected. Make sure its your entity and not a prebuilt entities. Prebuilt entity names have the format sys.name. Add a few examples and then save the intent.","markups":[]},{"name":"eb51","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"0*iIXCpbVNtHOoDrG0.png","originalWidth":1071,"originalHeight":655}},{"name":"f60e","type":1,"text":"Now lets add some code to pull out the entity information from the phrase. It will be very similar to the fulfillments code.","markups":[]},{"name":"7275","type":8,"text":"intents.matches('whatIsWeather',function(session,args){ var city = builder.EntityRecognizer.findEntity(args.entities,'cities'); if (city){ var city_name = city.entity; session.send(\"It's 27 degrees celsius in \" + city_name); }else{ session.send(\"It's 27 degrees celsius\"); } });","markups":[{"type":10,"start":0,"end":278}]},{"name":"3c4a","type":1,"text":"Now if you save and restart the app, it should be able to get the city info.","markups":[]},{"name":"10fe","type":8,"text":"node index.js what is the weather in paris It's 27 degress celsius in Paris","markups":[{"type":10,"start":0,"end":75}]},{"name":"2faf","type":1,"text":"We however have to still handle the case where city is not given. We can do this by issuing a prompt to user asking him for a city name. Here’s the code to do that","markups":[]},{"name":"9d4c","type":8,"text":"intents.matches('whatIsWeather',[ function(session,args){ var city = builder.EntityRecognizer.findEntity(args.entities,'cities'); if (city){ var city_name = city.entity; session.send(\"It's 27 degrees celsius in \" + city_name); }else{ builder.Prompts.text(session, 'Which city do you want the weather for?'); } }, function(session,results){ session.send(\"It's 27 degrees celsius in \" + results.response); } ]);","markups":[{"type":10,"start":0,"end":409}]},{"name":"ace4","type":1,"text":"Okay there is a lot going on in there. So let me break it down. Microsoft bot framework lets you chain functions for handlers by passing in an array of functions. You can use this to run functions one after other collecting data and using it in the next function. You use prompts to ask for data. You can read more about this in the official documentation.","markups":[{"type":3,"start":333,"end":355,"href":"https://docs.botframework.com/en-us/node/builder/guides/core-concepts/#navtitle","title":"","rel":"","anchorType":0}]},{"name":"a849","type":1,"text":"Now you can save the app and restart and it should prompt for city if you don’t provide it.","markups":[]},{"name":"57d0","type":8,"text":"node index.js what is the weather? Which city do you want the weather for? orlando It's 27 degrees celsius in orlando","markups":[{"type":10,"start":0,"end":117}]},{"name":"f891","type":1,"text":"Now that we have this working, lets hook it up to the api and get real weather data.","markups":[]},{"name":"9dc9","type":1,"text":"So firstly create an account for yourself on APIXU. Once you do that you will get a API Access Key and you can play around the API by clicking on getting started. Put in a few city names and get a feel of how it works.","markups":[{"type":3,"start":45,"end":50,"href":"https://www.apixu.com/","title":"","rel":"","anchorType":0}]},{"name":"88c8","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"0*XXL7W2SDNVUmRD6f.png","originalWidth":1371,"originalHeight":777}},{"name":"181d","type":1,"text":"Keep your api access key handy we will be needing it to make the api calls. We will be using the request module on npm to make the calls, so lets start by installing it.","markups":[]},{"name":"cb51","type":8,"text":"npm install --save request","markups":[{"type":10,"start":0,"end":26}]},{"name":"d827","type":1,"text":"Once we have request installed lets require it by adding in the following lines at the top of index.js","markups":[]},{"name":"7d4e","type":8,"text":"var request = require('request');","markups":[{"type":10,"start":0,"end":33}]},{"name":"35f8","type":1,"text":"Now that we have access to request module lets put in code to get weather data from API","markups":[]},{"name":"4539","type":8,"text":"intents.matches('whatIsWeather',[ function(session,args){ var city = builder.EntityRecognizer.findEntity(args.entities,'cities'); if (city){ var city_name = city.entity; var url = \"http://api.apixu.com/v1/current.json?key=\x3cYour API Key\x3e&q=\" + city_name; request(url,function(error,response,body){ body = JSON.parse(body); temp = body.current.temp_c; session.send(\"It's \" + temp + \" degrees celsius in \" + city_name); }); }else{ builder.Prompts.text(session, 'Which city do you want the weather for?'); } }, function(session,results){ var city_name = results.response; var url = \"http://api.apixu.com/v1/current.json?key=\x3cYour API key\x3e&q=\" + city_name; request(url,function(error,response,body){ body = JSON.parse(body); temp = body.current.temp_c; session.send(\"It's \" + temp + \" degrees celsius in \" + city_name); }); } ]);","markups":[{"type":10,"start":0,"end":824}]},{"name":"050c","type":1,"text":"NOTE: Don’t forget to put in your API key","markups":[{"type":1,"start":0,"end":41}]},{"name":"5ce5","type":1,"text":"Once you save and restart your app, it should be working as expected.","markups":[]},{"name":"a3b7","type":8,"text":"node index.js whats the weather in paris It's 4 degrees celsius in Paris whats the weather Which city do you want the weather for? Beijing It's -4 degrees celsius in Beijing","markups":[{"type":10,"start":0,"end":173}]},{"name":"3ff8","type":1,"text":"Step 5: Deploy your Bot","markups":[]},{"name":"a48b","type":1,"text":"In this final step we will be deploying our bot and then you can use Microsoft Bot Connector to connect it to channels of your choice.","markups":[]},{"name":"00f0","type":1,"text":"We will be using heroku for hosting as it is pretty straightforward and has a free tier.","markups":[]},{"name":"a570","type":1,"text":"First lets set up version control","markups":[]},{"name":"3342","type":8,"text":"git init","markups":[{"type":10,"start":0,"end":8}]},{"name":"1dd2","type":1,"text":"Before adding and committing the files lets add a .gitignore to ignore node_modules folder as we don’t want to version control or deploy this.","markups":[]},{"name":"b28d","type":1,"text":"Add a file called .gitignore in the root folder and paste in the following","markups":[]},{"name":"ead3","type":8,"text":"node_modules/","markups":[{"type":10,"start":0,"end":13}]},{"name":"1db8","type":1,"text":"Now lets add and commit the files","markups":[]},{"name":"c51c","type":8,"text":"git add . git commit -m \"basic bot setup done\"","markups":[{"type":10,"start":0,"end":46}]},{"name":"a901","type":1,"text":"Download and install heroku on your system following instructions from here.","markups":[{"type":3,"start":71,"end":75,"href":"https://devcenter.heroku.com/articles/heroku-cli","title":"","rel":"","anchorType":0}]},{"name":"b8ae","type":1,"text":"While it installs add a new file called Procfile to root folder. This file will tell heroku what command to run to start your web. Paste in the following into the file.","markups":[]},{"name":"ae31","type":8,"text":"web: node index.js","markups":[{"type":10,"start":0,"end":18}]},{"name":"888b","type":1,"text":"Before we deploy there are a few code changes we need to make in index.js","markups":[]},{"name":"7925","type":1,"text":"We need to install a few npm modules to get this done. So run the following command.","markups":[]},{"name":"bc45","type":8,"text":"npm install --save restify","markups":[{"type":10,"start":0,"end":26}]},{"name":"f3a9","type":1,"text":"Once the install is done, replace the following code","markups":[]},{"name":"aaba","type":8,"text":"var builder = require('botbuilder'); var apiairecognizer = require('api-ai-recognizer'); var request = require('request'); var connector = new builder.ConsoleConnector().listen();","markups":[{"type":10,"start":0,"end":179}]},{"name":"23d5","type":1,"text":"with","markups":[]},{"name":"c7e4","type":8,"text":"var builder = require('botbuilder'); var restify = require('restify'); var apiairecognizer = require('api-ai-recognizer'); var request = require('request'); //========================================================= // Bot Setup //========================================================= // Setup Restify Server var server = restify.createServer(); server.listen(process.env.port || process.env.PORT || 3978, function () { console.log('%s listening to %s', server.name, server.url); }); // Create chat bot var connector = new builder.ChatConnector({ appId: \x3cMICROSOFT_APP_ID\x3e, appPassword: \x3cMICROSOFT_APP_PASSWORD\x3e });","markups":[{"type":10,"start":0,"end":620}]},{"name":"6380","type":1,"text":"You can get your Microsoft APP ID and APP Password by registering your bot on the Microsoft Bot Framework Service","markups":[{"type":3,"start":82,"end":113,"href":"https://dev.botframework.com/bots/new","title":"","rel":"","anchorType":0}]},{"name":"50f2","type":1,"text":"For now leave the Messaging endpoint field empty. We will get back to it.","markups":[{"type":2,"start":0,"end":73}]},{"name":"22c5","type":1,"text":"Once you put in the Microsoft App ID and password into the code, run the following commands to deploy to heroku.","markups":[]},{"name":"8b0e","type":8,"text":"heroku create git push heroku master heroku open","markups":[{"type":10,"start":0,"end":48}]},{"name":"bed3","type":1,"text":"The last command must open the heroku url where your bot is hosted. Copy it and go back to your bot registration on Microsoft Bot Framework site.","markups":[]},{"name":"92b9","type":1,"text":"Paste in the url in the messaging endpoint. Add /api/messages to the end of the url.","markups":[{"type":1,"start":44,"end":83}]},{"name":"7732","type":1,"text":"Messaging Endpoint : http://.herokuapp.com/api/messages","markups":[{"type":3,"start":21,"end":55,"href":"http://.herokuapp.com/api/messages","title":"","rel":"","anchorType":0}]},{"name":"09cd","type":1,"text":"Save the configuration and your done. Now you can deploy it to channels of your choice by following the excellent documentation on the site.","markups":[]},{"name":"f5d8","type":1,"text":"Congrats on building a fully functional weather bot.","markups":[]},{"name":"2bd1","type":1,"text":"Originally published at http://blog.ozz.ai/using-api-ai-with-microsoft-bot-framework/ on December 6, 2016.","markups":[{"type":3,"start":24,"end":85,"href":"http://blog.ozz.ai/using-api-ai-with-microsoft-bot-framework/","title":"","rel":"nofollow","anchorType":0},{"type":2,"start":0,"end":24},{"type":2,"start":85,"end":106}]}],"sections":[{"name":"1f85","startIndex":0},{"name":"010e","startIndex":152}]},"postDisplay":{"coverless":true}},"virtuals":{"allowNotes":true,"previewImage":{"imageId":"0*lNWNxa5Vns7NtFRS.png","filter":"","backgroundSize":"","originalWidth":784,"originalHeight":540,"strategy":"resample","height":0,"width":0},"wordCount":2770,"imageCount":8,"readingTime":11.586163522012578,"subtitle":"Unless you have been living in a cave with no internet access, you must have heard about how chatbots are the next biggest thing and how…","usersBySocialRecommends":[],"recommends":17,"socialRecommends":[],"isBookmarked":false,"tags":[{"slug":"bots","name":"Bots","postCount":8709,"virtuals":{"isFollowing":false},"metadata":{"followerCount":3916,"postCount":8709,"coverImage":{"id":"1*ibH-apBZCcPNnZCGUjrxxg.jpeg","originalWidth":1400,"originalHeight":800}},"type":"Tag"},{"slug":"nodejs","name":"Nodejs","postCount":8806,"virtuals":{"isFollowing":false},"metadata":{"followerCount":12365,"postCount":8806,"coverImage":{"id":"1*E5Pmh6HSeybcF7C686B9pA.png","originalWidth":1954,"originalHeight":1206}},"type":"Tag"},{"slug":"microsoft-bot-framework","name":"Microsoft Bot Framework","postCount":45,"virtuals":{"isFollowing":false},"metadata":{"followerCount":12,"postCount":45,"coverImage":{"id":"1*__HfdCfmG9Y8Z3JMi-Jg8g.jpeg","originalWidth":1279,"originalHeight":718}},"type":"Tag"}],"socialRecommendsCount":0,"responsesCreatedCount":4,"links":{"entries":[{"url":"http://.herokuapp.com/api/messages","alts":[],"httpStatus":0},{"url":"http://blog.ozz.ai/using-api-ai-with-microsoft-bot-framework/","alts":[],"httpStatus":404},{"url":"https://github.com/GanadiniAkshay/weatherBot/tree/master/api.ai","alts":[],"httpStatus":200},{"url":"https://devcenter.heroku.com/articles/heroku-cli","alts":[],"httpStatus":200},{"url":"https://www.apixu.com/","alts":[],"httpStatus":200},{"url":"https://www.npmjs.com/package/api-ai-recognizer","alts":[],"httpStatus":200},{"url":"https://dev.botframework.com/bots/new","alts":[],"httpStatus":401},{"url":"https://docs.botframework.com/en-us/node/builder/guides/core-concepts/#navtitle","alts":[],"httpStatus":200},{"url":"https://api.ai/","alts":[],"httpStatus":200}],"version":"0.3","generatedAt":1500636921102},"isLockedPreviewOnly":false,"takeoverId":"","metaDescription":"","totalClapCount":32,"sectionCount":2},"coverless":true,"slug":"using-api-ai-with-microsoft-bot-framework","translationSourcePostId":"","translationSourceCreatorId":"","isApprovedTranslation":false,"inResponseToPostId":"","inResponseToRemovedAt":0,"isTitleSynthesized":true,"allowResponses":true,"importedUrl":"http://ec2-54-90-231-6.compute-1.amazonaws.com:80/using-api-ai-with-microsoft-bot-framework/","importedPublishedAt":1481011980000,"visibility":0,"uniqueSlug":"using-api-ai-with-microsoft-bot-framework-577a5d9fb66f","previewContent":{"bodyModel":{"paragraphs":[{"name":"previewImage","type":4,"text":"","layout":10,"metadata":{"id":"0*lNWNxa5Vns7NtFRS.png","originalWidth":784,"originalHeight":540,"isFeatured":true}},{"name":"1520","type":3,"text":"Using api.ai with microsoft bot framework","markups":[],"alignment":1},{"name":"5642","type":1,"text":"Unless you have been living in a cave with no internet access, you must have heard…","markups":[],"alignment":1}],"sections":[{"startIndex":0}]},"isFullContent":false},"license":0,"inResponseToMediaResourceId":"","canonicalUrl":"https://medium.com/@akshaykulkarni/using-api-ai-with-microsoft-bot-framework-577a5d9fb66f","approvedHomeCollectionId":"","newsletterId":"","webCanonicalUrl":"http://ec2-54-90-231-6.compute-1.amazonaws.com:80/using-api-ai-with-microsoft-bot-framework/","mediumUrl":"https://medium.com/@akshaykulkarni/using-api-ai-with-microsoft-bot-framework-577a5d9fb66f","migrationId":"","notifyFollowers":true,"notifyTwitter":true,"isSponsored":false,"isRequestToPubDisabled":false,"notifyFacebook":true,"responseHiddenOnParentPostAt":0,"isSeries":false,"isSubscriptionLocked":false,"seriesLastAppendedAt":0,"audioVersionDurationSec":0,"sequenceId":"","isNsfw":false,"isEligibleForRevenue":false,"isBlockedFromHightower":false,"type":"Post"},"mentionedUsers":[],"collaborators":[],"membershipPlans":[],"collectionUserRelations":[],"mode":null,"references":{"User":{"e9ca4f68c727":{"userId":"e9ca4f68c727","name":"Akshay Kulkarni","username":"akshaykulkarni","createdAt":1433228016775,"lastPostCreatedAt":1500636856155,"imageId":"1*IpuSaitD7vXaX3nUi1GVJw.jpeg","backgroundImageId":"","bio":"","twitterScreenName":"akshay2104","socialStats":{"userId":"e9ca4f68c727","usersFollowedCount":179,"usersFollowedByCount":263,"type":"SocialStats"},"social":{"userId":"lo_ed81515c2ff","targetUserId":"e9ca4f68c727","type":"Social"},"facebookAccountId":"10202974944973883","allowNotes":1,"type":"User"}},"Social":{"e9ca4f68c727":{"userId":"lo_ed81515c2ff","targetUserId":"e9ca4f68c727","type":"Social"}},"SocialStats":{"e9ca4f68c727":{"userId":"e9ca4f68c727","usersFollowedCount":179,"usersFollowedByCount":263,"type":"SocialStats"}}}})
// ]]></script>
 </body>
</html>