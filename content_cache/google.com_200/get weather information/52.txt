<!doctype html>
<html>
 <head>
  <link rel="preload" href="https://cdn.zeit.co/now-front-rwqezfqhlp/front/_next/e5220cf8-f900-465c-a855-6d5c3dae4654/page/docs/examples/slack-slash" as="script">
  <link rel="preload" href="https://cdn.zeit.co/now-front-rwqezfqhlp/front/_next/e5220cf8-f900-465c-a855-6d5c3dae4654/page/_error/index.js" as="script">
  <link rel="preload" href="https://cdn.zeit.co/now-front-rwqezfqhlp/front/_next/d5a98b54caccd7a452c19f9cf76b018e/app.js" as="script">
  <meta charset="utf-8" class="next-head">
  <title data-jsx="3390773150" class="next-head">Building a Slash Command for Slack - ZEIT Documentation</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" data-jsx="3390773150" class="next-head">
  <meta name="twitter:card" content="summary" data-jsx="3390773150" class="next-head">
  <meta name="twitter:site" content="@zeithq" data-jsx="3390773150" class="next-head">
  <meta name="og:title" content="Building a Slash Command for Slack - ZEIT Documentation" data-jsx="3390773150" class="next-head">
  <meta name="og:url" content="https://zeit.co/now" data-jsx="3390773150" class="next-head">
  <meta name="og:image" content="https://res.cloudinary.com/zeit-inc/image/upload/front/zeit/twitter-card.png" data-jsx="3390773150" class="next-head">
  <link rel="apple-touch-icon" sizes="57x57" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/apple-touch-icon-57x57.png" data-jsx="3390773150" class="next-head">
  <link rel="apple-touch-icon" sizes="60x60" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/apple-touch-icon-60x60.png" data-jsx="3390773150" class="next-head">
  <link rel="apple-touch-icon" sizes="72x72" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/apple-touch-icon-72x72.png" data-jsx="3390773150" class="next-head">
  <link rel="apple-touch-icon" sizes="76x76" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/apple-touch-icon-76x76.png" data-jsx="3390773150" class="next-head">
  <link rel="apple-touch-icon" sizes="114x114" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/apple-touch-icon-114x114.png" data-jsx="3390773150" class="next-head">
  <link rel="apple-touch-icon" sizes="120x120" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/apple-touch-icon-120x120.png" data-jsx="3390773150" class="next-head">
  <link rel="apple-touch-icon" sizes="144x144" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/apple-touch-icon-144x144.png" data-jsx="3390773150" class="next-head">
  <link rel="apple-touch-icon" sizes="152x152" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/apple-touch-icon-152x152.png" data-jsx="3390773150" class="next-head">
  <link rel="apple-touch-icon" sizes="180x180" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/apple-touch-icon-180x180.png" data-jsx="3390773150" class="next-head">
  <link rel="icon" type="image/png" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/favicon-32x32.png" sizes="32x32" data-jsx="3390773150" class="next-head">
  <link rel="icon" type="image/png" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/android-chrome-192x192.png" sizes="192x192" data-jsx="3390773150" class="next-head">
  <link rel="icon" type="image/png" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/favicon-96x96.png" sizes="96x96" data-jsx="3390773150" class="next-head">
  <link rel="icon" type="image/png" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/favicon-16x16.png" sizes="16x16" data-jsx="3390773150" class="next-head">
  <link rel="manifest" href="https://res.cloudinary.com/zeit-inc/raw/upload/front/favicon/manifest.json" data-jsx="3390773150" class="next-head">
  <link rel="mask-icon" href="https://res.cloudinary.com/zeit-inc/image/upload/front/front/favicon/safari-pinned-tab.svg" color="#ff0080" data-jsx="3390773150" class="next-head">
  <link rel="shortcut icon" href="https://res.cloudinary.com/zeit-inc/image/upload/front/favicon/favicon.ico" data-jsx="3390773150" class="next-head">
  <meta name="theme-color" content="#000" data-jsx="3390773150" class="next-head">
  <style class="next-head">
            #nprogress .bar {
              background: #000;
            }

            #nprogress .peg {
              box-shadow: 0 0 10px #ccc, 0 0 5px #ccc;
            }
          </style>
  <style class="next-head">
            html {
              height: 100%;
              box-sizing: border-box;
            }

            *,
            *:before,
            *:after {
              box-sizing: inherit;
            }

            a {
              -webkit-tap-highlight-color: rgba(0,0,0,0);
            }

            body {
              position: relative;
              min-height: 100%;
              margin: 0;
              padding-bottom: 6rem;
              font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
              text-rendering: optimizeLegibility;
              -webkit-font-smoothing: antialiased;
            }

            html, body {
              background-color: #fff;
              color: #000;
            }

            
              ::selection {
                background-color: #79FFE1;
                color: #000;
              }
            
          </style>
  <style id="__jsx-style-3390773150">#nprogress{pointer-events:none}#nprogress .bar{position:fixed;z-index:2000;top:0;left:0;width:100%;height:2px}#nprogress .peg{display:block;position:absolute;right:0px;width:100px;height:100%;opacity:1.0;-webkit-transform:rotate(3deg) translate(0px,-4px);-ms-transform:rotate(3deg) translate(0px,-4px);transform:rotate(3deg) translate(0px,-4px)}</style>
  <style id="__jsx-style-1901052719">linearGradient[data-jsx="1901052719"] stop[data-jsx="1901052719"]:first-child{stop-color:#fff}linearGradient[data-jsx="1901052719"] stop[data-jsx="1901052719"]:last-child{stop-color:#000}.dark[data-jsx="1901052719"] linearGradient[data-jsx="1901052719"] stop[data-jsx="1901052719"]:first-child{stop-color:#000}.dark[data-jsx="1901052719"] linearGradient[data-jsx="1901052719"] stop[data-jsx="1901052719"]:last-child{stop-color:#fff}</style>
  <style id="__jsx-style-163435532">header[data-jsx="163435532"]{max-width:900px;margin:auto;padding:30px 0;position:relative}header.clean[data-jsx="163435532"]{max-width:100%;margin:0 30px}.chat[data-jsx="163435532"]::after{content:'';width:8px;height:8px;display:inline-block;border-radius:100%;background:#50e3c2;margin-left:10px}.lean[data-jsx="163435532"] .nav.left[data-jsx="163435532"],.lean[data-jsx="163435532"] .nav.right[data-jsx="163435532"] .day[data-jsx="163435532"],.lean[data-jsx="163435532"] .nav.right[data-jsx="163435532"] .download[data-jsx="163435532"],.lean[data-jsx="163435532"] .nav.right[data-jsx="163435532"] .chat[data-jsx="163435532"],.lean[data-jsx="163435532"] .nav.right[data-jsx="163435532"] .tv[data-jsx="163435532"]{visibility:hidden}.nav[data-jsx="163435532"]>a[data-jsx="163435532"]{color:#999;font-size:11px;text-decoration:none;-webkit-transition:color 0.2s ease;transition:color 0.2s ease}.nav[data-jsx="163435532"]>a[data-jsx="163435532"]{color:#999}.nav[data-jsx="163435532"]>a[data-jsx="163435532"]:hover{color:#000}.dark[data-jsx="163435532"] .nav[data-jsx="163435532"]>a[data-jsx="163435532"]:hover{color:#fff}.logout-error[data-jsx="163435532"]{height:25px;position:fixed;top:0;left:0;right:0;font-size:12px;text-transform:uppercase;line-height:25px;vertical-align:middle;z-index:100000;background:#ff001f;text-align:center;color:#fff;-webkit-animation:hidedatajsx163435532 100ms ease-out;animation:hidedatajsx163435532 100ms ease-out}@-webkit-keyframes hidedatajsx163435532{from{-webkit-transform:translateY(-25px);-ms-transform:translateY(-25px);transform:translateY(-25px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}@keyframes hidedatajsx163435532{from{-webkit-transform:translateY(-25px);-ms-transform:translateY(-25px);transform:translateY(-25px)}to{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}a.logo[data-jsx="163435532"]{display:block;width:39px;height:35px;position:relative}.loading[data-jsx="163435532"] img[data-jsx="163435532"]{-webkit-animation:500ms fadeOutdatajsx163435532,500ms 1.5s rotateInitialdatajsx163435532,2s ease-in 2s infinite rotatedatajsx163435532;animation:500ms fadeOutdatajsx163435532,500ms 1.5s rotateInitialdatajsx163435532,2s ease-in 2s infinite rotatedatajsx163435532;-webkit-animation-delay:1.2s,1.5s,2s;animation-delay:1.2s,1.5s,2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-direction:alternate;animation-direction:alternate}.nav[data-jsx="163435532"]{margin-top:-2px;padding:10px;padding-right:0;position:absolute;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.nav[data-jsx="163435532"] a[data-jsx="163435532"]{padding:10px;font-size:12px;text-transform:uppercase;font-weight:normal}.nav[data-jsx="163435532"] a[data-jsx="163435532"]:last-child{padding-right:0}.nav[data-jsx="163435532"] a.active[data-jsx="163435532"]{color:#000}.dark[data-jsx="163435532"] .nav[data-jsx="163435532"] a.active[data-jsx="163435532"]{color:#fff}.menu-arrow[data-jsx="163435532"]{display:none;width:40px;height:40px}.right[data-jsx="163435532"]{right:0}.left[data-jsx="163435532"]{left:50px}.title[data-jsx="163435532"]{margin-bottom:60px;font-size:14px;font-weight:normal;text-align:center;color:#000}.title[data-jsx="163435532"] b[data-jsx="163435532"]{font-weight:bold}.dark[data-jsx="163435532"] .title[data-jsx="163435532"]{color:#fff}@-webkit-keyframes fadeOutdatajsx163435532{from{opacity:1}to{opacity:.7}}@keyframes fadeOutdatajsx163435532{from{opacity:1}to{opacity:.7}}@-webkit-keyframes rotateInitialdatajsx163435532{from{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}}@keyframes rotateInitialdatajsx163435532{from{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}}@-webkit-keyframes rotatedatajsx163435532{from{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}30%{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}70%{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(-15deg);-ms-transform:rotate(-15deg);transform:rotate(-15deg)}}@keyframes rotatedatajsx163435532{from{-webkit-transform:rotate(15deg);-ms-transform:rotate(15deg);transform:rotate(15deg)}30%{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}70%{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(-15deg);-ms-transform:rotate(-15deg);transform:rotate(-15deg)}}.nav[data-jsx="163435532"]>a.download[data-jsx="163435532"]{color:#ff0080;-webkit-transition:color 0.2s ease;transition:color 0.2s ease}.nav[data-jsx="163435532"]>a.download[data-jsx="163435532"]:hover{color:#ff0080}.avatar[data-jsx="163435532"]{margin-left:10px}.lean[data-jsx="163435532"] .avatar[data-jsx="163435532"]{filter:grayscale(100%)}.mobile-link[data-jsx="163435532"]{display:none}@media screen and (max-width:950px){header[data-jsx="163435532"]{text-align:center}header.clean[data-jsx="163435532"]{margin:0}.clean[data-jsx="163435532"] .menu-arrow[data-jsx="163435532"]{display:none}.lean[data-jsx="163435532"] .nav.left[data-jsx="163435532"],.lean[data-jsx="163435532"] .nav.right[data-jsx="163435532"] .download[data-jsx="163435532"],.lean[data-jsx="163435532"] .nav.right[data-jsx="163435532"] .chat[data-jsx="163435532"]{visibility:visible}.nav[data-jsx="163435532"]{padding-top:40px;padding-bottom:0;padding-left:0;position:relative;-webkit-transform:none;-ms-transform:none;transform:none;top:20px}.nav[data-jsx="163435532"] a[data-jsx="163435532"]:last-child{padding-left:0;padding-right:0}.nav-container[data-jsx="163435532"]{display:none;padding:20px;background:#fff;width:100%;min-height:90vh;z-index:1}.dark[data-jsx="163435532"] .nav-container[data-jsx="163435532"]{background:#000}.chat[data-jsx="163435532"]::after{width:12px;height:12px;position:relative;top:-1px}.nav-container.responsive[data-jsx="163435532"]{display:block}.nav-container[data-jsx="163435532"] a[data-jsx="163435532"]{display:block;font-size:20px}.nav-container[data-jsx="163435532"] .left[data-jsx="163435532"]{left:0;padding:0}.logo[data-jsx="163435532"]{margin-left:20px}.menu-arrow[data-jsx="163435532"]{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;top:28px;right:20px;-webkit-transition:-webkit-transform 0.2s ease;-webkit-transition:transform 0.2s ease;transition:transform 0.2s ease}.menu-arrow[data-jsx="163435532"]{fill:#000}.dark[data-jsx="163435532"] .menu-arrow[data-jsx="163435532"]{fill:#fff}.menu-arrow.toggled[data-jsx="163435532"]{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.mobile-link[data-jsx="163435532"]{display:inline-block}.mobile-logout[data-jsx="163435532"]{cursor:pointer}.avatar[data-jsx="163435532"]{display:none}}</style>
  <style id="__jsx-style-1493652847">a[data-jsx="1493652847"]{text-decoration:none;font-size:14px;color:#000}a.selected[data-jsx="1493652847"]{font-weight:600;color:#000}</style>
  <style id="__jsx-style-1557091742">.link[data-jsx="1557091742"]{margin:10px 0}@media screen and (max-width:950px){.link[data-jsx="1557091742"]{padding:20px 0;margin:0;border-bottom:1px solid #eee}}</style>
  <style id="__jsx-style-1036404298">.label[data-jsx="1036404298"]{margin:0 0 15px 0;font-size:13px;text-transform:uppercase;-webkit-letter-spacing:1.3px;-moz-letter-spacing:1.3px;-ms-letter-spacing:1.3px;letter-spacing:1.3px;font-weight:400;color:#888;cursor:default}.level-2[data-jsx="1036404298"] .label[data-jsx="1036404298"]{font-size:14px;font-weight:400;margin:10px 0;text-transform:none;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;cursor:default}.category.level-1[data-jsx="1036404298"]{margin:0 0 50px 0}@media screen and (max-width:950px){.label[data-jsx="1036404298"]{margin:-10px 0}.level-2[data-jsx="1036404298"] .label[data-jsx="1036404298"]{padding:20px 0;margin:0;border-bottom:1px solid #eee}}</style>
  <style id="__jsx-style-2597227052">.body-freeze-scroll{overflow:hidden}</style>
  <style id="__jsx-style-4119666629">.arrow[data-jsx="4119666629"]{position:absolute;top:40px;right:20px;width:27px;-webkit-transition:-webkit-transform 0.2s ease;-webkit-transition:transform 0.2s ease;transition:transform 0.2s ease}.arrow.show[data-jsx="4119666629"]{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}</style>
  <style id="__jsx-style-2556328477">a[data-jsx="2556328477"]{text-decoration:none;color:#067df7;font-size:inherit}a[data-jsx="2556328477"]:hover{text-decoration:underline}a.dark[data-jsx="2556328477"]{color:#fff}</style>
  <style id="__jsx-style-2577313290">div[data-jsx="2577313290"]{font-weight:400;font-size:14px;line-height:24px;margin-bottom:20px}</style>
  <style id="__jsx-style-85473142">span[data-jsx="85473142"] span[data-jsx="85473142"]{display:inline-block;margin-right:3px}</style>
  <style id="__jsx-style-1656335710">code[data-jsx="1656335710"]{color:#bd10e0;font-family:Menlo,Monaco,Lucida Console,Liberation Mono, DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace, serif;font-size:0.9em;white-space:pre-wrap}code.no-wrap[data-jsx="1656335710"]{white-space:nowrap}code[data-jsx="1656335710"]::before{content:'`'}code[data-jsx="1656335710"]::after{content:'`'}code.dark[data-jsx="1656335710"]{color:#50e3c2}</style>
  <style id="__jsx-style-1612751349">a[data-jsx="1612751349"]{border-bottom:1px solid transparent;color:inherit;margin-right:10px;text-decoration:none}a[data-jsx="1612751349"]:hover{border-bottom-color:inherit}h1[data-components-heading] a[data-jsx="1612751349"]::before{content:"# "}h2[data-components-heading] a[data-jsx="1612751349"]::before{content:"## "}h3[data-components-heading] a[data-jsx="1612751349"]::before{content:"### "}.lean[data-components-heading] a[data-jsx="1612751349"]::before{content:""}h1[data-components-heading]::before,h2[data-components-heading]::before,h3[data-components-heading]::before,h4[data-components-heading]::before{display:none}.target[data-jsx="1612751349"]{display:block;margin-top:-20px;padding-top:20px;visibility:hidden;position:absolute}.permalink[data-jsx="1612751349"]{text-align:center;vertical-align:middle;visibility:hidden}a[data-jsx="1612751349"]:hover~.permalink[data-jsx="1612751349"]{visibility:visible}</style>
  <style id="__jsx-style-2515808915">h3[data-jsx="2515808915"]{font-weight:bold;font-size:18px}</style>
  <style id="__jsx-style-2126963201">div[data-jsx="2126963201"]{border:1px solid #eaeaea;color:#bd10e0;font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;font-size:13px;line-height:20px;margin:40px 0;padding:20px;-webkit-overflow-scrolling:touch;white-space:pre;overflow:auto}div[data-jsx="2126963201"] span[data-jsx="2126963201"]{display:block}div[data-jsx="2126963201"] span[data-jsx="2126963201"]::before{content:"$ "}</style>
  <style id="__jsx-style-3114168963">code[data-jsx="3114168963"]{color:#bd10e0;font-family:Menlo,Monaco,Lucida Console,Liberation Mono, DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace, serif;font-size:13px;line-height:20px}</style>
  <style id="__jsx-style-2914616870">span[data-jsx="2914616870"]{font-weight:600}</style>
  <style id="__jsx-style-4218817117">figure[data-jsx="4218817117"]{text-align:center;display:block}main[data-jsx="4218817117"]{margin:0 auto;max-width:100%}div[data-jsx="4218817117"]{position:relative}img[data-jsx="4218817117"],video[data-jsx="4218817117"]{position:absolute;top:0;left:0;height:100%;width:100%}p[data-jsx="4218817117"]{font-size:12px;text-align:center;color:#999;margin:0}</style>
  <style id="__jsx-style-888232099">.doc-layout[data-jsx="888232099"]{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:100px 30px 50px 320px;padding:0 20px;-webkit-box-pack:left;-webkit-justify-content:left;-ms-flex-pack:left;justify-content:left;-webkit-font-smoothing:antialiased}.header[data-jsx="888232099"]{position:fixed;top:0;left:0;right:0}.sidebar[data-jsx="888232099"]{position:fixed;width:280px;margin-top:0;bottom:0;left:0;top:100px;padding-left:30px;overflow:auto;-webkit-font-smoothing:antialiased}.topbar[data-jsx="888232099"]{display:none}.content[data-jsx="888232099"]{-webkit-flex:1;-ms-flex:1;flex:1;max-width:600px}.content[data-jsx="888232099"] h1[data-jsx="888232099"]{color:#000;font-size:26px;line-height:1.1;font-weight:400;margin:0 0 30px 0;padding:0}@media screen and (max-width:950px){.header[data-jsx="888232099"]{position:relative}.doc-layout[data-jsx="888232099"]{display:block;margin:0}.content[data-jsx="888232099"]{width:100%;margin-left:0}.sidebar[data-jsx="888232099"]{display:none}.topbar[data-jsx="888232099"]{display:block}}</style>
 </head>
 <body>
  <div>
   <div id="__next">
    <div data-reactroot="" data-reactid="1" data-react-checksum="1365254436">
     <div data-reactid="2">
      <div data-jsx="3390773150" data-reactid="3">
       <!-- react-empty: 4 -->
       <!-- react-empty: 5 -->
       <!-- react-empty: 6 -->
      </div>
      <div class="header" data-jsx="888232099" data-reactid="7">
       <div class="
        
        
      " data-jsx="163435532" data-reactid="8">
        <header class="clean" data-jsx="163435532" data-reactid="9">
         <a class="logo " data-jsx="163435532" href="/" data-reactid="10">
          <svg class="" viewbox="0 0 226 200" version="1.1" xmlns="http://www.w3.org/2000/svg" data-jsx="1901052719" data-reactid="11">
           <defs data-jsx="1901052719" data-reactid="12">
            <lineargradient x1="196.572434%" y1="228.815483%" x2="50%" y2="50%" id="l1" data-jsx="1901052719" data-reactid="13">
             <stop offset="0%" data-jsx="1901052719" data-reactid="14"></stop>
             <stop offset="100%" data-jsx="1901052719" data-reactid="15"></stop>
            </lineargradient>
           </defs>
           <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" data-jsx="1901052719" data-reactid="16">
            <g transform="translate(-141.000000, -156.000000)" fill="url(#l1)" data-jsx="1901052719" data-reactid="17">
             <polygon points="254 156.459299 367 356 141 356 " data-jsx="1901052719" data-reactid="18"></polygon>
            </g>
           </g>
           <!-- react-empty: 19 -->
          </svg></a>
         <div class="menu-arrow" data-jsx="163435532" data-reactid="20"></div>
         <div class="nav-container " data-jsx="163435532" data-reactid="21">
          <div class="nav right" data-jsx="163435532" data-reactid="22">
           <a class="" data-jsx="163435532" href="/login" data-reactid="23">Login</a>
          </div>
         </div>
        </header>
        <!-- react-empty: 24 -->
       </div>
      </div>
      <div data-jsx="2597227052" data-reactid="25">
       <div class="sidebar" data-jsx="888232099" data-reactid="26">
        <div data-reactid="27">
         <div class="category level-1" data-jsx="1036404298" data-reactid="28">
          <div class="label" data-jsx="1036404298" data-reactid="29">
           Getting Started
          </div>
          <div class="posts" style="margin-left:0;" data-jsx="1036404298" data-reactid="30">
           <div class="link" data-jsx="1557091742" data-reactid="31">
            <div data-jsx="1493652847" data-reactid="32">
             <a class="" data-jsx="1493652847" href="/docs/getting-started/five-minute-guide-to-now" data-reactid="33">Five Minute Guide</a>
             <!-- react-empty: 34 -->
            </div>
            <!-- react-empty: 35 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="36">
            <div data-jsx="1493652847" data-reactid="37">
             <a class="" data-jsx="1493652847" href="/docs/getting-started/installation" data-reactid="38">Installation</a>
             <!-- react-empty: 39 -->
            </div>
            <!-- react-empty: 40 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="41">
            <div data-jsx="1493652847" data-reactid="42">
             <a class="" data-jsx="1493652847" href="/docs/getting-started/deployment" data-reactid="43">Deployment</a>
             <!-- react-empty: 44 -->
            </div>
            <!-- react-empty: 45 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="46">
            <div data-jsx="1493652847" data-reactid="47">
             <a class="" data-jsx="1493652847" href="/docs/getting-started/assign-a-domain-name" data-reactid="48">Assign a Domain Name</a>
             <!-- react-empty: 49 -->
            </div>
            <!-- react-empty: 50 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="51">
            <div data-jsx="1493652847" data-reactid="52">
             <a class="" data-jsx="1493652847" href="/docs/getting-started/logs" data-reactid="53">Logs</a>
             <!-- react-empty: 54 -->
            </div>
            <!-- react-empty: 55 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="56">
            <div data-jsx="1493652847" data-reactid="57">
             <a class="" data-jsx="1493652847" href="/docs/getting-started/environment-variables" data-reactid="58">Environment Variables</a>
             <!-- react-empty: 59 -->
            </div>
            <!-- react-empty: 60 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="61">
            <div data-jsx="1493652847" data-reactid="62">
             <a class="" data-jsx="1493652847" href="/docs/getting-started/secrets" data-reactid="63">Secrets</a>
             <!-- react-empty: 64 -->
            </div>
            <!-- react-empty: 65 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="66">
            <div data-jsx="1493652847" data-reactid="67">
             <a class="" data-jsx="1493652847" href="/docs/getting-started/scaling" data-reactid="68">Scaling</a>
             <!-- react-empty: 69 -->
            </div>
            <!-- react-empty: 70 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="71">
            <div data-jsx="1493652847" data-reactid="72">
             <a class="" data-jsx="1493652847" href="/docs/getting-started/whats-next" data-reactid="73">What's Next</a>
             <!-- react-empty: 74 -->
            </div>
            <!-- react-empty: 75 -->
           </div>
          </div>
          <!-- react-empty: 76 -->
         </div>
         <div class="category level-1" data-jsx="1036404298" data-reactid="77">
          <div class="label" data-jsx="1036404298" data-reactid="78">
           Guides
          </div>
          <div class="posts" style="margin-left:0;" data-jsx="1036404298" data-reactid="79">
           <div class="link" data-jsx="1557091742" data-reactid="80">
            <div data-jsx="1493652847" data-reactid="81">
             <a class="" data-jsx="1493652847" href="/docs/deployment-types/lifecycle" data-reactid="82">App Lifecycle &amp; Scalability</a>
             <!-- react-empty: 83 -->
            </div>
            <!-- react-empty: 84 -->
           </div>
           <div class="category level-2" data-jsx="1036404298" data-reactid="85">
            <div class="label" data-jsx="1036404298" data-reactid="86">
             Deployment Types
            </div>
            <div class="posts" style="margin-left:10px;" data-jsx="1036404298" data-reactid="87">
             <div class="link" data-jsx="1557091742" data-reactid="88">
              <div data-jsx="1493652847" data-reactid="89">
               <a class="" data-jsx="1493652847" href="/docs/deployment-types/static" data-reactid="90">Static</a>
               <!-- react-empty: 91 -->
              </div>
              <!-- react-empty: 92 -->
             </div>
             <div class="link" data-jsx="1557091742" data-reactid="93">
              <div data-jsx="1493652847" data-reactid="94">
               <a class="" data-jsx="1493652847" href="/docs/deployment-types/node" data-reactid="95">Node.js</a>
               <!-- react-empty: 96 -->
              </div>
              <!-- react-empty: 97 -->
             </div>
             <div class="link" data-jsx="1557091742" data-reactid="98">
              <div data-jsx="1493652847" data-reactid="99">
               <a class="" data-jsx="1493652847" href="/docs/deployment-types/docker" data-reactid="100">Docker</a>
               <!-- react-empty: 101 -->
              </div>
              <!-- react-empty: 102 -->
             </div>
            </div>
            <!-- react-empty: 103 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="104">
            <div data-jsx="1493652847" data-reactid="105">
             <a class="" data-jsx="1493652847" href="/docs/features/zero-downtime-migration" data-reactid="106">Migrate Your App to now</a>
             <!-- react-empty: 107 -->
            </div>
            <!-- react-empty: 108 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="109">
            <div data-jsx="1493652847" data-reactid="110">
             <a class="" data-jsx="1493652847" href="/docs/features/aliases" data-reactid="111">Aliases and Custom Domains</a>
             <!-- react-empty: 112 -->
            </div>
            <!-- react-empty: 113 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="114">
            <div data-jsx="1493652847" data-reactid="115">
             <a class="" data-jsx="1493652847" href="/docs/features/env-and-secrets" data-reactid="116">Env and Secrets</a>
             <!-- react-empty: 117 -->
            </div>
            <!-- react-empty: 118 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="119">
            <div data-jsx="1493652847" data-reactid="120">
             <a class="" data-jsx="1493652847" href="/docs/features/configuration" data-reactid="121">Configuration</a>
             <!-- react-empty: 122 -->
            </div>
            <!-- react-empty: 123 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="124">
            <div data-jsx="1493652847" data-reactid="125">
             <a class="" data-jsx="1493652847" href="/docs/features/now-cli" data-reactid="126">Now CLI</a>
             <!-- react-empty: 127 -->
            </div>
            <!-- react-empty: 128 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="129">
            <div data-jsx="1493652847" data-reactid="130">
             <a class="" data-jsx="1493652847" href="/docs/features/certs" data-reactid="131">SSL Certificates</a>
             <!-- react-empty: 132 -->
            </div>
            <!-- react-empty: 133 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="134">
            <div data-jsx="1493652847" data-reactid="135">
             <a class="" data-jsx="1493652847" href="/docs/features/dns" data-reactid="136">Custom Domains &amp; DNS</a>
             <!-- react-empty: 137 -->
            </div>
            <!-- react-empty: 138 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="139">
            <div data-jsx="1493652847" data-reactid="140">
             <a class="" data-jsx="1493652847" href="/docs/features/private-npm" data-reactid="141">Private NPM</a>
             <!-- react-empty: 142 -->
            </div>
            <!-- react-empty: 143 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="144">
            <div data-jsx="1493652847" data-reactid="145">
             <a class="" data-jsx="1493652847" href="/docs/features/repositories" data-reactid="146">GIT Repositories</a>
             <!-- react-empty: 147 -->
            </div>
            <!-- react-empty: 148 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="149">
            <div data-jsx="1493652847" data-reactid="150">
             <a class="" data-jsx="1493652847" href="/docs/features/path-aliases" data-reactid="151">Path Aliases</a>
             <!-- react-empty: 152 -->
            </div>
            <!-- react-empty: 153 -->
           </div>
          </div>
          <!-- react-empty: 154 -->
         </div>
         <div class="category level-1" data-jsx="1036404298" data-reactid="155">
          <div class="label" data-jsx="1036404298" data-reactid="156">
           Examples
          </div>
          <div class="posts" style="margin-left:0;" data-jsx="1036404298" data-reactid="157">
           <div class="link" data-jsx="1557091742" data-reactid="158">
            <div data-jsx="1493652847" data-reactid="159">
             <a class="" data-jsx="1493652847" href="/docs/examples/json-api" data-reactid="160">JSON API</a>
             <!-- react-empty: 161 -->
            </div>
            <!-- react-empty: 162 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="163">
            <div data-jsx="1493652847" data-reactid="164">
             <a class="" data-jsx="1493652847" href="/docs/examples/static" data-reactid="165">Static Website</a>
             <!-- react-empty: 166 -->
            </div>
            <!-- react-empty: 167 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="168">
            <div data-jsx="1493652847" data-reactid="169">
             <a class="" data-jsx="1493652847" href="/docs/examples/next" data-reactid="170">Next.js App</a>
             <!-- react-empty: 171 -->
            </div>
            <!-- react-empty: 172 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="173">
            <div data-jsx="1493652847" data-reactid="174">
             <a class="selected" data-jsx="1493652847" href="/docs/examples/slack-slash" data-reactid="175">Slash Command for Slack</a>
             <!-- react-empty: 176 -->
            </div>
            <!-- react-empty: 177 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="178">
            <div data-jsx="1493652847" data-reactid="179">
             <a class="" data-jsx="1493652847" href="/docs/examples/chat" data-reactid="180">Realtime Chat</a>
             <!-- react-empty: 181 -->
            </div>
            <!-- react-empty: 182 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="183">
            <div data-jsx="1493652847" data-reactid="184">
             <a class="" data-jsx="1493652847" href="/docs/examples/graphql" data-reactid="185">GraphQL App</a>
             <!-- react-empty: 186 -->
            </div>
            <!-- react-empty: 187 -->
           </div>
           <div class="link" data-jsx="1557091742" data-reactid="188">
            <div data-jsx="1493652847" data-reactid="189">
             <a class="" data-jsx="1493652847" href="/docs/examples/create-react-app" data-reactid="190">Create React App</a>
             <!-- react-empty: 191 -->
            </div>
            <!-- react-empty: 192 -->
           </div>
          </div>
          <!-- react-empty: 193 -->
         </div>
         <div class="category level-1" data-jsx="1036404298" data-reactid="194">
          <div class="label" data-jsx="1036404298" data-reactid="195">
           Support
          </div>
          <div class="posts" style="margin-left:0;" data-jsx="1036404298" data-reactid="196">
           <div class="link" data-jsx="1557091742" data-reactid="197">
            <div data-jsx="1493652847" data-reactid="198">
             <a class="" data-jsx="1493652847" href="/docs/support/channels" data-reactid="199">Support Channels</a>
             <!-- react-empty: 200 -->
            </div>
            <!-- react-empty: 201 -->
           </div>
          </div>
          <!-- react-empty: 202 -->
         </div>
        </div>
       </div>
       <!-- react-empty: 203 -->
      </div>
      <div data-jsx="888232099" data-reactid="204">
       <div class="doc-layout" data-jsx="888232099" data-reactid="205">
        <div class="topbar" data-jsx="888232099" data-reactid="206">
         <div data-jsx="4119666629" data-reactid="207">
          <div class="arrow" data-jsx="4119666629" data-reactid="208">
           <svg style="fill:inherit;" width="27px" height="14px" viewbox="0 0 27 14" version="1.1" data-reactid="209">
            <g id="Page-1" stroke="none" stroke-width="1" fill-rule="evenodd" data-reactid="210">
             <polygon id="Arrow" fill-rule="nonzero" points="13.4999996 13.9214282 0.6 1.17499997 1.82857139 0.1 13.4999996 11.7714282 25.1714278 0.1 26.3999992 1.17499997" data-reactid="211"></polygon>
            </g>
           </svg>
          </div>
          <!-- react-empty: 212 -->
         </div>
        </div>
        <div class="content" data-jsx="888232099" data-reactid="213">
         <h1 data-jsx="888232099" data-reactid="214">Building a Slash Command for Slack</h1>
         <div class="doc-markdown" data-jsx="888232099" data-reactid="215">
          <div class="_markdown_" data-reactid="216">
           <div data-jsx="2577313290" data-reactid="217">
            <!-- react-text: 218 -->For most people in the web community, 
            <!-- /react-text -->
            <a class="" href="https://slack.com/" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="219">
             <!-- react-text: 220 -->Slack
             <!-- /react-text -->
             <!-- react-empty: 221 --></a>
            <!-- react-text: 222 --> has become an essential part of their everyday life. It has turned into a wonderful tool for sharing text, sending files around and building a community (a great example for this is 
            <!-- /react-text -->
            <a class="" href="https://zeit.chat/" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="223">
             <!-- react-text: 224 -->our public Slack team
             <!-- /react-text -->
             <!-- react-empty: 225 --></a>
            <!-- react-text: 226 -->).
            <!-- /react-text -->
            <!-- react-empty: 227 -->
           </div>
           <div data-jsx="2577313290" data-reactid="228">
            <!-- react-text: 229 -->To support this wide range of use cases and empower people who use the service to gather people together for a great cause, I thought it would be a great idea to set up a detailed documentation about building a slash command on top of 
            <!-- /react-text -->
            <span class="now" style="color:#000;" data-jsx="85473142" data-reactid="230"><span style="width:9px;height:8px;" data-jsx="85473142" data-reactid="231">
              <svg viewbox="0 0 40 35" version="1.1" xmlns="http://www.w3.org/2000/svg" data-reactid="232">
               <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" data-reactid="233">
                <g transform="translate(-626.000000, -61.000000)" data-reactid="234">
                 <g transform="translate(628.000000, 63.000000)" data-reactid="235">
                  <path stroke="#979797" data-reactid="236"></path>
                  <g stroke-width="2" stroke="#000" data-reactid="237">
                   <polygon points="17.8444809 0.0466407108 35.6889618 31.9974443 0 31.9974443 " data-reactid="238"></polygon>
                  </g>
                  <path d="M34.0851064,31.5897436 L17.2340426,1.23076923" stroke="#000" stroke-linecap="square" data-reactid="239"></path>
                  <path d="M34.8510638,31.5897436 L18,1.23076923" stroke="#000" stroke-linecap="square" data-reactid="240"></path>
                  <path d="M33.3191489,31.5897436 L17.2340426,2.05128205" stroke="#000" stroke-linecap="square" data-reactid="241"></path>
                  <path d="M32.5531915,31.5897436 L17.2340426,2.87179487" stroke="#000" stroke-linecap="square" data-reactid="242"></path>
                  <path d="M16.4680851,2.87179487 L33.3191489,31.5897436" stroke="#000" stroke-linecap="square" data-reactid="243"></path>
                  <path d="M31.787234,31.5897436 L16.4680851,3.69230769" stroke="#000" stroke-linecap="square" data-reactid="244"></path>
                  <path d="M28.7234043,25.025641 L22.5957447,14.3589744" stroke="#000" stroke-linecap="square" data-reactid="245"></path>
                 </g>
                </g>
               </g>
              </svg></span>
             <!-- react-text: 246 -->now
             <!-- /react-text -->
             <!-- react-empty: 247 --></span>
            <!-- react-text: 248 -->.
            <!-- /react-text -->
            <!-- react-empty: 249 -->
           </div>
           <div data-jsx="2577313290" data-reactid="250">
            <!-- react-text: 251 -->The idea is to allow your team members to retrieve weather information of a specific location by running a command like 
            <!-- /react-text -->
            <code class="" data-jsx="1656335710" data-reactid="252">
             <!-- react-text: 253 -->/weather
             <!-- /react-text -->
             <!-- react-empty: 254 --></code>
            <!-- react-text: 255 --> inside Slack. This creates a nice base for building a more complex command of your choice! Ready? Let's start over with what's needed for this:
            <!-- /react-text -->
            <!-- react-empty: 256 -->
           </div>
           <h3 data-jsx="2515808915" data-reactid="257"><span id="requirements" class="target" style="margin-top:-175px;padding-top:175px;" data-jsx="1612751349" data-reactid="258"></span><a href="#requirements" data-jsx="1612751349" data-reactid="259">Requirements</a><span class="permalink" data-jsx="1612751349" data-reactid="260">
             <svg width="11px" height="11px" viewbox="0 0 11 11" version="1.1" xmlns="http://www.w3.org/2000/svg" data-reactid="261">
              <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" data-reactid="262">
               <g transform="translate(-432.000000, -181.000000)" fill="#9B9B9B" data-reactid="263">
                <path d="M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z" data-reactid="264"></path>
               </g>
              </g>
             </svg></span>
            <!-- react-empty: 265 -->
            <!-- react-empty: 266 --></h3>
           <div data-jsx="2577313290" data-reactid="267">
            <!-- react-text: 268 -->Before we can go on, please ensure that you have a team account signed up on Slack's platform. If you still need to create one, you can do that directly on their 
            <!-- /react-text -->
            <a class="" href="https://slack.com/" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="269">
             <!-- react-text: 270 -->front page
             <!-- /react-text -->
             <!-- react-empty: 271 --></a>
            <!-- react-text: 272 -->.
            <!-- /react-text -->
            <!-- react-empty: 273 -->
           </div>
           <div data-jsx="2577313290" data-reactid="274">
            <!-- react-text: 275 -->Next, make sure that your instance of Node is up-to-date. You should have the latest "Current" release (compare it with 
            <!-- /react-text -->
            <a class="" href="https://nodejs.org/" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="276">
             <!-- react-text: 277 -->this
             <!-- /react-text -->
             <!-- react-empty: 278 --></a>
            <!-- react-text: 279 -->). If it's not, click on the download button on the site and get yourself the newest version.
            <!-- /react-text -->
            <!-- react-empty: 280 -->
           </div>
           <div data-jsx="2577313290" data-reactid="281">
            <!-- react-text: 282 -->You can use this command to check the version tag of your local instance:
            <!-- /react-text -->
            <!-- react-empty: 283 -->
           </div>
           <div data-jsx="2577313290" data-reactid="284">
            <div data-jsx="2126963201" data-reactid="285">
             <span data-jsx="2126963201" data-reactid="286">node -v</span>
             <!-- react-empty: 287 -->
            </div>
            <!-- react-empty: 288 -->
           </div>
           <div data-jsx="2577313290" data-reactid="289">
            <!-- react-text: 290 -->Once the output of the command matches the latest version on the site, go on to the next section.
            <!-- /react-text -->
            <!-- react-empty: 291 -->
           </div>
           <h3 data-jsx="2515808915" data-reactid="292"><span id="setup" class="target" style="margin-top:-175px;padding-top:175px;" data-jsx="1612751349" data-reactid="293"></span><a href="#setup" data-jsx="1612751349" data-reactid="294">Setup</a><span class="permalink" data-jsx="1612751349" data-reactid="295">
             <svg width="11px" height="11px" viewbox="0 0 11 11" version="1.1" xmlns="http://www.w3.org/2000/svg" data-reactid="296">
              <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" data-reactid="297">
               <g transform="translate(-432.000000, -181.000000)" fill="#9B9B9B" data-reactid="298">
                <path d="M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z" data-reactid="299"></path>
               </g>
              </g>
             </svg></span>
            <!-- react-empty: 300 -->
            <!-- react-empty: 301 --></h3>
           <div data-jsx="2577313290" data-reactid="302">
            <!-- react-text: 303 -->Now that Slack knows where to send requests to when the command is run, we can start building the service that responds to these requests. So let's create a new empty directory and move into it:
            <!-- /react-text -->
            <!-- react-empty: 304 -->
           </div>
           <div data-jsx="2577313290" data-reactid="305">
            <div data-jsx="2126963201" data-reactid="306">
             <span data-jsx="2126963201" data-reactid="307">mkdir slash-command</span>
             <span data-jsx="2126963201" data-reactid="308">cd slash-command</span>
             <!-- react-empty: 309 -->
            </div>
            <!-- react-empty: 310 -->
           </div>
           <div data-jsx="2577313290" data-reactid="311">
            <!-- react-text: 312 -->Next, create the project's 
            <!-- /react-text -->
            <code class="" data-jsx="1656335710" data-reactid="313">
             <!-- react-text: 314 -->package.json
             <!-- /react-text -->
             <!-- react-empty: 315 --></code>
            <!-- react-text: 316 --> file in that directory:
            <!-- /react-text -->
            <!-- react-empty: 317 -->
           </div>
           <div data-jsx="2577313290" data-reactid="318">
            <pre style="border:1px solid #eaeaea;padding:20px;margin:40px 0;white-space:pre;overflow:auto;-webkit-overflow-scrolling:touch;" data-reactid="319"><code data-jsx="3114168963" data-reactid="320">
              <!-- react-text: 321 -->{
  "name": "slash-command",
  "scripts": {
    "start": "micro index.js"
  }
}
              <!-- /react-text -->
              <!-- react-empty: 322 --></code></pre>
            <!-- react-empty: 323 -->
           </div>
           <div data-jsx="2577313290" data-reactid="324">
            <!-- react-text: 325 -->The code above tells 
            <!-- /react-text -->
            <span class="now" style="color:#000;" data-jsx="85473142" data-reactid="326"><span style="width:9px;height:8px;" data-jsx="85473142" data-reactid="327">
              <svg viewbox="0 0 40 35" version="1.1" xmlns="http://www.w3.org/2000/svg" data-reactid="328">
               <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" data-reactid="329">
                <g transform="translate(-626.000000, -61.000000)" data-reactid="330">
                 <g transform="translate(628.000000, 63.000000)" data-reactid="331">
                  <path stroke="#979797" data-reactid="332"></path>
                  <g stroke-width="2" stroke="#000" data-reactid="333">
                   <polygon points="17.8444809 0.0466407108 35.6889618 31.9974443 0 31.9974443 " data-reactid="334"></polygon>
                  </g>
                  <path d="M34.0851064,31.5897436 L17.2340426,1.23076923" stroke="#000" stroke-linecap="square" data-reactid="335"></path>
                  <path d="M34.8510638,31.5897436 L18,1.23076923" stroke="#000" stroke-linecap="square" data-reactid="336"></path>
                  <path d="M33.3191489,31.5897436 L17.2340426,2.05128205" stroke="#000" stroke-linecap="square" data-reactid="337"></path>
                  <path d="M32.5531915,31.5897436 L17.2340426,2.87179487" stroke="#000" stroke-linecap="square" data-reactid="338"></path>
                  <path d="M16.4680851,2.87179487 L33.3191489,31.5897436" stroke="#000" stroke-linecap="square" data-reactid="339"></path>
                  <path d="M31.787234,31.5897436 L16.4680851,3.69230769" stroke="#000" stroke-linecap="square" data-reactid="340"></path>
                  <path d="M28.7234043,25.025641 L22.5957447,14.3589744" stroke="#000" stroke-linecap="square" data-reactid="341"></path>
                 </g>
                </g>
               </g>
              </svg></span>
             <!-- react-text: 342 -->now
             <!-- /react-text -->
             <!-- react-empty: 343 --></span>
            <!-- react-text: 344 --> the name of the project ("slack-cmd") and also to execute the 
            <!-- /react-text -->
            <code class="" data-jsx="1656335710" data-reactid="345">
             <!-- react-text: 346 -->index.js
             <!-- /react-text -->
             <!-- react-empty: 347 --></code>
            <!-- react-text: 348 --> file (using micro, which we'll install in the next paragraph) when the 
            <!-- /react-text -->
            <code class="" data-jsx="1656335710" data-reactid="349">
             <!-- react-text: 350 -->npm start
             <!-- /react-text -->
             <!-- react-empty: 351 --></code>
            <!-- react-text: 352 --> command is run in your terminal or on the server.
            <!-- /react-text -->
            <!-- react-empty: 353 -->
           </div>
           <div data-jsx="2577313290" data-reactid="354">
            <!-- react-text: 355 -->Next, you need to install 
            <!-- /react-text -->
            <a class="" href="https://github.com/zeit/micro" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="356">
             <!-- react-text: 357 -->micro
             <!-- /react-text -->
             <!-- react-empty: 358 --></a>
            <!-- react-text: 359 -->, a library of ours that makes building a 
            <!-- /react-text -->
            <a class="" href="https://zeit.co/docs/examples/json-api" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="360">
             <!-- react-text: 361 -->microservice
             <!-- /react-text -->
             <!-- react-empty: 362 --></a>
            <!-- react-text: 363 --> a breeze. In addition, we'll need 
            <!-- /react-text -->
            <a class="" href="https://www.npmjs.com/package/yahoo-weather" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="364">
             <!-- react-text: 365 -->yahoo-weather
             <!-- /react-text -->
             <!-- react-empty: 366 --></a>
            <!-- react-text: 367 -->, which will provide us with the weather data.
            <!-- /react-text -->
            <!-- react-empty: 368 -->
           </div>
           <div data-jsx="2577313290" data-reactid="369">
            <!-- react-text: 370 -->Run this command in your terminal to install both using 
            <!-- /react-text -->
            <a class="" href="https://www.npmjs.com/" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="371">
             <!-- react-text: 372 -->npm
             <!-- /react-text -->
             <!-- react-empty: 373 --></a>
            <!-- react-text: 374 -->:
            <!-- /react-text -->
            <!-- react-empty: 375 -->
           </div>
           <div data-jsx="2577313290" data-reactid="376">
            <div data-jsx="2126963201" data-reactid="377">
             <span data-jsx="2126963201" data-reactid="378">npm install --save micro yahoo-weather</span>
             <!-- react-empty: 379 -->
            </div>
            <!-- react-empty: 380 -->
           </div>
           <div data-jsx="2577313290" data-reactid="381">
            <!-- react-text: 382 -->Now create the 
            <!-- /react-text -->
            <code class="" data-jsx="1656335710" data-reactid="383">
             <!-- react-text: 384 -->index.js
             <!-- /react-text -->
             <!-- react-empty: 385 --></code>
            <!-- react-text: 386 --> file and populate it with code. Load [yahoo-weather])(https://www.npmjs.com/package/yahoo-weather) and 
            <!-- /react-text -->
            <a class="" href="https://nodejs.org/api/url.html" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="387">
             <!-- react-text: 388 -->url
             <!-- /react-text -->
             <!-- react-empty: 389 --></a>
            <!-- react-text: 390 --> (a native module for parsing URLs):
            <!-- /react-text -->
            <!-- react-empty: 391 -->
           </div>
           <div data-jsx="2577313290" data-reactid="392">
            <pre style="border:1px solid #eaeaea;padding:20px;margin:40px 0;white-space:pre;overflow:auto;-webkit-overflow-scrolling:touch;" data-reactid="393"><code data-jsx="3114168963" data-reactid="394">
              <!-- react-text: 395 -->const weather = require('yahoo-weather')
const url = require('url')
              <!-- /react-text -->
              <!-- react-empty: 396 --></code></pre>
            <!-- react-empty: 397 -->
           </div>
           <div data-jsx="2577313290" data-reactid="398">
            <!-- react-text: 399 -->Then you need to export the code which specifies the output rendered when the service is accessed by Slack. In our case, it's a function that retrieves the current weather and returns a message containing the condition in degrees celsius:
            <!-- /react-text -->
            <!-- react-empty: 400 -->
           </div>
           <div data-jsx="2577313290" data-reactid="401">
            <pre style="border:1px solid #eaeaea;padding:20px;margin:40px 0;white-space:pre;overflow:auto;-webkit-overflow-scrolling:touch;" data-reactid="402"><code data-jsx="3114168963" data-reactid="403">
              <!-- react-text: 404 -->module.exports = async request =&gt; {
  const query = url.parse(request.url, true).query

  if (!query.text) {
    return 'No location defined!'
  }

  const weatherInfo = await weather(query.text.toLowerCase())
  const temperature = weatherInfo.item.condition.temp

  return 'It is ' + temperature + ' degrees celsius in ' + query.text + ' right now!'
}
              <!-- /react-text -->
              <!-- react-empty: 405 --></code></pre>
            <!-- react-empty: 406 -->
           </div>
           <h3 data-jsx="2515808915" data-reactid="407"><span id="deploying" class="target" style="margin-top:-175px;padding-top:175px;" data-jsx="1612751349" data-reactid="408"></span><a href="#deploying" data-jsx="1612751349" data-reactid="409">Deploying</a><span class="permalink" data-jsx="1612751349" data-reactid="410">
             <svg width="11px" height="11px" viewbox="0 0 11 11" version="1.1" xmlns="http://www.w3.org/2000/svg" data-reactid="411">
              <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" data-reactid="412">
               <g transform="translate(-432.000000, -181.000000)" fill="#9B9B9B" data-reactid="413">
                <path d="M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z" data-reactid="414"></path>
               </g>
              </g>
             </svg></span>
            <!-- react-empty: 415 -->
            <!-- react-empty: 416 --></h3>
           <div data-jsx="2577313290" data-reactid="417">
            <!-- react-text: 418 -->Now that we've covered the project's files, you can 
            <!-- /react-text -->
            <span data-jsx="2914616870" data-reactid="419">
             <!-- react-text: 420 -->deploy it
             <!-- /react-text -->
             <!-- react-empty: 421 --></span>
            <!-- react-text: 422 --> by running this command:
            <!-- /react-text -->
            <!-- react-empty: 423 -->
           </div>
           <div data-jsx="2577313290" data-reactid="424">
            <div data-jsx="2126963201" data-reactid="425">
             <span data-jsx="2126963201" data-reactid="426">now</span>
             <!-- react-empty: 427 -->
            </div>
            <!-- react-empty: 428 -->
           </div>
           <div data-jsx="2577313290" data-reactid="429">
            <!-- react-text: 430 -->Once 
            <!-- /react-text -->
            <span class="now" style="color:#000;" data-jsx="85473142" data-reactid="431"><span style="width:9px;height:8px;" data-jsx="85473142" data-reactid="432">
              <svg viewbox="0 0 40 35" version="1.1" xmlns="http://www.w3.org/2000/svg" data-reactid="433">
               <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" data-reactid="434">
                <g transform="translate(-626.000000, -61.000000)" data-reactid="435">
                 <g transform="translate(628.000000, 63.000000)" data-reactid="436">
                  <path stroke="#979797" data-reactid="437"></path>
                  <g stroke-width="2" stroke="#000" data-reactid="438">
                   <polygon points="17.8444809 0.0466407108 35.6889618 31.9974443 0 31.9974443 " data-reactid="439"></polygon>
                  </g>
                  <path d="M34.0851064,31.5897436 L17.2340426,1.23076923" stroke="#000" stroke-linecap="square" data-reactid="440"></path>
                  <path d="M34.8510638,31.5897436 L18,1.23076923" stroke="#000" stroke-linecap="square" data-reactid="441"></path>
                  <path d="M33.3191489,31.5897436 L17.2340426,2.05128205" stroke="#000" stroke-linecap="square" data-reactid="442"></path>
                  <path d="M32.5531915,31.5897436 L17.2340426,2.87179487" stroke="#000" stroke-linecap="square" data-reactid="443"></path>
                  <path d="M16.4680851,2.87179487 L33.3191489,31.5897436" stroke="#000" stroke-linecap="square" data-reactid="444"></path>
                  <path d="M31.787234,31.5897436 L16.4680851,3.69230769" stroke="#000" stroke-linecap="square" data-reactid="445"></path>
                  <path d="M28.7234043,25.025641 L22.5957447,14.3589744" stroke="#000" stroke-linecap="square" data-reactid="446"></path>
                 </g>
                </g>
               </g>
              </svg></span>
             <!-- react-text: 447 -->now
             <!-- /react-text -->
             <!-- react-empty: 448 --></span>
            <!-- react-text: 449 --> has finished uploading the files, you'll see a URL that points to your freshly created slash command service. Now we're ready to tell the Slack platform about the service, so that it can send requests there.
            <!-- /react-text -->
            <!-- react-empty: 450 -->
           </div>
           <div data-jsx="2577313290" data-reactid="451">
            <!-- react-text: 452 -->But in the case of a real service (not used for testing purposes), you would now have to 
            <!-- /react-text -->
            <a class="" href="https://zeit.co/docs/features/aliases" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="453">
             <!-- react-text: 454 -->assign an alias
             <!-- /react-text -->
             <!-- react-empty: 455 --></a>
            <!-- react-text: 456 --> to it.
            <!-- /react-text -->
            <!-- react-empty: 457 -->
           </div>
           <h3 data-jsx="2515808915" data-reactid="458"><span id="registering-the-command" class="target" style="margin-top:-175px;padding-top:175px;" data-jsx="1612751349" data-reactid="459"></span><a href="#registering-the-command" data-jsx="1612751349" data-reactid="460">Registering the Command</a><span class="permalink" data-jsx="1612751349" data-reactid="461">
             <svg width="11px" height="11px" viewbox="0 0 11 11" version="1.1" xmlns="http://www.w3.org/2000/svg" data-reactid="462">
              <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" data-reactid="463">
               <g transform="translate(-432.000000, -181.000000)" fill="#9B9B9B" data-reactid="464">
                <path d="M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z" data-reactid="465"></path>
               </g>
              </g>
             </svg></span>
            <!-- react-empty: 466 -->
            <!-- react-empty: 467 --></h3>
           <div data-jsx="2577313290" data-reactid="468">
            <!-- react-text: 469 -->Telling Slack about the command is pretty easy. As the first step, you need to search 
            <!-- /react-text -->
            <a class="" href="https://slack.com/apps" target="_blank" rel="noopener noreferrer" data-jsx="2556328477" data-reactid="470">
             <!-- react-text: 471 -->this page
             <!-- /react-text -->
             <!-- react-empty: 472 --></a>
            <!-- react-text: 473 --> for the "Slash Commands" application. Once you've found it, click on "Add Configuration" in the sidebar:
            <!-- /react-text -->
            <!-- react-empty: 474 -->
           </div>
           <div data-jsx="2577313290" data-reactid="475">
            <figure style="margin:40px 0;" data-jsx="4218817117" data-reactid="476">
             <main style="width:500px;" data-jsx="4218817117" data-reactid="477">
              <div style="padding-bottom:64.2%;" data-jsx="4218817117" data-reactid="478">
               <img src="https://res.cloudinary.com/zeit-inc/image/upload/front/docs/slack-slash/add-configuration.png" data-jsx="4218817117" data-reactid="479">
              </div>
             </main>
             <!-- react-empty: 480 -->
            </figure>
            <!-- react-empty: 481 -->
           </div>
           <div data-jsx="2577313290" data-reactid="482">
            <!-- react-text: 483 -->You'll be forwarded to another page where you need to enter the name of your slash command. In our case, it should be 
            <!-- /react-text -->
            <code class="" data-jsx="1656335710" data-reactid="484">
             <!-- react-text: 485 -->/weather
             <!-- /react-text -->
             <!-- react-empty: 486 --></code>
            <!-- react-text: 487 -->. Enter it and click on the green button at the bottom!
            <!-- /react-text -->
            <!-- react-empty: 488 -->
           </div>
           <div data-jsx="2577313290" data-reactid="489">
            <!-- react-text: 490 -->Now you should see a section named 
            <!-- /react-text -->
            <span data-jsx="2914616870" data-reactid="491">
             <!-- react-text: 492 -->Integration Settings
             <!-- /react-text -->
             <!-- react-empty: 493 --></span>
            <!-- react-text: 494 -->. In there, we need to add the address of our deployment to the 
            <!-- /react-text -->
            <span data-jsx="2914616870" data-reactid="495">
             <!-- react-text: 496 -->URL
             <!-- /react-text -->
             <!-- react-empty: 497 --></span>
            <!-- react-text: 498 --> field, select 
            <!-- /react-text -->
            <span data-jsx="2914616870" data-reactid="499">
             <!-- react-text: 500 -->GET
             <!-- /react-text -->
             <!-- react-empty: 501 --></span>
            <!-- react-text: 502 --> as the 
            <!-- /react-text -->
            <span data-jsx="2914616870" data-reactid="503">
             <!-- react-text: 504 -->Method
             <!-- /react-text -->
             <!-- react-empty: 505 --></span>
            <!-- react-text: 506 --> and enter "weather" in the 
            <!-- /react-text -->
            <span data-jsx="2914616870" data-reactid="507">
             <!-- react-text: 508 -->Customize Name
             <!-- /react-text -->
             <!-- react-empty: 509 --></span>
            <!-- react-text: 510 --> input.
            <!-- /react-text -->
            <!-- react-empty: 511 -->
           </div>
           <div data-jsx="2577313290" data-reactid="512">
            <!-- react-text: 513 -->Optionally, you can also make the command show up in the autocomplete help in the 
            <!-- /react-text -->
            <span data-jsx="2914616870" data-reactid="514">
             <!-- react-text: 515 -->Autocomplete help text
             <!-- /react-text -->
             <!-- react-empty: 516 --></span>
            <!-- react-text: 517 --> section:
            <!-- /react-text -->
            <!-- react-empty: 518 -->
           </div>
           <div data-jsx="2577313290" data-reactid="519">
            <figure style="margin:40px 0;" data-jsx="4218817117" data-reactid="520">
             <main style="width:600px;" data-jsx="4218817117" data-reactid="521">
              <div style="padding-bottom:35.66666666666667%;" data-jsx="4218817117" data-reactid="522">
               <img src="https://res.cloudinary.com/zeit-inc/image/upload/front/docs/slack-slash/auto-complete.png" data-jsx="4218817117" data-reactid="523">
              </div>
             </main>
             <!-- react-empty: 524 -->
            </figure>
            <!-- react-empty: 525 -->
           </div>
           <div data-jsx="2577313290" data-reactid="526">
            <!-- react-text: 527 -->Hit 
            <!-- /react-text -->
            <span data-jsx="2914616870" data-reactid="528">
             <!-- react-text: 529 -->"Save Integration"
             <!-- /react-text -->
             <!-- react-empty: 530 --></span>
            <!-- react-text: 531 --> once you're done!
            <!-- /react-text -->
            <!-- react-empty: 532 -->
           </div>
           <div data-jsx="2577313290" data-reactid="533">
            <!-- react-text: 534 -->You should now be able to run the 
            <!-- /react-text -->
            <code class="" data-jsx="1656335710" data-reactid="535">
             <!-- react-text: 536 -->/weather
             <!-- /react-text -->
             <!-- react-empty: 537 --></code>
            <!-- react-text: 538 --> command from within Slack.
            <!-- /react-text -->
            <!-- react-empty: 539 -->
           </div>
          </div>
         </div>
        </div>
        <div data-jsx="888232099" data-reactid="540"></div>
       </div>
      </div>
      <!-- react-empty: 541 -->
      <!-- react-empty: 542 -->
     </div>
    </div>
   </div>
   <div id="__next-error"></div>
  </div>
  <script>__ENV__ = {"STRIPE_PUBLISHABLE_KEY":"pk_live_alyEi3lN0kSwbdevK0nrGwTw"}</script>
  <div>
   <script>
          __NEXT_DATA__ = {"props":{},"pathname":"/docs/examples/slack-slash","query":{},"buildId":"e5220cf8-f900-465c-a855-6d5c3dae4654","buildStats":{"app.js":{"hash":"d5a98b54caccd7a452c19f9cf76b018e"}},"assetPrefix":"https://cdn.zeit.co/now-front-rwqezfqhlp/front","nextExport":false,"err":null,"chunks":[]}
          module={}
          __NEXT_LOADED_PAGES__ = []
          __NEXT_LOADED_CHUNKS__ = []

          __NEXT_REGISTER_PAGE = function (route, fn) {
            __NEXT_LOADED_PAGES__.push({ route: route, fn: fn })
          }

          __NEXT_REGISTER_CHUNK = function (chunkName, fn) {
            __NEXT_LOADED_CHUNKS__.push({ chunkName: chunkName, fn: fn })
          }
        </script>
   <script async id="__NEXT_PAGE__/docs/examples/slack-slash" type="text/javascript" src="https://cdn.zeit.co/now-front-rwqezfqhlp/front/_next/e5220cf8-f900-465c-a855-6d5c3dae4654/page/docs/examples/slack-slash"></script>
   <script async id="__NEXT_PAGE__/_error" type="text/javascript" src="https://cdn.zeit.co/now-front-rwqezfqhlp/front/_next/e5220cf8-f900-465c-a855-6d5c3dae4654/page/_error/index.js"></script>
   <div></div>
   <script type="text/javascript" src="https://cdn.zeit.co/now-front-rwqezfqhlp/front/_next/d5a98b54caccd7a452c19f9cf76b018e/app.js" async></script>
  </div>
 </body>
</html>