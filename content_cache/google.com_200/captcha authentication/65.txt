<!doctype html>
<html xmlns="http://www.w3.org/1999/xhtml" prefix="og: http://ogp.me/ns# fb: https://www.facebook.com/2008/fbml" lang="en-US" class="no-js">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <!-- BEGIN Metadata added by the Add-Meta-Tags WordPress plugin --> 
  <meta name="description" content="Using bcrypt is the proper way to store passwords in your database regardless of whatever language your backend is built in - PHP, Ruby, Python, Node.js, etc. Why ? Here's the answer. So how do we go about employing this technique in Node."> 
  <meta name="keywords" content="tools &amp; tips, bcrypt, nodejs"> 
  <meta property="og:site_name" content="Code Theory"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Using the Node.js Bcrypt Module to Hash and Safely Store Passwords"> 
  <meta property="og:url" content="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/"> 
  <meta property="og:description" content="Using bcrypt is the proper way to store passwords in your database regardless of whatever language your backend is built in - PHP, Ruby, Python, Node.js, etc. Why ? Here's the answer. So how do we go about employing this technique in Node."> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:updated_time" content="2013-04-02T10:34:00+00:00"> 
  <meta property="article:published_time" content="2013-04-02T10:28:46+00:00"> 
  <meta property="article:modified_time" content="2013-04-02T10:34:00+00:00"> 
  <meta property="article:author" content="http://codetheory.in/author/admin/"> 
  <meta property="article:publisher" content="http://codetheory.in/"> 
  <meta property="article:section" content="Tools &amp; Tips"> 
  <meta property="article:tag" content="tools &amp; tips"> 
  <meta property="article:tag" content="bcrypt"> 
  <meta property="article:tag" content="nodejs"> 
  <!-- END Metadata added by the Add-Meta-Tags WordPress plugin --> 
  <script>(function(html){html.className = html.className.replace(/\bno-js\b/,'js')})(document.documentElement);</script> 
  <title>Using the Node.js Bcrypt Module to Hash and Safely Store Passwords – Code Theory</title> 
  <link rel="alternate" type="application/rss+xml" title="Code Theory » Feed" href="http://codetheory.in/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Code Theory » Comments Feed" href="http://codetheory.in/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Code Theory » Using the Node.js Bcrypt Module to Hash and Safely Store Passwords Comments Feed" href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/codetheory.in\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.5.3"}};
			!function(a,b,c){function d(a){var c,d,e,f=b.createElement("canvas"),g=f.getContext&&f.getContext("2d"),h=String.fromCharCode;if(!g||!g.fillText)return!1;switch(g.textBaseline="top",g.font="600 32px Arial",a){case"flag":return g.fillText(h(55356,56806,55356,56826),0,0),f.toDataURL().length>3e3;case"diversity":return g.fillText(h(55356,57221),0,0),c=g.getImageData(16,16,1,1).data,d=c[0]+","+c[1]+","+c[2]+","+c[3],g.fillText(h(55356,57221,55356,57343),0,0),c=g.getImageData(16,16,1,1).data,e=c[0]+","+c[1]+","+c[2]+","+c[3],d!==e;case"simple":return g.fillText(h(55357,56835),0,0),0!==g.getImageData(16,16,1,1).data[0];case"unicode8":return g.fillText(h(55356,57135),0,0),0!==g.getImageData(16,16,1,1).data[0]}return!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i;for(i=Array("simple","flag","unicode8","diversity"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="contact-form-7-css" href="http://codetheory.in/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=4.4.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="topbar-css" href="http://codetheory.in/wp-content/plugins/topbar-pro/css/topbar_style.css?ver=4.5.3" type="text/css" media="all"> 
  <link rel="stylesheet" id="wp-polls-css" href="http://codetheory.in/wp-content/plugins/wp-polls/polls-css.css?ver=2.73.3" type="text/css" media="all"> 
  <style id="wp-polls-inline-css" type="text/css">
.wp-polls .pollbar {
	margin: 1px;
	font-size: 6px;
	line-height: 8px;
	height: 8px;
	background-image: url('http://codetheory.in/wp-content/plugins/wp-polls/images/default/pollbg.gif');
	border: 1px solid #c8c8c8;
}

</style> 
  <link rel="stylesheet" id="twentysixteen-fonts-css" href="https://fonts.googleapis.com/css?family=Merriweather%3A400%2C700%2C900%2C400italic%2C700italic%2C900italic%7CMontserrat%3A400%2C700%7CInconsolata%3A400&amp;subset=latin%2Clatin-ext" type="text/css" media="all"> 
  <link rel="stylesheet" id="genericons-css" href="http://codetheory.in/wp-content/themes/twentysixteen/genericons/genericons.css?ver=3.4.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="twentysixteen-style-css" href="http://codetheory.in/wp-content/themes/twentysixteen/style.css?ver=4.5.3" type="text/css" media="all"> 
  <!--[if lt IE 10]>
<link rel='stylesheet' id='twentysixteen-ie-css'  href='http://codetheory.in/wp-content/themes/twentysixteen/css/ie.css?ver=20150930' type='text/css' media='all' />
<![endif]--> 
  <!--[if lt IE 9]>
<link rel='stylesheet' id='twentysixteen-ie8-css'  href='http://codetheory.in/wp-content/themes/twentysixteen/css/ie8.css?ver=20151230' type='text/css' media='all' />
<![endif]--> 
  <!--[if lt IE 8]>
<link rel='stylesheet' id='twentysixteen-ie7-css'  href='http://codetheory.in/wp-content/themes/twentysixteen/css/ie7.css?ver=20150930' type='text/css' media='all' />
<![endif]--> 
  <link rel="stylesheet" id="A2A_SHARE_SAVE-css" href="http://codetheory.in/wp-content/plugins/add-to-any/addtoany.min.css?ver=1.13" type="text/css" media="all"> 
  <script type="text/javascript" src="http://codetheory.in/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/add-to-any/addtoany.min.js?ver=1.0"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/topbar-pro/js/jquery.cookie.js?ver=4.5.3"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var tpbr_settings = {"initial_state":"open","user_who":"notloggedin","fixed":"fixed","guests_or_users":"all","yn_close":"close","fontsize":"15","delay":"0","border":"noborder","message":"Learn web design, web development, mobile app development & more","status":"inactive","yn_button":"button","color":"#A38F85","button_text":"Start learning for Free","button_url":"http:\/\/treehouse.7eer.net\/c\/245523\/228915\/3944","is_admin_bar":"no","close_url":"http:\/\/codetheory.in\/wp-content\/plugins\/topbar-pro\/images\/close.png"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/topbar-pro/js/tpbr_front.min.js?ver=4.5.3"></script> 
  <!--[if lt IE 9]>
<script type='text/javascript' src='http://codetheory.in/wp-content/themes/twentysixteen/js/html5.js?ver=3.7.3'></script>
<![endif]--> 
  <link rel="https://api.w.org/" href="http://codetheory.in/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://codetheory.in/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://codetheory.in/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Strategies for Select Dropdown Lists Placeholder" href="http://codetheory.in/strategies-for-select-dropdown-lists-placeholder/"> 
  <link rel="next" title="Using Underscore.string for String Manipulations in JavaScript" href="http://codetheory.in/using-underscore-string-for-string-manipulations-in-javascript/"> 
  <meta name="generator" content="WordPress 4.5.3"> 
  <link rel="canonical" href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/"> 
  <link rel="shortlink" href="http://codetheory.in/?p=1058"> 
  <link rel="alternate" type="application/json+oembed" href="http://codetheory.in/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fcodetheory.in%2Fusing-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://codetheory.in/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fcodetheory.in%2Fusing-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords%2F&amp;format=xml"> 
  <script type="text/javascript">
var a2a_config=a2a_config||{};a2a_config.callbacks=a2a_config.callbacks||[];a2a_config.templates=a2a_config.templates||{};
</script> 
  <script type="text/javascript" src="http://static.addtoany.com/menu/page.js" async></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/si_captcha.js?ver=1501684727"></script> 
  <!-- begin SI CAPTCHA Anti-Spam - login/register form style --> 
  <style type="text/css">
.si_captcha_small { width:175px; height:45px; padding-top:10px; padding-bottom:10px; }
.si_captcha_large { width:250px; height:60px; padding-top:10px; padding-bottom:10px; }
img#si_image_com { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_reg { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_log { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_side_login { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_checkout { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_jetpack { border-style:none; margin:0; padding-right:5px; float:left; }
img#si_image_bbpress_topic { border-style:none; margin:0; padding-right:5px; float:left; }
.si_captcha_refresh { border-style:none; margin:0; vertical-align:bottom; }
div#si_captcha_input { display:block; padding-top:15px; padding-bottom:5px; }
label#si_captcha_code_label { margin:0; }
input#si_captcha_code_input { width:65px; }
p#si_captcha_code { clear: left; padding-top:10px; }
.si-captcha-jetpack-error { color:#DC3232; }
</style> 
  <!-- end SI CAPTCHA Anti-Spam - login/register form style --> 
  <style type="text/css" id="syntaxhighlighteranchor"></style> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-35555370-1', 'auto');
  ga('send', 'pageview');

</script> 
  <script async type="text/javascript" src="http://thisiswaldo.com/ad_delivery?site_id=202"></script> 
 </head> 
 <body class="single single-post postid-1058 single-format-standard group-blog"> 
  <div id="waldo-tag-207"></div> 
  <div id="waldo-tag-209"></div> 
  <!--BEGIN FIRSTIMPRESSION TAG --> 
  <script data-cfasync="false" type="text/javascript">
	window.apd_options = { 'websiteId': 6145, 'runFromFrame': false };
	(function() {
		var w = window.apd_options.runFromFrame ? window.top : window;
		if(window.apd_options.runFromFrame && w!=window.parent) w=window.parent;
		if (w.location.hash.indexOf('apdAdmin') != -1){if(typeof(Storage) !== 'undefined') {w.localStorage.apdAdmin = 1;}}
		var adminMode = ((typeof(Storage) == 'undefined') || (w.localStorage.apdAdmin == 1));
		w.apd_options=window.apd_options;
		var apd = w.document.createElement('script'); apd.type = 'text/javascript'; apd.async = true;
		apd.src = '//' + (adminMode ? 'cdn' : 'ecdn') + '.firstimpression.io/' + (adminMode ? 'fi.js?id=' + window.apd_options.websiteId : 'fi_client.js') ;
		var s = w.document.getElementsByTagName('head')[0]; s.appendChild(apd);
	})();</script> 
  <!-- END FIRSTIMPRESSION TAG --> 
  <script>
function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}

  if (localStorage.getItem('UserID')) {
    dataLayer = [{
      'uid': localStorage.getItem('UserID')
    }];
  }
  else {
    localStorage.setItem('UserID', guid());
    dataLayer = [{
      'uid': localStorage.getItem('UserID')
    }];
  }
</script> 
  <!-- Google Tag Manager --> 
  <noscript>
   <iframe src="//www.googletagmanager.com/ns.html?id=GTM-K43PBP" height="0" width="0" style="display:none;visibility:hidden"></iframe>
  </noscript> 
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-K43PBP');</script> 
  <!-- End Google Tag Manager --> 
  <div id="page" class="site"> 
   <div class="site-inner"> 
    <a class="skip-link screen-reader-text" href="#content">Skip to content</a> 
    <header id="masthead" class="site-header" role="banner"> 
     <center> 
      <div id="waldo-tag-206" style="margin-bottom: -10px;"></div> 
     </center> 
     <div class="site-header-main"> 
      <div class="site-branding"> 
       <p class="site-title"><a href="http://codetheory.in/" rel="home">Code Theory</a></p> 
       <p class="site-description">Web and Mobile Development articles</p> 
      </div>
      <!-- .site-branding --> 
      <button id="menu-toggle" class="menu-toggle">Menu</button> 
      <div id="site-header-menu" class="site-header-menu"> 
       <nav id="site-navigation" class="main-navigation" role="navigation" aria-label="Primary Menu"> 
        <div class="menu-main-navigation-container">
         <ul id="menu-main-navigation" class="primary-menu">
          <li id="menu-item-2321" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-2321"><a href="http://codetheory.in/">Home</a></li> 
          <li id="menu-item-2322" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2322"><a href="http://codetheory.in/about/">About</a></li> 
          <li id="menu-item-2323" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2323"><a href="http://codetheory.in/contact/">Contact</a></li> 
         </ul>
        </div> 
       </nav>
       <!-- .main-navigation --> 
      </div>
      <!-- .site-header-menu --> 
     </div>
     <!-- .site-header-main --> 
    </header>
    <!-- .site-header --> 
    <div id="content" class="site-content"> 
     <center> 
      <div id="waldo-tag-208" style="margin-top: -40px;"></div> 
     </center> 
     <div id="primary" class="content-area"> 
      <main id="main" class="site-main" role="main"> 
       <article id="post-1058" class="post-1058 post type-post status-publish format-standard hentry category-tools-tips tag-bcrypt tag-nodejs"> 
        <header class="entry-header"> 
         <h1 class="entry-title">Using the Node.js Bcrypt Module to Hash and Safely Store Passwords</h1> 
        </header>
        <!-- .entry-header --> 
        <div class="entry-content"> 
         <p>Using bcrypt is the proper way to store passwords in your database regardless of whatever language your backend is built in – PHP, Ruby, Python, Node.js, etc. Why ? <a href="http://codahale.com/how-to-safely-store-a-password/">Here’s</a> the answer.</p> 
         <p><span id="more-1058"></span></p> 
         <p>So how do we go about employing this technique in Node.js ? Thankfully we have a neat <a href="https://github.com/ncb000gt/node.bcrypt.js/">bcrypt module</a> from <a href="https://github.com/ncb000gt">Nick Campbell</a> to do the job for us. It’s super easy to use, lets see how.</p>
         <div class="code-block code-block-1" style="margin: 8px 0;"> 
          <div class="insert" style="font-size: 24px;border-left: 5px solid #000; font-family: 'Open Sans', sans-serif; color: #333; padding-left: 15px"> 
           <p>What's the one thing every developer wants? More screens! Enhance your coding experience with an <a href="http://codetheory.in/recommends/hp-external-monitor/" rel="nofollow" target="_blank">external monitor</a> to increase screen real estate.</p> 
          </div>
         </div> 
         <div class="insert-post-ads" style="clear:both;float:left;width:100%;margin:0 0 20px 0;">
          <center> 
           <div id="waldo-tag-205"></div> 
          </center>
         </div> 
         <p>First of all install it via NPM.</p> 
         <pre class="brush: bash; title: ; notranslate" title="">$ npm install bcrypt
</pre> 
         <p>The module provides us with 2 ways to hash the password – sync and async.</p> 
         <h3>Sync Usage</h3> 
         <p>For generating the password hash and storing it you’d do something like this –</p> 
         <pre class="brush: jscript; title: ; notranslate" title="">// Load the bcrypt module
var bcrypt = require('bcrypt');
// Generate a salt
var salt = bcrypt.genSaltSync(10);
// Hash the password with the salt
var hash = bcrypt.hashSync("my password", salt);

// Finally just store the hash in your DB
// .. code to store in Redis/Mongo/Mysql/Sqlite/Postgres/etc.
</pre> 
         <p>The salt+hash can also be auto-generated in a single line of code –</p> 
         <pre class="brush: jscript; title: ; notranslate" title="">var hash = bcrypt.hashSync("my password", 10);
</pre> 
         <p>During authentication you need to check the incoming password string against the hash. This is what you’d do –</p> 
         <pre class="brush: jscript; title: ; notranslate" title="">// Load the password hash from DB
// Let's assume it's stored in a variable called `hash`
bcrypt.compareSync("my password", hash); // true
bcrypt.compareSync("not my password", hash); // false
</pre> 
         <p><code>"my password"</code> is the correct one (sent via login form or some other method by the user) hence <code>compareSync</code> returns <code>true</code> while in the second case, when the password is incorrect, it returns <code>false</code>.</p> 
         <h3>Async Usage</h3> 
         <p>The module also provides us with an async flavour that can be used like this –</p> 
         <pre class="brush: jscript; title: ; notranslate" title="">var bcrypt = require('bcrypt');
bcrypt.genSalt(10, function(err, salt) {
    bcrypt.hash("my password", salt, function(err, hash) {
        // Store hash in your password DB.
    });
});

// or

bcrypt.hash('bacon', 10, function(err, hash) {
    // Store hash in your password DB.
});
</pre> 
         <p>.. and this is how you’d compare the hash saved in DB with the user supplied password –</p> 
         <pre class="brush: jscript; title: ; notranslate" title="">// Load password hash from DB
bcrypt.compare("my password", hash, function(err, res) {
    // res === true
});
bcrypt.compare("not my password", hash, function(err, res) {
    // res === false
});
</pre> 
         <p>If you’re wondering what the <code>10</code> (that’s used for hashing) is, then that’s the <em>work factor</em> or the number of rounds the data is processed for. More rounds leads to more secured hash but slower/expensive process.</p> 
         <p>You can check out the full API documentation <a href="https://github.com/ncb000gt/node.bcrypt.js/#api">here</a>. Good Luck!</p> 
         <div id="contentad229956"></div> 
         <script type="text/javascript">
    (function(d) {
        var params =
        {
            id: "5eb77d0b-4111-4649-adc7-3d1c636286f5",
            d:  "Y29kZXRoZW9yeS5pbg==",
            wid: "229956",
            cb: (new Date()).getTime()
        };

        var qs=[];
        for(var key in params) qs.push(key+'='+encodeURIComponent(params[key]));
        var s = d.createElement('script');s.type='text/javascript';s.async=true;
        var p = 'https:' == document.location.protocol ? 'https' : 'http';
        s.src = p + "://api.content-ad.net/Scripts/widget2.aspx?" + qs.join('&');
        d.getElementById("contentad229956").appendChild(s);
    })(document);
</script> 
         <div class="crp_related ">
          <h3>Related Posts:</h3>
          <ul>
           <li><a href="http://codetheory.in/android-login-signup-with-parse/"><span class="crp_title">Building a Single Integrated Registration and Login System…</span></a></li>
           <li><a href="http://codetheory.in/css-backdrop-filter/"><span class="crp_title">CSS Apply Filter Effects (blur, grayscale, hue) to the Area…</span></a></li>
           <li><a href="http://codetheory.in/html5-form-validation-on-javascript-submission/"><span class="crp_title">Trigger HTML5 Form Validation on JavaScript Submission…</span></a></li>
           <li><a href="http://codetheory.in/android-pubnub-integration/"><span class="crp_title">Android PubNub Integration Tutorial (Setup and Basic…</span></a></li>
           <li><a href="http://codetheory.in/custom-validation-messages-for-html5-form-constraints/"><span class="crp_title">Custom Validation Messages for HTML5 Form Constraints</span></a></li>
          </ul>
          <div class="crp_clear"></div>
         </div>
         <div class="addtoany_share_save_container addtoany_content_bottom">
          <div class="a2a_kit a2a_kit_size_32 addtoany_list" data-a2a-url="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/" data-a2a-title="Using the Node.js Bcrypt Module to Hash and Safely Store Passwords">
           <a class="a2a_button_facebook" href="http://www.addtoany.com/add_to/facebook?linkurl=http%3A%2F%2Fcodetheory.in%2Fusing-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords%2F&amp;linkname=Using%20the%20Node.js%20Bcrypt%20Module%20to%20Hash%20and%20Safely%20Store%20Passwords" title="Facebook" rel="nofollow" target="_blank"></a>
           <a class="a2a_button_twitter" href="http://www.addtoany.com/add_to/twitter?linkurl=http%3A%2F%2Fcodetheory.in%2Fusing-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords%2F&amp;linkname=Using%20the%20Node.js%20Bcrypt%20Module%20to%20Hash%20and%20Safely%20Store%20Passwords" title="Twitter" rel="nofollow" target="_blank"></a>
           <a class="a2a_button_google_plus" href="http://www.addtoany.com/add_to/google_plus?linkurl=http%3A%2F%2Fcodetheory.in%2Fusing-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords%2F&amp;linkname=Using%20the%20Node.js%20Bcrypt%20Module%20to%20Hash%20and%20Safely%20Store%20Passwords" title="Google+" rel="nofollow" target="_blank"></a>
           <a class="a2a_dd a2a_counter addtoany_share_save" href="https://www.addtoany.com/share"></a>
          </div>
         </div> 
         <div class="author-info"> 
          <div class="author-avatar"> 
           <img alt="" src="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
          </div>
          <!-- .author-avatar --> 
          <div class="author-description"> 
           <h2 class="author-title"><span class="author-heading">Author:</span> Rishabh</h2> 
           <p class="author-bio"> Rishabh is a full stack web and mobile developer from India. <a href="https://twitter.com/_rishabhp">Follow me</a> on Twitter. <a class="author-link" href="http://codetheory.in/author/admin/" rel="author"> View all posts by Rishabh </a> </p>
           <!-- .author-bio --> 
          </div>
          <!-- .author-description --> 
         </div>
         <!-- .author-info --> 
        </div>
        <!-- .entry-content --> 
        <footer class="entry-footer"> 
         <span class="byline"><span class="author vcard"><img alt="" src="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=49&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/8921dd45d59014a713629ff642da8b54?s=98&amp;d=identicon&amp;r=g 2x" class="avatar avatar-49 photo" height="49" width="49"><span class="screen-reader-text">Author </span> <a class="url fn n" href="http://codetheory.in/author/admin/">Rishabh</a></span></span>
         <span class="posted-on"><span class="screen-reader-text">Posted on </span><a href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/" rel="bookmark"><time class="entry-date published" datetime="2013-04-02T10:28:46+00:00">April 2, 2013</time><time class="updated" datetime="2013-04-02T10:34:00+00:00">April 2, 2013</time></a></span>
         <span class="cat-links"><span class="screen-reader-text">Categories </span><a href="http://codetheory.in/category/tools-tips/" rel="category tag">Tools &amp; Tips</a></span>
         <span class="tags-links"><span class="screen-reader-text">Tags </span><a href="http://codetheory.in/tag/bcrypt/" rel="tag">bcrypt</a>, <a href="http://codetheory.in/tag/nodejs/" rel="tag">nodejs</a></span> 
        </footer>
        <!-- .entry-footer --> 
       </article>
       <!-- #post-## --> 
       <div id="comments" class="comments-area"> 
        <h2 class="comments-title"> 5 thoughts on “Using the Node.js Bcrypt Module to Hash and Safely Store Passwords” </h2> 
        <ol class="comment-list"> 
         <li id="comment-339271" class="comment even thread-even depth-1"> 
          <article id="div-comment-339271" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://2.gravatar.com/avatar/bee7892b81d9712d3d4d5826d1c3ac86?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/bee7892b81d9712d3d4d5826d1c3ac86?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Martello</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/#comment-339271"> <time datetime="2013-11-21T19:23:57+00:00"> November 21, 2013 at 7:23 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Thanks for the nice article. In implementing a server solution I attempted to use this but it does not work. In my data model, before inserting to db I do:</p> 
            <p>bcrypt.genSalt(12, 24, function (err, salt) {<br> if (err) return next(err);<br> bcrypt.hash(password, salt, function (err, hash) {<br> if (err) return next(err);<br> model.password = hash;<br> });<br> }<br> );</p> 
            <p>Which works fine. However, on the comparison side, it always fails:<br> var hash = model.password;<br> var userCreds = form.password;<br> var validated = bcrypt.compareSync(userCreds, hash); // always false;</p> 
            <p>The logic for inserting/comparing are in two separate modules and so have their own require(‘bcrypt’) statements. Thanks in advance</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/?replytocom=339271#respond" onclick="return addComment.moveForm( &quot;div-comment-339271&quot;, &quot;339271&quot;, &quot;respond&quot;, &quot;1058&quot; )" aria-label="Reply to Martello">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1906261" class="comment odd alt thread-odd thread-alt depth-1 parent"> 
          <article id="div-comment-1906261" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://0.gravatar.com/avatar/029285e4eb1b1676a0db5a20003e282d?s=42&amp;d=identicon&amp;r=g" srcset="http://0.gravatar.com/avatar/029285e4eb1b1676a0db5a20003e282d?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Anandha Raja</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/#comment-1906261"> <time datetime="2016-02-10T10:14:07+00:00"> February 10, 2016 at 10:14 AM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Hi, am i the new one for node js<br> var bcrypt = require(‘bcrypt’);</p> 
            <p>var salt = bcrypt.genSaltSync(10);</p> 
            <p>var hash = bcrypt.hashSync(“my password”, salt);</p> 
            <p>The above code what is “my password” it is database name or ?.</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/?replytocom=1906261#respond" onclick="return addComment.moveForm( &quot;div-comment-1906261&quot;, &quot;1906261&quot;, &quot;respond&quot;, &quot;1058&quot; )" aria-label="Reply to Anandha Raja">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> 
          <ol class="children"> 
           <li id="comment-1907949" class="comment even depth-2"> 
            <article id="div-comment-1907949" class="comment-body"> 
             <footer class="comment-meta"> 
              <div class="comment-author vcard"> 
               <img alt="" src="http://2.gravatar.com/avatar/b9844c2de11f1de300734067005a02a6?s=42&amp;d=identicon&amp;r=g" srcset="http://2.gravatar.com/avatar/b9844c2de11f1de300734067005a02a6?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
               <b class="fn"><a href="http://kadajett.github.io" rel="external nofollow" class="url">Jeremy Stover (Kadajett)</a></b> 
               <span class="says">says:</span> 
              </div>
              <!-- .comment-author --> 
              <div class="comment-metadata"> 
               <a href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/#comment-1907949"> <time datetime="2016-03-10T07:02:55+00:00"> March 10, 2016 at 7:02 AM </time> </a> 
              </div>
              <!-- .comment-metadata --> 
             </footer>
             <!-- .comment-meta --> 
             <div class="comment-content"> 
              <p>“my password” is the string you want to hash. </p> 
              <p>the flow looks a bit like this: </p> 
              <p>user registers with a password of “my password” -&gt; your node server receives it and immediately hashes it: <code>$2a$12$fs/nyKfjjUAvAXNM6Kv6tOH16J6b1N3NzsA8biVQj/.gu9S1qn5G2</code> -&gt; You store that hashed password in your database. Not EVER your users plain text password. </p> 
              <p>For a user to re-login, you can do <code>bcrypt.compareHashSync("my password", "$2a$12$fs/nyKfjjUAvAXNM6Kv6tOH16J6b1N3NzsA8biVQj/.gu9S1qn5G2")</code> -&gt; Returns true if they match, false otherwise.</p> 
             </div>
             <!-- .comment-content --> 
             <div class="reply">
              <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/?replytocom=1907949#respond" onclick="return addComment.moveForm( &quot;div-comment-1907949&quot;, &quot;1907949&quot;, &quot;respond&quot;, &quot;1058&quot; )" aria-label="Reply to Jeremy Stover (Kadajett)">Reply</a>
             </div> 
            </article>
            <!-- .comment-body --> </li>
           <!-- #comment-## --> 
          </ol>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li id="comment-1911082" class="comment odd alt thread-even depth-1"> 
          <article id="div-comment-1911082" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://0.gravatar.com/avatar/f8a0708c2fa65f19fb5b7c10b554a3de?s=42&amp;d=identicon&amp;r=g" srcset="http://0.gravatar.com/avatar/f8a0708c2fa65f19fb5b7c10b554a3de?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Akash Sourav Nayak</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/#comment-1911082"> <time datetime="2016-05-11T12:42:03+00:00"> May 11, 2016 at 12:42 PM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>Hi This is my code Whenever i am fetching the db password and compareing with my hash password its showing “Not a valid BCrypt hash” SO can u help me with this.</p> 
            <p>seneca.add({ role:’user’, cmd:’login’ }, function (msg, respond) {<br> console.log(“in seneca………..”);</p> 
            <p> con.query(‘select * from user where UserName = :uname’,{uname:msg.username}, function(err, results){<br> console.log(“inside”);<br> //var use=results;</p> 
            <p> if (err)<br> respond(null, {answer: “Invalid Operation”});</p> 
            <p> if(results.length!=0){<br> /*console.log(results);<br> console.log(msg.password);*/<br> //use=results.toJSON();<br> if(bcrypt.compareSync(msg.password,results[0].PassWord)){<br> respond(null, { loggedIn:true })<br> console.log(“success”);<br> } else {<br> respond(null, {answer:”Invalid username or password”});<br> }<br> } else {<br> respond(null, {answer:”No user found”});<br> }<br> })<br> })<br> seneca.act({role: ‘user’, cmd: ‘login’, username:”ak”, password:”asn” }, function (err, result) {<br> if (err) return console.error(err)<br> console.log(result);<br> })</p> 
            <p>Thanks</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/?replytocom=1911082#respond" onclick="return addComment.moveForm( &quot;div-comment-1911082&quot;, &quot;1911082&quot;, &quot;respond&quot;, &quot;1058&quot; )" aria-label="Reply to Akash Sourav Nayak">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
         <li id="comment-1913984" class="comment even thread-odd thread-alt depth-1"> 
          <article id="div-comment-1913984" class="comment-body"> 
           <footer class="comment-meta"> 
            <div class="comment-author vcard"> 
             <img alt="" src="http://0.gravatar.com/avatar/36e0992506f49e9ba3176d6fcb607bb3?s=42&amp;d=identicon&amp;r=g" srcset="http://0.gravatar.com/avatar/36e0992506f49e9ba3176d6fcb607bb3?s=84&amp;d=identicon&amp;r=g 2x" class="avatar avatar-42 photo" height="42" width="42"> 
             <b class="fn">Raghudontha</b> 
             <span class="says">says:</span> 
            </div>
            <!-- .comment-author --> 
            <div class="comment-metadata"> 
             <a href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/#comment-1913984"> <time datetime="2016-09-01T11:49:23+00:00"> September 1, 2016 at 11:49 AM </time> </a> 
            </div>
            <!-- .comment-metadata --> 
           </footer>
           <!-- .comment-meta --> 
           <div class="comment-content"> 
            <p>What is “bacon” in above code? can anyone tell me?</p> 
           </div>
           <!-- .comment-content --> 
           <div class="reply">
            <a rel="nofollow" class="comment-reply-link" href="http://codetheory.in/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/?replytocom=1913984#respond" onclick="return addComment.moveForm( &quot;div-comment-1913984&quot;, &quot;1913984&quot;, &quot;respond&quot;, &quot;1058&quot; )" aria-label="Reply to Raghudontha">Reply</a>
           </div> 
          </article>
          <!-- .comment-body --> </li>
         <!-- #comment-## --> 
        </ol>
        <!-- .comment-list --> 
        <div id="respond" class="comment-respond"> 
         <h2 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/using-the-node-js-bcrypt-module-to-hash-and-safely-store-passwords/#respond" style="display:none;">Cancel reply</a></small></h2> 
         <form action="http://codetheory.in/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate> 
          <p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p>
          <p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required></textarea></p>
          <p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required="true" required></p> 
          <p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required="true" required></p> 
          <p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200"></p> 
          <div class="si_captcha_small">
           <img id="si_image_com" src="http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/securimage_show.php?si_sm_captcha=1&amp;si_form_id=com&amp;prefix=FPFh0uRunzraiMBh" width="132" height="45" alt="CAPTCHA" title="CAPTCHA"> 
           <input id="si_code_com" name="si_code_com" type="hidden" value="FPFh0uRunzraiMBh"> 
           <div id="si_refresh_com"> 
            <a href="#" rel="nofollow" title="Refresh" onclick="si_captcha_refresh('si_image_com','com','/wp-content/plugins/si-captcha-for-wordpress/captcha','http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/securimage_show.php?si_sm_captcha=1&amp;si_form_id=com&amp;prefix='); return false;"> <img class="si_captcha_refresh" src="http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/images/refresh.png" width="22" height="20" alt="Refresh" onclick="this.blur();"></a> 
           </div> 
          </div> 
          <p id="si_captcha_code"> <input id="si_captcha_code" name="si_captcha_code" type="text"> <label for="si_captcha_code">CAPTCHA Code</label><span class="required"> *</span> </p> 
          <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="1058" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"> </p>
          <p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="3c8ef4ceac"></p>
          <p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="176"></p> 
         </form> 
        </div>
        <!-- #respond --> 
       </div>
       <!-- .comments-area --> 
       <nav class="navigation post-navigation" role="navigation"> 
        <h2 class="screen-reader-text">Post navigation</h2> 
        <div class="nav-links">
         <div class="nav-previous">
          <a href="http://codetheory.in/strategies-for-select-dropdown-lists-placeholder/" rel="prev"><span class="meta-nav" aria-hidden="true">Previous</span> <span class="screen-reader-text">Previous post:</span> <span class="post-title">Strategies for Select Dropdown Lists Placeholder</span></a>
         </div>
         <div class="nav-next">
          <a href="http://codetheory.in/using-underscore-string-for-string-manipulations-in-javascript/" rel="next"><span class="meta-nav" aria-hidden="true">Next</span> <span class="screen-reader-text">Next post:</span> <span class="post-title">Using Underscore.string for String Manipulations in JavaScript</span></a>
         </div>
        </div> 
       </nav> 
      </main>
      <!-- .site-main --> 
     </div>
     <!-- .content-area --> 
     <aside id="secondary" class="sidebar widget-area" role="complementary"> 
      <section id="text-6" class="widget widget_text"> 
       <div class="textwidget">
        <div id="waldo-tag-203"></div>
       </div> 
      </section>
      <section id="text-7" class="widget widget_text"> 
       <div class="textwidget">
        <div style="padding: 6px 0px;"> 
         <!--Carambola Script --> 
         <img height="0" width="0" alt="" src="//pixel.watch/35bq" style="display:block;"> 
         <script data-cfasync="false" class="carambola_InContent" type="text/javascript" cbola_wid="0">  
(function (i,d,s,o,m,r,c,l,w,q,y,h,g) {  
var e=d.getElementById(r);if(e===null){  
var t = d.createElement(o); t.src = g; t.id = r; t.setAttribute(m, s);t.async = 1;var n=d.getElementsByTagName(o)[0];n.parentNode.insertBefore(t, n); 
var dt=new Date().getTime();  
try{i[l][w+y](h,i[l][q+y](h)+'&'+dt);}catch(er){i[h]=dt;}  
} else if(typeof i!=='undefined'){i++}  
else{i=1;}  
})(window, document, 'InContent', 'script', 'mediaType', 'carambola_proxy','Cbola_IC','localStorage','set','get','Item','cbolaDt','//route.carambo.la/inimage/getlayer?pid=thgh69&did=112348&wid=0')  
</script> 
        </div>
       </div> 
      </section> 
      <section id="recent-posts-2" class="widget widget_recent_entries"> 
       <h2 class="widget-title">Recent Posts</h2> 
       <ul> 
        <li> <a href="http://codetheory.in/my-experience-with-newor-media/">My Experience With Newor Media</a> </li> 
        <li> <a href="http://codetheory.in/top-10-code-snippets-with-css-animations/">Top 10 Code Snippets With CSS Animations</a> </li> 
        <li> <a href="http://codetheory.in/how-to-create-social-media-share-buttons/">How to Create Social Media Share Buttons</a> </li> 
       </ul> 
      </section> 
      <section id="text-2" class="widget widget_text"> 
       <div class="textwidget"> 
        <script data-cfasync="false" type="text/javascript">(function(s,o,l,v,e,d){if(s[o]==null&&s[l+e]){s[o]="loading";s[l+e](d,l=function(){s[o]="complete";s[v+e](d,l,!1)},!1)}})(document,"readyState","add","remove","EventListener","DOMContentLoaded");(function(){var s=document.createElement("script");s.type="text/javascript";s.async=true;s.src="//cdn.engine.4dsply.com/Scripts/infinity.js.aspx?guid=98da5c7c-f607-4b42-b873-40bb140ef27d";s.id="infinity";s.setAttribute("data-guid","98da5c7c-f607-4b42-b873-40bb140ef27d");s.setAttribute("data-version","async");var e=document.getElementsByTagName('script')[0];e.parentNode.insertBefore(s,e)})();</script>
       </div> 
      </section>
      <section id="search-2" class="widget widget_search"> 
       <form role="search" method="get" class="search-form" action="http://codetheory.in/"> 
        <label> <span class="screen-reader-text">Search for:</span> <input type="search" class="search-field" placeholder="Search …" value="" name="s" title="Search for:"> </label> 
        <button type="submit" class="search-submit"><span class="screen-reader-text">Search</span></button> 
       </form> 
      </section>
      <section id="nav_menu-2" class="widget widget_nav_menu">
       <h2 class="widget-title">Subscribe</h2>
       <div class="menu-subscribe-container">
        <ul id="menu-subscribe" class="menu">
         <li id="menu-item-161" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-161"><a href="http://twitter.com/_rishabhp">Follow on Twitter</a></li> 
         <li id="menu-item-162" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-162"><a href="http://feeds.feedburner.com/codetheory">RSS Feeds</a></li> 
         <li id="menu-item-683" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-683"><a href="http://feedburner.google.com/fb/a/mailverify?uri=CodeTheory&amp;loc=en_US">Subscribe by Email</a></li> 
        </ul>
       </div>
      </section>
      <section id="text-5" class="widget widget_text"> 
       <div class="textwidget">
        <div id="waldo-tag-204"></div>
       </div> 
      </section> 
      <section class="widget"> 
       <h2 class="widget-title">Poll</h2> 
       <style>.wp-polls .Buttons { background-color: #000; }</style> 
       <div id="polls-2" class="wp-polls"> 
        <form id="polls_form_2" class="wp-polls-form" action="/index.php" method="post"> 
         <p style="display: none;"><input type="hidden" id="poll_2_nonce" name="wp-polls-nonce" value="8ae8161869"></p> 
         <p style="display: none;"><input type="hidden" name="poll_id" value="2"></p> 
         <p style="display: none;"><input type="hidden" id="poll_multiple_ans_2" name="poll_multiple_ans_2" value="1"></p> 
         <p style="text-align: center;"><strong>Which JavaScript framework do you prefer/use ?</strong></p>
         <div id="polls-2-ans" class="wp-polls-ans">
          <ul class="wp-polls-ul"> 
           <li><input type="checkbox" id="poll-answer-6" name="poll_2" value="6"> <label for="poll-answer-6">Angular</label></li> 
           <li><input type="checkbox" id="poll-answer-7" name="poll_2" value="7"> <label for="poll-answer-7">Ember</label></li> 
           <li><input type="checkbox" id="poll-answer-8" name="poll_2" value="8"> <label for="poll-answer-8">Backbone</label></li> 
           <li><input type="checkbox" id="poll-answer-9" name="poll_2" value="9"> <label for="poll-answer-9">Knockout</label></li> 
           <li><input type="checkbox" id="poll-answer-10" name="poll_2" value="10"> <label for="poll-answer-10">React</label></li> 
           <li><input type="checkbox" id="poll-answer-11" name="poll_2" value="11"> <label for="poll-answer-11">Vue</label></li> 
           <li><input type="checkbox" id="poll-answer-12" name="poll_2" value="12"> <label for="poll-answer-12">Polymer</label></li> 
           <li><input type="checkbox" id="poll-answer-13" name="poll_2" value="13"> <label for="poll-answer-13">Meteor</label></li> 
           <li><input type="checkbox" id="poll-answer-14" name="poll_2" value="14"> <label for="poll-answer-14">Aurelia</label></li> 
          </ul>
          <p style="text-align: center;"><input type="button" name="vote" value="   Vote   " class="Buttons" onclick="poll_vote(2);"></p>
          <p style="text-align: center;"><a href="#ViewPollResults" onclick="poll_result(2); return false;" title="View Results Of This Poll">View Results</a></p>
         </div> 
        </form> 
       </div> 
       <div id="polls-2-loading" class="wp-polls-loading">
        <img src="http://codetheory.in/wp-content/plugins/wp-polls/images/loading.gif" width="16" height="16" alt="Loading ..." title="Loading ..." class="wp-polls-image">&nbsp;Loading ...
       </div> 
      </section> 
      <section class="widget"> 
       <h2 class="widget-title">Advertisement</h2> 
       <a href="http://treehouse.7eer.net/c/245523/228915/3944"><img src="http://i.imgur.com/7oO1ze7.gif" alt=""></a> 
      </section> 
     </aside>
     <!-- .sidebar .widget-area --> 
    </div>
    <!-- .site-content --> 
    <footer id="colophon" class="site-footer" role="contentinfo"> 
     <nav class="main-navigation" role="navigation" aria-label="Footer Primary Menu"> 
      <div class="menu-main-navigation-container">
       <ul id="menu-main-navigation-1" class="primary-menu">
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-2321"><a href="http://codetheory.in/">Home</a></li> 
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2322"><a href="http://codetheory.in/about/">About</a></li> 
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2323"><a href="http://codetheory.in/contact/">Contact</a></li> 
       </ul>
      </div> 
     </nav>
     <!-- .main-navigation --> 
     <div class="site-info"> 
      <span class="site-title"><a href="http://codetheory.in/" rel="home">Code Theory</a></span> 
      <span class="site-title"><a href="https://www.linode.com/?r=d63edd6169dc10a3b37773da43f1d2337285b1d5">Hosted on Linode</a></span> 
      <span class="site-title"><a href="http://codetheory.in/privacy-policy">Privacy</a></span> 
      <a href="https://wordpress.org/">Proudly powered by WordPress</a> 
     </div>
     <!-- .site-info --> 
    </footer>
    <!-- .site-footer --> 
   </div>
   <!-- .site-inner --> 
  </div>
  <!-- .site --> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/akismet/_inc/form.js?ver=3.3"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushBash.js?ver=3.0.9b"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJScript.js?ver=3.0.9b"></script> 
  <script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://codetheory.in/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/contact-form-7/includes/js/jquery.form.min.js?ver=3.51.0-2014.06.20"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var _wpcf7 = {"loaderUrl":"http:\/\/codetheory.in\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","recaptchaEmpty":"Please verify that you are not a robot.","sending":"Sending ...","cached":"1"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/contact-form-7/includes/js/scripts.js?ver=4.4.2"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var pollsL10n = {"ajax_url":"http:\/\/codetheory.in\/wp-admin\/admin-ajax.php","text_wait":"Your last request is still being processed. Please wait a while ...","text_valid":"Please choose a valid poll answer.","text_multiple":"Maximum number of choices allowed: ","show_loading":"1","show_fading":"1"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/wp-polls/polls-js.js?ver=2.73.3"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/themes/twentysixteen/js/skip-link-focus-fix.js?ver=20151112"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-includes/js/comment-reply.min.js?ver=4.5.3"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var screenReaderText = {"expand":"expand child menu","collapse":"collapse child menu"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/themes/twentysixteen/js/functions.js?ver=20151204"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-includes/js/wp-embed.min.js?ver=4.5.3"></script> 
  <script type="text/javascript" src="http://codetheory.in/wp-content/plugins/si-captcha-for-wordpress/captcha/si_captcha.js?ver=1.0"></script> 
  <script async src="http://cssdeck.com/assets/js/embed.js"></script> 
  <script async src="//assets.codepen.io/assets/embed/ei.js"></script> 
  <!--<script>
function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}
</script>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-35555370-1', 'auto');

  //if (localStorage.getItem('UserID')) {
  //  ga('set', 'userId', localStorage.getItem('UserID')); // Set the user ID using signed-in user_id.
  //}
  //else {
  //  localStorage.setItem('UserID', guid());
  //  ga('set', 'userId', localStorage.getItem('UserID')); // Set the user ID using signed-in user_id.
  //}

  ga('send', 'pageview');

</script>--> 
  <script>
(function(b,o,u,n,c,e){b.__ba = (b.__ba || {});b.__ba.siteId = 1;b.__ba.pageLoadStart = Date.now();c=o.createElement(u);e=o.getElementsByTagName(u)[0];c.async=1;c.src=n + b.__ba.siteId + "/ba.js?t="+Math.floor(Date.now() / (3600 * 1000));e.parentNode.insertBefore(c,e);})(window,document,"script","//static.blipmetrics.com/");
</script>   
  <!-- Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

Page Caching using disk: enhanced
Database Caching 41/64 queries in 0.016 seconds using disk

 Served from: codetheory.in @ 2017-08-02 20:08:48 by W3 Total Cache -->
 </body>
</html>