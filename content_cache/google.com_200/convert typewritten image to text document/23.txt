<!doctype html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
 <!--<![endif]-->
 <head> 
  <meta charset="utf-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <title>Introduction — ocrmypdf 5.3.2.post7+g6af7d61 documentation</title> 
  <link rel="stylesheet" href="https://media.readthedocs.org/css/sphinx_rtd_theme.css" type="text/css"> 
  <link rel="index" title="Index" href="genindex.html"> 
  <link rel="search" title="Search" href="search.html"> 
  <link rel="top" title="ocrmypdf 5.3.2.post7+g6af7d61 documentation" href="index.html"> 
  <link rel="next" title="Release notes" href="release_notes.html"> 
  <link rel="prev" title="OCRmyPDF documentation" href="index.html"> 
  <script src="_static/js/modernizr.min.js"></script> 
  <!-- RTD Extra Head --> 
  <!-- 
Always link to the latest version, as canonical.
http://docs.readthedocs.org/en/latest/canonical.html
--> 
  <link rel="canonical" href="http://ocrmypdf.readthedocs.io/en/latest/introduction.html"> 
  <link rel="stylesheet" href="https://media.readthedocs.org/css/readthedocs-doc-embed.css" type="text/css"> 
  <script type="text/javascript" src="_static/readthedocs-data.js"></script> 
  <!-- Add page-specific data, which must exist in the page js, not global --> 
  <script type="text/javascript">
READTHEDOCS_DATA['page'] = 'introduction' 		
READTHEDOCS_DATA['source_suffix'] = '.rst'
</script> 
  <script type="text/javascript" src="_static/readthedocs-dynamic-include.js"></script> 
  <!-- end RTD <extrahead> -->
 </head> 
 <body class="wy-body-for-nav" role="document"> 
  <div class="wy-grid-for-nav"> 
   <nav data-toggle="wy-nav-shift" class="wy-nav-side"> 
    <div class="wy-side-scroll"> 
     <div class="wy-side-nav-search"> 
      <a href="index.html" class="icon icon-home"> ocrmypdf </a> 
      <div role="search"> 
       <form id="rtd-search-form" class="wy-form" action="search.html" method="get"> 
        <input type="text" name="q" placeholder="Search docs"> 
        <input type="hidden" name="check_keywords" value="yes"> 
        <input type="hidden" name="area" value="default"> 
       </form> 
      </div> 
     </div> 
     <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation"> 
      <ul class="current"> 
       <li class="toctree-l1 current"><a class="current reference internal" href="#">Introduction</a>
        <ul> 
         <li class="toctree-l2"><a class="reference internal" href="#about-ocr">About OCR</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#about-pdfs">About PDFs</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#about-pdf-a">About PDF/A</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#what-ocrmypdf-does">What OCRmyPDF does</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#why-you-shouldn-t-do-this-manually">Why you shouldn’t do this manually</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#limitations">Limitations</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#similar-programs">Similar programs</a></li> 
        </ul> </li> 
       <li class="toctree-l1"><a class="reference internal" href="release_notes.html">Release notes</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="installation.html">Installation</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="languages.html">Installing additional language packs</a></li> 
      </ul> 
      <p class="caption"><span class="caption-text">Usage</span></p> 
      <ul> 
       <li class="toctree-l1"><a class="reference internal" href="cookbook.html">Cookbook</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="advanced.html">Advanced features</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="batch.html">Batch processing</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="security.html">PDF security issues</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="errors.html">Common error messages</a></li> 
      </ul> 
     </div> 
    </div> 
   </nav> 
   <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap"> 
    <nav class="wy-nav-top" role="navigation" aria-label="top navigation"> 
     <i data-toggle="wy-nav-top" class="fa fa-bars"></i> 
     <a href="index.html">ocrmypdf</a> 
    </nav> 
    <div class="wy-nav-content"> 
     <div class="rst-content"> 
      <div role="navigation" aria-label="breadcrumbs navigation"> 
       <ul class="wy-breadcrumbs"> 
        <li><a href="index.html">Docs</a> »</li> 
        <li>Introduction</li> 
        <li class="wy-breadcrumbs-aside"> <a href="https://github.com/jbarlow83/OCRmyPDF/blob/master/docs/introduction.rst" class="fa fa-github"> Edit on GitHub</a> </li> 
       </ul> 
       <hr> 
      </div> 
      <div role="main" class="document" itemscope itemtype="http://schema.org/Article"> 
       <div itemprop="articleBody"> 
        <div class="section" id="introduction"> 
         <h1>Introduction<a class="headerlink" href="#introduction" title="Permalink to this headline">¶</a></h1> 
         <p>OCRmyPDF is a Python 3 package that adds OCR layers to PDFs.</p> 
         <div class="section" id="about-ocr"> 
          <h2>About OCR<a class="headerlink" href="#about-ocr" title="Permalink to this headline">¶</a></h2> 
          <p><a class="reference external" href="https://en.wikipedia.org/wiki/Optical_character_recognition">Optical character recognition</a> is technology that converts images of typed or handwritten text, such as in a scanned document, to computer text that can be searched and copied.</p> 
          <p>OCRmyPDF uses <a class="reference external" href="https://github.com/tesseract-ocr/tesseract">Tesseract</a>, the best available open source OCR engine, to perform OCR.</p> 
         </div> 
         <div class="section" id="about-pdfs"> 
          <span id="raster-vector"></span>
          <h2>About PDFs<a class="headerlink" href="#about-pdfs" title="Permalink to this headline">¶</a></h2> 
          <p>PDFs are page description files that attempts to preserve a layout exactly. They can contain <a class="reference external" href="http://vector-conversions.com/vectorizing/raster_vs_vector.html">vector graphic files</a> that can contain raster objects such as scanned images. Because PDFs can contain multiple pages (unlike many image formats) and can contain fonts and text, it is a good formats for exchanging scanned documents.</p> 
          <img alt="_images/bitmap_vs_svg.svg" src="_images/bitmap_vs_svg.svg">
          <p>A PDF page might contain multiple images, even if it only appears to have one image. Some scanners or scanning software will segment pages into monochromatic text and color regions for example, to improve the compression ratio and appearance of the page.</p> 
          <p>Rasterizing a PDF is the process of generating an image suitable for display or analyzing with an OCR engine. OCR engines like Tesseract work with images, not vector objects.</p> 
         </div> 
         <div class="section" id="about-pdf-a"> 
          <h2>About PDF/A<a class="headerlink" href="#about-pdf-a" title="Permalink to this headline">¶</a></h2> 
          <p><a class="reference external" href="https://en.wikipedia.org/wiki/PDF/A">PDF/A</a> is an ISO-standardized subset of the full PDF specification that is designed for archiving (the ‘A’ stands for Archive). PDF/A differs from PDF primarily by omitting features that would make it difficult to read the file in the future, such as embedded Javascript, video, audio and references to external fonts. All fonts and resources needed to interpret the PDF must be contained within it. Because PDF/A disables Javascript and other types of embedded content, it is probably more secure.</p> 
          <p>There are various conformance levels and versions, such as “PDF/A-2b”.</p> 
          <p>Generally speaking, the best format for scanned documents is PDF/A. Some governments and jurisdictions, US Courts in particular, <a class="reference external" href="https://pdfblog.com/2012/02/13/what-is-pdfa/">mandate the use of PDF/A</a> for scanned documents.</p> 
          <p>Since most people who scan documents are interested in reading them indefinitely into the future, OCRmyPDF generates PDF/A-2b by default.</p> 
          <p>PDF/A has a few drawbacks. Some PDF viewers include an alert that the file is a PDF/A, which may confuse some users. It also tends to produce larger files than PDF, because it embeds certain resources even if they are commonly available. PDF/A files can be digitally signed, but may not be encrypted, to ensure they can be read in the future. Fortunately, converting from PDF/A to a regular PDF is trivial, and any PDF viewer can view PDF/A.</p> 
         </div> 
         <div class="section" id="what-ocrmypdf-does"> 
          <h2>What OCRmyPDF does<a class="headerlink" href="#what-ocrmypdf-does" title="Permalink to this headline">¶</a></h2> 
          <p>OCRmyPDF analyzes each page of a PDF to determine the colorspace and resolution (DPI) needed to capture all of the information on that page without losing content. It uses <a class="reference external" href="http://ghostscript.com/">Ghostscript</a> to rasterize the page, and then performs on OCR on the rasterized image. It is not enough to simply extract the images from each page and run OCR on them individually. Of course one could use Ghostscript or another PDF rasterizer and then pass the image to Tesseract. OCRmyPDF automates this process and produces a minimally changed output file that contains the same information, colorspace and resolution.</p> 
          <p>The Tesseract OCR engine can output ‘hOCR’ files, which are XML files that contain a description of the text it found on the page. OCRmyPDF will render a new PDF that contains only the hidden text layer, and merge this with the original page.</p> 
          <p>Alternately, OCRmyPDF can use the Tesseract OCR engine to directly output PDFs for each page, then merge them.</p> 
          <p>By default, OCRmyPDF will convert the file to a PDF/A. This behavior can be disabled with the <code class="docutils literal"><span class="pre">--output-type</span> <span class="pre">pdf</span></code> argument.</p> 
          <p>Depending on the settings selected, OCRmyPDF may “graft” the OCR layer into the existing PDF, or reconstruct a visually equivalent new PDF.</p> 
         </div> 
         <div class="section" id="why-you-shouldn-t-do-this-manually"> 
          <h2>Why you shouldn’t do this manually<a class="headerlink" href="#why-you-shouldn-t-do-this-manually" title="Permalink to this headline">¶</a></h2> 
          <p>A PDF is similar to an HTML file, in that it contains document structure along with images. Sometimes a PDF does nothing more than present a full page image, but often there is additional content that would be lost.</p> 
          <p>A manual process could work like either of these:</p> 
          <ol class="arabic simple"> 
           <li>Rasterize each page as an image, OCR the images, and combine the output into a PDF. This preserves the layout of each page, but resamples all images (possibly losing quality, increasing file size, introducing compression artifacts, etc.).</li> 
           <li>Extract each image, OCR, and combine the output into a PDF. This loses the context in which images are used in the PDF, meaning that cropping, rotation and scaling of pages may be lost. Some scanned PDFs use multiple images segmented into black and white, grayscale and color regions, with stencil masks to prevent overlap, as this can enhance the appearance of a file while reducing file size. Clearly, reassembling these images will be easy. This also loses and text or vector art on any pages in a PDF with both scanned and pure digital content.</li> 
          </ol> 
          <p>In the case of a PDF that is nothing other than a container of images (no rotation, scaling, cropping, one image per page), the second approach can be lossless.</p> 
          <p>OCRmyPDF uses several strategies depending on input options and the input PDF itself, but generally speaking it rasterizes a page for OCR and then grafts the OCR back onto the original. As such it can handle complex PDFs and still preserve their contents as much as possible.</p> 
         </div> 
         <div class="section" id="limitations"> 
          <h2>Limitations<a class="headerlink" href="#limitations" title="Permalink to this headline">¶</a></h2> 
          <p>OCRmyPDF is limited by the Tesseract OCR engine. As such it experiences these limitations, as do any other programs that rely on Tesseract:</p> 
          <ul class="simple"> 
           <li>The OCR is not as accurate as commercial solutions such as Abbyy.</li> 
           <li>It is not capable of recognizing handwriting.</li> 
           <li>It may find gibberish and report this as OCR output.</li> 
           <li>If a document contains languages outside of those given in the <code class="docutils literal"><span class="pre">-l</span> <span class="pre">LANG</span></code> arguments, results may be poor.</li> 
           <li>It is not always good at analyzing the natural reading order of documents. For example, it may fail to recognize that a document contains two columns and join text across the columns.</li> 
           <li>Poor quality scans may produce poor quality OCR. Garbage in, garbage out.</li> 
           <li>PDFs that use transparent layers are not currently checked in the test suite, so they may not work correctly.</li> 
          </ul> 
          <p>OCRmyPDF is also limited by the PDF specification:</p> 
          <ul class="simple"> 
           <li>PDF encodes the position of text glyphs but does not encode document structure. There is no markup that divides a document in sections, paragraphs, sentences, or even words (since blank spaces are not represented). As such all elements of document structure including the spaces between words must be derived heuristically. Some PDF viewers do a better job of this than others.</li> 
          </ul> 
          <p>Ghostscript also imposes some limitations:</p> 
          <ul class="simple"> 
           <li>PDFs containing JBIG2-encoded content will be converted to CCITT Group4 encoding, which has lower compression ratios, if Ghostscript PDF/A is enabled.</li> 
           <li>PDFs containing JPEG 2000-encoded content will be converted to JPEG encoding, which may introduce compression artifacts, if Ghostscript PDF/A is enabled.</li> 
           <li>Ghostscript may transcode grayscale and color images, either lossy to lossless or lossless to lossy, based on an internal algorithm. This behavior can be suppressed by setting <code class="docutils literal"><span class="pre">--pdfa-image-compression</span></code> to <code class="docutils literal"><span class="pre">jpeg</span></code> or <code class="docutils literal"><span class="pre">lossless</span></code> to set all images to one type or the other. Ghostscript has no option to maintain the input image’s format.</li> 
          </ul> 
          <p>OCRmyPDF is currently not designed to be used as a Python API; it is designed to be run as a command line tool. <code class="docutils literal"><span class="pre">import</span> <span class="pre">ocrmypf</span></code> currently attempts to process the command line on <code class="docutils literal"><span class="pre">sys.argv</span></code> at import time so it has side effects that will interfere with its use as a package. The API it presents should not be considered stable.</p> 
         </div> 
         <div class="section" id="similar-programs"> 
          <h2>Similar programs<a class="headerlink" href="#similar-programs" title="Permalink to this headline">¶</a></h2> 
          <p>To the author’s knowledge, OCRmyPDF is the most feature-rich and thoroughly tested command line OCR PDF conversion tool. If it does not meet your needs, contributions and suggestions are welcome. If not, consider one of these similar open source programs:</p> 
          <ul class="simple"> 
           <li>pdf2pdfocr</li> 
           <li>pdfsandwich</li> 
           <li>pypdfocr</li> 
           <li>pdfbeads</li> 
          </ul> 
          <p>If you are looking for a micro web-frontend for OCRmyPDF, consider the third-party <a class="reference external" href="https://github.com/sseemayer/OCRmyPDF-web">OCRmyPDF-web</a>. Bear in mind that OCRmyPDF is not designed to be secure against malware-bearing PDFs (see <a href="#id1"><span class="problematic" id="id2">`Using OCRmyPDF online`_</span></a>).</p> 
         </div> 
        </div> 
       </div> 
       <div class="articleComments"> 
       </div> 
      </div> 
      <footer> 
       <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation"> 
        <a href="release_notes.html" class="btn btn-neutral float-right" title="Release notes" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a> 
        <a href="index.html" class="btn btn-neutral" title="OCRmyPDF documentation" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a> 
       </div> 
       <hr> 
       <div role="contentinfo"> 
        <p> © Copyright 2017, James R. Barlow. <span class="commit"> Revision <code>6af7d61e</code>. </span> </p> 
       </div> Built with 
       <a href="http://sphinx-doc.org/">Sphinx</a> using a 
       <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by 
       <a href="https://readthedocs.org">Read the Docs</a>. 
      </footer> 
     </div> 
    </div> 
   </section> 
  </div> 
  <div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions"> 
   <span class="rst-current-version" data-toggle="rst-current-version"> <span class="fa fa-book"> Read the Docs</span> v: latest <span class="fa fa-caret-down"></span> </span> 
   <div class="rst-other-versions"> 
    <dl> 
     <dt>
      Versions
     </dt> 
     <dd>
      <a href="/en/latest/">latest</a>
     </dd> 
     <dd>
      <a href="/en/stable/">stable</a>
     </dd> 
    </dl> 
    <dl> 
     <dt>
      Downloads
     </dt> 
     <dd>
      <a href="//readthedocs.org/projects/ocrmypdf/downloads/pdf/latest/">pdf</a>
     </dd> 
     <dd>
      <a href="//readthedocs.org/projects/ocrmypdf/downloads/htmlzip/latest/">htmlzip</a>
     </dd> 
     <dd>
      <a href="//readthedocs.org/projects/ocrmypdf/downloads/epub/latest/">epub</a>
     </dd> 
    </dl> 
    <dl> 
     <dt>
      On Read the Docs
     </dt> 
     <dd> 
      <a href="//readthedocs.org/projects/ocrmypdf/?fromdocs=ocrmypdf">Project Home</a> 
     </dd> 
     <dd> 
      <a href="//readthedocs.org/builds/ocrmypdf/?fromdocs=ocrmypdf">Builds</a> 
     </dd> 
    </dl> 
    <hr> Free document hosting provided by 
    <a href="http://www.readthedocs.org">Read the Docs</a>. 
   </div> 
  </div> 
  <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'./',
            VERSION:'5.3.2.post7+g6af7d61',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true,
            SOURCELINK_SUFFIX: '.txt'
        };
    </script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-2.0.3.min.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-migrate-1.2.1.min.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/underscore.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/doctools.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/readthedocs-doc-embed.js"></script> 
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>  
 </body>
</html>