<!--[if lt IE 7]>  <html class="ie ie6 lte9 lte8 lte7"> <![endif]-->
<!--[if IE 7]>     <html class="ie ie7 lte9 lte8 lte7"> <![endif]-->
<!--[if IE 8]>     <html class="ie ie8 lte9 lte8"> <![endif]-->
<!--[if IE 9]>     <html class="ie ie9 lte9"> <![endif]-->
<!--[if gt IE 9]>  <html> <![endif]-->
<!--[if !IE]><!-->
<html lang="en">
 <!--<![endif]-->
 <head> 
  <!--Header partial defaults--> 
  <meta charset="UTF-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
  <meta name="viewport" content="width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"> 
  <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png"> 
  <link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png"> 
  <link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png"> 
  <link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png"> 
  <link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.png"> 
  <link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png"> 
  <link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.png"> 
  <link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.png"> 
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png"> 
  <link rel="icon" type="image/png" sizes="192x192" href="/android-icon-192x192.png"> 
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"> 
  <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png"> 
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"> 
  <link rel="manifest" href="/manifest.json"> 
  <meta name="msapplication-TileColor" content="#ffffff"> 
  <meta name="msapplication-TileImage" content="/ms-icon-144x144.png"> 
  <meta name="theme-color" content="#ffffff"> 
  <meta name="description" content="CallFire API Sound Library"> 
  <title>Sound Library | CallFire Developers</title> 
  <!-- Custom styles for this template --> 
  <link rel="dns-prefetch" href="//fonts.googleapis.com/"> 
  <link rel="dns-prefetch" href="//ajax.googleapis.com"> 
  <link rel="dns-prefetch" href="//code.jquery.com/"> 
  <link rel="dns-prefetch" href="//cdn.slaask.com/"> 
  <link rel="dns-prefetch" href="//munchkin.marketo.net/"> 
  <link href="assets/css/theme.css" rel="stylesheet"> 
  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries --> 
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// --> 
  <!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
  <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
<![endif]--> 
  <script src="https://code.jquery.com/jquery.js"></script> 
  <script src="https://cdn.slaask.com/chat.js" defer></script> 
  <script type="text/javascript">
    WebFontConfig = {
        google: { families: [ 'Source+Code+Pro:400,600,700:latin', 'Work+Sans:500,300:latin', 'Open+Sans:400,600:latin' ] }
    };
    (function() {
        var wf = document.createElement('script');
        wf.src = 'https://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';
        wf.type = 'text/javascript';
        wf.async = 'true';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(wf, s);
    })(); </script> 
  <script defer>

    document.addEventListener("DOMContentLoaded", function(event) {
        _slaask.init('a5a8504fdda2749b3388a4f31e2a596a');
    });

</script> 
  <link href="assets/css/foundation.css" rel="stylesheet"> 
 </head> 
 <body class="learn"> 
  <!-- Google Tag Manager --> 
  <noscript>
   <iframe src="//www.googletagmanager.com/ns.html?id=GTM-4F87" height="0" width="0" style="display:none;visibility:hidden"></iframe>
  </noscript> 
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-4F87');</script> 
  <!-- End Google Tag Manager --> 
  <aside class="cf-sidebar"> 
   <div class="sidebar-header"> 
    <a href="/" title="CallFire Developers" class="cf-logo">Developers</a> 
   </div> 
   <nav class="sidebar-navigation"> 
    <ul> 
     <li class="auth"> <a title="Login" href="https://www.callfire.com/ui/login">login</a> </li> 
     <li class="auth"> <a title="Register for CallFire" href="https://www.callfire.com/ui/register">sign up</a> </li> 
     <li class="active"> 
      <div class="nav-title"> 
       <a href="learn.html" title="Learn">Learn</a> 
      </div> 
      <ul class="sub-nav-small"> 
       <li class="category-list "> <a id="getting started" class="doc-category " href="quick-start-guide.html">Getting Started</a> 
        <ul class="doc-item-nav"> 
         <li><a title="Quick Start Guide" class="quick-start-guide   menu-link " href="quick-start-guide.html">Quick Start Guide</a></li> 
        </ul> </li> 
       <li class="category-list open"> <a id="api 2.0" class="doc-category active" href="short-codes.html">API 2.0</a> 
        <ul class="doc-item-nav"> 
         <li><a title="SMS/MMS" class="sms-mms   menu-link " href="sms_mms.html">SMS/MMS</a></li> 
         <li><a title="Text and Voice Broadcast Messaging" class="broadcast-messaging   menu-link " href="broadcast_messaging.html">Text and Voice Broadcast Messaging</a></li> 
         <li><a title="Webhooks Guide" class="webhooks-guide   menu-link " href="webhooks-guide.html">Webhooks Guide</a></li> 
         <li><a title="Contacts Guide" class="contacts-guide   menu-link " href="contacts-guide.html">Contacts Guide</a></li> 
         <li><a title="Order Numbers &amp; Keywords" class="order-numbers-guide   menu-link " href="order-numbers-guide.html">Order Numbers &amp; Keywords</a></li> 
         <li><a title="Sound Library" class="sound-library-guide  active menu-link " href="sound-library-guide.html">Sound Library</a></li> 
         <li><a title="Action States and Results" class="results-responses-errors   menu-link " href="results-responses-errors.html">Action States and Results</a></li> 
         <li><a title="Short codes" class="short-codes   menu-link " href="short-codes.html">Short codes</a></li> 
        </ul> </li> 
       <li class="category-list "> <a id="api use cases" class="doc-category " href="usecase-sms-chat.html">API Use Cases</a> 
        <ul class="doc-item-nav"> 
         <li><a title="Non-Profit Agency Soliciting Donations" class="usecase-nonprofit-agency   menu-link " href="usecase-non-profit-agency.html">Non-Profit Agency Soliciting Donations</a></li> 
         <li><a title="Medical Center Sending Reminders and Notifications" class="usecase-pharmacy-reminders   menu-link " href="usecase-medical-center.html">Medical Center Sending Reminders and Notifications</a></li> 
         <li><a title="SMS Chat" class="usecase-sms-chat   menu-link " href="usecase-sms-chat.html">SMS Chat</a></li> 
         <li><a title="Web Based Business Uses Two-Factor Authentication" class="usecase-2factor-sms-auth   menu-link " href="usecase-2factor-sms-auth.html">Web Based Business Uses Two-Factor Authentication</a></li> 
         <li><a title="Political Campaign Conducting a Poll" class="usecase-political-campaign   menu-link " href="usecase-political-poll.html">Political Campaign Conducting a Poll</a></li> 
         <li><a title="Advertising Agency Tracking the Success of Advertisements" class="usecase-advertising-agency   menu-link " href="usecase-advertising-agency.html">Advertising Agency Tracking the Success of Advertisements</a></li> 
        </ul> </li> 
       <li class="category-list "> <a id="callfire xml" class="doc-category " href="callfire_xml_wait.html">CallFire XML</a> 
        <ul class="doc-item-nav"> 
         <li><a title="Work with CallFire XML" class="callfire_xml_introduction   menu-link " href="callfire_xml_introduction.html">Work with CallFire XML</a></li> 
         <li><a title="View CallFire System Variables" class="callfire_xml_system_variables   menu-link " href="callfire_xml_system_variables.html">View CallFire System Variables</a></li> 
         <li><a title="AMD" class="callfire_xml_amd   menu-link " href="callfire_xml_amd.html">AMD</a></li> 
         <li><a title="Analytics" class="callfire_xml_analytics   menu-link " href="callfire_xml_analytics.html">Analytics</a></li> 
         <li><a title="Catch" class="callfire_xml_catch   menu-link " href="callfire_xml_catch.html">Catch</a></li> 
         <li><a title="Dialplan" class="callfire_xml_dialplan   menu-link " href="callfire_xml_dialplan.html">Dialplan</a></li> 
         <li><a title="DNC" class="callfire_xml_dnc   menu-link " href="callfire_xml_dnc.html">DNC</a></li> 
         <li><a title="DTMF" class="callfire_xml_dtmf   menu-link " href="callfire_xml_dtmf.html">DTMF</a></li> 
         <li><a title="Else" class="callfire_xml_else   menu-link " href="callfire_xml_else.html">Else</a></li> 
         <li><a title="Get" class="callfire_xml_get   menu-link " href="callfire_xml_get.html">Get</a></li> 
         <li><a title="Goto" class="callfire_xml_goto   menu-link " href="callfire_xml_goto.html">Goto</a></li> 
         <li><a title="GotoXML" class="callfire_xml_gotoxml   menu-link " href="callfire_xml_gotoxml.html">GotoXML</a></li> 
         <li><a title="Hangup" class="callfire_xml_hangup   menu-link " href="callfire_xml_hangup.html">Hangup</a></li> 
         <li><a title="If" class="callfire_xml_if   menu-link " href="callfire_xml_if.html">If</a></li> 
         <li><a title="Keypress" class="callfire_xml_keypress   menu-link " href="callfire_xml_keypress.html">Keypress</a></li> 
         <li><a title="Menu" class="callfire_xml_menu   menu-link " href="callfire_xml_menu.html">Menu</a></li> 
         <li><a title="Play" class="callfire_xml_play   menu-link " href="callfire_xml_play.html">Play</a></li> 
         <li><a title="Record" class="callfire_xml_record   menu-link " href="callfire_xml_record.html">Record</a></li> 
         <li><a title="Setvar" class="callfire_xml_setvar   menu-link " href="callfire_xml_setvar.html">Setvar</a></li> 
         <li><a title="Stash" class="callfire_xml_stash   menu-link " href="callfire_xml_stash.html">Stash</a></li> 
         <li><a title="Text" class="callfire_xml_text   menu-link " href="callfire_xml_text.html">Text</a></li> 
         <li><a title="Transfer" class="callfire_xml_transfer   menu-link " href="callfire_xml_transfer.html">Transfer</a></li> 
         <li><a title="Wait" class="callfire_xml_wait   menu-link " href="callfire_xml_wait.html">Wait</a></li> 
        </ul> </li> 
       <li class="category-list "> <a id="security" class="doc-category " href="security-guide.html">Security</a> 
        <ul class="doc-item-nav"> 
         <li><a title="Security and Authentication" class="security-guide   menu-link " href="security-guide.html">Security and Authentication</a></li> 
        </ul> </li> 
       <li class="category-list "> <a id="sdks" class="doc-category " href="callfire-php-sdk.html">SDKs</a> 
        <ul class="doc-item-nav"> 
         <li><a title="CallFire API v2.0 Java SDK" class="callfire-api-client-java   menu-link " href="callfire-api-client-java.html">CallFire API v2.0 Java SDK</a></li> 
         <li><a title="CallFire API v2.0 .NET SDK" class="callfire-api-client-csharp   menu-link " href="callfire-api-client-csharp.html">CallFire API v2.0 .NET SDK</a></li> 
         <li><a title="CallFire API v2.0 Javascript SDK (beta)" class="callfire-api-client-js   menu-link " href="callfire-api-client-js.html">CallFire API v2.0 Javascript SDK (beta)</a></li> 
         <li><a title="CallFire API v2.0 Python SDK (beta)" class="callfire-api-client-python   menu-link " href="callfire-api-client-python.html">CallFire API v2.0 Python SDK (beta)</a></li> 
         <li><a title="CallFire API v2.0 PHP SDK (beta)" class="callfire-api-client-php   menu-link " href="callfire-api-client-php.html">CallFire API v2.0 PHP SDK (beta)</a></li> 
         <li><a title="CallFire API v1.1 Java SDK" class="callfire-api-1.1-client-java   menu-link " href="callfire-api-1.1-client-java.html">CallFire API v1.1 Java SDK</a></li> 
         <li><a target="_blank" title="CallFire API v1.1 .NET SDK" class="callfire-csharp-sdk menu-link " href="https://github.com/CallFire/CallFire-CSharp-SDK/tree/master">CallFire API v1.1 .NET SDK</a></li> 
         <li><a target="_blank" title="CallFire API v1.1 PHP SDK" class="callfire-php-sdk menu-link " href="https://github.com/CallFire/CallFire-PHP-SDK/tree/1.1">CallFire API v1.1 PHP SDK</a></li> 
        </ul> </li> 
       <li class="category-list "> <a id="api 1.1" class="doc-category " href="api_1_1_texts.html">API 1.1</a> 
        <ul class="doc-item-nav"> 
         <li><a title="Broadcast" class="api1_1_broadcasts   menu-link " href="api_1_1_broadcasts.html">Broadcast</a></li> 
         <li><a title="Broadcast. Create Broadcast" class="api1_1_broadcast_create_broadcast   menu-link " href="api_1_1_broadcast_service_create_broadcast.html">Broadcast. Create Broadcast</a></li> 
         <li><a title="Broadcast. Query Broadcasts" class="api1_1_broadcast_query_broadcasts   menu-link " href="api_1_1_broadcast_service_query_broadcasts.html">Broadcast. Query Broadcasts</a></li> 
         <li><a title="Broadcast. Get Broadcast" class="api1_1_broadcast_get_broadcast   menu-link " href="api_1_1_broadcast_service_get_broadcast.html">Broadcast. Get Broadcast</a></li> 
         <li><a title="Broadcast. Update Broadcast" class="api1_1_broadcast_update_broadcast   menu-link " href="api_1_1_broadcast_service_update_broadcast.html">Broadcast. Update Broadcast</a></li> 
         <li><a title="Broadcast. Get Broadcast Stats" class="api1_1_broadcast_get_broadcast_stats   menu-link " href="api_1_1_broadcast_service_get_broadcast_stats.html">Broadcast. Get Broadcast Stats</a></li> 
         <li><a title="Broadcast. Control Broadcast" class="api1_1_broadcast_control_broadcast   menu-link " href="api_1_1_broadcast_service_control_broadcast.html">Broadcast. Control Broadcast</a></li> 
         <li><a title="Broadcast. Create Contact Batch" class="api1_1_broadcast_create_contact_batch   menu-link " href="api_1_1_broadcast_service_create_contact_batch.html">Broadcast. Create Contact Batch</a></li> 
         <li><a title="Broadcast. Query Contact Batches" class="api1_1_broadcast_query_contact_batches   menu-link " href="api_1_1_broadcast_service_query_contact_batches.html">Broadcast. Query Contact Batches</a></li> 
         <li><a title="Broadcast. Get Contact Batch" class="api1_1_broadcast_get_contact_batch   menu-link " href="api_1_1_broadcast_service_get_contact_batch.html">Broadcast. Get Contact Batch</a></li> 
         <li><a title="Broadcast. Delete Broadcast Schedule" class="api1_1_broadcast_delete_broadcast_schedule   menu-link " href="api_1_1_broadcast_service_delete_broadcast_schedule.html">Broadcast. Delete Broadcast Schedule</a></li> 
         <li><a title="Broadcast. Control Contact Batch" class="api1_1_broadcast_control_contact_batch   menu-link " href="api_1_1_broadcast_service_control_contact_batch.html">Broadcast. Control Contact Batch</a></li> 
         <li><a title="Broadcast. Query Broadcast Schedule" class="api1_1_broadcast_query_broadcast_schedule   menu-link " href="api_1_1_broadcast_service_query_broadcast_schedule.html">Broadcast. Query Broadcast Schedule</a></li> 
         <li><a title="Broadcast. Get Broadcast Schedule" class="api1_1_broadcast_get_broadcast_schedule   menu-link " href="api_1_1_broadcast_service_get_broadcast_schedule.html">Broadcast. Get Broadcast Schedule</a></li> 
         <li><a title="Broadcast. Create Broadcast Schedule" class="api1_1_broadcast_create_broadcast_schedule   menu-link " href="api_1_1_broadcast_service_create_broadcast_schedule.html">Broadcast. Create Broadcast Schedule</a></li> 
         <li><a title="Call" class="api1_1_calls   menu-link " href="api_1_1_calls.html">Call</a></li> 
         <li><a title="Call. Send Call" class="api1_1_call_send_call   menu-link " href="api_1_1_call_service_send_call.html">Call. Send Call</a></li> 
         <li><a title="Call. Query Calls" class="api1_1_call_query_calls   menu-link " href="api_1_1_call_service_query_calls.html">Call. Query Calls</a></li> 
         <li><a title="Call. Get Call" class="api_1_1_call_get_call   menu-link " href="api_1_1_call_service_get_call.html">Call. Get Call</a></li> 
         <li><a title="Call. Create Sound" class="api1_1_call_create_sound   menu-link " href="api_1_1_call_service_create_sound.html">Call. Create Sound</a></li> 
         <li><a title="Call. Query Sound Meta" class="api1_1_call_query_meta   menu-link " href="api_1_1_call_service_query_sound_meta.html">Call. Query Sound Meta</a></li> 
         <li><a title="Call. Get Sound Data" class="api1_1_call_get_sound_data   menu-link " href="api_1_1_call_service_get_sound_data.html">Call. Get Sound Data</a></li> 
         <li><a title="Call. Get Recording Data" class="api1_1_call_get_recording_data   menu-link " href="api_1_1_call_service_get_recording_data.html">Call. Get Recording Data</a></li> 
         <li><a title="Text" class="api1_1_texts   menu-link " href="api_1_1_texts.html">Text</a></li> 
         <li><a title="Text. Send Text" class="api1_1_text_send_text   menu-link " href="api_1_1_text_broadcast_send_text.html">Text. Send Text</a></li> 
         <li><a title="Text. Query Texts" class="api1_1_text_query_texts   menu-link " href="api_1_1_text_broadcast_query_texts.html">Text. Query Texts</a></li> 
         <li><a title="Text. Get Text" class="api1_1_text   menu-link " href="api_1_1_text_broadcast_get_text.html">Text. Get Text</a></li> 
         <li><a title="Text. Create Auto Reply" class="api1_1_text_create_auto_reply   menu-link " href="api_1_1_text_broadcast_create_auto_reply.html">Text. Create Auto Reply</a></li> 
         <li><a title="Text. Get Auto Reply" class="api1_1_text_get_auto_reply   menu-link " href="api_1_1_text_broadcast_get_auto_reply.html">Text. Get Auto Reply</a></li> 
         <li><a title="Text. Query Auto Reply" class="api1_1_text_query_auto_reply   menu-link " href="api_1_1_text_broadcast_query_auto_reply.html">Text. Query Auto Reply</a></li> 
         <li><a title="Text. Delete Auto Reply" class="api1_1_text_delete_auto_reply   menu-link " href="api_1_1_text_broadcast_delete_auto_reply.html">Text. Delete Auto Reply</a></li> 
         <li><a title="Contact" class="api1_1_contacts   menu-link " href="api_1_1_contacts.html">Contact</a></li> 
         <li><a title="Contact. Query Contacts" class="api1_1_contact_query_contacts   menu-link " href="api_1_1_contact_service_query_contacts.html">Contact. Query Contacts</a></li> 
         <li><a title="Contact. Update Contacts" class="api1_1_contact_update_contacts   menu-link " href="api_1_1_contact_service_update_contacts.html">Contact. Update Contacts</a></li> 
         <li><a title="Contact. Remove Contacts" class="api1_1_contact_remove_contacts   menu-link " href="api_1_1_contact_service_remove_contacts.html">Contact. Remove Contacts</a></li> 
         <li><a title="Contact. Get Contact" class="api1_1_contact_get_?ontact   menu-link " href="api_1_1_contact_service_get_contact.html">Contact. Get Contact</a></li> 
         <li><a title="Contact. Get Contact History" class="api1_1_contact_get_contact_history   menu-link " href="api_1_1_contact_service_get_contact_history.html">Contact. Get Contact History</a></li> 
         <li><a title="Contact. Create Contact List" class="api1_1_contact_create_contact_list   menu-link " href="api_1_1_contact_service_create_contact_list.html">Contact. Create Contact List</a></li> 
         <li><a title="Contact. Query Contact Lists" class="api1_1_contact_query_contact_lists   menu-link " href="api_1_1_contact_service_query_contact_list.html">Contact. Query Contact Lists</a></li> 
         <li><a title="Contact. Get Contact List" class="api1_1_contact_get_contact_list   menu-link " href="api_1_1_contact_service_get_contact_list.html">Contact. Get Contact List</a></li> 
         <li><a title="Contact. Delete a contact list by ID" class="api1_1_contact_delete_contact_list   menu-link " href="api_1_1_contact_service_delete_contact_list.html">Contact. Delete a contact list by ID</a></li> 
         <li><a title="Contact. Add contact to list" class="api1_1_contact_add_contact_to_list   menu-link " href="api_1_1_contact_service_add_contact_to_list.html">Contact. Add contact to list</a></li> 
         <li><a title="Contact. Remove Contacts from List" class="api1_1_contact_remove_contacts_from_list   menu-link " href="api_1_1_contact_service_remove_contacts_from_list.html">Contact. Remove Contacts from List</a></li> 
         <li><a title="Subscription" class="api1_1_subscriptions   menu-link " href="api_1_1_subscriptions.html">Subscription</a></li> 
         <li><a title="Subscription. Create Subscription" class="api1_1_subscription_create_subscription   menu-link " href="api_1_1_subscription_service_create_subscription.html">Subscription. Create Subscription</a></li> 
         <li><a title="Subscription. Query Subscription" class="api1_1_subscription_query_subscription   menu-link " href="api_1_1_subscription_service_query_subscription.html">Subscription. Query Subscription</a></li> 
         <li><a title="Subscription. Get Subscription" class="api1_1_subscription_get_subscription   menu-link " href="api_1_1_subscription_service_get_subscription.html">Subscription. Get Subscription</a></li> 
         <li><a title="Subscription. Update Subscription" class="api1_1_subscription_update_subscription   menu-link " href="api_1_1_subscription_service_update_subscription.html">Subscription. Update Subscription</a></li> 
         <li><a title="Subscription. Delete Subscription" class="api1_1_subscription_delete_subscription   menu-link " href="api_1_1_subscription_service_delete_subscription.html">Subscription. Delete Subscription</a></li> 
         <li><a title="Subscription. Notification samples" class="api1_1_subscription_notification_samples   menu-link " href="api_1_1_subcription_service_notification_samples.html">Subscription. Notification samples</a></li> 
         <li><a title="Number. Query Regions" class="api1_1_number_query_regions   menu-link " href="api_1_1_number_service_query_regions.html">Number. Query Regions</a></li> 
         <li><a title="Number. Query Numbers" class="api1_1_number_query_numbers   menu-link " href="api_1_1_number_service_query_numbers.html">Number. Query Numbers</a></li> 
         <li><a title="Number. Query Keywords" class="api1_1_number_query_keywords   menu-link " href="api_1_1_number_service_query_keywords.html">Number. Query Keywords</a></li> 
         <li><a title="Number. Configure Number" class="api1_1_number_configure_number   menu-link " href="api_1_1_number_service_configure_number.html">Number. Configure Number</a></li> 
         <li><a title="Number. Get Number" class="api1_1_number_get_number   menu-link " href="api_1_1_number_service_get_number.html">Number. Get Number</a></li> 
         <li><a title="Number. Search Available Numbers" class="api1_1_number_search_available_numbers   menu-link " href="api_1_1_number_service_search_available_numbers.html">Number. Search Available Numbers</a></li> 
         <li><a title="Number. Search Available Keywords" class="api1_1_number_search_available_keywords   menu-link " href="api_1_1_number_service_search_available_keywords.html">Number. Search Available Keywords</a></li> 
         <li><a title="Number. Create Number Order" class="api1_1_number_create_number_order   menu-link " href="api_1_1_number_service_create_number_order.html">Number. Create Number Order</a></li> 
         <li><a title="Number. Get Number Order" class="api1_1_number_get_number_order   menu-link " href="api_1_1_number_service_get_number_order.html">Number. Get Number Order</a></li> 
         <li><a title="Number. Release" class="api1_1_number_release   menu-link " href="api_1_1_number_service_release.html">Number. Release</a></li> 
         <li><a title="Label. Label Broadcast" class="api1_1_label   menu-link " href="api_1_1_label_service_label_broadcast.html">Label. Label Broadcast</a></li> 
         <li><a title="Label. Unlabel Broadcast" class="api1_1_label_unlabel_broadcast   menu-link " href="api_1_1_label_service_unlabel_broadcast.html">Label. Unlabel Broadcast</a></li> 
         <li><a title="Label. Label Number" class="api1_1_label   menu-link " href="api_1_1_label_service_label_number.html">Label. Label Number</a></li> 
         <li><a title="Label. Unlabel Number" class="api1_1_label   menu-link " href="api_1_1_label_service_unlabel_number.html">Label. Unlabel Number</a></li> 
         <li><a title="Label. Query Labels" class="api1_1_label   menu-link " href="api_1_1_label_service_query_labels.html">Label. Query Labels</a></li> 
         <li><a title="Label. Delete Label" class="api1_1_label   menu-link " href="api_1_1_label_service_delete_label.html">Label. Delete Label</a></li> 
        </ul> </li> 
      </ul> </li> 
     <li class=""> 
      <div class="nav-title"> 
       <a title="API Documentation" href="docs.html">Docs</a> 
      </div> </li> 
     <li class=""> <a title="Features" href="features.html">Features</a> </li> 
     <!-- <li>
                <a href="http://callfiredev.wpengine.com/" title="CallFire Developer Blog">Blog</a>
            </li> --> 
     <li> <a href="http://stackoverflow.com/tags/callfire" title="CallFire Developer Community">Community</a> </li> 
     <li class=" chat"> 
      <div class="nav-title"> 
       <a id="slaask-open-widget" title="Chat">chat</a> 
      </div> </li> 
     <li class=" chat"> 
      <div class="nav-title"> 
       <a href="irc.html" title="IRC">irc</a> 
      </div> </li> 
    </ul> 
   </nav> 
  </aside> 
  <script type="text/javascript">
    var changeLocation = function(location){
        history.replaceState(undefined, undefined, "#" + location);
    }
</script> 
  <div class="container-docs" role="main"> 
   <div id="navigationHeader" class="cf-responsive-nav cf-static-nav"> 
    <a href="/" title="CallFire Developers" class="cf-logo-inline"></a> 
    <div class="cf-nav-dropdown"> 
     <select id="mainNavigation"> <option value="https://www.callfire.com/ui/login?0">Login</option> <option value="sign up">Sign Up</option> <option value="/learn.html">Learn</option> <option value="/docs.html">Docs</option> <option value="/pricing.html">Pricing</option> <option value="/features.html">Features</option> <option value="http://stackoverflow.com/tags/callfire">Community</option> <option value="https://www.hipchat.com/gcYoSWyOL">Public Chat</option> <option value="https://webchat.freenode.net/?channels=callfire">IRC</option> </select> 
    </div> 
   </div> 
   <section class="dev-section"> 
    <!--<div class="code-container">--> 
    <!--<ul class="language-nav">--> 
    <!--<li id="js">js</li>--> 
    <!--<li id="ruby">ruby</li>--> 
    <!--</ul>--> 
    <!--</div>--> 
    <h1 id="-title-">Sound Library</h1> 
    <h3 id="overview">Overview</h3> 
    <p>CallFire supports two kinds of sound files: .wav and .mp3 formats with a varied range of sampling rate frequency and bitrate. All .wav files must be at least 8000 hz, 16 bit (or more), and mono, and CallFire will attempt to convert sound files whose quality exceeds these specifications. The format for .mp3 files is unspecified, as CallFire will convert these file types to .wav. If sound file cannot be uploaded, you'll receive an appropriate error message.</p> 
    <p>Uploaded sound files can be used as voice messages in Voice or IVR broadcasts.</p> 
    <p><img src="assets/images/learn/usecases/sound-library.png" alt="Sound library main page" title="Sound library main page"></p> 
    <h3 id="how-to-add-new-sounds">How to Add new Sounds</h3> 
    <p>You can easily add new sounds via the API or the Developers' UI. There are four ways to add a sound to your library:</p> 
    <ul> 
     <li>Upload an Audio File</li> 
     <li>Use Text to Speech</li> 
     <li>Record via Phone</li> 
     <li>Dial-in to Record (Developers' UI only)</li> 
    </ul> 
    <p><img src="assets/images/learn/usecases/sound-library-add.png" alt="Add new Sound to Sound library" title="Add new Sound to Sound library"></p> 
    <p>Let's look at all the options in detail.</p> 
    <h4 id="upload-an-audio-file">Upload an Audio File</h4> 
    <p>To upload a new file on the Developers' UI, click on the appropriate icon and choose a sound file. To do this using the API, see the following code examples on how to upload sound.mp3 file using <strong>curl</strong> utility or <a href="callfire-api-client-java.html">Callfire SDK</a>. </p> 
    <p>[[code-container]] [+curl] <strong>request:</strong> </p>
    <pre><code class="language-sh">#!/usr/bin/env bash

curl -u username:password -X POST -F 'name=test image' -F 'file=@/sound.mp3' "https://api.callfire.com/v2/campaigns/sounds/files"</code></pre> 
    <strong>response:</strong> 
    <pre><code class="language-json">{
  "<span class="attribute">id</span>": <span class="value"><span class="number">63</span> </span>}</code></pre> [-curl] [+java] 
    <pre><code class="language-java"><span class="keyword">import</span> com.callfire.api.client.CallfireClient;
<span class="keyword">import</span> com.callfire.api.client.api.campaigns.model.CampaignSound;

<span class="keyword">import</span> java.io.File;
<span class="keyword">import</span> java.net.URISyntaxException;

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> </span>{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) <span class="keyword">throws</span> URISyntaxException {
        CallfireClient client = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        File mp3File = <span class="keyword">new</span> File(ApiClientSample.class.getClassLoader().getResource(<span class="string">"sound1.mp3"</span>).toURI());
        CampaignSound mp3Sound = client.campaignSoundsApi().uploadAndGetSoundDetails(mp3File, <span class="string">"campaign sound"</span>);
    }
}</code></pre> [-java] [+csharp] 
    <pre><code class="language-cs"><span class="keyword">using</span> CallfireApiClient;

<span class="keyword">public</span> <span class="keyword">class</span> ApiClientSample
{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> Main(<span class="keyword">string</span>[] args)
    {
        <span class="keyword">var</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        <span class="keyword">var</span> mp3 = client.CampaignSoundsApi.Upload(<span class="string">"sound1.mp3"</span>, <span class="string">"campaign sound"</span>);
    }
}</code></pre> [-csharp] [+js] 
    <pre><code class="language-js"><span class="string">'strict'</span>

<span class="keyword">const</span> fs = require(<span class="string">'fs'</span>);
<span class="keyword">const</span> CallfireClient = require(<span class="string">'callfire-api-client-js'</span>);
<span class="keyword">const</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">'api-login'</span>, <span class="string">'api-password'</span>);

client.ready(() =&gt; {
    client.campaigns.postFileCampaignSound({
      name: <span class="string">'my-file'</span>,
      <span class="comment">// for nodejs environment</span>
      <span class="comment">// file: fs.createReadStream('./myfile.wav')</span>
      <span class="comment">// for browser environment</span>
      <span class="comment">// file: new Blob([/* binary data */], {type: 'audio/wav'})</span>
    })
      .then((response) =&gt; {
        console.log(response.obj);
      })
      .<span class="keyword">catch</span>((err) =&gt; {
        console.log(<span class="string">'request error '</span> + err.data);
      });
  },
  (clientError) =&gt; {
    console.log(<span class="string">'client error '</span> + clientError);
  }
);</code></pre> [-js] [+python] 
    <pre><code class="language-py">from callfire.client import CallfireClient

client = CallfireClient('api-login', 'api-password')
response = client.campaigns.postFileCampaignSound(
    name='campaign sound',
    file=open('sound1.mp3', 'rb')
).result()

# see sample JSON response for this API
# on 'curl' samples tab
print(response)</code></pre> [-python] [+php] 
    <pre><code class="language-php"><span class="preprocessor">&lt;?php</span>

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> {</span>

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span><span class="params">()</span> {</span>
        <span class="variable">$client</span> = \CallFire\Api\DocumentedClient::createClient(<span class="string">"login"</span>, <span class="string">"password"</span>);
        <span class="variable">$request</span> = <span class="variable">$client</span>-&gt;postFileCampaignSound();
        <span class="variable">$request</span>-&gt;getOperationConfig()-&gt;setFileUpload(__dir__.<span class="string">'\sound1.mp3'</span>, <span class="string">'campaign sound'</span>);
        <span class="variable">$result</span> = <span class="variable">$client</span>-&gt;request(<span class="variable">$request</span>);
        <span class="variable">$json</span> = json_decode(<span class="variable">$result</span>-&gt;getBody());
    }
}

ApiClientSample::main();</code></pre> [-php] [[/code-container]]
    <p></p> 
    <p>The API method is described on the <a href="docs.html#postFileCampaignSound">documentation page</a></p> 
    <h4 id="text-to-speech">Text to Speech</h4> 
    <p>The Text to Speech (TTS) engine allows you to convert text to a human voice. A number of different voices can be chosen. To add a new sound using the TTS feature, click on the 'Text to Speech' button on the UI, enter your message, and save. The API operation is shown below.</p> 
    <p>[[code-container]] [+curl] <strong>request:</strong> </p>
    <pre><code class="language-sh">#!/usr/bin/env bash

curl -u "username:password" -H "Content-Type:application/json" -X POST -d '
    {
        "voice":"MALE1",
        "message":"This is a TTS sound"
    }' "https://api.callfire.com/v2/campaigns/sounds/tts"</code></pre> 
    <strong>response:</strong> 
    <pre><code class="language-json">{
  "<span class="attribute">id</span>": <span class="value"><span class="number">62</span> </span>}</code></pre> [-curl] [+java] 
    <pre><code class="language-java"><span class="keyword">import</span> com.callfire.api.client.CallfireClient;
<span class="keyword">import</span> com.callfire.api.client.api.campaigns.model.TextToSpeech;
<span class="keyword">import</span> com.callfire.api.client.api.campaigns.model.Voice;
<span class="keyword">import</span> com.callfire.api.client.api.common.model.ResourceId;

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> </span>{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) {
        CallfireClient callfireClient = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        TextToSpeech tts = <span class="keyword">new</span> TextToSpeech();
        tts.setVoice(Voice.MALE1);
        tts.setMessage(<span class="string">"This is a TTS sound"</span>);
        ResourceId resourceId = callfireClient.campaignSoundsApi().createFromTts(tts);
    }
}</code></pre> [-java] [+csharp] 
    <pre><code class="language-cs"><span class="keyword">using</span> CallfireApiClient;
<span class="keyword">using</span> CallfireApiClient.Api.Campaigns.Model;
<span class="keyword">using</span> CallfireApiClient.Api.Common.Model;

<span class="keyword">public</span> <span class="keyword">class</span> ApiClientSample
{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> Main(<span class="keyword">string</span>[] args)
    {
        <span class="keyword">var</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        <span class="keyword">var</span> tts = <span class="keyword">new</span> TextToSpeech
        {
            Message = <span class="string">"This is a TTS sound"</span>,
            Voice = Voice.MALE1
        };
        ResourceId resourceId = client.CampaignSoundsApi.CreateFromTts(tts);
    }
}</code></pre> [-csharp] [+js] 
    <pre><code class="language-js"><span class="string">'strict'</span>

<span class="keyword">const</span> CallfireClient = require(<span class="string">'callfire-api-client-js'</span>);
<span class="keyword">const</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">'api-login'</span>, <span class="string">'api-password'</span>);

client.ready(() =&gt; {
    client.campaigns.postTTSCampaignSound({
      body: {
        voice: <span class="string">'MALE1'</span>,
        message: <span class="string">'This is a TTS sound'</span>
      }
    })
      .then((response) =&gt; {
        console.log(response.obj);
      })
      .<span class="keyword">catch</span>((err) =&gt; {
        console.log(<span class="string">'request error '</span> + err.data);
      });
  },
  (clientError) =&gt; {
    console.log(<span class="string">'client error '</span> + clientError);
  }
);</code></pre> [-js] [+python] 
    <pre><code class="language-py">from callfire.client import CallfireClient

client = CallfireClient('api-login', 'api-password')
response = client.campaigns.postTTSCampaignSound(
    body={
        'voice': 'MALE1',
        'message': 'This is a TTS sound'
    }
).result()

# see sample JSON response for this API
# on 'curl' samples tab
print(response)</code></pre> [-python] [+php] 
    <pre><code class="language-php"><span class="preprocessor">&lt;?php</span>

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> {</span>

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span><span class="params">()</span> {</span>
        <span class="variable">$client</span> = \CallFire\Api\DocumentedClient::createClient(<span class="string">"login"</span>, <span class="string">"password"</span>);
        <span class="variable">$request</span> = <span class="variable">$client</span>-&gt;postTTSCampaignSound();
        <span class="variable">$body</span> = <span class="string">'{ "voice":"MALE1", "message":"This is a TTS sound" }'</span>;
        <span class="variable">$request</span>-&gt;getOperationConfig()-&gt;setBodyParameter(<span class="variable">$body</span>);
        <span class="variable">$result</span> = <span class="variable">$client</span>-&gt;request(<span class="variable">$request</span>);
        <span class="variable">$json</span> = json_decode(<span class="variable">$result</span>-&gt;getBody());
    }
}

ApiClientSample::main();</code></pre> [-php] [[/code-container]]
    <p></p> 
    <p>The API method is described on the <a href="docs.html#postTTSCampaignSound">documentation page</a></p> 
    <h4 id="record-via-phone">Record via Phone</h4> 
    <p>If you choose the 'Record via Phone' option, you will be prompted to enter your phone number. When you receive the call from CallFire, follow the prompts to record your message over the phone. </p> 
    <p>[[code-container]] [+curl] <strong>request:</strong> </p>
    <pre><code class="language-sh">#!/usr/bin/env bash

curl -u "username:password" -H "Content-Type:application/json" -X POST -d '
    {
        "name":"Sound 1",
        "toNumber":"12135551122"
    }' "https://api.callfire.com/v2/campaigns/sounds/calls"</code></pre> 
    <strong>response:</strong> 
    <pre><code class="language-json">{
  "<span class="attribute">id</span>": <span class="value"><span class="number">61</span> </span>}</code></pre> [-curl] [+java] 
    <pre><code class="language-java"><span class="keyword">import</span> com.callfire.api.client.CallfireClient;
<span class="keyword">import</span> com.callfire.api.client.api.campaigns.model.CallCreateSound;
<span class="keyword">import</span> com.callfire.api.client.api.common.model.ResourceId;

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> </span>{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) {
        CallfireClient callfireClient = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        CallCreateSound callCreateSound = <span class="keyword">new</span> CallCreateSound();
        callCreateSound.setName(<span class="string">"Sound 1"</span>);
        callCreateSound.setToNumber(<span class="string">"12135551122"</span>);
        ResourceId resourceId = callfireClient.campaignSoundsApi().recordViaPhone(callCreateSound);
    }
}</code></pre> [-java] [+csharp] 
    <pre><code class="language-cs"><span class="keyword">using</span> CallfireApiClient;
<span class="keyword">using</span> CallfireApiClient.Api.Campaigns.Model;
<span class="keyword">using</span> CallfireApiClient.Api.Common.Model;

<span class="keyword">public</span> <span class="keyword">class</span> ApiClientSample
{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> Main(<span class="keyword">string</span>[] args)
    {
        <span class="keyword">var</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        <span class="keyword">var</span> callCreateSound = <span class="keyword">new</span> CallCreateSound
        {
            Name = <span class="string">"Sound 1"</span>,
            ToNumber = <span class="string">"12135551122"</span>
        };
        ResourceId resourceId = client.CampaignSoundsApi.RecordViaPhone(callCreateSound);
    }
}</code></pre> [-csharp] [+js] 
    <pre><code class="language-js"><span class="string">'strict'</span>

<span class="keyword">const</span> CallfireClient = require(<span class="string">'callfire-api-client-js'</span>);
<span class="keyword">const</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">'api-login'</span>, <span class="string">'api-password'</span>);

client.ready(() =&gt; {
    client.campaigns.postCallCampaignSound({
      body: {
        name: <span class="string">'Sound 1'</span>,
        toNumber: <span class="string">'12135551122'</span>
      }
    })
      .then((response) =&gt; {
        console.log(response.obj);
      })
      .<span class="keyword">catch</span>((err) =&gt; {
        console.log(<span class="string">'request error '</span> + err.data);
      });
  },
  (clientError) =&gt; {
    console.log(<span class="string">'client error '</span> + clientError);
  }
);</code></pre> [-js] [+python] 
    <pre><code class="language-py">from callfire.client import CallfireClient

client = CallfireClient('api-login', 'api-password')
response = client.campaigns.postCallCampaignSound(
    body={
        'name': 'Sound 1',
        'toNumber': '12135551122'
    }
).result()

# see sample JSON response for this API
# on 'curl' samples tab
print(response)</code></pre> [-python] [+php] 
    <pre><code class="language-php"><span class="preprocessor">&lt;?php</span>

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> {</span>

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span><span class="params">()</span> {</span>
        <span class="variable">$client</span> = \CallFire\Api\DocumentedClient::createClient(<span class="string">"login"</span>, <span class="string">"password"</span>);
        <span class="variable">$request</span> = <span class="variable">$client</span>-&gt;postCallCampaignSound();
        <span class="variable">$body</span> = <span class="string">'{ "name":"Sound 1", "toNumber":"12135551122" }'</span>;
        <span class="variable">$request</span>-&gt;getOperationConfig()-&gt;setBodyParameter(<span class="variable">$body</span>);
        <span class="variable">$result</span> = <span class="variable">$client</span>-&gt;request(<span class="variable">$request</span>);
        <span class="variable">$json</span> = json_decode(<span class="variable">$result</span>-&gt;getBody());
    }
}

ApiClientSample::main();</code></pre> [-php] [[/code-container]]
    <p></p> 
    <p>The API method is described on the <a href="docs.html#postCallCampaignSound">documentation page</a></p> 
    <h4 id="dial-in-to-record-developers-ui-only-">Dial-in to Record (Developers' UI only)</h4> 
    <p>With the 'Dial-in to Record' option, you dial a toll-free or local number to record a message. Click on the 'Dial-in to Record' button on the UI to see the phone numbers and PIN codes for access. </p> 
    <hr> 
    <h4 id="find-and-delete-sounds-in-the-sound-library">Find and Delete Sounds in the Sound Library</h4> 
    <p>Both the API and the Developers' UI allow you to search available sounds in the Library, fetch details about a particular sound, and remove sounds from your account. The following code samples show how to retrieve all available sounds. </p> 
    <p>[[code-container]] [+curl] <strong>request:</strong> </p>
    <pre><code class="language-sh">#!/usr/bin/env bash

curl -u "username:password" -H "Content-Type:application/json" -X GET "https://api.callfire.com/v2/campaigns/sounds?filter=name&amp;includeArchived=true&amp;includePending=true&amp;includeScrubbed=true&amp;offset=0&amp;limit=10&amp;fileds=items(id,name,callback)"</code></pre> 
    <strong>response:</strong> 
    <pre><code class="language-json">{
  "<span class="attribute">items</span>": <span class="value">[ { "<span class="attribute">id</span>": <span class="value"><span class="number">60</span></span>, "<span class="attribute">name</span>": <span class="value"><span class="string">"TTS: And hello to you too."</span></span>, "<span class="attribute">created</span>": <span class="value"><span class="number">1443333911000</span></span>, "<span class="attribute">lengthInSeconds</span>": <span class="value"><span class="number">1</span></span>, "<span class="attribute">status</span>": <span class="value"><span class="string">"ACTIVE"</span> </span>}, { "<span class="attribute">id</span>": <span class="value"><span class="number">59</span></span>, "<span class="attribute">name</span>": <span class="value"><span class="string">"TTS: Why hello there!"</span></span>, "<span class="attribute">created</span>": <span class="value"><span class="number">1443333905000</span></span>, "<span class="attribute">lengthInSeconds</span>": <span class="value"><span class="number">1</span></span>, "<span class="attribute">status</span>": <span class="value"><span class="string">"ACTIVE"</span> </span>} ]</span>,
  "<span class="attribute">limit</span>": <span class="value"><span class="number">100</span></span>,
  "<span class="attribute">offset</span>": <span class="value"><span class="number">0</span></span>,
  "<span class="attribute">totalCount</span>": <span class="value"><span class="number">8</span> </span>}</code></pre> [-curl] [+java] 
    <pre><code class="language-java"><span class="keyword">import</span> com.callfire.api.client.CallfireClient;
<span class="keyword">import</span> com.callfire.api.client.api.campaigns.model.CampaignSound;
<span class="keyword">import</span> com.callfire.api.client.api.campaigns.model.request.FindSoundsRequest;
<span class="keyword">import</span> com.callfire.api.client.api.common.model.Page;

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> </span>{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) {
        CallfireClient callfireClient = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        FindSoundsRequest request = FindSoundsRequest.create()
            .filter(<span class="string">"name"</span>)
            .includeArchived(<span class="keyword">true</span>)
            .includePending(<span class="keyword">true</span>)
            .includePending(<span class="keyword">true</span>)
            .offset(<span class="number">0</span>L)
            .limit(<span class="number">10</span>L)
            .fields(<span class="string">"items(id,name,callback)"</span>)
            .build();
        Page&lt;CampaignSound&gt; campaignSounds = callfireClient.campaignSoundsApi().find(request);
    }
}</code></pre> [-java] [+csharp] 
    <pre><code class="language-cs"><span class="keyword">using</span> CallfireApiClient;
<span class="keyword">using</span> CallfireApiClient.Api.CallsTexts.Model.Request;
<span class="keyword">using</span> CallfireApiClient.Api.Campaigns.Model;
<span class="keyword">using</span> CallfireApiClient.Api.Common.Model;

<span class="keyword">public</span> <span class="keyword">class</span> ApiClientSample
{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> Main(<span class="keyword">string</span>[] args)
    {
        <span class="keyword">var</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        FindSoundsRequest request = <span class="keyword">new</span> FindSoundsRequest
        {
            Filter = <span class="string">"name"</span>,
            IncludeArchived = <span class="keyword">true</span>,
            IncludePending = <span class="keyword">true</span>,
            IncludeScrubbed = <span class="keyword">true</span>,
            Offset = <span class="number">0</span>,
            Limit = <span class="number">10</span>,
            Fields = <span class="string">"items(id,name,callback)"</span>
        };
        Page&lt;CampaignSound&gt; campaignSounds = client.CampaignSoundsApi.Find(request);
    }
}</code></pre> [-csharp] [+js] 
    <pre><code class="language-js"><span class="string">'strict'</span>

<span class="keyword">const</span> CallfireClient = require(<span class="string">'callfire-api-client-js'</span>);
<span class="keyword">const</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">'api-login'</span>, <span class="string">'api-password'</span>);

client.ready(() =&gt; {
    client.campaigns.findCampaignSounds({
      <span class="comment">// filter by sound name</span>
      filter: <span class="string">'name'</span>,
      <span class="comment">// includes ARCHIVED sounds</span>
      includeArchived: <span class="literal">true</span>,
      <span class="comment">// includes UPLOAD/RECORDING</span>
      includePending: <span class="literal">true</span>,
      <span class="comment">// includes SCRUBBED sounds</span>
      includeScrubbed: <span class="literal">true</span>,
      <span class="comment">// search offset</span>
      offset: <span class="number">0</span>,
      <span class="comment">// return 10 items per request</span>
      limit: <span class="number">10</span>,
      <span class="comment">// return only specific fields</span>
      fields: <span class="string">'items(id,name,callback)'</span>
    })
      .then((response) =&gt; {
        console.log(response.obj);
      })
      .<span class="keyword">catch</span>((err) =&gt; {
        console.log(<span class="string">'request error '</span> + err.data);
      });
  },
  (clientError) =&gt; {
    console.log(<span class="string">'client error '</span> + clientError);
  }
);</code></pre> [-js] [+python] 
    <pre><code class="language-py">from callfire.client import CallfireClient

client = CallfireClient('api-login', 'api-password')
response = client.campaigns.findCampaignSounds(
    # filter by sound name
    filter='name',
    # includes ARCHIVED sounds
    includeArchived=True,
    # includes UPLOAD/RECORDING
    includePending=True,
    # includes SCRUBBED sounds
    includeScrubbed=True,
    # search offset
    offset=0,
    # return 10 items per request
    limit=10,
    # return only specific fields
    fields='items(id,name,callback)'
).result()

# see sample JSON response for this API
# on 'curl' samples tab
print(response)</code></pre> [-python] [+php] 
    <pre><code class="language-php"><span class="preprocessor">&lt;?php</span>

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> {</span>

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span><span class="params">()</span> {</span>
        <span class="variable">$client</span> = \CallFire\Api\DocumentedClient::createClient(<span class="string">"login"</span>, <span class="string">"password"</span>);
        <span class="variable">$request</span> = <span class="variable">$client</span>-&gt;findCampaignSounds();
        <span class="variable">$request</span>-&gt;getOperationConfig()-&gt;setQueryParameters(<span class="keyword">array</span>(<span class="string">"filter"</span> =&gt; <span class="string">"name"</span>,
                                                                 <span class="string">"includeArchived"</span> =&gt; <span class="keyword">true</span>,
                                                                 <span class="string">"includePending"</span> =&gt; <span class="keyword">true</span>,
                                                                 <span class="string">"includeScrubbed"</span> =&gt; <span class="keyword">true</span>,
                                                                 <span class="string">"offset"</span> =&gt; <span class="number">0</span>,
                                                                 <span class="string">"limit"</span> =&gt; <span class="number">10</span>,
                                                                 <span class="string">"fields"</span> =&gt; <span class="string">"items(id,name,callback)"</span>));
        <span class="variable">$result</span> = <span class="variable">$client</span>-&gt;request(<span class="variable">$request</span>);
        <span class="variable">$json</span> = json_decode(<span class="variable">$result</span>-&gt;getBody());
    }
}

ApiClientSample::main();</code></pre> [-php] [[/code-container]]
    <p></p> 
    <p>The API method is described on the <a href="docs.html#findCampaignSounds">documentation page</a></p> 
    <p>Example of how to delete a sound from the Library: </p> 
    <p>[[code-container]] [+curl] <strong>request:</strong> </p>
    <pre><code class="language-sh">#!/usr/bin/env bash

curl -u "username:password" -H "Content-Type:application/json" -X DELETE "https://api.callfire.com/v2/campaigns/sounds/11646003"</code></pre> 
    <strong>response:</strong> 
    <pre><code class="language-json">200 OK - No Response</code></pre> [-curl] [+js] 
    <pre><code class="language-js"><span class="string">'strict'</span>

<span class="keyword">const</span> CallfireClient = require(<span class="string">'callfire-api-client-js'</span>);
<span class="keyword">const</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">'api-login'</span>, <span class="string">'api-password'</span>);

client.ready(() =&gt; {
    client.campaigns.deleteCampaignSound({id: <span class="number">11646003</span>})
      .then((response) =&gt; {
        console.log(response.obj);
      })
      .<span class="keyword">catch</span>((err) =&gt; {
        console.log(<span class="string">'request error '</span> + err.data);
      });
  },
  (clientError) =&gt; {
    console.log(<span class="string">'client error '</span> + clientError);
  }
);</code></pre> [-js] [+python] 
    <pre><code class="language-py">from callfire.client import CallfireClient

client = CallfireClient('api-login', 'api-password')
client.campaigns.deleteCampaignSound(id=11646003).result()</code></pre> [-python] [+php] 
    <pre><code class="language-php"><span class="preprocessor">&lt;?php</span>

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> {</span>

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span><span class="params">()</span> {</span>
        <span class="variable">$client</span> = \CallFire\Api\DocumentedClient::createClient(<span class="string">"login"</span>, <span class="string">"password"</span>);
        <span class="variable">$request</span> = <span class="variable">$client</span>-&gt;deleteCampaignSound();
        <span class="variable">$request</span>-&gt;getOperationConfig()-&gt;setPathParameters(<span class="keyword">array</span>(<span class="string">"id"</span> =&gt; <span class="number">11646003</span>));
        <span class="variable">$result</span> = <span class="variable">$client</span>-&gt;request(<span class="variable">$request</span>);
        <span class="variable">$json</span> = json_decode(<span class="variable">$result</span>-&gt;getBody());
    }
}

ApiClientSample::main();</code></pre> [-php] [[/code-container]]
    <p></p> 
    <p>The API method is described on the <a href="docs.html#deleteCampaignSound">documentation page</a></p> 
    <h4 id="download-sound-api">Download Sound API</h4> 
    <p>Users have the ability to download a file hosted in the Sound Library. CallFire provides two API operations for .mp3 and .wav formats. The examples below show how to download an .mp3 version of sound file.</p> 
    <p>[[code-container]] [+curl] <strong>request:</strong> </p>
    <pre><code class="language-sh">#!/usr/bin/env bash

curl -u "username:password" -H "Content-Type:application/json" -X GET "https://api.callfire.com/v2/campaigns/sounds/379506003.mp3"</code></pre> 
    <strong>response:</strong> 
    <pre><code class="language-json">mp3 binary file response</code></pre> [-curl] [+java] 
    <pre><code class="language-java"><span class="keyword">import</span> com.callfire.api.client.CallfireClient;

<span class="keyword">import</span> java.io.InputStream;

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> </span>{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) {
        CallfireClient callfireClient = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        InputStream is = callfireClient.campaignSoundsApi().getMp3(<span class="number">379506003</span>L);
    }
}</code></pre> [-java] [+csharp] 
    <pre><code class="language-cs"><span class="keyword">using</span> System.IO;
<span class="keyword">using</span> CallfireApiClient;

<span class="keyword">public</span> <span class="keyword">class</span> ApiClientSample
{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> Main(<span class="keyword">string</span>[] args)
    {
        <span class="keyword">var</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">"api_login"</span>, <span class="string">"api_password"</span>);
        Stream stream = client.CampaignSoundsApi.GetMp3(<span class="number">379506003</span>);
    }
}</code></pre> [-csharp] [+js] 
    <pre><code class="language-js"><span class="string">'strict'</span>

<span class="keyword">const</span> CallfireClient = require(<span class="string">'callfire-api-client-js'</span>);
<span class="keyword">const</span> client = <span class="keyword">new</span> CallfireClient(<span class="string">'api-login'</span>, <span class="string">'api-password'</span>);

client.ready(() =&gt; {
    client.campaigns.getCampaignSoundDataMp3({id: <span class="number">379506003</span>})
      .then((response) =&gt; {
        <span class="comment">// returns binary response</span>
        console.log(response.data);
      })
      .<span class="keyword">catch</span>((err) =&gt; {
        console.log(<span class="string">'request error '</span> + err.data);
      });
  },
  (clientError) =&gt; {
    console.log(<span class="string">'client error '</span> + clientError);
  }
);</code></pre> [-js] [+python] 
    <pre><code class="language-py">from callfire.client import CallfireClient

client = CallfireClient('api-login', 'api-password')
response = client.campaigns.getCampaignSoundDataMp3(id=379506003).result()

# see sample JSON response for this API
# on 'curl' samples tab
print(response)</code></pre> [-python] [+php] 
    <pre><code class="language-php"><span class="preprocessor">&lt;?php</span>

<span class="class"><span class="keyword">class</span> <span class="title">ApiClientSample</span> {</span>

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span><span class="params">()</span> {</span>
        <span class="variable">$client</span> = \CallFire\Api\DocumentedClient::createClient(<span class="string">"login"</span>, <span class="string">"password"</span>);
        <span class="variable">$request</span> = <span class="variable">$client</span>-&gt;getCampaignSoundDataMp3();
        <span class="variable">$request</span>-&gt;getOperationConfig()-&gt;setPathParameters(<span class="keyword">array</span>(<span class="string">"id"</span> =&gt; <span class="number">379506003</span>));
        <span class="variable">$result</span> = <span class="variable">$client</span>-&gt;request(<span class="variable">$request</span>);
    }
}

ApiClientSample::main();</code></pre> [-php] [[/code-container]]
    <p></p> 
    <p>The API method is described on the <a href="docs.html#getCampaignSoundDataMp3">documentation page</a> </p> 
   </section> 
  </div> 
  <!-- jQuery (necessary for Bootstrap's JavaScript plugins) --> 
  <script src="assets/plugins/jquery.waypoints.min.js"></script> 
  <script src="assets/plugins/highlight.min.js"></script> 
  <script src="assets/plugins/code-example-function.js"></script> 
  <script>
    hljs.initHighlightingOnLoad();
</script> 
  <script type="text/javascript">
    var goHome = function(){
        window.location.href = window.location.origin;
    };
    $(document).ready(function(){
        var exampleContainerWidth = $('.dev-doc-example').width();
        var docItemContainerWidth = $('.dev-doc-item').width() + 55;
        // these should be combined since the same stuff is being applied to them
        // so you can do var headers = &('#languageHeader, #navigationHeader');
        //var languageHeader = $('#languageHeader');
        var navigationHeader = $('#navigationHeader');
        //languageHeader.css({width: exampleContainerWidth + 'px'});
        navigationHeader.css({width: docItemContainerWidth + 'px'});
        //languageHeader.removeClass('hide');
        navigationHeader.removeClass('hide');
        $(window).resize(function(){
            setTimeout(function(){
                exampleContainerWidth = $('.dev-doc-example').width();
                docItemContainerWidth = $('.dev-doc-item').width() + 55;
                //languageHeader.css({width: exampleContainerWidth + 'px'});
                navigationHeader.css({width: docItemContainerWidth + 'px'});
            }, 100);
        });
        $('.cf-logo').click(goHome);
        $('.cf-logo-inline').click(goHome);
        $('#mainNavigation').change(function(){
            window.location.href = this.value;
        });
    });
</script> 
  <!-- Include all compiled plugins (below), or include individual files as needed -->   
 </body>
</html>