<!doctype html>
<html lang="es" class="no-js">
 <head> 
  <title>API Updates — The Movie Database (TMDb)</title> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta http-equiv="cleartype" content="on"> 
  <meta charset="utf-8"> 
  <meta name="msapplication-TileColor" content="#00d573"> 
  <meta name="msapplication-TileImage" content="https://www.themoviedb.org/assets/static_cache/bbbc36f5620f0c7d852a8d51495fdecd/images/icons/v4/mstile-144x144.png"> 
  <meta name="keywords" content="Movies, TV Shows, Reviews, API, Actors, Actresses, Photos, User Ratings, Synopsis, Trailers, Teasers, Credits, Cast"> 
  <meta name="mobile-web-app-capable" content="yes"> 
  <meta name="HandheldFriendly" content="True"> 
  <meta name="MobileOptimized" content="320"> 
  <meta name="viewport" content="width=1120"> 
  <meta name="theme-color" content="#00d573"> 
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"> 
  <link rel="shortcut icon" type="image/icon" href="/favicon.ico"> 
  <link rel="icon" type="image/png" href="/favicon-32x32.png" sizes="32x32"> 
  <link rel="icon" type="image/png" href="/favicon-16x16.png" sizes="16x16"> 
  <link rel="manifest" href="/manifest.json"> 
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#00d474"> 
  <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin> 
  <link rel="preconnect" href="https://image.tmdb.org/" crossorigin> 
  <link rel="preconnect" href="https://api.themoviedb.org/" crossorigin> 
  <link rel="canonical" href="https://www.themoviedb.org/documentation/api/updates"> 
  <link rel="search" type="application/opensearchdescription+xml" title="TMDb Search" href="/opensearch.xml"> 
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,600,700&amp;subset=cyrillic,cyrillic-ext,greek,greek-ext,latin-ext,vietnamese"> 
  <link rel="preload" href="/fonts_cache/static_cache/73hfsjd86/glyphicons-regular.woff2" as="font" type="font/woff2" crossorigin> 
  <link rel="preload" href="/fonts_cache/static_cache/73hfsjd86/glyphicons-social-regular.woff2" as="font" type="font/woff2" crossorigin> 
  <link rel="preload" href="/fonts_cache/static_cache/73hfsjd86/Consensus.woff?yqnyj1" as="font" type="font/woff" crossorigin> 
  <link rel="stylesheet" href="https://www.themoviedb.org/multi_assets/static_cache/stylesheets/f234334c04cebcb719b08be45383fa7f.css"> 
  <link rel="stylesheet" href="https://www.themoviedb.org/assets/static_cache/b6f61a1b662875aa5efdf6f7ace1c31c/stylesheets/v2/glyphicons.css"> 
  <link rel="stylesheet" href="https://www.themoviedb.org/assets/static_cache/b8a2bc7c7aa68ed76af0c00964263ed5/stylesheets/v2/glyphicons-social.css"> 
  <link rel="stylesheet" href="https://www.themoviedb.org/assets/static_cache/efa6598e6e4cd49bf76b45cf3326348f/stylesheets/v4/consensus_numbers.css"> 
  <link rel="stylesheet" href="https://www.themoviedb.org/assets/static_cache/86347c45fa1d77636e6a2b9102190988/stylesheets/kendo-2017-1.223/kendo.common-material.min.css"> 
  <link rel="stylesheet" href="https://www.themoviedb.org/assets/static_cache/8b785a88152b95ae738099ce7e5799d1/stylesheets/kendo-2017-1.223/kendo.material.min.css"> 
  <link rel="stylesheet" href="https://www.themoviedb.org/assets/static_cache/6e31f44a4130b3e183a7444ee2f42862/stylesheets/v2/kendo.material.override.css"> 
  <meta name="description" content="The Movie Database (TMDb) is a popular, user editable database for movies and TV shows."> 
  <link rel="alternate" hreflang="x-default" href="https://www.themoviedb.org/documentation/api/updates"> 
  <link rel="alternate" hreflang="en" href="https://www.themoviedb.org/documentation/api/updates/en"> 
  <link rel="alternate" hreflang="bg" href="https://www.themoviedb.org/documentation/api/updates/bg"> 
  <link rel="alternate" hreflang="bn" href="https://www.themoviedb.org/documentation/api/updates/bn"> 
  <link rel="alternate" hreflang="ca" href="https://www.themoviedb.org/documentation/api/updates/ca"> 
  <link rel="alternate" hreflang="ch" href="https://www.themoviedb.org/documentation/api/updates/ch"> 
  <link rel="alternate" hreflang="cs" href="https://www.themoviedb.org/documentation/api/updates/cs"> 
  <link rel="alternate" hreflang="da" href="https://www.themoviedb.org/documentation/api/updates/da"> 
  <link rel="alternate" hreflang="de" href="https://www.themoviedb.org/documentation/api/updates/de"> 
  <link rel="alternate" hreflang="el" href="https://www.themoviedb.org/documentation/api/updates/el"> 
  <link rel="alternate" hreflang="eo" href="https://www.themoviedb.org/documentation/api/updates/eo"> 
  <link rel="alternate" hreflang="es" href="https://www.themoviedb.org/documentation/api/updates/es"> 
  <link rel="alternate" hreflang="eu" href="https://www.themoviedb.org/documentation/api/updates/eu"> 
  <link rel="alternate" hreflang="fa" href="https://www.themoviedb.org/documentation/api/updates/fa"> 
  <link rel="alternate" hreflang="fi" href="https://www.themoviedb.org/documentation/api/updates/fi"> 
  <link rel="alternate" hreflang="fr" href="https://www.themoviedb.org/documentation/api/updates/fr"> 
  <link rel="alternate" hreflang="he" href="https://www.themoviedb.org/documentation/api/updates/he"> 
  <link rel="alternate" hreflang="hi" href="https://www.themoviedb.org/documentation/api/updates/hi"> 
  <link rel="alternate" hreflang="hu" href="https://www.themoviedb.org/documentation/api/updates/hu"> 
  <link rel="alternate" hreflang="id" href="https://www.themoviedb.org/documentation/api/updates/id"> 
  <link rel="alternate" hreflang="it" href="https://www.themoviedb.org/documentation/api/updates/it"> 
  <link rel="alternate" hreflang="ja" href="https://www.themoviedb.org/documentation/api/updates/ja"> 
  <link rel="alternate" hreflang="ka" href="https://www.themoviedb.org/documentation/api/updates/ka"> 
  <link rel="alternate" hreflang="kn" href="https://www.themoviedb.org/documentation/api/updates/kn"> 
  <link rel="alternate" hreflang="ko" href="https://www.themoviedb.org/documentation/api/updates/ko"> 
  <link rel="alternate" hreflang="nb" href="https://www.themoviedb.org/documentation/api/updates/nb"> 
  <link rel="alternate" hreflang="nl" href="https://www.themoviedb.org/documentation/api/updates/nl"> 
  <link rel="alternate" hreflang="ml" href="https://www.themoviedb.org/documentation/api/updates/ml"> 
  <link rel="alternate" hreflang="no" href="https://www.themoviedb.org/documentation/api/updates/no"> 
  <link rel="alternate" hreflang="pl" href="https://www.themoviedb.org/documentation/api/updates/pl"> 
  <link rel="alternate" hreflang="pt" href="https://www.themoviedb.org/documentation/api/updates/pt"> 
  <link rel="alternate" hreflang="ro" href="https://www.themoviedb.org/documentation/api/updates/ro"> 
  <link rel="alternate" hreflang="ru" href="https://www.themoviedb.org/documentation/api/updates/ru"> 
  <link rel="alternate" hreflang="sk" href="https://www.themoviedb.org/documentation/api/updates/sk"> 
  <link rel="alternate" hreflang="sl" href="https://www.themoviedb.org/documentation/api/updates/sl"> 
  <link rel="alternate" hreflang="sr" href="https://www.themoviedb.org/documentation/api/updates/sr"> 
  <link rel="alternate" hreflang="sv" href="https://www.themoviedb.org/documentation/api/updates/sv"> 
  <link rel="alternate" hreflang="ta" href="https://www.themoviedb.org/documentation/api/updates/ta"> 
  <link rel="alternate" hreflang="te" href="https://www.themoviedb.org/documentation/api/updates/te"> 
  <link rel="alternate" hreflang="th" href="https://www.themoviedb.org/documentation/api/updates/th"> 
  <link rel="alternate" hreflang="tr" href="https://www.themoviedb.org/documentation/api/updates/tr"> 
  <link rel="alternate" hreflang="uk" href="https://www.themoviedb.org/documentation/api/updates/uk"> 
  <link rel="alternate" hreflang="vi" href="https://www.themoviedb.org/documentation/api/updates/vi"> 
  <link rel="alternate" hreflang="zh" href="https://www.themoviedb.org/documentation/api/updates/zh"> 
  <script src="https://www.themoviedb.org/assets/static_cache/08bc2b82385dfd23a787f85d2b706d93/javascripts/lazysizes.min.js" async></script> 
  <script src="https://www.themoviedb.org/assets/static_cache/4f252523d4af0b478c810c2547a63e19/javascripts/jquery-1.12.4.min.js"></script> 
  <script src="https://www.themoviedb.org/multi_assets/static_cache/javascripts/b494ac083f297682e1c9d9f3f744ca1a.js"></script> 
  <script>
      

      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-5QWVXV');
    </script> 
 </head> 
 <body class="es v4 preload"> 
  <noscript>
   <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5QWVXV" height="0" width="0" style="display:none;visibility:hidden"></iframe>
  </noscript> 
  <div class="page_wrap _wrap"> 
   <header class="normal"> 
    <div class="content"> 
     <div class="sub_media"> 
      <ul class="small right"> 
       <li><a href="/apps?language=es">Aplicaciones</a></li> 
       <li><a href="/discuss?language=es">Foros</a></li> 
       <li><a href="/leaderboard?language=es">Clasificación</a></li> 
       <li><a href="/contribute?language=es">Contribuir</a></li> 
       <li><a href="/documentation/api?language=es">API</a></li> 
       <li><a href="/talk?language=es">Soporte</a></li> 
      </ul> 
      <div class="left"> 
       <ul class="primary"> 
        <li class="logo"> <a href="/?language=es"> <img width="91" height="81" src="https://www.themoviedb.org/assets/static_cache/41bdcf10bbf6f84c0fc73f27b2180b95/images/v4/logos/91x81.png" srcset="https://www.themoviedb.org/assets/static_cache/41bdcf10bbf6f84c0fc73f27b2180b95/images/v4/logos/91x81.png 1x, https://www.themoviedb.org/assets/static_cache/8ce4f6ee3ea26190a7f21d1f9e7e9be2/images/v4/logos/182x162.png 2x, https://www.themoviedb.org/assets/static_cache/fe24da13912db728dbce09807b10832e/images/v4/logos/273x243.png 3x"> </a> </li> 
        <li> <a href="/discover?language=es">Descubre</a> 
         <ul class="sub_menu discover hide"> 
          <li><a href="/discover/movie?language=es">Movies</a></li> 
          <li><a href="/discover/tv?language=es">Series</a></li> 
         </ul> </li> 
        <li> <a href="/movie?language=es">Películas</a> 
         <ul class="sub_menu movie hide"> 
          <li><a href="/movie?language=es">Popular</a></li> 
          <li><a href="/movie/top-rated?language=es">Mejor Valoradas</a></li> 
          <li><a href="/movie/upcoming?language=es">Próximamente</a></li> 
          <li><a href="/movie/now-playing?language=es">En Cartelera Hoy</a></li> 
         </ul> </li> 
        <li> <a href="/tv?language=es">Series</a> 
         <ul class="sub_menu tv hide"> 
          <li><a href="/tv?language=es">Popular</a></li> 
          <li><a href="/tv/top-rated?language=es">Mejor Valoradas</a></li> 
          <li><a href="/tv/on-the-air?language=es">En Televisión</a></li> 
          <li><a href="/tv/airing-today?language=es">Se Emiten Hoy</a></li> 
         </ul> </li> 
        <li> <a href="/person?language=es">Gente</a> 
         <ul class="sub_menu person hide"> 
          <li><a href="/person?language=es">Gente Popular</a></li> 
         </ul> </li> 
       </ul> 
      </div> 
      <div class="right"> 
       <ul class="primary"> 
        <li> 
         <div class="glyph_wrapper"> 
          <a class="glyph new_icon no_click" href="#"> <span class="glyphicons glyphicons-plus"></span> 
           <div class="rollover"> 
            <p>Can't find a movie or TV show? Login to create it.</p> 
           </div> </a> 
         </div> </li> 
        <li class="glyph translate"></li> 
        <li><a href="/login?language=es">Acceder</a></li> 
        <li><a href="/account/signup?language=es">Registrarse</a></li> 
       </ul> 
      </div> 
     </div> 
    </div> 
    <div class="search_bar"> 
     <section class="search"> 
      <div class="sub_media"> 
       <form id="search_form" action="/search?language=es" method="get" accept-charset="utf-8"> 
        <input type="hidden" name="language" value="es-ES"> 
        <input dir="auto" id="search_v4" name="query" type="text" tabindex="2" autocorrect="off" autofill="off" autocomplete="off" spellcheck="false" placeholder="Buscar por película, serie, persona" value=""> 
        <input type="submit"> 
       </form> 
      </div> 
     </section> 
    </div> 
   </header> 
   <main id="main" class=""> 
    <div class="media"> 
     <section class="main_content"> 
      <nav> 
       <ul> 
        <li> <a class="account" href="/about/our-history" title="Acerca TMDb">Acerca TMDb</a> 
         <ul class="sub_nav hide"> 
          <li><a href="/about/our-history">Nuestra Historia</a></li> 
          <li><a href="/about/staying-in-touch">Mantente en Contacto</a></li> 
          <li><a href="/about/logos-attribution">Logos &amp; Atribución</a></li> 
         </ul> </li> 
        <li> <a class="account" href="/apps" title="Aplicaciones">Aplicaciones</a> </li> 
        <li> <a class="account active" href="/documentation/api" title="API">API</a> 
         <ul class="sub_nav show"> 
          <li><a href="/documentation/api">General</a></li> 
          <li><a href="/documentation/api/updates">Actualizaciones de API</a></li> 
          <li><a href="/documentation/api/discover">Descubrir ejemplos</a></li> 
          <li><a href="/documentation/api/sessions">Sesiones</a></li> 
          <li><a href="/documentation/api/status-codes">Códigos de Estado</a></li> 
          <li><a href="https://www.themoviedb.org/talk/category/5047958519c29526b50017d6">Soporte</a></li> 
          <li><a href="/documentation/api/terms-of-use">Términos de Uso</a></li> 
          <li><a href="/documentation/api/wrappers-libraries">Wrappers &amp; Librerías</a></li> 
         </ul> </li> 
        <li> <a class="account" href="/documentation/community/guidelines" title="Guías maestras de la Comunidad">Guías maestras de la Comunidad</a> </li> 
        <li> <a class="account" href="/documentation/editing" title="Edición de Contenido">Edición de Contenido</a> 
         <ul class="sub_nav hide"> 
          <li><a href="/documentation/editing">General</a></li> 
          <li><a href="/documentation/editing/collections">Colecciones</a></li> 
          <li><a href="/documentation/editing/images">Imágenes</a></li> 
          <li><a href="/documentation/editing/lists">Listas</a></li> 
          <li><a href="/documentation/editing/movies">Películas</a></li> 
          <li><a href="/documentation/editing/people">Gente</a></li> 
          <li><a href="/documentation/editing/television">Televisión</a></li> 
          <li><a href="/documentation/editing/videos">Vídeos</a></li> 
         </ul> </li> 
        <li> <a class="account" href="/faq/general" title="FAQ">FAQ</a> 
         <ul class="sub_nav hide"> 
          <li><a href="/faq/general">General</a></li> 
          <li><a href="/faq/account">Cuenta</a></li> 
          <li><a href="/faq/api">API</a></li> 
          <li><a href="/about/logos-attribution">Logos &amp; Atribución</a></li> 
          <li><a href="/faq/website">Sitio Web</a></li> 
         </ul> </li> 
       </ul> 
      </nav> 
      <section class="content convert_emoji"> 
       <h2>Resolved / In Progress Issues</h2> 
       <p>You can view the tickets that are logged, in progress and completed by viewing our <a href="https://tmdb.lighthouseapp.com/projects/83077-api/tickets/bins/508559" title="Tickets - API - tmdb" target="_blank" rel="noopener">Lighthouse page</a>.</p> 
       <ul class="tickets"> 
        <!-- cache fragment: 8ec695b380fe23e02833a481ce57b207 cached at 2017-09-17 07:57:50 will expire at 2017-09-18 07:57:50 --> 
        <h3 class="category">Icebox</h3> 
        <li>2017-08-22 - (576) - The movie api people search via imdb id</li> 
        <li>2017-03-13 - (406) - Add support for discover to query by spoken language</li> 
        <li>2015-06-12 - (474) - can`t find the api form</li> 
        <li>2015-03-18 - (293) - 3/search/movie sort by</li> 
        <li>2015-02-26 - (463) - I can't request API key</li> 
        <li>2013-12-16 - (327) - get /tv/ by extra id</li> 
        <li>2013-06-10 - (14) - Person search by occupation type</li> 
        <li>2013-06-10 - (161) - Via Tender: v3 API errors when queries are double encoded</li> 
        <li>2013-06-10 - (133) - Via Tender: language query should include null and empty values in the result</li> 
        <li>2013-06-10 - (93) - Via Tender: Collection name sort_field</li> 
        <li>2013-04-18 - (137) - Via Tender: API v3 movie search with plots</li> 
        <li>2013-04-18 - (85) - Via Tender: [v3] API request limits</li> 
        <li>2013-04-18 - (100) - Via Tender: APIv3: MovieInfo method with multiple id</li> 
        <li>2013-04-18 - (102) - Via Tender: Return Apple "plist" format?</li> 
        <li>2012-12-19 - (60) - Via Tender: Identify movies by barcode</li> 
        <li>2012-10-18 - (59) - Via Tender: Create a /3/browse/movie method</li> 
        <li>2012-07-23 - (48) - Via Tender: Search paging session</li> 
        <li>2012-07-23 - (98) - Via Tender: Genres.getList/URL is wrong</li> 
        <li>2012-07-23 - (4) - Person.search doesn’t filter adult actors by default</li> 
        <li>2012-07-23 - (5) - Movie methods return the language the media was created as and not what you're requested</li> 
        <li>2012-07-23 - (8) - Fix Media.getInfo</li> 
        <li>2012-07-23 - (11) - JSON encoding bug</li> 
        <li>2012-07-23 - (15) - Via Tender: Language code for API</li> 
        <li>2012-07-23 - (28) - Via Tender: Movie.browse image filter?</li> 
        <li>2012-07-23 - (29) - Via Tender: Add runtime to Movie.browse</li> 
        <li>2012-07-23 - (67) - Via Tender: English posters or Images in wrong languages</li> 
        <li>2012-04-10 - (9) - API ‘2.2’ discussion points</li> 
        <h3 class="category">Captain America</h3> 
        <li>2017-08-18 - (466) - Please delete this duplicate keyword</li> 
        <li>2017-07-21 - (552) - Getting movies a person is known for cannot be appended to response</li> 
        <li>2017-07-21 - (418) - Look into replicating some (all?) of the standard person list responses for person credits</li> 
        <li>2017-07-21 - (316) - Look into replicating some (all?) of the standard movie list responses for movie credits</li> 
        <li>2017-04-20 - (547) - Removing an item from a list isn't updating the stats</li> 
        <li>2017-04-18 - (529) - Add Access-Control-Expose-Headers for rate limit headers?</li> 
        <li>2017-02-02 - (546) - Add without_keywords filter to discover</li> 
        <li>2017-02-01 - (541) - Collections aren't always showing their parts</li> 
        <li>2016-12-05 - (464) - Add the ability to specify an with_original_language in search (or discover?)</li> 
        <li>2016-11-29 - (530) - Support geolocation for region/locale discover</li> 
        <li>2016-11-29 - (176) - Support locale specific lists (like now playing &amp; upcoming)</li> 
        <li>2016-10-18 - (359) - Creating the first list in a brand new account</li> 
        <li>2016-10-18 - (369) - Why are nil items being returned in our Solr queries?</li> 
        <li>2016-10-18 - (410) - Add a ?sort_by=original_title param to discover</li> 
        <li>2016-10-18 - (445) - 'primary_release_year' filter isn't working on discover</li> 
        <li>2016-10-18 - (500) - Add runtime as a filter to discover TV series</li> 
        <li>2016-10-18 - (539) - Allow the inclusion of null release/air dates in discover</li> 
        <li>2016-10-18 - (538) - Discover 500's with `with_genres`</li> 
        <li>2016-10-17 - (537) - Discover `with_people` isn't working</li> 
        <li>2016-10-17 - (490) - Add runtime as a filter to discover for movies</li> 
        <li>2016-10-17 - (331) - Add the ability to exclude genres from the discover method</li> 
        <li>2016-09-29 - (473) - Bring the new "recommended" system to the API</li> 
        <li>2016-09-20 - (413) - Allow viewing a users lists</li> 
        <li>2016-09-20 - (528) - Image language query not returning proper data</li> 
        <li>2016-09-20 - (535) - Implement new auth for v4</li> 
        <li>2016-09-20 - (534) - Implement v4 lists </li> 
        <li>2016-04-25 - (527) - Properly return translated genres on TV series</li> 
        <li>2016-04-25 - (526) - Properly typecast external ids</li> 
        <li>2016-04-13 - (525) - Fix missing videos on TV series/seasons/episodes</li> 
        <li>2016-03-14 - (523) - Add social links to person external ids</li> 
        <li>2016-03-14 - (522) - Add gender field to people</li> 
        <h3 class="category">Outlander</h3> 
        <li>2017-07-21 - (227) - Create a /person/known_for method</li> 
        <li>2014-10-27 - (423) - Remove object_id methods</li> 
        <li>2014-10-23 - (422) - Properly sort multi value date fields by earliest date</li> 
        <li>2014-10-22 - (421) - Migrate featured TV lists to ES</li> 
        <li>2014-10-16 - (417) - Enhance the discover methods</li> 
        <li>2014-10-16 - (420) - Restore the ability to sort discover results by release_date.desc/asc</li> 
        <li>2014-10-15 - (419) - Migrate featured lists to ES</li> 
        <li>2014-10-08 - (258) - Add primary_release_date param to discover</li> 
        <li>2014-10-02 - (416) - Properly 404 when requesting seasons to series that don't exist</li> 
        <li>2014-10-02 - (415) - Fix the NoMethodError on /find</li> 
        <li>2014-10-02 - (411) - Look into a 'complete season' like call</li> 
        <h3 class="category">Nightcrawler</h3> 
        <li>2016-01-26 - (514) - Move movie search to Lua</li> 
        <h3 class="category">21 Jump Street</h3> 
        <li>2015-07-13 - (506) - Collection search isn't working</li> 
        <li>2015-07-13 - (432) - v2 API Analytics</li> 
        <li>2015-07-12 - (505) - Re-factor API metrics</li> 
        <li>2015-07-10 - (504) - Re-factor poster cache</li> 
        <h3 class="category">Jurassic World</h3> 
        <li>2015-06-30 - (498) - Optimize append_to_response</li> 
        <li>2015-06-24 - (496) - Using account_states with `append_to_response` on TV series/season/episode doesn't work</li> 
        <li>2015-06-24 - (457) - Properly handle int out of range errors</li> 
        <li>2015-06-24 - (499) - Catch false keys form Memcached</li> 
        <li>2015-06-19 - (487) - Allow a user to remove their rating</li> 
        <li>2015-06-18 - (495) - /account/{id}/rated/tv/episodes sometimes errors</li> 
        <li>2015-06-18 - (494) - Some image responses have an erroneous id field</li> 
        <li>2015-06-18 - (483) - Add 'original_language' to TV series list items</li> 
        <li>2015-06-18 - (484) - Add overviews as part of the standard TV result objects</li> 
        <li>2015-06-05 - (491) - Add air_date filters to TV discover</li> 
        <li>2015-06-03 - (489) - Restore language support on the movie popular, now playing, upcoming and top rated methods</li> 
        <h3 class="category">Marvel's Daredevil</h3> 
        <li>2015-05-29 - (485) - Add genre_ids to movie result objects</li> 
        <li>2015-05-28 - (394) - Add overviews as part of the standard movie result objects</li> 
        <li>2015-05-28 - (481) - Add 'original_language' to movie list items?</li> 
        <li>2015-05-21 - (343) - Add CORS headers for image requests</li> 
        <li>2015-05-19 - (356) - Implement RFC6585 Section-4 for Rate Limiting</li> 
        <li>2015-05-19 - (480) - Add support for configuring the Redis pool size in the rate limiter</li> 
        <li>2015-05-15 - (479) - Problems with NaN values in api results</li> 
        <h3 class="category">Fast and Furious</h3> 
        <li>2015-02-25 - (462) - Block keys longer than 32 chars from being tracked via analytics</li> 
        <li>2015-02-25 - (434) - Add primary field to releases</li> 
        <li>2015-02-25 - (461) - Add OPTIONS support to the account controller</li> 
        <li>2015-02-25 - (431) - Add the ability to get an accounts rated episodes</li> 
        <li>2015-02-24 - (460) - The page field isn't updating on searches</li> 
        <li>2015-02-23 - (442) - Return Gravatar hash in the account details method</li> 
        <li>2015-02-23 - (459) - Properly handle missing parent items for TV episodes</li> 
        <li>2015-02-23 - (458) - Catch null ids on the change methods</li> 
        <li>2015-02-20 - (454) - Handle 400 bad request errors from ES</li> 
        <li>2015-02-19 - (456) - Fix some of the invalid ID errors</li> 
        <li>2015-02-10 - (450) - Properly throw error when specifying an invalid timezone</li> 
        <li>2015-02-10 - (446) - Don't cache the /tv/airing_today pages</li> 
        <li>2015-02-10 - (455) - Handle null filter queries in ES</li> 
        <li>2015-02-09 - (453) - Fix keyword movie lookups</li> 
        <li>2015-02-09 - (452) - Fix genre movie lookups</li> 
        <li>2015-02-09 - (451) - Fix company movie lookups</li> 
        <h3 class="category">Jarhead</h3> 
        <li>2015-01-30 - (448) - Fix potential race condition on the tv/movie certification methods</li> 
        <li>2015-01-12 - (318) - Add keyword support to the discover method</li> 
        <li>2015-01-02 - (438) - Add a alternative titles method for TV</li> 
        <li>2015-01-02 - (439) - Add an episode count to the season list on the /tv/{id} method</li> 
        <li>2015-01-02 - (440) - Add the "show type" to the /tv/{id} method</li> 
        <li>2015-01-02 - (433) - Add a "original_language" field to the "/movie/{id}" method</li> 
        <h3 class="category">Dawn of the Planet of the Apes </h3> 
        <li>2014-12-18 - (427) - Allow the inclusion (or exclusion) of videos in discover &amp; featured lists</li> 
        <li>2014-12-18 - (428) - Add a video field to the movie response</li> 
        <li>2014-12-18 - (436) - Make sure genre/list only returns the canonical genres</li> 
        <h3 class="category">Neighbors</h3> 
        <li>2014-11-21 - (430) - Fix undefined method error on person find calls</li> 
        <li>2014-11-14 - (429) - Fix errors when using an invalid sort option for TV discover</li> 
        <li>2014-11-14 - (425) - TV top rated isn't paginating properly</li> 
        <li>2014-11-14 - (426) - TV top rated isn't respecting the language param properly</li> 
        <li>2014-11-05 - (399) - Add a method for TV certifications</li> 
        <li>2014-11-05 - (424) - Popular person call is not respecting page values</li> 
        <h3 class="category">Ocean's Thirteen</h3> 
        <li>2014-11-08 - (301) - Search for TvSeries by external ids</li> 
        <li>2013-12-03 - (317) - Fix MultiJson::LoadError</li> 
        <li>2013-12-02 - (271) - Create a way to query for all images with the append_to_response parameter</li> 
        <li>2013-11-18 - (311) - Create a /tv/:id/translations method</li> 
        <li>2013-11-05 - (272) - Filter out nil items from result lists</li> 
        <li>2013-11-05 - (310) - Create the /tv/top-rated method</li> 
        <li>2013-11-05 - (309) - Create the /tv/popular method</li> 
        <li>2013-11-05 - (294) - Create the /discover/tv method</li> 
        <li>2013-11-05 - (295) - Create the /tv/networks method</li> 
        <li>2013-11-04 - (308) - Create a /credit end point</li> 
        <li>2013-11-04 - (296) - Link up TV credits on people</li> 
        <li>2013-11-02 - (307) - Person profile images aren't showing</li> 
        <li>2013-11-01 - (306) - Update the movie image queries</li> 
        <li>2013-11-01 - (305) - Translation cache isn't populating after a version change</li> 
        <li>2013-11-01 - (304) - Rename the TV character_name field to character to keep it consistent with movies</li> 
        <li>2013-10-31 - (299) - Add the type field to trailer the response</li> 
        <li>2013-10-31 - (303) - Alias movie casts to credits and make it the primary call</li> 
        <li>2013-10-31 - (292) - Create a TV season level credits method</li> 
        <li>2013-10-31 - (302) - Rename sort_order to order to match the movie credit order field</li> 
        <li>2013-10-24 - (291) - Create a TV search method</li> 
        <li>2013-10-23 - (287) - Create TV season images method</li> 
        <li>2013-10-23 - (290) - Create the tv series/season/episode external ids methods</li> 
        <li>2013-10-23 - (286) - Create TV series images method</li> 
        <li>2013-10-23 - (288) - Create TV episode images method</li> 
        <li>2013-10-23 - (289) - Make sure Cast/Crew/CreatedBy credits are deleted when a person is</li> 
        <li>2013-10-23 - (280) - Make sure last_air_date gets set when a show is set to cancelled/ended</li> 
        <li>2013-10-23 - (282) - Make sure that first_air_date gets set when season 1, episode 1 gets added</li> 
        <li>2013-10-22 - (284) - Create TV episode primary info method</li> 
        <li>2013-10-22 - (283) - Create TV season primary info method</li> 
        <li>2013-10-22 - (285) - Create a TV episode credits method</li> 
        <li>2013-10-22 - (261) - Create the TV series primary info method</li> 
        <li>2013-10-22 - (281) - Create TV series credits call</li> 
        <li>2013-10-11 - (277) - Look into why the Redis memory usage is climbing so fast</li> 
        <li>2013-10-11 - (276) - Person calls have stopped returning their IMDB ID</li> 
        <h3 class="category">Sin City: A Dame to Kill For</h3> 
        <li>2014-09-22 - (409) - Add origin country field to standard list results </li> 
        <li>2014-09-22 - (412) - Add production companies to TV series response</li> 
        <li>2014-09-22 - (408) - Return `first_air_date` in crew responses like we do in cast</li> 
        <li>2014-09-22 - (405) - Creating new lists seems to fail when it should work</li> 
        <li>2014-09-22 - (414) - Migrate person searches to ES</li> 
        <h3 class="category">Judge Dredd</h3> 
        <li>2014-09-04 - (380) - External ID search doesn't always seem to work for episodes</li> 
        <li>2014-07-31 - (265) - Account movies aren't always returned in the same order</li> 
        <h3 class="category">Jumper</h3> 
        <li>2014-06-23 - (403) - Add account_states method to TV episodes</li> 
        <li>2014-06-23 - (402) - Add account_states method to TV shows</li> 
        <li>2014-06-23 - (391) - Add episode ids to episode hashes</li> 
        <li>2014-06-23 - (392) - Add season id's to season hashes</li> 
        <li>2014-06-23 - (298) - Create the method to list TV genres</li> 
        <li>2014-06-20 - (400) - Create a multi search method</li> 
        <h3 class="category">Manhattan</h3> 
        <li>2014-05-27 - (398) - Create a way to view all of the tagged people in backdrops</li> 
        <li>2014-05-16 - (390) - Fix the /tv/change method from randomly returning a 404</li> 
        <li>2014-05-16 - (389) - Update New Relic</li> 
        <li>2014-05-12 - (297) - Hook up the change methods to TV series/seasons/episodes</li> 
        <h3 class="category">AVP: Alien vs. Predator</h3> 
        <li>2014-05-02 - (337) - Add a similar method to tv shows</li> 
        <li>2014-04-30 - (336) - Add a /tv/keywords method</li> 
        <li>2014-04-28 - (387) - Add the ability to add TV shows to your watchlist/favourite lists</li> 
        <li>2014-04-28 - (385) - Allow posting a rating to a TV series and episode</li> 
        <li>2014-04-28 - (386) - Expose OPTIONS end points for remote JS cross domain calls</li> 
        <li>2014-04-25 - (383) - Make sure to throw a proper error if someone tries to post an invalid rating</li> 
        <li>2014-04-25 - (384) - Pagination counts aren't consistent</li> 
        <li>2014-04-21 - (382) - Hookup the account rated TV series method</li> 
        <li>2014-04-08 - (379) - Create a list of valid TV show certifications</li> 
        <li>2014-04-04 - (378) - Create new video method for movies</li> 
        <li>2014-04-02 - (377) - Properly calculate the 'number_of_episodes' on a TV series</li> 
        <li>2014-04-02 - (376) - Properly calculate the 'number_of_seasons' on a TV series</li> 
        <h3 class="category">Magnolia</h3> 
        <li>2014-03-31 - (374) - Create a 'certification=` param for the movie discover method</li> 
        <li>2014-03-31 - (373) - Add a video endpoint to TV episodes</li> 
        <li>2014-03-31 - (372) - Add a video endpoint to TV seasons</li> 
        <li>2014-03-31 - (371) - Add a video endpoint to TV series</li> 
        <li>2014-03-26 - (370) - Account and guest session order_by doesn't always work</li> 
        <li>2014-03-26 - (363) - Create auth workflow to login via the API with a username and password</li> 
        <li>2014-03-26 - (358) - Improve authentication API</li> 
        <li>2014-03-26 - (354) - Allow guest sessions to pull a list of their rated movies</li> 
        <li>2014-03-26 - (362) - Expose the w780 poster width?</li> 
        <li>2014-03-26 - (368) - Having both ?language and ?include_image_language doesn't seem to be returning the right results</li> 
        <li>2014-03-24 - (357) - Add the ability to clear a list via the API</li> 
        <li>2014-03-21 - (364) - Add timezone support to the /tv/airing_today method</li> 
        <li>2014-03-21 - (367) - Create a timezone list method</li> 
        <li>2014-03-20 - (365) - Investigate Russian blocking trouble</li> 
        <li>2014-03-18 - (355) - Limit the number of append_to_response objects</li> 
        <li>2014-03-18 - (366) - Return proper status code 10 when an API key is suspended</li> 
        <li>2014-03-17 - (352) - Add a list of status codes to the documentation</li> 
        <h3 class="category">Frozen</h3> 
        <li>2014-03-11 - (333) - Create a certification list to show the valid certifications</li> 
        <li>2014-03-11 - (351) - Limit pages on Solr requests (top rated, popular, now playing, upcoming)</li> 
        <li>2014-03-11 - (360) - Cleanup person credit lookups</li> 
        <li>2014-03-08 - (353) - Add credit_id field to relevant cast and crew responses</li> 
        <li>2014-03-04 - (332) - Fix the find method so it works with Freebase IDs</li> 
        <li>2014-03-04 - (350) - Create a person external_ids method</li> 
        <li>2014-02-07 - (348) - Add vote_count and vote_average to person images</li> 
        <li>2014-02-03 - (349) - TV crew credits don't have a credit_id</li> 
        <h3 class="category">J. Edgar</h3> 
        <li>2014-03-11 - (339) - Enable username and password logins via the API</li> 
        <li>2014-01-27 - (338) - TV image sizes seem to be floats while Movie images seem to be integers?</li> 
        <li>2014-01-27 - (346) - Nginx isn't returning 304 statuses anymore</li> 
        <li>2014-01-27 - (347) - Vote averages on TV are not rounding</li> 
        <li>2014-01-27 - (345) - Catch invalid date erros</li> 
        <li>2014-01-27 - (313) - Create the /tv/airing_today method</li> 
        <li>2014-01-27 - (312) - Create the /tv/on_the_air method</li> 
        <h3 class="category">Dirty Harry</h3> 
        <li>2013-12-20 - (330) - Move ratings to use a background job</li> 
        <li>2013-12-17 - (329) - Lower the default cache time to 6 hours</li> 
        <li>2013-12-17 - (328) - Allow more than 15 days worth of change entries via a private URL/specific API key</li> 
        <li>2013-12-11 - (326) - White list valid discovers</li> 
        <li>2013-12-11 - (325) - White list valid searches</li> 
        <li>2013-12-10 - (324) - Make sure the TV season image call works with ?include_image_language</li> 
        <li>2013-12-10 - (323) - Cache invalid search calls</li> 
        <li>2013-12-10 - (274) - Ensure calls to invalid ids don't get cached</li> 
        <li>2013-12-10 - (322) - Memoize the configuration method</li> 
        <li>2013-12-10 - (300) - Ensure 404 items get a proper not found response</li> 
        <li>2013-12-10 - (314) - Create a /tv/latest method</li> 
        <li>2013-12-10 - (321) - Fix the NoMethodError: undefined method on the latest calls</li> 
        <li>2013-12-06 - (320) - Lower the Solr connect and read timeout values</li> 
        <li>2013-12-05 - (319) - Fix the undefined method `poster' error</li> 
        <h3 class="category">The Avengers</h3> 
        <li>2013-09-18 - (269) - Migrate Sunspot indexing code to the new batch system</li> 
        <h3 class="category">Jumanji</h3> 
        <li>2013-06-28 - (264) - POST invalid rating doesn't use standard error response</li> 
        <li>2013-06-28 - (263) - Now playing &amp; upcoming haven't updated</li> 
        <li>2013-06-25 - (262) - List items aren't being returned</li> 
        <li>2013-06-07 - (250) - Searches ending with a digit fail using ngram</li> 
        <li>2013-06-07 - (259) - Switch memcached servers, update Dalli</li> 
        <li>2013-06-05 - (257) - Boot person results by the actual popularity value</li> 
        <li>2013-06-03 - (256) - Fix certification.lte error when an invalid certification is specified.</li> 
        <li>2013-06-03 - (189) - Support custom ordering on movie lists (genres, upcoming etc…)</li> 
        <li>2013-06-03 - (254) - Add a method to check the status of a movie id within a list</li> 
        <li>2013-06-03 - (255) - Update Mongo driver to 1.8.6</li> 
        <li>2013-06-03 - (253) - Add and fix the pagination on lists</li> 
        <h3 class="category">Moon</h3> 
        <li>2013-05-28 - (252) - Migrate company and keyword movie lookups to the new search model</li> 
        <li>2013-05-27 - (249) - Ad MediaSlug to UserRatings</li> 
        <li>2013-05-27 - (248) - Add media_slug to AccountListItems</li> 
        <li>2013-05-27 - (247) - Migrate the /list/movies method to use the new model</li> 
        <li>2013-05-24 - (246) - Fix pagination on the /popular/person call</li> 
        <li>2013-05-24 - (245) - Update 2.1 deprecation notice</li> 
        <li>2013-05-22 - (244) - Fix invalid UTF-8 errors</li> 
        <li>2013-05-22 - (243) - Migrate genre movie call to the new model</li> 
        <li>2013-05-21 - (242) - Migrate top rated to the new model</li> 
        <li>2013-05-17 - (240) - Re-factor the similar movie call to use the new movie model</li> 
        <li>2013-05-17 - (239) - Re-facor the now playing and upcoming methods</li> 
        <li>2013-05-16 - (238) - Re-factor the popular movie call to use the new models</li> 
        <li>2013-05-16 - (237) - Fix empty query pagination errors</li> 
        <li>2013-05-16 - (236) - Fix guest session creation</li> 
        <li>2013-05-15 - (232) - Movie info can sometimes return null genre ids</li> 
        <li>2013-05-15 - (235) - Restore the original 2.1 search with years behaviour</li> 
        <li>2013-05-15 - (109) - Via Tender: API key limits</li> 
        <li>2013-05-15 - (73) - Via Tender: API v3 formal specification</li> 
        <li>2013-05-15 - (156) - Via Tender: Authentication redirect</li> 
        <li>2013-05-15 - (115) - Via Tender: Query order by release</li> 
        <li>2013-05-15 - (158) - Via Tender: Similar Movie: Error 500</li> 
        <li>2013-05-15 - (168) - Search pagination / items count is wrong</li> 
        <li>2013-05-15 - (150) - Via Tender: Query movies by release date range?</li> 
        <li>2013-05-15 - (155) - Via Tender: Improve API Search</li> 
        <li>2013-05-15 - (90) - Via Tender: Search People Method returns less number of search result</li> 
        <li>2013-05-15 - (233) - Discover release_date.gte and release_date.lte don't seem to filter properly</li> 
        <li>2013-05-15 - (225) - Add overview to collections</li> 
        <li>2013-05-15 - (234) - Add a certification list method</li> 
        <li>2013-05-09 - (231) - Fix WillPaginate::InvalidPage: 0 errors</li> 
        <li>2013-05-09 - (230) - Fix the undefined method `hits' for []:Array errors on search</li> 
        <li>2013-05-09 - (229) - Ensure the highest rated poster is being returned in search results</li> 
        <li>2013-05-09 - (228) - Restore the ability include adult items in searches</li> 
        <li>2013-05-07 - (92) - Via Tender: Unusual search behavior</li> 
        <li>2013-05-07 - (132) - Via Tender: Replace German umlaute like ä ü ö ae ue oe</li> 
        <li>2013-05-07 - (87) - Via Tender: API v3 browse feature request</li> 
        <h3 class="category">American Beauty</h3> 
        <li>2013-04-19 - (226) - Fix the invalid byte sequence in UTF-8 errors</li> 
        <li>2013-04-18 - (101) - Via Tender: add trailer to v3 movie info</li> 
        <li>2013-04-18 - (154) - Via Tender: Get user's movie rating while getting movie info</li> 
        <li>2013-04-18 - (224) - Create a movie review method</li> 
        <li>2013-04-17 - (200) - Create a review GET method</li> 
        <li>2013-04-17 - (221) - Content type header validation should allow utf-8 text to pass</li> 
        <li>2013-04-10 - (223) - Remove the X-Content-Type-Options: nosniff header</li> 
        <li>2013-04-09 - (222) - Movie counts on lists gets out of sync</li> 
        <li>2013-04-02 - (219) - Top rated pagination is reporting some incorrect values</li> 
        <li>2013-04-02 - (218) - Searching lists is broken</li> 
        <h3 class="category">Memento</h3> 
        <li>2013-03-27 - (217) - Upgrade Unicorn</li> 
        <li>2013-03-20 - (216) - Add a method to quickly check if a movie is already rated, a favourite or on the watch list</li> 
        <li>2013-03-19 - (194) - Add methods to create, add items to and delete lists</li> 
        <li>2013-03-19 - (215) - Ensure adult items are also filtered by default on genre movie calls</li> 
        <li>2013-03-19 - (213) - Make sure genre movie lookup only gets movie ids</li> 
        <li>2013-03-19 - (212) - Ensure the language check for genres is lowercase</li> 
        <h3 class="category">Forrest Gump</h3> 
        <li>2013-03-01 - (163) - Via Tender: Job list method</li> 
        <li>2013-03-01 - (211) - Add :popularity_weight to person details</li> 
        <li>2013-03-01 - (209) - Support rated list sorting</li> 
        <li>2013-03-01 - (208) - Support favourite list sorting</li> 
        <li>2013-03-01 - (207) - Support watchlist sorting</li> 
        <li>2013-02-27 - (205) - Migrate popular calls to the new methods</li> 
        <li>2013-02-27 - (206) - Migrate top rated calls to newer method</li> 
        <li>2013-02-27 - (204) - Prevent /latest from caching</li> 
        <li>2013-02-14 - (6) - Expose person IMDB's</li> 
        <li>2013-02-14 - (203) - Update the JSON gem</li> 
        <li>2013-02-14 - (202) - Investigate incorrect list ids being returned by the account list method</li> 
        <h3 class="category">Jack Reacher</h3> 
        <li>2013-01-18 - (199) - Update CloudFront paths</li> 
        <h3 class="category">The Dark Knight</h3> 
        <li>2012-12-21 - (125) - Via Tender: Search for movies by keyword</li> 
        <li>2012-12-21 - (198) - Create keyword methods</li> 
        <li>2012-12-19 - (151) - Via Tender: Add rating doesn't work</li> 
        <li>2012-12-19 - (81) - Create new API documentation for v3</li> 
        <li>2012-12-19 - (143) - Via Tender: Get the list of the latest modified/updated movies</li> 
        <li>2012-12-19 - (159) - Via Tender: Accessing the TMDb API using HTTPS</li> 
        <li>2012-12-19 - (167) - Add SSL support to the API</li> 
        <li>2012-12-18 - (149) - Be able to include all movies on genre lists</li> 
        <li>2012-12-18 - (197) - Fix NoMethodError: undefined method `+'</li> 
        <li>2012-12-18 - (196) - Fix ArgumentError: comparison of Fixnum with nil failed</li> 
        <li>2012-12-18 - (195) - Add a date limit to the change calls and look at some possible query optimizations</li> 
        <li>2012-12-13 - (193) - Fix 2.1 browse RSolr::Error</li> 
        <li>2012-12-13 - (190) - Ratings of 0 can't be updated</li> 
        <li>2012-12-12 - (192) - Update Mongo, MongoMapper and Plucky</li> 
        <li>2012-12-10 - (191) - Add Airbrake to v3</li> 
        <li>2012-12-05 - (188) - Fix broken latest calls</li> 
        <li>2012-12-04 - (187) - Fix an invalid UTF-8 gsub call</li> 
        <li>2012-12-03 - (186) - Upgrade Unicorn</li> 
        <li>2012-12-03 - (173) - The IMDB ID isn't always showing</li> 
        <li>2012-12-03 - (185) - API results get cached without all data present</li> 
        <li>2012-12-03 - (171) - Allow non registered account movie voting</li> 
        <h3 class="category">Never Say Never Again</h3> 
        <li>2012-11-29 - (183) - Investigate how some image calls are being cached with no response</li> 
        <li>2012-11-29 - (177) - Some search queries are throwing a 500 error</li> 
        <li>2012-11-28 - (184) - Restore valid Cache-Control header</li> 
        <li>2012-11-28 - (175) - Allow lists to be searchable</li> 
        <li>2012-11-28 - (174) - Create user list methods</li> 
        <li>2012-11-27 - (182) - Upgrade Dalli</li> 
        <li>2012-11-27 - (181) - Properly set API keys in memcache</li> 
        <li>2012-11-27 - (166) - Add a collection search method</li> 
        <li>2012-11-27 - (180) - Add SSL path to configuration method</li> 
        <li>2012-11-12 - (178) - Add change_keys to the configuration method</li> 
        <li>2012-11-05 - (148) - Investigate ways to combine requests</li> 
        <h3 class="category">Ocean's Twelve</h3> 
        <li>2012-10-24 - (172) - Upgrade Sunspot</li> 
        <li>2012-10-17 - (170) - Make sure language lookups are lowercase</li> 
        <li>2012-10-15 - (152) - Via Tender: Person.getLatest equivalent in v3?</li> 
        <li>2012-10-15 - (157) - Via Tender: Finding movie "status" and "last_modified_at" in API 3</li> 
        <li>2012-10-15 - (165) - Via Tender: Tweak search with colon's</li> 
        <li>2012-10-15 - (160) - Via Tender: Genres field is empty</li> 
        <li>2012-10-09 - (169) - Add some documentation to 2.1 about deprecation</li> 
        <li>2012-10-09 - (27) - Via Tender: batch download/get changes since</li> 
        <h3 class="category">Jerry Maguire</h3> 
        <li>2012-07-26 - (140) - Via Tender: Internal server error for keywords of one movie</li> 
        <li>2012-07-24 - (131) - Via Tender: Create a collection images method</li> 
        <li>2012-07-24 - (124) - Via Tender: 500 Internal Server Error</li> 
        <li>2012-07-23 - (88) - Via Tender: Rambo III - Casts - Internal Server Error</li> 
        <li>2012-07-23 - (94) - Via Tender: Create API methods to get "Opening This Week" or "Coming Soon"</li> 
        <li>2012-07-23 - (19) - Via Tender: plot keywords</li> 
        <li>2012-07-23 - (138) - Via Tender: Problem with movie casts for movie 'Gone' (id 79548)</li> 
        <li>2012-07-23 - (72) - Via Tender: v3 equivalent of Movie.getVersion</li> 
        <li>2012-07-18 - (142) - Calculate the ETag based on certain content and not the entire response</li> 
        <li>2012-07-13 - (139) - Via Tender: Upcoming Movies Method</li> 
        <li>2012-07-13 - (141) - Fix for image calls on nil cast objects</li> 
        <li>2012-07-13 - (129) - Via Tender: Genre list with a language specified errors</li> 
        <li>2012-07-11 - (136) - Via Tender: Add CORS headers for JSON requests</li> 
        <li>2012-07-11 - (135) - Via Tender: Change some method names</li> 
        <li>2012-07-09 - (106) - Via Tender: Wrong Grenre ID (decimal instead of int/long)</li> 
        <li>2012-07-03 - (126) - Via Tender: Etag support for the API</li> 
        <li>2012-07-03 - (127) - Get movies from an accounts watchlist</li> 
        <li>2012-07-03 - (128) - Save movies to an accounts watchlist</li> 
        <h3 class="category">Minority Report</h3> 
        <li>2012-07-23 - (145) - Temp ticket to close the milestone</li> 
        <h3 class="category">Dark City</h3> 
        <li>2012-07-23 - (147) - Temp ticket to close the milestone</li> 
        <li>2011-12-15 - (21) - Via Tender: Add all trailers to Movie.getInfo</li> 
        <li>2011-12-14 - (26) - Via Tender: Alternative titles on the API</li> 
        <li>2011-12-14 - (7) - Open up a 'movie parts' end point</li> 
        <li>2011-12-14 - (1) - Add image languages</li> 
        <li>2011-12-14 - (41) - Create method for /3/search/movies</li> 
        <li>2011-12-14 - (42) - Fix /3/movie/images</li> 
        <li>2011-12-09 - (25) - Work on the new /3 API foundation</li> 
        <li>2011-12-09 - (37) - Create method for /3/movie/keywords</li> 
        <li>2011-12-09 - (38) - Create method for /3/movie/alternative_titles</li> 
        <li>2011-12-09 - (36) - Create method for /3/movie/translations</li> 
        <li>2011-12-09 - (35) - Create method for /3/movie/releases</li> 
        <li>2011-12-09 - (34) - Create method for /3/movie/casts</li> 
        <li>2011-12-09 - (33) - Create method for /3/movie/trailers</li> 
        <li>2011-12-07 - (13) - Create method for /3/collection</li> 
        <li>2011-12-07 - (32) - Create method for /3/movie/images</li> 
        <li>2011-12-06 - (24) - Create method for /3/movie</li> 
        <li>2011-12-06 - (31) - Add belongs_to_collection data to Movie.getInfo</li> 
        <h3 class="category">Night Of The Living Dead</h3> 
        <li>2012-07-23 - (144) - Temp ticket to close the milestone</li> 
        <li>2011-11-29 - (23) - Via Tender: Movie cast images resolution changed</li> 
        <li>2011-11-28 - (10) - Movie.imdbLookup tweaks</li> 
        <li>2011-11-28 - (22) - Via Tender: YAML support in API</li> 
        <li>2011-11-09 - (20) - Maintain a public API change log</li> 
        <li>2011-11-08 - (18) - Movie.getImages needs to be updated</li> 
        <li>2011-11-07 - (2) - Auth.getToken fails when requesting XML</li> 
        <h3 class="category">Fight Club</h3> 
        <li>2012-07-23 - (146) - Temp ticket to close the milestone</li> 
        <li>2012-02-23 - (86) - Via Tender: Don’t default the ?language on image requests</li> 
        <li>2012-02-22 - (46) - Via Tender: Add an adult filter to /3/search/movie</li> 
        <li>2012-02-22 - (84) - Default v3 movie requests to have a ?language param</li> 
        <li>2012-02-21 - (83) - Via Tender: [v3] Latest Movie returns "Internal Server Error"</li> 
        <li>2012-02-16 - (82) - Add v3 method to add new ratings to movies</li> 
        <li>2012-02-13 - (80) - Implement session authentication into v3</li> 
        <li>2012-02-09 - (39) - Via Tender: Auth.getSession error</li> 
        <li>2012-02-09 - (78) - Via Tender: API v3: Interal Server Error when query for titles containing umlauts (äöüß)</li> 
        <li>2012-02-08 - (79) - Use the proper order field on movie casts</li> 
        <li>2012-02-06 - (77) - Via Tender: API v3: Interal Server Error on some trailer queries</li> 
        <li>2012-02-06 - (71) - Via Tender: API v3 - Spoken Languages doesn’t match the website</li> 
        <h3 class="category">Mad Max</h3> 
        <li>2012-07-23 - (16) - Via Tender: Method to provide a list of films/projects by organization</li> 
        <li>2012-03-29 - (95) - Via Tender: Bad results from top-rated query</li> 
        <li>2012-03-28 - (75) - Via Tender: API v3 Get Studios</li> 
        <li>2012-03-28 - (97) - Update existing company calls to use the new ProductionCompany model</li> 
        <li>2012-03-28 - (74) - Via Tender: V2.1 stopped returning new countries in Movie.GetInfo</li> 
        <li>2012-03-27 - (96) - Via Tender: APIv3: Restore the "popularity" field on movie searches</li> 
        <li>2012-03-19 - (30) - Via Tender: API methods for Popular, Top Rated, Now Playing movies</li> 
        <li>2012-03-16 - (91) - Fix Person.search on 2.1</li> 
        <li>2012-03-08 - (3) - Adult searches don't work with the adult param</li> 
        <li>2012-03-02 - (47) - Via Tender: Search paging count issues</li> 
        <h3 class="category">Jackal</h3> 
        <li>2012-06-29 - (123) - Start collecting API key traffic</li> 
        <li>2012-06-19 - (118) - Via Tender: Redirect URL for session requests</li> 
        <li>2012-06-19 - (76) - Via Tender: API v3 - Search Movies: move "year" to optional parameters?</li> 
        <li>2012-06-19 - (116) - Via Tender: Page=0 should error</li> 
        <li>2012-06-14 - (113) - Via Tender: adult field in movie cast entries</li> 
        <li>2012-06-14 - (117) - Via Tender: Bug in API v3: movie info upon a collection id will yield collection info</li> 
        <li>2012-06-14 - (122) - Fix 2.1 errors for Airbrake</li> 
        <li>2012-06-14 - (99) - Via Tender: API v3 company search method</li> 
        <li>2012-06-11 - (114) - Migrate search filtering from website to API</li> 
        <li>2012-06-11 - (120) - Via Tender: 403 Permission Denied on JSONP calls</li> 
        <li>2012-06-11 - (121) - Via Tender: Get Movies by Genre</li> 
        <li>2012-06-11 - (108) - Create a genre list method on v3</li> 
        <h3 class="category">Jaws</h3> 
        <li>2012-06-07 - (43) - Via Tender: API v3 configuration content type</li> 
        <li>2012-01-24 - (68) - Via Tender: Missing title in v3 movie if language=en is specified</li> 
        <li>2012-01-20 - (12) - Poster/backdrop ratings</li> 
        <li>2012-01-20 - (70) - When no language parameter is specified, default to English</li> 
        <li>2012-01-18 - (69) - Poster in v3 doesn't default to English properly</li> 
        <li>2012-01-12 - (62) - Create a /3/person method</li> 
        <li>2012-01-12 - (65) - Create a /3/search/person method</li> 
        <li>2012-01-12 - (66) - Collection names are empty on /3/movie/:id</li> 
        <li>2012-01-12 - (64) - Create a /3/person/credits method</li> 
        <li>2012-01-12 - (63) - Create a /3/person/images method</li> 
        <li>2012-01-12 - (61) - Remove the double Memcache key check</li> 
        <li>2012-01-11 - (58) - Non-translated fields shouldn't necessarily be null, respect types</li> 
        <li>2012-01-11 - (55) - Create a /3/movie/latest method</li> 
        <li>2012-01-11 - (57) - Cache-Control and memcache expires should use the same value</li> 
        <li>2012-01-11 - (56) - Verify memcache keys aren't being duplicated</li> 
        <li>2012-01-11 - (54) - Serve requested language poster if available</li> 
        <li>2012-01-10 - (53) - Translate the collection title on /3/movie</li> 
        <li>2012-01-10 - (45) - Via Tender: Update V3 docs to reflect the expect accept header</li> 
        <li>2012-01-10 - (40) - Properly 404 on all /3 methods</li> 
        <li>2012-01-10 - (44) - Via Tender: Captain America errors w/ 500</li> 
        <li>2012-01-10 - (49) - Via Tender: Some movies are serving 500’s</li> 
        <h3 class="category">Ace Ventura</h3> 
        <li>2012-04-25 - (111) - Via Tender: 3/search/movie?page=2 duplicates an entry</li> 
        <li>2012-04-24 - (89) - Via Tender: API V3: Similar movies</li> 
        <li>2012-04-24 - (107) - Via Tender: API Movie search include_adult flag doesn't seem to be working</li> 
        <li>2012-04-24 - (110) - Via Tender: No adult results searching for person</li> 
        <li>2012-04-24 - (112) - Via Tender: adult field in movie search</li> 
        <li>2012-04-13 - (104) - Add favourite movies via API</li> 
        <li>2012-04-12 - (103) - Via Tender: Accessing user ratings in the API</li> 
        <li>2012-04-12 - (105) - Access favourite movies via API</li> 
        <li>2012-04-12 - (17) - Via Tender: Add Day of Death and Homepage for Person.getInfo</li> 
       </ul> 
      </section> 
      <div style="clear: both;"></div> 
     </section> 
    </div> 
   </main> 
   <!-- opened in header --> 
  </div> 
  <!-- page_wrap opened in html_head --> 
  <style>
  footer {
    
      background-image: url('https://www.themoviedb.org/assets/static_cache/2c34cca7d461eca741597f663a8bb9a1/images/v4/footers_v2/ToyStory.jpg');
    
  }
</style> 
  <footer class="single_column   lazyload"> 
   <nav> 
    <div class="join"> 
     <img src="https://www.themoviedb.org/assets/static_cache/02a9430b88975cae16fcfcc9cf7b5799/images/v4/logos/primary-green.svg" width="130" height="116"> 
     <a class="rounded" href="/account/signup?language=es">Unirse a la Comunidad</a> 
    </div> 
    <div> 
     <h3>The Basics</h3> 
     <ul> 
      <li><a href="/about?language=es">Acerca TMDb</a></li> 
      <li><a href="/about/staying-in-touch?language=es">Contacto</a></li> 
      <li><a href="/talk?language=es">Support Forums</a></li> 
      <li><a href="/documentation/api?language=es">API</a></li> 
      <li><a href="https://blog.themoviedb.org/" target="_blank" rel="noopener">Blog</a></li> 
      <li><a href="/documentation/editing?language=es">Ayuda</a></li> 
     </ul> 
    </div> 
    <div> 
     <h3>Participa</h3> 
     <ul> 
      <li><a href="/apps?language=es">Aplicaciones de terceros</a></li> 
      <li><a href="/movie/new?language=es">Añadir nueva película</a></li> 
      <li><a href="/tv/new?language=es">Añadir nueva serie</a></li> 
     </ul> 
    </div> 
    <div> 
     <h3>Comunidad</h3> 
     <ul> 
      <li><a href="/documentation/community/guidelines?language=es">Directrices</a></li> 
      <li><a href="/leaderboard?language=es">Clasificación</a></li> 
      <li><a href="/discuss?language=es">Foros</a></li> 
      <li><a href="https://twitter.com/themoviedb" target="_blank" rel="noopener">Twitter</a></li> 
      <li><a href="https://www.facebook.com/themoviedb" target="_blank" rel="noopener">Facebook</a></li> 
      <li><a href="https://plus.google.com/+TheMovieDBorgTMDb" target="_blank" rel="noopener">Google+</a></li> 
     </ul> 
    </div> 
    <div> 
     <h3>Legal</h3> 
     <ul> 
      <li><a href="/documentation/website/terms-of-use?language=es">Términos de Uso</a></li> 
      <li><a href="/privacy-policy?language=es">Política de Privacidad</a></li> 
     </ul> 
    </div> 
   </nav> 
  </footer> 
  <script>
  $(window).load(function() {
    $("body").removeClass("preload").addClass('ready');
  });

  function appendStyle(styles) {
    var css = document.createElement('style');
    css.type = 'text/css';

    if (css.styleSheet) {
      css.styleSheet.cssText = styles;
    } else {
      css.appendChild(document.createTextNode(styles));
    }

    document.getElementsByTagName("head")[0].appendChild(css);
  }
</script> 
  <div id="settings_tooltip" class="hide"> 
   <div class="settings_content"> 
    <div class="group no_pad"> 
     <p><a href="/login">Acceder</a></p> 
    </div> 
    <div class="group"> 
     <p><a href="/account/signup">Registrarse</a></p> 
    </div> 
   </div> 
  </div> 
  <script src="https://www.themoviedb.org/assets/static_cache/f2a4edddc779f8741bf46ed558f8ff48/javascripts/pusher.min.js"></script> 
  <script src="https://www.themoviedb.org/assets/static_cache/d1058d071a78bf79cdcdaaaacdbc55a6/javascripts/jquery.timeago.min.js"></script> 
  <script src="https://www.themoviedb.org/assets/static_cache/973cc98f39b6edfa20b59fb41cc8131a/javascripts/timeago/locales/jquery.timeago.es-ES.js"></script> 
  <script src="https://www.themoviedb.org/assets/static_cache/4d66791036e51aa433b9cb1968c4379b/javascripts/kendo-2017-1.223/kendo.notification.min.js"></script> 
  <script src="https://www.themoviedb.org/assets/static_cache/6110324693cbad37daeeac98ebfa520e/javascripts/kendo-2017-1.223/kendo.dialog.min.js"></script> 
  <script src="https://www.themoviedb.org/assets/static_cache/04a9664f5fe33580b95b25c3b67e08f5/javascripts/kendo-2017-1.223/kendo.tooltip.min.js"></script> 
  <script src="https://www.themoviedb.org/assets/static_cache/c8e1477b25562aa580dd9d30303abd89/javascripts/kendo-2017-1.223/cultures/kendo.culture.es-ES.min.js"></script> 
  <script src="https://www.themoviedb.org/assets/static_cache/7bb7aac0cac89a90304af1c72eb4f50d/javascripts/emojione.min.js"></script> 
  <script type="text/javascript" charset="utf-8">
  kendo.culture("es-ES");

  function convertEmoji() {
    $(".convert_emoji").each(function() {
      var original = $(this).html();
      var converted = emojione.shortnameToImage(original);
      $(this).html(converted);
    });
  }

  emojione.imageType = 'svg';
  emojione.imagePathSVG = '/images/v4/static_cache/emojis/svg/';

  $(document).ready(function(){
    jQuery.timeago.settings.allowFuture = true;
    $("time.timeago").timeago();

    convertEmoji();

    $('li.user a.no_click').kendoTooltip({
      autoHide: false,
      content: function() {
        return $("#settings_tooltip").html();
      },
      showOn: 'click',
      width: 'auto',
      position: "bottom",
      show: function(e) {
        $("div.k-tooltip-button").addClass('hide');
        this.popup.element.addClass("tmdb_theme_white no_pad");
      }
    });

    $('li.translate').kendoTooltip({
      autoHide: false,
      content: {
        url: "/translation_popup?language=es-ES&media_type=&media_id=&referral=%2Fdocumentation%2Fapi%2Fupdates",
        cache: true,
        headers: {
          'Accept-Language': 'es-ES',
          'Content-Type': 'text/html;charset=utf-8'
        }
      },
      showOn: 'click',
      width: 300,
      position: "bottom",
      show: function(e) {
        $("div.k-tooltip-button").addClass('hide');
        this.popup.element.addClass("tmdb_theme_light");
        this.popup.element.addClass("min_100px_height");

        var loading_div = $('div.k-loading-mask');
        loading_div.html('<div class="loading_wrapper"><div class="ball-scale-multiple white"><div></div><div></div><div></div></div></div>')
      }
    });

    $('li.new').kendoTooltip({
      autoHide: false,
      showOn: 'click',
      width: 240,
      position: "bottom",
      content: function() {
        return $("div.new_buttons");
      },
      show: function(e) {
        this.popup.element.addClass("tmdb_theme_light");
        $("div.k-tooltip-button").addClass('hide');
        $("div.new_buttons").toggleClass('hide');
      },
      hide: function(e) {
        $("div.new_buttons").toggleClass('hide');
      }
    });

    

    $("body").on('click', 'a.no_click', function(e) {
      e.preventDefault();
    });

    $("ul > li").hover(function() {
      $(this).find("ul.sub_nav.hide").toggle();
    });

    
      $("header ul.primary li").hover(function(e) {
        if ($('header').hasClass('normal')) {
          $(this).find("ul.hide").toggle();
        }
      });
    

    
      function init() {
        window.addEventListener('scroll', function(e){
          var distanceY = window.pageYOffset || document.documentElement.scrollTop,
            shrinkOn = 60,
            header = document.querySelector("header");
          if (distanceY > shrinkOn) {
            $('header').removeClass("normal").removeClass("regular").addClass("smaller");
          } else {
            if ($('header').hasClass("smaller")) {
              $('header').addClass("normal").addClass("regular").removeClass("smaller");
            }
          }
        });
      }
      window.onload = init();
    

    showSuccess = function(message, title) {
      if (title === undefined) {
        title = 'Correcto';
      }

      showNotification({
        title: title,
        message: message
      }, "success");
    };

    showError = function(message, title) {
      if (title === undefined) {
        title = 'Error';
      }

      showNotification({
        title: title,
        message: message
      }, "error");
    };

    var showNotification = (function() {
      var notification = $("span#notification").kendoNotification({
        
          position: {
            pinned: true,
            top: 20,
            left: null,
            bottom: null,
            right: 20
          },
        
        autoHideAfter: 5000,
        show: function(e) {
          e.element.parent().css({
            zIndex: 99999
          });
        },
        templates: [{
          type: "error",
          template: $("#errorTemplate").html()
        },{
          type: "success",
          template: $("#successTemplate").html()
        }]
      }).data("kendoNotification");

      return function(msg, type) {
        notification.show(msg, type);
      };
    })();

    $("#search_v4").kendoAutoComplete({
      minLength: 1,
      dataTextField: "title",
      template: kendo.template($("#multi_search_template").html()),
      ignoreCase: false,
      dataSource: {
        type: "json",
        serverFiltering: true,
        transport: {
          read: 'https://api.themoviedb.org/3/search/multi?api_key=d272326e467344029e68e3c4ff0b4059&language=es-ES',
          parameterMap: function() {
            return { query: $("#search_v4").data("kendoAutoComplete").value() };
          }
        },
        schema: {
          data: "results"
        }
      },
      popup: {
        appendTo: $("header")
      },
      select: function(e) {
        var dataItem = this.dataItem(e.item.index());
        setSelectedItem(dataItem);
      },
      change: function(e) {
        checkSelectedItem(e.sender._last);
      }
    });

    selectedItem = null;
    function setSelectedItem(item) {
      selectedItem = item;
    }

    function checkSelectedItem(key) {
      if (selectedItem) {
        $.ajax({
          url: '/search/track',
          type: 'PUT',
          data: {
            media_id: selectedItem.id,
            media_type: selectedItem.media_type
          }
        });
        window.location = '/' + selectedItem.media_type + '/' + selectedItem.id;
      } else {
        if (key == 13 && $('#search_v4').val().length > 0) {
          $("#search_form").submit();
        }
      }
    }

    

    $('header span.k-i-close[title="clear"]').on('click', function(e) {
      $('#search_v4').data("kendoAutoComplete").focus();
    });

    

    public_media_type_map = { 'movie': 'Movie', 'tv': 'TV Show', 'person': 'Person' };
  });
</script> 
  <script id="person_template_with_known_for" type="text/x-kendo-tmpl">
  <div class="item profile list_item known_for">
    <div class="image_content profile">
      # if (data.profile_path) { #
        <img class="lazyload fade" data-src="https://image.tmdb.org/t/p/w45_and_h45_bestv2${data.profile_path}" alt="${data.name}" width="45" height="45" data-srcset="https://image.tmdb.org/t/p/w45_and_h45_bestv2${data.profile_path} 1x, https://image.tmdb.org/t/p/w90_and_h90_bestv2${data.profile_path} 2x">
      # } else { #
        <div class="no_image_holder w45_and_h45 profile"></div>
      # } #
    </div>

    <div class="content">
      <p class="name">${data.name}</p>
      # if (data.known_for) { #
        <p class="sub">${data.known_for}</p>
      # } else { #
        <p class="sub">No known credits.</p>
      # } #
    </div>
    <div class="clear"></div>
  </div>
</script> 
  <script id="person_result_template" type="text/x-kendo-tmpl">
  <div class="ac_item profile list_item known_for">
    <div class="image_content profile">
      # if (data.profile_path) { #
        <img class="lazyload fade" data-src="https://image.tmdb.org/t/p/w45_and_h45_bestv2${data.profile_path}" alt="${data.name}" width="45" height="45" data-srcset="https://image.tmdb.org/t/p/w45_and_h45_bestv2${data.profile_path} 1x, https://image.tmdb.org/t/p/w90_and_h90_bestv2${data.profile_path} 2x">
      # } else { #
        <div class="no_image_holder w45_and_h45 profile"></div>
      # } #
    </div>

    <div class="content">
      <p class="name">${data.name}</p>
      # if (data.known_for) { #
        <p class="sub">
          # for (var i = 0; i < data.known_for.length; i++) { #
          <span class="comma">#= data.known_for[i].title ? data.known_for[i].title : data.known_for[i].name #</span>
          # } #
        </p>
      # } else { #
        <p class="sub">No known credits.</p>
      # } #
    </div>

    <p><span class="media_type person">#= public_media_type_map[data.media_type] #</span></p>
  </div>
</script> 
  <script id="movie_result_template" type="text/x-kendo-tmpl">
  <div class="ac_item poster list_item">
    <div class="image_content poster">
      # if (data.poster_path) { #
        <img class="lazyload fade" data-src="https://image.tmdb.org/t/p/w45_and_h67_bestv2${data.poster_path}" alt="${data.title}" width="45" height="67" data-srcset="https://image.tmdb.org/t/p/w45_and_h67_bestv2${data.poster_path} 1x, https://image.tmdb.org/t/p/w90_and_h134_bestv2${data.poster_path} 2x">
      # } else { #
        <div class="no_image_holder w45_and_h67"></div>
      # } #
    </div>

    <div class="content">
      <p class="name">${data.title}</p>
      <p class="sub">
        # if (data.original_title !== data.title) { #
          <span class="comma"><span class="original_title">#= data.original_title #</span></span>
        # } #
        # if (data.release_date) { #
          <span class="comma"><span class="release_date">#= data.release_date #</span></span>
        # } #
      </p>
    </div>

    <p><span class="media_type movie">#= public_media_type_map[data.media_type] #</span></p>
  </div>
</script> 
  <script id="tv_show_result_template" type="text/x-kendo-tmpl">
  <div class="ac_item poster list_item">
    <div class="image_content poster">
      # if (data.poster_path) { #
        <img class="lazyload fade" data-src="https://image.tmdb.org/t/p/w45_and_h67_bestv2${data.poster_path}" alt="${data.title}" width="45" height="67" data-srcset="https://image.tmdb.org/t/p/w45_and_h67_bestv2${data.poster_path} 1x, https://image.tmdb.org/t/p/w90_and_h134_bestv2${data.poster_path} 2x">
      # } else { #
        <div class="no_image_holder w45_and_h67"></div>
      # } #
    </div>

    <div class="content">
      <p class="name">${data.name}</p>
      <p class="sub">
        # if (data.original_name !== data.name) { #
          <span class="comma"><span class="original_title">#= data.original_name #</span></span>
        # } #
        # if (data.first_air_date) { #
          <span class="comma"><span class="release_date">#= data.first_air_date #</span></span>
        # } #
      </p>
    </div>

    <p><span class="media_type tv">#= public_media_type_map[data.media_type] #</span></p>
  </div>
</script> 
  <script id="multi_search_template" type="text/x-kendo-tmpl">
  <div class="ac_results">
    # if (data.media_type == 'movie') { #
      #= kendo.render(kendo.template($("\\#movie_result_template").html()), [data]) #
    # } else if (data.media_type == 'tv') { #
      #= kendo.render(kendo.template($("\\#tv_show_result_template").html()), [data]) #
    # } else if (data.media_type == 'person') { #
      #= kendo.render(kendo.template($("\\#person_result_template").html()), [data]) #
    # } #
  </div>
</script> 
  <script id="delete-confirmation" type="text/x-kendo-template">
  <section class="window_content">
    <p class="delete-message">¿Estás seguro?</p>

    <button class="delete-cancel k-button">No</button>
    <button class="delete-confirm k-button">Sí</button>
  </section>
</script> 
  <div id="dialog_window"></div> 
  <span id="notification" class="hide"></span> 
  <script id="errorTemplate" type="text/x-kendo-template">
  <div class="notification error">
    <span class="glyphicons glyphicons-exclamation-sign x1"></span>
    <span class="left">
      <h2>#= title #</h2>
      # if (message instanceof Array) { #
        <ul>
          # for (var i = 0; i < message.length; i++) { #
            <li>#= message[i] #</li>
          # } #
        </ul>
      # } else { #
        <p>#= message #</p>
      # } #
    </span>
    <div class="clear"></div>
  </div>
</script> 
  <script id="successTemplate" type="text/x-kendo-template">
  <div class="notification success">
    <span class="glyphicons glyphicons-ok x1"></span>
    <span class="left">
      <h2>#= title #</h2>
      <p>#= message #</p>
    </span>
    <div class="clear"></div>
  </div>
</script> 
  <script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "WebSite",
    "name": "The Movie Database",
    "alternateName": "TMDb",
    "url": "https://www.themoviedb.org"
  }
</script> 
  <script type="application/ld+json">
  {
     "@context": "http://schema.org",
     "@type": "WebSite",
     "url": "https://www.themoviedb.org/",
     "potentialAction": {
       "@type": "SearchAction",
       "target": "https://www.themoviedb.org/search?query={search_term_string}",
       "query-input": "required name=search_term_string"
     }
  }
</script>  
 </body>
</html>