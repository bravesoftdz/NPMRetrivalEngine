<!doctype html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
 <!--<![endif]-->
 <head> 
  <meta charset="utf-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <title>Integrate Scrapoxy to Node.js — Scrapoxy 2.4.2 documentation</title> 
  <link rel="shortcut icon" href="../../_static/logo32.png"> 
  <link rel="stylesheet" href="https://media.readthedocs.org/css/sphinx_rtd_theme.css" type="text/css"> 
  <link rel="top" title="Scrapoxy 2.4.2 documentation" href="../../index.html"> 
  <link rel="next" title="Manage blacklisted request with Scrapy" href="../python-scrapy-blacklisting/index.html"> 
  <link rel="prev" title="Integrate Scrapoxy to Scrapy" href="../python-scrapy/index.html"> 
  <script src="../../_static/js/modernizr.min.js"></script> 
  <!-- RTD Extra Head --> 
  <!-- 
Always link to the latest version, as canonical.
http://docs.readthedocs.org/en/latest/canonical.html
--> 
  <link rel="canonical" href="http://scrapoxy.readthedocs.io/en/master/tutorials/nodejs-request/"> 
  <link rel="stylesheet" href="https://media.readthedocs.org/css/readthedocs-doc-embed.css" type="text/css"> 
  <script type="text/javascript" src="../../_static/readthedocs-data.js"></script> 
  <!-- Add page-specific data, which must exist in the page js, not global --> 
  <script type="text/javascript">
READTHEDOCS_DATA['page'] = 'tutorials/nodejs-request/index'
</script> 
  <script type="text/javascript" src="../../_static/readthedocs-dynamic-include.js"></script> 
  <!-- end RTD <extrahead> -->
 </head> 
 <body class="wy-body-for-nav" role="document"> 
  <div class="wy-grid-for-nav"> 
   <nav data-toggle="wy-nav-shift" class="wy-nav-side"> 
    <div class="wy-side-scroll"> 
     <div class="wy-side-nav-search"> 
      <a href="../../index.html" class="icon icon-home"> Scrapoxy </a> 
      <div class="version">
        master 
      </div> 
      <div role="search"> 
       <form id="rtd-search-form" class="wy-form" action="../../search.html" method="get"> 
        <input type="text" name="q" placeholder="Search docs"> 
        <input type="hidden" name="check_keywords" value="yes"> 
        <input type="hidden" name="area" value="default"> 
       </form> 
      </div> 
     </div> 
     <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation"> 
      <p class="caption"><span class="caption-text">Get Started</span></p> 
      <ul> 
       <li class="toctree-l1"><a class="reference internal" href="../../quick_start/index.html">Quick Start</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../changelog.html">Changelog</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../license.html">Licence</a></li> 
      </ul> 
      <p class="caption"><span class="caption-text">Standard</span></p> 
      <ul> 
       <li class="toctree-l1"><a class="reference internal" href="../../standard/config/index.html">Configure Scrapoxy</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../standard/providers/awsec2/index.html">AWS / EC2</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../standard/providers/digitalocean/index.html">DigitalOcean</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../standard/providers/ovhcloud/index.html">OVH Cloud</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../standard/providers/vscale/index.html">Vscale</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../standard/gui/index.html">Manage Scrapoxy with a GUI</a></li> 
      </ul> 
      <p class="caption"><span class="caption-text">Advanced</span></p> 
      <ul> 
       <li class="toctree-l1"><a class="reference internal" href="../../advanced/understand/index.html">Understand Scrapoxy</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../advanced/api/index.html">Control Scrapoxy with a REST API</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../advanced/security/index.html">Secure Scrapoxy</a></li> 
       <li class="toctree-l1"><a class="reference internal" href="../../advanced/startup/index.html">Launch Scrapoxy at startup</a></li> 
      </ul> 
      <p class="caption"><span class="caption-text">Tutorials</span></p> 
      <ul class="current"> 
       <li class="toctree-l1"><a class="reference internal" href="../python-scrapy/index.html">Integrate Scrapoxy to Scrapy</a></li> 
       <li class="toctree-l1 current"><a class="current reference internal" href="">Integrate Scrapoxy to Node.js</a>
        <ul> 
         <li class="toctree-l2"><a class="reference internal" href="#goal">Goal</a></li> 
         <li class="toctree-l2"><a class="reference internal" href="#step-1-create-a-node-js-project">Step 1: Create a Node.js project</a>
          <ul> 
           <li class="toctree-l3"><a class="reference internal" href="#install-node-js">Install Node.js</a></li> 
           <li class="toctree-l3"><a class="reference internal" href="#create-a-new-project">Create a new project</a></li> 
           <li class="toctree-l3"><a class="reference internal" href="#add-a-scraper">Add a scraper</a></li> 
           <li class="toctree-l3"><a class="reference internal" href="#run-the-script">Run the script</a></li> 
          </ul> </li> 
         <li class="toctree-l2"><a class="reference internal" href="#step-2-integrate-scrapoxy-to-the-script">Step 2: Integrate Scrapoxy to the script</a>
          <ul> 
           <li class="toctree-l3"><a class="reference internal" href="#install-scrapoxy">Install Scrapoxy</a></li> 
           <li class="toctree-l3"><a class="reference internal" href="#start-scrapoxy">Start Scrapoxy</a></li> 
           <li class="toctree-l3"><a class="reference internal" href="#edit-the-script">Edit the script</a></li> 
           <li class="toctree-l3"><a class="reference internal" href="#id1">Run the script</a></li> 
          </ul> </li> 
        </ul> </li> 
       <li class="toctree-l1"><a class="reference internal" href="../python-scrapy-blacklisting/index.html">Manage blacklisted request with Scrapy</a></li> 
      </ul> 
     </div> 
    </div> 
   </nav> 
   <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap"> 
    <nav class="wy-nav-top" role="navigation" aria-label="top navigation"> 
     <i data-toggle="wy-nav-top" class="fa fa-bars"></i> 
     <a href="../../index.html">Scrapoxy</a> 
    </nav> 
    <div class="wy-nav-content"> 
     <div class="rst-content"> 
      <div role="navigation" aria-label="breadcrumbs navigation"> 
       <ul class="wy-breadcrumbs"> 
        <li><a href="../../index.html">Docs</a> »</li> 
        <li>Integrate Scrapoxy to Node.js</li> 
        <li class="wy-breadcrumbs-aside"> <a href="https://github.com/fabienvauchelles/scrapoxy/blob/master/docs/tutorials/nodejs-request/index.rst" class="fa fa-github"> Edit on GitHub</a> </li> 
       </ul> 
       <hr> 
      </div> 
      <div role="main" class="document" itemscope itemtype="http://schema.org/Article"> 
       <div itemprop="articleBody"> 
        <div class="section" id="integrate-scrapoxy-to-node-js"> 
         <h1>Integrate Scrapoxy to Node.js<a class="headerlink" href="#integrate-scrapoxy-to-node-js" title="Permalink to this headline">¶</a></h1> 
         <div class="section" id="goal"> 
          <h2>Goal<a class="headerlink" href="#goal" title="Permalink to this headline">¶</a></h2> 
          <p>Is it easy to find a good Javascript developer on Paris ? <strong>No</strong>!</p> 
          <p>So, it’s time to build a <strong>scraper</strong> with <a class="reference external" href="https://nodejs.org">Node.js</a>, <a class="reference external" href="https://github.com/request/request">Request</a> and <a class="reference external" href="https://github.com/cheeriojs/cheerio">Cheerio</a> to find our perfect profile.</p> 
          <p>The site <a class="reference external" href="http://scraping-challenge-2.herokuapp.com">Scraping Challenge</a> indexes a lot of <strong>profiles</strong> (fake, for demo purposes). We want to list them.</p> 
          <p>However, the site is <strong>protected</strong> against scraping ! We must use <a class="reference external" href="http://scrapoxy.io">Scrapoxy</a> to bypass the protection.</p> 
         </div> 
         <div class="section" id="step-1-create-a-node-js-project"> 
          <h2>Step 1: Create a Node.js project<a class="headerlink" href="#step-1-create-a-node-js-project" title="Permalink to this headline">¶</a></h2> 
          <div class="section" id="install-node-js"> 
           <h3>Install Node.js<a class="headerlink" href="#install-node-js" title="Permalink to this headline">¶</a></h3> 
           <p>Install the latest <a class="reference external" href="https://nodejs.org">Node.js</a> version.</p> 
          </div> 
          <div class="section" id="create-a-new-project"> 
           <h3>Create a new project<a class="headerlink" href="#create-a-new-project" title="Permalink to this headline">¶</a></h3> 
           <p>Create a directory for the project:</p> 
           <div class="highlight-python">
            <div class="highlight">
             <pre><span></span>mkdir nodejs-request
cd nodejs-request
</pre>
            </div> 
           </div> 
           <p>Create the package.json:</p> 
           <div class="highlight-python">
            <div class="highlight">
             <pre><span></span>npm init --yes
</pre>
            </div> 
           </div> 
           <p>Add dependencies:</p> 
           <div class="highlight-python">
            <div class="highlight">
             <pre><span></span>npm install lodash bluebird cheerio request winston --save
</pre>
            </div> 
           </div> 
           <p>What are these dependencies ?</p> 
           <ul class="simple"> 
            <li><strong>lodash</strong> is a javascript helper,</li> 
            <li><strong>bluebird</strong> is a promise library,</li> 
            <li><strong>cheerio</strong> is a JQuery parser,</li> 
            <li><strong>requests</strong> makes HTTP requests,</li> 
            <li><strong>winston</strong> is a logger.</li> 
           </ul> 
          </div> 
          <div class="section" id="add-a-scraper"> 
           <h3>Add a scraper<a class="headerlink" href="#add-a-scraper" title="Permalink to this headline">¶</a></h3> 
           <p>Add this content to <code class="code docutils literal"><span class="pre">index.js</span></code></p> 
           <div class="highlight-js">
            <div class="highlight">
             <pre><span></span><span class="kr">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'lodash'</span><span class="p">),</span>
    <span class="nb">Promise</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'bluebird'</span><span class="p">),</span>
    <span class="nx">cheerio</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'cheerio'</span><span class="p">),</span>
    <span class="nx">request</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'request'</span><span class="p">),</span>
    <span class="nx">winston</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'winston'</span><span class="p">);</span>

<span class="nx">winston</span><span class="p">.</span><span class="nx">level</span> <span class="o">=</span> <span class="s1">'debug'</span><span class="p">;</span>


<span class="kr">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
    <span class="c1">// URL of the site</span>
    <span class="nx">source</span><span class="o">:</span> <span class="s1">'http://scraping-challenge-2.herokuapp.com'</span><span class="p">,</span>

    <span class="nx">opts</span><span class="o">:</span> <span class="p">{</span>
    <span class="p">},</span>
<span class="p">};</span>


<span class="c1">// Get all URLs</span>
<span class="nx">getProfilesUrls</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">source</span><span class="p">,</span> <span class="nx">config</span><span class="p">.</span><span class="nx">opts</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">urls</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">winston</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">'Found %d profiles'</span><span class="p">,</span> <span class="nx">urls</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>

        <span class="nx">winston</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">'Wait 120 seconds to scale instances'</span><span class="p">);</span>

        <span class="k">return</span> <span class="nx">urls</span><span class="p">;</span>
    <span class="p">})</span>

    <span class="c1">// Wait 2 minutes to scale instances</span>
    <span class="p">.</span><span class="nx">delay</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">)</span>

    <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">urls</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>

        <span class="c1">// Get profiles one by one.</span>
        <span class="k">return</span> <span class="nb">Promise</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">urls</span><span class="p">,</span>
            <span class="p">(</span><span class="nx">url</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">getProfile</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">config</span><span class="p">.</span><span class="nx">opts</span><span class="p">)</span>
                <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">profile</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
                    <span class="nx">winston</span><span class="p">.</span><span class="nx">debug</span><span class="p">(</span><span class="s1">'Found %s'</span><span class="p">,</span> <span class="nx">profile</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>

                    <span class="k">return</span> <span class="nx">profile</span><span class="p">;</span>
                <span class="p">})</span>
                <span class="p">.</span><span class="k">catch</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
                    <span class="nx">winston</span><span class="p">.</span><span class="nx">debug</span><span class="p">(</span><span class="s1">'Cannot retrieve %s'</span><span class="p">,</span> <span class="nx">url</span><span class="p">);</span>
                <span class="p">})</span>
            <span class="p">,</span> <span class="p">{</span><span class="nx">concurrency</span><span class="o">:</span> <span class="mi">1</span><span class="p">})</span>
            <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">profiles</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
                <span class="kr">const</span> <span class="nx">results</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">compact</span><span class="p">(</span><span class="nx">profiles</span><span class="p">);</span>

                <span class="nx">winston</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">'Extract %d on %d profiles'</span><span class="p">,</span> <span class="nx">results</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span> <span class="nx">urls</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
            <span class="p">});</span>
    <span class="p">})</span>
    <span class="p">.</span><span class="k">catch</span><span class="p">((</span><span class="nx">err</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">winston</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s1">'Error: '</span><span class="p">,</span> <span class="nx">err</span><span class="p">));</span>


<span class="c1">////////////</span>

<span class="cm">/**</span>
<span class="cm"> * Get all the urls of the profiles</span>
<span class="cm"> * @param url Main URL</span>
<span class="cm"> * @param defaultOpts options for http request</span>
<span class="cm"> * @returns {promise}</span>
<span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">getProfilesUrls</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">defaultOpts</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="c1">// Create options for the HTTP request</span>
        <span class="c1">// Add the URL to the default options</span>
        <span class="kr">const</span> <span class="nx">opts</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">merge</span><span class="p">({},</span> <span class="nx">defaultOpts</span><span class="p">,</span> <span class="p">{</span><span class="nx">url</span><span class="p">});</span>

        <span class="nx">request</span><span class="p">(</span><span class="nx">opts</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">body</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="nx">reject</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">statusCode</span> <span class="o">!==</span> <span class="mi">200</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="nx">reject</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="c1">// Load content into a JQuery parser</span>
            <span class="kr">const</span> <span class="nx">$</span> <span class="o">=</span> <span class="nx">cheerio</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>

            <span class="c1">// Extract all urls</span>
            <span class="kr">const</span> <span class="nx">urls</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">'.profile a'</span><span class="p">)</span>
                <span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">i</span><span class="p">,</span> <span class="nx">el</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">$</span><span class="p">(</span><span class="nx">el</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">'href'</span><span class="p">))</span>
                <span class="p">.</span><span class="nx">get</span><span class="p">()</span>
                <span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">url</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="sb">`</span><span class="si">${</span><span class="nx">config</span><span class="p">.</span><span class="nx">source</span><span class="si">}${</span><span class="nx">url</span><span class="si">}</span><span class="sb">`</span><span class="p">);</span>

            <span class="nx">resolve</span><span class="p">(</span><span class="nx">urls</span><span class="p">);</span>
        <span class="p">});</span>
    <span class="p">});</span>
<span class="p">}</span>

<span class="cm">/**</span>
<span class="cm"> * Get the profile and extract the name</span>
<span class="cm"> * @param url URL of the profile</span>
<span class="cm"> * @param defaultOpts options for http request</span>
<span class="cm"> * @returns {promise}</span>
<span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">getProfile</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">defaultOpts</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="c1">// Create options for the HTTP request</span>
        <span class="c1">// Add the URL to the default options</span>
        <span class="kr">const</span> <span class="nx">opts</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">merge</span><span class="p">({},</span> <span class="nx">defaultOpts</span><span class="p">,</span> <span class="p">{</span><span class="nx">url</span><span class="p">});</span>

        <span class="nx">request</span><span class="p">(</span><span class="nx">opts</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">body</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="nx">reject</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">statusCode</span> <span class="o">!==</span> <span class="mi">200</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">return</span> <span class="nx">reject</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="c1">// Load content into a JQuery parser</span>
            <span class="kr">const</span> <span class="nx">$</span> <span class="o">=</span> <span class="nx">cheerio</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>

            <span class="c1">// Extract the names</span>
            <span class="kr">const</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">'.profile-info-name'</span><span class="p">).</span><span class="nx">text</span><span class="p">();</span>

            <span class="nx">resolve</span><span class="p">({</span><span class="nx">name</span><span class="p">});</span>
        <span class="p">});</span>
    <span class="p">});</span>
<span class="p">}</span>
</pre>
            </div> 
           </div> 
          </div> 
          <div class="section" id="run-the-script"> 
           <h3>Run the script<a class="headerlink" href="#run-the-script" title="Permalink to this headline">¶</a></h3> 
           <p>Let’s try our new scraper!</p> 
           <p>Run this command:</p> 
           <div class="highlight-python">
            <div class="highlight">
             <pre><span></span>node index.js
</pre>
            </div> 
           </div> 
           <p>The script scraps the site and list profiles.</p> 
           <p>However, <a class="reference external" href="http://scraping-challenge-2.herokuapp.com">Scraping Challenge</a> is protected! All requests fail...</p> 
           <p>We will <strong>integrate</strong> <a class="reference external" href="http://scrapoxy.io">Scrapoxy</a> to bypass the protection.</p> 
          </div> 
         </div> 
         <div class="section" id="step-2-integrate-scrapoxy-to-the-script"> 
          <h2>Step 2: Integrate Scrapoxy to the script<a class="headerlink" href="#step-2-integrate-scrapoxy-to-the-script" title="Permalink to this headline">¶</a></h2> 
          <div class="section" id="install-scrapoxy"> 
           <h3>Install Scrapoxy<a class="headerlink" href="#install-scrapoxy" title="Permalink to this headline">¶</a></h3> 
           <p>See <a class="reference internal" href="../../quick_start/index.html"><em>Quick Start</em></a> to install <a class="reference external" href="http://scrapoxy.io">Scrapoxy</a>.</p> 
          </div> 
          <div class="section" id="start-scrapoxy"> 
           <h3>Start Scrapoxy<a class="headerlink" href="#start-scrapoxy" title="Permalink to this headline">¶</a></h3> 
           <p>Set the <strong>maximum</strong> of instances to 6, and start <a class="reference external" href="http://scrapoxy.io">Scrapoxy</a> (see <a class="reference external" href="../../standard/gui/index.html#scaling">Change scaling with GUI</a>).</p> 
           <div class="admonition warning"> 
            <p class="first admonition-title">Warning</p> 
            <p class="last">Don’t forget to set the maximum of instances!</p> 
           </div> 
          </div> 
          <div class="section" id="edit-the-script"> 
           <h3>Edit the script<a class="headerlink" href="#edit-the-script" title="Permalink to this headline">¶</a></h3> 
           <p>Open <code class="code docutils literal"><span class="pre">index.js</span></code> and modify the <em>config</em> value</p> 
           <div class="highlight-js">
            <div class="highlight">
             <pre><span></span><span class="kr">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
    <span class="c1">// URL of the site</span>
    <span class="nx">source</span><span class="o">:</span> <span class="s1">'http://scraping-challenge-2.herokuapp.com'</span><span class="p">,</span>

    <span class="nx">opts</span><span class="o">:</span> <span class="p">{</span>
        <span class="c1">// URL of Scrapoxy</span>
        <span class="nx">proxy</span><span class="o">:</span> <span class="s1">'http://localhost:8888'</span><span class="p">,</span>

        <span class="c1">// HTTPS over HTTP</span>
        <span class="nx">tunnel</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="p">}</span>
<span class="p">};</span>
</pre>
            </div> 
           </div> 
          </div> 
          <div class="section" id="id1"> 
           <h3>Run the script<a class="headerlink" href="#id1" title="Permalink to this headline">¶</a></h3> 
           <p>Run this command:</p> 
           <div class="highlight-python">
            <div class="highlight">
             <pre><span></span>node index.js
</pre>
            </div> 
           </div> 
           <p>Now, all profiles are listed!</p> 
          </div> 
         </div> 
        </div> 
       </div> 
      </div> 
      <footer> 
       <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation"> 
        <a href="../python-scrapy-blacklisting/index.html" class="btn btn-neutral float-right" title="Manage blacklisted request with Scrapy" accesskey="n">Next <span class="fa fa-arrow-circle-right"></span></a> 
        <a href="../python-scrapy/index.html" class="btn btn-neutral" title="Integrate Scrapoxy to Scrapy" accesskey="p"><span class="fa fa-arrow-circle-left"></span> Previous</a> 
       </div> 
       <hr> 
       <div role="contentinfo"> 
        <p> © Copyright 2016, Fabien Vauchelles. <span class="commit"> Revision <code>1d036f4d</code>. </span> </p> 
       </div> Built with 
       <a href="http://sphinx-doc.org/">Sphinx</a> using a 
       <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by 
       <a href="https://readthedocs.org">Read the Docs</a>. 
      </footer> 
     </div> 
    </div> 
   </section> 
  </div> 
  <div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions"> 
   <span class="rst-current-version" data-toggle="rst-current-version"> <span class="fa fa-book"> Read the Docs</span> v: master <span class="fa fa-caret-down"></span> </span> 
   <div class="rst-other-versions"> 
    <dl> 
     <dt>
      Versions
     </dt> 
     <dd>
      <a href="/en/latest/">latest</a>
     </dd> 
     <dd>
      <a href="/en/stable/">stable</a>
     </dd> 
     <dd>
      <a href="/en/master/">master</a>
     </dd> 
     <dd>
      <a href="/en/develop/">develop</a>
     </dd> 
    </dl> 
    <dl> 
     <dt>
      Downloads
     </dt> 
     <dd>
      <a href="//readthedocs.org/projects/scrapoxy/downloads/pdf/master/">pdf</a>
     </dd> 
     <dd>
      <a href="//readthedocs.org/projects/scrapoxy/downloads/htmlzip/master/">htmlzip</a>
     </dd> 
     <dd>
      <a href="//readthedocs.org/projects/scrapoxy/downloads/epub/master/">epub</a>
     </dd> 
    </dl> 
    <dl> 
     <dt>
      On Read the Docs
     </dt> 
     <dd> 
      <a href="//readthedocs.org/projects/scrapoxy/?fromdocs=scrapoxy">Project Home</a> 
     </dd> 
     <dd> 
      <a href="//readthedocs.org/builds/scrapoxy/?fromdocs=scrapoxy">Builds</a> 
     </dd> 
    </dl> 
    <hr> Free document hosting provided by 
    <a href="http://www.readthedocs.org">Read the Docs</a>. 
   </div> 
  </div> 
  <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'../../',
            VERSION:'2.4.2',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true
        };
    </script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-2.0.3.min.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-migrate-1.2.1.min.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/underscore.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/doctools.js"></script> 
  <script type="text/javascript" src="https://media.readthedocs.org/javascript/readthedocs-doc-embed.js"></script> 
  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>  
 </body>
</html>