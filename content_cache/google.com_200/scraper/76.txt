<!doctype html>
<!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en-US" itemscope itemtype="http://schema.org/Article"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en-US" itemscope itemtype="http://schema.org/Article"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en-US" itemscope itemtype="http://schema.org/Article"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en-US" itemscope itemtype="http://schema.org/Article" prefix="og: http://ogp.me/ns#">
 <!--<![endif]-->
 <head>
  <!-- sfdjango --> 
  <script type="application/javascript">var _prum={id:"516823f8abe53dd228000000"};var PRUM_EPISODES=PRUM_EPISODES||{};PRUM_EPISODES.q=[];PRUM_EPISODES.mark=function(b,a){PRUM_EPISODES.q.push(["mark",b,a||new Date().getTime()])};PRUM_EPISODES.measure=function(b,a,b){PRUM_EPISODES.q.push(["measure",b,a,b||new Date().getTime()])};PRUM_EPISODES.done=function(a){PRUM_EPISODES.q.push(["done",a])};PRUM_EPISODES.mark("firstbyte");(function(){var b=document.getElementsByTagName("script")[0];var a=document.createElement("script");a.type="text/javascript";a.async=true;a.charset="UTF-8";a.src="//rum-static.pingdom.net/prum.min.js";b.parentNode.insertBefore(a,b)})();</script> 
  <meta charset="UTF-8"> 
  <title>Web Scraping with Ruby and Nokogiri for Beginners  | Distilled</title> 
  <meta name="description" content="Sam Callender
                    
                : I know what’s going through your head: “Noko what? &nbsp;Web scraping?” &nbsp;Learning how to write a web scraping program will significantly up your game as a resourceful and data driven online marketer. &nbsp;If you’re a web developer of any skill level you’ll also enjoy this guide as it will expand your horizons with a bunch of fun new project possibilities.">
  <meta content="True" name="HandheldFriendly"> 
  <meta name="viewport" content="width=device-width"> 
  <link rel="shortcut icon" href="/static/images/favicon.ico"> 
  <meta charset="UTF-8"> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <meta http-equiv="X-UA-Compatible" content="chrome=1">
  <script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"XAIAUlFUGwUGUVZTAQQ="};window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o||n)},o,o.exports)}return n[e].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({1:[function(t,n,e){function r(t){try{s.console&&console.log(t)}catch(n){}}var o,i=t("ee"),a=t(15),s={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(s.console=!0,o.indexOf("dev")!==-1&&(s.dev=!0),o.indexOf("nr_dev")!==-1&&(s.nrDev=!0))}catch(c){}s.nrDev&&i.on("internal-error",function(t){r(t.stack)}),s.dev&&i.on("fn-err",function(t,n,e){r(e.stack)}),s.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(s,function(t,n){return t}).join(", ")))},{}],2:[function(t,n,e){function r(t,n,e,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,n,e)])}catch(s){try{i("ierr",[s,c.now(),!0])}catch(u){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,n,e){this.message=t||"Uncaught error with no additional information",this.sourceURL=n,this.line=e}function o(t){i("err",[t,c.now()])}var i=t("handle"),a=t(16),s=t("ee"),c=t("loader"),f=window.onerror,u=!1,d=0;c.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(8),t(7),"addEventListener"in window&&t(5),c.xhrWrappable&&t(9),u=!0)}s.on("fn-start",function(t,n,e){u&&(d+=1)}),s.on("fn-err",function(t,n,e){u&&(this.thrown=!0,o(e))}),s.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),s.on("internal-error",function(t){i("ierr",[t,c.now(),!0])})},{}],3:[function(t,n,e){t("loader").features.ins=!0},{}],4:[function(t,n,e){function r(t){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var o=t("ee"),i=t("handle"),a=t(8),s=t(7),c="learResourceTimings",f="addEventListener",u="resourcetimingbufferfull",d="bstResource",l="resource",p="-start",h="-end",m="fn"+p,w="fn"+h,v="bstTimer",y="pushState",g=t("loader");g.features.stn=!0,t(6);var b=NREUM.o.EV;o.on(m,function(t,n){var e=t[0];e instanceof b&&(this.bstStart=g.now())}),o.on(w,function(t,n){var e=t[0];e instanceof b&&i("bst",[e,n,this.bstStart,g.now()])}),a.on(m,function(t,n,e){this.bstStart=g.now(),this.bstType=e}),a.on(w,function(t,n){i(v,[n,this.bstStart,g.now(),this.bstType])}),s.on(m,function(){this.bstStart=g.now()}),s.on(w,function(t,n){i(v,[n,this.bstStart,g.now(),"requestAnimationFrame"])}),o.on(y+p,function(t){this.time=g.now(),this.startPath=location.pathname+location.hash}),o.on(y+h,function(t){i("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),f in window.performance&&(window.performance["c"+c]?window.performance[f](u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["c"+c]()},!1):window.performance[f]("webkit"+u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["webkitC"+c]()},!1)),document[f]("scroll",r,{passive:!0}),document[f]("keypress",r,!1),document[f]("click",r,!1)}},{}],5:[function(t,n,e){function r(t){for(var n=t;n&&!n.hasOwnProperty(u);)n=Object.getPrototypeOf(n);n&&o(n)}function o(t){s.inPlace(t,[u,d],"-",i)}function i(t,n){return t[1]}var a=t("ee").get("events"),s=t(18)(a,!0),c=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";n.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,n){var e=t[1],r=c(e,"nr@wrapped",function(){function t(){if("function"==typeof e.handleEvent)return e.handleEvent.apply(e,arguments)}var n={object:t,"function":e}[typeof e];return n?s(n,"fn-",null,n.name||"anonymous"):e});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],6:[function(t,n,e){var r=t("ee").get("history"),o=t(18)(r);n.exports=r,o.inPlace(window.history,["pushState","replaceState"],"-")},{}],7:[function(t,n,e){var r=t("ee").get("raf"),o=t(18)(r),i="equestAnimationFrame";n.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],8:[function(t,n,e){function r(t,n,e){t[0]=a(t[0],"fn-",null,e)}function o(t,n,e){this.method=e,this.timerDuration=isNaN(t[1])?0:+t[1],t[0]=a(t[0],"fn-",this,e)}var i=t("ee").get("timer"),a=t(18)(i),s="setTimeout",c="setInterval",f="clearTimeout",u="-start",d="-";n.exports=i,a.inPlace(window,[s,"setImmediate"],s+d),a.inPlace(window,[c],c+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(c+u,r),i.on(s+u,o)},{}],9:[function(t,n,e){function r(t,n){d.inPlace(n,["onreadystatechange"],"fn-",s)}function o(){var t=this,n=u.context(t);t.readyState>3&&!n.resolved&&(n.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,y,"fn-",s)}function i(t){g.push(t),h&&(x?x.then(a):w?w(a):(E=-E,O.data=E))}function a(){for(var t=0;t<g.length;t++)r([],g[t]);g.length&&(g=[])}function s(t,n){return n}function c(t,n){for(var e in t)n[e]=t[e];return n}t(5);var f=t("ee"),u=f.get("xhr"),d=t(18)(u),l=NREUM.o,p=l.XHR,h=l.MO,m=l.PR,w=l.SI,v="readystatechange",y=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],g=[];n.exports=u;var b=window.XMLHttpRequest=function(t){var n=new p(t);try{u.emit("new-xhr",[n],n),n.addEventListener(v,o,!1)}catch(e){try{u.emit("internal-error",[e])}catch(r){}}return n};if(c(p,b),b.prototype=p.prototype,d.inPlace(b.prototype,["open","send"],"-xhr-",s),u.on("send-xhr-start",function(t,n){r(t,n),i(n)}),u.on("open-xhr-start",r),h){var x=m&&m.resolve();if(!w&&!m){var E=1,O=document.createTextNode(E);new h(a).observe(O,{characterData:!0})}}else f.on("fn-end",function(t){t[0]&&t[0].type===v||a()})},{}],10:[function(t,n,e){function r(t){var n=this.params,e=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!n.aborted){if(e.duration=a.now()-this.startTime,4===t.readyState){n.status=t.status;var i=o(t,this.lastSize);if(i&&(e.rxSize=i),this.sameOrigin){var c=t.getResponseHeader("X-NewRelic-App-Data");c&&(n.cat=c.split(", ").pop())}}else n.status=0;e.cbTime=this.cbTime,f.emit("xhr-done",[t],t),s("xhr",[n,e,this.startTime])}}}function o(t,n){var e=t.responseType;if("json"===e&&null!==n)return n;var r="arraybuffer"===e||"blob"===e||"json"===e?t.response:t.responseText;return h(r)}function i(t,n){var e=c(n),r=t.params;r.host=e.hostname+":"+e.port,r.pathname=e.pathname,t.sameOrigin=e.sameOrigin}var a=t("loader");if(a.xhrWrappable){var s=t("handle"),c=t(11),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(14),h=t(13),m=window.XMLHttpRequest;a.features.xhr=!0,t(9),f.on("new-xhr",function(t){var n=this;n.totalCbs=0,n.called=0,n.cbTime=0,n.end=r,n.ended=!1,n.xhrGuids={},n.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){n.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,n){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&n.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,n){var e=this.metrics,r=t[0],o=this;if(e&&r){var i=h(r);i&&(e.txSize=i)}this.startTime=a.now(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof n.onload))&&o.end(n)}catch(e){try{f.emit("internal-error",[e])}catch(r){}}};for(var s=0;s<d;s++)n.addEventListener(u[s],this.listener,!1)}),f.on("xhr-cb-time",function(t,n,e){this.cbTime+=t,n?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof e.onload||this.end(e)}),f.on("xhr-load-added",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&!this.xhrGuids[e]&&(this.xhrGuids[e]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&this.xhrGuids[e]&&(delete this.xhrGuids[e],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],n)}),f.on("removeEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],n)}),f.on("fn-start",function(t,n,e){n instanceof m&&("onload"===e&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=a.now()))}),f.on("fn-end",function(t,n){this.xhrCbStart&&f.emit("xhr-cb-time",[a.now()-this.xhrCbStart,this.onload,n],n)})}},{}],11:[function(t,n,e){n.exports=function(t){var n=document.createElement("a"),e=window.location,r={};n.href=t,r.port=n.port;var o=n.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=n.hostname||e.hostname,r.pathname=n.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!n.protocol||":"===n.protocol||n.protocol===e.protocol,a=n.hostname===document.domain&&n.port===e.port;return r.sameOrigin=i&&(!n.hostname||a),r}},{}],12:[function(t,n,e){function r(){}function o(t,n,e){return function(){return i(t,[f.now()].concat(s(arguments)),n?null:this,e),n?void 0:this}}var i=t("handle"),a=t(15),s=t(16),c=t("ee").get("tracer"),f=t("loader"),u=NREUM;"undefined"==typeof window.newrelic&&(newrelic=u);var d=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",p=l+"ixn-";a(d,function(t,n){u[n]=o(l+n,!0,"api")}),u.addPageAction=o(l+"addPageAction",!0),u.setCurrentRouteName=o(l+"routeName",!0),n.exports=newrelic,u.interaction=function(){return(new r).get()};var h=r.prototype={createTracer:function(t,n){var e={},r=this,o="function"==typeof n;return i(p+"tracer",[f.now(),t,e],r),function(){if(c.emit((o?"":"no-")+"fn-start",[f.now(),r,o],e),o)try{return n.apply(this,arguments)}finally{c.emit("fn-end",[f.now()],e)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,n){h[n]=o(p+n)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,f.now()])}},{}],13:[function(t,n,e){n.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(n){return}}}},{}],14:[function(t,n,e){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),n.exports=r},{}],15:[function(t,n,e){function r(t,n){var e=[],r="",i=0;for(r in t)o.call(t,r)&&(e[i]=n(r,t[r]),i+=1);return e}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],16:[function(t,n,e){function r(t,n,e){n||(n=0),"undefined"==typeof e&&(e=t?t.length:0);for(var r=-1,o=e-n||0,i=Array(o<0?0:o);++r<o;)i[r]=t[n+r];return i}n.exports=r},{}],17:[function(t,n,e){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],18:[function(t,n,e){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(16),a="nr@original",s=Object.prototype.hasOwnProperty,c=!1;n.exports=function(t,n){function e(t,n,e,o){function nrWrapper(){var r,a,s,c;try{a=this,r=i(arguments),s="function"==typeof e?e(r,a):e||{}}catch(f){l([f,"",[r,a,o],s])}u(n+"start",[r,a,o],s);try{return c=t.apply(a,r)}catch(d){throw u(n+"err",[r,a,d],s),d}finally{u(n+"end",[r,a,c],s)}}return r(t)?t:(n||(n=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,n,o,i){o||(o="");var a,s,c,f="-"===o.charAt(0);for(c=0;c<n.length;c++)s=n[c],a=t[s],r(a)||(t[s]=e(a,f?s+o:o,i,s))}function u(e,r,o){if(!c||n){var i=c;c=!0;try{t.emit(e,r,o,n)}catch(a){l([a,e,r,o])}c=i}}function d(t,n){if(Object.defineProperty&&Object.keys)try{var e=Object.keys(t);return e.forEach(function(e){Object.defineProperty(n,e,{get:function(){return t[e]},set:function(n){return t[e]=n,n}})}),n}catch(r){l([r])}for(var o in t)s.call(t,o)&&(n[o]=t[o]);return n}function l(n){try{t.emit("internal-error",n)}catch(e){}}return t||(t=o),e.inPlace=f,e.flag=a,e}},{}],ee:[function(t,n,e){function r(){}function o(t){function n(t){return t&&t instanceof r?t:t?c(t,s,i):i()}function e(e,r,o,i){if(!l.aborted||i){t&&t(e,r,o);for(var a=n(o),s=h(e),c=s.length,f=0;f<c;f++)s[f].apply(a,r);var d=u[y[e]];return d&&d.push([g,e,r,a]),a}}function p(t,n){v[t]=h(t).concat(n)}function h(t){return v[t]||[]}function m(t){return d[t]=d[t]||o(e)}function w(t,n){f(t,function(t,e){n=n||"feature",y[e]=n,n in u||(u[n]=[])})}var v={},y={},g={on:p,emit:e,get:m,listeners:h,context:n,buffer:w,abort:a,aborted:!1};return g}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var s="nr@context",c=t("gos"),f=t(15),u={},d={},l=n.exports=o();l.backlog=u},{}],gos:[function(t,n,e){function r(t,n,e){if(o.call(t,n))return t[n];var r=e();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(t,n,e){function r(t,n,e,r){o.buffer([t],r),o.emit(t,n,e)}var o=t("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(t,n,e){function r(t){var n=typeof t;return!t||"object"!==n&&"function"!==n?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");n.exports=r},{}],loader:[function(t,n,e){function r(){if(!x++){var t=b.info=NREUM.info,n=l.getElementsByTagName("script")[0];if(setTimeout(u.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&n))return u.abort();f(y,function(n,e){t[n]||(t[n]=e)}),c("mark",["onload",a()+b.offset],null,"api");var e=l.createElement("script");e.src="https://"+t.agent,n.parentNode.insertBefore(e,n)}}function o(){"complete"===l.readyState&&i()}function i(){c("mark",["domContent",a()+b.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(s=Math.max((new Date).getTime(),s))-b.offset}var s=(new Date).getTime(),c=t("handle"),f=t(15),u=t("ee"),d=window,l=d.document,p="addEventListener",h="attachEvent",m=d.XMLHttpRequest,w=m&&m.prototype;NREUM.o={ST:setTimeout,SI:d.setImmediate,CT:clearTimeout,XHR:m,REQ:d.Request,EV:d.Event,PR:d.Promise,MO:d.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1059.min.js"},g=m&&w&&w[p]&&!/CriOS/.test(navigator.userAgent),b=n.exports={offset:s,now:a,origin:v,features:{},xhrWrappable:g};t(12),l[p]?(l[p]("DOMContentLoaded",i,!1),d[p]("load",r,!1)):(l[h]("onreadystatechange",o),d[h]("onload",r)),c("mark",["firstbyte",s],null,"api");var x=0,E=t(17)},{}]},{},["loader",2,10,4,3]);</script>
  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","queueTime":0,"licenseKey":"2166176211","agent":"","transactionName":"ZFdSZkRSDUQDW0MKCl0ddkdYUBdeDVYYDgBJSFFcX10GaApZVAgWCVxVRWlRD1gFZ0EKAEQ=","applicationID":"6657165","errorBeacon":"bam.nr-data.net","applicationTime":148}</script> 
  <meta content="True" name="HandheldFriendly"> 
  <meta name="viewport" content="width=device-width"> 
  <link rel="shortcut icon" href="/static/images/favicon.ico"> 
  <meta charset="UTF-8"> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <meta http-equiv="X-UA-Compatible" content="chrome=1"> 
  <link rel="canonical" href="https://www.distilled.net/resources/web-scraping-with-ruby-and-nokogiri-for-beginners/"> 
  <meta name="twitter:card" content="summary_large_image"> 
  <meta name="twitter:site" content="@distilled"> 
  <meta name="twitter:description" content="I know what&amp;rsquo;s going through your head: &amp;ldquo;Noko what? &amp;nbsp;Web scraping?&amp;rdquo; &amp;nbsp;Learning how to write a web scraping program will significantly up your game as a resourceful and data driven online marketer. &amp;nbsp;If you&amp;rsquo;re a web developer of any skill level you&amp;rsquo;ll also enjoy this guide as it will expand your horizons with a bunch of fun new project possibilities."> 
  <meta property="og:title" content="Web Scraping with Ruby and Nokogiri for Beginners  | Distilled"> 
  <meta property="og:url" content="https://www.distilled.net/resources/web-scraping-with-ruby-and-nokogiri-for-beginners/"> 
  <meta property="og:site_name" content="distilled"> 
  <meta property="og:type" content="article"> 
  <meta property="og:image" content="https://www.distilled.net/uploads/blog/Nokogiri_guide_beginner.jpg"> 
  <meta name="twitter:image" content="https://www.distilled.net/uploads/blog/Nokogiri_guide_beginner.jpg"> 
  <link rel="alternate" type="application/rss+xml" title="distilled » Feed" href="http://feeds.distilled.net/distillednet/"> 
  <link rel="stylesheet" href="//www.distilled.net/static/CACHE/css/66d3b7d927bc.css" type="text/css" media="all"> 
  <link rel="stylesheet" href="//www.distilled.net/static/CACHE/css/07235b11178d.css" type="text/css" media="all"> 
  <link rel="stylesheet" href="//www.distilled.net/static/CACHE/css/f99c520f2800.css" type="text/css"> 
  <link href="//fonts.googleapis.com/css?family=Merriweather:400,700,300" rel="stylesheet" type="text/css"> 
  <script src="//www.distilled.net/static/js/vendor/jquery-1.11.2.min.js"></script> 
  <script src="//www.distilled.net/static/js/vendor/jquery-migrate-1.2.1.min.js"></script> 
  <script src="//www.distilled.net/static/js/vendor/modernizr/modernizr.prod.js"></script> 
  <script src="//www.distilled.net/static/js/json_min.js"></script> 
  <script src="//cdn.ravenjs.com/1.1.15/jquery,native/raven.min.js"></script> 
  <script>
        Raven.config('https://56348977020342c1a611d28c7ada7796@app.getsentry.com/30258', {
            logger: 'javascript',
            whitelistUrls: [/distilled\.net/, /d1oylnfl75uzl6\.cloudfront\.net/]
        }).install();

        Raven.setUser({
            id: 'None',
            token: 'BbZ4XNCH9fzE0ULMBaAeQmPqM11Kx9Zv'
        });
    </script> 
  <script type="text/javascript">
        function logevent(data){
            var json_data = JSON.stringify(["AnonymousUser|BbZ4XNCH9fzE0ULMBaAeQmPqM11Kx9Zv"].concat(data));
            
                // simple logging
                
                $.post("/u/post/", { data: json_data }, function(response) {});
            
        }
    </script> 
  <!--[if lte IE 8]>
        <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2-legacy.js"></script>
    <![endif]--> 
  <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script> 
  <script type="text/javascript">
    dataLayer = [];

    
    
        
    

    

    

    

    

    
        dataLayer.push({'du_status': 'loggedout'});
    

    dataLayer.push({'du_session_status': 'loggedout'});

</script> 
  <script type="text/javascript">
 $(function(){
   $(".mailchimpFormContainer form").submit(function(e) {
     e.preventDefault();
     var $form = $(this).parent();
     var formName = $(this).parent().attr('data-name');
     $form.html("<div class='mailchimpLoading'><img src=\"/static/images/horizontal-loading.gif\"></div>");
     var mailchimpAjax = $.post("/store/mailchimp/mailchimp-subscribe/", $(this).serialize());
     var successMailchimp = function(data) {
       dataLayer.push({
         'event': 'trackEvent',
         'event_category': 'Goals',
         'event_action': 'email-subscribe',
         'event_label': formName
       });
       $form.html("<div class='success'>Thanks for signing up to our mailing list!</div>");
     };
     mailchimpAjax.done(successMailchimp);
   });
 });
</script> 
  <!-- Gill Sans Webfont --> 
  <script src="//fast.fonts.com/jsapi/d24a9a5f-44a9-486a-abc8-e7de4766d733.js" type="text/javascript"></script> 
  <script>
    	Modernizr.load([ {
    		test: Modernizr.mq('only all'),
			nope: '//cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.min.js'
		} ]);
    </script> 
  <script type="text/javascript" src="/static/styles/scss/lib/kube/_js/Core/Kube.js"></script> 
  <script type="text/javascript" src="/static/styles/scss/lib/kube/_js/Core/Kube.Plugin.js"></script> 
  <script type="text/javascript" src="/static/styles/scss/lib/kube/_js/Core/Kube.Animation.js"></script> 
  <script type="text/javascript" src="/static/styles/scss/lib/kube/_js/Core/Kube.Utils.js"></script> 
  <script type="text/javascript" src="/static/styles/scss/lib/kube/_js/Core/Kube.Detect.js"></script> 
  <script type="text/javascript" src="/static/styles/scss/lib/kube/_js/Dropdown/Kube.Dropdown.js"></script> 
  <script type="text/javascript" src="/static/styles/scss/lib/kube/_js/Collapse/Kube.Collapse.js"></script> 
  <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5702890d86ba2d1a"></script> 
  <!-- Start Visual Website Optimizer Asynchronous Code --> 
  <script type="text/javascript">
var _vwo_code=(function(){
var account_id=277265,
settings_tolerance=2000,
library_tolerance=2500,
use_existing_jquery=false,
/* DO NOT EDIT BELOW THIS LINE */
f=false,d=document;return{use_existing_jquery:function(){return use_existing_jquery;},library_tolerance:function(){return library_tolerance;},finish:function(){if(!f){f=true;var a=d.getElementById('_vis_opt_path_hides');if(a)a.parentNode.removeChild(a);}},finished:function(){return f;},load:function(a){var b=d.createElement('script');b.src=a;b.type='text/javascript';b.innerText;b.onerror=function(){_vwo_code.finish();};d.getElementsByTagName('head')[0].appendChild(b);},init:function(){settings_timer=setTimeout('_vwo_code.finish()',settings_tolerance);var a=d.createElement('style'),b='body{opacity:0 !important;filter:alpha(opacity=0) !important;background:none !important;}',h=d.getElementsByTagName('head')[0];a.setAttribute('id','_vis_opt_path_hides');a.setAttribute('type','text/css');if(a.styleSheet)a.styleSheet.cssText=b;else a.appendChild(d.createTextNode(b));h.appendChild(a);this.load('//dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&r='+Math.random());return settings_timer;}};}());_vwo_settings_timer=_vwo_code.init();
</script> 
  <!-- End Visual Website Optimizer Asynchronous Code -->
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject3']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.distilled.net/static/js/au3.js','buffoon');

  buffoon('create', 'UA-1618063-17', 'distilled.net', 'AlbertTheImmutable');
  buffoon('AlbertTheImmutable.require', 'displayfeatures');
  buffoon('AlbertTheImmutable.send', 'pageview');

</script> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-1618063-18', 'distilled.net', 'DianaTheIndefatigable');
  ga('DianaTheIndefatigable.require', 'displayfeatures');
  ga('DianaTheIndefatigable.send', 'pageview');

</script>
  <link rel="amphtml" href="https://www.distilled.net/resources/web-scraping-with-ruby-and-nokogiri-for-beginners/?amp=true">
 </head>
 <body class="store blogPage noSpikes"> 
  <script type="text/javascript" src="//cdn.optimizely.com/js/169113814.js"></script> 
  <!-- Google Tag Manager --> 
  <noscript>
   <iframe src="//www.googletagmanager.com/ns.html?id=GTM-DHXB8" height="0" width="0" style="display:none;visibility:hidden"></iframe>
  </noscript> 
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-DHXB8');</script> 
  <!-- End Google Tag Manager --> 
  <div> 
   <div class="hide wide-nav-overlay"></div> 
   <header> 
    <div id="navbar-main" class="row"> 
     <div class="logo push-middle"> 
      <a href="/"> <img src="/static/images/press/logo.svg"> </a> 
     </div> 
     <nav class="align-right push-right push-bottom hide-md nav-dropdowns"> 
      <ul> 
       <li> <a href="/services/" class="no-dropdown"> Consulting &amp; Services </a> </li> 
       <li> <a href="/events/" class="no-dropdown"> Conferences </a> </li> 
       <li> <a href="/resources/" class="dropdown-link"> Resources <span class="caret down"></span> </a> 
        <div class="dropdown" id="resources-dropdown" style="display: none;"> 
         <ul> 
          <li><a href="/resources/">Blog</a></li> 
          <li><a href="/resources/features/">Guides</a></li> 
          <li><a href="/u/">DistilledU</a></li> 
          <li><a href="/resources/videos/">Videos</a></li> 
         </ul> 
        </div> </li> 
       <li> <a href="/about/" class="dropdown-link"> About us <span class="caret down"></span> </a> 
        <div class="dropdown" id="about-dropdown" style="display: none;"> 
         <ul> 
          <li><a href="/jobs/">Jobs</a></li> 
          <li><a href="/about/">Our Story</a></li> 
          <li><a href="/about/people/">The Team</a></li> 
         </ul> 
        </div> </li> 
       <li> <a href="/contact/" class="no-dropdown"> Contact </a> </li> 
      </ul> 
      <script type="text/javascript">
            $(function() {
  $("#navbar-main .dropdown-link").click(function(e) {
    e.preventDefault();
    $caret = $(this).find(".caret");
    $caret.toggleClass("down");
    $caret.toggleClass("up");
    $dropdown = $(this).next(".dropdown");
    $dropdown.slideToggle();
  });
});
</script> 
     </nav> 
     <div class="profile align-right push-right hide-md row"> 
      <div class="profile-details push-middle logged-out"> 
       <img src="/static/images/header/missing-profile.png"> 
       <span> <strong> Login </strong> or <strong> register </strong> </span> 
      </div> 
      <div class="login-box hide" id="header-login-box"> 
       <div class="login"> 
        <form action="/store/profile/login/" method="post"> 
         <input type="hidden" name="csrfmiddlewaretoken" value="ZEj4mcYd9QxmCm9sqfHA52BROJpt5JfZ"> 
         <input type="text" name="username" placeholder="Email Address"> 
         <input type="password" name="password" placeholder="Password"> 
         <input type="submit" class="button primary" value="Login"> 
         <a href="/store/profile/password/reset/">Reset password</a> 
        </form> 
       </div> 
       <div class="register row"> 
        <div class="push-middle">
         Not signed up yet?
        </div> 
        <div class="push-middle push-right align-right"> 
         <a class="button secondary" role="button" href="/store/profile/register/">Register now</a> 
        </div> 
       </div> 
      </div> 
      <script type="text/javascript">
            $(function() {
  $(".profile-details.logged-out").click(function(e) {
    $("#header-login-box").toggleClass("hide");
  });
});
</script> 
     </div> 
     <div class="nav-menu align-right push-right push-bottom"> 
      <a href="#" class="menu-open"> <i class="kube-menu"></i> Menu </a> 
     </div> 
     <nav id="wide-navigation" class="hide"> 
      <div> 
       <ul> 
        <li> <a href="/services/"> Consulting &amp; Services </a> </li> 
        <li> <a href="/events/"> Conferences </a> </li> 
        <li data-component="collapse"> <a href="#blogs-box" class="collapse-toggle"> Resources <span class="caret down push-right"></span> </a> 
         <ul id="blogs-box" class="collapse-box hide"> 
          <li><a href="/resources/">Blog</a></li> 
          <li><a href="/resources/features/">Guides</a></li> 
          <li><a href="/u/">DistilledU</a></li> 
          <li><a href="/resources/videos/">Videos</a></li> 
         </ul> </li> 
        <li data-component="collapse"> <a href="#about-box" class="collapse-toggle"> About us <span class="caret down push-right"></span> </a> 
         <ul id="about-box" class="collapse-box hide"> 
          <li><a href="/jobs/">Jobs</a></li> 
          <li><a href="/about/">Our Story</a></li> 
          <li><a href="/about/people/">The Team</a></li> 
         </ul> </li> 
        <li> <a href="/contact/"> Contact </a> </li> 
       </ul> 
       <div> 
        <a class="button primary" role="button" href="/store/profile/login/?next=/resources/web-scraping-with-ruby-and-nokogiri-for-beginners/">Login</a> &nbsp; 
        <a class="button secondary" role="button" href="/store/profile/register/">Register Now</a> 
       </div> 
      </div> 
     </nav> 
     <script type="text/javascript">
        $(function() {
  $(".menu-open").on("click", function() {
    $wideNav = $("#wide-navigation");
    $wideNav.toggleClass("hide");
    $wideNavOverlay = $(".wide-nav-overlay");
    $wideNavOverlay.toggleClass("hide");
  });
});
</script> 
    </div> 
   </header> 
   <div id="container" class="container wrapper clearfix blogPost"> 
    <div style="font-size: 130%;"> 
     <div class="contentPage_nav menu-header clearfix post_menu " style=""> 
      <h2><a href="/resources/" style="text-decoration: none;" id="resources-menu-resouces">Resources</a></h2> 
      <ul class="menu"> 
       <li> <a href="/resources/posts/" class="current" id="resources-menu-posts">Posts</a> </li> 
       <li> <a href="/resources/features/" id="resources-menu-features">Features</a> </li> 
       <li> <span class="ourLearningPlatformContainer"> <img src="/static/images/u/our-learning-platform.png" class="ourLearningPlatform"> </span> <a href="/u/" id="resources-menu-distilledu">DistilledU</a> </li> 
       <li> <a href="/resources/videos/" id="resources-menu-videos">Videos</a> </li> 
       <li> <a href="/u/glossary/" id="resources-menu-glossary">Glossary</a> </li> 
      </ul> 
     </div> 
    </div> 
    <div id="content" class="content" role="main"> 
     <div class="post type-post status-publish format-standard hentry"> 
      <h1 class="entry-title"> Web Scraping with Ruby and Nokogiri for Beginners </h1> 
      <div class="entry-meta"> 
       <span class="meta-prep meta-prep-author"> <span class="meta-sep">By</span> <span class="author vcard"> Sam Callender Published <a href="/resources/web-scraping-with-ruby-and-nokogiri-for-beginners/"><span class="entry-date">October 08, 2015</span></a> in the <a href="/resources/posts/seo/" title="View all posts in Marketing" rel="category tag"> SEO</a> category </span> </span>
      </div> 
      <div class="entry-content"> 
       <div class="full-blog-post"> 
        <p dir="ltr">I know what’s going through your head: “Noko what? &nbsp;Web scraping?” &nbsp;Learning how to write a web scraping program will significantly up your game as a resourceful and data driven online marketer. &nbsp;If you’re a web developer of any skill level you’ll also enjoy this guide as it will expand your horizons with a bunch of fun new project possibilities.</p> 
        <p><a href="https://en.wikipedia.org/wiki/Web_scraping" target="_blank">Web scraping</a> is a programmatic method of extracting data from websites. &nbsp;It is both loathed and loved by web developers and is as much an art as it is a science. &nbsp;When you browse the web you consume a ton of publicly available information. &nbsp;As a user, all of this information is presented to you as unstructured data in the form of HTML documents. &nbsp;Now imagine, what if you could take all of these pages of &nbsp;and turn them into structured data, pick out the pieces you like and export it all to a database or spreadsheet.</p> 
        <p>There are many ways that you, as a novice, can choose to scrape data from websites using free software and your computer. &nbsp;<a href="https://support.google.com/docs/answer/3093342?hl=en" target="_blank">Google Docs ImportXML</a> is a great solution for extracting data from an individual page and it only requires some basic knowledge about HTML and CSS. &nbsp;There are a lot of great resources on this topic if you just need to quickly scrape an individual page:</p> 
        <ul> 
         <li dir="ltr"> <p dir="ltr"><a href="/blog/distilled/guide-to-google-docs-importxml/" target="_blank">Distilled Guide To Google Docs ImportXML</a></p> </li> 
         <li dir="ltr"> <p dir="ltr">Check out this recent <a href="https://moz.com/blog/scraping-cleaning-your-data-with-google-sheets-closer-look" target="_blank">post</a> by my colleague Jeremy Gottlieb</p> </li> 
        </ul> 
        <p>ImportXML will only get you so far if you need access to a large data set from a site with thousands pages of data. &nbsp;Developing a simple web scraping program is a better method for gathering a site’s unstructured data at scale when an API, RSS feed or publicly database is not available. &nbsp;</p> 
        <p>Most popular scripting languages used in web development (Ruby, PHP, Python, JavaScript) have libraries and communities that have made it really easy to get started with web scraping. &nbsp;Each one has its pros and cons. For example, web scraping with JavaScript can take advantage of the language’s asynchronous nature so that it can overcome common blocks like accessing data that isn’t rendered until a client-side event is trigger (think of a page where content loads as the user scrolls down the page). &nbsp;Although JavaScript has recently become the envogue language of both back-end and front-end web development, it can be a bit overwhelming if you’re new to programming. &nbsp;</p> 
        <p>Ruby, which we’ll be using, is a great language to build your first web scraper with for a couple of reasons:</p> 
        <ul> 
         <li dir="ltr"> <p dir="ltr">It’s a very straight-forward and powerful language, so it’s a great place to start for newbies to web development and programming.</p> </li> 
         <li dir="ltr"> <p dir="ltr">It’s got an awesome community of developers with tons of documentation online.</p> </li> 
         <li dir="ltr"> <p dir="ltr">It comes preinstalled on all new Mac computers so there will be minimal work setting up your machine to execute your web scraping program. &nbsp;</p> </li> 
        </ul> 
        <p dir="ltr">So what is <a href="http://www.nokogiri.org/" target="_blank">Nokogiri</a>? &nbsp;It’s a ruby gem that will transform a webpage into a ruby object and make all of this web scraping stuff really easy. &nbsp;Ruby gems are optional add-on libraries of code that members of the ruby community make available to other developers so that they don’t have to reinvent the wheel each time we build an app with a common use case. &nbsp;We have Aaron Patterson and Mike Dalessio to thank for developing Nokogiri, which makes parsing HTML and XML a breeze.</p> 
        <h2 dir="ltr">Use case for marketers</h2> 
        <p dir="ltr">If you’re an online marketer and are still not sold on learning how to build a web scraper I have a couple of use cases for you:</p> 
        <h3 dir="ltr">Data visualizations</h3> 
        <p>At Distilled <a href="/resources/story-focussed-data-visualisation/" target="_blank">we love building data visualizations</a> for our clients and our work is some of the best out there, but building a great interactive piece is not easy. &nbsp;You have to come up with a compelling concept and then you need to gather the data to build your concept on top of. &nbsp;Web scraping opens the door to a whole new world of data sources for these types of projects. &nbsp;You’re no longer limited to working with APIs and publicly available data sources.</p> 
        <h3 dir="ltr">SEO use cases</h3> 
        <h3 dir="ltr">Automate a site audit. &nbsp;</h3> 
        <p dir="ltr">Let’s say you have a ton of pages that you need to optimize for your own site or a client. &nbsp;Nobody wants to spend hours copying and pasting things like title tags, meta-description tags and page headers into a spreadsheet. &nbsp;Instead you could write a web scraping program to loop through the pages of a site and save all this information to a CSV.</p> 
        <h3 dir="ltr">Gather all of a site’s URLs from an XML site map</h3> 
        <p dir="ltr">The value of this is pretty self explanatory. &nbsp;A scraping program can help you parse one or many sitemaps and conveniently dump all the URLs into a CSV file for some other use.</p> 
        <h4 dir="ltr">Crawl a site to build a keyword list</h4> 
        <p dir="ltr">Pretend your main competitor is ranking really well in SERPs and you want to figure out what keywords they’re targeting across a large number of pages. &nbsp;You could write a web scraping program to crawl a list of pages and aggregate on-page content like product descriptions or SEO blurbs so that you can better understand what terms they may be targeting.</p> 
        <h3 dir="ltr">E-commerce intelligence</h3> 
        <h4 dir="ltr">Compare your product catalog</h4> 
        <p dir="ltr">There are many reasons online marketers should gather intelligence on their competitors catalog. &nbsp;Most importantly, you should know how your assortment compares to your competition and how this will impact your SEO and PPC strategy.</p> 
        <h4 dir="ltr">Gather product information</h4> 
        <p>Amazon, Walmart and most major players in e-commerce use automated web scraping to automate their pricing based on their competitions listings. &nbsp;These are very sophisticated use cases, however even simple one time web scraping efforts can give you access to your competitions average prices in a category, they’re most popular items and which items receive the best product reviews.</p> 
        <p dir="ltr">Now that you’ve learned a bit more about web scraping, it’s use cases and Nokogiri, let’s build simple web scraping program together.</p> 
        <h1>Tutorial</h1> 
        <p dir="ltr">In this tutorial we’ll write a simple web scraping program in Ruby that uses Nokogiri. &nbsp;Our objective will be to scrape the headline text from 100 most recent listings from the <a href="https://newyork.craigslist.org/search/pet" target="_blank">Pets section of Craigslist NYC</a>. &nbsp;At the end of this tutorial we’ll have 100 headlines neatly stored in a CSV file.&nbsp;Please note that this tutorial is written from the point of view of a Mac user. &nbsp;The code used in the screenshots of this tutorial is available in this <a href="https://github.com/samcallender/Nokogiri_Tutorial" target="_blank">GitHub Repo</a>.</p> 
        <h3 dir="ltr">Set up</h3> 
        <p dir="ltr">To complete the tutorial in the next section of this post you will need the following:</p> 
        <ol> 
         <li dir="ltr"> <p dir="ltr">A computer with the Ruby program language installed on it. &nbsp;If you have a Mac you’re already set.</p> </li> 
         <li dir="ltr"> <p dir="ltr">A text editor to write your ruby web scraping program in. &nbsp;If you don’t already have one on your machine, I recommend downloading <a href="http://www.sublimetext.com/" target="_blank">Sublime Text</a>. &nbsp;Sublime Text has lots of cool features to make coding a more enjoyable experience.</p> </li> 
         <li dir="ltr"> <p dir="ltr">A basic understanding of HTML and CSS. &nbsp;Specifically, how web developers apply CSS classes and IDs to HTML elements. &nbsp;If this is new to you I recommend completing the free HTML and CSS course from <a href="https://www.codecademy.com/tracks/web" target="_blank">Codecademy</a>. &nbsp;<a href="http://www.w3schools.com/" target="_blank">W3schools</a> is also a great resource if you’re new to web development.</p> </li> 
         <li dir="ltr"> <p dir="ltr">Some baseline knowledge of Ruby (optional). &nbsp;If Ruby is totally new to you then check out <a href="https://www.codecademy.com/en/tracks/ruby" target="_blank">Codecademy’s Ruby track for free</a>. &nbsp;You should still be able to follow along without this though.</p> </li> 
        </ol> 
        <h4 dir="ltr">Step 1 - Install dependencies</h4> 
        <p dir="ltr">Let’s get started by installing three ruby gems that we’ll use for our web-scraper:</p> 
        <ul> 
         <li dir="ltr"> <p dir="ltr"><a href="https://rubygems.org/gems/nokogiri/versions/1.6.6.2" target="_blank">Nokogiri</a></p> </li> 
         <li dir="ltr"> <p dir="ltr"><a href="https://rubygems.org/gems/httparty" target="_blank">HTTParty</a></p> </li> 
         <li dir="ltr"> <p dir="ltr"><a href="https://rubygems.org/gems/pry" target="_blank">Pry</a></p> </li> 
        </ul> 
        <p dir="ltr">We’ve already discussed Nokogiri, so let’s talk about HTTParty and Pry. &nbsp;HTTParty is the gem our web scraper will use to send an HTTP request to the page(s) we’re scraping. &nbsp;We’ll use HTTParty to send a GET request to the page we’re interested in scraping. &nbsp;This will return all the HTML of the page as a string. &nbsp;Pry is an awesome ruby debugging gem that we’ll use throughout this tutorial to help us parse the code from the site we’re scraping.</p> 
        <p dir="ltr">Install each of these gems on your machine by opening your terminal and running the following commands:</p> 
        <p dir="ltr"><strong>gem install nokogiri</strong></p> 
        <p dir="ltr"><strong>gem install httparty</strong></p> 
        <p dir="ltr"><strong></strong><strong>gem install pry</strong></p> 
        <p dir="ltr">Hint: &nbsp;If you don’t know how to open your terminal hit command spacebar and type “terminal” and then hit enter</p> 
        <p dir="ltr">Depending on how your Ruby environment is configured, you may have to run these commands with ‘sudo” such as:</p> 
        <p dir="ltr"><strong>sudo gem install nokogiri</strong></p> 
        <p dir="ltr"><strong>&nbsp;</strong>This will prompt you to input your machine’s password. &nbsp;I do not recommend you do this if anyone else uses your computer for web development, as you’re altering your computer’s Ruby environment.</p> 
        <h4 dir="ltr"><strong>&nbsp;</strong>Step 2 - Create your scraper file and require dependencies</h4> 
        <p dir="ltr"><strong>&nbsp;</strong><span style="line-height: 1.45em; font-size: 1.05em;">Create a folder on your desktop (or wherever you prefer) called nokogiri_tutorial. &nbsp;Next open up Sublime Text or another text editor and save a Ruby file to this folder called “web_scraper.rb”. &nbsp;Next we’ll require all the dependencies our program needs, as shown below:</span></p> 
        <p dir="ltr"><img src="https://lh5.googleusercontent.com/_HdJMqUj-zbLyeu_kmlbB23y683uzUgjTFRiY6JYfRgs9xMIPJY2ULfG9Xmz_ipiZOIInX6mVv-ReGuKznA1_XV5vmVBKbsJVJzBZMJQAQZcc7JYDfj-3mWFCdYJ43B0=s1600" width="624px;" height="123px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p dir="ltr"><strong>&nbsp;</strong></p> 
        <h4 dir="ltr">Step 3 - Send an HTTP request to the page</h4> 
        <p dir="ltr">Let’s create a variable called “page” &nbsp;and set it equal to an HTTParty GET request of the URL we’re going to scrape. &nbsp;After this insert “Pry.start(binding)”.</p> 
        <p dir="ltr"><strong>&nbsp;</strong></p> 
        <p dir="ltr"><img src="https://lh5.googleusercontent.com/e9-J3FbV3zsLqVpxKChuRd4E6cDJ-h144NhV_jh6OxGizB7fifk0ln9cAOy6epQPpSt4yf5oXIPcy0yf0p6QAurIZnuqg4vjVAlz1FoMSdwP8FCHRWnMvgnZk8zFog1L6bg=s1600" width="612px;" height="185px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p dir="ltr"><strong>&nbsp;</strong></p> 
        <p dir="ltr">In your terminal navigate to the folder that contains your web_scraping.rb file. &nbsp;If you saved the folder to your desktop you can get there by opening your terminal and entering the following command:</p> 
        <p dir="ltr"><strong>cd desktop/nokogiri_tutorial</strong></p> 
        <p dir="ltr">Then, run your web scraping program by entering the following command in your terminal:</p> 
        <p dir="ltr"><strong>Ruby web_scraper.rb</strong></p> 
        <p dir="ltr">Uour terminal screen should now be in Pry and look like the following:</p> 
        <p dir="ltr"><img src="https://lh6.googleusercontent.com/IxL6yzn_8MyRD5aJGKfPmnWqKTaNj7YFwjt4h76-T9tvmaHis0gf8G8j4d9ifxbOGRjQvBzF0xkEGk-YlLMBoUms0x6zBWiFCPU1q75awHVCu99i33f5Dz5wli4-lQFdDPc=s1600" width="606px;" height="184px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p dir="ltr"><strong><br></strong>In your terminal type “page” and this will return as a string the HTML of the New York craigslist we’re scraping.</p> 
        <p dir="ltr"></p> 
        <p dir="ltr"><img src="https://lh6.googleusercontent.com/WKSoulRauQKPaOYpFSUd0tkiurgAwuGiNKwNeb-H5GGu5tXvCsYRKYNi_skKKk_Mc-Vu0YWgmPff2zqj3a32g40MMl_lJ1w6osyFz-QUa7PTV-Km6RpTFfiF40-ToNnwbw=s1600" width="565px;" height="338px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p dir="ltr"></p> 
        <p dir="ltr">Pretty cool right?! &nbsp;We just accessed a website using a program we wrote instead of using our browser. &nbsp;&nbsp;But this giant string is not of much use to us if we want to scrape all the pet listings in New York. &nbsp;Before we move on to step for type “exit” in your terminal to leave Pry and return to the folder your program is located in.</p> 
        <p dir="ltr"></p> 
        <h4 dir="ltr">Step 4: Use Nokogiri</h4> 
        <p dir="ltr">Now let’s use Nokogiri to convert the HTML string of the pet listings page into a Nokogiri object so that we begin parsing the data and extract the information we want from the page. &nbsp;To do this, create a new variable called “parse_page” and set it equal to Nokogiri’s method for converting an HTML string into a Nokogiri object. &nbsp;Leave your Pry at the bottom of the document:</p> 
        <p dir="ltr"></p> 
        <p dir="ltr"><img src="https://lh6.googleusercontent.com/4Yiy2C0XqRoj2pHT-X_5YDQ0rfvZLKUgJhpvUQI-99BpahaYP-A_a6qEWBEMGDg99Q3O1qCktj7HDJC09JY0NFZShsw3HLSr9v-CfcN340vmIddMYtqxEtfNHeVyi5-8Xzs=s1600" width="613px;" height="219px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p dir="ltr"></p> 
        <p dir="ltr">Save your Ruby file and run it again in your terminal. &nbsp;Pry will open again and this time you will enter the name of the new variable we created, “parse_page”. &nbsp;This will return the craigslist page as a a Nokogiri object and you should see something similar to the image below.</p> 
        <p dir="ltr"></p> 
        <p dir="ltr"><img src="https://lh3.googleusercontent.com/_hjgYmrt2-zt5oqdOR3AR94n2B_LQnPmzNvMJwSVnpzMwuDL1nP4uWZ_KKEsh6FjvKQFn9atS1hYoDoU1SN05WFREjN757DfSUikg7rQuMuQWdNGmXZTE7CwaLr66PTIyA=s1600" width="557px;" height="368px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p dir="ltr"></p> 
        <p dir="ltr">At this point I recommend creating an HTML file in the same folder called pets.html and copying and pasting what was returned from parse_page into this file. &nbsp;This formatted HTML will come in handy for reference purposes when we begin parsing the data. &nbsp;Before beginning the next section remember to exit out of Pry in your terminal.</p> 
        <p dir="ltr"></p> 
        <h4 dir="ltr">Step 5: Parsing the data</h4> 
        <p dir="ltr">This next part is where some basic programming knowledge will come in handy. &nbsp;Before we begin parsing the data let’s create an array called “pets_array”. &nbsp;After we parse the code from the parse_page variable we’ll push each individual Craigslist NYC pets listing into this array and then eventually into a CSV file.</p> 
        <p dir="ltr"></p> 
        <p dir="ltr"><img src="https://lh3.googleusercontent.com/SKG-I1xdTadL7y1Xua4mDU3z5Rvv7oxFzCa6QlOR8TqV3zlLmm3LGLlvq-P4ofxMZTX045PUMrxLLLaGL_45PUv-EmJ7b9L6T54XVAofN2EQxpaXaP9IuEpnpqpqOMTH=s1600" width="587px;" height="250px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p dir="ltr">Our parse_page variable is a Nokogiri object, which let’s us use Nokogiri’s .css method to drill down into the HTML document and find the the headline text of all the pets listings (note you can find all Nokogiri methods <a href="https://github.com/sparklemotion/nokogiri/wiki/Cheat-sheet">here</a>. &nbsp;This is where our copy of the pets.html file we saved in part four will come in handy. &nbsp;We first need locate the HTML element all of the pet listings are in. &nbsp;You can also do this by using the inspect element tool in chrome or by viewing the page source code.</p> 
        <p dir="ltr">It looks like all of our listings are located in a div with where the class=”content”. &nbsp;We select this div by using the .css method on our parse_page object like so:</p> 
        <p dir="ltr"><strong>parse_page.css(‘.content’)</strong></p> 
        <p dir="ltr">Move your “Pry.start (binding)” &nbsp;before this new line of code and then enter it manually to see what returns. &nbsp;You should see just the HTML within this div. &nbsp;So let’s drill deeper! &nbsp;Each listing is in its own div with where class=”row” and the text for the listing within each div is an anchor tag (&lt;a&gt;&lt;/a&gt;) where the class=”hdrlnk”. &nbsp;We can extract these anchor tags that wrap around our text by chaining addition .css methods to the first one like so:</p> 
        <p dir="ltr"><strong>parse_page.css('.content').css('.row').css('.hdrlnk')</strong></p> 
        <p dir="ltr">If you do this in Pry, you’ll see a Nokogiri object that contains all the anchor tags that had the class of hdrlnk. &nbsp;It will look something like this in your terminal:</p> 
        <p dir="ltr"><img src="https://lh6.googleusercontent.com/jrhe8J5Cwd5OydDcsO7zFMnHYOBzgdKhu3w9dzfXMr5Iu-xcrI0j5rbXnvIG5qKw1Ea2F13zUqQL9SO65lraj5INumt_46B6MHAqbsKrIA8ZFT27noXCXgB4O1tln0pWQg=s1600" width="579px;" height="197px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p dir="ltr">So we need to get the all headline text out of this object (that’s the green text above), convert it to a string and push it into an array so that we can ultimately move each headline from the array into a CSV file. &nbsp;To do this I’m going to use Ruby’s .text method and .map method on each anchor tag in the nokogiri object as shown below:</p> 
        <p></p> 
        <p dir="ltr"><img src="https://lh5.googleusercontent.com/UArNqaaP37Ut5qlUp7OtAck1ZZ9HckQjuG48E6W0DwoUVaEt5e8H3pYTKoZCeDfXBnYop7_qjWQFOY9hs9QGtv44C73y2-REZxY4Ob2LPUATeKubsFhKm2AzC58wQKo0rQ=s1600" width="582px;" height="365px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p></p> 
        <p dir="ltr">Run the program in your terminal. &nbsp;When Pry opens, type in the blank array we created at the beginning of step 5:</p> 
        <p dir="ltr"><strong>pets_array</strong></p> 
        <p dir="ltr">In your terminal you should see a beautiful array with the headlines of all the pet listings like the one below.</p> 
        <p dir="ltr"><img src="https://lh3.googleusercontent.com/gWTqfqlOJnjt49Npk1V9Cy7grBCB7M8wP-I6pKwD94Uos6XuKTdRSUAh19AFQMqL2csJhCDTzDOPpgjE_cyiQ8MWsR_FBs86wcsAsbJ9w5rg2D83HaVOBZqG7MwX4vp2iw=s1600" width="582px;" height="326px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <h4 dir="ltr">Step 6: Exporting data to a CSV</h4> 
        <p dir="ltr">Success! &nbsp;You’ve scraped a website and converted unstructured data to structured data! &nbsp;From here you could take many paths. &nbsp;You could scrape more information about each post and turn each post into an object with more attributes than just the headline text. &nbsp;That’s a little more advanced, but I encourage you to figure it out. &nbsp;You could also created a more complicated scraper that uses a defined list of pages, or a <a href="http://www.tutorialspoint.com/ruby/ruby_loops.htm">while loop</a> to iterate through dozens, hundreds or even thousands of pages on the site and scrape many more pet listings.</p> 
        <p dir="ltr">For now let’s just focus on getting this array of listings into a CSV file so that you can manipulate them however you want in Microsoft Excel. &nbsp;If you can complete this next step you can use your new Nokogiri scraping skills to quickly rip data from all sorts of new sources that previously would have required you to manually extract the via copy and paste.</p> 
        <p dir="ltr">Let’s go back to our terminal. &nbsp;If you’re still in Pry be sure to exit out so that your terminal is in the the nokogiri_tutorial folder that contains your Ruby scraping program and the pets.html file. &nbsp;Type the following command into your terminal:</p> 
        <p dir="ltr"><strong>touch pets.csv</strong></p> 
        <p dir="ltr">You now have a blank csv file that we can save the data from pets_array to. &nbsp;To do this we’re to remove the Pry.start(binding) from our program and we’re going to add one more section of code:</p> 
        <p dir="ltr"></p> 
        <p dir="ltr"><img src="https://lh4.googleusercontent.com/Zz1vqLC0m__ggYMyBrl1TikqtFza7jZEgFEokJkW9iXhDrtyuiDydCyThyncZCogimKWkpSF_Hv_7Ul8WUiWBqIsgWGXEmk0x3EpptMZJ2epoVokO2jRQO-TSfxMJpql-7c=s1600" width="584px;" height="449px;" style="display: block; margin-left: auto; margin-right: auto;"></p> 
        <p dir="ltr"></p> 
        <p dir="ltr">You should now be able to open your CSV file in Sublime Text or Excel and see all the pet listing. Congrats!</p> 
        <h2 dir="ltr">Additional considerations</h2> 
        <p dir="ltr"></p> 
        <h3 dir="ltr">Technical limitations</h3> 
        <p dir="ltr">There are some limitations to scraping with Nokogiri. &nbsp;The biggest limitation is that you’ll only be able to scrape page content that is loaded server side. &nbsp;If content is loaded on a page using Ajax you will not be able to scrape it with Nokogiri alone. &nbsp;If you’re interested in learning some JavaScript scraping, you can get around Ajax rendered content using <a href="https://productbuilder.wordpress.com/2014/02/23/screen-scraping-with-spookyjs/" target="_blank">Spooky.js</a>. &nbsp;Second, you will most likely have trouble scraping if the site requires authentication like a username and password. &nbsp;</p> 
        <h3 dir="ltr">Legal implications</h3> 
        <p dir="ltr">The legal implications of web scraping could be a whole series of posts. &nbsp;The bottom line is to proceed with caution. &nbsp;The legality of web scraping seems to center on what you do with the data you scrape and whether or not you’re within the terms of use of the site you’re scraping. &nbsp;Google and Yahoo are scraping the entire internet all the time, but other sites that scrape and reuse data have landed in trouble. In short, be careful if you decide to scrape a site (check the terms of use), and be extra careful about posting the scraped data in a public forum. <strong>It's always best to err on the side of caution.</strong></p> 
        <p dir="ltr">For more info on legality, <a href="https://www.quora.com/What-is-the-legality-of-web-scraping">I'd start here.</a></p> 
        <h3 dir="ltr">Combine your web scraping with these cool things</h3> 
        <p dir="ltr">Want to turn your web scraper into a scraping bot? &nbsp;Combine your web scraping program with another Ruby gem called <a href="http://mechanize.rubyforge.org/" target="_blank">Mechanize</a>. &nbsp;Mechanize will allow your program to fill out forms and mimic other tasks normal users must complete to access content. &nbsp;Mechanize can be used to download images and other content, but (as before) only do this if you are in compliance with the site’s terms and conditions.</p> 
        <p dir="ltr">If you're interested in presenting your scraped data online you should check out the <a href="http://d3js.org/" target="_blank">D3.js</a> data visualization JavaScript library. &nbsp;You’ll need some experience with JavaScript, but even JavaScript noobs can learn to create scatter plots, bar charts and maps by following a few simple tutorials. &nbsp;Check out Scott Murray’s <a href="http://alignedleft.com/tutorials/d3/" target="_blank">site</a> for an intro to D3. &nbsp;His book is pretty awesome too.</p> 
        <p dir="ltr">So, there you have it. Give it a whirl and let me know what you think in the comments below.</p> 
        <p></p> 
        <div class="blogSignup" id="blog-bottom-signup"> 
         <h3>Get blog posts via email</h3> 
         <div class="hubspot-signup-form hubspot-signup-form-row" id="blog-post-end-hubspot-form"> 
         </div> 
         <script>
            hbspt.forms.create({
              target: '#blog-post-end-hubspot-form',
              css: '',
              cssRequired: '',
              errorClass: 'none',
              errorMessageClass: 'hide',
              submitButtonClass: 'button primary',
              portalId: '2124102',
              formId: '8813300d-507f-42eb-94fe-b6452a7cc124'
            });
          </script> 
        </div> 
       </div> 
      </div> 
     </div> 
     <a name="comments"></a> 
     <div id="disqus_thread"></div> 
     <script type="text/javascript">
         // nasty hack - stickyfooter overflow: auto breaks disqus anchor tags
         $('#stickyfooterMain').css({'overflow': 'visible'});

         /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
         var disqus_shortname = 'distilled'; // required: replace example with your forum shortname
         var disqus_url = 'https://www.distilled.net/resources/web-scraping-with-ruby-and-nokogiri-for-beginners/';  // abosolute url to match disqus. also for localhost
         var disqus_identifier = '3077';

         // use this to ajax to the server for author notifications
         function disqus_config() {
             this.callbacks.onNewComment = [function(comment) {

                 $.ajax({
                     type: 'POST',
                     url: '/resources/new_disqus_comment/',
                     data: {'comment':comment.text,
                            'comment_id':comment.id,
                            'post_id':"3077"},
                     success: function(data) {},
                     error : function(data) {}
                 });

             }];
         }

         /* * * DON'T EDIT BELOW THIS LINE * * */
         (function() {
             var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
             dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
             (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
         })();
        </script> 
     <noscript>
      Please enable JavaScript to view the 
      <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a>
     </noscript> 
    </div> 
   </div> 
   <footer id="footer-main" class="row"> 
    <div class="push-middle links"> 
     <a href="/"><img src="/static/images/footer/white-logo.svg"></a> 
     <ul> 
      <li> <a href="/services/">Consulting &amp; Services</a> </li> 
      <li> <a href="/events/">Conferences</a> </li> 
      <li> <a href="/resources/">Resources</a> </li> 
      <li> <a href="/about/">About Us</a> </li> 
      <li> <a href="/contact/">Contact</a> </li> 
     </ul> 
    </div> 
    <div class="push-middle email-signup"> 
     <p>Get the best of Distilled in your inbox</p> 
     <div class="hubspot-signup-form-footer" id="footer-hubspot-form"> 
     </div> 
     <!--[if lte IE 8]>
            <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2-legacy.js"></script>
        <![endif]--> 
     <!-- <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script> --> 
     <script>
          hbspt.forms.create({
            target: '#footer-hubspot-form',
            css: '',
            cssRequired: '',
            errorClass: 'none',
            errorMessageClass: 'hide',
            submitButtonClass: 'button primary',
            portalId: '2124102',
            formId: '6b988172-6152-4402-a18c-402c86d65cae'
          });
        </script> 
     <p>Follow us</p> 
     <div class="row logos"> 
      <a href="http://www.facebook.com/distilled" class="logo" onclick="dataLayer.push({'event': 'trackEvent', 'event_category': 'Goals', 'event_action': 'blog-facebook', 'event_label': 'footer'});"> 
       <svg class="facebook" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 32 32"> 
        <g fill="none" fill-rule="evenodd"> 
         <ellipse cx="16" cy="16" fill="#FFF" rx="16" ry="16"></ellipse> 
         <path fill="#58585B" d="M19.827 8.123C19.55 8.082 18.6 8 17.497 8c-2.308 0-3.892 1.41-3.892 3.995v2.227H11v3.024h2.605V25h3.126v-7.754h2.595l.399-3.024H16.73V12.29c0-.869.235-1.471 1.492-1.471h1.604V8.123z"></path> 
        </g> 
       </svg> </a> 
      <a href="http://twitter.com/distilled" class="logo" onclick="dataLayer.push({'event': 'trackEvent', 'event_category': 'Goals', 'event_action': 'blog-twitter', 'event_label': 'footer'});"> 
       <svg class="twitter" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 32 32"> 
        <g fill="none" fill-rule="evenodd"> 
         <ellipse cx="16" cy="16" fill="#FFF" rx="16" ry="16"></ellipse> 
         <path fill="#58585B" d="M23.775 12.425a6.071 6.071 0 0 1-1.744.469 3.02 3.02 0 0 0 1.332-1.669c-.582.347-1.238.6-1.922.731A3.02 3.02 0 0 0 19.228 11a3.027 3.027 0 0 0-3.028 3.028c0 .235.028.469.075.694a8.607 8.607 0 0 1-6.244-3.169c-.262.45-.412.966-.412 1.528 0 1.05.534 1.978 1.35 2.522A3.05 3.05 0 0 1 9.6 15.22v.037c0 1.472 1.04 2.69 2.428 2.972a3.201 3.201 0 0 1-.797.103c-.197 0-.384-.018-.572-.047a3.033 3.033 0 0 0 2.832 2.1 6.064 6.064 0 0 1-3.76 1.294A6.26 6.26 0 0 1 9 21.641 8.557 8.557 0 0 0 13.65 23c5.569 0 8.616-4.612 8.616-8.616 0-.13 0-.262-.01-.393a6.51 6.51 0 0 0 1.519-1.566z"></path> 
        </g> 
       </svg> </a> 
      <a href="/feed/" class="logo" onclick="dataLayer.push({'event': 'trackEvent', 'event_category': 'Goals', 'event_action': 'blog-rss', 'event_label': 'footer'});"> 
       <svg class="rss" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewbox="0 0 32 32"> 
        <g fill="none" fill-rule="evenodd"> 
         <ellipse cx="16" cy="16" fill="#FFF" rx="16" ry="16"></ellipse> 
         <path fill="#58585B" d="M14.214 20.179A1.608 1.608 0 1 1 11 20.178a1.608 1.608 0 0 1 3.215 0zm4.286 1.03a.541.541 0 0 1-.142.4.51.51 0 0 1-.394.177h-1.13a.529.529 0 0 1-.527-.486 5.356 5.356 0 0 0-4.822-4.821.529.529 0 0 1-.485-.528v-1.13a.51.51 0 0 1 .176-.393.513.513 0 0 1 .36-.142h.042a7.518 7.518 0 0 1 4.729 2.193 7.518 7.518 0 0 1 2.193 4.73zm4.286.016a.51.51 0 0 1-.15.393.513.513 0 0 1-.386.168h-1.197a.533.533 0 0 1-.536-.503 9.583 9.583 0 0 0-9.015-9.023.531.531 0 0 1-.502-.527v-1.197c0-.151.059-.285.167-.385.1-.1.235-.151.369-.151h.025c2.93.15 5.683 1.381 7.76 3.465a11.785 11.785 0 0 1 3.465 7.76z"></path> 
        </g> 
       </svg> </a> 
     </div> 
     <!-- <a href=""><img src="/static/images/footer/facebook.svg" class="logo"></a>
        <a href=""><img src="/static/images/footer/twitter.svg" class="logo"></a>
        <a href=""><img src="/static/images/footer/rss.svg" class="logo"></a> --> 
    </div> 
   </footer> 
  </div> 
  <script type="text/javascript" src="//www.distilled.net/static/CACHE/js/5e0a17ed8f83.js"></script> 
  <script type="text/javascript" src="//www.distilled.net/static/CACHE/js/cada278e402d.js"></script> 
  <script src="//apis.google.com/js/plusone.js" type="text/javascript-deferred"></script> 
  <script src="//platform.twitter.com/widgets.js" type="text/javascript-deferred"></script> 
  <script src="//connect.facebook.net/en_US/all.js#xfbml=1" type="text/javascript-deferred"></script> 
  <script type="text/javascript" src="//www.distilled.net/static/CACHE/js/1d43951c4b1e.js"></script> 
  <div class="topLeftPopover"> 
  </div>  
 </body>
</html>