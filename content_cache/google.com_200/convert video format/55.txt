<!doctype html>
<!--[if lt IE 7]><html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if (IE 7)&!(IEMobile)]><html class="no-js lt-ie9 lt-ie8" lang="en"><![endif]-->
<!--[if (IE 8)&!(IEMobile)]><html class="no-js lt-ie9" lang="en"><![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
 <!--<![endif]-->
 <head> 
  <meta charset="utf-8"> 
  <title>Convert React.createClass to ES6 Class</title> 
  <meta name="keywords" content="react"> 
  <!-- Twitter Cards --> 
  <meta name="twitter:title" content="Convert React.createClass to ES6 Class"> 
  <meta name="twitter:site" content="@dceddia"> 
  <meta name="twitter:creator" content="@dceddia"> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:image" content="https://daveceddia.com/images/logo.png"> 
  <!-- Open Graph --> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Convert React.createClass to ES6 Class"> 
  <meta property="og:image" content="https://daveceddia.com/images/logo.png"> 
  <meta property="og:url" content="https://daveceddia.com/convert-createclass-to-es6-class/"> 
  <meta property="og:site_name" content="Dave Ceddia"> 
  <link href="https://fonts.googleapis.com/css?family=Montserrat:400|PT+Serif:400,400i,700" rel="stylesheet"> 
  <link rel="canonical" href="https://daveceddia.com/convert-createclass-to-es6-class/"> 
  <link href="https://daveceddia.com/feed.xml" type="application/atom+xml" rel="alternate" title="Dave Ceddia Feed"> 
  <!-- http://t.co/dKP3o1e --> 
  <meta name="HandheldFriendly" content="True"> 
  <meta name="MobileOptimized" content="320"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <meta property="fb:admins" content="50205984"> 
  <!-- For all browsers --> 
  <link rel="stylesheet" type="text/css" href="https://daveceddia.com/assets/css/site.min.css?v=4"> 
  <!-- Webfonts --> 
  <meta http-equiv="cleartype" content="on"> 
  <!-- HTML5 Shiv and Media Query Support --> 
  <!--[if lt IE 9]>
  <script src="https://daveceddia.com/assets/js/vendor/html5shiv.min.js"></script>
  <script src="https://daveceddia.com/assets/js/vendor/respond.min.js"></script>
<![endif]--> 
  <!-- Icons --> 
  <!-- 16x16 --> 
  <link rel="shortcut icon" href="https://daveceddia.com/favicon.ico?v=2"> 
  <!-- 32x32 --> 
  <link rel="shortcut icon" href="https://daveceddia.com/favicon.png?v=2"> 
  <!-- 57x57 (precomposed) for iPhone 3GS, pre-2011 iPod Touch and older Android devices --> 
  <link rel="apple-touch-icon-precomposed" href="https://daveceddia.com/images/apple-touch-icon-precomposed.png"> 
  <!-- 72x72 (precomposed) for 1st generation iPad, iPad 2 and iPad mini --> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="https://daveceddia.com/images/apple-touch-icon-72x72-precomposed.png"> 
  <!-- 114x114 (precomposed) for iPhone 4, 4S, 5 and post-2011 iPod Touch --> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="https://daveceddia.com/images/apple-touch-icon-114x114-precomposed.png"> 
  <!-- 144x144 (precomposed) for iPad 3rd and 4th generation --> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://daveceddia.com/images/apple-touch-icon-144x144-precomposed.png"> 
 </head> 
 <body id="post"> 
  <nav role="navigation" id="site-nav"> 
   <header> 
    <a href="https://daveceddia.com/" class="site-logo" rel="home" title="Dave Ceddia"> <img src="https://daveceddia.com/images/logo.png" width="62" height="55" alt="Dave Ceddia logo"> </a> 
    <h1 class="site-title"><a href="https://daveceddia.com/">Dave Ceddia</a></h1> 
    <h2 class="site-description" itemprop="description">Articles to help you learn and master frontend development with React.</h2> 
   </header> 
   <ul> 
    <li> <a href="https://daveceddia.com/archives/">All Posts</a> </li> 
    <li> <a href="https://daveceddia.com/about/">About</a> </li> 
    <li> <a class="nav-cta" href="https://daveceddia.com/pure-react/">Book</a> </li> 
   </ul> 
  </nav> 
  <div id="main" role="main"> 
   <article class="hentry"> 
    <div class="entry-wrapper"> 
     <header class="entry-header"> 
      <span class="entry-tags"><a href="https://daveceddia.com/tags/#react" title="Pages tagged react">react</a></span> 
      <h1 class="entry-title">Convert React.createClass to ES6 Class</h1> 
     </header> 
     <footer class="entry-meta muted-centered"> 
      <span class="author vcard">By <span class="fn">Dave Ceddia</span></span> 
      <span class="entry-date date published"><time datetime="2017-05-11T19:57:36-04:00"><i class="fa fa-calendar-o"></i> May 11, 2017</time></span> 
      <span class="entry-comments"><i class="fa fa-comment-o"></i> <a href="#disqus_thread">Comment</a></span> 
     </footer> 
     <a id="twitter-follow" href="https://twitter.com/intent/follow?screen_name=dceddia" class="twitter-follow-button" target="_blank"> <i></i> Follow @dceddia</a> 
     <div class="entry-content"> 
      <p>As of React 15.5, createClass is deprecated. You’ll get warnings in the console if you’re using it in your code – and, when React 16 comes out, createClass will be removed entirely.</p> 
      <p>What to do? Well, update your code, of course!</p> 
      <p>This video and article go over how to convert to ES6 classes. You also might want to know how to convert to <a href="/convert-createclass-to-function-component/">stateless function components</a> and I’ve got a <a href="/convert-createclass-to-function-component/">video and article</a> for that as well.</p> 
      <iframe width="560" height="315" style="display:block;margin:2.5rem auto;" src="https://www.youtube.com/embed/AAHf4cPiBFc" frameborder="0" allowfullscreen></iframe> 
      <p><a rel="ck_modal" href="#ck_modal"> <button class="cta-button">Get the Code!</button> </a></p> 
      <h2 id="replace-createclass">Replace createClass</h2> 
      <p>When replacing <code>React.createClass</code> there are 2 options:</p> 
      <ul> 
       <li>use an ES6 class</li> 
       <li>use a stateless function (<a href="/convert-createclass-to-function-component/">learn how here</a>)</li> 
      </ul> 
      <p>Here’s how to decide:</p> 
      <ul> 
       <li>Use an ES6 class if either: 
        <ul> 
         <li>the component uses state (search for “this.state” to make sure)</li> 
         <li>the component uses lifecycle methods like <code>componentDidUpdate</code>, <code>componentDidMount</code>, etc.</li> 
         <li>the component has handler methods (<code>handleClick</code> and such)</li> 
        </ul> </li> 
       <li>Use a stateless function if none of the above is true</li> 
      </ul> 
      <p>This post covers converting to ES6 classes – <a href="/convert-createclass-to-function-component/">another one covers stateless functions</a>.</p> 
      <h2 id="before-createclass">Before: createClass</h2> 
      <pre><code class="language-jsx">import React from 'react';

var InputControl = React.createClass({
  propTypes: {
    initialValue: React.PropTypes.string
  },
  componentDidMount: function() {
    console.log('mounted');
  },
  getDefaultProps: function() {
    return {
      initialValue: ''
    };
  }},
  getInitialState: function() {
    return {
      text: this.props.initialValue || 'placeholder'
    };
  },
  handleChange: function(event) {
    this.setState({
      text: event.target.value
    });
  },
  render: function() {
    return (
      &lt;div&gt;
        Type something:
        &lt;input onChange={this.handleChange}
               value={this.state.text} /&gt;
      &lt;/div&gt;
    );
  }
});
</code></pre> 
      <h2 id="after-es6-class">After: ES6 Class</h2> 
      <pre><code class="language-jsx">import React from 'react';

// PropTypes is a separate package now:
import PropTypes from 'prop-types';

// replace React.createClass with a class:
class InputControl extends React.Component {
  // Use static properties for propTypes/defaultProps
  static propTypes = {
    initialValue: PropTypes.string
  }

  static defaultProps = {
    initialValue: ''
  }
  
  // Initialize state right in the class body,
  // with a property initializer:
  state = {
    text: this.props.initialValue || 'placeholder'
  }

  // Use an arrow function to preserve the "this" binding
  // without having to bind in the constructor, or in render.
  handleChange = (event) =&gt; {
    this.setState({
      text: event.target.value
    });
  }
  
  // In classes, functions are written without
  // the 'function' keyword. Also, notice there are no commas
  // between properties
  render() {
    return (
      &lt;div&gt;
        Type something:
        &lt;input onChange={this.handleChange}
               value={this.state.text} /&gt;
      &lt;/div&gt;
    );
  }
}
</code></pre> 
      <p>What changed?</p> 
      <ul> 
       <li>Properties in the class don’t have commas between them, like they do in plain objects.</li> 
       <li>Functions are written without the “function” keyword.</li> 
       <li>Arrow functions are used for member functions that need to preserve the <code>this</code> binding.</li> 
       <li>State is initialized with an assignment (“property initializer”) rather than having to implement a function to return it.</li> 
       <li>PropTypes is no longer under React, so <code>React.PropTypes</code> is replaced by <code>PropTypes</code>.</li> 
       <li>propTypes and defaultProps are set as static properties instead of functions, though they can still be set outside the class too, like <code>InputControl.propTypes = { ... }</code>.</li> 
      </ul> 
      <h2 id="example-project">Example Project</h2> 
      <p>You can download an example project with 7 different components, before and after conversion, including the codemod-generated version. You’ll also get notified when I publish new articles like this.</p> 
      <p><a rel="ck_modal" href="#ck_modal"> <button class="cta-button">Get the Code!</button> </a></p> 
      <h2 id="automate-it">Automate It!</h2> 
      <p>The helpful folks at Facebook created a project called <a href="https://github.com/reactjs/react-codemod">react-codemod</a> which holds a suite of scripts for automatically transforming old-and-busted React code into the modern style.</p> 
      <p>Right now it contains 11 different scripts to transform all kinds of things, like changing <code>React.PropTypes</code> to <code>PropTypes</code>, converting <code>createClass</code> to ES6 classes, and even sorting the methods in a component to match best practices. You can see the full list <a href="https://github.com/reactjs/react-codemod">in the repo</a> but we’ll go over how to apply the createClass -&gt; ES6 transform here.</p> 
      <p>Straight from the repo, the instructions are:</p> 
      <ul> 
       <li><code>npm install -g jscodeshift</code> (or <code>yarn global add jscodeshift</code>)</li> 
       <li><code>git clone https://github.com/reactjs/react-codemod.git</code></li> 
       <li>Run <code>npm install</code> (or <code>yarn</code>) in the react-codemod directory</li> 
       <li>Run <code>jscodeshift -t &lt;codemod-script&gt; &lt;path&gt;</code> 
        <ul> 
         <li>codemod scripts are under <code>react-codemod/transforms</code>, and <code>&lt;path&gt;</code> should point to a file (or multiple files) in your source code.</li> 
        </ul> </li> 
      </ul> 
      <p>The <code>jscodeshift</code> tool can take the the <code>-d</code> option for a dry-run (print what would be done, but don’t make changes) and the <code>-p</code> to print the output for comparison.</p> 
      <p>Here’s the command to transform createClass to ES6 (it’s long, I know):</p> 
      <p><code>jscodeshift -t react-codemod/transforms/class.js --mixin-module-name=react-addons-pure-render-mixin --flow=true --pure-component=true --remove-runtime-proptypes=false &lt;path&gt;</code></p> 
      <p>It did a nice job on the test file I passed through it. My results are included with the example project, so if you want to check that out, make sure to grab the example project!</p> 
      <p><a rel="ck_modal" href="#ck_modal"> <button class="cta-button">Get the Code!</button> </a></p> 
      <p>If you want more articles + videos like this, subscribe to my <a href="/newsletter/">newsletter</a> – I send out a new one every week or so.</p> 
      <div class="end-post-book"> 
       <p>For a step-by-step approach to learning React,<br> check out my <a href="https://daveceddia.com/pure-react/?utm_campaign=after-post">book</a> — grab 2 free sample chapters.</p> 
       <div style="text-align: left;font-size:14px;font-family: 'Open Sans',sans-serif;background-color: #fff;padding: 10px;border-radius: 2px;box-sizing: border-box;width: 40%;margin: 0 auto;background: #ecf5f9;"> 
        <div>
          As far as I am concerned, even the intro which is free is worth the price. 
        </div> 
        <div class="person"> 
         <div class="person--name" style="font-weight:600;">
          — Isaac
         </div> 
        </div> 
       </div> 
      </div> 
      <script async id="_ck_210462" src="https://forms.convertkit.com/210462?v=6"></script> 
      <div id="disqus_thread"></div>
      <!-- /#disqus_thread --> 
      <script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'daveceddia'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
</script> 
      <noscript>
       Please enable JavaScript to view the 
       <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
      </noscript> 
      <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a> 
     </div>
     <!-- /.entry-content --> 
    </div>
    <!-- /.entry-wrapper --> 
    <nav class="pagination" role="navigation"> 
     <a href="https://daveceddia.com/convert-createclass-to-function-component/" class="btn" title="Convert React.createClass to Stateless Function Components">Previous</a> 
     <a href="https://daveceddia.com/react-project-structure/" class="btn" title="How to Structure Your React Project">Next</a> 
    </nav>
    <!-- /.pagination --> 
   </article> 
  </div>
  <!-- /#main --> 
  <div class="footer-wrapper muted-centered"> 
   <footer role="contentinfo"> 
    <span>© 2017 Dave Ceddia.</span> 
    <div class="social-icons"> 
     <a href="http://twitter.com/dceddia" title="Dave Ceddia on Twitter" target="_blank"><i class="fa fa-twitter-square fa-2x"></i></a> 
     <a href="http://plus.google.com/+dceddia" title="Dave Ceddia on Google+" target="_blank"><i class="fa fa-google-plus-square fa-2x"></i></a> 
     <a href="http://github.com/dceddia" title="Dave Ceddia on Github" target="_blank"><i class="fa fa-github-square fa-2x"></i></a> 
     <a href="https://daveceddia.com/feed.xml" title="Atom/RSS feed"><i class="fa fa-rss-square fa-2x"></i></a> 
    </div>
    <!-- /.social-icons --> 
   </footer> 
  </div>
  <!-- /.footer-wrapper --> 
  <script type="text/javascript">
  var BASE_URL = 'https://daveceddia.com';
</script> 
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script> 
  <script src="https://daveceddia.com/assets/js/scripts.min.js"></script> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-82635227-1', 'auto');
  ga('require', 'displayfeatures');
  ga('require', 'linkid');
  ga('send', 'pageview');

</script> 
  <!-- Asynchronous Clicky tracking code--> 
  <script type="text/javascript">
var clicky_site_ids = clicky_site_ids || [];
clicky_site_ids.push(100838734);
(function() {
  var s = document.createElement('script');
  s.type = 'text/javascript';
  s.async = true;
  s.src = '//static.getclicky.com/js';
  ( document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0] ).appendChild( s );
})();
</script> 
  <noscript>
   <p><img alt="Clicky" width="1" height="1" src="//in.getclicky.com/100838734ns.gif"></p>
  </noscript> 
  <script>
$(function() {
  $('.click-to-show').click(function(e) {
    $(e.target).parent('.click-to-show').find('.highlight').toggle();
  });
});

function signupClicked() {
  // if(window.clicky){ window.clicky.goal('Newsletter Signup'); }
}
function inlineSignupClicked() {
  // if(window.clicky){ window.clicky.goal('[Inline] Newsletter Signup'); }
}
function testingInlineClicked() {
  // if(window.clicky){ window.clicky.goal('[Inline, Testing] Newsletter Signup'); }
}
</script> 
  <script src="//load.sumome.com/" data-sumo-site-id="e237fc3d7a2f1c8c986e03b6b4e1f5c1689d5e40133932e1f546a3748d5d6747" async></script>   
 </body>
</html>