<!doctype html>
<html lang="en" class="holla">
 <head> 
  <meta charset="UTF-8"> 
  <!--[if IE]><![endif]--> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
  <meta name="viewport" content="width=device-width, minimum-scale=0.8, maximum-scale=0.8 user-scalable=no"> 
  <title>An Intro To Using npm and ES6 Modules for Front End Development | Wes Bos</title> 
  <!--[if lt IE 9]> <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script> <![endif]--> 
  <link href="//fonts.googleapis.com/css?family=Raleway:400,300" rel="stylesheet" type="text/css"> 
  <link rel="shortcut icon" type="image/x-icon" href="//wesbos.com/wp-content/themes/wb2014/i/crown-yellow-small.png"> 
  <link rel="pingback" href="//wesbos.com/xmlrpc.php"> 
  <link href="//plus.google.com/103469418604192875360" rel="publisher"> 
  <!-- All in One SEO Pack 2.3.10.2 by Michael Torbert of Semper Fi Web Design[278,352] --> 
  <link rel="canonical" href="//wesbos.com/javascript-modules/"> 
  <!-- /all in one seo pack --> 
  <link rel="dns-prefetch" href="//s0.wp.com"> 
  <link rel="dns-prefetch" href="//ajax.googleapis.com"> 
  <link rel="dns-prefetch" href="//apis.google.com"> 
  <link rel="dns-prefetch" href="//use.typekit.net"> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="Wes Bos » Feed" href="//wesbos.com/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Wes Bos » Comments Feed" href="//wesbos.com/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Wes Bos » An Intro To Using npm and ES6 Modules for Front End Development Comments Feed" href="//wesbos.com/javascript-modules/feed/"> 
  <link rel="stylesheet" id="contact-form-7-css" href="//wesbos.com/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=4.5.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="YoutubeShortcodeMargenn-css" href="//wesbos.com/wp-content/plugins/youtube-shortcode/youtube-shortcode.css?ver=4.7.6" type="text/css" media="all"> 
  <link rel="stylesheet" id="style-name-css" href="//wesbos.com/wp-content/themes/wb2014/style.css?ver=4.7.6" type="text/css" media="all"> 
  <link rel="stylesheet" id="jetpack_css-css" href="//wesbos.com/wp-content/plugins/jetpack/css/jetpack.css?ver=4.3.2" type="text/css" media="all"> 
  <link rel="https://api.w.org/" href="//wesbos.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="//wesbos.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="//wesbos.com/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Matt Mullenweg to WordPress Community: “Learn JavaScript, Deeply”. Here are some resources for doing that." href="//wesbos.com/learn-javascript/"> 
  <link rel="next" title="CSS Highlight on Hover Animation" href="//wesbos.com/css-highlight-animation/"> 
  <meta name="generator" content="WordPress 4.7.6"> 
  <link rel="shortlink" href="//wp.me/p1rmdG-Xk"> 
  <link rel="alternate" type="application/json+oembed" href="//wesbos.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwesbos.com%2Fjavascript-modules%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="//wesbos.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwesbos.com%2Fjavascript-modules%2F&amp;format=xml"> 
  <!-- Twitter Cards Meta By WPDeveloper.net --> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:site" content="@wesbos"> 
  <meta name="twitter:creator" content="@wesbos"> 
  <meta name="twitter:url" content="http://wesbos.com/javascript-modules/"> 
  <meta name="twitter:title" content="An Intro To Using npm and ES6 Modules for Front End Development"> 
  <meta name="twitter:description" content="A big thanks to bitHound for sponsoring my time to research and write this article. Check out their service, which provides continuous analysis and quality checks for both your front and back end [...]"> 
  <meta name="twitter:image" content="http://wesbos.com/wp-content/uploads/2015/12/es6-NPM.png"> 
  <!-- Twitter Cards Meta By WPDeveloper.net --> 
  <link rel="dns-prefetch" href="//v0.wordpress.com"> 
  <!-- Jetpack Open Graph Tags --> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="An Intro To Using npm and ES6 Modules for Front End Development"> 
  <meta property="og:url" content="http://wesbos.com/javascript-modules/"> 
  <meta property="og:description" content="A big thanks to bitHound for sponsoring my time to research and write this article. Check out their service, which provides continuous analysis and quality checks for both your front and back end J…"> 
  <meta property="article:published_time" content="2015-12-14T18:00:47+00:00"> 
  <meta property="article:modified_time" content="2015-12-15T00:54:33+00:00"> 
  <meta property="og:site_name" content="Wes Bos"> 
  <meta property="og:image" content="http://wesbos.com/wp-content/uploads/2015/12/es6-NPM.png"> 
  <meta property="og:image:width" content="1655"> 
  <meta property="og:image:height" content="1024"> 
  <meta property="og:locale" content="en_US"> 
  <script>(function() {
var _fbq = window._fbq || (window._fbq = []);
if (!_fbq.loaded) {
var fbds = document.createElement('script');
fbds.async = true;
fbds.src = '//connect.facebook.net/en_US/fbds.js';
var s = document.getElementsByTagName('script')[0];
s.parentNode.insertBefore(fbds, s);
_fbq.loaded = true;
}
_fbq.push(['addPixelId', '1038184196213607']);
})();
window._fbq = window._fbq || [];
window._fbq.push(['track', 'PixelInitialized', {}]);
</script> 
 </head>
 <body class="post-template-default single single-post postid-3678 single-format-standard"> 
  <div class="wrapper"> 
   <header class="top"> 
    <div class="innerWrapper"> 
     <h1><a href="http://wesbos.com/" title="Wes Bos" rel="home">Wes Bos</a></h1> 
     <span class="nav-toggle">? Menu</span> 
     <nav class="menu"> 
      <ul id="menu-header" class="menu">
       <li id="menu-item-5" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-5"><a href="http://wesbos.com/about/">About</a></li> 
       <li id="menu-item-3766" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3766"><a href="http://wesbos.com/courses/">Courses</a></li> 
       <li id="menu-item-16" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-16"><a href="http://wesbos.com/work/">Work</a></li> 
       <li id="menu-item-846" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-846"><a href="http://wesbos.com/speaking-training/">Speaking &amp; Training</a></li> 
       <li id="menu-item-50" class="menu-item menu-item-type-post_type menu-item-object-page current_page_parent menu-item-50"><a href="http://wesbos.com/blog/">Blog &amp; Tutorials</a></li> 
       <li id="menu-item-17" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-17"><a href="http://wesbos.com/contact/">Contact</a></li> 
      </ul> 
      <div class="socialCta"> 
       <a href="https://twitter.com/wesbos" class="twitter-follow-button" data-show-count="true">Follow @wesbos</a> 
       <div class="g-ytsubscribe" data-channel="wesbos" data-layout="default" data-count="default"></div> 
       <div class="fb-like" data-href="https://www.facebook.com/wesbos.developer" data-layout="button_count" data-action="like" data-show-faces="false" data-share="false"></div> 
      </div> 
     </nav> 
    </div> 
   </header> 
   <section class="content"> 
    <div class="react-for-beginners es6"> 
     <a href="https://ES6.io/?utm_source=wesbos&amp;utm_medium=banner&amp;utm_campaign=promo%20code" class="rfb-logo"> <img width="150" src="//wesbos.com/wp-content/themes/wb2014/i/es6-logo.png" alt="ES6 for Everyone"> </a> 
     <div class="rfb-text"> 
      <p>I just launched a new course on ES6! Use the code <a href="https://ES6.io/?utm_source=wesbos&amp;utm_medium=banner&amp;utm_campaign=promo%20code"><span style="border-bottom:2px solid #ef4d28; color:black; font-style:italic; text-shadow:none; font-weight:100;">WESBOS</span></a> for $10 off.</p> 
      <h2>Strengthen your core JavaScript skills and master all that ES6 has to offer. <a href="https://es6.io/?utm_source=wesbos&amp;utm_medium=banner&amp;utm_campaign=promo%20code" style="border-bottom:2px solid #ef4d28; color:black; font-style:italic; text-shadow:none; font-weight:100;">Start Now ?</a></h2> 
     </div> 
    </div> 
    <!-- <div style="height:300px; background:url(http://wes.io/UZ7Z/sdf) fixed center; background-size:cover;"></div> --> 
    <div id="post-3678" class="post-3678 post type-post status-publish format-standard has-post-thumbnail hentry category-javascript"> 
     <h1 class="entry-title">An Intro To Using npm and ES6 Modules for Front End Development</h1> 
     <div class="postDetails"> 
      <div class="dateBlock"> 
       <span class="month">Dec</span> 
       <span class="day">14</span> 
       <span class="year">2015</span> 
      </div> 
      <ul class="post-categories"> 
       <li><a href="http://wesbos.com/category/javascript/" rel="category tag">JavaScript</a></li>
      </ul> 
      <div class="social"> 
       <a href="https://twitter.com/share" class="twitter-share-button" data-text="An Intro To Using npm and ES6 Modules for Front End Development" data-via="wesbos" data-related="wesbos">Tweet</a> 
       <a href="https://twitter.com/wesbos" class="twitter-follow-button" data-show-count="false">Follow @wesbos</a> 
       <div class="fb-like" data-href="http://wesbos.com/javascript-modules/" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false"></div> 
      </div> 
     </div> 
     <div class="entry-content"> 
      <p>A big thanks to <a href="https://bitHound.io">bitHound</a> for sponsoring my time to research and write this article. Check out their service, which provides continuous analysis and quality checks for both your front and back end JavaScript and its dependencies.</p> 
      <hr> 
      <p>The JavaScript landscape is changing quickly and along with it the way that we work with dependencies in our websites and applications.</p> 
      <p>This post is for developers who are currently loading in their JavaScript via multiple script tags and finding that dependency management is becoming a little cumbersome as their webpages or applications start to grow.</p> 
      <p>For a deep dive into everything the spec has to offer, as well as some great comparisons to CommonJS and AMD, check out Axel Rauschmayer’s <a href="http://exploringjs.com/">Exploring ES6 book</a>, particularly chapter 17.</p> 
      <h2>What are JavaScript Modules?</h2> 
      <p>JavaScript modules allow us to chunk our code into separate files inside our project or to use open source modules that we can install via <a href="https://www.npmjs.com/"><code>npm</code></a>. Writing your code in modules helps with organization, maintenance, testing, and most importantly, dependency management.</p> 
      <p>When we write JavaScript, it’s ideal if we can make modules that do one thing and one thing well. This separation allows us to pull in various modules only when we need them. Modules represent the core principle behind <code>npm</code> — when we need specific functionality, we can install the modules we need and load them into our application.</p> 
      <p>As time goes on, we’re seeing fewer large frameworks that do everything under the sun while seeing more <strong>small modules that do one thing and one thing well</strong>.</p> 
      <p>For example, many of us learned jQuery. It included methods for doing absolutely everything from CSS manipulation to ajax calls. Now, many of us are migrating to libraries like React where often we need to pull in additional packages to perform tasks like ajax or routing.</p> 
      <p>This article will take a look at using <code>npm</code> and ES6 Modules. There are other registries (e.g. <a href="http://bower.io/">Bower</a>) and other module loaders (e.g. <a href="https://nodejs.org/docs/latest/api/modules.html">CommonJS</a> and <a href="http://requirejs.org/docs/whyamd.html">AMD</a>), but there are plenty of articles already on those topics.</p> 
      <p>Whether you are doing Node or front end development, I believe that ES6 modules and <code>npm</code> are the way forward. If you look at any of the popular open source projects today, such as <a href="https://facebook.github.io/react/">React</a> or <a href="https://lodash.com/">lodash</a>, you’ll see they have also adopted ES6 modules + <code>npm</code>.</p> 
      <h3>Current workflow</h3> 
      <p>Many workflows for JavaScript look like this:</p> 
      <ol> 
       <li>Find a plugin or library that you want and download it from GitHub</li> 
       <li>Load it into your website via a script tag</li> 
       <li>Access it via a global variable or as a jQuery plugin</li> 
      </ol> 
      <p>This type of workflow has worked fairly well for years, but not without its issues:</p> 
      <ol> 
       <li>Updates to the plugins have to be done manually — it’s hard to know when there are critical bug fixes or new functionality available.</li> 
       <li>Messy source control history — all dependencies need to be checked into source control and unpleasantness can result when libraries are updated.</li> 
       <li>Little to no dependency management — many scripts duplicate functionality but could easily share that functionality via a small module.</li> 
       <li>Pollution and possible collisions within the global name space. </li> 
      </ol> 
      <p>The idea of writing JavaScript modules isn’t new, but with the arrival of ES6 and the industry settling on <code>npm</code> as the preferred package manager for JavaScript, we’re starting to see many devs migrate away from the above workflow and standardizing on using ES6 and <code>npm</code>.</p> 
      <h3>Hold on. <code>npm</code>? Isn’t that for Node?</h3> 
      <p>Many moons ago, <code>npm</code> began as the package manager for Node.js, but it has since evolved to become the package manager for JavaScript and front end dev in general. Nowadays, we can cut the whole song and dance for installing libraries down to 2 steps:</p> 
      <ol> 
       <li>Install our dependency from <code>npm</code>, e.g.: <code>npm install lodash --save</code></li> 
       <li>Import it into the file where we need that dependency, e.g.:</li> 
      </ol> 
      <pre><code class="language-javascript">import _ from 'lodash';
</code></pre> 
      <p>There’s a lot more that goes into setting this workflow up, as well as plenty to learn about <strong>importing</strong> and <strong>exporting</strong> from modules, so let’s dive into that.</p> 
      <h2>The idea behind Modules</h2> 
      <p>Instead of just loading everything into the global namespace, we use <code>import</code> and <code>export</code> statements to share things (variables, functions, data, anything…) between files. Each module will import the dependencies that it needs and export anything that should be made import-able by other files.</p> 
      <p>Getting everything working in current browsers requires a bundle step. We’ll talk about that later in this article, but for now let’s focus on the core ideas behind JavaScript Modules.</p> 
      <h2>Creating your own Modules</h2> 
      <p>Let’s say we are building an online store app and we need a file to hold all of our helper functions. We can create a module called <code>helpers.js</code> that contains a number of handy helper functions — <code>formatPrice(price)</code>, <code>addTax(price)</code> and <code>discountPrice(price, percentage)</code>, as well as some variables about the online store itself.</p> 
      <p>Our <code>helpers.js</code> file would look like this:</p> 
      <pre><code class="language-javascript">const taxRate = 0.13;

const couponCodes = ['BLACKFRIDAY', 'FREESHIP', 'HOHOHO'];

function formatPrice(price) {
    // .. do some formatting
    return formattedPrice;
}

function addTax(price) {
    return price * (1 + taxRate);
}

function discountPrice(price, percentage) {
    return price * (1 - percentage);
}
</code></pre> 
      <p>Now, each file can have its own local functions and variables, and unless they are explicitly exported, they won’t ever bleed into the scope of any other files. In the above example, we might not need <code>taxRate</code> to be available to other modules, but it’s a variable we need internally within this module.</p> 
      <p>How do we make the functions and variables above available to other modules? <strong>We need to export them</strong>. There are two kinds of exports in ES6 – named exports and a single default export. Since we need to make multiple functions and the <code>couponCodes</code> variable available, we will used named exports. More on this in a second.</p> 
      <p>The simplest and most straightforward way to export something from a module is to simply stick the <code>export</code> keyword in front, like so:</p> 
      <pre><code class="language-javascript">const taxRate = 0.13;

export const couponCodes = ['BLACKFRIDAY', 'FREESHIP', 'HOHOHO'];

export function formatPrice(price) {
    // .. do some formatting
    return formattedPrice;
}

//  ... 
</code></pre> 
      <p>We can also export them after the fact:</p> 
      <pre><code class="language-javascript">export couponCodes;
export formatPrice;
export addTax;
export discountPrice;
</code></pre> 
      <p>Or all at once:</p> 
      <pre><code class="language-javascript">export { couponCodes, formatPrice, addTax, discountPrice };
</code></pre> 
      <p>There are a handful of other ways use export, make sure to check the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export">MDN Docs</a> if you run into a situation where these aren’t working for you.</p> 
      <h2>Default export</h2> 
      <p>As mentioned before, there are two ways that you can export from a module — named or default. Above were examples of <strong>named exports</strong>. In order to import these exports into another module, we must know the names of the variables/functions we wish to import — examples of this coming in a second. The benefit of using named exports is that you can export multiple items from a single module.</p> 
      <p>The other type of export is the default export. Use named exports when your module needs to export multiple variables/functions, and use a default export when your module only needs to export one variable/function. While you can use both default exports and named exports within a single module, I’d advise you to pick only one style per module.</p> 
      <p>Examples of default exports may be a single <code>StorePicker</code> React Component or an array of data. For example, if we have the following array of data that we need to make available to other components, we can use <code>export default</code> to export it.</p> 
      <pre><code class="language-javascript">// people.js
const fullNames = ['Drew Minns', 'Heather Payne', 'Kristen Spencer', 'Wes Bos', 'Ryan Christiani'];

const firstNames = fullNames.map(name =&gt; name.split(' ').shift());

export default firstNames; // ["Drew", "Heather", "Kristen", "Wes", "Ryan"]
</code></pre> 
      <p>Just like above, you can append the <code>export default</code> in front of a function you wish to export as well:</p> 
      <pre><code class="language-javascript">export default function yell(name) { return `HEY ${name.toUpperCase()}!!` }
</code></pre> 
      <h2>Importing your own modules</h2> 
      <p>Now that we have separated our code into little modules and exported pieces that we need, we can go ahead an import parts or all of those modules into other parts of our application.</p> 
      <p>To import modules that are part of our codebase, we use an <code>import</code> statement and then point to a file’s location relative to the current module — just like you are used to in any HTML src path or CSS background image. You’ll notice that we leave off the <code>.js</code> extension as it’s not required.</p> 
      <p>It’s important to note that we don’t import modules once and have them available to the entire application as globals. Whenever one of your modules has a dependency on another module — say our above code needed a lodash method — we <em>must</em> <code>import</code> it into that module. If we require the same lodash function in 5 of our modules, then we import it 5 times. This helps keep a sane scope as well as makes our modules very portable and reusable.</p> 
      <h3>Importing named exports</h3> 
      <p>The first thing we exported was our helpers module. Remember we used <strong>named exports</strong> here, so we can import them in a number of ways:</p> 
      <pre><code class="language-javascript">// import everything as methods or properties of an object
import * as h from './helpers';
// and then use them
const displayTotal = h.formatPrice(5000);


// Or import everything into the module scope:
import * from './helpers';
const displayTotal = addTax(1000);
// I'd recommend against this style because it's less explicit
// and could lead to code that's harder to maintain


// or cherry pick only the things you need:
import { couponCodes, discountPrice } from './helpers';
const discount = discountPrice(500, 0.33);
</code></pre> 
      <h3>Importing default exports</h3> 
      <p>If you recall, we also exported an array of first names from <code>people.js</code>, since this was the only thing that needed to be exported from that module.</p> 
      <p>Default exports can be imported as any name — it’s not necessary to know the name of the variable, function, or class that was exported.</p> 
      <pre><code class="language-javascript">import firstNames from './people';
// or
import names from './people';
// or
import elephants from './people';
// these will all import the array of first names

// you can also get the default export like so:
import * as stuff from './people'
const theNames = stuff.default
</code></pre> 
      <h2>Importing modules from <code>npm</code></h2> 
      <p>Many of the modules we will use come from <code>npm</code>. Whether we need a full library like jQuery, a few utility functions from lodash, or something to perform Ajax requests like the superagent library, we can use <code>npm</code> to install them.</p> 
      <pre><code>npm install jquery --save
npm install lodash --save
npm install superagent --save
// or all in one go:
npm i jquery lodash superagent -S
</code></pre> 
      <p>Once these packages are in our <code>node_modules/</code> directory, we can import them into our code. By default, Babel transpiles ES6 import statements to CommonJS. Therefore, by using a bundler that understands this module syntax (like webpack or browserify) you can leverage the <code>node_modules/</code> directory. So our import statements only need to include the name of the Node module. Other bundlers may require a plugin or configuration to pull from your <code>node_modules/</code> folder.</p> 
      <pre><code class="language-javascript">// import entire library or plugin
import $ from 'jquery'; 
// and then go ahead and use them as we wish:
$('.cta').on('click',function() {
    alert('Ya clicked it!');
});
</code></pre> 
      <p>The above code works because jQuery is exported as a CommonJS module, and Babel transpiles our ES6 import statement to work with jQuery’s CommonJS export.</p> 
      <p>Let’s try it again with superagent. As jQuery, superagent exports the entire library as a <strong>default export</strong> using CommonJS, so we can import it with whatever variable name we like — it’s common to call it <code>request</code>.</p> 
      <pre><code class="language-javascript">// import the module into ours
import request from 'superagent';
// then use it!
request
    .get('https://api.github.com/users/wesbos')
    .end(function(err, res){
        console.log(res.body);
    });
</code></pre> 
      <h3>Importing Pieces or Cherry Picking</h3> 
      <p>One of my favorite things about ES6 modules is that many libraries allow you to cherry-pick just the pieces you want. lodash is a fantastic utility library filled with dozens of helpful JavaScript methods.</p> 
      <p>We can load the entire library into the <code>_</code> variable since lodash exports the entire library as a the main module export (again, Babel transpiles our import to treat it as if lodash is using <strong>export default</strong>):</p> 
      <pre><code class="language-javascript">// import the entire library in the _ variable
import _ from 'lodash';
const dogs = [
  { 'name': 'snickers', 'age': 2, breed : 'King Charles'},
  { 'name': 'prudence', 'age': 5, breed : 'Poodle'}
];

_.findWhere(dogs, { 'breed': 'King Charles' }); // snickers object
</code></pre> 
      <p>However, often you will want just one or two lodash methods instead of the entire library. Since lodash has exported every single one of its methods as a module itself, we can cherry-pick just the parts we want! This is made possible again because of how Babel transpiles your import statement.</p> 
      <pre><code class="language-javascript">import { throttle } from 'lodash';
$('.click-me').on('click', throttle(function() {
  console.count('ouch!');
}, 1000));
</code></pre> 
      <h2>Making sure modules are up-to-date</h2> 
      <p>Some resistance to the whole “small modules” way of coding is that it’s easy to end up with a dozen or more dependencies from <code>npm</code> that all interact with each other.</p> 
      <p>The JavaScript ecosystem is moving very quickly right now, and keeping your dependencies up to date can be a headache. Knowing when both your own code and your dependencies have bugs, security flaws, or just general code smells isn’t as easy as it used to be. We need to know if anything in our project is insecure, deprecated, outdated, or unused.</p> 
      <p>To solve this, bitHound offers a fantastic service that will constantly monitor your code and let you know when there is anything wrong with your dependencies, as well as provide an overall score of how well your repo is doing. <a href="http://bitHound.io">Find out how yours stacks up</a>, it’s free for all your open source projects.</p> 
      <p>bitHound integrates with GitHub and BitBucket and has also rolled out automatic commit analysis which will notify bitHound of changes to your repository’s branches. When your dependencies are out of date, you’ll be pinged in Slack or HipChat or get an email detailing everything.</p> 
      <p><img src="//wesbos.com/wp-content/uploads/2015/12/wesbos.png" alt=""></p> 
      <p>bitHound also has branch status on Pull Requests – set up pass/fail criteria and bitHound will post the status right to GitHub or Bitbucket.</p> 
      <p>Another tool that works well with bitHound is called <a href="https://www.npmjs.com/package/npm-check-updates">npm-check-updates</a>. Install globally on your development machine with <code>npm install npm-check-updates -g</code> and then run <code>ncu</code>. To quickly check if your packages have any available updates. If they do, you can run <code>ncu --upgradeAll</code> to automatically update all packages in your package.json. Make sure to run a <code>npm install</code> after doing this to fetch the latest code from NPM.</p> 
      <h2>The Bundle Process</h2> 
      <p>Because the browser doesn’t understand ES6 modules just yet, we need tools to make them work today. A JavaScript bundler takes in our Modules and compiles them into a single JavaScript file or multiple bundles for different parts of your application.</p> 
      <p>Eventually we won’t need to run a bundler on our code and <a href="https://http2.github.io/">HTTP/2</a> will request all <code>import</code> statements in one payload.</p> 
      <p>There are a few popular bundlers, most of which use Babel as a dependency to transpile your ES6 modules to CommmonJS.</p> 
      <ul> 
       <li><a href="http://browserify.org/">Browserify</a> was initially created to allow node-style commmonjs requires in the browser. It also allows for ES6 modules. </li> 
       <li><a href="https://webpack.github.io/">webpack</a> is popular in the React community. It also handles many module formats, not just ES6.</li> 
       <li><a href="https://github.com/rollup/rollup">Rollup</a> is built for ES6, but seems to have trouble with sourcemaps — I’d check on this one in a few months. </li> 
       <li><a href="http://jspm.io/">JSPM</a> sits on top of <code>npm</code> and <a href="https://github.com/systemjs/systemjs">SystemJS</a>.</li> 
       <li><a href="http://ember-cli.com/">Ember CLI</a> is an easy-breezy command line tool similar to webpack for users of Ember. It uses Broccoli under the hood.</li> 
      </ul> 
      <p>Which one should you use? Whichever works best for you. I’m a big fan of Browserify for the ease of getting started and webpack for many of its React integrations. The beauty of writing ES6 modules is that you aren’t writing Browserify or webpack modules — you can switch your bundler at any time. There are a lot of opinions out there on what to use, so do a quick search and you’ll find plenty of arguments for each tool.</p> 
      <p>If you are already running tasks via gulp, Grunt, or <code>npm</code> tasks for your existing JavaScript and CSS, integrating Modules into your workflow is <a href="https://github.com/wesbos/React-For-Beginners-Starter-Files/blob/master/01%20-%20Introduction%20-%20Start%20Here/gulpfile.js#L58-L99">fairly simple</a>.</p> 
      <p>There are many different ways to implement a bundler — you can run it as part of your gulp task, via your webpack config, as an <code>npm</code> script, or straight from the command line.</p> 
      <p>I’ve <a href="https://github.com/wesbos/javascript-modules">created a repo</a> detailing how to use webpack and Browserify along with some sample modules for you to play with.</p> 
      <h3>Importing code that isn’t a module</h3> 
      <p>If you are working on moving your codebase over to modules but aren’t able to do it all in one shot, you can simply just <code>import "filename"</code> and it will load and run the code from that file. This isn’t exactly ES6, but it’s a feature of your bundler.</p> 
      <p>This concept is no different than running concatenation on multiple <code>.js</code> files except that the code you import will be scoped to the importing module.</p> 
      <h3>Code that requires a global variable</h3> 
      <p>Some libraries, such as jQuery plugins, don’t fit well into the JavaScript Modules system. The entire jQuery plugin ecosystem assumes that there is a global variable called <code>window.jQuery</code> that each plugin can tack itself onto. However, we just learned that <strong>there are no globals with ES6 modules</strong>. Everything is scoped to the module itself unless you explicitly set something on the window.</p> 
      <p>To solve this, first ask yourself if you really need that plugin or if it’s something you could code on your own. Much of the JavaScript plugin ecosystem is being rewritten to exclude the jQuery dependency and to be made available as standalone JavaScript Modules.</p> 
      <p>If not, you will need to look to your build process to help solve this problem. Browserify has <a href="https://github.com/thlorenz/browserify-shim">Browserify Shim</a> and <a href="https://webpack.github.io/docs/shimming-modules.html">webpack</a> has some documentation on it.</p> 
      <h2>Gotchas</h2> 
      <p>When exporting a function, do not include a semicolon at the end of the function. Most bundlers will still allow the extra semicolon, but it’s a good practice to keep it off your function declarations so you don’t have an unexpected behavior when switching bundlers.</p> 
      <pre><code class="language-javascript">// Wrong:
export function yell(name) { return `HEY ${name}`; };
// Right:
export function yell(name) { return `HEY ${name}`; }
</code></pre> 
      <h2>Further Reading</h2> 
      <p>Hopefully this was a nice introduction to using <code>npm</code> and ES6 Modules. There is a lot more to learn and in my opinion the best way to learn is to start using them in your next project. Here are some fantastic resources to help you along the way:</p> 
      <ul> 
       <li><a href="http://exploringjs.com/">Exploring ES6 book</a></li> 
       <li><a href="https://github.com/ModuleLoader/es6-module-loader/wiki/Brief-Overview-of-ES6-Module-syntax">Brief Overview of ES6 Module syntax</a></li> 
       <li><a href="https://github.com/lukehoban/es6features#readme">ES6 Features</a></li> 
       <li><a href="https://github.com/rollup/rollup/wiki/ES6-modules">ES6 Modules on Rollup’s Wiki</a></li> 
       <li><a href="http://blog.namangoel.com/browserify-vs-webpack-js-drama">Browserify vs webpack hot drama</a></li> 
       <li><a href="http://www.2ality.com/2015/04/webpack-es6.html">webpack &amp; ES6</a></li> 
       <li><a href="http://slides.com/kentcdodds/es6-workshop">ES6 features &amp; webpack workshop</a> (complete with <a href="https://github.com/kentcdodds/es6-workshop">repo</a> and video recordings: <a href="https://youtu.be/aeY6ctvsurs">ES6 features</a> <a href="https://youtu.be/a96r7Tjf0Ps">Migrating with Webpack</a>)</li> 
      </ul> 
      <h2>Thanks + Updates</h2> 
      <p>A huge thanks to <a href="https://github.com/smargh">Stephen Margheim</a>, <a href="http://kentcdodds.com/">Kent C. Dodds</a>, <a href="http://mikechen.io/">Mike Chen</a>, <a href="https://github.com/rivertam">Ben Berman</a>, and <a href="https://about.me/jpoo90">Juan Pablo Osorio Ospina</a> for reviewing and providing excellent feedback on this article.</p> 
      <p>If you have any suggestions, code samples, technical updates or clarifications you would like to add to this, please send on over a <a href="https://github.com/wesbos/javascript-modules">pull request</a>.</p> 
     </div>
     <!-- .entry-content --> 
     <div class="entry-utility">
       This entry was posted in 
      <a href="http://wesbos.com/category/javascript/" rel="category tag">JavaScript</a>. Bookmark the 
      <a href="http://wesbos.com/javascript-modules/" title="Permalink to An Intro To Using npm and ES6 Modules for Front End Development" rel="bookmark">permalink</a>. 
     </div>
     <!-- .entry-utility --> 
    </div>
    <!-- #post-## --> 
    <div id="comments"> 
     <h3 id="comments-title">14 Responses to <em>An Intro To Using npm and ES6 Modules for Front End Development</em></h3> 
     <ol class="commentlist"> 
      <li class="comment even thread-even depth-1" id="li-comment-100325"> 
       <div id="comment-100325"> 
        <div class="comment-author vcard"> 
         <img alt="" src="//2.gravatar.com/avatar/22ff512c347e599d5b5605ff312e24c0?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/22ff512c347e599d5b5605ff312e24c0?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
         <cite class="fn"><a href="http://mikelaroy.ca" rel="external nofollow" class="url">Michael LaRoy</a></cite> 
         <span class="says">says:</span> 
        </div>
        <!-- .comment-author .vcard --> 
        <div class="comment-meta commentmetadata">
         <a href="http://wesbos.com/javascript-modules/#comment-100325"> December 14, 2015 at 5:28 pm</a> 
        </div>
        <!-- .comment-meta .commentmetadata --> 
        <div class="comment-body">
         <p>Great intro to these tools, Wes! </p> 
         <p>It might be worth mentioning, for those who use node with a package.json to manage their dependencies, that the command:</p> 
         <p>npm install lodash –save-dev</p> 
         <p>will add your new module to the package.json file. This is great if you have more than 1 developer working on your project.</p> 
        </div> 
        <div class="reply"> 
         <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=100325#respond" onclick="return addComment.moveForm( &quot;comment-100325&quot;, &quot;100325&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to Michael LaRoy">Reply</a> 
        </div>
        <!-- .reply --> 
       </div>
       <!-- #comment-##  --> </li>
      <!-- #comment-## --> 
      <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-100341"> 
       <div id="comment-100341"> 
        <div class="comment-author vcard"> 
         <img alt="" src="//1.gravatar.com/avatar/a9db2cbc6d4e589aec2d25f67771b85e?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/a9db2cbc6d4e589aec2d25f67771b85e?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
         <cite class="fn"><a href="http://simevidas.com" rel="external nofollow" class="url">Šime Vidas</a></cite> 
         <span class="says">says:</span> 
        </div>
        <!-- .comment-author .vcard --> 
        <div class="comment-meta commentmetadata">
         <a href="http://wesbos.com/javascript-modules/#comment-100341"> December 15, 2015 at 2:25 am</a> 
        </div>
        <!-- .comment-meta .commentmetadata --> 
        <div class="comment-body">
         <p>Browserify supports ES6 modules? I thought they were waiting for support in Node: <a href="https://github.com/substack/node-browserify/issues/1186" rel="nofollow">https://github.com/substack/node-browserify/issues/1186</a></p> 
        </div> 
        <div class="reply"> 
         <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=100341#respond" onclick="return addComment.moveForm( &quot;comment-100341&quot;, &quot;100341&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to Šime Vidas">Reply</a> 
        </div>
        <!-- .reply --> 
       </div>
       <!-- #comment-##  --> 
       <ul class="children"> 
        <li class="comment byuser comment-author-wesbos bypostauthor even depth-2" id="li-comment-100356"> 
         <div id="comment-100356"> 
          <div class="comment-author vcard"> 
           <img alt="" src="//2.gravatar.com/avatar/519c9ae14594667d1580086d5e9ec60f?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/519c9ae14594667d1580086d5e9ec60f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
           <cite class="fn">wesbos</cite> 
           <span class="says">says:</span> 
          </div>
          <!-- .comment-author .vcard --> 
          <div class="comment-meta commentmetadata">
           <a href="http://wesbos.com/javascript-modules/#comment-100356"> December 15, 2015 at 11:51 am</a> 
          </div>
          <!-- .comment-meta .commentmetadata --> 
          <div class="comment-body">
           <p>Babel turns the ES6 modules into CommonJS modules, which browserify can then understand. It’s a bit confusing, but it works really nicely!</p> 
          </div> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=100356#respond" onclick="return addComment.moveForm( &quot;comment-100356&quot;, &quot;100356&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to wesbos">Reply</a> 
          </div>
          <!-- .reply --> 
         </div>
         <!-- #comment-##  --> </li>
        <!-- #comment-## --> 
       </ul>
       <!-- .children --> </li>
      <!-- #comment-## --> 
      <li class="comment odd alt thread-even depth-1" id="li-comment-100355"> 
       <div id="comment-100355"> 
        <div class="comment-author vcard"> 
         <img alt="" src="//1.gravatar.com/avatar/d43bcae950f365f81f9cb1d14d953d76?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/d43bcae950f365f81f9cb1d14d953d76?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
         <cite class="fn"><a href="https://pawelgrzybek.com/" rel="external nofollow" class="url">Pawel Grzybek</a></cite> 
         <span class="says">says:</span> 
        </div>
        <!-- .comment-author .vcard --> 
        <div class="comment-meta commentmetadata">
         <a href="http://wesbos.com/javascript-modules/#comment-100355"> December 15, 2015 at 11:32 am</a> 
        </div>
        <!-- .comment-meta .commentmetadata --> 
        <div class="comment-body">
         <p>Amazing article Wes! Finally someone explained it to me in understandable language!</p> 
        </div> 
        <div class="reply"> 
         <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=100355#respond" onclick="return addComment.moveForm( &quot;comment-100355&quot;, &quot;100355&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to Pawel Grzybek">Reply</a> 
        </div>
        <!-- .reply --> 
       </div>
       <!-- #comment-##  --> </li>
      <!-- #comment-## --> 
      <li class="comment even thread-odd thread-alt depth-1" id="li-comment-100366"> 
       <div id="comment-100366"> 
        <div class="comment-author vcard"> 
         <img alt="" src="//0.gravatar.com/avatar/62de169eaf962f843cce326995675993?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/62de169eaf962f843cce326995675993?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
         <cite class="fn">Tommy Graves</cite> 
         <span class="says">says:</span> 
        </div>
        <!-- .comment-author .vcard --> 
        <div class="comment-meta commentmetadata">
         <a href="http://wesbos.com/javascript-modules/#comment-100366"> December 16, 2015 at 12:02 am</a> 
        </div>
        <!-- .comment-meta .commentmetadata --> 
        <div class="comment-body">
         <p>Wes, excellent article.</p> 
         <p>Here’s a question. I’m currently working on an application with the goal of sharing the majority of my code between the back end (running on node) and the front end. I’ve been using CommonJS modules with browserify so that it’ll run on node. Is there a way for me to write my code with ES6 modules and still get it to run on the back end?</p> 
        </div> 
        <div class="reply"> 
         <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=100366#respond" onclick="return addComment.moveForm( &quot;comment-100366&quot;, &quot;100366&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to Tommy Graves">Reply</a> 
        </div>
        <!-- .reply --> 
       </div>
       <!-- #comment-##  --> 
       <ul class="children"> 
        <li class="comment odd alt depth-2" id="li-comment-100595"> 
         <div id="comment-100595"> 
          <div class="comment-author vcard"> 
           <img alt="" src="//2.gravatar.com/avatar/5a476b94b4a973884756c53530583545?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/5a476b94b4a973884756c53530583545?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
           <cite class="fn">Paul</cite> 
           <span class="says">says:</span> 
          </div>
          <!-- .comment-author .vcard --> 
          <div class="comment-meta commentmetadata">
           <a href="http://wesbos.com/javascript-modules/#comment-100595"> December 22, 2015 at 12:14 pm</a> 
          </div>
          <!-- .comment-meta .commentmetadata --> 
          <div class="comment-body">
           <p>Hi Tommy,</p> 
           <p>From the way I understand this, anytime you write ES6 modules, you need to use Babel (or any other transpiler) to convert that ES6 code to ES5. The transpired code will be in CommonJS or AMD module format. Once this is done, you can use tools like Browserify to bundle your different modules as necessary and import them into your Node.js or Front-end codebase.</p> 
           <p>Hope this helps.</p> 
           <p>Thanks<br> Paul</p> 
          </div> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=100595#respond" onclick="return addComment.moveForm( &quot;comment-100595&quot;, &quot;100595&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to Paul">Reply</a> 
          </div>
          <!-- .reply --> 
         </div>
         <!-- #comment-##  --> </li>
        <!-- #comment-## --> 
       </ul>
       <!-- .children --> </li>
      <!-- #comment-## --> 
      <li class="comment even thread-even depth-1" id="li-comment-100394"> 
       <div id="comment-100394"> 
        <div class="comment-author vcard"> 
         <img alt="" src="//0.gravatar.com/avatar/f51107d43623336ea0c718ff0c8c6fac?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/f51107d43623336ea0c718ff0c8c6fac?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
         <cite class="fn">Ryan</cite> 
         <span class="says">says:</span> 
        </div>
        <!-- .comment-author .vcard --> 
        <div class="comment-meta commentmetadata">
         <a href="http://wesbos.com/javascript-modules/#comment-100394"> December 16, 2015 at 8:08 pm</a> 
        </div>
        <!-- .comment-meta .commentmetadata --> 
        <div class="comment-body">
         <p>I’m leaving this comment b/c it looks like the only way to get contacted when you publish new posts ?</p> 
        </div> 
        <div class="reply"> 
         <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=100394#respond" onclick="return addComment.moveForm( &quot;comment-100394&quot;, &quot;100394&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to Ryan">Reply</a> 
        </div>
        <!-- .reply --> 
       </div>
       <!-- #comment-##  --> </li>
      <!-- #comment-## --> 
      <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-100419"> 
       <div id="comment-100419"> 
        <div class="comment-author vcard"> 
         <img alt="" src="//1.gravatar.com/avatar/aee3e067615adadab79704c10c1b9bc9?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/aee3e067615adadab79704c10c1b9bc9?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
         <cite class="fn"><a href="http://www.sfidastudios.com" rel="external nofollow" class="url">druellan</a></cite> 
         <span class="says">says:</span> 
        </div>
        <!-- .comment-author .vcard --> 
        <div class="comment-meta commentmetadata">
         <a href="http://wesbos.com/javascript-modules/#comment-100419"> December 17, 2015 at 10:27 am</a> 
        </div>
        <!-- .comment-meta .commentmetadata --> 
        <div class="comment-body">
         <p>Excellent!<br> I’m currently digging into this, and I decided that makes no sense to use anything that can’t handle ES6 modules. I’m now trying to figure out what solution fits best on my Gulp pipeline. I was looking into Webpack and found that it is very modular: can replace Gulp on some projects and the hot-refresh feature looks handy, but now I’m into THAT discussion (pure Webpack or Webpack + Gulp + Browsersync), and it’s not fun.</p> 
         <p>Anyway, I’m looking into Systemjs-builder now, thinking that perhaps was a simpler solution, but I’ve found that is not so easy, you usually need JSPM around and I prefer not to have another PM.</p> 
         <p>Do you believe that Browserify + Babel will be better to complement a somehow complex Gulp pipeline?</p> 
         <p>Thanks!</p> 
        </div> 
        <div class="reply"> 
         <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=100419#respond" onclick="return addComment.moveForm( &quot;comment-100419&quot;, &quot;100419&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to druellan">Reply</a> 
        </div>
        <!-- .reply --> 
       </div>
       <!-- #comment-##  --> 
       <ul class="children"> 
        <li class="comment even depth-2" id="li-comment-101154"> 
         <div id="comment-101154"> 
          <div class="comment-author vcard"> 
           <img alt="" src="//0.gravatar.com/avatar/fe7e0a33810f4741485bf54228c4bb5c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/fe7e0a33810f4741485bf54228c4bb5c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
           <cite class="fn">Lars Jeppesen</cite> 
           <span class="says">says:</span> 
          </div>
          <!-- .comment-author .vcard --> 
          <div class="comment-meta commentmetadata">
           <a href="http://wesbos.com/javascript-modules/#comment-101154"> January 11, 2016 at 6:12 am</a> 
          </div>
          <!-- .comment-meta .commentmetadata --> 
          <div class="comment-body">
           <p>I went through the same process as you, and I ended up using only Webpack + batch scripts for the rest (like deploying stuff etc).</p> 
           <p>At first I used Gulp to manage the “rest of the stuff” and to call Webpack, but for me it eventually made much more sense to incorporate them into npm (package.json), and in the rare cases you’ll need to do more stuff, call bash-scripts directly from there.</p> 
           <p>Getting rid of Gulp/Grunt was the best thing I ever did, and I too had a long phase using them in conjunction with Webpack.</p> 
          </div> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=101154#respond" onclick="return addComment.moveForm( &quot;comment-101154&quot;, &quot;101154&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to Lars Jeppesen">Reply</a> 
          </div>
          <!-- .reply --> 
         </div>
         <!-- #comment-##  --> </li>
        <!-- #comment-## --> 
       </ul>
       <!-- .children --> </li>
      <!-- #comment-## --> 
      <li class="post pingback"> <p>Pingback: <a href="http://blog.enue.cn/2015/12/20/node-weekly-no-117/" rel="external nofollow" class="url">NODE WEEKLY NO.117 – ENUE</a></p> </li>
      <!-- #comment-## --> 
      <li class="comment odd alt thread-even depth-1" id="li-comment-102328"> 
       <div id="comment-102328"> 
        <div class="comment-author vcard"> 
         <img alt="" src="//0.gravatar.com/avatar/c860dccf3d88436a0357489073b5e839?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/c860dccf3d88436a0357489073b5e839?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
         <cite class="fn"><a href="http://w5labs.com" rel="external nofollow" class="url">Gyorgy Sagi</a></cite> 
         <span class="says">says:</span> 
        </div>
        <!-- .comment-author .vcard --> 
        <div class="comment-meta commentmetadata">
         <a href="http://wesbos.com/javascript-modules/#comment-102328"> March 18, 2016 at 4:13 pm</a> 
        </div>
        <!-- .comment-meta .commentmetadata --> 
        <div class="comment-body">
         <p>What about requirejs?</p> 
        </div> 
        <div class="reply"> 
         <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=102328#respond" onclick="return addComment.moveForm( &quot;comment-102328&quot;, &quot;102328&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to Gyorgy Sagi">Reply</a> 
        </div>
        <!-- .reply --> 
       </div>
       <!-- #comment-##  --> 
       <ul class="children"> 
        <li class="comment byuser comment-author-wesbos bypostauthor even depth-2" id="li-comment-102351"> 
         <div id="comment-102351"> 
          <div class="comment-author vcard"> 
           <img alt="" src="//2.gravatar.com/avatar/519c9ae14594667d1580086d5e9ec60f?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/519c9ae14594667d1580086d5e9ec60f?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40"> 
           <cite class="fn">wesbos</cite> 
           <span class="says">says:</span> 
          </div>
          <!-- .comment-author .vcard --> 
          <div class="comment-meta commentmetadata">
           <a href="http://wesbos.com/javascript-modules/#comment-102351"> March 20, 2016 at 11:06 am</a> 
          </div>
          <!-- .comment-meta .commentmetadata --> 
          <div class="comment-body">
           <p>That is fine but id say es6 modules are the way forward </p> 
          </div> 
          <div class="reply"> 
           <a rel="nofollow" class="comment-reply-link" href="http://wesbos.com/javascript-modules/?replytocom=102351#respond" onclick="return addComment.moveForm( &quot;comment-102351&quot;, &quot;102351&quot;, &quot;respond&quot;, &quot;3678&quot; )" aria-label="Reply to wesbos">Reply</a> 
          </div>
          <!-- .reply --> 
         </div>
         <!-- #comment-##  --> </li>
        <!-- #comment-## --> 
       </ul>
       <!-- .children --> </li>
      <!-- #comment-## --> 
      <li class="post pingback"> <p>Pingback: <a href="https://www.vikisweb.com/top-27-best-free-node-js-tutorials-to-improve-your-coding-skills-2016/" rel="external nofollow" class="url">Top 27 Best Free Node.js Tutorials To Improve Your Coding Skills 2016 | Viki's Web</a></p> </li>
      <!-- #comment-## --> 
      <li class="post pingback"> <p>Pingback: <a href="https://www.vikisweb.com/top-27-best-free-node-js-tutorials-to-improve-your-coding-skills-2016-2/" rel="external nofollow" class="url">Top 27 Best Free Node.js Tutorials To Improve Your Coding Skills 2016 | Viki's Web</a></p> </li>
      <!-- #comment-## --> 
     </ol> 
     <div id="respond" class="comment-respond"> 
      <h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/javascript-modules/#respond" style="display:none;">Cancel reply</a></small></h3> 
      <form action="//wesbos.com/wp-comments-post.php" method="post" id="commentform" class="comment-form"> 
       <p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p>
       <p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required></textarea></p>
       <p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required="true" required></p> 
       <p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required="true" required></p> 
       <p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200"></p> 
       <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="3678" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"> </p>
       <p class="comment-subscription-form"><input type="checkbox" name="subscribe_comments" id="subscribe_comments" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;"> <label class="subscribe-label" id="subscribe-label" for="subscribe_comments">Notify me of follow-up comments by email.</label></p>
       <p class="comment-subscription-form"><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;"> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog">Notify me of new posts by email.</label></p>
       <p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="195"></p> 
      </form> 
     </div>
     <!-- #respond --> 
    </div>
    <!-- #comments --> 
   </section> 
   <!--/content--> 
   <footer class="bottom"> 
    <!-- Footers are lame, ASCII Pictures aren't!




 t have to cmd - for this one








                                                                             ; :
                                                                            ;:
                                                                            ;:' ;      :
                                                                     `     ''+';;;; .;;
                                                                    ;;+   :++'+''' ::''
                                                                 :  ;':',:'++++'''';'+'
                                                             ;  ;;:'+';''+'+++#'++'++++;
                                                           ; ;:;:':+++''+++'+++++#'++++++::
                 wes bos.com                               ;:;;';''++++'++++''+++++'++#+#;+,:
                                                           ''+'+''+++'++++++++++++++#++##+;':.`
                                                           ''#++'++#++++++++++++++'++++'+#++';
                                                           '++++++'+++#+'+#+#++++#++'''+'+++++''';;
                                                          '++++++'++++#####+####+###+''''+++++'+';:
                                                         '+++++++++#++########+#####+'''''#++++++;+
                                                       ;'++++++++###+++##+#####+#####+''+++'+++++++;
                                                       ''++++##'#+++'+################+++++++++++++':   .
                                                       ++++#++++++++######+#+###@#########++++'++++'+;;;'
                                                     ;'+++#++++++#+##########+####+#@######+++++++##'+++'::
                                                     .+++##'+'+###############++##+@#@@#####+'++++#+++'++';
                                                     ;+###'''+####################+#@#@#######++++#+++++++'
                                                    ''+##+''+#+##########+######++#+#@@#########+++#####+++';
                                                    ;'+++''+#####################+''###@#########++##+#####+'
                                                     '+++++##+#####################'+###@#############++##+++'
                                                   +++'++++#+#######################++++#############+#++'++';;
                                                 .'+++'+++#+######################@##+++####+++++###+###++''+++'
                                                 :++++++++++##########################'+++##+++###+######++''++''
                                                 .''+++++++++##########################++++++#+#+#########'#'''+:'
                                                 '''++++++++++#########+#+##+###########++++++#++####+####+++''+' ;
                                                 ;''+++++'++++++#++######+##+'+#########++++++'+++#'+'+####'+'+#'
                                                ;';'+++''''+++++##+++#++###+##'''#######++++++++'++'+'+++###++##+'
                                                ';;'++'';;''''+++#++++++++;++#+++''++++#+++++'+''++++'++###+#++##+
                                                ;:+'++';;;;''''+++++++'+++++++++'++++++++++'+'''++'++''+++#+#'++#++
                                               ;;,+++;;;;;;;;''''+'+'+++++''''''''''''''''''''''''''+++++'#+#+'+++''
                                              ';;;++';:::::;;;''''''''''''';';''';''''''''';;;;;'';+;'+++'+++#''+++';
                                              ;;;;++;;:::::::;;;;;''''';;;;;;;;;;;;;;;;;;;;;;;;;;'''+'+'+;;';++'++''':
                                              ;;';+';::,:,:::::;:;;;;;:;:::;;;;;;;;;;;;;;;;::;::;;;'''+#+:+;;+#++++';
                                              ';++';:::,,,,,::::::::::,:::::::;:::::;;;;;;;:::::;:;;''+++:+;;++'+'++;
                                             ;'''+'::,,,,,,,,::,::,,,,,,,,:::::::::::::::;:::::::::;;'''';++;'++++'''
                                             ':'++;:,,,,,:,,,,,,,:,,,,:,,:,::::::,:,::::::::::::::::;;'+'''#;'++''''''
                                             ;;'+':::,,,,,,,:,,:,,,,,,,,,,,:::::,,,:,,:::::::::::::::;;''++;';++'''''+`
                                            ;;''+;::::,,,,,,,,,,,,,,,,,,,,,:::::,,,,,,,::::::::::,::::;''++'#;;+;';';':
                                            ;''''::::::,:,,,,,,,,,,,,,,,,,,::::::,,,:,::::::::,:::,::::;'''+'';';;';':
                                            :''+;::::::::,,,,,,,,,,,,,,::,,:::::::,::,,::::::::,:::::::;;',''+',;;+;;'`
                                            ;;'+;::::::::,,,,,,,,,,,,,,,,::::::::::::::::::::::::,:::::::'::++';:+';';:
                                            ;;+'::::::::::,,,,,,,,,,,,,,,::,:::::::::::::::::::,,,,::::::;::'''';'';''
                                            ';;;:::;::::::,:,,,,,,,,,::::::::,:::::::::::::::::::::::::::,:;''+'+''';;
                                            ;'';:::::::::::,,,,,,,,,:,,,,,,:,::::::::::::::::::,,::::::::::;;;+'';';;'
                                            ';';;::::::::::,,,,,,,:,:,:,,,::::,::::::::::::::::,:::::::::;:;';+'';;;;;
                                            ''';:::::::::::,,,,,,,,,,,,,:::::::,,,:,:::::::::::::::::::::;;''''+'';;;;:
                                           ,';;;::::::::::,,,,,,,,,,,::,,:,,::,::::::,,,::::,::::::::::::;''''++''';;;;
                                           ;';;;::::::::,,:,,,,,,:,,:,,,:,,,,,,,,,,,,,,,,::,,,,:::::::::;;'+++'++'+;';:
                                           ;+'';:;;::,:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,:,,,::::::::::;''+++++++'''':
                                           :++';:::::,,,,,,,,,,,.,,,,,,,,,,,,,,,,,,..,,,,,,,:,:::::::::;;''+++++++'+'',
                                            '+';;;:::::,,,,,,,..,.,,,,:,,,,,,,...,,,,,,,,:,,,:::::::::;;;'''+++++++++'
                                            '++;;;::::,,,,,,,,,,.,,.,,,,,,,,,,,,,.,,,,,,,,,,,,::::;::;;;;'+++++++++++';
                                             +';;::::::,,,,,,,,,.,,,,,,,,,,,,,,,,,,,,,,:,,,,,,,:::::;;;;;''+++++++#++'
                                             ;+;;::::::::::,,,,,,,,,,,,:,,,,,,:,::::,::::,,,,,,,,:::;;;;;''++###++#+++;
                                              +'::::,::::::::::::::::::::::,::,::::::::,:,,,,,,,,:::;;;;;;'++######+++;
                                              +'::,,,::::::;;:;:::::::;;::::::;:;;;;;::::,,,,,,,,,:::;;;;;'+#######++''
                                              ''::,:::::;::;;;;;;;;;;;;;;;;;;;;;;;';;::::,,,,,,,,,,:::;;;;'+#######++':
                                              ;'::::::;;;;::;;;''';;;;;;;;;;'';''';;;;::,,:,,,,,,,,,:::;;;;'+######++'+:
                                               '::;;;';:;:;;''''''''';;;;'''''''''''';,:,::,:::::,,,::;;;;;'++#####+'++;
                                               ';;'';;;;;;:;'''''''''';;'''''+''++''''++':;;;::,;:::,::;;;;'+++#+#+++++'
                                               ';'''++++++++++++++++'''''''''++++++++###++++''''';:::,:;;;;'+++#+#+++++'
                                               ;:''+++#########++++++'''''''''++++#########+#+++'';';::;:;;;'++++++'+++'
                                               ::''++++#########+++++''''''''+++############+++++'+'';;;:::;'++#+++'+++'
                                                :;''++#######@####++++';;;;''++######@#######++++++''';;:::;'++#+++''+';
                                                :;''+####@#@#######++';;:::;'+++###@####@#@@#####+++''';::::;+#+'++''+':
                                                :;'++#+++#@@@######+'';:::::;'+###@###+##@@##+##+#+++'';;:::;'#++++';+'
                                                :;'++''++#@@@#######+;:,,,,,;'++######+##@@##+'+#++++'';::::;'#+++++'''
                                                 :''''+''###########':,,,..,:;+++####+++####+++'++++';;:::::;'++#+++'';
                                                 :;'''++++###+######+:,,....,;++++###+++###++''''''';;:::::::;++++++';;
                                                 :;;;;''''+++++####+':,.....,;'++++++++++''''+''''';::::::;::;''+++'';;
                                                 :;;;;''++++++####++':,...`.,:;''+++##++++++'''''';:::::::;;;;''+++'';
                                                 ::;;'''++++##+++++';,,..``.,::;''++++++++++'''';;::,,,::::;;;''++';';
                                                 :::;;''+++++++++';;::,.....,,:::;''++++'++++'';:::,,,,::::;;;''+';';;
                                                 ::::;;'''''+''';;;:::,..``.,,,::::::;''''';;;:::,,,,,,:::;;;;',';'';
                                                 :::::;;;'''';;;;;:::,...`..,,,,,:::,,,:;;;;:::,,,,,,,,:::;;;''';;';;
                                                 ::::::::::::::::::::,...``...,.,,,,,,,,,,,,,,,.,,,,,,::::;;;'';';;;
                                                 :::::::::::::::,:,,,,...``.....,,,,,,,........,,,,,,::::;;;'''+';:;
                                                 :::::::::::::::::,,,....```...,,::,,,.,,....,,,,,,,::::;:;;''''';;
                                                 :::::,:,,,,:::::;:,,...```...,,,;;;:::,,,,,.,,,,,,:::::;;;;''';;;;
                                                 ::::,,:,,:::::;';;,,...```....,::'';;::::,,,,,,,,,::::;;;;'''';;:;
                                                 ::::::::::::;''+;:,,,..```..,,,,,,++';;::::,,,,:::::::;;;;'''';;;;
                                                 ::::::::::;''+++,,,,,.........,..,'+++'';::::::::::;:;;;;;'''';;'
                                                 ;;;:::::;;''+++',,,,,,.....,,.,,.,;#++++'';;:;:;;;;;;;;;;;'''+'''
                                                 ;;;;;;;;;''+++#;,,,,,,,,..,,,,::,,;+##+++'''';;;;;;;;;;;;;'+'++
                                                 ;;;';;'''++++##;,:::::,,,,,,::;:,;'++##++++'''''''''''''';''
                                                 `;''''''++++###':'';;:;::::;''';;;'''+##++++''''''''''''';'''
                                                  '''''+++++###+''++++'';;'''+++++';:;'+##+++++++'++'''''';''
                                                  ;'''+++++###+'''++++++'+++++###+':::;'+##+++++++++++''''''+
                                                  ;''++++++###+';'+##+++++++####++':::;'++##++++++++++'''';''
                                                  :''++++++##++'''+####+#++####+++';:,;;'++#+++++++++++'''''
                                                   ''++++++###+';'+#############++;::::;''++++++++++++'''';'
                                                   ''++++++##++;'++############++'';::;;'''++++++++++++'''''
                                                   ;'+++++###++'''++##########+++';:;:;''+'+++++++++++++''''
                                                    ''+++++###++''+++#######+++++';;;';''++++++++++++++++'+
                                                    '+++++++####+''+++#+#+#++++'''';'''+++#++'++++++++++''+
                                                    ;+++++++###@@##+++++++++++++++++++#@@###+''+++++++++'++
                                                     +++++++##@##@#+######+#+#+##+#++###+###++'+'++++++'+''
                                                     '++++++#######+++#++##++++++++++##+++++++''''++++++++'
                                                      +++'++####++#+#+++++++'''+'+@#++''''++++''++++++++++'
                                                      ;+++++#+#++++####+'''''''###++'''''''''++'''++++++++'
                                                       ++++++++++'++++#####@####+';';;;;;''''++'++++++++++'
                                                      ;++++++++++'''+'+++##++++':;;;;;;;;'''''+'+++++++++''+#+
                                                    '###+++++++'''''+++++++++'''';;;;;;;;';''''++++++++++''#####
                                                 ;+######+++++++'''++++++++++++''''';;;;;;''''''++++++++'''+#######
                                                ##########++++++'''++++++++++++++'+''';'';''+''++++++++++'';#########+'
                                             ##############++++''''++++######+++++'''''';;'''''+'+++++++''';'###########+
                                          +################++++++''++++++#++#+++++''''''';''''++'++++++'''';;##############+
                                      '+##############@#@#@++++++''++++++++++++++++'''';''''''++++++++++''';;################++
                                    ++++#################@@+'+++'''++++++++++++++++''';;;;''''+++++++++'''';;###################+'
                                 '++#+################@@#@@''++'+''''++++++++++''''';;;;'''+'++++#++++++''';;##################+##++
                              '+++++++################@#@@@+'+++++'''''''+++''';;;;;;;;;'''+++++#++++++'''';;#######################++'
                            +++++++######################@@+'++#+''''''''''';;;;;;;;;;;'''++++##++++++''''';;#####################+#####+
                          ++++++++######################@@@+'+++++''';''''';';':;:::;;;''++++##++++++'''''';;######################+######+'
                       '+++++++++######################@@@@#'++++++''''';;'';;;:;;::;;;''++###+++++++'''''';'#@######################+#######+
                     ++++++++++#######################@@@@@#'++++#++';''';;;;';;;';;'''+++####+++++++''''';;###################################+
                   ++++++++++++#+######################@@@@@'+++++++'''''''''';;;;';'+'++####++++++++''''';;############################+########+
                 +++++++++++++#########################@@@@@+++++++++++'+''+'+'';'''+++####+++++++++'''''';+##############################+########+
                ++++++++++++###########################@@@@@#'++++++#+++++++++'+'''++#####+++++++++''''''''#@@##############################++#######
              +++++++++#############################@@#@@@@@@++++++++###+#+++++++++++#####++++++++''''''''+@#@################################+#######+
             ++++++++################################@@#@@@@@#+++++++####################++++++++++'''''''#@#@##########################################
            #+++#+####################################@@@@@@@@+++++++#+##################++++++++++''''''#@@@#@#########################################+
           #++++######################################@@@@@@@@@++++++###################++++++++++'+''''+#@@@@###########################################+
          ############################################@@@#@@@@@#++++++################++++++++++++'+'''+#@@@@#############################################+
          ##########################################@#@@@@@@@@@@#+++++###############+++++++++++++++''+#@@@@###############################################+
         #############################################@@@@@@@@@@@#+++++######+#####+++++++++++++++++++#@@@@@################################################'
         ############################################@@@@@@@@@@@@@#++++##+#####+++++++++++++++++++'++#@@@@@##################################################
        #############################################@@@@@@@@@@@@@@#++#++#+#####++++++++++++++++++++@@@@@@###################################################+
        ############################################@#@#@@@@@@@@@@@@@##+####+##+++++++++++++++++++#@@@@@@#####################################################
       +##########################################@@@@@#@@@@@@@@@@@@@@##++#++##++++++++++++++++++#@@@@@@###@###################################################
       #######################################@#######@@@@@@@@@@@@@@@@@##++++#+++++++++++++++++#@@@@@@@#@######################################################+
      +#########################################@##@@@@@@@@@@@@@@@@@@@@@@#+++++++++++++++++++#@@@@@@@@##@#######################################################
      #########################################@#@@@@@@@@@@@@@@@@@@@@@@@@@@##+++++++++++++##@@@@@@@@@@@@@@######################################################
     '#########################################@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####+#####@@@@@@@@@@@@@@@@#@#####################################################
     ############################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@######################################################
     ###############################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@########################################################
    +####@######################################@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#######################################################
    ##################################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#########################################################
    #################################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@##@@####################################################
   +####@#@##########################################@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@#####################################################
   #####@##@############################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@########################################################
   #####@##########@@#####################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@@#######################################################
  +########@@#######@####################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@########################################################
  ########@#@##########################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@#######################################################
  ##########@@##########################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@###################################################@###
  ##########@@##########################################@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@########################################################
  ######@@###@##############################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###################################################@####
 +#######@@##@@#############################################@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@###################################################@####
 #########@##@@#####################################@@@######@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@##@@#@@#######################################################
 #######@#@@##@#############################@@@@#####@@@@####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####################################################@###@#
 #######@@@#@#@###########################@@@@@#####@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@##################################################@##@##
'########@@#@@@###########################@@@@#####@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@########################################################@##
+########@@#@@@@###################@@##@#@@@@@##@####@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@#########################################################@@#@


 --> 
    <a href="https://twitter.com/wesbos" class="twitter-follow-button" data-show-count="true" data-size="large">Follow @wesbos</a> 
   </footer> 
  </div> 
  <!--/wrapper--> 
  <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script> 
  <div id="fb-root"></div> 
  <!--[if lt IE 9]>
<script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
<![endif]--> 
  <script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-176517-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

  window._dcq = window._dcq || [];
  window._dcs = window._dcs || {};
  _dcs.account = '8829021';

  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true;
    dc.src = '//tag.getdrip.com/8829021.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();

</script> 
  <div style="display:none"> 
   <div class="grofile-hash-map-22ff512c347e599d5b5605ff312e24c0"> 
   </div> 
   <div class="grofile-hash-map-a9db2cbc6d4e589aec2d25f67771b85e"> 
   </div> 
   <div class="grofile-hash-map-519c9ae14594667d1580086d5e9ec60f"> 
   </div> 
   <div class="grofile-hash-map-d43bcae950f365f81f9cb1d14d953d76"> 
   </div> 
   <div class="grofile-hash-map-62de169eaf962f843cce326995675993"> 
   </div> 
   <div class="grofile-hash-map-5a476b94b4a973884756c53530583545"> 
   </div> 
   <div class="grofile-hash-map-f51107d43623336ea0c718ff0c8c6fac"> 
   </div> 
   <div class="grofile-hash-map-aee3e067615adadab79704c10c1b9bc9"> 
   </div> 
   <div class="grofile-hash-map-fc88b96071ad8d5601d753c69285aa7f"> 
   </div> 
   <div class="grofile-hash-map-c860dccf3d88436a0357489073b5e839"> 
   </div> 
  </div> 
  <script type="text/javascript" src="//wesbos.com/wp-content/plugins/akismet/_inc/form.js?ver=3.2"></script> 
  <!--footer-scripts--> 
  <script type="text/javascript" src="//wesbos.com/wp-includes/js/comment-reply.min.js?ver=4.7.6"></script> 
  <script type="text/javascript" src="//s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201739"></script> 
  <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script> 
  <script type="text/javascript" src="//wesbos.com/wp-content/themes/wb2014/js/plugins.js?ver=1.0.0"></script> 
  <script type="text/javascript" src="//wesbos.com/wp-content/themes/wb2014/js/wb.js?ver=1.0.0"></script> 
  <script type="text/javascript" src="//wesbos.com/wp-content/themes/wb2014/js/prism.js?ver=1.0.0"></script> 
  <script type="text/javascript" src="//apis.google.com/js/platform.js?ver=1.0.0"></script> 
  <script type="text/javascript" src="//use.typekit.net/khb2bwm.js?ver=1.0.0"></script> 
  <script type="text/javascript" src="//wesbos.com/wp-includes/js/wp-embed.min.js?ver=4.7.6"></script> 
  <!--footer-scripts--> 
  <script type="text/javascript" src="//stats.wp.com/e-201739.js" async defer></script> 
  <script type="text/javascript">
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:4.3.2',blog:'21296608',post:'3678',tz:'-4',srv:'wesbos.com'} ]);
	_stq.push([ 'clickTrackerInit', '21296608', '3678' ]);
</script> 
  <script>
    try { Typekit.load(); } catch(e){}


  </script>  
 </body>
</html>