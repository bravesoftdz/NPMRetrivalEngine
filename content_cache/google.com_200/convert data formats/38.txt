<!doctype html>
<html>
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="chrome=1"> 
  <title>JSON5 by json5</title> 
  <link rel="stylesheet" href="stylesheets/styles.css"> 
  <link rel="stylesheet" href="stylesheets/github-light.css"> 
  <meta name="viewport" content="width=device-width"> 
  <!--[if lt IE 9]>
    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--> 
 </head> 
 <body> 
  <div class="wrapper"> 
   <header> 
    <h1>JSON5</h1> 
    <p>JSON for the ES5 era.</p> 
    <p class="view"><a href="https://github.com/json5/json5">View the Project on GitHub <small>json5/json5</small></a></p> 
    <ul> 
     <li><a href="https://github.com/json5/json5/zipball/master">Download <strong>ZIP File</strong></a></li> 
     <li><a href="https://github.com/json5/json5/tarball/master">Download <strong>TAR Ball</strong></a></li> 
     <li><a href="https://github.com/json5/json5">View On <strong>GitHub</strong></a></li> 
    </ul> 
   </header> 
   <section> 
    <h1> <a id="json5--modern-json" class="anchor" href="#json5--modern-json" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>JSON5 – Modern JSON</h1> 
    <p><a href="https://travis-ci.org/aseemk/json5"><img src="https://travis-ci.org/aseemk/json5.png" alt="Build Status"></a></p> 
    <p>JSON is an excellent data format, but we think it can be better.</p> 
    <p><strong>JSON5 is a proposed extension to JSON</strong> that aims to make it easier for <em>humans to write and maintain</em> by hand. It does this by adding some minimal syntax features directly from ECMAScript 5.</p> 
    <p>JSON5 remains a <strong>strict subset of JavaScript</strong>, adds <strong>no new data types</strong>, and <strong>works with all existing JSON content</strong>.</p> 
    <p>JSON5 is <em>not</em> an official successor to JSON, and JSON5 content may <em>not</em> work with existing JSON parsers. For this reason, JSON5 files use a new .json5 extension. <em>(TODO: new MIME type needed too.)</em></p> 
    <p>The code here is a <strong>reference JavaScript implementation</strong> for both Node.js and all browsers. It’s based directly off of Douglas Crockford’s own <a href="https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js">JSON implementation</a>, and it’s both robust and secure.</p> 
    <h2> <a id="why" class="anchor" href="#why" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Why</h2> 
    <p>JSON isn’t the friendliest to <em>write</em>. Keys need to be quoted, objects and arrays can’t have trailing commas, and comments aren’t allowed — even though none of these are the case with regular JavaScript today.</p> 
    <p>That was fine when JSON’s goal was to be a great data format, but JSON’s usage has expanded beyond <em>machines</em>. JSON is now used for writing <a href="http://plovr.com/docs.html">configs</a>, <a href="https://www.npmjs.org/doc/files/package.json.html">manifests</a>, even <a href="http://code.google.com/p/fuzztester/wiki/JSONFileFormat">tests</a> — all by <em>humans</em>.</p> 
    <p>There are other formats that are human-friendlier, like YAML, but changing from JSON to a completely different format is undesirable in many cases. JSON5’s aim is to remain close to JSON and JavaScript.</p> 
    <h2> <a id="features" class="anchor" href="#features" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Features</h2> 
    <p>The following is the exact list of additions to JSON’s syntax introduced by JSON5. <strong>All of these are optional</strong>, and <strong>all of these come from ES5</strong>.</p> 
    <h3> <a id="objects" class="anchor" href="#objects" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Objects</h3> 
    <ul> 
     <li> <p>Object keys can be unquoted if they’re valid <a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Variables">identifiers</a>. Yes, even reserved keywords (like <code>default</code>) are valid unquoted keys in ES5 [<a href="http://es5.github.com/#x11.1.5">§11.1.5</a>, <a href="http://es5.github.com/#x7.6">§7.6</a>]. (<a href="https://mathiasbynens.be/notes/javascript-identifiers">More info</a>)</p> <p><em>(TODO: Unicode characters and escape sequences aren’t yet supported in this implementation.)</em></p> </li> 
     <li><p>Object keys can also be single-quoted.</p></li> 
     <li><p>Objects can have trailing commas.</p></li> 
    </ul> 
    <h3> <a id="arrays" class="anchor" href="#arrays" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Arrays</h3> 
    <ul> 
     <li>Arrays can have trailing commas.</li> 
    </ul> 
    <h3> <a id="strings" class="anchor" href="#strings" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Strings</h3> 
    <ul> 
     <li><p>Strings can be single-quoted.</p></li> 
     <li><p>Strings can be split across multiple lines; just prefix each newline with a backslash. [ES5 <a href="http://es5.github.com/#x7.8.4">§7.8.4</a>]</p></li> 
    </ul> 
    <h3> <a id="numbers" class="anchor" href="#numbers" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Numbers</h3> 
    <ul> 
     <li><p>Numbers can be hexadecimal (base 16).</p></li> 
     <li><p>Numbers can begin or end with a (leading or trailing) decimal point.</p></li> 
     <li><p>Numbers can include <code>Infinity</code>, <code>-Infinity</code>, <code>NaN</code>, and <code>-NaN</code>.</p></li> 
     <li><p>Numbers can begin with an explicit plus sign.</p></li> 
    </ul> 
    <h3> <a id="comments" class="anchor" href="#comments" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Comments</h3> 
    <ul> 
     <li>Both inline (single-line) and block (multi-line) comments are allowed.</li> 
    </ul> 
    <h2> <a id="example" class="anchor" href="#example" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Example</h2> 
    <p>The following is a contrived example, but it illustrates most of the features:</p> 
    <div class="highlight highlight-source-js">
     <pre>{
    foo<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>bar<span class="pl-pds">'</span></span>,
    while<span class="pl-k">:</span> <span class="pl-c1">true</span>,

    this<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>is a \</span>
<span class="pl-s">multi-line string<span class="pl-pds">'</span></span>,

    <span class="pl-c">// this is an inline comment</span>
    here<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>is another<span class="pl-pds">'</span></span>, <span class="pl-c">// inline comment</span>

    <span class="pl-c">/* this is a block comment</span>
<span class="pl-c">       that continues on another line */</span>

    hex<span class="pl-k">:</span> <span class="pl-c1">0xDEADbeef</span>,
    half<span class="pl-k">:</span> <span class="pl-c1">.5</span>,
    delta<span class="pl-k">:</span> <span class="pl-k">+</span><span class="pl-c1">10</span>,
    to<span class="pl-k">:</span> <span class="pl-c1">Infinity</span>,   <span class="pl-c">// and beyond!</span>

    finally<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>a trailing comma<span class="pl-pds">'</span></span>,
    oh<span class="pl-k">:</span> [
        <span class="pl-s"><span class="pl-pds">"</span>we shouldn't forget<span class="pl-pds">"</span></span>,
        <span class="pl-s"><span class="pl-pds">'</span>arrays can have<span class="pl-pds">'</span></span>,
        <span class="pl-s"><span class="pl-pds">'</span>trailing commas too<span class="pl-pds">'</span></span>,
    ],
}</pre>
    </div> 
    <p>This implementation’s own <a href="package.json5">package.json5</a> is more realistic:</p> 
    <div class="highlight highlight-source-js">
     <pre><span class="pl-c">// This file is written in JSON5 syntax, naturally, but npm needs a regular</span>
<span class="pl-c">// JSON file, so compile via `npm run build`. Be sure to keep both in sync!</span>

{
    name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>json5<span class="pl-pds">'</span></span>,
    version<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>0.5.0<span class="pl-pds">'</span></span>,
    description<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>JSON for the ES5 era.<span class="pl-pds">'</span></span>,
    keywords<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">'</span>json<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>es5<span class="pl-pds">'</span></span>],
    author<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>Aseem Kishore &lt;aseem.kishore@gmail.com&gt;<span class="pl-pds">'</span></span>,
    contributors<span class="pl-k">:</span> [
        <span class="pl-c">// TODO: Should we remove this section in favor of GitHub's list?</span>
        <span class="pl-c">// https://github.com/aseemk/json5/contributors</span>
        <span class="pl-s"><span class="pl-pds">'</span>Max Nanasy &lt;max.nanasy@gmail.com&gt;<span class="pl-pds">'</span></span>,
        <span class="pl-s"><span class="pl-pds">'</span>Andrew Eisenberg &lt;andrew@eisenberg.as&gt;<span class="pl-pds">'</span></span>,
        <span class="pl-s"><span class="pl-pds">'</span>Jordan Tucker &lt;jordanbtucker@gmail.com&gt;<span class="pl-pds">'</span></span>,
    ],
    main<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>lib/json5.js<span class="pl-pds">'</span></span>,
    bin<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>lib/cli.js<span class="pl-pds">'</span></span>,
    files<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">"</span>lib/<span class="pl-pds">"</span></span>],
    dependencies<span class="pl-k">:</span> {},
    devDependencies<span class="pl-k">:</span> {
        gulp<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>^3.9.1<span class="pl-pds">"</span></span>,
        <span class="pl-s"><span class="pl-pds">'</span>gulp-jshint<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>^2.0.0<span class="pl-pds">"</span></span>,
        jshint<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>^2.9.1<span class="pl-pds">"</span></span>,
        <span class="pl-s"><span class="pl-pds">'</span>jshint-stylish<span class="pl-pds">'</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>^2.1.0<span class="pl-pds">"</span></span>,
        mocha<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>^2.4.5<span class="pl-pds">"</span></span>
    },
    scripts<span class="pl-k">:</span> {
        build<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>node ./lib/cli.js -c package.json5<span class="pl-pds">'</span></span>,
        test<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>mocha --ui exports --reporter spec<span class="pl-pds">'</span></span>,
            <span class="pl-c">// TODO: Would it be better to define these in a mocha.opts file?</span>
    },
    homepage<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>http://json5.org/<span class="pl-pds">'</span></span>,
    license<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>MIT<span class="pl-pds">'</span></span>,
    repository<span class="pl-k">:</span> {
        type<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>git<span class="pl-pds">'</span></span>,
        url<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">'</span>https://github.com/aseemk/json5.git<span class="pl-pds">'</span></span>,
    },
}</pre>
    </div> 
    <h2> <a id="community" class="anchor" href="#community" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Community</h2> 
    <p>Join the <a href="http://groups.google.com/group/json5">Google Group</a> if you’re interested in JSON5 news, updates, and general discussion. Don’t worry, it’s very low-traffic.</p> 
    <p>The <a href="https://github.com/aseemk/json5/wiki">GitHub wiki</a> is a good place to track JSON5 support and usage. Contribute freely there!</p> 
    <p><a href="https://github.com/aseemk/json5/issues">GitHub Issues</a> is the place to formally propose feature requests and report bugs. Questions and general feedback are better directed at the Google Group.</p> 
    <h2> <a id="usage" class="anchor" href="#usage" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Usage</h2> 
    <p>This JavaScript implementation of JSON5 simply provides a <code>JSON5</code> object just like the native ES5 <code>JSON</code> object.</p> 
    <p>To use from Node:</p> 
    <div class="highlight highlight-source-shell">
     <pre>npm install json5</pre>
    </div> 
    <div class="highlight highlight-source-js">
     <pre><span class="pl-k">var</span> <span class="pl-c1">JSON5</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>json5<span class="pl-pds">'</span></span>);</pre>
    </div> 
    <p>To use in the browser (adds the <code>JSON5</code> object to the global namespace):</p> 
    <div class="highlight highlight-text-html-basic">
     <pre>&lt;<span class="pl-ent">script</span> <span class="pl-e">src</span>=<span class="pl-s"><span class="pl-pds">"</span>json5.js<span class="pl-pds">"</span></span>&gt;&lt;/<span class="pl-ent">script</span>&gt;</pre>
    </div> 
    <p>Then in both cases, you can simply replace native <code>JSON</code> calls with <code>JSON5</code>:</p> 
    <div class="highlight highlight-source-js">
     <pre><span class="pl-k">var</span> obj <span class="pl-k">=</span> <span class="pl-c1">JSON5</span>.<span class="pl-c1">parse</span>(<span class="pl-s"><span class="pl-pds">'</span>{unquoted:"key",trailing:"comma",}<span class="pl-pds">'</span></span>);
<span class="pl-k">var</span> str <span class="pl-k">=</span> <span class="pl-c1">JSON5</span>.<span class="pl-en">stringify</span>(obj);</pre>
    </div> 
    <p><code>JSON5.parse</code> supports all of the JSON5 features listed above (<em>TODO: except Unicode</em>), as well as the native <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"><code>reviver</code> argument</a>.</p> 
    <p><code>JSON5.stringify</code> mainly avoids quoting keys where possible, but we hope to keep expanding it in the future (e.g. to also output trailing commas). It supports the native <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"><code>replacer</code> and <code>space</code> arguments</a>, as well. <em>(TODO: Any implemented <code>toJSON</code> methods aren’t used today.)</em></p> 
    <h3> <a id="extras" class="anchor" href="#extras" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Extras</h3> 
    <p>If you’re running this on Node, you can also register a JSON5 <code>require()</code> hook to let you <code>require()</code> <code>.json5</code> files just like you can <code>.json</code> files:</p> 
    <div class="highlight highlight-source-js">
     <pre><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>json5/lib/require<span class="pl-pds">'</span></span>);
<span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>./path/to/foo<span class="pl-pds">'</span></span>);   <span class="pl-c">// tries foo.json5 after foo.js, foo.json, etc.</span>
<span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">'</span>./path/to/bar.json5<span class="pl-pds">'</span></span>);</pre>
    </div> 
    <p>This module also provides a <code>json5</code> executable (requires Node) for converting JSON5 files to JSON:</p> 
    <div class="highlight highlight-source-shell">
     <pre>json5 -c path/to/foo.json5    <span class="pl-c"># generates path/to/foo.json</span></pre>
    </div> 
    <h2> <a id="development" class="anchor" href="#development" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Development</h2> 
    <div class="highlight highlight-source-shell">
     <pre>git clone git://github.com/aseemk/json5.git
<span class="pl-c1">cd</span> json5
npm install
npm <span class="pl-c1">test</span></pre>
    </div> 
    <p>As the <code>package.json5</code> file states, be sure to run <code>npm run build</code> on changes to <code>package.json5</code>, since npm requires <code>package.json</code>.</p> 
    <p>Feel free to <a href="https://github.com/aseemk/json5/issues">file issues</a> and submit <a href="https://github.com/aseemk/json5/pulls">pull requests</a> — contributions are welcome. If you do submit a pull request, please be sure to add or update the tests, and ensure that <code>npm test</code> continues to pass.</p> 
    <h2> <a id="license" class="anchor" href="#license" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>License</h2> 
    <p>MIT License © 2012-2016 Aseem Kishore, and <a href="https://github.com/aseemk/json5/contributors">others</a>.</p> 
    <h2> <a id="credits" class="anchor" href="#credits" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Credits</h2> 
    <p><a href="http://bolinfest.com/">Michael Bolin</a> independently arrived at and published some of these same ideas with awesome explanations and detail. Recommended reading: <a href="http://bolinfest.com/essays/json.html">Suggested Improvements to JSON</a></p> 
    <p><a href="http://www.crockford.com/">Douglas Crockford</a> of course designed and built JSON, but his state machine diagrams on the <a href="http://json.org/">JSON website</a>, as cheesy as it may sound, gave me motivation and confidence that building a new parser to implement these ideas this was within my reach! This code is also modeled directly off of Doug’s open-source <a href="https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js">json_parse.js</a> parser. I’m super grateful for that clean and well-documented code.</p> 
    <p><a href="https://github.com/MaxNanasy">Max Nanasy</a> has been an early and prolific supporter, contributing multiple patches and ideas. Thanks Max!</p> 
    <p><a href="https://github.com/aeisenberg">Andrew Eisenberg</a> has contributed the <code>stringify</code> method.</p> 
    <p><a href="https://github.com/jordanbtucker">Jordan Tucker</a> has aligned JSON5 more closely with ES5 and is actively maintaining this project.</p> 
   </section> 
   <footer> 
    <p>This project is maintained by <a href="https://github.com/json5">json5</a></p> 
    <p><small>Hosted on GitHub Pages — Theme by <a href="https://github.com/orderedlist">orderedlist</a></small></p> 
   </footer> 
  </div> 
  <script src="javascripts/scale.fix.js"></script> 
  <script type="text/javascript">
            var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
            document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
          </script> 
  <script type="text/javascript">
            try {
              var pageTracker = _gat._getTracker("UA-32213209-1");
            pageTracker._trackPageview();
            } catch(err) {}
          </script>   
 </body>
</html>