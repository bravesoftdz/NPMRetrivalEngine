<!doctype html>
<html>
 <head> 
  <meta charset="utf-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1"> 
  <title>
    
      JSON Format (OData Version 2.0) · OData - the Best Way to REST
    
  </title> 
  <meta name="description" content="OData, short for Open Data Protocol, is an open protocol to allow the creation and consumption of queryable and interoperable RESTful APIs in a simple and standard way.
"> 
  <meta name="keywords" content="odata, open data, open data protocol, rest, restful, rest api, rest apis, restful api, restful apis, rest service, rest services, restful service, restful services, http, oasis, oasis tc"> 
  <script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.0.0.min.js"></script> 
  <script>
  // Fallback to loading jQuery from a local path if the CDN is unavailable
  (window.jQuery || document.write('<script src="/public/jquery-3.0.0.min.js"><\/script>'));
  </script> 
  <script>
  $(document).ready(function(){
    $.getJSON("http://ipinfo.io/?callback=?", function(data) {
      if (data.country=="CN") {
        $("#GeoResults").html('<embed src="http://player.youku.com/player.php/sid/XMTU5MzU2MDU0NA==/v.swf" allowFullScreen="true" quality="high" width=100% height="230" align="middle" allowScriptAccess="always" type="application/x-shockwave-flash"></embed>');
      } else $("#GeoResults").html('<iframe width=100% height=230px src="https://www.youtube.com/embed/wH5TUwzlaWI"></iframe>');
    });
  });
  </script> 
  <link rel="stylesheet" href="https://bootswatch.com/united/bootstrap.min.css"> 
  <link rel="stylesheet" href="http://www.odata.org/public/css/site.css"> 
  <link rel="stylesheet" href="http://www.odata.org/public/css/syntax.css"> 
  <!--Below is for the adopters page--> 
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/3.0.7/css/swiper.min.css"> 
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/1.0.0/magnific-popup.min.css"> 
  <!-- end --> 
 </head> 
 <body data-spy="scroll" data-target="nav"> 
  <nav class="navbar navbar-default" role="navigation"> 
   <div class="container container-fluid"> 
    <div class="navbar-header"> 
     <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#odata-navbar-collapse"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="brand" href="/"> <img class="img-responsive" src="http://www.odata.org/assets/OData-logo-e1393393068350.png"> </a> 
    </div> 
    <div class="collapse navbar-collapse" id="odata-navbar-collapse"> 
     <ul class="nav navbar-nav"> 
      <li><a href="/blog">Blog</a></li> 
      <li class="dropdown"> <a class="dropdown-toggle" data-toggle="dropdown" data-target="#" href="#">Developers <b class="caret"></b></a> 
       <ul class="dropdown-menu"> 
        <li><a href="/getting-started">Getting Started</a></li> 
        <li><a href="/documentation">Documentation</a></li> 
        <li><a href="/libraries">Libraries</a></li> 
        <li><a href="/odata-services">Reference Services</a></li> 
        <li><a href="/odata-icon-usage-guidelines/">Icon Usage</a></li> 
       </ul> </li> 
      <li class="dropdown"> <a class="dropdown-toggle" data-toggle="dropdown" data-target="#" href="#">Tools <b class="caret"></b></a> 
       <ul class="dropdown-menu"> 
        <li><a href="//marketplace.visualstudio.com/items?itemName=stansw.vscode-odata " target="_blank">OData for Visual Studio Code</a></li> 
        <li><a href="//services.odata.org/validation/" target="_blank">OData Validator</a></li> 
        <li><a href="//services.odata.org/ODataAPIExplorer/ODataAPIExplorer.html" target="_blank">OData API Explorer</a></li> 
        <li><a href="//pragmatiqa.com/xodata/" target="_blank">XOData</a></li> 
       </ul> </li> 
      <li><a href="/ecosystem">Ecosystem</a></li> 
      <li><a href="/contribution">Getting Involved</a></li> 
     </ul> 
     <form class="navbar-form navbar-left" role="search"> 
      <div class="form-group"> 
       <input type="text" class="form-control st-default-search-input" placeholder="Search"> 
      </div> 
     </form> 
    </div> 
   </div> 
  </nav> 
  <div class="container"> 
   <div class="page-header"> 
    <h1>JSON Format (OData Version 2.0)</h1> 
   </div> 
   <h5 class="alert alert-success">OData Version 4.0 is the current recommended version of OData. OData V4 has been standardized by OASIS and has many features not included in OData Version 2.0. <br><br> <a href="/documentation/" class="alert-link" title=""><span class="glyphicon glyphicon-arrow-right"></span> Go to OData Version 4.0</a></h5> 
   <h2>Introduction</h2> 
   <p>OData supports two formats for representing the resources (Collections, Entries, Links, etc) it exposes: the XML-based AtomPub format and the JSON format. This document describes how OData resources are represented in JSON and <a href="../atom-format">[OData-Atom]</a> describes the AtomPub representation. The <a href="../operations#ContentTypeNegotation">content type negotiation</a> section of the <a href="../operations">[OData-Operations]</a> document describes how clients can use standard HTTP content type negotiation to tell an OData service which format it wants to use.</p> 
   <h2><a id="Background" name="Background"></a>1. Background</h2> 
   <p><a href="http://www.json.org">JavaScript Object Notation (JSON)</a> is a lightweight data interchange format based on a subset of the JavaScript Programming Language standard, as specified in <a href="http://go.microsoft.com/fwlink/?LinkId=115082"> [ECMA-262]</a>. JSON is a text format that is language independent, but uses conventions that are familiar to programmers of the C-family of languages (C, C++, JavaScript, and so on). OData supports the JSON format to make consuming OData services from Javascript applications simple since JSON can be easily be turned into JavaScript objects for programmatic manipulation using the Javascript eval( ) function.</p> 
   <h2><a id="Terminology" name="Terminology"></a>2. Terminology</h2> 
   <p>A full list of terms used by the Open Data Protocol is available on the <a href="../terminology">OData Glossary of Terms</a> page.</p> 
   <h2><a id="JSONRepresentations" name="JSONRepresentations"></a>3. JSON Representations</h2> 
   <p>The following sections define how resources exposed by an OData service can be represented in requests and/or responses payloads using the JSON format. For details regarding how to create various request types (Retrieve, Create, etc) see <a href="../operations">[OData-Operations]</a> . <strong>Security Note</strong>: In responses payloads (not request payloads) all the JSON representations described in this section are wrapped by an outer most object that includes a single name/value pair. The name of the name/value pair is always "d" and the value is the JSON representation of an OData resource as described by the subsections of this document. This pattern ensures JSON payloads returned from OData services are valid JSON statements, but not valid JavaScript statements. This prevents an OData JSON response from being executed as the result of a cross site scripting (XSS) attack.</p> 
   <h2><a id="PrimitiveTypes" name="PrimitiveTypes"></a>4. Primitive Types</h2> 
   <p>Values of an OData primitive type are represented as JSON literal values as per the table below. Note: The type system used by OData services is described in full in the <a href="../overview#AbstractTypeSystem">Abstract Type System</a> section of the <a href="../overview">[OData-Core]</a> document.</p> 
   <table border="1" cellspacing="0" cellpadding="0"> 
    <tbody> 
     <tr> 
      <th valign="bottom" width="148">Primitive Type</th> 
      <th valign="bottom" width="456">JSON Serialization Format</th> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Binary</td> 
      <td valign="top" width="456">Base64 encoded value of an EDM.Binary value represented as a JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Boolean</td> 
      <td valign="top" width="456">true | false</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Byte</td> 
      <td valign="top" width="456">Literal form of Edm.Byte as used in URIs formatted as a JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.DateTime</td> 
      <td valign="top" width="456">"/Date(&lt;ticks&gt;["+" | "-" &lt;offset&gt;)/"&lt;ticks&gt; = number of milliseconds since midnight Jan 1, 1970&lt;offset&gt; = number of minutes to add or subtract</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Decimal</td> 
      <td valign="top" width="456">Literal form of Edm.Decimal as used in URIs formatted as a JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Double</td> 
      <td valign="top" width="456">Literal form of Edm.Double as used in URIs formatted as a JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Guid</td> 
      <td valign="top" width="456">Literal form of Edm.Guid as used in URIs formatted as a JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Int16</td> 
      <td valign="top" width="456">A JSON number</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Int32</td> 
      <td valign="top" width="456">A JSON number</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Int64</td> 
      <td valign="top" width="456">A 64-bit integer formatted as a JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.SByte</td> 
      <td valign="top" width="456">Literal form of Edm.SByte as used in URIs formatted as a JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Single</td> 
      <td valign="top" width="456">Literal form of Edm.Single as used in URIs formatted as a JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.String</td> 
      <td valign="top" width="456">Any JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.Time</td> 
      <td valign="top" width="456">Literal form of Edm.Time as used in URIs formatted as a JSON string</td> 
     </tr> 
     <tr> 
      <td valign="top" width="148">Edm.DateTimeOffset</td> 
      <td valign="top" width="456">Literal form of Edm.DateTimeOffset as used in URIs formatted as a JSON string</td> 
     </tr> 
    </tbody> 
   </table> 
   <h2><a id="ServiceDocuments" name="ServiceDocuments"></a>5. Service Documents</h2> 
   <p>As described in <a href="../overview">[OData-Core]</a>, if a service exposes several Collections, then to aid discovery of those Collections by clients it is useful for the service to expose a Service Document which lists the available Collections. Service Documents are represented in JSON by an object with a single name/value pair with the name equal to "EntitySets" and the value being an array of Collection names. For example a service document with three collections would be formatted as:</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="p">{</span> <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> <span class="s2">"EntitySets"</span><span class="err">:</span> <span class="p">[</span><span class="s2">"Products"</span><span class="p">,</span> <span class="s2">"Categories"</span><span class="p">,</span> <span class="s2">"Suppliers"</span><span class="p">]</span> <span class="p">}</span> <span class="p">}</span></code></pre>
   </figure> 
   <h2><a id="RepresentingCollectionsOfEntries" name="RepresentingCollectionsOfEntries"></a>6. Representing Collections of Entries</h2> 
   <p><a href="../terminology">Collections</a> represent a set of <a href="../terminology">Entries</a>. In OData v1, Collections are represented as an array of objects, with one object for each Entry within the Collection. For example, a collection of Entries would be represented as shown below. The format of each object in the array is described in the <a href="../json-format#RepresentingEntries">Representing Entries</a> section. In OData v2, Collections are still represented as arrays, however to enable representing Collection-level metadata, the array of objects representing the set of Entries is included as the value of a "results" name/value pair.</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="nx">OData</span> <span class="nx">V1</span><span class="err">:</span> <span class="p">{</span> 
  <span class="s2">"d"</span> <span class="err">:</span> <span class="p">[</span> 
    <span class="p">{</span> <span class="p">...</span> <span class="p">},</span> 
    <span class="p">{</span> <span class="p">...</span> <span class="p">},</span> 
    <span class="p">{</span> <span class="p">...</span> <span class="p">},</span> 
  <span class="p">]</span> 
<span class="p">}</span> 
<span class="nx">OData</span> <span class="nx">V2</span><span class="err">:</span> <span class="p">{</span> 
  <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> 
    <span class="s2">"results"</span><span class="err">:</span>  <span class="p">[</span> 
      <span class="p">{</span> <span class="p">...</span> <span class="p">},</span> 
      <span class="p">{</span> <span class="p">...</span> <span class="p">},</span> 
      <span class="p">{</span> <span class="p">...</span> <span class="p">}</span>
    <span class="p">]</span> 
  <span class="p">}</span>
<span class="p">}</span></code></pre>
   </figure> 
   <p>OData v2 supports two pieces of collection-level metadata: an Entry count (the count of the number of entities in the Collection) and "next links" in the case when a <a href="../terminology">partial listing</a> of the Collection of Entries is being represented. The Entry count, is only included in the representation when a Collection of entries is being returned by an OData service and the request URI included the $inlinecount System Query Option. In this case, the count information is represented as a name/value pair with name equal to "count" and the value being the number of Entries in the collection. See <a href="../uri-conventions#InlinecountSystemQueryOption%28$inlinecount%29"> ; $inlinecount section</a> of the <a href="../uri-conventions">[OData-URI]</a> document for a description of how the count value is calculated. In response payloads, representing Collections of Entries, if the server does not include an object for every Entry in the Collection of Entries identified by the request URI then the response represents a <a href="../terminology">partial listings</a> of the Collection. In this case, "__next" name/value pair is included to indicate the response represents a partial listing. The value of the name/value pair is a URI which identifies the next partial set of entities from the originally identified complete set. For more information on interacting with partial listings, see <a href="../operations#Retrieving%20feeds,%20entries%20and%20service%20documents"> Retrieving feeds, entries and service documents</a> in the <a href="../operations">[OData-Operations]</a> document.</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="nx">OData</span> <span class="nx">V2</span><span class="err">:</span> <span class="p">{</span> 
  <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> 
    <span class="s2">"results"</span><span class="err">:</span> <span class="p">[</span> <span class="p">{</span> 
      <span class="s2">"__metadata"</span><span class="p">:</span> <span class="p">{</span> 
        <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Categories(0)"</span><span class="p">,</span>
        <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"DataServiceProviderDemo.Category"</span> <span class="p">},</span> <span class="s2">"ID"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">"Name"</span><span class="p">:</span> <span class="s2">"Food"</span><span class="p">,</span> 
        <span class="s2">"Products"</span><span class="p">:</span> <span class="p">{</span> 
          <span class="s2">"__deferred"</span><span class="p">:</span> <span class="p">{</span> 
            <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Categories(0)/Products"</span>
          <span class="p">}</span> 
        <span class="p">}</span> 
      <span class="p">},</span> 
      <span class="p">{</span> <span class="cm">/* another Category Entry */</span> <span class="p">},</span> 
      <span class="p">{</span> <span class="cm">/* another Category Entry */</span> <span class="p">},</span> 
      <span class="p">{</span> <span class="cm">/* another Category Entry */</span> <span class="p">}</span> 
    <span class="p">],</span> 
    <span class="s2">"__count"</span><span class="p">:</span> <span class="s2">"3"</span><span class="p">,</span> 
    <span class="s2">"__next"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc$skiptoken=12"</span>
  <span class="p">}</span> 
<span class="p">}</span></code></pre>
   </figure> 
   <h2><a id="RepresentingEntries" name="RepresentingEntries"></a>7. Representing Entries</h2> 
   <p>In OData v1, Entries are represented as JSON objects with all the <a href="../terminology">properties</a> of the Entry represented as name/value pairs of the object. Alternatively, if the Entry is being represented was identified with a URI that includes a Select System Query Option, then the prior rule is relaxed such that only the properties identified by the $select query option are represented as name/value pairs. OData v2 represents Entries the same way as V1. An optional "__metadata" name/value pair is the only pair that should be included on the object that does not directly represent a Property of the Entry being represented. This name/value pair is not data, but instead, by convention defined in this document, specifies the metadata for the Entry being represented. The value of the "__metadata" name/value pair is a JSON object that contains the name/value pairs described in the table below.</p> 
   <table border="1" cellspacing="0" cellpadding="0"> 
    <tbody> 
     <tr> 
      <th valign="top" width="136"><strong>"__metadata" object name/value pairs</strong></th> 
      <th valign="top" width="87"><strong>Optional</strong></th> 
      <th valign="top" width="415"><strong>Description</strong></th> 
     </tr> 
     <tr> 
      <td valign="top" width="136"><strong>uri</strong></td> 
      <td valign="top" width="87">No</td> 
      <td valign="top" width="415">The canonical URI identifying the Entry being represented</td> 
     </tr> 
     <tr> 
      <td valign="top" width="136"><strong>type</strong></td> 
      <td valign="top" width="87">Yes*</td> 
      <td valign="top" width="415">The name of the <a href="../terminology">EntityType</a> in the data model of the OData service that describes the Entry being represented.*This name/value pair must be included if the Entry being represented is part of a type hierarchy and is not the base type in the hierarchy.</td> 
     </tr> 
     <tr> 
      <td valign="top" width="136"><strong>etag</strong></td> 
      <td valign="top" width="87">Yes</td> 
      <td valign="top" width="415">The <a href="../terminology">concurrency token</a> associated with the Entry being represented</td> 
     </tr> 
     <tr> 
      <td valign="top" width="136"><strong>edit_ media, media_src, media_etag, content_type</strong></td> 
      <td valign="top" width="87">--</td> 
      <td valign="top" width="415">These name/value pairs only apply if the Entry is a Media Link Entry as described by the <a href="../json-format#RepresentingMediaLinkEntries">Representing Media Link Entries section</a>.</td> 
     </tr> 
    </tbody> 
   </table> 
   <p>For example, a single Category Entry would be represented as shown in the example below.</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="nx">OData</span> <span class="nx">V1</span><span class="err">:</span> <span class="p">{</span> 
  <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> 
    <span class="s2">"__metadata"</span><span class="err">:</span> <span class="p">{</span> 
      <span class="s2">"uri"</span><span class="err">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Categories(0)"</span><span class="p">,</span>
      <span class="s2">"type"</span><span class="err">:</span> <span class="s2">"DataServiceProviderDemo.Category"</span> 
    <span class="p">},</span> 
    <span class="s2">"ID"</span><span class="err">:</span> <span class="mi">0</span><span class="p">,</span> 
    <span class="s2">"Name"</span><span class="err">:</span> <span class="s2">"Food"</span><span class="p">,</span> 
    <span class="s2">"Products"</span><span class="err">:</span> <span class="p">{</span> 
      <span class="s2">"__deferred"</span><span class="err">:</span> <span class="p">{</span> 
        <span class="s2">"uri"</span><span class="err">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Categories(0)/Products"</span>
      <span class="p">}</span> 
    <span class="p">}</span> 
  <span class="p">}</span>
<span class="p">}</span> 
<span class="nx">OData</span> <span class="nx">V2</span><span class="err">:</span> <span class="p">{</span> 
  <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> 
      <span class="s2">"__metadata"</span><span class="err">:</span> <span class="p">{</span> 
        <span class="s2">"uri"</span><span class="err">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Categories(0)"</span><span class="p">,</span>
        <span class="s2">"type"</span><span class="err">:</span> <span class="s2">"DataServiceProviderDemo.Category"</span> 
      <span class="p">},</span> 
      <span class="s2">"ID"</span><span class="err">:</span> <span class="mi">0</span><span class="p">,</span> 
      <span class="s2">"Name"</span><span class="err">:</span> <span class="s2">"Food"</span><span class="p">,</span> 
      <span class="s2">"Products"</span><span class="err">:</span> <span class="p">{</span> 
        <span class="s2">"__deferred"</span><span class="err">:</span> <span class="p">{</span> 
          <span class="s2">"uri"</span><span class="err">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Categories(0)/Products"</span>
        <span class="p">}</span> 
      <span class="p">}</span> 
  <span class="p">}</span> 
<span class="p">}</span></code></pre>
   </figure> 
   <h2><a id="DeferredContent" name="DeferredContent"></a>8. Deferred Content</h2> 
   <p>To conserve resources (bandwidth, CPU, and so on), it is generally not a good idea for an OData service to return the full graph of Entries related to an Entry or Collection of entries as identified in a request URI. For example, an OData service should defer sending related Entries unless the client explicitly asked for them using the <a href="../uri-conventions">$expand System Query Option</a> which provides a way for a client to state related entities should be <a href="../json-format#InlineRepresentationofAssociatedEntries"> represented inline</a>. As shown in the example above, by default properties which represent <a href="../terminology">Links</a> (the "Products" property in the example) are represented as an object with a "__deferred" name/value pair to indicate the service deferred representing the related Entries. The uri name/value pair within the "__deferred" object must be provided and can be used to retrieve the deferred content.</p> 
   <h2><a id="InlineRepresentationOfAssociatedEntries" name="InlineRepresentationOfAssociatedEntries"></a>9. Inline Representation of Associated Entries</h2> 
   <p>As described in the <a href="../uri-conventions">$expand System Query Option section</a> of the <a href="../uri-conventions">[OData-URI]</a> document, a request URI may include the $expand query option to explicitly request that a linked to Entry or collection of Entries be serialized inline, rather than deferred. For example, a single Category Entry with its related Product Entries serialized inline as shown in the example below.</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="nx">OData</span> <span class="nx">V1</span> <span class="nx">and</span> <span class="nx">V2</span><span class="err">:</span> <span class="p">{</span> 
  <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> 
    <span class="s2">"__metadata"</span><span class="err">:</span> <span class="p">{</span> 
      <span class="s2">"uri"</span><span class="err">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Categories(0)"</span><span class="p">,</span>
      <span class="s2">"type"</span><span class="err">:</span> <span class="s2">"DataServiceProviderDemo.Category"</span> <span class="p">},</span> 
      <span class="s2">"ID"</span><span class="err">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="s2">"Name"</span><span class="err">:</span> <span class="s2">"Food"</span><span class="p">,</span> 
      <span class="s2">"Products"</span><span class="err">:</span> <span class="p">[</span> <span class="p">{</span> 
        <span class="s2">"__metadata"</span><span class="p">:</span> <span class="p">{</span> 
          <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Products(0)"</span><span class="p">,</span>
          <span class="s2">"etag"</span><span class="p">:</span> <span class="s2">"W/"</span><span class="mi">0</span><span class="s2">""</span><span class="p">,</span> 
          <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"DataServiceProviderDemo.Product"</span> 
        <span class="p">},</span> 
        <span class="s2">"ID"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> 
        <span class="s2">"Name"</span><span class="p">:</span> <span class="s2">"Bread"</span><span class="p">,</span> 
        <span class="s2">"Description"</span><span class="p">:</span> <span class="s2">"Whole grain bread"</span><span class="p">,</span> 
        <span class="s2">"ReleaseDate"</span><span class="p">:</span> <span class="s2">"/Date(694224000000)/"</span><span class="p">,</span>
        <span class="s2">"DiscontinuedDate"</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span> 
        <span class="s2">"Rating"</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> 
        <span class="s2">"Price"</span><span class="p">:</span> <span class="s2">"2.5"</span><span class="p">,</span> 
        <span class="s2">"Concurrency"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> 
        <span class="s2">"Category"</span><span class="p">:</span> <span class="p">{</span> 
          <span class="s2">"__deferred"</span><span class="p">:</span> <span class="p">{</span> 
            <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Products(0)/Category"</span>
          <span class="p">}</span> 
        <span class="p">},</span> 
        <span class="s2">"Supplier"</span><span class="p">:</span> <span class="p">{</span> 
          <span class="s2">"__deferred"</span><span class="p">:</span> <span class="p">{</span> 
            <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Products(0)/Supplier"</span>
          <span class="p">}</span> 
        <span class="p">}</span> 
      <span class="p">}</span> 
    <span class="p">]</span> 
  <span class="p">}</span> 
<span class="p">}</span> </code></pre>
   </figure> 
   <h2><a id="RepresentingMediaLinkEntries" name="RepresentingMediaLinkEntries"></a> 10. Representing Media Link Entries</h2> 
   <p><a href="../terminology">Media Link Entries (MLE)</a> are represented in the same way as "plain" Entries as described in <a href="../json-format#RepresentingEntries"> Representing Entries</a>; however, they also contain additional metadata per Entry that describes the Media Resource (MR) associated with the Entry. This additional MR metadata is represented as name/value pairs of the "__metadata" object associated with the Entry.</p> 
   <table border="1" cellspacing="0" cellpadding="0"> 
    <tbody> 
     <tr> 
      <th valign="top" width="136"><strong>"__metadata" object name/value pairs for MLEs</strong></th> 
      <th valign="top" width="87"><strong>Optional</strong></th> 
      <th valign="top" width="415"><strong>Description</strong></th> 
     </tr> 
     <tr> 
      <td valign="top" width="136"><strong>media_src</strong></td> 
      <td valign="top" width="87">No</td> 
      <td valign="top" width="415">The URI to use when retrieving the Media Resource</td> 
     </tr> 
     <tr> 
      <td valign="top" width="136"><strong>edit_ media</strong></td> 
      <td valign="top" width="87">Yes</td> 
      <td valign="top" width="415">The URI to use when editing the Media Resource</td> 
     </tr> 
     <tr> 
      <td valign="top" width="136"><strong>media_etag</strong></td> 
      <td valign="top" width="87">Yes</td> 
      <td valign="top" width="415">The concurrency token for the Media Resource</td> 
     </tr> 
     <tr> 
      <td valign="top" width="136"><strong>content_type</strong></td> 
      <td valign="top" width="87">No</td> 
      <td valign="top" width="415">The IANA media type of the Media Resource (ex. image/jpeg )</td> 
     </tr> 
    </tbody> 
   </table> 
   <h2><a id="RepresentingPropertyValues" name="RepresentingPropertyValues"></a> 11. Representing Property Values</h2> 
   <p>As described in the <a href="../uri-conventions#ResourcePath">Resource Path</a> section in the <a href="../uri-conventions">[OData-URI]</a> document, OData supports directly addressing a Property of an Entry. The following subsections describe how each type of Property is represented in JSON.</p> 
   <h2><a id="RepresentingPrimitiveProperties" name="RepresentingPrimitiveProperties"></a> 12. Representing Primitive Properties</h2> 
   <p>When represented in a request/response payload as part of an Entry, Complex Type or a standalone construct in a request payload, <a href="../terminology">primitive properties</a> are represented in JSON as a name/value pair, with the name equal to the name of the property and primitive type value formatted as described by the table in the <a href="../terminology">Primitive Types</a> section above. Starting with OData V2, when a primitive property is represented as a standalone construct in a response from an OData service (such as when a retrieve request is made to a URI that identifies a single property) it is represented as the value of a "results" name/value pair. For example, the response payload to a retrieve request that identifies the Name property of a Category Entry is represented as shown below.</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="nx">OData</span> <span class="nx">V2</span> <span class="nx">Response</span> <span class="nx">Payload</span><span class="err">:</span> <span class="p">{</span> <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> <span class="s2">"results"</span><span class="err">:</span> <span class="p">{</span> <span class="s2">"Name"</span><span class="err">:</span> <span class="s2">"Bread"</span> <span class="p">}</span></code></pre>
   </figure> 
   <h2><a id="RepresentingComplexTypeProperties" name="RepresentingComplexTypeProperties"></a>13. Representing Complex Types Properties</h2> 
   <p>When represented as a property of an Entry or Complex Type in a request/response payload, a property whose type is a <a href="../terminology">complex type</a> is represented as a JSON object with each property of the complex type represented as a name/value pair (as described in the prior section for primitive properties). For example, the Address Complex Type of a Supplier Entry is shown in the example below. Starting with OData V2, in response payloads only, when a property whose type is a <a href="../terminology">complex type</a> is represented as a standalone construct, such as when a retrieve request is made to a URI that identifies a single property, it is represented as the value of a "results" name/value pair. For example, the response payload to a retrieve request that identifies the Name property of a Category Entry is represented as shown below.</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="nx">OData</span> <span class="nx">V2</span> <span class="nx">Response</span> <span class="nx">Payload</span><span class="err">:</span> <span class="p">{</span> 
  <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> 
    <span class="s2">"results"</span><span class="err">:</span> <span class="p">{</span> 
      <span class="s2">"__metadata"</span><span class="err">:</span> <span class="p">{</span> 
        <span class="s2">"type"</span><span class="err">:</span> <span class="s2">"DataServiceProviderDemo.Address"</span>
      <span class="p">},</span> 
      <span class="s2">"Street"</span><span class="err">:</span> <span class="s2">"NE 228th"</span><span class="p">,</span> 
      <span class="s2">"City"</span><span class="err">:</span> <span class="s2">"Sammamish"</span><span class="p">,</span> 
      <span class="s2">"State"</span><span class="err">:</span> <span class="s2">"WA"</span><span class="p">,</span> 
      <span class="s2">"ZipCode"</span><span class="err">:</span> <span class="s2">"98074"</span><span class="p">,</span>
      <span class="s2">"Country"</span><span class="err">:</span> <span class="s2">"USA"</span> 
    <span class="p">}</span> 
  <span class="p">}</span> 
<span class="p">}</span></code></pre>
   </figure> 
   <h2><a id="RepresentingTheRawValueOfAProperty" name="RepresentingTheRawValueOfAProperty"></a>14. Representing the Raw value of a Property</h2> 
   <p>OData services may support addressing the "raw" value of a primitive property (see the description of the $value URI segment). In this case the value is returned using the format (aka mime type) the OData service deems to be the "raw" format for the property. For example, the HTTP response from the sample OData service when retrieving the Name string property of a Category entry is shown in the example below.</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="nx">HTTP</span><span class="o">/</span><span class="mf">1.1</span> <span class="mi">200</span> <span class="nx">OK</span> <span class="nx">DataServiceVersion</span><span class="err">:</span> <span class="mf">1.0</span><span class="p">;</span> <span class="nx">Content</span><span class="o">-</span><span class="nx">Type</span><span class="err">:</span> <span class="nx">text</span><span class="o">/</span><span class="nx">plain</span><span class="p">;</span><span class="nx">charset</span><span class="o">=</span><span class="nx">utf</span><span class="o">-</span><span class="mi">8</span>
  <span class="nx">Food</span></code></pre>
   </figure> 
   <h2><a id="RepresentingLinks" name="RepresentingLinks"></a>15. Representing Links</h2> 
   <p>A Link (or collection of Links) represents an associated Entry (or collection of associated Entries). As described in <a href="../operations">[OData-Operations]</a> Links can be retrieved and modified to change the associations between Entities. A single link is represented as a JSON object with a "uri" name/value pair with the value of the pair being the URI that identifies the Link. A collection of links is represented as a array of JSON objects with each object representing a Link. For example, a link with multiplicity 1 (ex. Product is related to a <em>single</em> Supplier) would be represented in a response as:</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="p">{</span> <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> <span class="s2">"uri"</span><span class="err">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Suppliers(0)"</span> <span class="p">}</span> <span class="p">}</span></code></pre>
   </figure> 
   <p>For example, a link with multiplicity greater than 1 (ex. Supplier is related to <em>many</em> products) would be represented in a response as:</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="nx">OData</span> <span class="nx">V1</span> <span class="nx">Response</span> <span class="nx">Payload</span><span class="err">:</span> <span class="p">{</span> 
  <span class="s2">"d"</span> <span class="err">:</span> <span class="p">[</span> 
    <span class="p">{</span> <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Products(0)"</span> <span class="p">},</span> 
    <span class="p">{</span> <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Products(7)"</span> <span class="p">},</span> 
    <span class="p">{</span> <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Products(8)"</span> <span class="p">}</span> 
  <span class="p">]</span>
<span class="p">}</span> 
<span class="nx">OData</span> <span class="nx">V2</span> <span class="nx">Response</span> <span class="nx">Payload</span><span class="err">:</span> <span class="p">{</span> 
  <span class="s2">"d"</span> <span class="err">:</span> <span class="p">{</span> 
    <span class="s2">"results"</span><span class="err">:</span> <span class="p">[</span> 
      <span class="p">{</span> <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Products(0)"</span> <span class="p">},</span> 
      <span class="p">{</span> <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Products(7)"</span> <span class="p">},</span> 
      <span class="p">{</span> <span class="s2">"uri"</span><span class="p">:</span> <span class="s2">"http://services.odata.org/OData/OData.svc/Products(8)"</span> <span class="p">}</span> 
    <span class="p">],</span> 
    <span class="s2">"__count"</span><span class="err">:</span> <span class="s2">"3"</span> 
  <span class="p">}</span> 
<span class="p">}</span></code></pre>
   </figure> 
   <h2><a id="RepresentingResultsFromServiceOperations" name="RepresentingResultsFromServiceOperations"></a>16. Representing Results from Service Operations</h2> 
   <p>As described in <a href="../operations">[OData-Operations]</a> OData service may expose custom behaviors via Service Operations. As described in <a href="../uri-conventions">[OData-URI]</a> the input parameters to Service Operations are identified by the request URI. This section specifies how the results of a Service Operation are formatted using JSON. Service operations support returning:</p> 
   <ul> 
    <li>A single primitive value or collection of primitive values</li> 
    <li>A single complex type or collection of complex types</li> 
    <li>A single Entry or collection of Entries</li> 
   </ul> 
   <p>If a Service Operation returns a collection of Entries or a single Entry, then the Entries (or Entry) are formatted in the same way as described in the Representing Collections of Entries or Representing an Entry section. If a Service Operation returns a single primitive value, then it is formatted as per the Representing Primitive Properties section. Likewise, if a Service Operation returns a single Complex Type value, then it is represented as per the Representing Complex Type Properties section. If a Service Operation returns a collection of primitive values, then the primitives are returned as a JSON array as shown in the example below.</p> 
   <figure class="highlight">
    <pre><code class="language-javascript" data-lang="javascript"><span class="p">{</span> <span class="s2">"d"</span> <span class="err">:</span> <span class="p">[</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span> <span class="p">]</span> <span class="p">}</span></code></pre>
   </figure> 
   <p>If a Service Operation returns a collection of complex types, then a JSON array of objects are returned, one object per complex type. Each complex type is represented as described in the Representing Complex Type Properties section above.</p> 
  </div> 
  <script src="//code.jquery.com/jquery-2.1.0.min.js"></script> 
  <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script> 
  <script src="http://www.odata.org/public/site.js"></script> 
  <script type="text/javascript">
(function(w,d,t,u,n,s,e){w['SwiftypeObject']=n;w[n]=w[n]||function(){
(w[n].q=w[n].q||[]).push(arguments);};s=d.createElement(t);
e=d.getElementsByTagName(t)[0];s.async=1;s.src=u;e.parentNode.insertBefore(s,e);
})(window,document,'script','//s.swiftypecdn.com/install/v2/st.js','_st');

_st('install','23hsA6tEyP4R5VmqqdcD','2.0.0');
</script> 
  <script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-55977038-1', 'auto');
ga('send', 'pageview');
</script>  ?
  <footer class="content-info" role="contentinfo"> 
   <div class="container" style=" text-align: center"> 
    <p>© 2015-2017 OData  The Protocol for REST APIs </p> 
   </div> 
  </footer>  
 </body>
</html>