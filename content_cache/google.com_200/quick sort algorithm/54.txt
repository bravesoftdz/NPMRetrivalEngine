<!doctype html>
<html lang="en-US" class="no-js">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width"> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="pingback" href="http://www.shamasis.net/xmlrpc.php"> 
  <!--[if lt IE 9]>
	<script src="http://www.shamasis.net/wp-content/themes/twentyfifteen/js/html5.js"></script>
	<![endif]--> 
  <script>(function(){document.documentElement.className='js'})();</script> 
  <title>Fast Algorithm To Find Unique Items in JavaScript Array | Shamasis Bhattacharya</title> 
  <!-- Google Tag Manager for WordPress by DuracellTomi - http://duracelltomi.com --> 
  <script type="text/javascript">
	var gtm4wp_datalayer_name = "dataLayer";
	var dataLayer = dataLayer || []
</script> 
  <!-- End Google Tag Manager for WordPress by DuracellTomi --> 
  <!-- All in One SEO Pack 2.2.6.2 by Michael Torbert of Semper Fi Web Design[453,539] --> 
  <link rel="author" href="https://plus.google.com/+ShamasisBhattacharya0"> 
  <meta name="description" itemprop="description" content="When I had the requirement to remove duplicate items from a very large array, I found out that the classic method to be not optimized as it took a pretty long"> 
  <meta name="keywords" itemprop="keywords" content="algorithm,featured,javascript"> 
  <link rel="canonical" href="http://www.shamasis.net/2009/09/fast-algorithm-to-find-unique-items-in-javascript-array/"> 
  <!-- /all in one seo pack --> 
  <link rel="alternate" type="application/rss+xml" title="Shamasis Bhattacharya » Feed" href="http://www.shamasis.net/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Shamasis Bhattacharya » Comments Feed" href="http://www.shamasis.net/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="Shamasis Bhattacharya » Fast Algorithm To Find Unique Items in JavaScript Array Comments Feed" href="http://www.shamasis.net/2009/09/fast-algorithm-to-find-unique-items-in-javascript-array/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.shamasis.net\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.13"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="twentyfifteen-jetpack-css" href="http://www.shamasis.net/wp-content/plugins/jetpack/modules/theme-tools/compat/twentyfifteen.css?ver=3.4.3" type="text/css" media="all"> 
  <link rel="stylesheet" id="crayon-css" href="http://www.shamasis.net/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.6.10" type="text/css" media="all"> 
  <link rel="stylesheet" id="crayon-theme-tomorrow-css" href="http://www.shamasis.net/wp-content/plugins/crayon-syntax-highlighter/themes/tomorrow/tomorrow.css?ver=2.6.10" type="text/css" media="all"> 
  <link rel="stylesheet" id="crayon-font-consolas-css" href="http://www.shamasis.net/wp-content/plugins/crayon-syntax-highlighter/fonts/consolas.css?ver=2.6.10" type="text/css" media="all"> 
  <link rel="stylesheet" id="fa-css" href="http://www.shamasis.net/wp-content/plugins/menu-icons/css/font-awesome.min.css?ver=4.2.0" type="text/css" media="all"> 
  <link rel="stylesheet" id="genericon-css" href="http://www.shamasis.net/wp-content/plugins/menu-icons/css/genericons.min.css?ver=3.2" type="text/css" media="all"> 
  <link rel="stylesheet" id="menu-icons-extra-css" href="http://www.shamasis.net/wp-content/plugins/menu-icons/css/extra.min.css?ver=0.7.0" type="text/css" media="all"> 
  <link rel="stylesheet" id="collapseomatic-css-css" href="http://www.shamasis.net/wp-content/plugins/jquery-collapse-o-matic/light_style.css?ver=1.6" type="text/css" media="all"> 
  <link rel="stylesheet" id="twentyfifteen-fonts-css" href="//fonts.googleapis.com/css?family=Noto+Sans%3A400italic%2C700italic%2C400%2C700%7CNoto+Serif%3A400italic%2C700italic%2C400%2C700%7CInconsolata%3A400%2C700&amp;subset=latin%2Clatin-ext" type="text/css" media="all"> 
  <link rel="stylesheet" id="genericons-css" href="http://www.shamasis.net/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="twentyfifteen-style-css" href="http://www.shamasis.net/wp-content/themes/twentyfifteen/style.css?ver=4.2.13" type="text/css" media="all"> 
  <style id="twentyfifteen-style-inline-css" type="text/css">

			.post-navigation .nav-previous { background-image: url(http://www.shamasis.net/wp-content/uploads/2009/05/notepadmobilebanner.jpg); }
			.post-navigation .nav-previous .post-title, .post-navigation .nav-previous a:hover .post-title, .post-navigation .nav-previous .meta-nav { color: #fff; }
			.post-navigation .nav-previous a:before { background-color: rgba(0, 0, 0, 0.4); }
		
	/* Color Scheme */

	/* Background Color */
	body {
		background-color: #111111;
	}

	/* Sidebar Background Color */
	body:before,
	.site-header {
		background-color: #202020;
	}

	/* Box Background Color */
	.post-navigation,
	.pagination,
	.secondary,
	.site-footer,
	.hentry,
	.page-header,
	.page-content,
	.comments-area {
		background-color: #202020;
	}

	/* Box Background Color */
	button,
	input[type="button"],
	input[type="reset"],
	input[type="submit"],
	.pagination .prev,
	.pagination .next,
	.widget_calendar tbody a,
	.widget_calendar tbody a:hover,
	.widget_calendar tbody a:focus,
	.page-links a,
	.page-links a:hover,
	.page-links a:focus,
	.sticky-post {
		color: #202020;
	}

	/* Main Text Color */
	button,
	input[type="button"],
	input[type="reset"],
	input[type="submit"],
	.pagination .prev,
	.pagination .next,
	.widget_calendar tbody a,
	.page-links a,
	.sticky-post {
		background-color: #bebebe;
	}

	/* Main Text Color */
	body,
	blockquote cite,
	blockquote small,
	a,
	.dropdown-toggle:after,
	.image-navigation a:hover,
	.image-navigation a:focus,
	.comment-navigation a:hover,
	.comment-navigation a:focus,
	.widget-title,
	.entry-footer a:hover,
	.entry-footer a:focus,
	.comment-metadata a:hover,
	.comment-metadata a:focus,
	.pingback .edit-link a:hover,
	.pingback .edit-link a:focus,
	.comment-list .reply a:hover,
	.comment-list .reply a:focus,
	.site-info a:hover,
	.site-info a:focus {
		color: #bebebe;
	}

	/* Main Text Color */
	.entry-content a,
	.entry-summary a,
	.page-content a,
	.comment-content a,
	.pingback .comment-body > a,
	.author-description a,
	.taxonomy-description a,
	.textwidget a,
	.entry-footer a:hover,
	.comment-metadata a:hover,
	.pingback .edit-link a:hover,
	.comment-list .reply a:hover,
	.site-info a:hover {
		border-color: #bebebe;
	}

	/* Secondary Text Color */
	button:hover,
	button:focus,
	input[type="button"]:hover,
	input[type="button"]:focus,
	input[type="reset"]:hover,
	input[type="reset"]:focus,
	input[type="submit"]:hover,
	input[type="submit"]:focus,
	.pagination .prev:hover,
	.pagination .prev:focus,
	.pagination .next:hover,
	.pagination .next:focus,
	.widget_calendar tbody a:hover,
	.widget_calendar tbody a:focus,
	.page-links a:hover,
	.page-links a:focus {
		background-color: #bebebe; /* Fallback for IE7 and IE8 */
		background-color: rgba( 190, 190, 190, 0.7);
	}

	/* Secondary Text Color */
	blockquote,
	a:hover,
	a:focus,
	.main-navigation .menu-item-description,
	.post-navigation .meta-nav,
	.post-navigation a:hover .post-title,
	.post-navigation a:focus .post-title,
	.image-navigation,
	.image-navigation a,
	.comment-navigation,
	.comment-navigation a,
	.widget,
	.author-heading,
	.entry-footer,
	.entry-footer a,
	.taxonomy-description,
	.page-links > .page-links-title,
	.entry-caption,
	.comment-author,
	.comment-metadata,
	.comment-metadata a,
	.pingback .edit-link,
	.pingback .edit-link a,
	.post-password-form label,
	.comment-form label,
	.comment-notes,
	.comment-awaiting-moderation,
	.logged-in-as,
	.form-allowed-tags,
	.no-comments,
	.site-info,
	.site-info a,
	.wp-caption-text,
	.gallery-caption,
	.comment-list .reply a {
		color: #bebebe; /* Fallback for IE7 and IE8 */
		color: rgba( 190, 190, 190, 0.7);
	}

	/* Secondary Text Color */
	blockquote,
	.logged-in-as a:hover,
	.comment-author a:hover {
		border-color: #bebebe; /* Fallback for IE7 and IE8 */
		border-color: rgba( 190, 190, 190, 0.7);
	}

	/* Border Color */
	hr,
	.dropdown-toggle:hover,
	.dropdown-toggle:focus {
		background-color: #bebebe; /* Fallback for IE7 and IE8 */
		background-color: rgba( 190, 190, 190, 0.1);
	}

	/* Border Color */
	pre,
	abbr[title],
	table,
	th,
	td,
	input,
	textarea,
	.main-navigation ul,
	.main-navigation li,
	.post-navigation,
	.post-navigation div + div,
	.pagination,
	.comment-navigation,
	.widget li,
	.widget_categories .children,
	.widget_nav_menu .sub-menu,
	.widget_pages .children,
	.site-header,
	.site-footer,
	.hentry + .hentry,
	.author-info,
	.entry-content .page-links a,
	.page-links > span,
	.page-header,
	.comments-area,
	.comment-list + .comment-respond,
	.comment-list article,
	.comment-list .pingback,
	.comment-list .trackback,
	.comment-list .reply a,
	.no-comments {
		border-color: #bebebe; /* Fallback for IE7 and IE8 */
		border-color: rgba( 190, 190, 190, 0.1);
	}

	/* Border Focus Color */
	a:focus,
	button:focus,
	input:focus {
		outline-color: #bebebe; /* Fallback for IE7 and IE8 */
		outline-color: rgba( 190, 190, 190, 0.3);
	}

	input:focus,
	textarea:focus {
		border-color: #bebebe; /* Fallback for IE7 and IE8 */
		border-color: rgba( 190, 190, 190, 0.3);
	}

	/* Sidebar Link Color */
	.secondary-toggle:before {
		color: #bebebe;
	}

	.site-title a,
	.site-description {
		color: #bebebe;
	}

	/* Sidebar Text Color */
	.site-title a:hover,
	.site-title a:focus {
		color: rgba( 190, 190, 190, 0.7);
	}

	/* Sidebar Border Color */
	.secondary-toggle {
		border-color: #bebebe; /* Fallback for IE7 and IE8 */
		border-color: rgba( 190, 190, 190, 0.1);
	}

	/* Sidebar Border Focus Color */
	.secondary-toggle:hover,
	.secondary-toggle:focus {
		border-color: #bebebe; /* Fallback for IE7 and IE8 */
		border-color: rgba( 190, 190, 190, 0.3);
	}

	.site-title a {
		outline-color: #bebebe; /* Fallback for IE7 and IE8 */
		outline-color: rgba( 190, 190, 190, 0.3);
	}

	/* Meta Background Color */
	.entry-footer {
		background-color: #1b1b1b;
	}

	@media screen and (min-width: 38.75em) {
		/* Main Text Color */
		.page-header {
			border-color: #bebebe;
		}
	}

	@media screen and (min-width: 59.6875em) {
		/* Make sure its transparent on desktop */
		.site-header,
		.secondary {
			background-color: transparent;
		}

		/* Sidebar Background Color */
		.widget button,
		.widget input[type="button"],
		.widget input[type="reset"],
		.widget input[type="submit"],
		.widget_calendar tbody a,
		.widget_calendar tbody a:hover,
		.widget_calendar tbody a:focus {
			color: #202020;
		}

		/* Sidebar Link Color */
		.secondary a,
		.dropdown-toggle:after,
		.widget-title,
		.widget blockquote cite,
		.widget blockquote small {
			color: #bebebe;
		}

		.widget button,
		.widget input[type="button"],
		.widget input[type="reset"],
		.widget input[type="submit"],
		.widget_calendar tbody a {
			background-color: #bebebe;
		}

		.textwidget a {
			border-color: #bebebe;
		}

		/* Sidebar Text Color */
		.secondary a:hover,
		.secondary a:focus,
		.main-navigation .menu-item-description,
		.widget,
		.widget blockquote,
		.widget .wp-caption-text,
		.widget .gallery-caption {
			color: rgba( 190, 190, 190, 0.7);
		}

		.widget button:hover,
		.widget button:focus,
		.widget input[type="button"]:hover,
		.widget input[type="button"]:focus,
		.widget input[type="reset"]:hover,
		.widget input[type="reset"]:focus,
		.widget input[type="submit"]:hover,
		.widget input[type="submit"]:focus,
		.widget_calendar tbody a:hover,
		.widget_calendar tbody a:focus {
			background-color: rgba( 190, 190, 190, 0.7);
		}

		.widget blockquote {
			border-color: rgba( 190, 190, 190, 0.7);
		}

		/* Sidebar Border Color */
		.main-navigation ul,
		.main-navigation li,
		.widget input,
		.widget textarea,
		.widget table,
		.widget th,
		.widget td,
		.widget pre,
		.widget li,
		.widget_categories .children,
		.widget_nav_menu .sub-menu,
		.widget_pages .children,
		.widget abbr[title] {
			border-color: rgba( 190, 190, 190, 0.1);
		}

		.dropdown-toggle:hover,
		.dropdown-toggle:focus,
		.widget hr {
			background-color: rgba( 190, 190, 190, 0.1);
		}

		.widget input:focus,
		.widget textarea:focus {
			border-color: rgba( 190, 190, 190, 0.3);
		}

		.sidebar a:focus,
		.dropdown-toggle:focus {
			outline-color: rgba( 190, 190, 190, 0.3);
		}
	}

		/* Custom Sidebar Text Color */
		.site-title a,
		.site-description,
		.secondary-toggle:before {
			color: #ffffff;
		}

		.site-title a:hover,
		.site-title a:focus {
			color: #ffffff; /* Fallback for IE7 and IE8 */
			color: rgba( 255, 255, 255, 0.7);
		}

		.secondary-toggle {
			border-color: #ffffff; /* Fallback for IE7 and IE8 */
			border-color: rgba( 255, 255, 255, 0.1);
		}

		.secondary-toggle:hover,
		.secondary-toggle:focus {
			border-color: #ffffff; /* Fallback for IE7 and IE8 */
			border-color: rgba( 255, 255, 255, 0.3);
		}

		.site-title a {
			outline-color: #ffffff; /* Fallback for IE7 and IE8 */
			outline-color: rgba( 255, 255, 255, 0.3);
		}

		@media screen and (min-width: 59.6875em) {
			.secondary a,
			.dropdown-toggle:after,
			.widget-title,
			.widget blockquote cite,
			.widget blockquote small {
				color: #ffffff;
			}

			.widget button,
			.widget input[type="button"],
			.widget input[type="reset"],
			.widget input[type="submit"],
			.widget_calendar tbody a {
				background-color: #ffffff;
			}

			.textwidget a {
				border-color: #ffffff;
			}

			.secondary a:hover,
			.secondary a:focus,
			.main-navigation .menu-item-description,
			.widget,
			.widget blockquote,
			.widget .wp-caption-text,
			.widget .gallery-caption {
				color: rgba( 255, 255, 255, 0.7);
			}

			.widget button:hover,
			.widget button:focus,
			.widget input[type="button"]:hover,
			.widget input[type="button"]:focus,
			.widget input[type="reset"]:hover,
			.widget input[type="reset"]:focus,
			.widget input[type="submit"]:hover,
			.widget input[type="submit"]:focus,
			.widget_calendar tbody a:hover,
			.widget_calendar tbody a:focus {
				background-color: rgba( 255, 255, 255, 0.7);
			}

			.widget blockquote {
				border-color: rgba( 255, 255, 255, 0.7);
			}

			.main-navigation ul,
			.main-navigation li,
			.secondary-toggle,
			.widget input,
			.widget textarea,
			.widget table,
			.widget th,
			.widget td,
			.widget pre,
			.widget li,
			.widget_categories .children,
			.widget_nav_menu .sub-menu,
			.widget_pages .children,
			.widget abbr[title] {
				border-color: rgba( 255, 255, 255, 0.1);
			}

			.dropdown-toggle:hover,
			.dropdown-toggle:focus,
			.widget hr {
				background-color: rgba( 255, 255, 255, 0.1);
			}

			.widget input:focus,
			.widget textarea:focus {
				border-color: rgba( 255, 255, 255, 0.3);
			}

			.sidebar a:focus,
			.dropdown-toggle:focus {
				outline-color: rgba( 255, 255, 255, 0.3);
			}
		}
	
</style> 
  <!--[if lt IE 9]>
<link rel='stylesheet' id='twentyfifteen-ie-css'  href='http://www.shamasis.net/wp-content/themes/twentyfifteen/css/ie.css?ver=20141010' type='text/css' media='all' />
<![endif]--> 
  <!--[if lt IE 8]>
<link rel='stylesheet' id='twentyfifteen-ie7-css'  href='http://www.shamasis.net/wp-content/themes/twentyfifteen/css/ie7.css?ver=20141010' type='text/css' media='all' />
<![endif]--> 
  <link rel="stylesheet" id="jetpack_css-css" href="http://www.shamasis.net/wp-content/plugins/jetpack/css/jetpack.css?ver=3.4.3" type="text/css" media="all"> 
  <script type="text/javascript" src="http://www.shamasis.net/wp-includes/js/jquery/jquery.js?ver=1.11.2"></script> 
  <script type="text/javascript" src="http://www.shamasis.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1"></script> 
  <script type="text/javascript" src="http://www.shamasis.net/wp-content/plugins/jetpack/modules/related-posts/related-posts.js?ver=20141201"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.6.10","is_admin":"0","ajaxurl":"http:\/\/www.shamasis.net\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.shamasis.net/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.6.10"></script> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.shamasis.net/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.shamasis.net/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Notepad Mobile 1.6 Released" href="http://www.shamasis.net/2009/08/notepad-mobile-1-6-released/"> 
  <link rel="next" title="Humence Sans Foetus" href="http://www.shamasis.net/2009/09/humence-sans-foetus/"> 
  <meta name="generator" content="WordPress 4.2.13"> 
  <link rel="shortlink" href="http://wp.me/psCGK-fK"> 
  <style type="text/css">
						ol.footnotes li {list-style-type:decimal;}
						ol.footnotes{font-size:0.8em; color:#666666;}		</style> 
  <style type="text/css">img#wpstats{display:none}</style> 
  <style type="text/css" id="twentyfifteen-header-css">
			.site-header {
			background: url(http://www.shamasis.net/wp-content/uploads/2016/03/cropped-IMG_4805.jpg) no-repeat 50% 50%;
			-webkit-background-size: cover;
			-moz-background-size:    cover;
			-o-background-size:      cover;
			background-size:         cover;
		}

		@media screen and (min-width: 59.6875em) {
			body:before {
				background: url(http://www.shamasis.net/wp-content/uploads/2016/03/cropped-IMG_4805.jpg) no-repeat 100% 50%;
				-webkit-background-size: cover;
				-moz-background-size:    cover;
				-o-background-size:      cover;
				background-size:         cover;
				border-right: 0;
			}

			.site-header {
				background: transparent;
			}
		}
		</style> 
  <!-- Google Tag Manager for WordPress by DuracellTomi --> 
  <script type="text/javascript">
	dataLayer.push([]);
</script> 
  <style id="custom-css-css">div#disqus_thread{padding:3.3333% 7.6923%;background-color:#fff;margin:3% 0;box-shadow:0 0 1px rgba(0,0,0,0.15)}.widget{margin-bottom:15%}.social-navigation,.main-navigation{margin-bottom:10%}.site-header{margin-bottom:5%}.social-navigation a[href$="stackoverflow.com"]:before{font-family:FontAwesome;content:"\f16c"}@media screen and (min-width: 38.75em){div#disqus_thread{padding:3.3333% 7.6923%;margin:3.3333% 7.6923%}.widget,.social-navigation,.main-navigation{margin-bottom:11.1111%}}@media screen and (min-width: 59.6875em){div.sidebar{text-shadow:0 0 1px rgba(0,0,0,1)}div#disqus_thread{padding:3.3333% 8.3333%;margin:3.3333% 8.3333%}.widget,.social-navigation,.main-navigation{margin-bottom:9.0909%}}</style> 
 </head> 
 <body class="single single-post postid-976 single-format-standard"> 
  <div id="page" class="hfeed site"> 
   <a class="skip-link screen-reader-text" href="#content">Skip to content</a> 
   <div id="sidebar" class="sidebar"> 
    <header id="masthead" class="site-header" role="banner"> 
     <div class="site-branding"> 
      <p class="site-title"><a href="http://www.shamasis.net/" rel="home">Shamasis Bhattacharya</a></p> 
      <p class="site-description">Technical architect, solution strategist and a developer</p> 
      <button class="secondary-toggle">Menu and widgets</button> 
     </div>
     <!-- .site-branding --> 
    </header>
    <!-- .site-header --> 
    <div id="secondary" class="secondary"> 
     <nav id="site-navigation" class="main-navigation" role="navigation"> 
      <div class="menu-single-navigation-container">
       <ul id="menu-single-navigation" class="nav-menu">
        <li id="menu-item-1859" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-1859"><a href="http://www.shamasis.net/technical-publications/">Technical Publications
          <div class="menu-item-description">
           News, analysis, and research on various domains of Information Technology
          </div></a></li> 
        <li id="menu-item-1868" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1868"><a href="http://www.shamasis.net/project-updates/">Project Updates
          <div class="menu-item-description">
           Release notes, change logs and dev news on projects maintained by me
          </div></a></li> 
        <li id="menu-item-1863" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-1863"><a href="http://www.shamasis.net/literary-publications/">Literary Publications
          <div class="menu-item-description">
           Short stories, poetics, dramatics, articles and other literary works
          </div></a> 
         <ul class="sub-menu"> 
          <li id="menu-item-1865" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1865"><a href="http://www.shamasis.net/articles/">Articles</a></li> 
          <li id="menu-item-1866" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1866"><a href="http://www.shamasis.net/poetry/">Poetry</a></li> 
          <li id="menu-item-1870" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1870"><a href="http://www.shamasis.net/lyres/">Lyres</a></li> 
          <li id="menu-item-1867" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1867"><a href="http://www.shamasis.net/short-stories/">Short Stories</a></li> 
         </ul> </li> 
        <li id="menu-item-1860" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-1860"><a href="http://www.shamasis.net/journal/">Journal
          <div class="menu-item-description">
           My trek on the way to the beginning of a new life
          </div></a> 
         <ul class="sub-menu"> 
          <li id="menu-item-1869" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1869"><a href="http://www.shamasis.net/philosophies/">Philosophies</a></li> 
          <li id="menu-item-1871" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1871"><a href="http://www.shamasis.net/reviews/">Reviews</a></li> 
          <li id="menu-item-1864" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1864"><a href="http://www.shamasis.net/ramblings/">Ramblings</a></li> 
         </ul> </li> 
       </ul>
      </div> 
     </nav>
     <!-- .main-navigation --> 
     <nav id="social-navigation" class="social-navigation" role="navigation"> 
      <div class="menu-social-links-container">
       <ul id="menu-social-links" class="menu">
        <li id="menu-item-1852" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1852"><a href="http://www.linkedin.com/in/shamasis"><span class="screen-reader-text">LinkedIn Profile</span></a></li> 
        <li id="menu-item-1851" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1851"><a href="https://github.com/shamasis"><span class="screen-reader-text">Github</span></a></li> 
        <li id="menu-item-1853" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1853"><a href="http://twitter.com/shamasis"><span class="screen-reader-text">@shamasis on Twitter</span></a></li> 
        <li id="menu-item-1854" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1854"><a href="https://www.facebook.com/shamasis"><span class="screen-reader-text">Facebook</span></a></li> 
        <li id="menu-item-1858" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1858"><a href="https://www.flickr.com/photos/shamasis"><span class="screen-reader-text">Flickr</span></a></li> 
        <li id="menu-item-1855" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1855"><a href="http://stackoverflow.com/users/206687/shamasis-bhattacharya"><span class="screen-reader-text">Stack Overflow</span></a></li> 
        <li id="menu-item-1857" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1857"><a href="https://angel.co/shamasis"><span class="screen-reader-text">Angel.co</span></a></li> 
        <li id="menu-item-1856" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1856"><a href="http://about.me/shamasis"><span class="screen-reader-text">About.me</span></a></li> 
        <li id="menu-item-1913" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1913"><a href="https://flipboard.com/@shamasis"><span class="screen-reader-text">Flipboard Magazines</span></a></li> 
        <li id="menu-item-1914" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1914"><a href="https://www.goodreads.com/author/show/6057418.Shamasis_Bhattacharya"><span class="screen-reader-text">Goodreads Author Profile</span></a></li> 
       </ul>
      </div> 
     </nav>
     <!-- .social-navigation --> 
     <div id="widget-area" class="widget-area" role="complementary"> 
      <aside id="search-2" class="widget widget_search">
       <form role="search" method="get" class="search-form" action="http://www.shamasis.net/"> 
        <label> <span class="screen-reader-text">Search for:</span> <input type="search" class="search-field" placeholder="Search " value="" name="s" title="Search for:"> </label> 
        <input type="submit" class="search-submit screen-reader-text" value="Search"> 
       </form>
      </aside>
      <aside id="nav_menu-2" class="widget widget_nav_menu">
       <div class="menu-top-navigation-container">
        <ul id="menu-top-navigation" class="menu">
         <li id="menu-item-1876" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1876"><a href="http://www.shamasis.net/publications/">Publications</a></li> 
         <li id="menu-item-1874" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1874"><a href="/type/quote/">Quotes</a></li> 
         <li id="menu-item-1872" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1872"><a href="/tag/javascript">javascript</a></li> 
         <li id="menu-item-1873" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1873"><a href="/tag/fusioncharts">fusioncharts</a></li> 
         <li id="menu-item-1848" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1848"><a href="https://gist.github.com/shamasis">Gists</a></li> 
         <li id="menu-item-1877" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-1877"><a href="http://www.shamasis.net/projects/">Projects</a> 
          <ul class="sub-menu"> 
           <li id="menu-item-1846" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1846"><a href="https://github.com/fusioncharts/redraphael">RedRaphael  SVG Graphics Library</a></li> 
           <li id="menu-item-1847" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1847"><a href="https://github.com/fusioncharts/jslink">jsLink  Preprocessor &amp; Linker</a></li> 
           <li id="menu-item-1878" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1878"><a href="http://www.shamasis.net/projects/jquery-touch-drag/">Touch Drag jQuery Plugin</a></li> 
           <li id="menu-item-1883" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1883"><a href="http://www.shamasis.net/projects/notepad-mobile/">Notepad Mobile</a></li> 
           <li id="menu-item-1880" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1880"><a href="http://www.shamasis.net/projects/ga/">Google Analytics jQuery Plugin</a></li> 
           <li id="menu-item-1882" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1882"><a href="http://www.shamasis.net/projects/batch-image-processor/">Batch Image Processor</a></li> 
           <li id="menu-item-1879" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1879"><a href="http://www.shamasis.net/projects/mouse-switcher/">Mouse Switcher</a></li> 
           <li id="menu-item-1881" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1881"><a href="http://www.shamasis.net/projects/print-service-manager/">Print Service Manager</a></li> 
           <li id="menu-item-1884" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1884"><a href="http://www.shamasis.net/projects/smiley-extender/">Yahoo Smiley Extender</a></li> 
           <li id="menu-item-1885" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1885"><a href="http://www.shamasis.net/projects/liquid-drag/">Liquid Drag</a></li> 
          </ul> </li> 
        </ul>
       </div>
      </aside>
      <aside id="blog_subscription-3" class="widget jetpack_subscription_widget">
       <h2 class="widget-title">Subscribe to Blog via Email</h2> 
       <form action="#" method="post" accept-charset="utf-8" id="subscribe-blog-blog_subscription-3"> 
        <div id="subscribe-text">
         <p>Enter your email address to subscribe to this blog and receive notifications of new posts by email.</p> 
        </div> 
        <p id="subscribe-email"> <label id="jetpack-subscribe-label" for="subscribe-field"> Email Address </label> <input type="email" name="email" value="" id="subscribe-field" placeholder="Email Address"> </p> 
        <p id="subscribe-submit"> <input type="hidden" name="action" value="subscribe"> <input type="hidden" name="source" value="http://www.shamasis.net/2009/09/fast-algorithm-to-find-unique-items-in-javascript-array/"> <input type="hidden" name="sub-type" value="widget"> <input type="hidden" name="redirect_fragment" value="blog_subscription-3"> <input type="submit" value="Subscribe" name="jetpack_subscriptions_widget"> </p> 
       </form> 
       <script>
				( function( d ) {
					if ( ( 'placeholder' in d.createElement( 'input' ) ) ) {
						var label = d.getElementById( 'jetpack-subscribe-label' );
	 					label.style.clip 	 = 'rect(1px, 1px, 1px, 1px)';
	 					label.style.position = 'absolute';
	 					label.style.height   = '1px';
	 					label.style.width    = '1px';
	 					label.style.overflow = 'hidden';
					}
				} ) ( document );
			</script> 
      </aside>
      <aside id="text-2" class="widget widget_text"> 
       <div class="textwidget">
        <a href="/archive"><small>blog archive</small></a>
       </div> 
      </aside> 
     </div>
     <!-- .widget-area --> 
    </div>
    <!-- .secondary --> 
   </div>
   <!-- .sidebar --> 
   <div id="content" class="site-content"> 
    <div id="primary" class="content-area"> 
     <main id="main" class="site-main" role="main"> 
      <article id="post-976" class="post-976 post type-post status-publish format-standard has-post-thumbnail hentry category-technical-publications tag-algorithm tag-featured tag-javascript"> 
       <div class="post-thumbnail"> 
        <img width="825" height="384" src="http://www.shamasis.net/wp-content/uploads/2009/09/array-roadrunner-sepia-825x384.jpg" class="attachment-post-thumbnail wp-post-image" alt="array-roadrunner-sepia"> 
       </div>
       <!-- .post-thumbnail --> 
       <header class="entry-header"> 
        <h1 class="entry-title">Fast Algorithm To Find Unique Items in JavaScript Array</h1> 
       </header>
       <!-- .entry-header --> 
       <div class="entry-content"> 
        <p>When I had the requirement to remove duplicate items from a very large array, I found out that the classic method to be not optimized as it took a pretty long time than desired. So, I devised this new algorithm that can sort a large array in a fraction of the original time.</p> 
        <p><span id="more-976"></span></p> 
        <h2>The fastest method to find unique items in array</h2> 
        <p>This method is kind of cheeky in its implementation. It uses the JavaScripts object to add every item in the array as key. As we all know, objects accepts only unique keys and sure we did capitalize on that.</p> 
        <!-- Crayon Syntax Highlighter v2.6.10 --> 
        <div id="crayon-58ce2c13884aa601972648" class="crayon-syntax crayon-theme-tomorrow crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;"> 
         <div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
          <span class="crayon-title"></span> 
          <div class="crayon-tools" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
           <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
            <div class="crayon-button-icon"></div>
           </div>
           <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
            <div class="crayon-button-icon"></div>
           </div>
           <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
            <div class="crayon-button-icon"></div>
           </div>
           <div class="crayon-button crayon-expand-button" title="Expand Code">
            <div class="crayon-button-icon"></div>
           </div>
           <div class="crayon-button crayon-copy-button" title="Copy">
            <div class="crayon-button-icon"></div>
           </div>
           <span class="crayon-language">JavaScript</span>
          </div>
         </div> 
         <div class="crayon-info" style="min-height: 21px !important; line-height: 21px !important;"></div> 
         <div class="crayon-plain-wrap">
          <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 15px !important; line-height: 20px !important;">

Array.prototype.unique = function() {
    var o = {}, i, l = this.length, r = [];
    for(i=0; i&lt;l;i+=1) o[this[i]] = this[i];
    for(i in o) r.push(o[i]);
    return r;
};</textarea>
         </div> 
         <div class="crayon-main" style=" max-height: 500px;"> 
          <table class="crayon-table"> 
           <tbody>
            <tr class="crayon-row"> 
             <td class="crayon-nums " data-settings="hide"> 
              <div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;">
               <div class="crayon-num" data-line="crayon-58ce2c13884aa601972648-1">
                1
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884aa601972648-2">
                2
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884aa601972648-3">
                3
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884aa601972648-4">
                4
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884aa601972648-5">
                5
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884aa601972648-6">
                6
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884aa601972648-7">
                7
               </div>
              </div> </td> 
             <td class="crayon-code">
              <div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
               <div class="crayon-line" id="crayon-58ce2c13884aa601972648-1">
                &nbsp;
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884aa601972648-2">
                <span class="crayon-t">Array</span>
                <span class="crayon-sy">.</span>
                <span class="crayon-v">prototype</span>
                <span class="crayon-sy">.</span>
                <span class="crayon-v">unique</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">=</span>
                <span class="crayon-h"> </span>
                <span class="crayon-t">function</span>
                <span class="crayon-sy">(</span>
                <span class="crayon-sy">)</span>
                <span class="crayon-h"> </span>
                <span class="crayon-sy">{</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884aa601972648-3">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-t">var</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">o</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">=</span>
                <span class="crayon-h"> </span>
                <span class="crayon-sy">{</span>
                <span class="crayon-sy">}</span>
                <span class="crayon-sy">,</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">i</span>
                <span class="crayon-sy">,</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">l</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">=</span>
                <span class="crayon-h"> </span>
                <span class="crayon-r">this</span>
                <span class="crayon-sy">.</span>
                <span class="crayon-v">length</span>
                <span class="crayon-sy">,</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">r</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">=</span>
                <span class="crayon-h"> </span>
                <span class="crayon-sy">[</span>
                <span class="crayon-sy">]</span>
                <span class="crayon-sy">;</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884aa601972648-4">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-st">for</span>
                <span class="crayon-sy">(</span>
                <span class="crayon-v">i</span>
                <span class="crayon-o">=</span>
                <span class="crayon-cn">0</span>
                <span class="crayon-sy">;</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">i</span>
                <span class="crayon-o">&lt;</span>
                <span class="crayon-v">l</span>
                <span class="crayon-sy">;</span>
                <span class="crayon-v">i</span>
                <span class="crayon-o">+=</span>
                <span class="crayon-cn">1</span>
                <span class="crayon-sy">)</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">o</span>
                <span class="crayon-sy">[</span>
                <span class="crayon-r">this</span>
                <span class="crayon-sy">[</span>
                <span class="crayon-v">i</span>
                <span class="crayon-sy">]</span>
                <span class="crayon-sy">]</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">=</span>
                <span class="crayon-h"> </span>
                <span class="crayon-r">this</span>
                <span class="crayon-sy">[</span>
                <span class="crayon-v">i</span>
                <span class="crayon-sy">]</span>
                <span class="crayon-sy">;</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884aa601972648-5">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-st">for</span>
                <span class="crayon-sy">(</span>
                <span class="crayon-i">i</span>
                <span class="crayon-h"> </span>
                <span class="crayon-st">in</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">o</span>
                <span class="crayon-sy">)</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">r</span>
                <span class="crayon-sy">.</span>
                <span class="crayon-e">push</span>
                <span class="crayon-sy">(</span>
                <span class="crayon-v">o</span>
                <span class="crayon-sy">[</span>
                <span class="crayon-v">i</span>
                <span class="crayon-sy">]</span>
                <span class="crayon-sy">)</span>
                <span class="crayon-sy">;</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884aa601972648-6">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-st">return</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">r</span>
                <span class="crayon-sy">;</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884aa601972648-7">
                <span class="crayon-sy">}</span>
                <span class="crayon-sy">;</span>
               </div>
              </div></td> 
            </tr> 
           </tbody>
          </table> 
         </div> 
        </div> 
        <!-- [Format Time: 0.0122 seconds] --> 
        <h3>Some Thoughts On This Algorithm</h3> 
        <p>This is somewhat classified as <strong>Hash Sieving</strong> method and can also be related to a somewhat modified Hash Sorting Algorithm where every item in the array is a hash value and a hash function inserts item into a bucket, replacing existing values in case of hash collision. As such, this can be applied to any programming language for faster sieving of very large arrays.</p> 
        <p>This algorithm has a linear <a href="http://en.wikipedia.org/wiki/Analysis_of_algorithms" target="_blank">time complexity</a> of O(2n) in worst case scenario. This is way better than what we will observe for the classic method as described below.</p> 
        <h2>About the classic method</h2> 
        <p>The classic (and most popular) method of finding unique items in an array runs two loops in a nested order to compare each element with rest of the elements. Consequently, the time complexity of the classic method to find the unique items in an array is around <a href="http://en.wikipedia.org/wiki/Quadratic_function" target="_blank">quadratic</a> <a href="http://en.wikipedia.org/wiki/Big_O_notation" target="_blank">O(n²)</a>.</p> 
        <p>This is not a good thing when you have to find unique items within array of 10,000 items.</p> 
        <!-- Crayon Syntax Highlighter v2.6.10 --> 
        <div id="crayon-58ce2c13884cd609931853" class="crayon-syntax crayon-theme-tomorrow crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;"> 
         <div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
          <span class="crayon-title"></span> 
          <div class="crayon-tools" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
           <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
            <div class="crayon-button-icon"></div>
           </div>
           <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
            <div class="crayon-button-icon"></div>
           </div>
           <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
            <div class="crayon-button-icon"></div>
           </div>
           <div class="crayon-button crayon-expand-button" title="Expand Code">
            <div class="crayon-button-icon"></div>
           </div>
           <div class="crayon-button crayon-copy-button" title="Copy">
            <div class="crayon-button-icon"></div>
           </div>
           <span class="crayon-language">JavaScript</span>
          </div>
         </div> 
         <div class="crayon-info" style="min-height: 21px !important; line-height: 21px !important;"></div> 
         <div class="crayon-plain-wrap">
          <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 15px !important; line-height: 20px !important;">

Array.prototype.unique = function() {
    var a = [], l = this.length;
    for(var i=0; i&lt;l; i++) {
      for(var j=i+1; j&lt;l; j++)
            if (this[i] === this[j]) j = ++i;
      a.push(this[i]);
    }
    return a;
};</textarea>
         </div> 
         <div class="crayon-main" style=" max-height: 500px;"> 
          <table class="crayon-table"> 
           <tbody>
            <tr class="crayon-row"> 
             <td class="crayon-nums " data-settings="hide"> 
              <div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;">
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-1">
                1
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-2">
                2
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-3">
                3
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-4">
                4
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-5">
                5
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-6">
                6
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-7">
                7
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-8">
                8
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-9">
                9
               </div>
               <div class="crayon-num" data-line="crayon-58ce2c13884cd609931853-10">
                10
               </div>
              </div> </td> 
             <td class="crayon-code">
              <div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-1">
                &nbsp;
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-2">
                <span class="crayon-t">Array</span>
                <span class="crayon-sy">.</span>
                <span class="crayon-v">prototype</span>
                <span class="crayon-sy">.</span>
                <span class="crayon-v">unique</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">=</span>
                <span class="crayon-h"> </span>
                <span class="crayon-t">function</span>
                <span class="crayon-sy">(</span>
                <span class="crayon-sy">)</span>
                <span class="crayon-h"> </span>
                <span class="crayon-sy">{</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-3">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-t">var</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">a</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">=</span>
                <span class="crayon-h"> </span>
                <span class="crayon-sy">[</span>
                <span class="crayon-sy">]</span>
                <span class="crayon-sy">,</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">l</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">=</span>
                <span class="crayon-h"> </span>
                <span class="crayon-r">this</span>
                <span class="crayon-sy">.</span>
                <span class="crayon-v">length</span>
                <span class="crayon-sy">;</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-4">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-st">for</span>
                <span class="crayon-sy">(</span>
                <span class="crayon-t">var</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">i</span>
                <span class="crayon-o">=</span>
                <span class="crayon-cn">0</span>
                <span class="crayon-sy">;</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">i</span>
                <span class="crayon-o">&lt;</span>
                <span class="crayon-v">l</span>
                <span class="crayon-sy">;</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">i</span>
                <span class="crayon-o">++</span>
                <span class="crayon-sy">)</span>
                <span class="crayon-h"> </span>
                <span class="crayon-sy">{</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-5">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-st">for</span>
                <span class="crayon-sy">(</span>
                <span class="crayon-t">var</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">j</span>
                <span class="crayon-o">=</span>
                <span class="crayon-v">i</span>
                <span class="crayon-o">+</span>
                <span class="crayon-cn">1</span>
                <span class="crayon-sy">;</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">j</span>
                <span class="crayon-o">&lt;</span>
                <span class="crayon-v">l</span>
                <span class="crayon-sy">;</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">j</span>
                <span class="crayon-o">++</span>
                <span class="crayon-sy">)</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-6">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-st">if</span>
                <span class="crayon-h"> </span>
                <span class="crayon-sy">(</span>
                <span class="crayon-r">this</span>
                <span class="crayon-sy">[</span>
                <span class="crayon-v">i</span>
                <span class="crayon-sy">]</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">===</span>
                <span class="crayon-h"> </span>
                <span class="crayon-r">this</span>
                <span class="crayon-sy">[</span>
                <span class="crayon-v">j</span>
                <span class="crayon-sy">]</span>
                <span class="crayon-sy">)</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">j</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">=</span>
                <span class="crayon-h"> </span>
                <span class="crayon-o">++</span>
                <span class="crayon-v">i</span>
                <span class="crayon-sy">;</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-7">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-v">a</span>
                <span class="crayon-sy">.</span>
                <span class="crayon-e">push</span>
                <span class="crayon-sy">(</span>
                <span class="crayon-r">this</span>
                <span class="crayon-sy">[</span>
                <span class="crayon-v">i</span>
                <span class="crayon-sy">]</span>
                <span class="crayon-sy">)</span>
                <span class="crayon-sy">;</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-8">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-sy">}</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-9">
                <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                <span class="crayon-st">return</span>
                <span class="crayon-h"> </span>
                <span class="crayon-v">a</span>
                <span class="crayon-sy">;</span>
               </div>
               <div class="crayon-line" id="crayon-58ce2c13884cd609931853-10">
                <span class="crayon-sy">}</span>
                <span class="crayon-sy">;</span>
               </div>
              </div></td> 
            </tr> 
           </tbody>
          </table> 
         </div> 
        </div> 
        <!-- [Format Time: 0.0136 seconds] --> 
        <h2>Comparing the above two algorithms</h2> 
        <p><strong>Test Data: </strong>An array of elements having N random integers.</p> 
        <table style="width: 521px;" border="0" cellspacing="0" cellpadding="0"> 
         <tbody> 
          <tr> 
           <td width="103"><strong>Sample (N)</strong></td> 
           <td width="109"><strong>Average Case</strong></td> 
           <td width="105"></td> 
           <td width="107"><strong>Best Case</strong></td> 
           <td width="95"></td> 
          </tr> 
          <tr> 
           <td width="103"></td> 
           <td width="109">Classic</td> 
           <td width="105">New</td> 
           <td width="107">Classic</td> 
           <td width="95">New</td> 
          </tr> 
          <tr> 
           <td width="103">50</td> 
           <td width="109">0.43</td> 
           <td width="105">0.25</td> 
           <td width="107">0.01</td> 
           <td width="95">0.02</td> 
          </tr> 
          <tr> 
           <td width="103">100</td> 
           <td width="109">0.60</td> 
           <td width="105">0.30</td> 
           <td width="107">0.09</td> 
           <td width="95">0.16</td> 
          </tr> 
          <tr> 
           <td width="103">500</td> 
           <td width="109">9.57</td> 
           <td width="105">0.87</td> 
           <td width="107">0.1</td> 
           <td width="95">0.2</td> 
          </tr> 
          <tr> 
           <td width="103">1000</td> 
           <td width="109">24.44</td> 
           <td width="105">1.51</td> 
           <td width="107">0.21</td> 
           <td width="95">0.31</td> 
          </tr> 
          <tr> 
           <td width="103">5000</td> 
           <td width="109">584.28</td> 
           <td width="105">7.74</td> 
           <td width="107">0.4</td> 
           <td width="95">1.0</td> 
          </tr> 
          <tr> 
           <td width="103">10000</td> 
           <td width="109">2360.90</td> 
           <td width="105">15.03</td> 
           <td width="107">0.7</td> 
           <td width="95">1.8</td> 
          </tr> 
         </tbody> 
        </table> 
        <h2>Conclusion</h2> 
        <p>This method of finding unique items within an array seems to be particularly useful for large arrays that are tending towards the real-life situations. When there are more items in an array that are similar, there is not much of a difference in performance and in fact, the classic algorithm scores better by a small margin. However, as the array gets more random, the runtime of the classic algorithm increases manifold.</p> 
        <div id="jp-relatedposts" class="jp-relatedposts"> 
         <h3 class="jp-relatedposts-headline"><em>Related</em></h3> 
        </div> 
       </div>
       <!-- .entry-content --> 
       <footer class="entry-footer"> 
        <span class="posted-on"><span class="screen-reader-text">Posted on </span><a href="http://www.shamasis.net/2009/09/fast-algorithm-to-find-unique-items-in-javascript-array/" rel="bookmark"><time class="entry-date published updated" datetime="2009-09-06T04:47:23+00:00">September 6, 2009</time></a></span>
        <span class="byline"><span class="author vcard"><span class="screen-reader-text">Author </span><a class="url fn n" href="http://www.shamasis.net/author/shamasis/">shamasis</a></span></span>
        <span class="cat-links"><span class="screen-reader-text">Categories </span><a href="http://www.shamasis.net/technical-publications/" rel="category tag">Technical Publications</a></span>
        <span class="tags-links"><span class="screen-reader-text">Tags </span><a href="http://www.shamasis.net/algorithm/" rel="tag">algorithm</a>, <a href="http://www.shamasis.net/featured/" rel="tag">featured</a>, <a href="http://www.shamasis.net/javascript/" rel="tag">javascript</a></span> 
       </footer>
       <!-- .entry-footer --> 
      </article>
      <!-- #post-## --> 
      <div id="disqus_thread"> 
       <div id="dsq-content"> 
        <ul id="dsq-comments"> 
         <li class="comment even thread-even depth-1" id="dsq-comment-543"> 
          <div id="dsq-comment-header-543" class="dsq-comment-header"> 
           <cite id="dsq-cite-543"> <span id="dsq-author-user-543">Andy L</span> </cite> 
          </div> 
          <div id="dsq-comment-body-543" class="dsq-comment-body"> 
           <div id="dsq-comment-message-543" class="dsq-comment-message">
            <p>You work wonders at times. This is such a simple trick and yet so effective. Perhaps no one thinks about performance and perfection of algorithms as much as you do!<br> By the way, in line 3 of your Hash Seiving algorithm, why did you <em>do </em><em>o</em><em>[</em><em>this</em><em>[</em><em>i</em><em>]</em><em>]</em><em> = </em><em>this</em><em>[</em><em>i</em><em>]</em><em>;</em>?</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment byuser comment-author-shamasis bypostauthor odd alt depth-2" id="dsq-comment-544"> 
            <div id="dsq-comment-header-544" class="dsq-comment-header"> 
             <cite id="dsq-cite-544"> http://www.shamasis.in/ <span id="dsq-author-user-544">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-544" class="dsq-comment-body"> 
             <div id="dsq-comment-message-544" class="dsq-comment-message">
              <p>Do not flatter me that much! ?</p> 
              <p> <code>o[this[i]] = this[i];</code> preserves the data-type of the items within the JavScript array. This is because JavaScript object keys are always string and we would not want to needlessly convert a numeric array to string array! By the way, if you are not bothered about the data-type of the unique array, then you can use a modified version of the algorithm that always returns string data-type and is faster due to lesser overhead.</p> 
              <p><code>Array.prototype.strUnique = function() {<br> var o = {}, i, l = this.length, r = [];<br> for(i=0; i&lt;l;i++) o[this[i]] = null;<br> for(i in o) r.push(i);<br> return r;<br> };</code></p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-545"> 
          <div id="dsq-comment-header-545" class="dsq-comment-header"> 
           <cite id="dsq-cite-545"> http://www.javascriptbank.com/ <span id="dsq-author-user-545">JavascriptBank</span> </cite> 
          </div> 
          <div id="dsq-comment-body-545" class="dsq-comment-body"> 
           <div id="dsq-comment-message-545" class="dsq-comment-message">
            <p>Very cool &amp; good tip, thank you very much for sharing.<br> Can I share this snippet on my <a href="http://www.javascriptbank.com/" rel="nofollow">http://www.javascriptbank.com/</a></p> 
            <p>Awaiting your response. Thanks</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment byuser comment-author-shamasis bypostauthor odd alt depth-2" id="dsq-comment-546"> 
            <div id="dsq-comment-header-546" class="dsq-comment-header"> 
             <cite id="dsq-cite-546"> http://www.shamasis.in/ <span id="dsq-author-user-546">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-546" class="dsq-comment-body"> 
             <div id="dsq-comment-message-546" class="dsq-comment-message">
              <p>Sure. Sharing is caring! Care back for me by retaining my link and attribution. <img src="http://www.shamasis.net/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;"></p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1" id="dsq-comment-547"> 
          <div id="dsq-comment-header-547" class="dsq-comment-header"> 
           <cite id="dsq-cite-547"> <span id="dsq-author-user-547">Kevin N</span> </cite> 
          </div> 
          <div id="dsq-comment-body-547" class="dsq-comment-body"> 
           <div id="dsq-comment-message-547" class="dsq-comment-message">
            <p>Im trying to use this (the modified string data-type only function) inside an embedded js tool (i believe it uses rhino) and Im having difficulty. &nbsp;Instead of removing the duplicates &nbsp;I want to append &nbsp;1, 2, 3n at the end of the duplicative strings &nbsp;(space then integer so Kevin,Kevin becomes &nbsp;Kevin,Kevin 1). Im new to js in general and not sure im creating the array correctly  I may ask some stupid questions.<br> var urlarray = new Array(URLName.getString());<br> should that work?  as I understand it from there I can call this function using the array?</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment byuser comment-author-shamasis bypostauthor odd alt depth-2" id="dsq-comment-549"> 
            <div id="dsq-comment-header-549" class="dsq-comment-header"> 
             <cite id="dsq-cite-549"> http://www.shamasis.in/ <span id="dsq-author-user-549">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-549" class="dsq-comment-body"> 
             <div id="dsq-comment-message-549" class="dsq-comment-message">
              <p>Kevin,</p> 
              <p>For your use of prefixing the duplicates within a JavaScript Array with number, the following code would be useful:</p> 
              <p><code>Array.prototype.markDuplicates = function() {<br> var o = {}, i, l = this.length, r = [];<br> for(i=0; i&lt;l; i += 1) {<br> if(o[this[i]] &gt;= 0) {<br> o[this[i]] += 1;<br> r.push(this[i] + ' ' + o[this[i]]);<br> }<br> else {<br> o[this[i]] = 0;<br> r.push(this[i]);<br> }<br> }<br> return r;<br> };</code></p> 
              <p><code>// Usage would look like<br> var myArr = ['Kevin', 'Kevin', 'Shamasis', 'Kevin'],<br> newArr = myArr.markDuplicates();</code></p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-548"> 
          <div id="dsq-comment-header-548" class="dsq-comment-header"> 
           <cite id="dsq-cite-548"> <span id="dsq-author-user-548">Nilton</span> </cite> 
          </div> 
          <div id="dsq-comment-body-548" class="dsq-comment-body"> 
           <div id="dsq-comment-message-548" class="dsq-comment-message">
            <p>reverse for loops are faster for spidermonkey.<br> As for Kevins question:<br> Array.prototype.toUnique = function() {<br> var o = {}, i, l = this.length, r = []; n = []; modified=0;<br> for(i=this.length-1; i&gt;=0;i){<br> if(n[this[i]]){<br> modified=1;<br> o[this[i]+ + n[this[i]]] = this[i]+ n[this[i]]++;<br> }else{<br> o[this[i]] = this[i];n[this[i]]=1<br> }<br> }<br> if(!modified)return this;<br> for(i in o) r.push(o[i]);<br> return r;<br> };</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment byuser comment-author-shamasis bypostauthor odd alt depth-2" id="dsq-comment-550"> 
            <div id="dsq-comment-header-550" class="dsq-comment-header"> 
             <cite id="dsq-cite-550"> http://www.shamasis.in/ <span id="dsq-author-user-550">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-550" class="dsq-comment-body"> 
             <div id="dsq-comment-message-550" class="dsq-comment-message">
              <p>I did not want to do a reverse so as to maintain the original order.</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-3" id="dsq-comment-563"> 
              <div id="dsq-comment-header-563" class="dsq-comment-header"> 
               <cite id="dsq-cite-563"> <span id="dsq-author-user-563">Relic</span> </cite> 
              </div> 
              <div id="dsq-comment-body-563" class="dsq-comment-body"> 
               <div id="dsq-comment-message-563" class="dsq-comment-message">
                <p>Then ya just need to use .unshift() instead of .push(). problem solved!</p> 
               </div> 
              </div> 
              <ul class="children"> 
               <li class="comment odd alt depth-4" id="dsq-comment-568"> 
                <div id="dsq-comment-header-568" class="dsq-comment-header"> 
                 <cite id="dsq-cite-568"> http://www.shamasis.in <span id="dsq-author-user-568">Shamasis Bhattacharya</span> </cite> 
                </div> 
                <div id="dsq-comment-body-568" class="dsq-comment-body"> 
                 <div id="dsq-comment-message-568" class="dsq-comment-message">
                  <p>It was actually very stupid on my part to think in this direction! The fastest algo actually does not take into account array order. We could simply do the negative looping here.</p> 
                  <p></p>
                  <!-- Crayon Syntax Highlighter v2.6.10 --> 
                  <div id="crayon-58ce2c139082b075720347" class="crayon-syntax crayon-theme-tomorrow crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;"> 
                   <div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
                    <span class="crayon-title"></span> 
                    <div class="crayon-tools" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
                     <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
                      <div class="crayon-button-icon"></div>
                     </div>
                     <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
                      <div class="crayon-button-icon"></div>
                     </div>
                     <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
                      <div class="crayon-button-icon"></div>
                     </div>
                     <div class="crayon-button crayon-expand-button" title="Expand Code">
                      <div class="crayon-button-icon"></div>
                     </div>
                     <div class="crayon-button crayon-copy-button" title="Copy">
                      <div class="crayon-button-icon"></div>
                     </div>
                    </div>
                   </div> 
                   <div class="crayon-info" style="min-height: 21px !important; line-height: 21px !important;"></div> 
                   <div class="crayon-plain-wrap">
                    <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 15px !important; line-height: 20px !important;">

Array.prototype.unique = function () {
&nbsp; &nbsp; var o = {}, i = this.length, r = [];
&nbsp; &nbsp; while (i -= 1) o[this[i]] = this[i];
&nbsp; &nbsp; for (i in o) r.push(o[i]);
&nbsp; &nbsp; delete o;
&nbsp; &nbsp; return r;
};</textarea>
                   </div> 
                   <div class="crayon-main" style=" max-height: 500px;"> 
                    <table class="crayon-table"> 
                     <tbody>
                      <tr class="crayon-row"> 
                       <td class="crayon-nums " data-settings="hide"> 
                        <div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;">
                         <div class="crayon-num" data-line="crayon-58ce2c139082b075720347-1">
                          1
                         </div>
                         <div class="crayon-num" data-line="crayon-58ce2c139082b075720347-2">
                          2
                         </div>
                         <div class="crayon-num" data-line="crayon-58ce2c139082b075720347-3">
                          3
                         </div>
                         <div class="crayon-num" data-line="crayon-58ce2c139082b075720347-4">
                          4
                         </div>
                         <div class="crayon-num" data-line="crayon-58ce2c139082b075720347-5">
                          5
                         </div>
                         <div class="crayon-num" data-line="crayon-58ce2c139082b075720347-6">
                          6
                         </div>
                         <div class="crayon-num" data-line="crayon-58ce2c139082b075720347-7">
                          7
                         </div>
                         <div class="crayon-num" data-line="crayon-58ce2c139082b075720347-8">
                          8
                         </div>
                        </div> </td> 
                       <td class="crayon-code">
                        <div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                         <div class="crayon-line" id="crayon-58ce2c139082b075720347-1">
                          &nbsp;
                         </div>
                         <div class="crayon-line" id="crayon-58ce2c139082b075720347-2">
                          <span class="crayon-t">Array</span>
                          <span class="crayon-sy">.</span>
                          <span class="crayon-v">prototype</span>
                          <span class="crayon-sy">.</span>
                          <span class="crayon-v">unique</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-o">=</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-t">function</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-sy">(</span>
                          <span class="crayon-sy">)</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-sy">{</span>
                         </div>
                         <div class="crayon-line" id="crayon-58ce2c139082b075720347-3">
                          &nbsp;
                          <span class="crayon-h"> </span>&nbsp;
                          <span class="crayon-h"> </span>
                          <span class="crayon-t">var</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-v">o</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-o">=</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-sy">{</span>
                          <span class="crayon-sy">}</span>
                          <span class="crayon-sy">,</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-v">i</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-o">=</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-r">this</span>
                          <span class="crayon-sy">.</span>
                          <span class="crayon-v">length</span>
                          <span class="crayon-sy">,</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-v">r</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-o">=</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-sy">[</span>
                          <span class="crayon-sy">]</span>
                          <span class="crayon-sy">;</span>
                         </div>
                         <div class="crayon-line" id="crayon-58ce2c139082b075720347-4">
                          &nbsp;
                          <span class="crayon-h"> </span>&nbsp;
                          <span class="crayon-h"> </span>
                          <span class="crayon-st">while</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-sy">(</span>
                          <span class="crayon-v">i</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-o">-=</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-cn">1</span>
                          <span class="crayon-sy">)</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-v">o</span>
                          <span class="crayon-sy">[</span>
                          <span class="crayon-r">this</span>
                          <span class="crayon-sy">[</span>
                          <span class="crayon-v">i</span>
                          <span class="crayon-sy">]</span>
                          <span class="crayon-sy">]</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-o">=</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-r">this</span>
                          <span class="crayon-sy">[</span>
                          <span class="crayon-v">i</span>
                          <span class="crayon-sy">]</span>
                          <span class="crayon-sy">;</span>
                         </div>
                         <div class="crayon-line" id="crayon-58ce2c139082b075720347-5">
                          &nbsp;
                          <span class="crayon-h"> </span>&nbsp;
                          <span class="crayon-h"> </span>
                          <span class="crayon-st">for</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-sy">(</span>
                          <span class="crayon-i">i</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-st">in</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-v">o</span>
                          <span class="crayon-sy">)</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-v">r</span>
                          <span class="crayon-sy">.</span>
                          <span class="crayon-e">push</span>
                          <span class="crayon-sy">(</span>
                          <span class="crayon-v">o</span>
                          <span class="crayon-sy">[</span>
                          <span class="crayon-v">i</span>
                          <span class="crayon-sy">]</span>
                          <span class="crayon-sy">)</span>
                          <span class="crayon-sy">;</span>
                         </div>
                         <div class="crayon-line" id="crayon-58ce2c139082b075720347-6">
                          &nbsp;
                          <span class="crayon-h"> </span>&nbsp;
                          <span class="crayon-h"> </span>
                          <span class="crayon-i">delete</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-v">o</span>
                          <span class="crayon-sy">;</span>
                         </div>
                         <div class="crayon-line" id="crayon-58ce2c139082b075720347-7">
                          &nbsp;
                          <span class="crayon-h"> </span>&nbsp;
                          <span class="crayon-h"> </span>
                          <span class="crayon-st">return</span>
                          <span class="crayon-h"> </span>
                          <span class="crayon-v">r</span>
                          <span class="crayon-sy">;</span>
                         </div>
                         <div class="crayon-line" id="crayon-58ce2c139082b075720347-8">
                          <span class="crayon-sy">}</span>
                          <span class="crayon-sy">;</span>
                         </div>
                        </div></td> 
                      </tr> 
                     </tbody>
                    </table> 
                   </div> 
                  </div> 
                  <!-- [Format Time: 0.0118 seconds] --> 
                  <p></p> 
                 </div> 
                </div> 
                <ul class="children"> 
                 <li class="comment even depth-5" id="dsq-comment-569"> 
                  <div id="dsq-comment-header-569" class="dsq-comment-header"> 
                   <cite id="dsq-cite-569"> <span id="dsq-author-user-569">Neumonicom</span> </cite> 
                  </div> 
                  <div id="dsq-comment-body-569" class="dsq-comment-body"> 
                   <div id="dsq-comment-message-569" class="dsq-comment-message">
                    <p>That will only work for values that are object literals. &nbsp;It will not work for objects, as their internal .toString() method will convert them to something like :[object Object]. &nbsp;Thus if you have multiple objects with the same constructor you will continually overwrite the last one.</p> 
                   </div> 
                  </div> </li>
                 <!-- #comment-## --> 
                 <li class="comment odd alt depth-5" id="dsq-comment-570"> 
                  <div id="dsq-comment-header-570" class="dsq-comment-header"> 
                   <cite id="dsq-cite-570"> <span id="dsq-author-user-570">Neumonicom</span> </cite> 
                  </div> 
                  <div id="dsq-comment-body-570" class="dsq-comment-body"> 
                   <div id="dsq-comment-message-570" class="dsq-comment-message">
                    <p>Sorry, I meant primitives instead of object literals in the first line. &nbsp;a 1 0 2?.</p> 
                   </div> 
                  </div> </li>
                 <!-- #comment-## --> 
                 <li class="comment even depth-5" id="dsq-comment-571"> 
                  <div id="dsq-comment-header-571" class="dsq-comment-header"> 
                   <cite id="dsq-cite-571"> <span id="dsq-author-user-571">Neumonicom</span> </cite> 
                  </div> 
                  <div id="dsq-comment-body-571" class="dsq-comment-body"> 
                   <div id="dsq-comment-message-571" class="dsq-comment-message">
                    <p>This is probably the fastest and most reliable way to create a unique array whose members can be of any object. &nbsp;The only downside is that it will sort the results. &nbsp;Perhaps there is a workaround?</p> 
                    <p>Array.prototype.unique = function(){<br> this.sort(function(a,b){<br> if(a===b)return 0;<br> return 1;</p> 
                    <p> });<br> var length = this.length;<br> while(length)if(this[length] === this[length-1])this.splice(length,1);<br> return this;<br> }&nbsp;</p> 
                   </div> 
                  </div> </li>
                 <!-- #comment-## --> 
                 <li class="comment odd alt depth-5" id="dsq-comment-572"> 
                  <div id="dsq-comment-header-572" class="dsq-comment-header"> 
                   <cite id="dsq-cite-572"> http://www.shamasis.in <span id="dsq-author-user-572">Shamasis Bhattacharya</span> </cite> 
                  </div> 
                  <div id="dsq-comment-body-572" class="dsq-comment-body"> 
                   <div id="dsq-comment-message-572" class="dsq-comment-message">
                    <p>This will fail on Google Chrome on arrays with many items. The WebKit insertion sort is not stable for equality sort. <img src="http://www.shamasis.net/wp-includes/images/smilies/frownie.png" alt=":(" class="wp-smiley" style="height: 1em; max-height: 1em;"></p> 
                   </div> 
                  </div> </li>
                 <!-- #comment-## --> 
                </ul>
                <!-- .children --> </li>
               <!-- #comment-## --> 
              </ul>
              <!-- .children --> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1" id="dsq-comment-551"> 
          <div id="dsq-comment-header-551" class="dsq-comment-header"> 
           <cite id="dsq-cite-551"> http://joshuakalis.com <span id="dsq-author-user-551">Joshua Kalis</span> </cite> 
          </div> 
          <div id="dsq-comment-body-551" class="dsq-comment-body"> 
           <div id="dsq-comment-message-551" class="dsq-comment-message">
            <p>I dont like augmenting the default types much, so I just made a function.</p> 
            <p>function (ar) {<br> var f = {},<br> i = 0,<br> l = ar.length,<br> r = [];<br> while (i &lt; l) {<br> !f[ar[i]] &amp;&amp; r.push(ar[i]);<br> f[ar[i++]] = 1;<br> }<br> return r;<br> };</p> 
            <p>I have it as a method on a properly name-spaced object and use like this:</p> 
            <p>var result = Utils.array.unique(array_name);</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-552"> 
          <div id="dsq-comment-header-552" class="dsq-comment-header"> 
           <cite id="dsq-cite-552"> <span id="dsq-author-user-552">Trav</span> </cite> 
          </div> 
          <div id="dsq-comment-body-552" class="dsq-comment-body"> 
           <div id="dsq-comment-message-552" class="dsq-comment-message">
            <p>Hi,</p> 
            <p>warning js novice.</p> 
            <p>I have a js array with 50,000 objects in it. &nbsp;I need to find unique object fields in the array.</p> 
            <p>eg.</p> 
            <p>var data = [{name: tom,age:12},{name:sam,age:13},{name:tom,age:20}];</p> 
            <p>so i need to find unique base on object field like:</p> 
            <p>var return = data.unique(name);</p> 
            <p>so return would now have:</p> 
            <p>return&nbsp;= [{name: tom},{name:sam}];</p> 
            <p>I have this working using jquery.inArray but it is very slow with large data sets.</p> 
            <p>Can you help me?</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1" id="dsq-comment-553"> 
          <div id="dsq-comment-header-553" class="dsq-comment-header"> 
           <cite id="dsq-cite-553"> <span id="dsq-author-user-553">Nemoniccom</span> </cite> 
          </div> 
          <div id="dsq-comment-body-553" class="dsq-comment-body"> 
           <div id="dsq-comment-message-553" class="dsq-comment-message">
            <p>Im not so sure this is the best method. What about doing the following:</p> 
            <p>Array.prototype.unique = function(){<br> Var Len = this.length,<br> Elems = [],<br> Elemslen = 0?<br> Table ={},<br> I;<br> For(I=0;I+&lt;Len;I++){<br> If(!Table[I]){<br> Table[I] = 1;<br> This[Elemslen++] = This[I];</p> 
            <p> }<br> }</p> 
            <p>This.length = Elemslen;<br> }</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment odd alt depth-2" id="dsq-comment-554"> 
            <div id="dsq-comment-header-554" class="dsq-comment-header"> 
             <cite id="dsq-cite-554"> http://www.spencernetdevelopment.com/ <span id="dsq-author-user-554">Neumoniccom</span> </cite> 
            </div> 
            <div id="dsq-comment-body-554" class="dsq-comment-body"> 
             <div id="dsq-comment-message-554" class="dsq-comment-message">
              <p>Sorry, &nbsp;I tried to type this originally on an Ipad. &nbsp;What a pain! &nbsp;The code should be as follows:</p> 
              <p>Array.prototype.unique = function(){<br> var len = this.length,<br> elems = [],<br> elemsLen = 0,<br> table ={},<br> i;<br> for(i=0;i&lt;len;i++){<br> if(!table[this[i]]){<br> table[this[i]] = 1;<br> this[elemsLen++] = this[i];<br> }<br> }</p> 
              <p> this.length = elemsLen;<br> return this;<br> }</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-555"> 
          <div id="dsq-comment-header-555" class="dsq-comment-header"> 
           <cite id="dsq-cite-555"> <span id="dsq-author-user-555">Izayoi400</span> </cite> 
          </div> 
          <div id="dsq-comment-body-555" class="dsq-comment-body"> 
           <div id="dsq-comment-message-555" class="dsq-comment-message">
            <p>what i use:</p> 
            <p>var arr1=[1,2,3,2,5,1,2,1,2,3,6,1,2,1,2,3]<br> var blah=for(each1 in arr1)&nbsp;{&nbsp;if(blah.search(arr1[each1]) == -1 )&nbsp;&nbsp;{&nbsp;&nbsp;blah=blah+arr1[each1]&nbsp;&nbsp;}&nbsp;}<br> alert(blah)var newblah = blah.split()alert(newblah)</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1" id="dsq-comment-556"> 
          <div id="dsq-comment-header-556" class="dsq-comment-header"> 
           <cite id="dsq-cite-556"> <span id="dsq-author-user-556">Izayoi400</span> </cite> 
          </div> 
          <div id="dsq-comment-body-556" class="dsq-comment-body"> 
           <div id="dsq-comment-message-556" class="dsq-comment-message">
            <p>sorry hopefully this will be formatted better</p> 
            <p>var arr1=[1,2,3,2,5,1,2,1,2,3,6,1,2,1,2,3]var blah=for(each1 in arr1){if(blah.search(arr1[each1]) == -1 ){blah=blah+arr1[each1]}}alert(blah)var newblah = blah.split()alert(newblah)</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment even depth-2" id="dsq-comment-557"> 
            <div id="dsq-comment-header-557" class="dsq-comment-header"> 
             <cite id="dsq-cite-557"> http://www.spencernetdevelopment.com/ <span id="dsq-author-user-557">Neumoniccom</span> </cite> 
            </div> 
            <div id="dsq-comment-body-557" class="dsq-comment-body"> 
             <div id="dsq-comment-message-557" class="dsq-comment-message">
              <p>This isnt a very good method. &nbsp;You should never use the for in loop for arrays. &nbsp;That loop should only be used on objects where the number of properties / methods isnt known ( idea taken from Nicolas C. Zakas Book High Performance Javascript p 62  63). &nbsp;You decrease performance using the for-in loop because you have to access all the properties / members of the object and its prototype chain.</p> 
              <p>Also note that using multiple object methods (IE split , search, etc.) will lead to performance degradation.This is what I was originally trying to post. &nbsp;For string and numeric values I believe it is the most straight forward:By using the below prototype method you can call unique on any array object like this:var a = [4,5,4,3,45,3,12,1,234,5,4,3,2,1];a.unique();Here is the prototype method for the Array object:Array.prototype.unique = function(){&nbsp; var len = this.length,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;elems = [],&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;elemsLen = 0,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;table ={},&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;i;&nbsp; for(i=0;i&lt;len;i++){&nbsp; &nbsp; if(!table[this[i]]){&nbsp; &nbsp; &nbsp; table[this[i]] = 1;&nbsp; &nbsp; &nbsp; this[elemsLen++] = this[i];&nbsp; &nbsp; }&nbsp; }&nbsp; this.length = elemsLen;&nbsp; return this;}</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="post pingback"> <p>Pingback: <a href="http://robinjakobsson.se/blog/2011/08/19/fast-algorithm-to-find-unique-items-in-javascript-array/" rel="external nofollow" class="url">Fast Algorithm To Find Unique Items in JavaScript Array | Robin Jakobsson</a>()</p> </li> 
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-559"> 
          <div id="dsq-comment-header-559" class="dsq-comment-header"> 
           <cite id="dsq-cite-559"> http://twitter.com/vikasrao <span id="dsq-author-user-559">vikasrao</span> </cite> 
          </div> 
          <div id="dsq-comment-body-559" class="dsq-comment-body"> 
           <div id="dsq-comment-message-559" class="dsq-comment-message">
            <p>I had the same need and came up with this solution a while ago, good to know it actually has a name <img src="http://www.shamasis.net/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;"> :&nbsp;http://vikasrao.wordpress.com/2011/06/09/removing-duplicates-from-a-javascript-object-array/</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1" id="dsq-comment-560"> 
          <div id="dsq-comment-header-560" class="dsq-comment-header"> 
           <cite id="dsq-cite-560"> <span id="dsq-author-user-560">Msitchen</span> </cite> 
          </div> 
          <div id="dsq-comment-body-560" class="dsq-comment-body"> 
           <div id="dsq-comment-message-560" class="dsq-comment-message">
            <p>This should be done with a hash table for O(n)&nbsp;</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-561"> 
          <div id="dsq-comment-header-561" class="dsq-comment-header"> 
           <cite id="dsq-cite-561"> <span id="dsq-author-user-561">Gregor</span> </cite> 
          </div> 
          <div id="dsq-comment-body-561" class="dsq-comment-body"> 
           <div id="dsq-comment-message-561" class="dsq-comment-message">
            <p>Thanks for teaching me the term Hash Sieving Ive been using this trick for 15 years but didnt know it had a name.</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment byuser comment-author-shamasis bypostauthor even depth-2" id="dsq-comment-562"> 
            <div id="dsq-comment-header-562" class="dsq-comment-header"> 
             <cite id="dsq-cite-562"> http://www.shamasis.in/ <span id="dsq-author-user-562">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-562" class="dsq-comment-body"> 
             <div id="dsq-comment-message-562" class="dsq-comment-message">
              <p>You are right, we have used this technique for centuries now! However, for JS it is performance enhancing unlike many other languages. The overhead of dictionaries and other similar structures in many languages are comparatively higher.</p> 
              <p>Agree?</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1" id="dsq-comment-564"> 
          <div id="dsq-comment-header-564" class="dsq-comment-header"> 
           <cite id="dsq-cite-564"> <span id="dsq-author-user-564">Brandon Benvie</span> </cite> 
          </div> 
          <div id="dsq-comment-body-564" class="dsq-comment-body"> 
           <div id="dsq-comment-message-564" class="dsq-comment-message">
            <p>Array.prototype.unique = function(){<br> return this.filter(function(s, i, a){ return i == a.lastIndexOf(s); });<br> }</p> 
            <p>You loop through the array at most an average of 50% of the length of the array per item, when theres zero doubles. The more items filtered the more efficient it is. Usually doesnt beat the hash method but it has its place. It wins on style points though cause sometimes looking pretty is better than being smart.</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment even depth-2" id="dsq-comment-567"> 
            <div id="dsq-comment-header-567" class="dsq-comment-header"> 
             <cite id="dsq-cite-567"> http://www.shamasis.in <span id="dsq-author-user-567">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-567" class="dsq-comment-body"> 
             <div id="dsq-comment-message-567" class="dsq-comment-message">
              <p>Yeah! I always tend to have a fascination towards the coolKid variants. Sadly, the overhead of an in-loop function call scares me. :-/</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt depth-2" id="dsq-comment-703"> 
            <div id="dsq-comment-header-703" class="dsq-comment-header"> 
             <cite id="dsq-cite-703"> http://www.tohodo.com/ <span id="dsq-author-user-703">10basetom</span> </cite> 
            </div> 
            <div id="dsq-comment-body-703" class="dsq-comment-body"> 
             <div id="dsq-comment-message-703" class="dsq-comment-message">
              <p>Im not sure how browsers performed four years ago, but today the first method discussed in this article is magnitudes faster than other methods (at least in Chrome v50). Heres a comparison test: <a href="http://codepen.io/thdoan/pen/OXLGwJ" rel="nofollow">http://codepen.io/thdoan/pen/OXLGwJ</a></p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-3" id="dsq-comment-705"> 
              <div id="dsq-comment-header-705" class="dsq-comment-header"> 
               <cite id="dsq-cite-705"> <span id="dsq-author-user-705">Eric Swann</span> </cite> 
              </div> 
              <div id="dsq-comment-body-705" class="dsq-comment-body"> 
               <div id="dsq-comment-message-705" class="dsq-comment-message">
                <p>Just an FYI, there is a typo in your example such that the third method just calls the same function as the second method. If you fix it to call the third method, it looks like the thirds is the fastest, being ~3x faster than the first.</p> 
               </div> 
              </div> 
              <ul class="children"> 
               <li class="comment odd alt depth-4" id="dsq-comment-706"> 
                <div id="dsq-comment-header-706" class="dsq-comment-header"> 
                 <cite id="dsq-cite-706"> http://www.tohodo.com/ <span id="dsq-author-user-706">10basetom</span> </cite> 
                </div> 
                <div id="dsq-comment-body-706" class="dsq-comment-body"> 
                 <div id="dsq-comment-message-706" class="dsq-comment-message">
                  <p>Thanks for pointing that out  Ive fixed it in the codepen. The interesting thing is when you use the exact same code in a real web page, the results show that method 1 is fastest: </p> 
                  <p><a href="https://dl.dropboxusercontent.com/u/987914/performance/unique.html" rel="nofollow">https://dl.dropboxusercontent.com/u/987914/performance/unique.html</a></p> 
                  <p>The only thing I changed was increasing the iterations from 100 to 1000. In fact, the larger the iteration count the faster method 1 is over the other two, at least in Chrome (try changing 1000 to 10000). It appears Codepen incurs a fairly large overhead, thats probably why even 100 iterations is slower than 1000 iterations when loading from a web page.</p> 
                  <p>I guess one conclusion we can make is if you know youre looping through a smallish set (in the hundreds), then method 3 is fastest; but if your set has thousands of items, then method 1 is the way to go.</p> 
                 </div> 
                </div> </li>
               <!-- #comment-## --> 
              </ul>
              <!-- .children --> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-565"> 
          <div id="dsq-comment-header-565" class="dsq-comment-header"> 
           <cite id="dsq-cite-565"> <span id="dsq-author-user-565">Aurelio Jargas</span> </cite> 
          </div> 
          <div id="dsq-comment-body-565" class="dsq-comment-body"> 
           <div id="dsq-comment-message-565" class="dsq-comment-message">
            <p>Thanks for the post!</p> 
            <p>Just note that the two codes you posted are not 100% similar. The fastest version will consider 1 and 1 equal, removing one of them. The classic keeps both in output.</p> 
            <p></p>
            <!-- Crayon Syntax Highlighter v2.6.10 --> 
            <div id="crayon-58ce2c1391472292825841" class="crayon-syntax crayon-theme-tomorrow crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;"> 
             <div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
              <span class="crayon-title"></span> 
              <div class="crayon-tools" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
               <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-expand-button" title="Expand Code">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-copy-button" title="Copy">
                <div class="crayon-button-icon"></div>
               </div>
              </div>
             </div> 
             <div class="crayon-info" style="min-height: 21px !important; line-height: 21px !important;"></div> 
             <div class="crayon-plain-wrap">
              <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 15px !important; line-height: 20px !important;">

[1,2,3,"1","4"].unique_fastest()

["1", 2, 3, "4"]

[1,2,3,"1","4"].unique_classic()

[1, 2, 3, "1", "4"]</textarea>
             </div> 
             <div class="crayon-main" style=" max-height: 500px;"> 
              <table class="crayon-table"> 
               <tbody>
                <tr class="crayon-row"> 
                 <td class="crayon-nums " data-settings="hide"> 
                  <div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;">
                   <div class="crayon-num" data-line="crayon-58ce2c1391472292825841-1">
                    1
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c1391472292825841-2">
                    2
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c1391472292825841-3">
                    3
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c1391472292825841-4">
                    4
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c1391472292825841-5">
                    5
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c1391472292825841-6">
                    6
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c1391472292825841-7">
                    7
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c1391472292825841-8">
                    8
                   </div>
                  </div> </td> 
                 <td class="crayon-code">
                  <div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                   <div class="crayon-line" id="crayon-58ce2c1391472292825841-1">
                    &nbsp;
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c1391472292825841-2">
                    <span class="crayon-sy">[</span>
                    <span class="crayon-cn">1</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-cn">2</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-cn">3</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-s">"1"</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-s">"4"</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-e">unique_fastest</span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-sy">)</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c1391472292825841-3">
                    &nbsp;
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c1391472292825841-4">
                    <span class="crayon-sy">[</span>
                    <span class="crayon-s">"1"</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-cn">2</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-cn">3</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"4"</span>
                    <span class="crayon-sy">]</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c1391472292825841-5">
                    &nbsp;
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c1391472292825841-6">
                    <span class="crayon-sy">[</span>
                    <span class="crayon-cn">1</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-cn">2</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-cn">3</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-s">"1"</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-s">"4"</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-e">unique_classic</span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-sy">)</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c1391472292825841-7">
                    &nbsp;
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c1391472292825841-8">
                    <span class="crayon-sy">[</span>
                    <span class="crayon-cn">1</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-cn">2</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-cn">3</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"1"</span>
                    <span class="crayon-sy">,</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"4"</span>
                    <span class="crayon-sy">]</span>
                   </div>
                  </div></td> 
                </tr> 
               </tbody>
              </table> 
             </div> 
            </div> 
            <!-- [Format Time: 0.0066 seconds] --> 
            <p></p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment odd alt depth-2" id="dsq-comment-566"> 
            <div id="dsq-comment-header-566" class="dsq-comment-header"> 
             <cite id="dsq-cite-566"> http://www.shamasis.in <span id="dsq-author-user-566">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-566" class="dsq-comment-body"> 
             <div id="dsq-comment-message-566" class="dsq-comment-message">
              <p>You are correct in noting that. <img src="http://www.shamasis.net/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;"> In fact, to retain data-type, it becomes a bit more complex where we can create a hash for each type. Then again, we will loose the original array item order. To retain the order, the amount of computation required will defeat the whole purpose of this method! <img src="http://www.shamasis.net/wp-includes/images/smilies/frownie.png" alt=":(" class="wp-smiley" style="height: 1em; max-height: 1em;"></p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-3" id="dsq-comment-582"> 
              <div id="dsq-comment-header-582" class="dsq-comment-header"> 
               <cite id="dsq-cite-582"> <span id="dsq-author-user-582">SlightlyTooKeen</span> </cite> 
              </div> 
              <div id="dsq-comment-body-582" class="dsq-comment-body"> 
               <div id="dsq-comment-message-582" class="dsq-comment-message">
                <p>Just posted a solution to that one in a different comment  my solution had three passes in it, so was indeed slower.</p> 
                <p>First, you find a unique string key that is not present in any objects in your array. This is O(N)  youll almost always guess a unique key first time, but you run through the array to double-check this.</p> 
                <p>Second, you use the hash sieving method to filter your array. However, the key you use for the hash depends on the type of the item. For objects, you use the unique key from the first pass to generate an identifier for that object, so you know if you see that object again.</p> 
                <p>The third pass is simply to remove that unique key from any objects.</p> 
                <p>So, its slower than your solution, but it can handle objects.</p> 
               </div> 
              </div> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt depth-2" id="dsq-comment-573"> 
            <div id="dsq-comment-header-573" class="dsq-comment-header"> 
             <cite id="dsq-cite-573"> <span id="dsq-author-user-573">Neumonicom</span> </cite> 
            </div> 
            <div id="dsq-comment-body-573" class="dsq-comment-body"> 
             <div id="dsq-comment-message-573" class="dsq-comment-message">
              <p>Consider this variation as well. &nbsp;This will preserve any data type without sorting the results. &nbsp;Try running some tests on this to see if its faster. &nbsp;One thing worth noting here is that native methods have been optimized, so avoiding as much conditional logic and loops as possible is a good thing:</p> 
              <p>Array.prototype.unique = function(){<br> var len = this.length,<br> a = [],<br> item,<br> i=0;</p> 
              <p> for(;i&lt;len;){<br> item = this[i++];<br> if(a.indexOf(item) === -1)a.push(item);</p> 
              <p> }<br> return a;<br> }&nbsp;</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="post pingback"> <p>Pingback: <a href="http://x443.wordpress.com/2012/07/06/fast-algorithm-to-find-unique-items-in-javascript-array/" rel="external nofollow" class="url">Fast Algorithm To Find Unique Items in JavaScript Array | x443</a>()</p> </li> 
         <!-- #comment-## --> 
         <li class="post pingback"> <p>Pingback: <a href="http://t1u.org/2012/08/20/javascript-unique-method-for-array-prototype/" rel="external nofollow" class="url">JavaScript unique method for array prototype | t1u</a>()</p> </li> 
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1" id="dsq-comment-576"> 
          <div id="dsq-comment-header-576" class="dsq-comment-header"> 
           <cite id="dsq-cite-576"> <span id="dsq-author-user-576">skrat</span> </cite> 
          </div> 
          <div id="dsq-comment-body-576" class="dsq-comment-body"> 
           <div id="dsq-comment-message-576" class="dsq-comment-message">
            <p>Nice, problem with all unique implementations Ive seen is that they rely on toString instead of allowing a custom comparison function.</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment odd alt depth-2" id="dsq-comment-577"> 
            <div id="dsq-comment-header-577" class="dsq-comment-header"> 
             <cite id="dsq-cite-577"> http://www.shamasis.in <span id="dsq-author-user-577">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-577" class="dsq-comment-body"> 
             <div id="dsq-comment-message-577" class="dsq-comment-message">
              <p>Thats true. The provision of delegating a comparator function would have been super (acknowledging the fact for the call overhead).</p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-3" id="dsq-comment-578"> 
              <div id="dsq-comment-header-578" class="dsq-comment-header"> 
               <cite id="dsq-cite-578"> <span id="dsq-author-user-578">skrat</span> </cite> 
              </div> 
              <div id="dsq-comment-body-578" class="dsq-comment-body"> 
               <div id="dsq-comment-message-578" class="dsq-comment-message">
                <p>My implementation for completeness, I wonder how the performance compares. <a href="http://pastie.org/4902499" rel="nofollow">http://pastie.org/4902499</a></p> 
               </div> 
              </div> 
              <ul class="children"> 
               <li class="comment odd alt depth-4" id="dsq-comment-579"> 
                <div id="dsq-comment-header-579" class="dsq-comment-header"> 
                 <cite id="dsq-cite-579"> http://www.shamasis.in <span id="dsq-author-user-579">Shamasis Bhattacharya</span> </cite> 
                </div> 
                <div id="dsq-comment-body-579" class="dsq-comment-body"> 
                 <div id="dsq-comment-message-579" class="dsq-comment-message">
                  <p>Even before performance, I assume that you are not putting cross-browser limitations as a concern. Right?</p> 
                 </div> 
                </div> 
                <ul class="children"> 
                 <li class="comment even depth-5" id="dsq-comment-580"> 
                  <div id="dsq-comment-header-580" class="dsq-comment-header"> 
                   <cite id="dsq-cite-580"> <span id="dsq-author-user-580">skrat</span> </cite> 
                  </div> 
                  <div id="dsq-comment-body-580" class="dsq-comment-body"> 
                   <div id="dsq-comment-message-580" class="dsq-comment-message">
                    <p>Thats right, I dont care for IE &lt; 9, in other words, the way to handle this is shims.</p> 
                   </div> 
                  </div> </li>
                 <!-- #comment-## --> 
                </ul>
                <!-- .children --> </li>
               <!-- #comment-## --> 
              </ul>
              <!-- .children --> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-581"> 
          <div id="dsq-comment-header-581" class="dsq-comment-header"> 
           <cite id="dsq-cite-581"> <span id="dsq-author-user-581">SlightlyTooKeen</span> </cite> 
          </div> 
          <div id="dsq-comment-body-581" class="dsq-comment-body"> 
           <div id="dsq-comment-message-581" class="dsq-comment-message">
            <p>Seeing as your algorithm doesnt work for arrays of objects (or distinguish between 1 and 1):</p>
            <!-- Crayon Syntax Highlighter v2.6.10 --> 
            <div id="crayon-58ce2c138df0d042917657" class="crayon-syntax crayon-theme-tomorrow crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;"> 
             <div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
              <span class="crayon-title"></span> 
              <div class="crayon-tools" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
               <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-expand-button" title="Expand Code">
                <div class="crayon-button-icon"></div>
               </div>
               <div class="crayon-button crayon-copy-button" title="Copy">
                <div class="crayon-button-icon"></div>
               </div>
              </div>
             </div> 
             <div class="crayon-info" style="min-height: 21px !important; line-height: 21px !important;"></div> 
             <div class="crayon-plain-wrap">
              <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 15px !important; line-height: 20px !important;">


    Array.prototype.unique = function () {
    var uniqueString = "" + Math.random();
    // make sure we have a unique string that is not a defined key in any     object
    
    for (var i = 0; i &lt; this.length; i++) {
        if (typeof this[i] == "object" &amp;&amp; this[i][uniqueString] != undefined) {
            uniqueString = "" + Math.random();
            i = -1;
            continue;
        }
    }
    
    var result = [];
    var accountedFor = {};
    var objectCounter = 0;
    for (var i = 0; i &lt; this.length; i++) {
        var item = this[i];
        var key;
        if (item === null) {
            key = "null";
        } else if (item === undefined) {
            key = "undefined";
        } else if (item === true) {
            key = "true";
        } else if (item === false) {
            key = "false";
        } else if (typeof item == "number") {
            key = "N" + item;
        } else if (typeof item == "string") {
            key = 'S' + item;
        } else {
            if (item[uniqueString] === undefined) {
                item[uniqueString] = "O" + objectCounter++;
            }
            key = item[uniqueString];
        }
        if (!accountedFor[key]) {
            accountedFor[key] = true;
            result.push(item);
        }
    }
    
    // Now remove the unique string from any objects we stuck it into
    for (var i = 0; i &lt; this.length; i++) {
        var item = this[i];
        if (typeof item == "object") {
            delete item[uniqueString];
        }
    }
    return result;
}</textarea>
             </div> 
             <div class="crayon-main" style=" max-height: 500px;"> 
              <table class="crayon-table"> 
               <tbody>
                <tr class="crayon-row"> 
                 <td class="crayon-nums " data-settings="hide"> 
                  <div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;">
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-1">
                    1
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-2">
                    2
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-3">
                    3
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-4">
                    4
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-5">
                    5
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-6">
                    6
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-7">
                    7
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-8">
                    8
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-9">
                    9
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-10">
                    10
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-11">
                    11
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-12">
                    12
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-13">
                    13
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-14">
                    14
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-15">
                    15
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-16">
                    16
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-17">
                    17
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-18">
                    18
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-19">
                    19
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-20">
                    20
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-21">
                    21
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-22">
                    22
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-23">
                    23
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-24">
                    24
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-25">
                    25
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-26">
                    26
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-27">
                    27
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-28">
                    28
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-29">
                    29
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-30">
                    30
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-31">
                    31
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-32">
                    32
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-33">
                    33
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-34">
                    34
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-35">
                    35
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-36">
                    36
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-37">
                    37
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-38">
                    38
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-39">
                    39
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-40">
                    40
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-41">
                    41
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-42">
                    42
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-43">
                    43
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-44">
                    44
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-45">
                    45
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-46">
                    46
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-47">
                    47
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-48">
                    48
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-49">
                    49
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-50">
                    50
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-51">
                    51
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-52">
                    52
                   </div>
                   <div class="crayon-num" data-line="crayon-58ce2c138df0d042917657-53">
                    53
                   </div>
                  </div> </td> 
                 <td class="crayon-code">
                  <div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-1">
                    &nbsp;
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-2">
                    &nbsp;
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-3">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-t">Array</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-v">prototype</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-v">unique</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-t">function</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-4">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">uniqueString</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">""</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">+</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">Math</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-e">random</span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-5">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-c">// make sure we have a unique string that is not a defined key in any&nbsp;&nbsp;&nbsp;&nbsp; object</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-6">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-7">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">for</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-cn">0</span>
                    <span class="crayon-sy">;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">&lt;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-r">this</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-v">length</span>
                    <span class="crayon-sy">;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-o">++</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-8">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-e">typeof </span>
                    <span class="crayon-r">this</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">==</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"object"</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">&amp;&amp;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-r">this</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">uniqueString</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">!=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">undefined</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-9">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">uniqueString</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">""</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">+</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">Math</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-e">random</span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-10">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">-</span>
                    <span class="crayon-cn">1</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-11">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">continue</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-12">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-13">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-14">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-15">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">result</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-16">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">accountedFor</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                    <span class="crayon-sy">}</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-17">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">objectCounter</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-cn">0</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-18">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">for</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-cn">0</span>
                    <span class="crayon-sy">;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">&lt;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-r">this</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-v">length</span>
                    <span class="crayon-sy">;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-o">++</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-19">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-r">this</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-20">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-21">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">===</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-t">null</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-22">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"null"</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-23">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">else</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">===</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">undefined</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-24">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"undefined"</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-25">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">else</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">===</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-t">true</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-26">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"true"</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-27">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">else</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">===</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-t">false</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-28">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"false"</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-29">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">else</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-e">typeof </span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">==</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"number"</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-30">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"N"</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">+</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-31">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">else</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-e">typeof </span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">==</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"string"</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-32">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">'S'</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">+</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-33">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-st">else</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-34">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">uniqueString</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">===</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">undefined</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-35">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">uniqueString</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"O"</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">+</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">objectCounter</span>
                    <span class="crayon-o">++</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-36">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-37">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">uniqueString</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-38">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-39">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-o">!</span>
                    <span class="crayon-v">accountedFor</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-40">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">accountedFor</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">key</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-t">true</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-41">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-v">result</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-e">push</span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-42">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-43">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-44">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-45">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-c">// Now remove the unique string from any objects we stuck it into</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-46">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">for</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-cn">0</span>
                    <span class="crayon-sy">;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">&lt;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-r">this</span>
                    <span class="crayon-sy">.</span>
                    <span class="crayon-v">length</span>
                    <span class="crayon-sy">;</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-o">++</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-47">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-t">var</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">=</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-r">this</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">i</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-48">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">if</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">(</span>
                    <span class="crayon-e">typeof </span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-o">==</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-s">"object"</span>
                    <span class="crayon-sy">)</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-sy">{</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-49">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-e">delete </span>
                    <span class="crayon-v">item</span>
                    <span class="crayon-sy">[</span>
                    <span class="crayon-v">uniqueString</span>
                    <span class="crayon-sy">]</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-50">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-51">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-sy">}</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-52">
                    <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="crayon-st">return</span>
                    <span class="crayon-h"> </span>
                    <span class="crayon-v">result</span>
                    <span class="crayon-sy">;</span>
                   </div>
                   <div class="crayon-line" id="crayon-58ce2c138df0d042917657-53">
                    <span class="crayon-sy">}</span>
                   </div>
                  </div></td> 
                </tr> 
               </tbody>
              </table> 
             </div> 
            </div> 
            <!-- [Format Time: 0.0249 seconds] --> 
            <p></p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment even depth-2" id="dsq-comment-583"> 
            <div id="dsq-comment-header-583" class="dsq-comment-header"> 
             <cite id="dsq-cite-583"> <span id="dsq-author-user-583">SlightlyTooKeen</span> </cite> 
            </div> 
            <div id="dsq-comment-body-583" class="dsq-comment-body"> 
             <div id="dsq-comment-message-583" class="dsq-comment-message">
              <p>Ooh  improvement for the middle section. Shorter, and probably faster:</p> 
              <p></p>
              <!-- Crayon Syntax Highlighter v2.6.10 --> 
              <div id="crayon-58ce2c138d849577891303" class="crayon-syntax crayon-theme-tomorrow crayon-font-consolas crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 15px !important; line-height: 20px !important;"> 
               <div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
                <span class="crayon-title"></span> 
                <div class="crayon-tools" style="font-size: 15px !important;height: 22.5px !important; line-height: 22.5px !important;">
                 <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
                  <div class="crayon-button-icon"></div>
                 </div>
                 <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
                  <div class="crayon-button-icon"></div>
                 </div>
                 <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
                  <div class="crayon-button-icon"></div>
                 </div>
                 <div class="crayon-button crayon-expand-button" title="Expand Code">
                  <div class="crayon-button-icon"></div>
                 </div>
                 <div class="crayon-button crayon-copy-button" title="Copy">
                  <div class="crayon-button-icon"></div>
                 </div>
                </div>
               </div> 
               <div class="crayon-info" style="min-height: 21px !important; line-height: 21px !important;"></div> 
               <div class="crayon-plain-wrap">
                <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 15px !important; line-height: 20px !important;">


var result = [];
var accountedFor = {};
for (var i = 0; i &lt; this.length; i++) {
    var item = this[i];
    if (typeof item == "object") {
        if (!item[uniqueString]) {
            result.push(item);
            item[uniqueString] = true;
        }
    } else {
        var key = (typeof item) + item;
        if (!accountedFor[key]) {
            result.push(item);
            accountedFor[key] = true;
        }
    }
}
</textarea>
               </div> 
               <div class="crayon-main" style=" max-height: 500px;"> 
                <table class="crayon-table"> 
                 <tbody>
                  <tr class="crayon-row"> 
                   <td class="crayon-nums " data-settings="hide"> 
                    <div class="crayon-nums-content" style="font-size: 15px !important; line-height: 20px !important;">
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-1">
                      1
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-2">
                      2
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-3">
                      3
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-4">
                      4
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-5">
                      5
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-6">
                      6
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-7">
                      7
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-8">
                      8
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-9">
                      9
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-10">
                      10
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-11">
                      11
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-12">
                      12
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-13">
                      13
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-14">
                      14
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-15">
                      15
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-16">
                      16
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-17">
                      17
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-18">
                      18
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-19">
                      19
                     </div>
                     <div class="crayon-num" data-line="crayon-58ce2c138d849577891303-20">
                      20
                     </div>
                    </div> </td> 
                   <td class="crayon-code">
                    <div class="crayon-pre" style="font-size: 15px !important; line-height: 20px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-1">
                      &nbsp;
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-2">
                      &nbsp;
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-3">
                      <span class="crayon-t">var</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">result</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">[</span>
                      <span class="crayon-sy">]</span>
                      <span class="crayon-sy">;</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-4">
                      <span class="crayon-t">var</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">accountedFor</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">{</span>
                      <span class="crayon-sy">}</span>
                      <span class="crayon-sy">;</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-5">
                      <span class="crayon-st">for</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">(</span>
                      <span class="crayon-t">var</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">i</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-cn">0</span>
                      <span class="crayon-sy">;</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">i</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">&lt;</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-r">this</span>
                      <span class="crayon-sy">.</span>
                      <span class="crayon-v">length</span>
                      <span class="crayon-sy">;</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">i</span>
                      <span class="crayon-o">++</span>
                      <span class="crayon-sy">)</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">{</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-6">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-t">var</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">item</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-r">this</span>
                      <span class="crayon-sy">[</span>
                      <span class="crayon-v">i</span>
                      <span class="crayon-sy">]</span>
                      <span class="crayon-sy">;</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-7">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-st">if</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">(</span>
                      <span class="crayon-e">typeof </span>
                      <span class="crayon-v">item</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">==</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-s">"object"</span>
                      <span class="crayon-sy">)</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">{</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-8">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-st">if</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">(</span>
                      <span class="crayon-o">!</span>
                      <span class="crayon-v">item</span>
                      <span class="crayon-sy">[</span>
                      <span class="crayon-v">uniqueString</span>
                      <span class="crayon-sy">]</span>
                      <span class="crayon-sy">)</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">{</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-9">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-v">result</span>
                      <span class="crayon-sy">.</span>
                      <span class="crayon-e">push</span>
                      <span class="crayon-sy">(</span>
                      <span class="crayon-v">item</span>
                      <span class="crayon-sy">)</span>
                      <span class="crayon-sy">;</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-10">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-v">item</span>
                      <span class="crayon-sy">[</span>
                      <span class="crayon-v">uniqueString</span>
                      <span class="crayon-sy">]</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-t">true</span>
                      <span class="crayon-sy">;</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-11">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-sy">}</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-12">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-sy">}</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-st">else</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">{</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-13">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-t">var</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">key</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">(</span>
                      <span class="crayon-e">typeof </span>
                      <span class="crayon-v">item</span>
                      <span class="crayon-sy">)</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">+</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-v">item</span>
                      <span class="crayon-sy">;</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-14">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-st">if</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">(</span>
                      <span class="crayon-o">!</span>
                      <span class="crayon-v">accountedFor</span>
                      <span class="crayon-sy">[</span>
                      <span class="crayon-v">key</span>
                      <span class="crayon-sy">]</span>
                      <span class="crayon-sy">)</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-sy">{</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-15">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-v">result</span>
                      <span class="crayon-sy">.</span>
                      <span class="crayon-e">push</span>
                      <span class="crayon-sy">(</span>
                      <span class="crayon-v">item</span>
                      <span class="crayon-sy">)</span>
                      <span class="crayon-sy">;</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-16">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-v">accountedFor</span>
                      <span class="crayon-sy">[</span>
                      <span class="crayon-v">key</span>
                      <span class="crayon-sy">]</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-o">=</span>
                      <span class="crayon-h"> </span>
                      <span class="crayon-t">true</span>
                      <span class="crayon-sy">;</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-17">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-sy">}</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-18">
                      <span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                      <span class="crayon-sy">}</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-19">
                      <span class="crayon-sy">}</span>
                     </div>
                     <div class="crayon-line" id="crayon-58ce2c138d849577891303-20">
                      &nbsp;
                     </div>
                    </div></td> 
                  </tr> 
                 </tbody>
                </table> 
               </div> 
              </div> 
              <!-- [Format Time: 0.0085 seconds] --> 
              <p></p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1" id="dsq-comment-584"> 
          <div id="dsq-comment-header-584" class="dsq-comment-header"> 
           <cite id="dsq-cite-584"> <span id="dsq-author-user-584">Vince</span> </cite> 
          </div> 
          <div id="dsq-comment-body-584" class="dsq-comment-body"> 
           <div id="dsq-comment-message-584" class="dsq-comment-message">
            <p>Your algorithm can be improved in case of no duplicates, using Brandons way, just adding after the line</p> 
            <p> var a = [], l = this.length;</p> 
            <p>the following lines</p> 
            <p>var distinctItems = Object.keys(this.reduce(function (r, v) { return r[v] = 1, r; }, {})).length;</p> 
            <p>if (distinctItems == l)<br> return array;</p> 
            <p>?</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-585"> 
          <div id="dsq-comment-header-585" class="dsq-comment-header"> 
           <cite id="dsq-cite-585"> <span id="dsq-author-user-585">PowerProgram</span> </cite> 
          </div> 
          <div id="dsq-comment-body-585" class="dsq-comment-body"> 
           <div id="dsq-comment-message-585" class="dsq-comment-message">
            <p>Hi Shamasis,</p> 
            <p>Your work is really wonderful.</p> 
            <p>Can you give me any fast ascending sort algorithm for the array of objects compare to classic algorithm.</p> 
            <p>I dont want to use the array.sort(), as my browser is old and generating various errors.</p> 
            <p>Classic Algorithm is this, which is very slow for 50K+ array.</p> 
            <p>function()<br> {<br> var l = this.length; temp;<br> for(var i=0; i&lt;l; i++)<br> {<br> for(var j=i+1; j Number(this[j].obj))<br> {<br> temp= this[j];<br> this[j]= this[i];<br> this[i] = temp;<br> }<br> }<br> }<br> return this;<br> }</p> 
            <p>I want to know if there is any other fast way we can sort this in asc order.</p> 
            <p>Thanks in advance <img src="http://www.shamasis.net/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;"></p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment odd alt depth-2" id="dsq-comment-586"> 
            <div id="dsq-comment-header-586" class="dsq-comment-header"> 
             <cite id="dsq-cite-586"> http://www.shamasis.in <span id="dsq-author-user-586">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-586" class="dsq-comment-body"> 
             <div id="dsq-comment-message-586" class="dsq-comment-message">
              <p>Youll speed me up if you can tell me if there is a specific pattern/nature of the array being sorted. Also, would help if you can convert it to pure JS. Also, what browser subset are we talking about? Im not as expert as you say <img src="http://www.shamasis.net/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;"></p> 
             </div> 
            </div> 
            <ul class="children"> 
             <li class="comment even depth-3" id="dsq-comment-587"> 
              <div id="dsq-comment-header-587" class="dsq-comment-header"> 
               <cite id="dsq-cite-587"> <span id="dsq-author-user-587">PowerProgram</span> </cite> 
              </div> 
              <div id="dsq-comment-body-587" class="dsq-comment-body"> 
               <div id="dsq-comment-message-587" class="dsq-comment-message">
                <p>I am actually sorting the array with one of the object of the element of array in ascending order. My array is around 60K elements.</p> 
                <p>We are using IE6, In this if we use default array.sort() to sort the array of objects of 60 K elements in it, it will give Number Expected error. If I use small array around 100 elements it will work fine. So I cannot use this for my big array. Some bug in old IE, they fixed in new IE versions</p> 
                <p>My array is like<br> this =[{X : 8, Y:2, Z:1}, {X:2,Y:1,Z:4},.]</p> 
                <p>So if I want to sort this array based on X value in ascending order, I use the classic method which is slow for 60K elements array.</p> 
                <p>Classic Method:</p> 
                <p>function()<br> {<br> var l = this.length; temp;<br> for(var i=0; i&lt;l; i++)<br> for(var j=i+1; j Number(this[j].X))<br> temp= this[j];<br> this[j]= this[i];<br> this[i] = temp;<br> return this;<br> }</p> 
                <p>I want to if there is any speed way to do this like the example you made for unique sort.</p> 
               </div> 
              </div> 
              <ul class="children"> 
               <li class="comment odd alt depth-4" id="dsq-comment-588"> 
                <div id="dsq-comment-header-588" class="dsq-comment-header"> 
                 <cite id="dsq-cite-588"> <span id="dsq-author-user-588">PowerProgram</span> </cite> 
                </div> 
                <div id="dsq-comment-body-588" class="dsq-comment-body"> 
                 <div id="dsq-comment-message-588" class="dsq-comment-message">
                  <p>Some how my program is messed up after I pasted in my previous reply, so I am taking image and uploading for better understanding. Sorry for the inconvenience.</p> 
                  <p>My Classic Method:</p> 
                 </div> 
                </div> </li>
               <!-- #comment-## --> 
              </ul>
              <!-- .children --> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
           <li class="comment even depth-2" id="dsq-comment-590"> 
            <div id="dsq-comment-header-590" class="dsq-comment-header"> 
             <cite id="dsq-cite-590"> http://geekyogi.com/ <span id="dsq-author-user-590">Om Shankar</span> </cite> 
            </div> 
            <div id="dsq-comment-body-590" class="dsq-comment-body"> 
             <div id="dsq-comment-message-590" class="dsq-comment-message">
              <p>// Array.sort uses modified quick sort algorithm in Chrome, and should be therefore the fastest<br> // In older browsers too, it will be faster than any devised method.</p> 
              <p>yourArray.sort(function(a, b) {<br> var textA = a.desirdeKey.toUpperCase();<br> var textB = b.desirdeKey.toUpperCase();<br> return (textA textB) ? 1 : 0;<br> });</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1" id="dsq-comment-589"> 
          <div id="dsq-comment-header-589" class="dsq-comment-header"> 
           <cite id="dsq-cite-589"> http://geekyogi.com/ <span id="dsq-author-user-589">Om Shankar</span> </cite> 
          </div> 
          <div id="dsq-comment-body-589" class="dsq-comment-body"> 
           <div id="dsq-comment-message-589" class="dsq-comment-message">
            <p>Sir, you did not devise this method. This technique exists since ages (before 2009 ofcourse).<br> Also, it can be done in a single for loop. I dont understand why are you using an extra loop to push items.</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment even depth-2" id="dsq-comment-591"> 
            <div id="dsq-comment-header-591" class="dsq-comment-header"> 
             <cite id="dsq-cite-591"> http://www.shamasis.in <span id="dsq-author-user-591">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-591" class="dsq-comment-body"> 
             <div id="dsq-comment-message-591" class="dsq-comment-message">
              <p>First, drop the sir. <img src="http://www.shamasis.net/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;"> Half the programming techniques existed even prior to the days of Herman Hollerith  we simply re-apply and re-invent  and on some rare occasions, re-discover. As we speak, typing from our bedrooms seems so natural when it wasnt as such a couple of decades back.</p> 
              <p>Right now, making thousands of function calls on arrays seem trivial when at one point of time IE 5.1 used to run on a 32MB RAM desktop and as such, some still care for the resources they consume.</p> 
              <p>Regarding the second loop, I think that is plain and genius strike of stupidity from my end! <img src="http://www.shamasis.net/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;"> But in retrospect, I do see the positives </p> 
              <p>1. In a bid to keep the original array immutable, the 2nd loop ensures that only the latest of the duplicates have been pushed in. How else would you ensure you push in the latest of duplicates?</p> 
              <p>2. Also, back in those days, function call, even Array.push, was expensive and as such statistically expecting a lesser number of items for unique ensured that we do not needlessly push or even perform logical operation during the first loop.</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="post pingback"> <p>Pingback: <a href="http://sevennet.org/2014/12/16/how-to-unique-values-in-an-array/" rel="external nofollow" class="url">How to: Unique values in an array | SevenNet</a>()</p> </li> 
         <!-- #comment-## --> 
         <li class="post pingback"> <p>Pingback: <a href="http://iust.pp.ua/2015/02/06/fixed-unique-values-in-an-array-programming-solution-fix/" rel="external nofollow" class="url">Fixed: Unique values in an array #programming #solution #fix | IT Info</a>()</p> </li> 
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-679"> 
          <div id="dsq-comment-header-679" class="dsq-comment-header"> 
           <cite id="dsq-cite-679"> <span id="dsq-author-user-679">Buzut</span> </cite> 
          </div> 
          <div id="dsq-comment-body-679" class="dsq-comment-body"> 
           <div id="dsq-comment-message-679" class="dsq-comment-message">
            <p>Although the post is quite old, the technique discussed here is still relevant. Thats why I created a jsPerf to compare 3 different methods.<br> <a href="http://jsperf.com/unique-array-indexof-vs-hash-sieving" rel="nofollow">http://jsperf.com/unique-array-indexof-vs-hash-sieving</a></p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1" id="dsq-comment-683"> 
          <div id="dsq-comment-header-683" class="dsq-comment-header"> 
           <cite id="dsq-cite-683"> <span id="dsq-author-user-683">Ryot Lee</span> </cite> 
          </div> 
          <div id="dsq-comment-body-683" class="dsq-comment-body"> 
           <div id="dsq-comment-message-683" class="dsq-comment-message">
            <p>I think the first unique method width object has a bit issue,when i put a = [1,1?,2,3], it will output [1?,2,3].</p> 
           </div> 
          </div> 
          <ul class="children"> 
           <li class="comment odd alt depth-2" id="dsq-comment-684"> 
            <div id="dsq-comment-header-684" class="dsq-comment-header"> 
             <cite id="dsq-cite-684"> http://www.shamasis.net/ <span id="dsq-author-user-684">Shamasis Bhattacharya</span> </cite> 
            </div> 
            <div id="dsq-comment-body-684" class="dsq-comment-body"> 
             <div id="dsq-comment-message-684" class="dsq-comment-message">
              <p>Intended. It takes the last entry for duplicates. You can easily revert to first occurrence by replacing <code>o[this[i]] = this[i];</code> by <code>!o[this[i]] &amp;&amp; (o[this[i]] = this[i]);</code></p> 
              <p>But that will be slightly slower.</p> 
             </div> 
            </div> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-704"> 
          <div id="dsq-comment-header-704" class="dsq-comment-header"> 
           <cite id="dsq-cite-704"> http://blog.go-here.nl <span id="dsq-author-user-704">gabydewilde</span> </cite> 
          </div> 
          <div id="dsq-comment-body-704" class="dsq-comment-body"> 
           <div id="dsq-comment-message-704" class="dsq-comment-message">
            <p>var b = new Set(a);</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1" id="dsq-comment-727"> 
          <div id="dsq-comment-header-727" class="dsq-comment-header"> 
           <cite id="dsq-cite-727"> <span id="dsq-author-user-727">Firipu</span> </cite> 
          </div> 
          <div id="dsq-comment-body-727" class="dsq-comment-body"> 
           <div id="dsq-comment-message-727" class="dsq-comment-message">
            <p>Try this take, it finds unique items and aggregate a specified field of the function.</p> 
            <p>function uniqByAggregate(arr, uniqField, aggrField, res = arr.splice()) {<br> for (let i = 0, j = 1; i &lt; res.length  1; ++j, ((!(j &lt; res.length)) ? (++i, j = i + 1) : null))(res[i][uniqField] === res[j][uniqField]) ? (res[i][aggrField] += (res.splice(j, 1))[0][aggrField], j) : null;<br> return res;<br> }</p> 
           </div> 
          </div> </li>
         <!-- #comment-## --> 
        </ul> 
       </div> 
      </div> 
      <nav class="navigation post-navigation" role="navigation"> 
       <h2 class="screen-reader-text">Post navigation</h2> 
       <div class="nav-links">
        <div class="nav-previous">
         <a href="http://www.shamasis.net/2009/08/notepad-mobile-1-6-released/" rel="prev"><span class="meta-nav" aria-hidden="true">Previous</span> <span class="screen-reader-text">Previous post:</span> <span class="post-title">Notepad Mobile 1.6 Released</span></a>
        </div>
        <div class="nav-next">
         <a href="http://www.shamasis.net/2009/09/humence-sans-foetus/" rel="next"><span class="meta-nav" aria-hidden="true">Next</span> <span class="screen-reader-text">Next post:</span> <span class="post-title">Humence Sans Foetus</span></a>
        </div>
       </div> 
      </nav> 
     </main>
     <!-- .site-main --> 
    </div>
    <!-- .content-area --> 
   </div>
   <!-- .site-content --> 
   <footer id="colophon" class="site-footer" role="contentinfo"> 
    <div class="site-info"> 
     <a href="https://wordpress.org/">Proudly powered by WordPress</a> 
    </div>
    <!-- .site-info --> 
   </footer>
   <!-- .site-footer --> 
  </div>
  <!-- .site --> 
  <script type="text/javascript">
var colomatduration = 'fast';
var colomatslideEffect = 'slideFade';
</script> 
  <noscript>
   <iframe src="//www.googletagmanager.com/ns.html?id=GTM-MQVK26" height="0" width="0" style="display:none;visibility:hidden"></iframe>
  </noscript> 
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-MQVK26');</script> 
  <!-- End Google Tag Manager -->
  <script type="text/javascript" src="http://www.shamasis.net/wp-content/plugins/jquery-collapse-o-matic/js/collapse.js?ver=1.5.14"></script> 
  <script type="text/javascript" src="http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201711"></script> 
  <script type="text/javascript" src="http://www.shamasis.net/wp-content/themes/twentyfifteen/js/skip-link-focus-fix.js?ver=20141010"></script> 
  <script type="text/javascript" src="http://www.shamasis.net/wp-includes/js/comment-reply.min.js?ver=4.2.13"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var screenReaderText = {"expand":"<span class=\"screen-reader-text\">expand child menu<\/span>","collapse":"<span class=\"screen-reader-text\">collapse child menu<\/span>"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.shamasis.net/wp-content/themes/twentyfifteen/js/functions.js?ver=20141212"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var embedVars = {"disqusConfig":{"platform":"wordpress@4.2.13","language":""},"disqusIdentifier":"976 http:\/\/www.shamasis.in\/?p=976","disqusShortname":"shamasis","disqusTitle":"Fast Algorithm To Find Unique Items in JavaScript Array","disqusUrl":"http:\/\/www.shamasis.net\/2009\/09\/fast-algorithm-to-find-unique-items-in-javascript-array\/","options":{"manualSync":false},"postId":"976"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.shamasis.net/wp-content/plugins/disqus-comment-system/media/js/disqus.js?ver=4.2.13"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var countVars = {"disqusShortname":"shamasis"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.shamasis.net/wp-content/plugins/disqus-comment-system/media/js/count.js?ver=4.2.13"></script> 
  <script type="text/javascript" src="http://stats.wp.com/e-201711.js" async defer></script> 
  <script type="text/javascript">
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.4.3',blog:'6821906',post:'976',tz:'5.5'} ]);
	_stq.push([ 'clickTrackerInit', '6821906', '976' ]);
</script>   
  <!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Page Caching using disk: enhanced
Object Caching 3229/3338 objects using disk

 Served from: www.shamasis.net @ 2017-03-19 12:28:28 by W3 Total Cache -->
 </body>
</html>