<!doctype html>
<html>
 <head> 
  <meta charset="utf-8"> 
  <title>
  Class: AWS.SNS
  
    — AWS SDK for JavaScript
  
</title> 
  <link rel="stylesheet" href="../css/style.css" type="text/css" media="screen" charset="utf-8"> 
  <link rel="stylesheet" href="../css/common.css" type="text/css" media="screen" charset="utf-8"> 
  <link rel="stylesheet" href="../css/highlight.github.css" type="text/css" media="screen" charset="utf-8"> 
  <script type="text/javascript" charset="utf-8">
  pathId = "AWS.SNS";
  relpath = '../';
</script> 
  <script type="text/javascript" charset="utf-8" src="../js/jquery.js"></script> 
  <script type="text/javascript" charset="utf-8" src="../js/app.js"></script> 
  <script type="text/javascript" charset="utf-8" src="../js/highlight.pack.js"></script> 
  <script type="text/javascript" charset="utf-8">
  hljs.initHighlightingOnLoad();
</script> 
 </head> 
 <body> 
  <div class="nav_wrap"> 
   <iframe id="nav" src="../class_list.html"></iframe> 
   <div id="resizer"></div> 
  </div> 
  <div id="main" tabindex="-1"> 
   <div id="header"> 
    <div id="menu"> 
     <a href="../_index.html">Index (S)</a> » 
     <span class="title"><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span></span> » 
     <span class="title">SNS</span> 
    </div> 
    <div id="search"> 
     <a class="full_list_link" id="class_list_link" href="../class_list.html"> 
      <svg width="24" height="24"> 
       <rect x="0" y="4" width="24" height="4" rx="1" ry="1"></rect> 
       <rect x="0" y="12" width="24" height="4" rx="1" ry="1"></rect> 
       <rect x="0" y="20" width="24" height="4" rx="1" ry="1"></rect> 
      </svg> </a> 
    </div> 
    <div class="clear"></div> 
   </div> 
   <iframe id="search_frame"></iframe> 
   <div id="content"> 
    <!--REGION_DISCLAIMER_DO_NOT_REMOVE--> 
    <h1>Class: AWS.SNS </h1> 
    <div class="box_info"> 
     <dl> 
      <dt>
       Inherits:
      </dt> 
      <dd> 
       <span class="inheritName"><span class="object_link"><a href="Service.html" title="AWS.Service (class)">AWS.Service</a></span></span> 
       <ul class="fullTree"> 
        <li>Object</li> 
        <li class="next"><span class="object_link"><a href="Service.html" title="AWS.Service (class)">AWS.Service</a></span></li> 
        <li class="next">AWS.SNS</li> 
       </ul> 
       <a href="#" class="inheritanceTree">show all</a> 
      </dd> 
     </dl> 
     <dl> 
      <dt>
       Identifier:
      </dt> 
      <dd>
       sns
      </dd> 
     </dl> 
     <dl> 
      <dt>
       API Version:
      </dt> 
      <dd>
       2010-03-31
      </dd> 
     </dl> 
     <dl> 
      <dt>
       Defined in:
      </dt> 
      <dd>
       (unknown)
      </dd> 
     </dl> 
    </div> 
    <h2>Overview</h2>
    <div class="docstring"> 
     <div class="discussion"> 
      <p>Constructs a service interface object. Each API operation is exposed as a function on service.</p> 
      <h3>Sending a Request Using SNS</h3> 
      <pre class="code javascript"><code class="javascript">var sns = new AWS.SNS();
sns.addPermission(params, function (err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});
</code></pre> 
      <h3>Locking the API Version</h3> 
      <p>In order to ensure that the SNS object uses this specific API, you can construct the object by passing the <code>apiVersion</code> option to the constructor:</p> 
      <pre class="code javascript"><code class="javascript">var sns = new AWS.SNS({apiVersion: '2010-03-31'});
</code></pre> 
      <p>You can also set the API version globally in <code>AWS.config.apiVersions</code> using the <strong>sns</strong> service identifier:</p> 
      <pre class="code javascript"><code class="javascript">AWS.config.apiVersions = {
  sns: '2010-03-31',
  // other service API versions
};

var sns = new AWS.SNS();
</code></pre> 
     </div> 
    </div> 
    <div class="tags"> 
     <p class="tag_title">Version:</p> 
     <ul class="version"> 
      <li> 
       <div class="inline">
        <p>2010-03-31</p> 
       </div> </li> 
     </ul> 
    </div> 
    <h2>Constructor Summary <small><a href="#" class="summary_toggle">collapse</a></small> </h2> 
    <ul class="summary"> 
     <li class="public "> <span class="summary_signature"> <a href="#constructor-property" title="AWS.SNS">new <strong>AWS.SNS</strong>(options = {}) ? Object </a> </span> <span class="note title constructor">constructor</span> <span class="summary_desc">
       <div class="inline">
        <p>Constructs a service object.</p> 
       </div></span> </li> 
    </ul> 
    <h2> Property Summary <small><a href="#" class="summary_toggle">collapse</a></small> </h2> 
    <ul class="summary"> 
     <li class="public "> <span class="summary_signature"> <a href="#endpoint-property" title="endpoint"><strong>endpoint</strong> ? AWS.Endpoint </a> </span> <span class="note title readonly">readwrite</span> <span class="summary_desc">
       <div class="inline">
        <p>An Endpoint object representing the endpoint URL for service requests.</p> 
       </div></span> </li> 
    </ul> 
    <h3 class="inherited">Properties inherited from <span class="object_link"><a href="Service.html" title="AWS.Service (class)">AWS.Service</a></span></h3> 
    <p class="inherited"><span class="object_link"><a href="Service.html#apiVersions-property" title="AWS.Service.apiVersions (property)">apiVersions</a></span></p> 
    <h2> Method Summary <small><a href="#" class="summary_toggle">collapse</a></small> </h2> 
    <ul class="summary"> 
     <li class="public "> <span class="summary_signature"> <a href="#addPermission-property" title="addPermission"><strong>addPermission</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Adds a statement to a topic's access control policy, granting access for the specified AWS accounts to the specified actions.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#checkIfPhoneNumberIsOptedOut-property" title="checkIfPhoneNumberIsOptedOut"><strong>checkIfPhoneNumberIsOptedOut</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your account.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#confirmSubscription-property" title="confirmSubscription"><strong>confirmSubscription</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Verifies an endpoint owner's intent to receive messages by validating the token sent to the endpoint by an earlier Subscribe action.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#createPlatformApplication-property" title="createPlatformApplication"><strong>createPlatformApplication</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Creates a platform application object for one of the supported push notification services, such as APNS and GCM, to which devices and mobile apps may register.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#createPlatformEndpoint-property" title="createPlatformEndpoint"><strong>createPlatformEndpoint</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM and APNS.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#createTopic-property" title="createTopic"><strong>createTopic</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Creates a topic to which notifications can be published.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#deleteEndpoint-property" title="deleteEndpoint"><strong>deleteEndpoint</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Deletes the endpoint for a device and mobile app from Amazon SNS.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#deletePlatformApplication-property" title="deletePlatformApplication"><strong>deletePlatformApplication</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Deletes a platform application object for one of the supported push notification services, such as APNS and GCM.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#deleteTopic-property" title="deleteTopic"><strong>deleteTopic</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Deletes a topic and all its subscriptions.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#getEndpointAttributes-property" title="getEndpointAttributes"><strong>getEndpointAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM and APNS.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#getPlatformApplicationAttributes-property" title="getPlatformApplicationAttributes"><strong>getPlatformApplicationAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#getSMSAttributes-property" title="getSMSAttributes"><strong>getSMSAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Returns the settings for sending SMS messages from your account.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#getSubscriptionAttributes-property" title="getSubscriptionAttributes"><strong>getSubscriptionAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Returns all of the properties of a subscription.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#getTopicAttributes-property" title="getTopicAttributes"><strong>getTopicAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Returns all of the properties of a topic.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#listEndpointsByPlatformApplication-property" title="listEndpointsByPlatformApplication"><strong>listEndpointsByPlatformApplication</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM and APNS.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#listPhoneNumbersOptedOut-property" title="listPhoneNumbersOptedOut"><strong>listPhoneNumbersOptedOut</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#listPlatformApplications-property" title="listPlatformApplications"><strong>listPlatformApplications</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Lists the platform application objects for the supported push notification services, such as APNS and GCM.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#listSubscriptions-property" title="listSubscriptions"><strong>listSubscriptions</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Returns a list of the requester's subscriptions.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#listSubscriptionsByTopic-property" title="listSubscriptionsByTopic"><strong>listSubscriptionsByTopic</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Returns a list of the subscriptions to a specific topic.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#listTopics-property" title="listTopics"><strong>listTopics</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Returns a list of the requester's topics.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#optInPhoneNumber-property" title="optInPhoneNumber"><strong>optInPhoneNumber</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Use this request to opt in a phone number that is opted out, which enables you to resume sending SMS messages to the number.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#publish-property" title="publish"><strong>publish</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Sends a message to all of a topic's subscribed endpoints.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#removePermission-property" title="removePermission"><strong>removePermission</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Removes a statement from a topic's access control policy.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#setEndpointAttributes-property" title="setEndpointAttributes"><strong>setEndpointAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM and APNS.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#setPlatformApplicationAttributes-property" title="setPlatformApplicationAttributes"><strong>setPlatformApplicationAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#setSMSAttributes-property" title="setSMSAttributes"><strong>setSMSAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Use this request to set the default settings for sending SMS messages and receiving daily SMS usage reports.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#setSubscriptionAttributes-property" title="setSubscriptionAttributes"><strong>setSubscriptionAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Allows a subscription owner to set an attribute of the topic to a new value.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#setTopicAttributes-property" title="setTopicAttributes"><strong>setTopicAttributes</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Allows a topic owner to set an attribute of the topic to a new value.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#subscribe-property" title="subscribe"><strong>subscribe</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Prepares to subscribe an endpoint by sending the endpoint a confirmation message.</p> 
       </div></span> </li> 
     <li class="public "> <span class="summary_signature"> <a href="#unsubscribe-property" title="unsubscribe"><strong>unsubscribe</strong>(params = {}, callback) ? AWS.Request </a> </span> <span class="summary_desc">
       <div class="inline">
        <p>Deletes a subscription.</p> 
       </div></span> </li> 
    </ul> 
    <h3 class="inherited">Methods inherited from <span class="object_link"><a href="Service.html" title="AWS.Service (class)">AWS.Service</a></span></h3> 
    <p class="inherited"><span class="object_link"><a href="Service.html#makeRequest-property" title="AWS.Service.makeRequest (property)">makeRequest</a></span>, <span class="object_link"><a href="Service.html#makeUnauthenticatedRequest-property" title="AWS.Service.makeUnauthenticatedRequest (property)">makeUnauthenticatedRequest</a></span>, <span class="object_link"><a href="Service.html#waitFor-property" title="AWS.Service.waitFor (property)">waitFor</a></span>, <span class="object_link"><a href="Service.html#setupRequestListeners-property" title="AWS.Service.setupRequestListeners (property)">setupRequestListeners</a></span>, <span class="object_link"><a href="Service.html#defineService-property" title="AWS.Service.defineService (property)">defineService</a></span></p> 
    <div id="constructor_details" class="method_details_list"> 
     <h2>Constructor Details</h2> 
     <div class="method_details first"> 
      <h3 class="signature first" id="constructor-property"> new <strong>AWS.SNS</strong>(options = {}) ? <tt>Object</tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Constructs a service object. This object has one method for each API operation.</p> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Constructing a SNS object</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var sns = new AWS.SNS({apiVersion: '2010-03-31'});</code></pre> 
       </div> 
       <p class="tag_title">Options Hash (<tt>options</tt>):</p> 
       <ul class="option"> 
        <li> <span class="name">params</span> <span class="type">(<tt>map</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>An optional map of parameters to bind to every request sent by this service object. For more information on bound parameters, see <a href="/AWSJavaScriptSDK/guide/node-services.html#Bound_Parameters">"Working with Services" in the Getting Started Guide</a>.</p> 
         </div> </li> 
        <li> <span class="name">endpoint</span> <span class="type">(<tt>String</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>The endpoint URI to send requests to. The default endpoint is built from the configured <code>region</code>. The endpoint should be a string like <code>'https://{service}.{region}.amazonaws.com'</code>.</p> 
         </div> </li> 
        <li> <span class="name">accessKeyId</span> <span class="type">(<tt>String</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>your AWS access key ID.</p> 
         </div> </li> 
        <li> <span class="name">secretAccessKey</span> <span class="type">(<tt>String</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>your AWS secret access key.</p> 
         </div> </li> 
        <li> <span class="name">sessionToken</span> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Credentials.html" title="AWS.Credentials (class)">Credentials</a></span></tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>the optional AWS session token to sign requests with.</p> 
         </div> </li> 
        <li> <span class="name">credentials</span> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Credentials.html" title="AWS.Credentials (class)">Credentials</a></span></tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>the AWS credentials to sign requests with. You can either specify this object, or specify the accessKeyId and secretAccessKey options directly.</p> 
         </div> </li> 
        <li> <span class="name">credentialProvider</span> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="CredentialProviderChain.html" title="AWS.CredentialProviderChain (class)">CredentialProviderChain</a></span></tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>the provider chain used to resolve credentials if no static <code>credentials</code> property is set.</p> 
         </div> </li> 
        <li> <span class="name">region</span> <span class="type">(<tt>String</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>the region to send service requests to. See AWS.SNS.region for more information.</p> 
         </div> </li> 
        <li> <span class="name">maxRetries</span> <span class="type">(<tt>Integer</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>the maximum amount of retries to attempt with a request. See AWS.SNS.maxRetries for more information.</p> 
         </div> </li> 
        <li> <span class="name">maxRedirects</span> <span class="type">(<tt>Integer</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>the maximum amount of redirects to follow with a request. See AWS.SNS.maxRedirects for more information.</p> 
         </div> </li> 
        <li> <span class="name">sslEnabled</span> <span class="type">(<tt>Boolean</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether to enable SSL for requests.</p> 
         </div> </li> 
        <li> <span class="name">paramValidation</span> <span class="type">(<tt>Boolean|map</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether input parameters should be validated against the operation description before sending the request. Defaults to true. Pass a map to enable any of the following specific validation features:</p> 
          <ul> 
           <li><strong>min</strong> [Boolean] — Validates that a value meets the min constraint. This is enabled by default when paramValidation is set to <code>true</code>.</li> 
           <li><strong>max</strong> [Boolean] — Validates that a value meets the max constraint.</li> 
           <li><strong>pattern</strong> [Boolean] — Validates that a string value matches a regular expression.</li> 
           <li><strong>enum</strong> [Boolean] — Validates that a string value matches one of the allowable enum values.</li> 
          </ul> 
         </div> </li> 
        <li> <span class="name">computeChecksums</span> <span class="type">(<tt>Boolean</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether to compute checksums for payload bodies when the service accepts it (currently supported in S3 only)</p> 
         </div> </li> 
        <li> <span class="name">convertResponseTypes</span> <span class="type">(<tt>Boolean</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether types are converted when parsing response data. Currently only supported for JSON based services. Turning this off may improve performance on large response payloads. Defaults to <code>true</code>.</p> 
         </div> </li> 
        <li> <span class="name">correctClockSkew</span> <span class="type">(<tt>Boolean</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether to apply a clock skew correction and retry requests that fail because of an skewed client clock. Defaults to <code>false</code>.</p> 
         </div> </li> 
        <li> <span class="name">s3ForcePathStyle</span> <span class="type">(<tt>Boolean</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether to force path style URLs for S3 objects.</p> 
         </div> </li> 
        <li> <span class="name">s3BucketEndpoint</span> <span class="type">(<tt>Boolean</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether the provided endpoint addresses an individual bucket (false if it addresses the root API endpoint). Note that setting this configuration option requires an <code>endpoint</code> to be provided explicitly to the service constructor.</p> 
         </div> </li> 
        <li> <span class="name">s3DisableBodySigning</span> <span class="type">(<tt>Boolean</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether S3 body signing should be disabled when using signature version <code>v4</code>. Body signing can only be disabled when using https. Defaults to <code>true</code>.</p> 
         </div> </li> 
        <li> <span class="name">retryDelayOptions</span> <span class="type">(<tt>map</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>A set of options to configure the retry delay on retryable errors. Currently supported options are:</p> 
          <ul> 
           <li><strong>base</strong> [Integer] — The base number of milliseconds to use in the exponential backoff for operation retries. Defaults to 100 ms for all services except DynamoDB, where it defaults to 50ms.</li> 
           <li><strong>customBackoff </strong> [function] — A custom function that accepts a retry count and returns the amount of time to delay in milliseconds. The <code>base</code> option will be ignored if this option is supplied.</li> 
          </ul> 
         </div> </li> 
        <li> <span class="name">httpOptions</span> <span class="type">(<tt>map</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>A set of options to pass to the low-level HTTP request. Currently supported options are:</p> 
          <ul> 
           <li><strong>proxy</strong> [String] — the URL to proxy requests through</li> 
           <li><strong>agent</strong> [http.Agent, https.Agent] — the Agent object to perform HTTP requests with. Used for connection pooling. Defaults to the global agent (<code>http.globalAgent</code>) for non-SSL connections. Note that for SSL connections, a special Agent object is used in order to enable peer certificate verification. This feature is only available in the Node.js environment.</li> 
           <li><strong>connectTimeout</strong> [Integer] — Sets the socket to timeout after failing to establish a connection with the server after <code>connectTimeout</code> milliseconds. This timeout has no effect once a socket connection has been established.</li> 
           <li><strong>timeout</strong> [Integer] — Sets the socket to timeout after timeout milliseconds of inactivity on the socket. Defaults to two minutes (120000).</li> 
           <li><strong>xhrAsync</strong> [Boolean] — Whether the SDK will send asynchronous HTTP requests. Used in the browser environment only. Set to false to send requests synchronously. Defaults to true (async on).</li> 
           <li><strong>xhrWithCredentials</strong> [Boolean] — Sets the "withCredentials" property of an XMLHttpRequest object. Used in the browser environment only. Defaults to false.</li> 
          </ul> 
         </div> </li> 
        <li> <span class="name">apiVersion</span> <span class="type">(<tt>String</tt>, <tt>Date</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>a String in YYYY-MM-DD format (or a date) that represents the latest possible API version that can be used in all services (unless overridden by <code>apiVersions</code>). Specify 'latest' to use the latest possible version.</p> 
         </div> </li> 
        <li> <span class="name">apiVersions</span> <span class="type">(<tt>map&lt;String, String|Date&gt;</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>a map of service identifiers (the lowercase service class name) with the API version to use when instantiating a service. Specify 'latest' for each individual that can use the latest available version.</p> 
         </div> </li> 
        <li> <span class="name">logger</span> <span class="type">(<tt>#write</tt>, <tt>#log</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>an object that responds to .write() (like a stream) or .log() (like the console object) in order to log information about requests</p> 
         </div> </li> 
        <li> <span class="name">systemClockOffset</span> <span class="type">(<tt>Number</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>an offset value in milliseconds to apply to all signing times. Use this to compensate for clock skew when your system may be out of sync with the service time. Note that this configuration option can only be applied to the global <code>AWS.config</code> object and cannot be overridden in service-specific configuration. Defaults to 0 milliseconds.</p> 
         </div> </li> 
        <li> <span class="name">signatureVersion</span> <span class="type">(<tt>String</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>the signature version to sign requests with (overriding the API configuration). Possible values are: 'v2', 'v3', 'v4'.</p> 
         </div> </li> 
        <li> <span class="name">signatureCache</span> <span class="type">(<tt>Boolean</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether the signature to sign requests with (overriding the API configuration) is cached. Only applies to the signature version 'v4'. Defaults to <code>true</code>.</p> 
         </div> </li> 
        <li> <span class="name">dynamoDbCrc32</span> <span class="type">(<tt>Boolean</tt>)</span> <span class="default"> </span> — 
         <div class="inline">
          <p>whether to validate the CRC32 checksum of HTTP response bodies returned by DynamoDB. Default: <code>true</code>.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
    </div> 
    <div id="prop_details" class="method_details"> 
     <h2>Property Details</h2> 
     <div class="method_details first"> 
      <h3 class="signature first" id="endpoint-property"> <strong>endpoint</strong> ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Endpoint.html" title="AWS.Endpoint (class)">Endpoint</a></span></tt> <span class="extras">(readwrite)</span> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Returns an Endpoint object representing the endpoint URL for service requests.</p> 
       </div> 
      </div> 
      <div class="tags"> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Endpoint.html" title="AWS.Endpoint (class)">Endpoint</a></span></tt>)</span> — 
         <div class="inline">
          <p>an Endpoint object representing the endpoint URL for service requests.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
    </div> 
    <div id="method_details" class="method_details"> 
     <h2>Method Details</h2> 
     <div class="method_details first"> 
      <h3 class="signature first" id="addPermission-property"> <strong>addPermission</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Adds a statement to a topic's access control policy, granting access for the specified AWS accounts to the specified actions.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/AddPermission">AddPermission</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the addPermission operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  AWSAccountId: [ /* required */
    'STRING_VALUE',
    /* more items */
  ],
  ActionName: [ /* required */
    'STRING_VALUE',
    /* more items */
  ],
  Label: 'STRING_VALUE', /* required */
  TopicArn: 'STRING_VALUE' /* required */
};
sns.addPermission(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the topic whose access control policy you wish to modify.</p></li> 
           <li><code>Label</code> — (<code>String</code>) <p>A unique identifier for the new policy statement.</p></li> 
           <li><code>AWSAccountId</code> — (<code>Array&lt;String&gt;</code>) <p>The AWS account IDs of the users (principals) who will be given access to the specified actions. The users must have AWS accounts, but do not need to be signed up for this service.</p></li> 
           <li><code>ActionName</code> — (<code>Array&lt;String&gt;</code>) <p>The action you want to allow for the specified principal(s).</p> <p>Valid values: any Amazon SNS action name.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="checkIfPhoneNumberIsOptedOut-property"> <strong>checkIfPhoneNumberIsOptedOut</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your account. You cannot send SMS messages to a number that is opted out.</p> 
        <p> </p>
        <p>To resume sending messages, you can opt in the number by using the <code>OptInPhoneNumber</code> action.</p>
        <p></p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/CheckIfPhoneNumberIsOptedOut">CheckIfPhoneNumberIsOptedOut</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the checkIfPhoneNumberIsOptedOut operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  phoneNumber: 'STRING_VALUE' /* required */
};
sns.checkIfPhoneNumberIsOptedOut(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>phoneNumber</code> — (<code>String</code>) <p>The phone number for which you want to check the opt out status.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>isOptedOut</code> — (<code>Boolean</code>) <p>Indicates whether the phone number is opted out:</p> 
               <ul> 
                <li> <p> <code>true</code> – The phone number is opted out, meaning you cannot publish SMS messages to it.</p> </li> 
                <li> <p> <code>false</code> – The phone number is opted in, meaning you can publish SMS messages to it.</p> </li> 
               </ul></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="confirmSubscription-property"> <strong>confirmSubscription</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Verifies an endpoint owner's intent to receive messages by validating the token sent to the endpoint by an earlier <code>Subscribe</code> action. If the token is valid, the action creates a new subscription and returns its Amazon Resource Name (ARN). This call requires an AWS signature only when the <code>AuthenticateOnUnsubscribe</code> flag is set to "true".</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/ConfirmSubscription">ConfirmSubscription</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the confirmSubscription operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  Token: 'STRING_VALUE', /* required */
  TopicArn: 'STRING_VALUE', /* required */
  AuthenticateOnUnsubscribe: 'STRING_VALUE'
};
sns.confirmSubscription(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the topic for which you wish to confirm a subscription.</p></li> 
           <li><code>Token</code> — (<code>String</code>) <p>Short-lived token sent to an endpoint during the <code>Subscribe</code> action.</p></li> 
           <li><code>AuthenticateOnUnsubscribe</code> — (<code>String</code>) <p>Disallows unauthenticated unsubscribes of the subscription. If the value of this parameter is <code>true</code> and the request has an AWS signature, then only the topic owner and the subscription owner can unsubscribe the endpoint. The unsubscribe action requires AWS authentication. </p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>SubscriptionArn</code> — (<code>String</code>) <p>The ARN of the created subscription.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="createPlatformApplication-property"> <strong>createPlatformApplication</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Creates a platform application object for one of the supported push notification services, such as APNS and GCM, to which devices and mobile apps may register. You must specify PlatformPrincipal and PlatformCredential attributes when using the <code>CreatePlatformApplication</code> action. The PlatformPrincipal is received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is "SSL certificate". For GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is "client id". The PlatformCredential is also received from the notification service. For WNS, PlatformPrincipal is "Package Security Identifier". For MPNS, PlatformPrincipal is "TLS certificate". For Baidu, PlatformPrincipal is "API key".</p> 
        <p> </p>
        <p>For APNS/APNS_SANDBOX, PlatformCredential is "private key". For GCM, PlatformCredential is "API key". For ADM, PlatformCredential is "client secret". For WNS, PlatformCredential is "secret key". For MPNS, PlatformCredential is "private key". For Baidu, PlatformCredential is "secret key". The PlatformApplicationArn that is returned when using <code>CreatePlatformApplication</code> is then used as an attribute for the <code>CreatePlatformEndpoint</code> action. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. For more information about obtaining the PlatformPrincipal and PlatformCredential for each of the supported push notification services, see <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-apns.html">Getting Started with Apple Push Notification Service</a>, <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-adm.html">Getting Started with Amazon Device Messaging</a>, <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-baidu.html">Getting Started with Baidu Cloud Push</a>, <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-gcm.html">Getting Started with Google Cloud Messaging for Android</a>, <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-mpns.html">Getting Started with MPNS</a>, or <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-wns.html">Getting Started with WNS</a>. </p>
        <p></p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/CreatePlatformApplication">CreatePlatformApplication</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the createPlatformApplication operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  Attributes: { /* required */
    '&lt;String&gt;': 'STRING_VALUE',
    /* '&lt;String&gt;': ... */
  },
  Name: 'STRING_VALUE', /* required */
  Platform: 'STRING_VALUE' /* required */
};
sns.createPlatformApplication(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>Name</code> — (<code>String</code>) <p>Application names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, hyphens, and periods, and must be between 1 and 256 characters long.</p></li> 
           <li><code>Platform</code> — (<code>String</code>) <p>The following platforms are supported: ADM (Amazon Device Messaging), APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM (Google Cloud Messaging).</p></li> 
           <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>For a list of attributes, see <a href="http://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html">SetPlatformApplicationAttributes</a> </p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>PlatformApplicationArn</code> — (<code>String</code>) <p>PlatformApplicationArn is returned.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="createPlatformEndpoint-property"> <strong>createPlatformEndpoint</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM and APNS. <code>CreatePlatformEndpoint</code> requires the PlatformApplicationArn that is returned from <code>CreatePlatformApplication</code>. The EndpointArn that is returned when using <code>CreatePlatformEndpoint</code> can then be used by the <code>Publish</code> action to send a message to a mobile app or by the <code>Subscribe</code> action for subscription to a topic. The <code>CreatePlatformEndpoint</code> action is idempotent, so if the requester already owns an endpoint with the same device token and attributes, that endpoint's ARN is returned without creating a new endpoint. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> 
        <p> </p>
        <p>When using <code>CreatePlatformEndpoint</code> with Baidu, two attributes must be provided: ChannelId and UserId. The token field must also contain the ChannelId. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html">Creating an Amazon SNS Endpoint for Baidu</a>. </p>
        <p></p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/CreatePlatformEndpoint">CreatePlatformEndpoint</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the createPlatformEndpoint operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  PlatformApplicationArn: 'STRING_VALUE', /* required */
  Token: 'STRING_VALUE', /* required */
  Attributes: {
    '&lt;String&gt;': 'STRING_VALUE',
    /* '&lt;String&gt;': ... */
  },
  CustomUserData: 'STRING_VALUE'
};
sns.createPlatformEndpoint(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>PlatformApplicationArn</code> — (<code>String</code>) <p>PlatformApplicationArn returned from CreatePlatformApplication is used to create a an endpoint.</p></li> 
           <li><code>Token</code> — (<code>String</code>) <p>Unique identifier created by the notification service for an app on a device. The specific name for Token will vary, depending on which notification service is being used. For example, when using APNS as the notification service, you need the device token. Alternatively, when using GCM or ADM, the device token equivalent is called the registration ID.</p></li> 
           <li><code>CustomUserData</code> — (<code>String</code>) <p>Arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.</p></li> 
           <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>For a list of attributes, see <a href="http://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html">SetEndpointAttributes</a>.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>EndpointArn</code> — (<code>String</code>) <p>EndpointArn returned from CreateEndpoint action.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="createTopic-property"> <strong>createTopic</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Creates a topic to which notifications can be published. Users can create at most 100,000 topics. For more information, see <a href="http://aws.amazon.com/sns/">http://aws.amazon.com/sns</a>. This action is idempotent, so if the requester already owns a topic with the specified name, that topic's ARN is returned without creating a new topic.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/CreateTopic">CreateTopic</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the createTopic operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  Name: 'STRING_VALUE' /* required */
};
sns.createTopic(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>Name</code> — (<code>String</code>) <p>The name of the topic you want to create.</p> <p>Constraints: Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>TopicArn</code> — (<code>String</code>) <p>The Amazon Resource Name (ARN) assigned to the created topic.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="deleteEndpoint-property"> <strong>deleteEndpoint</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Deletes the endpoint for a device and mobile app from Amazon SNS. This action is idempotent. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> 
        <p> </p>
        <p>When you delete an endpoint that is also subscribed to a topic, then you must also unsubscribe the endpoint from the topic.</p>
        <p></p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/DeleteEndpoint">DeleteEndpoint</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the deleteEndpoint operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  EndpointArn: 'STRING_VALUE' /* required */
};
sns.deleteEndpoint(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>EndpointArn</code> — (<code>String</code>) <p>EndpointArn of endpoint to delete.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="deletePlatformApplication-property"> <strong>deletePlatformApplication</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Deletes a platform application object for one of the supported push notification services, such as APNS and GCM. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/DeletePlatformApplication">DeletePlatformApplication</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the deletePlatformApplication operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  PlatformApplicationArn: 'STRING_VALUE' /* required */
};
sns.deletePlatformApplication(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>PlatformApplicationArn</code> — (<code>String</code>) <p>PlatformApplicationArn of platform application object to delete.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="deleteTopic-property"> <strong>deleteTopic</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Deletes a topic and all its subscriptions. Deleting a topic might prevent some messages previously sent to the topic from being delivered to subscribers. This action is idempotent, so deleting a topic that does not exist does not result in an error.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/DeleteTopic">DeleteTopic</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the deleteTopic operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  TopicArn: 'STRING_VALUE' /* required */
};
sns.deleteTopic(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the topic you want to delete.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="getEndpointAttributes-property"> <strong>getEndpointAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM and APNS. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/GetEndpointAttributes">GetEndpointAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the getEndpointAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  EndpointArn: 'STRING_VALUE' /* required */
};
sns.getEndpointAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>EndpointArn</code> — (<code>String</code>) <p>EndpointArn for GetEndpointAttributes input.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>Attributes include the following:</p> 
               <ul> 
                <li> <p> <code>CustomUserData</code> -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.</p> </li> 
                <li> <p> <code>Enabled</code> -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.</p> </li> 
                <li> <p> <code>Token</code> -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.</p> </li> 
               </ul></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="getPlatformApplicationAttributes-property"> <strong>getPlatformApplicationAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/GetPlatformApplicationAttributes">GetPlatformApplicationAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the getPlatformApplicationAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  PlatformApplicationArn: 'STRING_VALUE' /* required */
};
sns.getPlatformApplicationAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>PlatformApplicationArn</code> — (<code>String</code>) <p>PlatformApplicationArn for GetPlatformApplicationAttributesInput.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>Attributes include the following:</p> 
               <ul> 
                <li> <p> <code>EventEndpointCreated</code> -- Topic ARN to which EndpointCreated event notifications should be sent.</p> </li> 
                <li> <p> <code>EventEndpointDeleted</code> -- Topic ARN to which EndpointDeleted event notifications should be sent.</p> </li> 
                <li> <p> <code>EventEndpointUpdated</code> -- Topic ARN to which EndpointUpdate event notifications should be sent.</p> </li> 
                <li> <p> <code>EventDeliveryFailure</code> -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.</p> </li> 
               </ul></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="getSMSAttributes-property"> <strong>getSMSAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Returns the settings for sending SMS messages from your account.</p> 
        <p> </p>
        <p>These settings are set with the <code>SetSMSAttributes</code> action.</p>
        <p></p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/GetSMSAttributes">GetSMSAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the getSMSAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  attributes: [
    'STRING_VALUE',
    /* more items */
  ]
};
sns.getSMSAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>attributes</code> — (<code>Array&lt;String&gt;</code>) <p>A list of the individual attribute names, such as <code>MonthlySpendLimit</code>, for which you want values.</p> <p>For all attribute names, see <a href="http://docs.aws.amazon.com/sns/latest/api/API_SetSMSAttributes.html">SetSMSAttributes</a>.</p> <p>If you don't use this parameter, Amazon SNS returns all SMS attributes.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>attributes</code> — (<code>map&lt;String&gt;</code>) <p>The SMS attribute names and their values.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="getSubscriptionAttributes-property"> <strong>getSubscriptionAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Returns all of the properties of a subscription.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/GetSubscriptionAttributes">GetSubscriptionAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the getSubscriptionAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  SubscriptionArn: 'STRING_VALUE' /* required */
};
sns.getSubscriptionAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>SubscriptionArn</code> — (<code>String</code>) <p>The ARN of the subscription whose properties you want to get.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>A map of the subscription's attributes. Attributes in this map include the following:</p> 
               <ul> 
                <li> <p> <code>SubscriptionArn</code> -- the subscription's ARN</p> </li> 
                <li> <p> <code>TopicArn</code> -- the topic ARN that the subscription is associated with</p> </li> 
                <li> <p> <code>Owner</code> -- the AWS account ID of the subscription's owner</p> </li> 
                <li> <p> <code>ConfirmationWasAuthenticated</code> -- true if the subscription confirmation request was authenticated</p> </li> 
                <li> <p> <code>DeliveryPolicy</code> -- the JSON serialization of the subscription's delivery policy</p> </li> 
                <li> <p> <code>EffectiveDeliveryPolicy</code> -- the JSON serialization of the effective delivery policy that takes into account the topic delivery policy and account system defaults</p> </li> 
               </ul></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="getTopicAttributes-property"> <strong>getTopicAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Returns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/GetTopicAttributes">GetTopicAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the getTopicAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  TopicArn: 'STRING_VALUE' /* required */
};
sns.getTopicAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the topic whose properties you want to get.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>A map of the topic's attributes. Attributes in this map include the following:</p> 
               <ul> 
                <li> <p> <code>TopicArn</code> -- the topic's ARN</p> </li> 
                <li> <p> <code>Owner</code> -- the AWS account ID of the topic's owner</p> </li> 
                <li> <p> <code>Policy</code> -- the JSON serialization of the topic's access control policy</p> </li> 
                <li> <p> <code>DisplayName</code> -- the human-readable name used in the "From" field for notifications to email and email-json endpoints</p> </li> 
                <li> <p> <code>SubscriptionsPending</code> -- the number of subscriptions pending confirmation on this topic</p> </li> 
                <li> <p> <code>SubscriptionsConfirmed</code> -- the number of confirmed subscriptions on this topic</p> </li> 
                <li> <p> <code>SubscriptionsDeleted</code> -- the number of deleted subscriptions on this topic</p> </li> 
                <li> <p> <code>DeliveryPolicy</code> -- the JSON serialization of the topic's delivery policy</p> </li> 
                <li> <p> <code>EffectiveDeliveryPolicy</code> -- the JSON serialization of the effective delivery policy that takes into account system defaults</p> </li> 
               </ul></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="listEndpointsByPlatformApplication-property"> <strong>listEndpointsByPlatformApplication</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM and APNS. The results for <code>ListEndpointsByPlatformApplication</code> are paginated and return a limited list of endpoints, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListEndpointsByPlatformApplication</code> again using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/ListEndpointsByPlatformApplication">ListEndpointsByPlatformApplication</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the listEndpointsByPlatformApplication operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  PlatformApplicationArn: 'STRING_VALUE', /* required */
  NextToken: 'STRING_VALUE'
};
sns.listEndpointsByPlatformApplication(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>PlatformApplicationArn</code> — (<code>String</code>) <p>PlatformApplicationArn for ListEndpointsByPlatformApplicationInput action.</p></li> 
           <li><code>NextToken</code> — (<code>String</code>) <p>NextToken string is used when calling ListEndpointsByPlatformApplication action to retrieve additional records that are available after the first page results.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>Endpoints</code> — (<code>Array&lt;map&gt;</code>) <p>Endpoints returned for ListEndpointsByPlatformApplication action.</p> 
               <ul> 
                <li><code>EndpointArn</code> — (<code>String</code>) <p>EndpointArn for mobile app and device.</p></li> 
                <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>Attributes for endpoint.</p></li> 
               </ul> </li> 
              <li><code>NextToken</code> — (<code>String</code>) <p>NextToken string is returned when calling ListEndpointsByPlatformApplication action if additional records are available after the first page results.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="listPhoneNumbersOptedOut-property"> <strong>listPhoneNumbersOptedOut</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them.</p> 
        <p> </p>
        <p>The results for <code>ListPhoneNumbersOptedOut</code> are paginated, and each page returns up to 100 phone numbers. If additional phone numbers are available after the first page of results, then a <code>NextToken</code> string will be returned. To receive the next page, you call <code>ListPhoneNumbersOptedOut</code> again using the <code>NextToken</code> string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null.</p>
        <p></p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/ListPhoneNumbersOptedOut">ListPhoneNumbersOptedOut</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the listPhoneNumbersOptedOut operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  nextToken: 'STRING_VALUE'
};
sns.listPhoneNumbersOptedOut(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>nextToken</code> — (<code>String</code>) <p>A <code>NextToken</code> string is used when you call the <code>ListPhoneNumbersOptedOut</code> action to retrieve additional records that are available after the first page of results.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>phoneNumbers</code> — (<code>Array&lt;String&gt;</code>) <p>A list of phone numbers that are opted out of receiving SMS messages. The list is paginated, and each page can contain up to 100 phone numbers.</p></li> 
              <li><code>nextToken</code> — (<code>String</code>) <p>A <code>NextToken</code> string is returned when you call the <code>ListPhoneNumbersOptedOut</code> action if additional records are available after the first page of results.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="listPlatformApplications-property"> <strong>listPlatformApplications</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Lists the platform application objects for the supported push notification services, such as APNS and GCM. The results for <code>ListPlatformApplications</code> are paginated and return a limited list of applications, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListPlatformApplications</code> using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/ListPlatformApplications">ListPlatformApplications</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the listPlatformApplications operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  NextToken: 'STRING_VALUE'
};
sns.listPlatformApplications(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>NextToken</code> — (<code>String</code>) <p>NextToken string is used when calling ListPlatformApplications action to retrieve additional records that are available after the first page results.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>PlatformApplications</code> — (<code>Array&lt;map&gt;</code>) <p>Platform applications returned when calling ListPlatformApplications action.</p> 
               <ul> 
                <li><code>PlatformApplicationArn</code> — (<code>String</code>) <p>PlatformApplicationArn for platform application object.</p></li> 
                <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>Attributes for platform application object.</p></li> 
               </ul> </li> 
              <li><code>NextToken</code> — (<code>String</code>) <p>NextToken string is returned when calling ListPlatformApplications action if additional records are available after the first page results.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="listSubscriptions-property"> <strong>listSubscriptions</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Returns a list of the requester's subscriptions. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptions</code> call to get further results.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/ListSubscriptions">ListSubscriptions</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the listSubscriptions operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  NextToken: 'STRING_VALUE'
};
sns.listSubscriptions(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>NextToken</code> — (<code>String</code>) <p>Token returned by the previous <code>ListSubscriptions</code> request.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>Subscriptions</code> — (<code>Array&lt;map&gt;</code>) <p>A list of subscriptions.</p> 
               <ul> 
                <li><code>SubscriptionArn</code> — (<code>String</code>) <p>The subscription's ARN.</p></li> 
                <li><code>Owner</code> — (<code>String</code>) <p>The subscription's owner.</p></li> 
                <li><code>Protocol</code> — (<code>String</code>) <p>The subscription's protocol.</p></li> 
                <li><code>Endpoint</code> — (<code>String</code>) <p>The subscription's endpoint (format depends on the protocol).</p></li> 
                <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the subscription's topic.</p></li> 
               </ul> </li> 
              <li><code>NextToken</code> — (<code>String</code>) <p>Token to pass along to the next <code>ListSubscriptions</code> request. This element is returned if there are more subscriptions to retrieve.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="listSubscriptionsByTopic-property"> <strong>listSubscriptionsByTopic</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Returns a list of the subscriptions to a specific topic. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptionsByTopic</code> call to get further results.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/ListSubscriptionsByTopic">ListSubscriptionsByTopic</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the listSubscriptionsByTopic operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  TopicArn: 'STRING_VALUE', /* required */
  NextToken: 'STRING_VALUE'
};
sns.listSubscriptionsByTopic(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the topic for which you wish to find subscriptions.</p></li> 
           <li><code>NextToken</code> — (<code>String</code>) <p>Token returned by the previous <code>ListSubscriptionsByTopic</code> request.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>Subscriptions</code> — (<code>Array&lt;map&gt;</code>) <p>A list of subscriptions.</p> 
               <ul> 
                <li><code>SubscriptionArn</code> — (<code>String</code>) <p>The subscription's ARN.</p></li> 
                <li><code>Owner</code> — (<code>String</code>) <p>The subscription's owner.</p></li> 
                <li><code>Protocol</code> — (<code>String</code>) <p>The subscription's protocol.</p></li> 
                <li><code>Endpoint</code> — (<code>String</code>) <p>The subscription's endpoint (format depends on the protocol).</p></li> 
                <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the subscription's topic.</p></li> 
               </ul> </li> 
              <li><code>NextToken</code> — (<code>String</code>) <p>Token to pass along to the next <code>ListSubscriptionsByTopic</code> request. This element is returned if there are more subscriptions to retrieve.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="listTopics-property"> <strong>listTopics</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Returns a list of the requester's topics. Each call returns a limited list of topics, up to 100. If there are more topics, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListTopics</code> call to get further results.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/ListTopics">ListTopics</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the listTopics operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  NextToken: 'STRING_VALUE'
};
sns.listTopics(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>NextToken</code> — (<code>String</code>) <p>Token returned by the previous <code>ListTopics</code> request.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>Topics</code> — (<code>Array&lt;map&gt;</code>) <p>A list of topic ARNs.</p> 
               <ul> 
                <li><code>TopicArn</code> — (<code>String</code>) <p>The topic's ARN.</p></li> 
               </ul> </li> 
              <li><code>NextToken</code> — (<code>String</code>) <p>Token to pass along to the next <code>ListTopics</code> request. This element is returned if there are additional topics to retrieve.</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="optInPhoneNumber-property"> <strong>optInPhoneNumber</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Use this request to opt in a phone number that is opted out, which enables you to resume sending SMS messages to the number.</p> 
        <p> </p>
        <p>You can opt in a phone number only once every 30 days.</p>
        <p></p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/OptInPhoneNumber">OptInPhoneNumber</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the optInPhoneNumber operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  phoneNumber: 'STRING_VALUE' /* required */
};
sns.optInPhoneNumber(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>phoneNumber</code> — (<code>String</code>) <p>The phone number to opt in.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="publish-property"> <strong>publish</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Sends a message to all of a topic's subscribed endpoints. When a <code>messageId</code> is returned, the message has been saved and Amazon SNS will attempt to deliver it to the topic's subscribers shortly. The format of the outgoing message to each subscribed endpoint depends on the notification protocol.</p> 
        <p> </p>
        <p>To use the <code>Publish</code> action for sending a message to a mobile endpoint, such as an app on a Kindle device or mobile phone, you must specify the EndpointArn for the TargetArn parameter. The EndpointArn is returned when making a call with the <code>CreatePlatformEndpoint</code> action. </p> 
        <p>For more information about formatting messages, see <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html">Send Custom Platform-Specific Payloads in Messages to Mobile Devices</a>. </p>
        <p></p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/Publish">Publish</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the publish operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  Message: 'STRING_VALUE', /* required */
  MessageAttributes: {
    '&lt;String&gt;': {
      DataType: 'STRING_VALUE', /* required */
      BinaryValue: new Buffer('...') || 'STRING_VALUE',
      StringValue: 'STRING_VALUE'
    },
    /* '&lt;String&gt;': ... */
  },
  MessageStructure: 'STRING_VALUE',
  PhoneNumber: 'STRING_VALUE',
  Subject: 'STRING_VALUE',
  TargetArn: 'STRING_VALUE',
  TopicArn: 'STRING_VALUE'
};
sns.publish(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>TopicArn</code> — (<code>String</code>) <p>The topic you want to publish to.</p> <p>If you don't specify a value for the <code>TopicArn</code> parameter, you must specify a value for the <code>PhoneNumber</code> or <code>TargetArn</code> parameters.</p></li> 
           <li><code>TargetArn</code> — (<code>String</code>) <p>Either TopicArn or EndpointArn, but not both.</p> <p>If you don't specify a value for the <code>TargetArn</code> parameter, you must specify a value for the <code>PhoneNumber</code> or <code>TopicArn</code> parameters.</p></li> 
           <li><code>PhoneNumber</code> — (<code>String</code>) <p>The phone number to which you want to deliver an SMS message. Use E.164 format.</p> <p>If you don't specify a value for the <code>PhoneNumber</code> parameter, you must specify a value for the <code>TargetArn</code> or <code>TopicArn</code> parameters.</p></li> 
           <li><code>Message</code> — (<code>String</code>) <p>The message you want to send to the topic.</p> <p>If you want to send the same message to all transport protocols, include the text of the message as a String value.</p> <p>If you want to send different messages for each transport protocol, set the value of the <code>MessageStructure</code> parameter to <code>json</code> and use a JSON object for the <code>Message</code> parameter. </p> <p>Constraints: Messages must be UTF-8 encoded strings at most 256 KB in size (262144 bytes, not 262144 characters).</p> <p>JSON-specific constraints:</p> 
            <ul> 
             <li> <p>Keys in the JSON object that correspond to supported transport protocols must have simple JSON string values.</p> </li> 
             <li> <p>The values will be parsed (unescaped) before they are used in outgoing messages.</p> </li> 
             <li> <p>Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).</p> </li> 
             <li> <p>Values have a minimum length of 0 (the empty string, "", is allowed).</p> </li> 
             <li> <p>Values have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).</p> </li> 
             <li> <p>Non-string values will cause the key to be ignored.</p> </li> 
             <li> <p>Keys that do not correspond to supported transport protocols are ignored.</p> </li> 
             <li> <p>Duplicate keys are not allowed.</p> </li> 
             <li> <p>Failure to parse or validate any key or value in the message will cause the <code>Publish</code> call to return an error (no partial delivery).</p> </li> 
            </ul></li> 
           <li><code>Subject</code> — (<code>String</code>) <p>Optional parameter to be used as the "Subject" line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints.</p> <p>Constraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long.</p></li> 
           <li><code>MessageStructure</code> — (<code>String</code>) <p>Set <code>MessageStructure</code> to <code>json</code> if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set <code>MessageStructure</code> to <code>json</code>, the value of the <code>Message</code> parameter must: </p> 
            <ul> 
             <li> <p>be a syntactically valid JSON object; and</p> </li> 
             <li> <p>contain at least a top-level JSON key of "default" with a value that is a string.</p> </li> 
            </ul> <p>You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., "http").</p> <p>For information about sending different messages for each protocol using the AWS Management Console, go to <a href="http://docs.aws.amazon.com/sns/latest/gsg/Publish.html#sns-message-formatting-by-protocol">Create Different Messages for Each Protocol</a> in the <i>Amazon Simple Notification Service Getting Started Guide</i>. </p> <p>Valid value: <code>json</code> </p></li> 
           <li><code>MessageAttributes</code> — (<code>map&lt;map&gt;</code>) <p>Message attributes for Publish action.</p> 
            <ul> 
             <li><code>DataType</code> — <strong>required</strong> — (<code>String</code>) <p>Amazon SNS supports the following logical data types: String, Number, and Binary. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes">Message Attribute Data Types</a>.</p></li> 
             <li><code>StringValue</code> — (<code>String</code>) <p>Strings are Unicode with UTF8 binary encoding. For a list of code values, see <a href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters"></a><a href="http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.</p></li> 
             <li><code>BinaryValue</code> — (<code>Buffer, Typed Array, Blob, String</code>) <p>Binary type attributes can store any binary data, for example, compressed data, encrypted data, or images.</p></li> 
            </ul> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>MessageId</code> — (<code>String</code>) <p>Unique identifier assigned to the published message.</p> <p>Length Constraint: Maximum 100 characters</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="removePermission-property"> <strong>removePermission</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Removes a statement from a topic's access control policy.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/RemovePermission">RemovePermission</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the removePermission operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  Label: 'STRING_VALUE', /* required */
  TopicArn: 'STRING_VALUE' /* required */
};
sns.removePermission(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the topic whose access control policy you wish to modify.</p></li> 
           <li><code>Label</code> — (<code>String</code>) <p>The unique label of the statement you want to remove.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="setEndpointAttributes-property"> <strong>setEndpointAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM and APNS. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/SetEndpointAttributes">SetEndpointAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the setEndpointAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  Attributes: { /* required */
    '&lt;String&gt;': 'STRING_VALUE',
    /* '&lt;String&gt;': ... */
  },
  EndpointArn: 'STRING_VALUE' /* required */
};
sns.setEndpointAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>EndpointArn</code> — (<code>String</code>) <p>EndpointArn used for SetEndpointAttributes action.</p></li> 
           <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>A map of the endpoint attributes. Attributes in this map include the following:</p> 
            <ul> 
             <li> <p> <code>CustomUserData</code> -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.</p> </li> 
             <li> <p> <code>Enabled</code> -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.</p> </li> 
             <li> <p> <code>Token</code> -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.</p> </li> 
            </ul></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="setPlatformApplicationAttributes-property"> <strong>setPlatformApplicationAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. For information on configuring attributes for message delivery status, see <a href="http://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html">Using Amazon SNS Application Attributes for Message Delivery Status</a>. </p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/SetPlatformApplicationAttributes">SetPlatformApplicationAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the setPlatformApplicationAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  Attributes: { /* required */
    '&lt;String&gt;': 'STRING_VALUE',
    /* '&lt;String&gt;': ... */
  },
  PlatformApplicationArn: 'STRING_VALUE' /* required */
};
sns.setPlatformApplicationAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>PlatformApplicationArn</code> — (<code>String</code>) <p>PlatformApplicationArn for SetPlatformApplicationAttributes action.</p></li> 
           <li><code>Attributes</code> — (<code>map&lt;String&gt;</code>) <p>A map of the platform application attributes. Attributes in this map include the following:</p> 
            <ul> 
             <li> <p> <code>PlatformCredential</code> -- The credential received from the notification service. For APNS/APNS_SANDBOX, PlatformCredential is private key. For GCM, PlatformCredential is "API key". For ADM, PlatformCredential is "client secret".</p> </li> 
             <li> <p> <code>PlatformPrincipal</code> -- The principal received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is SSL certificate. For GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is "client id".</p> </li> 
             <li> <p> <code>EventEndpointCreated</code> -- Topic ARN to which EndpointCreated event notifications should be sent.</p> </li> 
             <li> <p> <code>EventEndpointDeleted</code> -- Topic ARN to which EndpointDeleted event notifications should be sent.</p> </li> 
             <li> <p> <code>EventEndpointUpdated</code> -- Topic ARN to which EndpointUpdate event notifications should be sent.</p> </li> 
             <li> <p> <code>EventDeliveryFailure</code> -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.</p> </li> 
             <li> <p> <code>SuccessFeedbackRoleArn</code> -- IAM role ARN used to give Amazon SNS write access to use CloudWatch Logs on your behalf.</p> </li> 
             <li> <p> <code>FailureFeedbackRoleArn</code> -- IAM role ARN used to give Amazon SNS write access to use CloudWatch Logs on your behalf.</p> </li> 
             <li> <p> <code>SuccessFeedbackSampleRate</code> -- Sample rate percentage (0-100) of successfully delivered messages.</p> </li> 
            </ul></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="setSMSAttributes-property"> <strong>setSMSAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Use this request to set the default settings for sending SMS messages and receiving daily SMS usage reports.</p> 
        <p> </p>
        <p>You can override some of these settings for a single message when you use the <code>Publish</code> action with the <code>MessageAttributes.entry.N</code> parameter. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html">Sending an SMS Message</a> in the <i>Amazon SNS Developer Guide</i>.</p>
        <p></p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/SetSMSAttributes">SetSMSAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the setSMSAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  attributes: { /* required */
    '&lt;String&gt;': 'STRING_VALUE',
    /* '&lt;String&gt;': ... */
  }
};
sns.setSMSAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>attributes</code> — (<code>map&lt;String&gt;</code>) <p>The default settings for sending SMS messages from your account. You can set values for the following attribute names:</p> <p> <code>MonthlySpendLimit</code> – The maximum amount in USD that you are willing to spend each month to send SMS messages. When Amazon SNS determines that sending an SMS message would incur a cost that exceeds this limit, it stops sending SMS messages within minutes.</p> 
            <important> 
             <p>Amazon SNS stops sending SMS messages within minutes of the limit being crossed. During that interval, if you continue to send SMS messages, you will incur costs that exceed your limit.</p> 
            </important> <p>By default, the spend limit is set to the maximum allowed by Amazon SNS. If you want to exceed the maximum, contact <a href="https://aws.amazon.com/premiumsupport/">AWS Support</a> or your AWS sales representative for a service limit increase.</p> <p> <code>DeliveryStatusIAMRole</code> – The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For each SMS message that you send, Amazon SNS writes a log that includes the message price, the success or failure status, the reason for failure (if the message failed), the message dwell time, and other information.</p> <p> <code>DeliveryStatusSuccessSamplingRate</code> – The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value can be an integer from 0 - 100. For example, to write logs only for failed deliveries, set this value to <code>0</code>. To write logs for 10% of your successful deliveries, set it to <code>10</code>.</p> <p> <code>DefaultSenderID</code> – A string, such as your business brand, that is displayed as the sender on the receiving device. Support for sender IDs varies by country. The sender ID can be 1 - 11 alphanumeric characters, and it must contain at least one letter.</p> <p> <code>DefaultSMSType</code> – The type of SMS message that you will send by default. You can assign the following values:</p> 
            <ul> 
             <li> <p> <code>Promotional</code> – (Default) Noncritical messages, such as marketing messages. Amazon SNS optimizes the message delivery to incur the lowest cost.</p> </li> 
             <li> <p> <code>Transactional</code> – Critical messages that support customer transactions, such as one-time passcodes for multi-factor authentication. Amazon SNS optimizes the message delivery to achieve the highest reliability.</p> </li> 
            </ul> <p> <code>UsageReportS3Bucket</code> – The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS will deliver a usage report as a CSV file to the bucket. The report includes the following information for each SMS message that was successfully delivered by your account:</p> 
            <ul> 
             <li> <p>Time that the message was published (in UTC)</p> </li> 
             <li> <p>Message ID</p> </li> 
             <li> <p>Destination phone number</p> </li> 
             <li> <p>Message type</p> </li> 
             <li> <p>Delivery status</p> </li> 
             <li> <p>Message price (in USD)</p> </li> 
             <li> <p>Part number (a message is split into multiple parts if it is too long for a single message)</p> </li> 
             <li> <p>Total number of parts</p> </li> 
            </ul> <p>To receive the report, the bucket must have a policy that allows the Amazon SNS service principle to perform the <code>s3:PutObject</code> and <code>s3:GetBucketLocation</code> actions.</p> <p>For an example bucket policy and usage report, see <a href="http://docs.aws.amazon.com/sns/latest/dg/sms_stats.html">Monitoring SMS Activity</a> in the <i>Amazon SNS Developer Guide</i>.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="setSubscriptionAttributes-property"> <strong>setSubscriptionAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Allows a subscription owner to set an attribute of the topic to a new value.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/SetSubscriptionAttributes">SetSubscriptionAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the setSubscriptionAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  AttributeName: 'STRING_VALUE', /* required */
  SubscriptionArn: 'STRING_VALUE', /* required */
  AttributeValue: 'STRING_VALUE'
};
sns.setSubscriptionAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>SubscriptionArn</code> — (<code>String</code>) <p>The ARN of the subscription to modify.</p></li> 
           <li><code>AttributeName</code> — (<code>String</code>) <p>The name of the attribute you want to set. Only a subset of the subscriptions attributes are mutable.</p> <p>Valid values: <code>DeliveryPolicy</code> | <code>RawMessageDelivery</code> </p></li> 
           <li><code>AttributeValue</code> — (<code>String</code>) <p>The new value for the attribute in JSON format.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="setTopicAttributes-property"> <strong>setTopicAttributes</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Allows a topic owner to set an attribute of the topic to a new value.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/SetTopicAttributes">SetTopicAttributes</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the setTopicAttributes operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  AttributeName: 'STRING_VALUE', /* required */
  TopicArn: 'STRING_VALUE', /* required */
  AttributeValue: 'STRING_VALUE'
};
sns.setTopicAttributes(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the topic to modify.</p></li> 
           <li><code>AttributeName</code> — (<code>String</code>) <p>The name of the attribute you want to set. Only a subset of the topic's attributes are mutable.</p> <p>Valid values: <code>Policy</code> | <code>DisplayName</code> | <code>DeliveryPolicy</code> </p></li> 
           <li><code>AttributeValue</code> — (<code>String</code>) <p>The new value for the attribute.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="subscribe-property"> <strong>subscribe</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Prepares to subscribe an endpoint by sending the endpoint a confirmation message. To actually create a subscription, the endpoint owner must call the <code>ConfirmSubscription</code> action with the token from the confirmation message. Confirmation tokens are valid for three days.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/Subscribe">Subscribe</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the subscribe operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  Protocol: 'STRING_VALUE', /* required */
  TopicArn: 'STRING_VALUE', /* required */
  Endpoint: 'STRING_VALUE'
};
sns.subscribe(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>TopicArn</code> — (<code>String</code>) <p>The ARN of the topic you want to subscribe to.</p></li> 
           <li><code>Protocol</code> — (<code>String</code>) <p>The protocol you want to use. Supported protocols include:</p> 
            <ul> 
             <li> <p> <code>http</code> -- delivery of JSON-encoded message via HTTP POST</p> </li> 
             <li> <p> <code>https</code> -- delivery of JSON-encoded message via HTTPS POST</p> </li> 
             <li> <p> <code>email</code> -- delivery of message via SMTP</p> </li> 
             <li> <p> <code>email-json</code> -- delivery of JSON-encoded message via SMTP</p> </li> 
             <li> <p> <code>sms</code> -- delivery of message via SMS</p> </li> 
             <li> <p> <code>sqs</code> -- delivery of JSON-encoded message to an Amazon SQS queue</p> </li> 
             <li> <p> <code>application</code> -- delivery of JSON-encoded message to an EndpointArn for a mobile app and device.</p> </li> 
             <li> <p> <code>lambda</code> -- delivery of JSON-encoded message to an AWS Lambda function.</p> </li> 
            </ul></li> 
           <li><code>Endpoint</code> — (<code>String</code>) <p>The endpoint that you want to receive notifications. Endpoints vary by protocol:</p> 
            <ul> 
             <li> <p>For the <code>http</code> protocol, the endpoint is an URL beginning with "<a href="http://">http://</a>"</p> </li> 
             <li> <p>For the <code>https</code> protocol, the endpoint is a URL beginning with "<a href="https://">https://</a>"</p> </li> 
             <li> <p>For the <code>email</code> protocol, the endpoint is an email address</p> </li> 
             <li> <p>For the <code>email-json</code> protocol, the endpoint is an email address</p> </li> 
             <li> <p>For the <code>sms</code> protocol, the endpoint is a phone number of an SMS-enabled device</p> </li> 
             <li> <p>For the <code>sqs</code> protocol, the endpoint is the ARN of an Amazon SQS queue</p> </li> 
             <li> <p>For the <code>application</code> protocol, the endpoint is the EndpointArn of a mobile app and device.</p> </li> 
             <li> <p>For the <code>lambda</code> protocol, the endpoint is the ARN of an AWS Lambda function.</p> </li> 
            </ul></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs. The <code>data</code> object has the following properties:</p> 
             <ul> 
              <li><code>SubscriptionArn</code> — (<code>String</code>) <p>The ARN of the subscription, if the service was able to create a subscription immediately (without requiring endpoint owner confirmation).</p></li> 
             </ul> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
     <div class="method_details "> 
      <h3 class="signature " id="unsubscribe-property"> <strong>unsubscribe</strong>(params = {}, callback) ? <tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt> </h3>
      <div class="docstring"> 
       <div class="discussion"> 
        <p>Deletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic's owner can unsubscribe, and an AWS signature is required. If the <code>Unsubscribe</code> call does not require authentication and the requester is not the subscription owner, a final cancellation message is delivered to the endpoint, so that the endpoint owner can easily resubscribe to the topic if the <code>Unsubscribe</code> request was unintended.</p> 
        <div class="tags"> 
         <p class="tag_title">Service Reference:</p> 
         <ul class="see"> 
          <li><a href="/goto/WebAPI/sns-2010-03-31/Unsubscribe">Unsubscribe</a></li> 
         </ul> 
        </div> 
       </div> 
      </div> 
      <div class="tags"> 
       <div class="examples"> 
        <p class="tag_title">Examples:</p> 
        <p class="example_title"></p>
        <div class="inline">
         <p>Calling the unsubscribe operation</p> 
        </div>
        <p></p> 
        <pre class="example code"><code>var params = {
  SubscriptionArn: 'STRING_VALUE' /* required */
};
sns.unsubscribe(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});</code></pre> 
       </div> 
       <p class="tag_title">Parameters:</p> 
       <ul class="param"> 
        <li> <span class="name">params</span> <span class="type">(<tt>Object</tt>)</span> <em class="default">(defaults to: <tt>{}</tt>)</em> — 
         <div class="inline">
          <ul> 
           <li><code>SubscriptionArn</code> — (<code>String</code>) <p>The ARN of the subscription to be deleted.</p></li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Callback (<tt>callback</tt>):</p> 
       <ul class="callback"> 
        <li class="callback_item"> <span class="signature"><strong>function</strong>(err, data) { ... } </span> 
         <div class="docstring"> 
          <div class="discussion"> 
           <p>Called when a response from the service is returned. If a callback is not supplied, you must call <span class="object_link"><a href="Request.html#send-property" title="AWS.Request.send (property)">AWS.Request.send()</a></span> on the returned request object to initiate the request.</p> 
          </div> 
         </div> 
         <div class="tags"> 
          <p class="tag_title">Context (<tt>this</tt>):</p> 
          <ul class="context"> 
           <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Response.html" title="AWS.Response (class)">Response</a></span></tt>)</span> — 
            <div class="inline">
             <p>the response object containing error, data properties, and the original request object.</p> 
            </div> </li> 
          </ul> 
          <p class="tag_title">Parameters:</p> 
          <ul class="param"> 
           <li> <span class="name">err</span> <span class="type">(<tt>Error</tt>)</span> — 
            <div class="inline">
             <p>the error object returned from the request. Set to <code>null</code> if the request is successful.</p> 
            </div> </li> 
           <li> <span class="name">data</span> <span class="type">(<tt>Object</tt>)</span> — 
            <div class="inline">
             <p>the de-serialized data returned from the request. Set to <code>null</code> if a request error occurs.</p> 
            </div> </li> 
          </ul> 
         </div> </li> 
       </ul> 
       <p class="tag_title">Returns:</p> 
       <ul class="return"> 
        <li> <span class="type">(<tt><span class="object_link"><a href="../AWS.html" title="AWS (module)">AWS</a></span>.<span class="object_link"><a href="Request.html" title="AWS.Request (class)">Request</a></span></tt>)</span> — 
         <div class="inline">
          <p>a handle to the operation request for subsequent event callback registration.</p> 
         </div> </li> 
       </ul> 
      </div> 
     </div> 
    </div> 
   </div> 
   <div id="footer">
     Generated on Fri Sep 15 19:19:18 2017 by 
    <a href="http://yardoc.org" title="Yay! A Ruby Documentation Tool" target="_parent">yard</a> 0.8.7.6 (ruby-2.3.1). 
   </div> 
   <!-- BEGIN-SECTION --> 
   <script type="text/javascript" src="https://media.amazonwebservices.com/amznUrchin.js"></script> 
   <!-- SiteCatalyst code version: H.25.2. Copyright 1996-2012 Adobe, Inc. All Rights Reserved.
More info available at http://www.omniture.com --> 
   <script language="JavaScript" type="text/javascript" src="https://media.amazonwebservices.com/js/sitecatalyst/s_code.min.js">
</script> 
   <script language="JavaScript" type="text/javascript">
  <!--
  s.prop66='AWS SDK for JavaScript';
  s.eVar66='D=c66';
  s.prop65='API Reference';
  s.eVar65='D=c65';
  var s_code=s.t();if(s_code)document.write(s_code)
  //-->
</script> 
   <script language="JavaScript" type="text/javascript">
  <!--if(navigator.appVersion.indexOf('MSIE')>=0)document.write(unescape('%3C')+'\!-'+'-')
  //-->
</script> 
   <noscript> 
    <img src="http://amazonwebservices.d2.sc.omtrdc.net/b/ss/awsamazondev/1/H.25.2--NS/0" height="1" width="1" border="0" alt=""> 
   </noscript> 
   <!--/DO NOT REMOVE/--> 
   <!-- End SiteCatalyst code version: H.25.2. --> 
   <!-- END-SECTION --> 
  </div>   
 </body>
</html>