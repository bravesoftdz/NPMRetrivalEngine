<!doctype html>
<html lang="en-US">
 <head> 
  <meta charset="UTF-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="pingback" href="http://thisdavej.com/xmlrpc.php"> 
  <title>Node.js: Sending Email Notifications Using Nodemailer and Gmail | thisDaveJ</title> 
  <!-- All in One SEO Pack 2.3.16 by Michael Torbert of Semper Fi Web Design[331,419] --> 
  <meta name="description" content="We learn how to send email messages in Node.js using Nodemailer with a Gmail account. We also use the Node crypto module to encrypt our Gmail password."> 
  <meta name="keywords" content="node.js,node,tutorial,iss,international space station,web api,json,email,nodemailer,crypto,moment.js,education,iot,javascript"> 
  <link rel="canonical" href="http://thisdavej.com/node-js-sending-email-notifications-using-nodemailer-and-gmail/"> 
  <!-- /all in one seo pack --> 
  <link rel="dns-prefetch" href="//fonts.googleapis.com"> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="thisDaveJ » Feed" href="http://thisdavej.com/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="thisDaveJ » Comments Feed" href="http://thisdavej.com/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="thisDaveJ » Node.js: Sending Email Notifications Using Nodemailer and Gmail Comments Feed" href="http://thisdavej.com/node-js-sending-email-notifications-using-nodemailer-and-gmail/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.3\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/thisdavej.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.8.1"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b===c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="parent-style-css" href="http://thisdavej.com/wp-content/themes/decode/style.css?ver=4.8.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="decode-icomoon-css" href="http://thisdavej.com/wp-content/themes/decode/assets/icomoon.css?ver=3.0.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="decode-style-css" href="http://thisdavej.com/wp-content/themes/decode-child/style.css?ver=3.0.7" type="text/css" media="all"> 
  <link rel="stylesheet" id="decode-font-stylesheet-css" href="//fonts.googleapis.com/css?family=Oxygen&amp;ver=4.8.1" type="text/css" media="all"> 
  <link rel="stylesheet" id="A2A_SHARE_SAVE-css" href="http://thisdavej.com/wp-content/plugins/add-to-any/addtoany.min.css?ver=1.14" type="text/css" media="all"> 
  <link rel="stylesheet" id="enlighter-wpcustom-css" href="http://thisdavej.com/wp-content/plugins/enlighter/cache/EnlighterJS.custom.css?ver=3564e2ff4e" type="text/css" media="all"> 
  <script type="text/javascript" src="http://thisdavej.com/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="http://thisdavej.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <script type="text/javascript" src="http://thisdavej.com/wp-content/plugins/add-to-any/addtoany.min.js?ver=1.0"></script> 
  <script type="text/javascript" src="http://thisdavej.com/wp-content/plugins/enlighter/resources/mootools-core-yc.js?ver=3.5"></script> 
  <script type="text/javascript" src="http://thisdavej.com/wp-content/plugins/enlighter/resources/EnlighterJS.min.js?ver=3.5"></script> 
  <link rel="https://api.w.org/" href="http://thisdavej.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://thisdavej.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://thisdavej.com/wp-includes/wlwmanifest.xml"> 
  <link rel="prev" title="Connecting a Raspberry Pi Using an Ethernet Crossover Cable and Internet Connection Sharing" href="http://thisdavej.com/connecting-a-raspberry-pi-using-an-ethernet-crossover-cable-and-internet-connection-sharing/"> 
  <link rel="next" title="How to Install or Upgrade to Node.js v7 on the Raspberry Pi" href="http://thisdavej.com/how-to-install-or-upgrade-to-node-js-v7-on-the-raspberry-pi/"> 
  <meta name="generator" content="WordPress 4.8.1"> 
  <link rel="shortlink" href="http://thisdavej.com/?p=978"> 
  <link rel="alternate" type="application/json+oembed" href="http://thisdavej.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fthisdavej.com%2Fnode-js-sending-email-notifications-using-nodemailer-and-gmail%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://thisdavej.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fthisdavej.com%2Fnode-js-sending-email-notifications-using-nodemailer-and-gmail%2F&amp;format=xml"> 
  <script type="text/javascript">
var a2a_config=a2a_config||{};a2a_config.callbacks=a2a_config.callbacks||[];a2a_config.templates=a2a_config.templates||{};
</script> 
  <script type="text/javascript" src="https://static.addtoany.com/menu/page.js" async></script> 
  <!-- Decode Custom Colors CSS --> 
  <style type="text/css">

			body, .sidebar, .sidebar-top, .menu ul ul, .header-style-ghost .site { background-color: #ffffff; }.menu-icon, .close-icon, .social-icon-fill { fill: #1e73be; }a, .no-touch a:hover, button, input[type=button], input[type=reset], input[type=submit], .no-touch .site-title a:hover, .no-touch .menu a:hover, .menu ul li.open > a, .sidebar-menu a, .menu .current-menu-item > a, .menu .current_page_item > a, .no-touch .search-entry:hover, .no-touch .search-entry:hover .entry-title, .no-touch article .date a:hover, .no-touch .format-link .entry-title a:hover, .no-touch .comment-metadata a:hover, .no-touch .decode-reply-tool-plugin .replylink:hover { color: #1e73be; }.no-touch button:hover, .no-touch input[type=button]:hover, .no-touch input[type=reset]:hover, .no-touch input[type=submit]:hover, .no-touch input[type=text]:focus, .touch input[type=text]:focus, .no-touch input[type=email]:focus, .touch input[type=email]:focus, .no-touch input[type=password]:focus, .touch input[type=password]:focus, .no-touch input[type=search]:focus, .touch input[type=search]:focus, .no-touch input[type=tel]:focus, .touch input[type=tel]:focus, .no-touch input[type=url]:focus, .touch input[type=url]:focus, .no-touch textarea:focus, .touch textarea:focus, .no-touch .site-description a:hover, .no-touch .entry-content a:hover, a .page-link, .no-touch .categories a:hover, .no-touch .tags a:hover, .no-touch .comments-link a:hover, .no-touch .edit-link a:hover, .no-touch .author-site a:hover, .no-touch .theme-info a:hover, .no-touch .site-colophon a:hover, .site-header, .menu ul ul, .menu a:focus, .site-breadcrumbs, .page-title, .post blockquote, .page blockquote, .entry-footer, .entry-header .entry-meta, .search .entry-footer, .sidebar-top, .sidebar-style-constant .sidebar.left, .sidebar-style-constant .sidebar.right, .explore-page .widget h1 { border-color: #1e73be; }.no-touch .menu ul > .menu-item-has-children > a:hover::after, .no-touch .menu ul > .page_item_has_children > a:hover::after, .menu ul li.open > a::after, .sidebar-menu ul .menu-item-has-children > a::after, .sidebar-menu ul .page_item_has_children > a::after, .menu ul > .current_page_item.menu-item-has-children > a::after, .menu ul > .current_page_item.page_item_has_children > a::after { border-top-color: #1e73be; }.no-touch .footer-menu ul > .menu-item-has-children > a:hover::after, .no-touch .footer-menu ul > .page_item_has_children > a:hover::after, .footer-menu ul > li.open > a::after, .footer-menu ul > .current_page_item.menu-item-has-children > a::after, .footer-menu ul > .current_page_item.page_item_has_children > a::after { border-bottom-color: #1e73be; }.no-touch a:active, .no-touch button:focus, .touch button:focus, .no-touch button:active, .touch button:active, .no-touch input[type=button]:focus, .touch input[type=button]:focus, .no-touch input[type=button]:active, .touch input[type=button]:active, .no-touch input[type=reset]:focus, .touch input[type=reset]:focus, .no-touch input[type=reset]:active, .touch input[type=reset]:active, .no-touch input[type=submit]:focus, .touch input[type=submit]:focus, .no-touch input[type=submit]:active, .touch input[type=submit]:active, .no-touch .site-title a:active, .no-touch .menu a:active, .no-touch .sidebar-menu a:hover, .sidebar-menu ul li.open > a, .menu .current-menu-item > a:hover, .menu .current_page_item > a:hover, .sidebar-menu ul .current-menu-item > a, .sidebar-menu ul .current_page_item > a, .no-touch .sidebar-content a:hover, .no-touch .search-entry:active, .no-touch .search-entry:active .entry-title, .no-touch article .date a:active, .no-touch .format-link .entry-title a:active, .no-touch .comment-metadata a:active, .no-touch .site-description a:active, .decode-reply-tool-plugin .replylink:active, .no-touch .decode-reply-tool-plugin .replylink:active { color: #1e73be; }.no-touch button:focus, .touch button:focus, .no-touch button:active, .touch button:active, .no-touch input[type=button]:focus, .touch input[type=button]:focus, .no-touch input[type=button]:active, .touch input[type=button]:active, .no-touch input[type=reset]:focus, .touch input[type=reset]:focus, .no-touch input[type=reset]:active, .touch input[type=reset]:active, .no-touch input[type=submit]:focus, .touch input[type=submit]:focus, .no-touch input[type=submit]:active, .touch input[type=submit]:active, .no-touch .site-description a:active, .no-touch .entry-content a:active, a .page-link:active .no-touch .categories a:active, .no-touch .tags a:active, .no-touch .comments-link a:active, .no-touch .edit-link a:active, .no-touch .author-site a:active, .no-touch .theme-info a:active, .no-touch .site-colophon a:active { border-color: #1e73be; }.no-touch .menu ul > .menu-item-has-children > a:active::after, .no-touch .menu ul > .page_item_has_children > a:active::after, .no-touch .sidebar-menu ul .menu-item-has-children > a:hover::after, .no-touch .sidebar-menu ul .page_item_has_children > a:hover::after, .sidebar-menu ul li.open > a::after, .sidebar-menu ul .current_page_item.menu-item-has-children > a::after, .sidebar-menu ul .current_page_item.page_item_has_children > a::after { border-top-color: #1e73be; }.no-touch .footer-menu ul > .menu-item-has-children > a:active::after, .no-touch .footer-menu ul > .page_item_has_children > a:active::after { border-bottom-color: #1e73be; }.no-touch input[type=text]:focus, .touch input[type=text]:focus, .no-touch input[type=email]:focus, .touch input[type=email]:focus, .no-touch input[type=password]:focus, .touch input[type=password]:focus, .no-touch input[type=search]:focus, .touch input[type=search]:focus, .no-touch input[type=tel]:focus, .touch input[type=tel]:focus, .no-touch input[type=url]:focus, .touch input[type=url]:focus, .no-touch textarea:focus, .touch textarea:focus, .no-touch .search .page-header input[type=search]:focus, .touch .search .page-header input[type=search]:focus { border-color: #1e73be; }
			@media (min-width: 68.5em) {

				.site-main {
					max-width: none;
				}

			
			}

		</style> 
  <style type="text/css" id="custom-background-css">
body.custom-background { background-color: #ffffff; }
</style> 
  <script type="text/javascript">/* <![CDATA[ */EnlighterJS_Config = {"selector":{"block":"pre.EnlighterJSRAW","inline":"code.EnlighterJSRAW"},"language":"generic","theme":"wpcustom","indent":2,"hover":"NULL","showLinenumbers":false,"rawButton":false,"infoButton":false,"windowButton":false,"rawcodeDoubleclick":false,"grouping":true,"cryptex":{"enabled":false,"email":"mail@example.tld"}};!function(){var a=function(a){var b="Enlighter Error: ";console.error?console.error(b+a):console.log&&console.log(b+a)};return window.addEvent?"undefined"==typeof EnlighterJS?void a("Javascript Resources not loaded yet!"):"undefined"==typeof EnlighterJS_Config?void a("Configuration not loaded yet!"):void window.addEvent("domready",function(){EnlighterJS.Util.Init(EnlighterJS_Config.selector.block,EnlighterJS_Config.selector.inline,EnlighterJS_Config)}):void a("MooTools Framework not loaded yet!")}();;/* ]]> */</script>
  <link rel="icon" href="http://thisdavej.com/wp-content/uploads/2016/02/cropped-thisDaveJ-favicon-32x32.png" sizes="32x32"> 
  <link rel="icon" href="http://thisdavej.com/wp-content/uploads/2016/02/cropped-thisDaveJ-favicon-192x192.png" sizes="192x192"> 
  <link rel="apple-touch-icon-precomposed" href="http://thisdavej.com/wp-content/uploads/2016/02/cropped-thisDaveJ-favicon-180x180.png"> 
  <meta name="msapplication-TileImage" content="http://thisdavej.com/wp-content/uploads/2016/02/cropped-thisDaveJ-favicon-270x270.png"> 
 </head> 
 <body class="post-template-default single single-post postid-978 single-format-standard custom-background sidebar-style-closing sidebar-style-right"> 
  <div id="page" class="hfeed site"> 
   <a class="skip-link screen-reader-text" href="#content">Skip to content</a> 
   <button id="sidebar-link" class="sidebar-link SidebarLink right" title="Show sidebar"> 
    <svg width="100%" height="100%" viewbox="0 0 240 200" version="1.1" xmlns="http://www.w3.org/2000/svg"> 
     <g class="menu-icon" fill-rule="evenodd"> 
      <path d="M0,160 L0,200 L240,200 L240,160 L0,160 Z M0,160"></path> 
      <path d="M0,80 L0,120 L240,120 L240,80 L0,80 Z M0,80"></path> 
      <path d="M0,0 L0,40 L240,40 L240,0 L0,0 Z M0,0"></path> 
     </g> 
    </svg> </button> 
   <header id="masthead" class="site-header" role="banner"> 
    <div class="site-branding"> 
     <a class="site-logo-link" href="http://thisdavej.com/" title="thisDaveJ" rel="home"> <img class="site-logo" src="http://thisdavej.com/wp-content/uploads/2016/09/logo.png" height="225" width="443" alt=""> </a> 
    </div>
    <!-- .site-branding --> 
    <nav id="header-menu" class="menu horizontal-menu header-menu" role="navigation">
     <ul>
      <li id="menu-item-16" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-16"><a href="http://thisdavej.com/">Home</a></li> 
      <li id="menu-item-11" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-11"><a href="#">Categories</a> 
       <ul class="sub-menu"> 
        <li id="menu-item-77" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-77"><a href="http://thisdavej.com/category/iot/">IoT</a></li> 
        <li id="menu-item-133" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-133"><a href="http://thisdavej.com/category/node-js/">Node.js</a></li> 
        <li id="menu-item-357" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-357"><a href="http://thisdavej.com/category/raspberry-pi/">Raspberry Pi</a></li> 
        <li id="menu-item-1137" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1137"><a href="http://thisdavej.com/category/visual-studio-code/">Visual Studio Code</a></li> 
        <li id="menu-item-118" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-118"><a href="http://thisdavej.com/category/windows/">Windows</a></li> 
       </ul> </li> 
      <li id="menu-item-9" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9"><a href="http://thisdavej.com/about/">About</a></li> 
      <li id="menu-item-469" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-469"><a href="/feed/">RSS</a></li> 
      <li id="menu-item-470" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-470"><a href="https://twitter.com/thisDaveJ"><small><small>Follow</small></small><br>@thisDaveJ</a></li> 
     </ul>
    </nav>
    <!-- #header-menu --> 
   </header>
   <!-- #masthead --> 
   <div id="content" class="site-content"> 
    <div id="primary" class="content-area"> 
     <main id="main" class="site-main" role="main"> 
      <article id="post-978" class="post-978 post type-post status-publish format-standard hentry category-iot category-node-js tag-education tag-iot tag-javascript tag-node-js tag-nodemailer"> 
       <header class="entry-header"> 
        <h1 class="entry-title">Node.js: Sending Email Notifications Using Nodemailer and Gmail</h1> 
       </header>
       <!-- .entry-header --> 
       <div class="entry-content"> 
        <p><img class="size-full wp-image-984 aligncenter" src="http://thisdavej.com/wp-content/uploads/2016/10/Nodemailer.png" alt="Nodemailer" width="530" height="276" srcset="http://thisdavej.com/wp-content/uploads/2016/10/Nodemailer.png 530w, http://thisdavej.com/wp-content/uploads/2016/10/Nodemailer-300x156.png 300w" sizes="(max-width: 530px) 100vw, 530px"></p> 
        <p>We all want to be in the loop and notified when certain events occur within our Node.js programs. For example, email notifications can be very important for creating situational awareness with IoT systems we develop that interact with our physical world. Email communication can be used to deliver messages to our inboxes as well as to deliver text messages in order to enable us to take more immediate action.</p> 
        <p>In todays tutorial, well walk through the steps of using the amazing Nodemailer package which has become the de facto standard for sending email messages in the Node.js world. Lets get started so we can start seeing our own custom messages flow to our inbox!<span id="more-978"></span></p> 
        <h3 id="is-the-international-space-station-close-to-me">Is the International Space Station Near&nbsp;Me?</h3> 
        <p>Lets continue our theme from <a href="/node-js-iot-logging-data-that-is-out-of-this-world/">the previous tutorial</a> to utilize the ISS (International Space Station) as a sensor in the sky. As we read this sensor, we want to send a notification by email if the ISS is approaching our current location so we can walk outside and see it pass over us.</p> 
        <p>Well leverage a <a href="http://open-notify.org/Open-Notify-API/ISS-Pass-Times/">different API call</a> this time around that enables us to supply our current coordinates and retrieve information on the next five times the ISS will pass over us. The following URL, for example, returns the next passes of the ISS based on San Diego coordinates: <a class="uri" href="http://api.open-notify.org/iss-pass.json?lat=32.715738&amp;lon=-117.161084">http://api.open-notify.org/iss-pass.json?lat=32.715738&amp;lon=-117.161084</a></p> 
        <p>This URL returns the following JSON object:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="json">{
  "message": "success", 
  "request": {
    "altitude": 100, 
    "datetime": 1476107333, 
    "latitude": 32.715738, 
    "longitude": -117.161084, 
    "passes": 5
  }, 
  "response": [
    {
      "duration": 506, 
      "risetime": 1476131595
    }, 
    {
      "duration": 631, 
      "risetime": 1476137299
    }, 
    {
      "duration": 469, 
      "risetime": 1476143206
    }, 
    {
      "duration": 209, 
      "risetime": 1476149222
    }, 
    {
      "duration": 362, 
      "risetime": 1476155044
    }
  ]
}
</pre> 
        <p>Using this API, we can write the following code to invoke a URL every two minutes and retrieve the next times the ISS will pass over us. We could probably back down the loop frequency, but well keep it at two minutes to ensure we catch any changes to the ISS trajectory that may occur.</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">const got = require('got');
const moment = require('moment');

const loopSeconds = 120;
const myLoc = { latitude: 32.715738, longitude: -117.161084 };
const url = `http://api.open-notify.org/iss-pass.json?lat=${myLoc.latitude}&amp;lon=${myLoc.longitude}`;

function loop() {
    got(url, { json: true })
        .then(iss =&gt; {
            const nextPasses = iss.body.response;
            const now = moment();
            console.log('Next ISS passes near me');
            for (const pass of nextPasses) {
                const passTime = moment.unix(pass.risetime);
                const timeFromNow = moment.duration(passTime.diff(now));
                const minutesFromNow = Number(timeFromNow.asMinutes()).toFixed(1);
                console.log(`${passTime} (in ${minutesFromNow} minutes) for ${pass.duration} seconds`);
            }
        })
        .catch(error =&gt; {
            console.log(error.response.body);
        });
    setTimeout(loop, loopSeconds * 1000);
}

loop();
</pre> 
        <p>To get this working, we will need to npm install both <code>got</code> to help us retrieve data from the web and <code>moment</code> to help us manipulate dates and times. We can install both of these at the same time using the following command:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="null">$ npm install got moment
</pre> 
        <p>In our code, we utilize the incredible <code>moment</code> package to help us manipulate dates and times. This package should be part of the core Node.js built-in libraries, in my opinion, as it fills in the gap for the dearth of functionality that ships as part of the standard JavaScript date functions.</p> 
        <p>The <code>risetime</code> returned from the API returns a <a href="https://en.wikipedia.org/wiki/Unix_time">Unix timestamp</a> which represents the number of seconds that have elapsed since the Unix Epoch which is 00:00:00 Coordinated Universal Time (UTC), Thursday, 1 January 1970. We will run out of seconds in the <a href="https://en.wikipedia.org/wiki/Year_2038_problem">year 2038</a>, but I digress. ? We use the <code>moment.unix</code> function to convert the Unix timestamp to a standard Moment timestamp that we are able manipulate in order to determine when the ISS will pass over us next.</p> 
        <h3 id="tell-me-when-the-iss-is-within-30-minutes-of-passing-over-me">Tell Me When the ISS Is within 30 Minutes of Passing over Me</h3> 
        <p>Lets modify our code so we can be notified when it is within 30 minutes of passing over us:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">const got = require('got');
const moment = require('moment');

const loopSeconds = 120;
const myLoc = { latitude: 32.715738, longitude: -117.161084 };
const url = `http://api.open-notify.org/iss-pass.json?lat=${myLoc.latitude}&amp;lon=${myLoc.longitude}`;

const warningMinutes = 30;
let providedNotification = false;

function sendNotification(message) {
    console.log(`Could send email here: ${message}`);
}

function loop() {
    got(url, { json: true })
        .then(iss =&gt; {
            const nextPasses = iss.body.response;
            const now = moment();
            const pass = nextPasses[0];
            const passTime = moment.unix(pass.risetime);
            const timeFromNow = moment.duration(passTime.diff(now));
            const minutesFromNow = Number(timeFromNow.asMinutes()).toFixed(1);
            console.log(`${passTime} (in ${minutesFromNow} minutes) for ${pass.duration} seconds`);

            if (minutesFromNow &lt;= warningMinutes) { if (!providedNotification) { sendNotification(`The ISS will pass over in ${minutesFromNow} minutes`); providedNotification = true; } } else { providedNotification = false; } }) .catch(error =&gt; {
            console.log(error.response.body);
        });
    setTimeout(loop, loopSeconds * 1000);
}

loop();
</pre> 
        <p>In this new iteration, we only analyze the next time the ISS will pass over us. We also send a notification if it is within 30 minutes of passing over us. You will also see that we have now created a <code>sendNotification</code> function as a placeholder that we will ultimately use to send email messages. If we have already invoked the <code>sendNotication</code> function, we dont invoke it again. We only want to be notified once rather than bombarding our inbox with email messages every two minutes!</p> 
        <h3 id="i-want-to-send-email-using-node.js---nodemailer-to-the-rescue">I Want to Send Email Using Node.js  Nodemailer is Your Ticket!</h3> 
        <p>Now that we have the foundational code in place, we are ready to start sending email with the help of <a href="https://nodemailer.com/">Nodemailer</a>!</p> 
        <p>For this exercise, we will be using Gmail. Sending email by Gmail with Nodemailer is not the most secure option in the world since your password is sent in plaintext so it can be intercepted using network sniffers. For this reason, I recommend that you create a test Gmail account for this exercise. There are other email options that we can use in production applications such as <a href="https://www.mailgun.com/">Mailgun</a>; however, they require a lot more ceremony to set up, and Gmail works great as a testing platform to understand the mechanics of sending email messages with Nodemailer.</p> 
        <p>After creating a test Gmail account, you will need to configure it to <a href="https://support.google.com/accounts/answer/6010255?hl=en">allow less secure apps to access your account</a>. Nodemailer also provides some <a href="https://nodemailer.com/using-gmail/">additional notes</a> on using Gmail.</p> 
        <p>Next, we will install the Nodemailer npm package as follows:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="null">npm install nodemailer
</pre> 
        <h4 id="create-simple-email-test-program">Create Simple Email Test Program</h4> 
        <p>Lets go ahead and create some code in a file called <code>send-email-test.js</code> that we can use to verify that we are able to send email messages with Nodemailer:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">const nodemailer = require('nodemailer');

const transport = nodemailer.createTransport({
    service: 'Gmail',
    auth: {
        user: 'thisdavejdemo@gmail.com',
        pass: 'myGmailPassword',
    },
});

const mailOptions = {
    from: 'thisdavejdemo@gmail.com',
    to: 'thisdavejdemo@gmail.com',
    subject: 'hello world!',
    html: 'hello world!',
};

transport.sendMail(mailOptions, (error, info) =&gt; {
    if (error) {
        console.log(error);
    }
    console.log(`Message sent: ${info.response}`);
});
</pre> 
        <p>Substitute my email address and password with your email and password and then invoke it from the command line:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="null">$ node send-email-test.js
</pre> 
        <p>Hopefully you should receive an email message!</p> 
        <h4 id="create-general-purpose-nodemailer-module">Create General Purpose Nodemailer Module</h4> 
        <p>Lets go ahead and create a general purpose module that we can use internally to send email messages. First, create a file called <code>send-email.js</code> with the following content:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">const nodemailer = require('nodemailer');

const transport = nodemailer.createTransport({
    service: 'Gmail',
    auth: {
        user: 'thisdavejdemo@gmail.com',
        pass: 'myGmailPassword',
    },
});

module.exports = function sendEmail(to, subject, message) {
    const mailOptions = {
        from: 'thisdavejdemo@gmail.com',
        to,
        subject,
        html: message,
    };

    transport.sendMail(mailOptions, (error) =&gt; {
        if (error) {
            console.log(error);
        }
    });
};
</pre> 
        <p>This time around, we create a general purpose <code>sendEmail</code> function that enables us to specify a recipient (or recipients if separated by commas), a subject, and a message body. We export this function so it can be used with a <code>require</code> statement in our Nodej.js programs.</p> 
        <p>Lets go ahead and create a program to ensure that our module works:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">const sendEmail = require(./send-email2);

sendEmail('thisdavej@gmail.com', 'Test subject', 'Test message');</pre> 
        <p>Theres not a lot of code required here to invoke our module. Node modules are a great way to encapsulate functionality! Go ahead and invoke this code to confirm it works.</p> 
        <h3 id="encrypt-your-gmail-password-in-node.js-code">Encrypt your Gmail Password in Node.js Code</h3> 
        <p>While we cant encrypt our Gmail password as it travels over the wire on the Internet, we can apply some due diligence to encrypt it within our Node.js code. This will enable us to publish sample code to Github and other places without revealing our Gmail credentials to the world. To accomplish this objective, we utilize the <a href="https://nodejs.org/api/crypto.html">crypto module</a> that ships as part of the standard Node.js core API.</p> 
        <h4 id="create-encryption-module">Create Encryption Module</h4> 
        <p>Lets create a file called <code>crypt.js</code> that uses reversible encryption so that we can encrypt our GMail password and decrypt it later using the same password (key):</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">const crypto = require('crypto');

const algorithm = 'aes-256-ctr';
const password = process.env.cryptokey || 'secretPassword';

console.log(password);

function encrypt(text) {
    const cipher = crypto.createCipher(algorithm, password);
    let crypted = cipher.update(text, 'utf8', 'hex');
    crypted += cipher.final('hex');
    return crypted;
}

function decrypt(text) {
    const decipher = crypto.createDecipher(algorithm, password);
    let dec = decipher.update(text, 'hex', 'utf8');
    dec += decipher.final('utf8');
    return dec;
}

exports.encrypt = encrypt;
exports.decrypt = decrypt;
</pre> 
        <p>Notice that we provide the capability for the password to be supplied as an environment variable using <code>process.env.cryptokey</code>. If the user supplies an environment variable called <code>cryptokey</code>, it will be used instead of secretpassword. This enables us to avoid embedding our real password in the source code. We will explain how the environment variable is used in the next section.</p> 
        <h4 id="test-encryption-module">Test Encryption Module</h4> 
        <p>Perfect! Lets now create a file called <code>crypt-test</code> to verify that our reversible encryption is functioning properly:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">const crypt = require('./crypt.js');

const encPassword = crypt.encrypt('myGmailPassword');
console.log(encPassword);

console.log(crypt.decrypt(encPassword));
</pre> 
        <p>Let invoke our test program as follows:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="null">$ node crypt-test.js
</pre> 
        <p>You should see the encrypted version of your Gmail password and the decrypted version of your Gmail password. This little test program is also handy since you can copy and paste the encrypted version of your Gmail password into the code we will write next in the next section.</p> 
        <p>If we want to supply a different encryption password as an environment variable (for example, <code>mySecretKey</code>, we can use the following command syntax from Linux/OS X:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="null">$ cryptokey=newSecretKey node crypt-test.js
</pre> 
        <p>For Windows, we accomplish the goal like this:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="null">C:/&gt; set cryptokey=newSecretKey
C&gt;/&gt; node crypt-test.js
</pre> 
        <p>For real applications, you would probably create a shell script or a batch file to accomplish the goal in a more automated fashion.</p> 
        <h4 id="utilize-encryption-module-with-nodemailer">Utilize Encryption Module with Nodemailer</h4> 
        <p>Lets modify our Nodemailer module (<code>send-email.js</code>) to utlize our <code>crypt</code> module so we can conceal our Gmail password:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">const nodemailer = require('nodemailer');
const crypt = require('./crypt');

const encryptedPassword = '126891c03fef8f5fc1e1d8714d82bb';

const transport = nodemailer.createTransport({
    service: 'Gmail',
    auth: {
        user: 'thisdavejdemo@gmail.com',
        pass: crypt.decrypt(encryptedPassword),
    },
});

module.exports = function sendEmail(to, subject, message) {
    const mailOptions = {
        from: 'thisdavejdemo@gmail.com',
        to,
        subject,
        html: message,
    };

    transport.sendMail(mailOptions, (error) =&gt; {
        if (error) {
            console.log(error);
        }
        // console.log(`Message sent: ${info.response}`);
    });
};
</pre> 
        <p>Our Gmail password is now concealed in the code and it is decrypted just in time to be used by Nodemailer!</p> 
        <h3 id="the-final-product">The Final Product</h3> 
        <p>We are ready to put together the final product so we can be notified by email when the ISS is within 30 minutes of our GPS coordinates! Here we go:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">const got = require('got');
const moment = require('moment');
const sendEmail = require('./send-email');

const loopSeconds = 120;
const myLoc = { latitude: 32.715738, longitude: -117.161084 };
const url = `http://api.open-notify.org/iss-pass.json?lat=${myLoc.latitude}&amp;lon=${myLoc.longitude}`;

const warningMinutes = 30;
let providedNotification = false;

function sendNotification(message) {
    sendEmail('thisdavej@gmail.com', 'ISS notification', message);
    console.log('Email sent');
}

function loop() {
    got(url, { json: true })
        .then(iss =&gt; {
            const nextPasses = iss.body.response;
            const now = moment();
            const pass = nextPasses[0];
            const passTime = moment.unix(pass.risetime);
            const timeFromNow = moment.duration(passTime.diff(now));
            const minutesFromNow = Number(timeFromNow.asMinutes()).toFixed(1);
            console.log(`${passTime} (in ${minutesFromNow} minutes) for ${pass.duration} seconds`);

            if (minutesFromNow &lt;= warningMinutes) { if (!providedNotification) { sendNotification(`The ISS will pass over in ${minutesFromNow} minutes.`); providedNotification = true; } } else { providedNotification = false; } }) .catch(error =&gt; {
            console.log(error.response.body);
        });
    setTimeout(loop, loopSeconds * 1000);
}

loop();
</pre> 
        <p>As you can see, after we require our <code>send-email</code> module, we are able to send an email using a very simple function:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">sendEmail('thisdavej@gmail.com', 'ISS notification', message);
</pre> 
        <p>We could also send an email to more than one recipient by invoking the&nbsp;<code>sendEmail</code>&nbsp;function as follows:</p> 
        <pre class="EnlighterJSRAW" data-enlighter-language="js">sendEmail('thisdavej@gmail.com, john@doe.com', 'ISS notification', message);</pre> 
        <p>In both cases, we invoke a simple function and our Node module and Nodemailer do all of the heavy lifting behind the scenes. We have successfully encapsulated all of this functionality so we can send email messages with ease!</p> 
        <h3 id="sending-sms-text-messages-using-nodemailer">Sending SMS (Text) Messages Using Nodemailer</h3> 
        <p>Nodemailer is not limited to delivering email messages to your inbox. Keep in mind that we can also utilize email to send SMS (text) messages. For example, to send a text message to <code>610-555-1234</code>, you can simply send an email message to <code>6105551234@tmomail.net</code>, assuming the cell phone number is a T-Mobile subscriber. See <a href="http://www.emailtextmessages.com/">this page</a> for a list of SMS email addresses used by many carriers.</p> 
        <h3 id="conclusion">Conclusion</h3> 
        <p>We have opened up our world by learning how to send email (and text) messages in our Node.js programs. I hope you have enjoyed this tutorial and learned how to use Nodemailer and Node.js reversible encryption in the process.</p> 
        <p><a href="https://twitter.com/thisDaveJ">Follow @thisDaveJ</a> (Dave Johnson) on Twitter to stay up to date on the latest tutorials and tech articles.</p> 
        <h4 id="additional-articles">Additional Articles</h4> 
        <p><a href="http://thisdavej.com/node-js-iot-tracking-the-iss-through-the-sky/">Node.js IoT  Tracking the ISS through the Sky</a><br> <a href="http://thisdavej.com/node-js-iot-logging-data-that-is-out-of-this-world/">Node.js IoT: Logging Data That Is Out of This World</a><br> <a href="http://thisdavej.com/beginners-guide-to-installing-node-js-on-a-raspberry-pi/">Beginners Guide to Installing Node.js on a Raspberry Pi</a><br> <a href="http://thisdavej.com/upgrading-to-more-recent-versions-of-node-js-on-the-raspberry-pi/">Upgrading to more recent versions of Node.js on the Raspberry Pi</a></p> 
        <div class="addtoany_share_save_container addtoany_content_bottom">
         <div class="a2a_kit a2a_kit_size_16 addtoany_list" data-a2a-url="http://thisdavej.com/node-js-sending-email-notifications-using-nodemailer-and-gmail/" data-a2a-title="Node.js: Sending Email Notifications Using Nodemailer and Gmail">
          <a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=http%3A%2F%2Fthisdavej.com%2Fnode-js-sending-email-notifications-using-nodemailer-and-gmail%2F&amp;linkname=Node.js%3A%20Sending%20Email%20Notifications%20Using%20Nodemailer%20and%20Gmail" title="Facebook" rel="nofollow noopener" target="_blank"></a>
          <a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=http%3A%2F%2Fthisdavej.com%2Fnode-js-sending-email-notifications-using-nodemailer-and-gmail%2F&amp;linkname=Node.js%3A%20Sending%20Email%20Notifications%20Using%20Nodemailer%20and%20Gmail" title="Twitter" rel="nofollow noopener" target="_blank"></a>
          <a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=http%3A%2F%2Fthisdavej.com%2Fnode-js-sending-email-notifications-using-nodemailer-and-gmail%2F&amp;linkname=Node.js%3A%20Sending%20Email%20Notifications%20Using%20Nodemailer%20and%20Gmail" title="Google+" rel="nofollow noopener" target="_blank"></a>
          <a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=http%3A%2F%2Fthisdavej.com%2Fnode-js-sending-email-notifications-using-nodemailer-and-gmail%2F&amp;linkname=Node.js%3A%20Sending%20Email%20Notifications%20Using%20Nodemailer%20and%20Gmail" title="Reddit" rel="nofollow noopener" target="_blank"></a>
          <a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=http%3A%2F%2Fthisdavej.com%2Fnode-js-sending-email-notifications-using-nodemailer-and-gmail%2F&amp;linkname=Node.js%3A%20Sending%20Email%20Notifications%20Using%20Nodemailer%20and%20Gmail" title="LinkedIn" rel="nofollow noopener" target="_blank"></a>
          <a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share"><img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"></a>
         </div>
        </div> 
       </div> 
       <footer class="entry-footer"> 
        <div class="entry-meta"> 
         <p class="tags">Tagged as: <a href="http://thisdavej.com/tag/education/" rel="tag">education</a>, <a href="http://thisdavej.com/tag/iot/" rel="tag">iot</a>, <a href="http://thisdavej.com/tag/javascript/" rel="tag">javascript</a>, <a href="http://thisdavej.com/tag/node-js/" rel="tag">node.js</a>, <a href="http://thisdavej.com/tag/nodemailer/" rel="tag">nodemailer</a></p> 
         <p class="categories">Categorized in: <a href="http://thisdavej.com/category/iot/" rel="category tag">IoT</a>, <a href="http://thisdavej.com/category/node-js/" rel="category tag">Node.js</a></p> 
         <p class="date"><span class="posted-on"><a href="http://thisdavej.com/node-js-sending-email-notifications-using-nodemailer-and-gmail/" rel="bookmark"><i class="icon-calendar"></i><time class="entry-date published updated" datetime="2016-10-11T06:11:11+00:00">October 11, 2016</time></a></span><span class="byline"> <span class="author vcard"><a class="url fn n" href="http://thisdavej.com/author/suthisdavej/"><i class="icon-user"></i>Dave Johnson</a></span></span><span clas="post-comments"><a href="http://thisdavej.com/node-js-sending-email-notifications-using-nodemailer-and-gmail/#comments"><i class="icon-comment"></i>3 Comments</a></span></p> 
        </div> 
       </footer>
       <!-- .entry-footer --> 
      </article>
      <!-- #post-978 --> 
      <div id="comments" class="comments-area"> 
       <h2 class="comments-title"> 3 thoughts on <span>Node.js: Sending Email Notifications Using Nodemailer and Gmail</span> </h2> 
       <ol class="comment-list"> 
        <li id="comment-246" class="pingback even thread-even depth-1"> 
         <div class="comment-body">
           Pingback: 
          <a href="http://www.alvinashcraft.com/2016/10/12/dew-drop-october-12-2016-2343/" rel="external nofollow" class="url">Dew Drop - October 12, 2016 (#2343) - Morning Dew</a> 
         </div> </li>
        <!-- #comment-## --> 
        <li id="comment-254" class="pingback odd alt thread-odd thread-alt depth-1"> 
         <div class="comment-body">
           Pingback: 
          <a href="https://0ddn1x.wordpress.com/2016/10/14/email-notifications-with-nodemailer-and-gmail/" rel="external nofollow" class="url">Email notifications with Nodemailer (and Gmail) | 0ddn1x: tricks with *nix</a> 
         </div> </li>
        <!-- #comment-## --> 
        <li id="comment-1494" class="comment even thread-even depth-1"> 
         <article id="div-comment-1494" class="comment-body"> 
          <footer class="comment-meta"> 
           <div class="comment-author vcard"> 
            <img alt="" src="http://0.gravatar.com/avatar/fee4e3226cfb5ec0291eeef331fd17c3?s=64&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/fee4e3226cfb5ec0291eeef331fd17c3?s=128&amp;d=mm&amp;r=g 2x" class="avatar avatar-64 photo" height="64" width="64"> 
            <b class="fn">Abdelrahman Shouman</b> 
            <span class="says">says:</span> 
           </div>
           <!-- .comment-author --> 
           <div class="comment-metadata"> 
            <a href="http://thisdavej.com/node-js-sending-email-notifications-using-nodemailer-and-gmail/#comment-1494"> <time datetime="2017-05-21T01:12:39+00:00"> May 21, 2017 at 1:12 am </time> </a> 
           </div>
           <!-- .comment-metadata --> 
          </footer>
          <!-- .comment-meta --> 
          <div class="comment-content"> 
           <p>thanks that was helpful</p> 
          </div>
          <!-- .comment-content --> 
          <div class="reply">
           <a rel="nofollow" class="comment-reply-link" href="http://thisdavej.com/node-js-sending-email-notifications-using-nodemailer-and-gmail/?replytocom=1494#respond" onclick="return addComment.moveForm( &quot;div-comment-1494&quot;, &quot;1494&quot;, &quot;respond&quot;, &quot;978&quot; )" aria-label="Reply to Abdelrahman Shouman">Reply</a>
          </div> 
         </article>
         <!-- .comment-body --> </li>
        <!-- #comment-## --> 
       </ol>
       <!-- .comment-list --> 
       <div id="respond" class="comment-respond"> 
        <h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/node-js-sending-email-notifications-using-nodemailer-and-gmail/#respond" style="display:none;">Cancel reply</a></small></h3> 
        <form action="http://thisdavej.com/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate> 
         <p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> Required fields are marked <span class="required">*</span></p>
         <p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required></textarea></p>
         <p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required="true" required></p> 
         <p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required="true" required></p> 
         <p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" maxlength="200"></p> 
         <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="978" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"> </p>
         <p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="43cce25ed8"></p>
         <p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="48"></p> 
        </form> 
       </div>
       <!-- #respond --> 
      </div>
      <!-- #comments --> 
     </main>
     <!-- #main --> 
     <nav class="navigation post-navigation" role="navigation"> 
      <h2 class="screen-reader-text">Post navigation</h2> 
      <div class="nav-links">
       <div class="nav-previous">
        <a href="http://thisdavej.com/connecting-a-raspberry-pi-using-an-ethernet-crossover-cable-and-internet-connection-sharing/" rel="prev">Connecting a Raspberry Pi Using an Ethernet Crossover Cable and Internet Connection Sharing</a>
       </div>
       <div class="nav-next">
        <a href="http://thisdavej.com/how-to-install-or-upgrade-to-node-js-v7-on-the-raspberry-pi/" rel="next">How to Install or Upgrade to Node.js v7 on the Raspberry Pi</a>
       </div>
      </div> 
     </nav> 
    </div>
    <!-- #primary --> 
   </div>
   <!-- #content --> 
   <footer id="colophon" class="site-footer" role="contentinfo"> 
    <div class="site-colophon"> 
     <a href="https://twitter.com/thisDaveJ" class="twitter-follow-button" data-show-count="false">Follow @thisDaveJ</a> 
     <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
     <br> 
     <p style="font-size:1.25em;"><b>Support these free tutorials by buying something on Amazon with <a href="http://www.amazon.com/?tag=thisdavej-20">this link</a>.</b></p>
     <br> 
     <p>Copyright ©2017 Dave Johnson - using <a href="http://scotthsmith.com/projects/decode/">Decode</a> theme</p> 
    </div>
    <!-- .site-colophon --> 
   </footer>
   <!-- #colophon --> 
  </div>
  <!-- #page --> 
  <div id="sidebar" class="sidebar right"> 
   <div id="sidebar-top" class="sidebar-top SidebarTop clearfix"> 
    <button id="sidebar-close" class="sidebar-close SidebarClose" title="Hide sidebar"> 
     <svg width="100%" height="100%" viewbox="0 0 200 200" version="1.1" xmlns="http://www.w3.org/2000/svg"> 
      <path class="close-icon" d="M0,172.881356 L72.8813559,100 L1.0658141e-14,27.1186441 L27.1186441,-2.84217094e-14 L100,72.8813559 L172.881356,0 L200,27.1186441 L127.118644,100 L200,172.881356 L172.881356,200 L100,127.118644 L27.1186441,200 Z M0,172.881356" fill="#444444"></path> 
     </svg> </button> 
   </div> 
   <div class="sidebar-content"> 
    <div class="widget-area" role="complementary"> 
     <aside id="search-2" class="widget widget_search">
      <form role="search" method="get" class="search-form" action="http://thisdavej.com/"> 
       <label> <span class="screen-reader-text">Search for:</span> <input type="search" class="search-field" placeholder="Search " value="" name="s"> </label> 
       <input type="submit" class="search-submit" value="Search"> 
      </form>
     </aside> 
     <aside id="recent-posts-2" class="widget widget_recent_entries"> 
      <h2 class="widgettitle">Recent Posts</h2> 
      <ul> 
       <li> <a href="http://thisdavej.com/visual-studio-launch-video-with-my-son-and-me/">Visual Studio Launch Video with My Son and Me</a> </li> 
       <li> <a href="http://thisdavej.com/do-i-need-an-umbrella-today-google-sheets-and-javascript-to-the-rescue/">Do I Need an Umbrella Today? Google Sheets and JavaScript to the Rescue!</a> </li> 
       <li> <a href="http://thisdavej.com/consuming-json-web-data-using-google-sheets/">Consuming JSON Web Data Using Google Sheets</a> </li> 
       <li> <a href="http://thisdavej.com/consuming-web-api-json-data-using-curl-and-jq/">Consuming Web API JSON Data Using curl and jq</a> </li> 
       <li> <a href="http://thisdavej.com/creating-a-raspberry-pi-pandora-player-with-remote-web-control/">Creating a Raspberry Pi Pandora Player with Remote Web Control</a> </li> 
      </ul> 
     </aside> 
     <aside id="archives-2" class="widget widget_archive">
      <h2 class="widgettitle">Archives</h2> 
      <ul> 
       <li><a href="http://thisdavej.com/2017/03/">March 2017</a></li> 
       <li><a href="http://thisdavej.com/2017/02/">February 2017</a></li> 
       <li><a href="http://thisdavej.com/2017/01/">January 2017</a></li> 
       <li><a href="http://thisdavej.com/2016/12/">December 2016</a></li> 
       <li><a href="http://thisdavej.com/2016/11/">November 2016</a></li> 
       <li><a href="http://thisdavej.com/2016/10/">October 2016</a></li> 
       <li><a href="http://thisdavej.com/2016/09/">September 2016</a></li> 
       <li><a href="http://thisdavej.com/2016/08/">August 2016</a></li> 
       <li><a href="http://thisdavej.com/2016/07/">July 2016</a></li> 
       <li><a href="http://thisdavej.com/2016/06/">June 2016</a></li> 
       <li><a href="http://thisdavej.com/2016/04/">April 2016</a></li> 
       <li><a href="http://thisdavej.com/2016/03/">March 2016</a></li> 
       <li><a href="http://thisdavej.com/2016/02/">February 2016</a></li> 
      </ul> 
     </aside>
     <aside id="categories-2" class="widget widget_categories">
      <h2 class="widgettitle">Categories</h2> 
      <ul> 
       <li class="cat-item cat-item-7"><a href="http://thisdavej.com/category/general/">General</a> </li> 
       <li class="cat-item cat-item-1"><a href="http://thisdavej.com/category/iot/">IoT</a> </li> 
       <li class="cat-item cat-item-42"><a href="http://thisdavej.com/category/javascript/">JavaScript</a> </li> 
       <li class="cat-item cat-item-13"><a href="http://thisdavej.com/category/node-js/">Node.js</a> </li> 
       <li class="cat-item cat-item-16"><a href="http://thisdavej.com/category/raspberry-pi/">Raspberry Pi</a> </li> 
       <li class="cat-item cat-item-29"><a href="http://thisdavej.com/category/visual-studio-code/">Visual Studio Code</a> </li> 
       <li class="cat-item cat-item-11"><a href="http://thisdavej.com/category/windows/">Windows</a> </li> 
      </ul> 
     </aside>
     <aside id="tag_cloud-3" class="widget widget_tag_cloud">
      <h2 class="widgettitle">Tags</h2> 
      <div class="tagcloud">
       <a href="http://thisdavej.com/tag/apt/" class="tag-cloud-link tag-link-27 tag-link-position-1" style="font-size: 8pt;" aria-label="apt (1 item)">apt</a> 
       <a href="http://thisdavej.com/tag/arduino/" class="tag-cloud-link tag-link-9 tag-link-position-2" style="font-size: 8pt;" aria-label="Arduino (1 item)">Arduino</a> 
       <a href="http://thisdavej.com/tag/audio/" class="tag-cloud-link tag-link-34 tag-link-position-3" style="font-size: 8pt;" aria-label="audio (1 item)">audio</a> 
       <a href="http://thisdavej.com/tag/bash/" class="tag-cloud-link tag-link-40 tag-link-position-4" style="font-size: 10.3773584906pt;" aria-label="bash (2 items)">bash</a> 
       <a href="http://thisdavej.com/tag/command-line/" class="tag-cloud-link tag-link-12 tag-link-position-5" style="font-size: 11.9622641509pt;" aria-label="command-line (3 items)">command-line</a> 
       <a href="http://thisdavej.com/tag/curl/" class="tag-cloud-link tag-link-41 tag-link-position-6" style="font-size: 8pt;" aria-label="curl (1 item)">curl</a> 
       <a href="http://thisdavej.com/tag/dataviz/" class="tag-cloud-link tag-link-28 tag-link-position-7" style="font-size: 8pt;" aria-label="dataviz (1 item)">dataviz</a> 
       <a href="http://thisdavej.com/tag/debian/" class="tag-cloud-link tag-link-25 tag-link-position-8" style="font-size: 8pt;" aria-label="debian (1 item)">debian</a> 
       <a href="http://thisdavej.com/tag/education/" class="tag-cloud-link tag-link-10 tag-link-position-9" style="font-size: 15.9245283019pt;" aria-label="education (7 items)">education</a> 
       <a href="http://thisdavej.com/tag/html/" class="tag-cloud-link tag-link-35 tag-link-position-10" style="font-size: 8pt;" aria-label="html (1 item)">html</a> 
       <a href="http://thisdavej.com/tag/iot/" class="tag-cloud-link tag-link-31 tag-link-position-11" style="font-size: 13.2830188679pt;" aria-label="iot (4 items)">iot</a> 
       <a href="http://thisdavej.com/tag/javascript/" class="tag-cloud-link tag-link-15 tag-link-position-12" style="font-size: 19.2264150943pt;" aria-label="javascript (13 items)">javascript</a> 
       <a href="http://thisdavej.com/tag/jq/" class="tag-cloud-link tag-link-39 tag-link-position-13" style="font-size: 8pt;" aria-label="jq (1 item)">jq</a> 
       <a href="http://thisdavej.com/tag/json/" class="tag-cloud-link tag-link-38 tag-link-position-14" style="font-size: 11.9622641509pt;" aria-label="JSON (3 items)">JSON</a> 
       <a href="http://thisdavej.com/tag/linux/" class="tag-cloud-link tag-link-26 tag-link-position-15" style="font-size: 8pt;" aria-label="linux (1 item)">linux</a> 
       <a href="http://thisdavej.com/tag/markdown/" class="tag-cloud-link tag-link-30 tag-link-position-16" style="font-size: 10.3773584906pt;" aria-label="markdown (2 items)">markdown</a> 
       <a href="http://thisdavej.com/tag/microservices/" class="tag-cloud-link tag-link-37 tag-link-position-17" style="font-size: 13.2830188679pt;" aria-label="microservices (4 items)">microservices</a> 
       <a href="http://thisdavej.com/tag/networking/" class="tag-cloud-link tag-link-20 tag-link-position-18" style="font-size: 10.3773584906pt;" aria-label="networking (2 items)">networking</a> 
       <a href="http://thisdavej.com/tag/node/" class="tag-cloud-link tag-link-24 tag-link-position-19" style="font-size: 17.7735849057pt;" aria-label="node (10 items)">node</a> 
       <a href="http://thisdavej.com/tag/node-js/" class="tag-cloud-link tag-link-14 tag-link-position-20" style="font-size: 22pt;" aria-label="node.js (22 items)">node.js</a> 
       <a href="http://thisdavej.com/tag/nodemailer/" class="tag-cloud-link tag-link-33 tag-link-position-21" style="font-size: 8pt;" aria-label="nodemailer (1 item)">nodemailer</a> 
       <a href="http://thisdavej.com/tag/npm/" class="tag-cloud-link tag-link-21 tag-link-position-22" style="font-size: 11.9622641509pt;" aria-label="npm (3 items)">npm</a> 
       <a href="http://thisdavej.com/tag/raspi/" class="tag-cloud-link tag-link-18 tag-link-position-23" style="font-size: 19.8867924528pt;" aria-label="raspi (15 items)">raspi</a> 
       <a href="http://thisdavej.com/tag/stdlib/" class="tag-cloud-link tag-link-36 tag-link-position-24" style="font-size: 13.2830188679pt;" aria-label="stdlib (4 items)">stdlib</a> 
       <a href="http://thisdavej.com/tag/tutorial/" class="tag-cloud-link tag-link-22 tag-link-position-25" style="font-size: 21.2075471698pt;" aria-label="tutorial (19 items)">tutorial</a> 
       <a href="http://thisdavej.com/tag/vscode/" class="tag-cloud-link tag-link-23 tag-link-position-26" style="font-size: 16.5849056604pt;" aria-label="vscode (8 items)">vscode</a> 
       <a href="http://thisdavej.com/tag/windows/" class="tag-cloud-link tag-link-19 tag-link-position-27" style="font-size: 16.5849056604pt;" aria-label="windows (8 items)">windows</a> 
       <a href="http://thisdavej.com/tag/yaml/" class="tag-cloud-link tag-link-32 tag-link-position-28" style="font-size: 8pt;" aria-label="yaml (1 item)">yaml</a>
      </div> 
     </aside> 
    </div>
    <!-- .widget-area --> 
   </div> 
  </div>
  <!-- #sidebar --> 
  <script type="text/javascript" src="http://thisdavej.com/wp-content/themes/decode/scripts/decode.js?ver=3.0.9"></script> 
  <script type="text/javascript" src="http://thisdavej.com/wp-includes/js/comment-reply.min.js?ver=4.8.1"></script> 
  <script type="text/javascript" src="http://thisdavej.com/wp-includes/js/wp-embed.min.js?ver=4.8.1"></script> 
  <script type="text/javascript" src="http://thisdavej.com/wp-content/plugins/akismet/_inc/form.js?ver=3.3.4"></script>   
  <!-- Dynamic page generated in 0.364 seconds. --> 
  <!-- Cached page generated by WP-Super-Cache on 2017-09-16 17:32:37 --> 
  <!-- super cache -->
 </body>
</html>