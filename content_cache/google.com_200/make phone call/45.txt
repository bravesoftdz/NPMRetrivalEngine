<!doctype html>
<html>
 <head>
  <title>Twilio Project: Make and receive a phone call from the web browser</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css">
  <link href="//s3-us-west-2.amazonaws.com/radicalskills-app/app/style.css" rel="stylesheet">
  <script type="text/javascript">window.radicalskills = {};window.radicalskills.environment='prod'; window.radicalskills.publisher='twilio'; window.radicalskills.site='twilio'; </script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/angular/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.3.0-beta.14/angular-sanitize.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/cookies-js/dist/cookies.min.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/angular-bootstrap/ui-bootstrap-tpls.min.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/firebase/firebase.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/firebase-simple-login/firebase-simple-login.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/angularfire/angularfire.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/app/radicalskills.js"></script>
  <script src="//cdn.jsdelivr.net/algoliasearch/2.4.6/algoliasearch.min.js"></script>
  <link rel="stylesheet" type="text/css" href="//cloud.typography.com/6892374/646248/css/fonts.css">
  <style type="text/css">.level-0 .header-bar {border-top-color: #449d9b; } .level-0 .header-bar.title {border: 0px; background-color: #449d9b; color: #FFF; }.level-0 a, .level-0 h2, .level-0 h3, .level-0 h4, .level-0 h5, .level-0 .text {color: #449d9b;} .level-0 .bg, .level-0.bg, .level-0 .collapse-btn {background-color: #449d9b;color: #fff; } .level-0 .complete {background-color: #449d9b; border: 4px solid #449d9b;}.level-0 .bg-lighten, .level-0.bg-lighten {background-color: #55C4C2;color: #fff; } .level-0 .in-progress {border: 4px solid #55C4C2;}</style>
  <style type="text/css">.level-1 .header-bar {border-top-color: #b51b20; } .level-1 .header-bar.title {border: 0px; background-color: #b51b20; color: #FFF; }.level-1 a, .level-1 h2, .level-1 h3, .level-1 h4, .level-1 h5, .level-1 .text {color: #b51b20;} .level-1 .bg, .level-1.bg, .level-1 .collapse-btn {background-color: #b51b20;color: #fff; } .level-1 .complete {background-color: #b51b20; border: 4px solid #b51b20;}.level-1 .bg-lighten, .level-1.bg-lighten {background-color: #E22228;color: #fff; } .level-1 .in-progress {border: 4px solid #E22228;}</style>
  <style type="text/css">.video {background-image: url('//radicalskills-media.s3-us-west-2.amazonaws.com/twilio/badges/-JP2-xa3hcGUT_hcxfdy/Video-icon.png'); background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }</style>
  <style type="text/css">.level-2 .header-bar {border-top-color: #cc7a00; } .level-2 .header-bar.title {border: 0px; background-color: #cc7a00; color: #FFF; }.level-2 a, .level-2 h2, .level-2 h3, .level-2 h4, .level-2 h5, .level-2 .text {color: #cc7a00;} .level-2 .bg, .level-2.bg, .level-2 .collapse-btn {background-color: #cc7a00;color: #fff; } .level-2 .complete {background-color: #cc7a00; border: 4px solid #cc7a00;}.level-2 .bg-lighten, .level-2.bg-lighten {background-color: #FF9900;color: #fff; } .level-2 .in-progress {border: 4px solid #FF9900;}</style>
  <style type="text/css">.level-3 .header-bar {border-top-color: #287a96; } .level-3 .header-bar.title {border: 0px; background-color: #287a96; color: #FFF; }.level-3 a, .level-3 h2, .level-3 h3, .level-3 h4, .level-3 h5, .level-3 .text {color: #287a96;} .level-3 .bg, .level-3.bg, .level-3 .collapse-btn {background-color: #287a96;color: #fff; } .level-3 .complete {background-color: #287a96; border: 4px solid #287a96;}.level-3 .bg-lighten, .level-3.bg-lighten {background-color: #3299BB;color: #fff; } .level-3 .in-progress {border: 4px solid #3299BB;}</style>
  <style type="text/css">body, button, input, textarea {font-family: "Whitney SSm A","Whitney SSm B","Helvetica Neue","Helvetica","Arial",sans-serif;}
.header-font {font-family: "Knockout 27 A","Knockout 27 B",Helvetica,Arial,sans-serif; letter-spacing: 1.5px; -webkit-font-smoothing: antialiased;}
.title-font {font-family: "Cyclone Inline A","Cyclone Inline B",Helvetica,Arial,sans-serif; font-weight: normal; -webkit-font-smoothing: antialiased;}
.project .content  {line-height: 22px;}

.code {white-space: pre-line;}
.label {font-size: 100%; color: #333333;}
.points-block {min-height: 50px; border-right: 2px solid #ced2d5; text-align: center;}
.points-block .points {font-size: 35px;}
.points-block .point-type {font-size: 20px;}
.points-block:last-child {border-right: 0; }
.status .points-circle {width: 80px; height: 80px;}
.masthead {background-size: contain; height: 50px; margin-left:20px; margin-bottom:10px; margin-top:15px;}
.navbar-collapse {background-color: #2D2C2A;}
.navbar-collapse li.active a {background-color: #5D5C5A; }
.navbar-collapse li a:hover {background-color: #5D5C5A; }

.navbar-form ::-webkit-input-placeholder {color: #999999; }
.navbar-form :-moz-placeholder {
/* Firefox 18- */ color: #5D5C5A; }
.navbar-form ::-moz-placeholder {
/* Firefox 19+ */color: #5D5C5A; }
.navbar-form :-ms-input-placeholder {color: #5D5C5A; }
.navbar-form input {background-color: #2D2C2A; color: #999999;}
.navbar-form button {background-color: #5D5C5A; color: #999999;}
.level-0-icon {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Explorer-icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.explorer {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Explorer-icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.level-1-icon {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Apprentice-Dev-icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.messaging {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Messaging-icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.voice {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Voice-icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.client {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Client-icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.capstone {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Apprentice-Dev-icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.level-2-icon {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Innovator-icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.call-center {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Call-Center_icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.alerts-notifications {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Alerts-notifications_icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.level-3-icon {background-image: url("//s3-us-west-2.amazonaws.com/radicalskills-media/twilio/badges/Master-icon.png");
    background-repeat: no-repeat; background-size: contain; background-color: #C2C2C2; }
.search-name {font-size: 20px;}
.search-name em {font-weight: bold;}
.search-snippet em {font-weight: bold;}

i.fb, span.fb {color: #3b5998; }
i.tw, span.tw {color: #00aced; }
i.linkin, span.linkin {color: #007bb6; }

.status .available-projects {background-color: #FFF; }
.status .available-projects h2 {border-bottom: none;}

.rs-badge {display: inline-block; height: 60px; width: 60px; 
    background-size: 48px; background-position: center;
    margin-left: 2px; margin-bottom: 2px;
    border: 4px solid #C2C2C2;}
    
    
    </style>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/CodeMirror-master/lib/codemirror.js"></script>
  <link href="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/CodeMirror-master/lib/codemirror.css" rel="stylesheet">
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/CodeMirror-master/mode/xml/xml.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/CodeMirror-master/mode/javascript/javascript.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/CodeMirror-master/mode/php/php.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/CodeMirror-master/mode/python/python.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/CodeMirror-master/mode/ruby/ruby.js"></script>
  <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/CodeMirror-master/mode/clike/clike.js"></script>
  <style type="text/css">.CodeMirror {
  border: 1px solid #ddd;
  background-color: #eee;
  height: auto;
  margin-bottom: 10px;
}
</style>
 </head>
 <body ng-app="radicalskills" ng-controller="PageController as pageC" ng-init="$root.publisher='twilio'; $root.site='twilio'; $root.environment='prod'">
  <div ng-init="pageC.projectSlug='make-and-receive-call-from-browser'; pageC.projectStep='1'" class="container">
   <nav id="main-nav" role="navigation" class="collapse navbar-collapse bs-navbar-collapse header-font">
    <div style="width: 140px; height:  40px; background-repeat: no-repeat; background-size: 110px, 110px; margin-left: 10px; margin-top: 8px; margin-right: 0; margin-botton: 0; padding 0; background-image: url(https://static0.twilio.com/marketing/bundles/marketing/img/logos/wordmark.svg)" class="pull-left"></div>
    <div ng-if="$root.user" ng-controller="LoginController as loginC" style="color: white; margin-top: 5px;" class="col-sm-2 pull-right ng-cloak">
     <div ng-click="loginC.toggleDropdown()" style="font-size: 26px; color: white;">
      {{$root.user.firstName}} {{$root.user.lastName}}&nbsp;
      <i style="font-size: 10px; color:white;" class="glyphicon glyphicon-chevron-down"></i>
     </div>
     <div ng-if="loginC.showDropdown" style="font-size: 20px; position: absolute; z-index: 100; background-color: white; padding-right:20px; padding-left:20px; border: 1px solid #666; border-radius: 4px;">
      <a ng-click="loginC.logout()">log out</a>
      <br>
      <a ng-click="loginC.openChangePassword()">change password</a>
     </div>
     <div ng-click="loginC.toggleDropdown()" ng-if="loginC.showDropdown" style="position: absolute; z-index: 99;  width:1600px; height:2000px; margin-top: -800px; margin-left: -500px;"></div>
     <div class="ng-hide">
      <div ng-if="!$root.user" ng-controller="LoginController as loginC" class="login-prompt">
       You are not logged in. To track your progress and submit project validations, please 
       <a ng-click="loginC.openLogin()">login</a>&nbsp;or&nbsp;
       <a ng-click="loginC.openRegister()">register</a>.
       <script type="text/ng-template" id="registerModal.html"><form name="regForm" role="form"><div class="modal-header"><h3 class="modal-title">Registration</h3></div><div class="modal-body"><input type="text" required ng-model="loginC.firstName" placeholder="first name" style="width: 250px;" class="form-control"><br><input type="text" required ng-model="loginC.lastName" placeholder="last name" style="width: 250px;" class="form-control"><br><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.register()" ng-disabled="regForm.$invalid ||loginC.newpw!=loginC.repeat" class="btn btn-primary">Register</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
       <script type="text/ng-template" id="loginModal.html"><form name="loginForm" role="form" ng-hide="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Login</h3></div><div class="modal-body"><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.password" placeholder="password" style="width: 250px;" class="form-control"><br><div class="pull-right"><a ng-click="loginC.forgot=true; loginC.message='';">Forgot your password?</a></div>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.login()" ng-disabled="loginForm.$invalid" class="btn btn-primary">Login</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form><form name="forgotForm" role="form" ng-show="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Request Password Reset</h3></div><div class="modal-body">We will send an email allowing you to reset your password to: <input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.reset()" ng-disabled="forgotForm.$invalid" class="btn btn-primary">Request Reset</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
       <script type="text/ng-template" id="changePasswordModal.html"><form name="pwForm" role="form"><div class="modal-header"><h3 class="modal-title">Change Password</h3></div><div class="modal-body"><input type="password" required ng-model="loginC.oldpw" placeholder="old password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="new password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat new password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.changePassword()" ng-disabled="pwForm.$invalid || loginC.newpw!=loginC.repeat" ng-show="loginC.message!='Password Changed'" class="btn btn-primary">Change Password</button><button ng-click="$dismiss()" , ng-show="loginC.message!='Password Changed'" class="btn btn-warning">Cancel</button><button ng-click="$dismiss()" , ng-hide="loginC.message!='Password Changed'" class="btn btn-primary">Close</button></div></form></script>
      </div>
     </div>
    </div>
    <div ng-if="!$root.user" ng-controller="LoginController as loginC" class="col-sm-2 pull-right ng-cloak">
     <div style="font-size: 26px; color: white; margin-top: 5px;">
      <a style="color: white;" ng-click="loginC.openLogin()">login </a>&nbsp;or&nbsp;
      <a style="color: white;" ng-click="loginC.openRegister()">register</a>
     </div>
    </div>
    <ul class="nav navbar-nav ng-cloak">
     <li style="width: 140px;"><a style="width: 140px; font-size: 26px;" href="/welcome.html">Welcome</a></li>
     <li style="width: 140px;"><a style="width: 140px; font-size: 26px;" href="/skillsmaps/twilio_dev.html">&lt;Skills&gt;</a></li>
     <li ng-if="$root.user.private_skillsmaps" style="width: 140px;" ng-repeat="(slug, skillsmap) in $root.user.private_skillsmaps" ng-class="slug=='learn'?'active':''"><a style="width: 140px; font-size: 26px;" ng-href="/private/{{slug}}/{{slug}}.html">{{skillsmap.tab_name}} {{$root.slugs[slug]}}</a></li>
     <li style="width: 140px;"><a style="width: 140px; font-size: 26px;" href="/help.html">Help</a></li>
     <li style="width: 140px;"><a style="width: 140px; font-size: 26px;" href="/search.html">Search</a></li>
    </ul>
   </nav>
   <br>
   <br>
   <div class="row level-1">
    <div class="col-sm-3">
     <div class="sidebar_fixed">
      <div class="step row">
       <div class="header bg">
        Task 1
       </div>
       <div data-toggle="collapse" data-target="#taskNav1" class="collapsed">
        <div class="col-sm-2 expand-button bg-lighten">
         <i class="glyphicon glyphicon-chevron-down"></i>
        </div>
        <div class="col-sm-10 step-name">
         Placing phone calls from the browser
        </div>
       </div>
      </div>
      <ul id="taskNav1" class="step-content collapse white-bg in">
       <li>
        <div ng-show="pageC.wasCompleted('client-call-overview')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="#client-call-overview">Overview</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-call-extend-js')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="#client-call-extend-js">Extending your Javascript application</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('extending-your-client-twiml-application')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="#extending-your-client-twiml-application">Extending your TwiML application</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-call-build-app')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="#client-call-build-app">Extend your Client app</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-call-test-app')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="#client-call-test-app">Test your app</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-call-automated-validation')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="#client-call-automated-validation">Automated validation</a></li>
      </ul>
      <div class="step row">
       <div class="header bg">
        Task 2
       </div>
       <div data-toggle="collapse" data-target="#taskNav2" class="collapsed">
        <div class="col-sm-2 expand-button bg-lighten">
         <i class="glyphicon glyphicon-chevron-down"></i>
        </div>
        <div class="col-sm-10 step-name">
         Receiving phone calls from the browser
        </div>
       </div>
      </div>
      <ul id="taskNav2" class="step-content collapse white-bg">
       <li>
        <div ng-show="pageC.wasCompleted('client-inbound-overview')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="2.html#client-inbound-overview">Overview</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('inbound-calls-browser')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="2.html#inbound-calls-browser">Routing calls to the browser</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-receive-call')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="2.html#client-receive-call">Receiving a call</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('twilio-connection')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="2.html#twilio-connection">Twilio.Connection</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-inbound-js')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="2.html#client-inbound-js">Extending your Javascript application</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-inbound-build-app')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="2.html#client-inbound-build-app">Extend your Client app</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-inbound-test-app')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="2.html#client-inbound-test-app">Test your app</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-inbound-validation')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="2.html#client-inbound-validation">Submit for validation</a></li>
      </ul>
      <div class="step row">
       <div class="header bg">
        Task 3
       </div>
       <div data-toggle="collapse" data-target="#taskNav3" class="collapsed">
        <div class="col-sm-2 expand-button bg-lighten">
         <i class="glyphicon glyphicon-chevron-down"></i>
        </div>
        <div class="col-sm-10 step-name">
         Project Review
        </div>
       </div>
      </div>
      <ul id="taskNav3" class="step-content collapse white-bg">
       <li>
        <div ng-show="pageC.wasCompleted('client-inbound-share')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="3.html#client-inbound-share">Project summary</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('twilio-client-pricing')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="3.html#twilio-client-pricing">Pricing</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('more-about-client')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="3.html#more-about-client">More about Client</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-inbound-feedback')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="3.html#client-inbound-feedback">Provide Feedback on this Project</a></li>
       <li>
        <div ng-show="pageC.wasCompleted('client-inbound-whats-next')" style="color:#aaa" class="glyphicon glyphicon-ok pull-right"></div><a href="3.html#client-inbound-whats-next">What's next</a></li>
      </ul>
     </div>
    </div>
    <div class="col-md-9 project">
     <div class="section">
      <div style="font-size: 22px; padding-top:0; padding-bottom: 0;" class="header-bar bg-lighten title header-font">
       Level 1: Twilio Doer
      </div>
      <div class="content">
       <h3 style="font-size: 60px; line-height: 52px;" class="title-font">Project: Make and receive a phone call from the web browser</h3>
       <h4 style="font-weight: normal;">Task 1: Placing phone calls from the browser</h4>
      </div>
     </div>
     <div class="section">
      <div id="client-call-overview" class="header-bar">
       Overview
       <br>
      </div>
      <div class="content">
       <p>In this project we extend your Twilio Client application from the <a target="_blank" href="/radicalskills-media/twilio/projects/connect-to-client-in-a-browser/1.html">Connect to Twilio Client using a web browser <span class="glyphicon glyphicon-new-window"></span></a> project to make and receive calls to traditional phones. </p> 
       <p>For outbound calls we will do this by creating a TwiML application which uses the <code>&lt;Dial&gt;</code> tag. We'll also create a hangup button so the user can disconnect calls.</p> 
       <p>Demo app: <a target="_blank" href="http://twilio-elearning.herokuapp.com/320/project.php">Click here <span class="glyphicon glyphicon-new-window" style="font-size: 11px;"></span></a></p> 
       <p>For inbound calls, we will use the <code>Twilio.Device.incoming( handler(connection) )</code> handler to accept or reject a call to our Client.</p> 
       <p>Demo app: <a target="_blank" href="http://twilio-elearning.herokuapp.com/320/project2.php">Click here <span class="glyphicon glyphicon-new-window" style="font-size: 11px;"></span></a> then use your phone to place a call to 1 (866) 521-1086</p>
       <div class="footer">
        <div ng-show="!$root.user" class="ng-hide">
         <div ng-if="!$root.user" ng-controller="LoginController as loginC" class="login-prompt">
          You are not logged in. To track your progress and submit project validations, please 
          <a ng-click="loginC.openLogin()">login</a>&nbsp;or&nbsp;
          <a ng-click="loginC.openRegister()">register</a>.
          <script type="text/ng-template" id="registerModal.html"><form name="regForm" role="form"><div class="modal-header"><h3 class="modal-title">Registration</h3></div><div class="modal-body"><input type="text" required ng-model="loginC.firstName" placeholder="first name" style="width: 250px;" class="form-control"><br><input type="text" required ng-model="loginC.lastName" placeholder="last name" style="width: 250px;" class="form-control"><br><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.register()" ng-disabled="regForm.$invalid ||loginC.newpw!=loginC.repeat" class="btn btn-primary">Register</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="loginModal.html"><form name="loginForm" role="form" ng-hide="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Login</h3></div><div class="modal-body"><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.password" placeholder="password" style="width: 250px;" class="form-control"><br><div class="pull-right"><a ng-click="loginC.forgot=true; loginC.message='';">Forgot your password?</a></div>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.login()" ng-disabled="loginForm.$invalid" class="btn btn-primary">Login</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form><form name="forgotForm" role="form" ng-show="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Request Password Reset</h3></div><div class="modal-body">We will send an email allowing you to reset your password to: <input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.reset()" ng-disabled="forgotForm.$invalid" class="btn btn-primary">Request Reset</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="changePasswordModal.html"><form name="pwForm" role="form"><div class="modal-header"><h3 class="modal-title">Change Password</h3></div><div class="modal-body"><input type="password" required ng-model="loginC.oldpw" placeholder="old password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="new password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat new password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.changePassword()" ng-disabled="pwForm.$invalid || loginC.newpw!=loginC.repeat" ng-show="loginC.message!='Password Changed'" class="btn btn-primary">Change Password</button><button ng-click="$dismiss()" , ng-show="loginC.message!='Password Changed'" class="btn btn-warning">Cancel</button><button ng-click="$dismiss()" , ng-hide="loginC.message!='Password Changed'" class="btn btn-primary">Close</button></div></form></script>
         </div>
        </div>
        <div ng-hide="pageC.completed.loaded||!$root.user" class="ng-hide">
         Loading your completion data...
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; !pageC.wasCompleted('client-call-overview')" class="ng-hide">
         <a ng-click="pageC.markCompleted('client-call-overview')">Mark section complete</a>
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; pageC.wasCompleted('client-call-overview')" class="ng-hide">
         <span class="glyphicon glyphicon-ok"></span> Completed {{pageC.wasCompleted('client-call-overview') | date: 'shortDate'}}
        </div>
       </div>
      </div>
     </div>
     <div class="section">
      <div id="client-call-extend-js" class="header-bar">
       Extending your Javascript application
       <br>
      </div>
      <div class="content">
       <p>Our first task will be to place an outbound call to a telephone. We extend our javascript application in two ways. The first allows us to pass data from our web page to our TwiML application. The second is to add a hangup button allowing the user to disconnect a call.</p> 
       <tabset> 
        <tab heading="Passing data from web to TwiML">
          Our application's users need to enter the phone number they want to call. We will pass this value from the browser to our TwiML application, so our server side logic can include the user's desired number in the 
         <code>&lt;Dial&gt;</code> tag. To do this we will:
         <p></p> 
         <ol> 
          <li>Add a text box to the web page so that you can enter a phone number.</li> 
          <li>Pass that phone number as a named parameter in the Twilio.Device.connect([params]) function.</li> 
         </ol> 
         <p>Here's Example of passing data to Twilio.Device.connect:</p> 
         <textarea id="client-call-extend-js862">&lt;!-- Additional HTML --&gt;
&lt;input type="text" id="number" name="number" placeholder="Enter a phone number to call"/&gt;
&lt;script type="text/javascript"&gt;
     // updating our call() function
     function call() {
        // using jquery to get the value of the element with id 'number' 
        params = {"tocall": $("#number").val()}; 
        Twilio.Device.connect(params);
      }
&lt;/script&gt;
</textarea>
         <script>var id = "client-call-extend-js862";var config = {mode: "xml", lineNumbers: true, readOnly: true};CodeMirror.fromTextArea(document.getElementById(id), config);</script> 
         <p>With this change in place, the request to the TwiML application will include the custom 'tocall' parameter with the value from the text box.</p> 
        </tab> 
        <tab heading="Disconnecting Calls">
          We need to add a hangup button so the call can be disconnected. To do this we'll use the Twilio.Device. disconnectAll() function. A similar .disconnect() function is also available on the Twilio.Connection object and achieves the same result.
         <p></p> 
         <textarea id="client-call-extend-js1945">&lt;!-- Additional HTML --&gt;
&lt;button class="hangup" onclick="hangup();"&gt;Hangup&lt;/button&gt;
&lt;script type="text/javascript"&gt;
     function hangup() {
        Twilio.Device.disconnectAll();
      }
&lt;/script&gt;
</textarea>
         <script>var id = "client-call-extend-js1945";var config = {mode: "xml", lineNumbers: true, readOnly: true};CodeMirror.fromTextArea(document.getElementById(id), config);</script> 
        </tab> 
       </tabset>
       <div class="footer">
        <div ng-show="!$root.user" class="ng-hide">
         <div ng-if="!$root.user" ng-controller="LoginController as loginC" class="login-prompt">
          You are not logged in. To track your progress and submit project validations, please 
          <a ng-click="loginC.openLogin()">login</a>&nbsp;or&nbsp;
          <a ng-click="loginC.openRegister()">register</a>.
          <script type="text/ng-template" id="registerModal.html"><form name="regForm" role="form"><div class="modal-header"><h3 class="modal-title">Registration</h3></div><div class="modal-body"><input type="text" required ng-model="loginC.firstName" placeholder="first name" style="width: 250px;" class="form-control"><br><input type="text" required ng-model="loginC.lastName" placeholder="last name" style="width: 250px;" class="form-control"><br><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.register()" ng-disabled="regForm.$invalid ||loginC.newpw!=loginC.repeat" class="btn btn-primary">Register</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="loginModal.html"><form name="loginForm" role="form" ng-hide="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Login</h3></div><div class="modal-body"><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.password" placeholder="password" style="width: 250px;" class="form-control"><br><div class="pull-right"><a ng-click="loginC.forgot=true; loginC.message='';">Forgot your password?</a></div>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.login()" ng-disabled="loginForm.$invalid" class="btn btn-primary">Login</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form><form name="forgotForm" role="form" ng-show="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Request Password Reset</h3></div><div class="modal-body">We will send an email allowing you to reset your password to: <input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.reset()" ng-disabled="forgotForm.$invalid" class="btn btn-primary">Request Reset</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="changePasswordModal.html"><form name="pwForm" role="form"><div class="modal-header"><h3 class="modal-title">Change Password</h3></div><div class="modal-body"><input type="password" required ng-model="loginC.oldpw" placeholder="old password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="new password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat new password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.changePassword()" ng-disabled="pwForm.$invalid || loginC.newpw!=loginC.repeat" ng-show="loginC.message!='Password Changed'" class="btn btn-primary">Change Password</button><button ng-click="$dismiss()" , ng-show="loginC.message!='Password Changed'" class="btn btn-warning">Cancel</button><button ng-click="$dismiss()" , ng-hide="loginC.message!='Password Changed'" class="btn btn-primary">Close</button></div></form></script>
         </div>
        </div>
        <div ng-hide="pageC.completed.loaded||!$root.user" class="ng-hide">
         Loading your completion data...
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; !pageC.wasCompleted('client-call-extend-js')" class="ng-hide">
         <a ng-click="pageC.markCompleted('client-call-extend-js')">Mark section complete</a>
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; pageC.wasCompleted('client-call-extend-js')" class="ng-hide">
         <span class="glyphicon glyphicon-ok"></span> Completed {{pageC.wasCompleted('client-call-extend-js') | date: 'shortDate'}}
        </div>
       </div>
      </div>
     </div>
     <div class="section">
      <div id="extending-your-client-twiml-application" class="header-bar">
       Extending your TwiML application
       <br>
      </div>
      <div class="content">
       <p>In the <a target="_blank" href="/library/creating-capability-tokens.html">Create Capability Tokens <span class="glyphicon glyphicon-new-window"></span></a> section, we learned that the outbound permission will connect Client to your TwiML application. To dial a phone, your TwiML application uses the <code>&lt;Dial&gt;</code> and <code>&lt;Number&gt;</code> tags to create a <a target="_blank" href="/library/bridging-callers-ivr.html">new call leg <span class="glyphicon glyphicon-new-window"></span></a>, which connects the web browser to a phone number. Make sure to include the callerId in your <code>&lt;Dial&gt;</code> tag or the call will not succeed. The <code>&lt;Number&gt;</code> tag contains the phone number Twilio will dial. For some use cases a hardcoded value might be used, but in our case we'll use the custom parameter passed from our web page. Here's an example:</p> 
       <div class="btn-group btn-group-sm">
        <button class="btn" ng-class="$root.displayLang==&quot;php&quot;?&quot;btn-primary&quot;:&quot;btn-default&quot;" ng-click="$root.displayLang=&quot;php&quot;">PHP</button>
        <button class="btn" ng-class="$root.displayLang==&quot;python&quot;?&quot;btn-primary&quot;:&quot;btn-default&quot;" ng-click="$root.displayLang=&quot;python&quot;">Python</button>
        <button class="btn" ng-class="$root.displayLang==&quot;c#&quot;?&quot;btn-primary&quot;:&quot;btn-default&quot;" ng-click="$root.displayLang=&quot;c#&quot;">C#</button>
        <button class="btn" ng-class="$root.displayLang==&quot;java&quot;?&quot;btn-primary&quot;:&quot;btn-default&quot;" ng-click="$root.displayLang=&quot;java&quot;">Java</button>
        <button class="btn" ng-class="$root.displayLang==&quot;ruby&quot;?&quot;btn-primary&quot;:&quot;btn-default&quot;" ng-click="$root.displayLang=&quot;ruby&quot;">Ruby</button>
        <button class="btn" ng-class="$root.displayLang==&quot;nodejs&quot;?&quot;btn-primary&quot;:&quot;btn-default&quot;" ng-click="$root.displayLang=&quot;nodejs&quot;">Node.js</button>
       </div>
       <br>
       <div ng-if="!{&quot;php&quot;:true,&quot;python&quot;:true,&quot;c#&quot;:true,&quot;java&quot;:true,&quot;ruby&quot;:true,&quot;nodejs&quot;:true}[$root.displayLang]">
        <em>Please select an available language.</em>
       </div>
       <br> 
       <lang ng-show="$root.displayLang=='php'"> 
        <textarea id="extending-your-client-twiml-application1962">&lt;?php
header('Content-type: text/xml');

// phone number you've verified with Twilio
$callerId = "+1xxxxxxxxxx";

// custom parameter from Twilio.Device.connect
$tocall   = $_REQUEST['tocall'];
?&gt;
&lt;Response&gt;
    &lt;Dial callerId="&lt;?php echo $callerId ?&gt;"&gt;
        &lt;Number&gt;&lt;?php echo $tocall ?&gt;&lt;/Number&gt;
    &lt;/Dial&gt;
&lt;/Response&gt;
</textarea>
        <script>var id = "extending-your-client-twiml-application1962";var config = {mode: "php    ", lineNumbers: true, readOnly: true};CodeMirror.fromTextArea(document.getElementById(id), config);</script> 
       </lang> 
       <lang ng-show="$root.displayLang=='python'"> 
        <textarea id="extending-your-client-twiml-application2666">import twilio.twiml

// phone number you've verified with Twilio
callerId = "+1xxxxxxxxxx"

// custom parameter from Twilio.Device.connect
tocall = request.values.get('tocall', None)

resp = twilio.twiml.Response()

with resp.dial(callerId=caller_id) as r: 
    r.number(tocall)

return str(resp)
</textarea>
        <script>var id = "extending-your-client-twiml-application2666";var config = {mode: "python", lineNumbers: true, readOnly: true};CodeMirror.fromTextArea(document.getElementById(id), config);</script> 
       </lang> 
       <lang ng-show="$root.displayLang=='c#'"> 
        <textarea id="extending-your-client-twiml-application3283">@using System.Text.RegularExpressions;
@{
    Response.ContentType = "text/xml";

    // put a phone number you've verified with Twilio to use as a caller ID number
    string callerId = "+1xxxxxxxxxx";

    // custom parameter from Twilio.Device.connect
    string tocall = Request["tocall"];

}
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Response&gt;
    &lt;Dial callerId="@callerId"&gt;
          &lt;Number&gt;@tocall&lt;/Number&gt;
    &lt;/Dial&gt;
&lt;/Response&gt;
</textarea>
        <script>var id = "extending-your-client-twiml-application3283";var config = {mode: "clike", lineNumbers: true, readOnly: true};CodeMirror.fromTextArea(document.getElementById(id), config);</script> 
       </lang> 
       <lang ng-show="$root.displayLang=='java'"> 
        <textarea id="extending-your-client-twiml-application4084">package com.twilio;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

import com.twilio.sdk.verbs.TwiMLResponse;
import com.twilio.sdk.verbs.TwiMLException;
import com.twilio.sdk.verbs.Dial;
import com.twilio.sdk.verbs.Client;
import com.twilio.sdk.verbs.Number;

public class TwilioVoiceServlet extends HttpServlet {

    public void service(HttpServletRequest request, HttpServletResponse response) throws IOException {
        /* custom parameter from Twilio.Device.connect *?
        String tocall = request.getParameter("tocall");

        /* Use this as the caller ID when making calls from a browser. */
        String callerId = "+1xxxxxxxxxx";

        TwiMLResponse twiml = new TwiMLResponse();
        Dial dial = new Dial();
        try {
            dial.append(new Number(tocall));
            dial.setCallerId(callerId);
            twiml.append(dial);
        } catch (TwiMLException e) {
            e.printStackTrace();
        }
        response.setContentType("application/xml");
        response.getWriter().print(twiml.toXML());
    }
}
</textarea>
        <script>var id = "extending-your-client-twiml-application4084";var config = {mode: "clike", lineNumbers: true, readOnly: true};CodeMirror.fromTextArea(document.getElementById(id), config);</script> 
       </lang> 
       <lang ng-show="$root.displayLang=='ruby'"> 
        <textarea id="extending-your-client-twiml-application5575">require 'rubygems'
require 'sinatra'
require 'twilio-ruby'

# put a phone number you've verified with Twilio to use as a caller ID number 
caller_id = "+1xxxxxxxxxx"
# custom parameter from Twilio.Device.connect
tocall = params[:tocall]
response = Twilio::TwiML::Response.new do |r|
    # Should be your Twilio Number or a verified Caller ID
    r.Dial :callerId =&gt; caller_id do |d|
        d.Number(tocall)
    end
end
response.text
</textarea>
        <script>var id = "extending-your-client-twiml-application5575";var config = {mode: "ruby", lineNumbers: true, readOnly: true};CodeMirror.fromTextArea(document.getElementById(id), config);</script> 
       </lang> 
       <lang ng-show="$root.displayLang=='nodejs'"> 
        <textarea id="extending-your-client-twiml-application6334">var twilio = require('twilio');
var resp = new twilio.TwimlResponse();
var tocall = request.param('tocall'); // custom parameter from Twilio.Device.connect            

resp.dial(
    tocall,
    { callerId:'+1xxxxxxxxxx'} //a phone number you've verified with Twilio to use as a caller ID number      
 );
console.log(resp.toString());
</textarea>
        <script>var id = "extending-your-client-twiml-application6334";var config = {mode: "javascript", lineNumbers: true, readOnly: true};CodeMirror.fromTextArea(document.getElementById(id), config);</script> 
       </lang>
       <p></p> 
       <p></p>
       <div class="footer">
        <div ng-show="!$root.user" class="ng-hide">
         <div ng-if="!$root.user" ng-controller="LoginController as loginC" class="login-prompt">
          You are not logged in. To track your progress and submit project validations, please 
          <a ng-click="loginC.openLogin()">login</a>&nbsp;or&nbsp;
          <a ng-click="loginC.openRegister()">register</a>.
          <script type="text/ng-template" id="registerModal.html"><form name="regForm" role="form"><div class="modal-header"><h3 class="modal-title">Registration</h3></div><div class="modal-body"><input type="text" required ng-model="loginC.firstName" placeholder="first name" style="width: 250px;" class="form-control"><br><input type="text" required ng-model="loginC.lastName" placeholder="last name" style="width: 250px;" class="form-control"><br><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.register()" ng-disabled="regForm.$invalid ||loginC.newpw!=loginC.repeat" class="btn btn-primary">Register</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="loginModal.html"><form name="loginForm" role="form" ng-hide="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Login</h3></div><div class="modal-body"><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.password" placeholder="password" style="width: 250px;" class="form-control"><br><div class="pull-right"><a ng-click="loginC.forgot=true; loginC.message='';">Forgot your password?</a></div>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.login()" ng-disabled="loginForm.$invalid" class="btn btn-primary">Login</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form><form name="forgotForm" role="form" ng-show="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Request Password Reset</h3></div><div class="modal-body">We will send an email allowing you to reset your password to: <input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.reset()" ng-disabled="forgotForm.$invalid" class="btn btn-primary">Request Reset</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="changePasswordModal.html"><form name="pwForm" role="form"><div class="modal-header"><h3 class="modal-title">Change Password</h3></div><div class="modal-body"><input type="password" required ng-model="loginC.oldpw" placeholder="old password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="new password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat new password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.changePassword()" ng-disabled="pwForm.$invalid || loginC.newpw!=loginC.repeat" ng-show="loginC.message!='Password Changed'" class="btn btn-primary">Change Password</button><button ng-click="$dismiss()" , ng-show="loginC.message!='Password Changed'" class="btn btn-warning">Cancel</button><button ng-click="$dismiss()" , ng-hide="loginC.message!='Password Changed'" class="btn btn-primary">Close</button></div></form></script>
         </div>
        </div>
        <div ng-hide="pageC.completed.loaded||!$root.user" class="ng-hide">
         Loading your completion data...
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; !pageC.wasCompleted('extending-your-client-twiml-application')" class="ng-hide">
         <a ng-click="pageC.markCompleted('extending-your-client-twiml-application')">Mark section complete</a>
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; pageC.wasCompleted('extending-your-client-twiml-application')" class="ng-hide">
         <span class="glyphicon glyphicon-ok"></span> Completed {{pageC.wasCompleted('extending-your-client-twiml-application') | date: 'shortDate'}}
        </div>
       </div>
      </div>
     </div>
     <div class="section">
      <div id="client-call-build-app" class="header-bar">
       Extend your Client app
       <br>
      </div>
      <div class="content">
       <h4 id="requirementsforthisstep">Requirements for this step:</h4> 
       <ol> 
        <li>Create a TwiML application which uses the <code>&lt;Dial&gt;</code> and <code>&lt;Number&gt;</code> tags to call another phone.</li> 
        <li>Your TwiML application should expect a 'tocall' parameter and dynamically output that value in the <code>&lt;Number&gt;</code> tag</li> 
        <li>In your javascript application, modify the capability token to use the new ApplicationSid</li> 
        <li>In your HTML template, create a text input for the user to enter the phone number to dial</li> 
        <li>Pass the value of this div as a parameter named 'tocall' into Twilio.Device.Connect(params)</li> 
        <li>Add an HTML button of class="hangup" to your HTML</li> 
        <li>Create an onclick handler for the hangup button which calls Twilio.Device.disconnectAll()</li> 
       </ol> 
       <h4 id="resourcesandrefreshers">Resources and refreshers</h4> 
       <ul> 
        <li><a target="_blank" href="/library/twiml-applications.html">TwiML Applications <span class="glyphicon glyphicon-new-window"></span></a></li> 
        <li><a target="_blank" href="/library/creating-capability-tokens.html">Creating Capability Tokens <span class="glyphicon glyphicon-new-window"></span></a></li> 
        <li><a target="_blank" href="/library/twilio-js.html">Twilio.js <span class="glyphicon glyphicon-new-window"></span></a></li> 
       </ul>
       <div class="footer">
        <div ng-show="!$root.user" class="ng-hide">
         <div ng-if="!$root.user" ng-controller="LoginController as loginC" class="login-prompt">
          You are not logged in. To track your progress and submit project validations, please 
          <a ng-click="loginC.openLogin()">login</a>&nbsp;or&nbsp;
          <a ng-click="loginC.openRegister()">register</a>.
          <script type="text/ng-template" id="registerModal.html"><form name="regForm" role="form"><div class="modal-header"><h3 class="modal-title">Registration</h3></div><div class="modal-body"><input type="text" required ng-model="loginC.firstName" placeholder="first name" style="width: 250px;" class="form-control"><br><input type="text" required ng-model="loginC.lastName" placeholder="last name" style="width: 250px;" class="form-control"><br><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.register()" ng-disabled="regForm.$invalid ||loginC.newpw!=loginC.repeat" class="btn btn-primary">Register</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="loginModal.html"><form name="loginForm" role="form" ng-hide="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Login</h3></div><div class="modal-body"><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.password" placeholder="password" style="width: 250px;" class="form-control"><br><div class="pull-right"><a ng-click="loginC.forgot=true; loginC.message='';">Forgot your password?</a></div>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.login()" ng-disabled="loginForm.$invalid" class="btn btn-primary">Login</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form><form name="forgotForm" role="form" ng-show="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Request Password Reset</h3></div><div class="modal-body">We will send an email allowing you to reset your password to: <input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.reset()" ng-disabled="forgotForm.$invalid" class="btn btn-primary">Request Reset</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="changePasswordModal.html"><form name="pwForm" role="form"><div class="modal-header"><h3 class="modal-title">Change Password</h3></div><div class="modal-body"><input type="password" required ng-model="loginC.oldpw" placeholder="old password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="new password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat new password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.changePassword()" ng-disabled="pwForm.$invalid || loginC.newpw!=loginC.repeat" ng-show="loginC.message!='Password Changed'" class="btn btn-primary">Change Password</button><button ng-click="$dismiss()" , ng-show="loginC.message!='Password Changed'" class="btn btn-warning">Cancel</button><button ng-click="$dismiss()" , ng-hide="loginC.message!='Password Changed'" class="btn btn-primary">Close</button></div></form></script>
         </div>
        </div>
        <div ng-hide="pageC.completed.loaded||!$root.user" class="ng-hide">
         Loading your completion data...
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; !pageC.wasCompleted('client-call-build-app')" class="ng-hide">
         <a ng-click="pageC.markCompleted('client-call-build-app')">Mark section complete</a>
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; pageC.wasCompleted('client-call-build-app')" class="ng-hide">
         <span class="glyphicon glyphicon-ok"></span> Completed {{pageC.wasCompleted('client-call-build-app') | date: 'shortDate'}}
        </div>
       </div>
      </div>
     </div>
     <div class="section">
      <div id="client-call-test-app" class="header-bar">
       Test your app
       <br>
      </div>
      <div class="content">
       <p>Go through the following steps to test your app. At the end of this project when you submit your app for automatic validation, we will test against these same criteria.</p> 
       <table width="100%" class="table ng-scope"> 
        <tbody>
         <tr>
          <th>Test Step</th>
          <th>Troubleshooting</th>
         </tr> 
         <tr> 
          <td width="33%">1) Load your web application in the browser. You should see white text in a black box that reads 'Loading...'. </td> 
          <td> 
           <ul> 
            <li>If you see a white background with black text 'Loading...', make sure you're loading the page from your web server (http://localhost) instead of from a file:// URI.</li> 
            <li>If you see any application error messages or HTTP 500, check your code for any errors.</li> 
           </ul> </td> 
         </tr>
         <tr>
          <td>2) After a moment the white text should change to 'Ready', updated from the Device.ready callback handler.</td> 
          <td> 
           <ul> 
            <li>Check the <a target="_blank" href="http://webmasters.stackexchange.com/questions/8525/how-to-open-the-javascript-console-in-different-browsers">javascript <span class="glyphicon glyphicon-new-window" style="font-size: 11px;"></span></a> console to look for any syntax errors in the javascript code.</li> 
            <li>View the web page source code and ensure your capability token is output inside of Twilio.Device.setup(). This should be a long string, delimited by quotes, not an empty value or a code block.</li> 
            <li>Look for any errors logged by the Twilio Client to the javascript console, or to the screen via the .error callback handler</li> 
            <li>Add <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/API/console.log">console.log <span class="glyphicon glyphicon-new-window" style="font-size: 11px;"></span></a> statements to trace the path of code execution</li> 
            <li>Check the <a target="_blank" href="https://www.twilio.com/help/faq/twilio-client/how-do-i-troubleshoot-common-problems-with-twilio-client">required ports <span class="glyphicon glyphicon-new-window" style="font-size: 11px;"></span></a> (step 2) are open in your network.</li> 
            <li>Try running the <a target="_blank" href="http://clientsupport.twilio.com/">Client test tool <span class="glyphicon glyphicon-new-window" style="font-size: 11px;"></span></a> to confirm if your environment works with a reference app.</li> 
           </ul> </td> 
         </tr> 
         <tr> 
          <td>3) Enter your phone number in the text box and click the call button. After granting browser microphone permissions, you should hear the client chimes, followed by a call which rings through to your phone. You should be able to speak back and forth between browser and phone.</td> 
          <td> 
           <ul> 
            <li>If nothing happens when you click the call button, check the javascript console for any errors</li> 
            <li>If you hear 'an application error has occurred', check that the voice URL of your TwiML application, and refer to the the Twilio <a target="_blank" href="https://www.twilio.com/user/account/log/calls">call logs <span class="glyphicon glyphicon-new-window" style="font-size: 11px;"></span></a> for this call (request inspector section) for more information about what went wrong.</li> 
            <li>Make sure you've entered a valid number to dial into the text box. For non-US numbers, use an E.164 formatted number and check permissions in your Twilio account</li> 
            <li>Ensure you're passing the proper 'tocall' params into .connect(). See the 'Passing data from web to TwiML' section above for an example.</li> 
           </ul> </td> 
         </tr> 
         <tr> 
          <td> 4) Click the hangup button. The call should be ended, both on the Client and telephone side. </td> 
          <td> 
           <ul> 
            <li>Check for any javascript errors in the console. </li>
            <li>Ensure the onclick handler for the button triggers Twilio.Device.disconnectAll(). See the 'Disconnecting Calls' section above for an example.</li> 
           </ul> </td> 
         </tr> 
         <tr> 
          <td>5) Open the Twilio logs and inspect the call records for this project.</td> 
          <td> 
           <ul> 
            <li>You should observe an inbound call from your client, and an outbound call to your phone number. Note the CallSid for the outbound dial call, it's needed in the next section.</li> 
           </ul> </td> 
         </tr> 
        </tbody>
       </table>
       <div class="footer">
        <div ng-show="!$root.user" class="ng-hide">
         <div ng-if="!$root.user" ng-controller="LoginController as loginC" class="login-prompt">
          You are not logged in. To track your progress and submit project validations, please 
          <a ng-click="loginC.openLogin()">login</a>&nbsp;or&nbsp;
          <a ng-click="loginC.openRegister()">register</a>.
          <script type="text/ng-template" id="registerModal.html"><form name="regForm" role="form"><div class="modal-header"><h3 class="modal-title">Registration</h3></div><div class="modal-body"><input type="text" required ng-model="loginC.firstName" placeholder="first name" style="width: 250px;" class="form-control"><br><input type="text" required ng-model="loginC.lastName" placeholder="last name" style="width: 250px;" class="form-control"><br><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.register()" ng-disabled="regForm.$invalid ||loginC.newpw!=loginC.repeat" class="btn btn-primary">Register</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="loginModal.html"><form name="loginForm" role="form" ng-hide="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Login</h3></div><div class="modal-body"><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.password" placeholder="password" style="width: 250px;" class="form-control"><br><div class="pull-right"><a ng-click="loginC.forgot=true; loginC.message='';">Forgot your password?</a></div>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.login()" ng-disabled="loginForm.$invalid" class="btn btn-primary">Login</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form><form name="forgotForm" role="form" ng-show="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Request Password Reset</h3></div><div class="modal-body">We will send an email allowing you to reset your password to: <input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.reset()" ng-disabled="forgotForm.$invalid" class="btn btn-primary">Request Reset</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
          <script type="text/ng-template" id="changePasswordModal.html"><form name="pwForm" role="form"><div class="modal-header"><h3 class="modal-title">Change Password</h3></div><div class="modal-body"><input type="password" required ng-model="loginC.oldpw" placeholder="old password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="new password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat new password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.changePassword()" ng-disabled="pwForm.$invalid || loginC.newpw!=loginC.repeat" ng-show="loginC.message!='Password Changed'" class="btn btn-primary">Change Password</button><button ng-click="$dismiss()" , ng-show="loginC.message!='Password Changed'" class="btn btn-warning">Cancel</button><button ng-click="$dismiss()" , ng-hide="loginC.message!='Password Changed'" class="btn btn-primary">Close</button></div></form></script>
         </div>
        </div>
        <div ng-hide="pageC.completed.loaded||!$root.user" class="ng-hide">
         Loading your completion data...
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; !pageC.wasCompleted('client-call-test-app')" class="ng-hide">
         <a ng-click="pageC.markCompleted('client-call-test-app')">Mark section complete</a>
        </div>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; pageC.wasCompleted('client-call-test-app')" class="ng-hide">
         <span class="glyphicon glyphicon-ok"></span> Completed {{pageC.wasCompleted('client-call-test-app') | date: 'shortDate'}}
        </div>
       </div>
      </div>
     </div>
     <div class="section">
      <div id="client-call-automated-validation" class="header-bar">
       Automated validation
       <br>
      </div>
      <div ng-controller="ValidationController as validationC" ng-init="validationC.checkTwilio()" class="panel-body">
       <div id="login" ng-if="!$root.user">
        <div ng-if="!$root.user" ng-controller="LoginController as loginC" class="login-prompt">
         You are not logged in. To track your progress and submit project validations, please 
         <a ng-click="loginC.openLogin()">login</a>&nbsp;or&nbsp;
         <a ng-click="loginC.openRegister()">register</a>.
         <script type="text/ng-template" id="registerModal.html"><form name="regForm" role="form"><div class="modal-header"><h3 class="modal-title">Registration</h3></div><div class="modal-body"><input type="text" required ng-model="loginC.firstName" placeholder="first name" style="width: 250px;" class="form-control"><br><input type="text" required ng-model="loginC.lastName" placeholder="last name" style="width: 250px;" class="form-control"><br><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.register()" ng-disabled="regForm.$invalid ||loginC.newpw!=loginC.repeat" class="btn btn-primary">Register</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
         <script type="text/ng-template" id="loginModal.html"><form name="loginForm" role="form" ng-hide="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Login</h3></div><div class="modal-body"><input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.password" placeholder="password" style="width: 250px;" class="form-control"><br><div class="pull-right"><a ng-click="loginC.forgot=true; loginC.message='';">Forgot your password?</a></div>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.login()" ng-disabled="loginForm.$invalid" class="btn btn-primary">Login</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form><form name="forgotForm" role="form" ng-show="loginC.forgot"><div class="modal-header"><h3 class="modal-title">Request Password Reset</h3></div><div class="modal-body">We will send an email allowing you to reset your password to: <input type="email" required ng-model="loginC.email" placeholder="email" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp;</div><div class="modal-footer"><button ng-click="loginC.reset()" ng-disabled="forgotForm.$invalid" class="btn btn-primary">Request Reset</button><button ng-click="$dismiss()" class="btn btn-warning">Cancel</button></div></form></script>
         <script type="text/ng-template" id="changePasswordModal.html"><form name="pwForm" role="form"><div class="modal-header"><h3 class="modal-title">Change Password</h3></div><div class="modal-body"><input type="password" required ng-model="loginC.oldpw" placeholder="old password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.newpw" placeholder="new password" style="width: 250px;" class="form-control"><br><input type="password" required ng-model="loginC.repeat" placeholder="repeat new password" style="width: 250px;" class="form-control"><br>{{loginC.message}} &nbsp; {{(loginC.newpw!=loginC.repeat)?"New passswords do not match":""}}</div><div class="modal-footer"><button ng-click="loginC.changePassword()" ng-disabled="pwForm.$invalid || loginC.newpw!=loginC.repeat" ng-show="loginC.message!='Password Changed'" class="btn btn-primary">Change Password</button><button ng-click="$dismiss()" , ng-show="loginC.message!='Password Changed'" class="btn btn-warning">Cancel</button><button ng-click="$dismiss()" , ng-hide="loginC.message!='Password Changed'" class="btn btn-primary">Close</button></div></form></script>
        </div>
       </div>
       <div id="loading" ng-if="$root.user &amp;&amp; !validationC.twilio.loaded">
        <h4>Loading...</h4>
       </div>
       <div id="connect" ng-if="$root.user &amp;&amp; !validationC.twilio.accountSid &amp;&amp; validationC.twilio.loaded">
        <p>Please grant Twilio &lt;Skills&gt; read-only access to your Twilio account using the Twilio Connect API. We will use this to validate account configuration and log data related to the project you are submitting. You should only use a dedicated developer account for submitting projects and should not grant access to any production accounts.</p>
        <p>You can revoke access to your account at any time from your <a href="https://www.twilio.com/user/billing" target="_blank">Twilio billing page <i class="glyphicon glyphicon-new-window"></i></a></p>
        <br>
        <style type="text/css">#twilio-connect-button {
background: url(https://www.twilio.com/packages/connect-apps/images/connect-button.png);
width: 130px; height: 34px; display: inline-block;  margin: 0 auto;}
#twilio-connect-button:hover { background-position: 0 34px; }</style>
        <a id="twilio-connect-button" target="_blank" ng-href="https://www.twilio.com/authorize/CN38157e9ee10979000802e23700d98d86?state={{$root.environment+'|'+$root.user.id}}"></a>
       </div>
       <div id="validate" ng-if="validationC.twilio.accountSid">
        <h5>You are authorized with Twilio Connect for read-only access to your account and logs.</h5>
        <p>You can revoke access to your account at any time from your <a href="https://www.twilio.com/user/billing" target="_blank">Twilio billing page <i class="glyphicon glyphicon-new-window"></i></a></p>
        <div id="instructions">
         <p>Now that you have a working app, submit it for automatic validation. Enter the Call SID for the SECOND call leg (the outbound leg).</p>
        </div>
        <div id="input1">
         Leg 2 (outbound) Call SID: &nbsp; 
         <input type="text" ng-model="validationC.userInput" class="form-control">
        </div>
        <br>
        <input type="checkbox" ng-model="validationC.compliance">&nbsp;I verify that the work I am submitting is my own and that I comply with the&nbsp;
        <a ng-click="validationC.openEthics()">Code of Ethics</a>.
        <br>
        <br>
        <button ng-disabled="(sections[section.id].validation.inputLabel &amp;&amp; !validationC.userInput) || !validationC.compliance" ng-click="validationC.newAttempt('client-call-automated-validation')" class="btn btn-default bg-lighten">Validate</button>&nbsp;&nbsp;&nbsp;
        <div ng-if="validationC.currentAttempt" style="margin-top: 30px;">
         <h4 ng-if="validationC.currentAttempt.status=='Passed'" style="color: green;">Status: {{validationC.currentAttempt.status}}</h4>
         <h4 ng-if="validationC.currentAttempt.status=='Failed'" style="color: red;">Status: {{validationC.currentAttempt.status}}</h4>
         <h4 ng-if="validationC.currentAttempt.status!='Passed'&amp;&amp;validationC.currentAttempt.status!='Failed'">Status: {{validationC.currentAttempt.status}}</h4>
        </div>
        <tabset ng-if="validationC.currentAttempt.tests">
         <tab ng-repeat="test in validationC.currentAttempt.tests" active="validationC.tabs[$index]" heading="Test {{$index+1}}: {{test.name}}">
          <div style="padding:20px;">
           <h5>Status: {{test.status}}</h5>
           <div ng-repeat="item in test.transcript track by $index">
            <span ng-show="$index<test.transcript.length-1" style="color: green;" class="glyphicon glyphicon-ok"></span>
            <span ng-show="$index==test.transcript.length-1 &amp;&amp; test.status=='Passed'" style="color: green;" class="glyphicon glyphicon-ok"></span>
            <span ng-show="$index==test.transcript.length-1 &amp;&amp; test.status=='Failed'" style="color: red;" class="glyphicon glyphicon-remove"> </span>&nbsp;{{item}}
           </div>
          </div>
         </tab>
        </tabset>
        <div ng-show="$root.user&amp;&amp;pageC.completed.loaded &amp;&amp; pageC.wasCompleted('client-call-automated-validation')" class="footer">
         <span class="glyphicon glyphicon-ok"></span> Completed {{pageC.wasCompleted('client-call-automated-validation') | date: 'shortDate'}}
        </div>
        <script type="text/ng-template" id="ethicsModal.html"><div class="modal-header"><h3 class="modal-title">Code of Ethics</h3></div><div class="modal-body"><p>Twilio &lt;Skills&gt; is a place where developers get hands-on practice coding with Twilio. </p><p>We don't believe developers can demonstrate skill via multiple choice tests, we believe developers demonstrate skill by building amazing applications. </p><p>As such we expect all developers using Twilio &lt;Skills&gt; to exhibit the highest standards of honesty and integrity. </p><p>To that end, Twilio &lt;Skills&gt; users agree to: </p><ol><li>do your own work and submit only code that you have written, and </li><li>keep your work private, do not share it, host it, or make it available for other to use as their own. </li></ol></div><div class="modal-footer"><button ng-click="$dismiss()" class="btn btn-warning">Close</button></div></script>
       </div>
      </div>
     </div>
     <h4 class="pull-right"><a href="2.html">Next Task: Receiving phone calls from the browser<span class="glyphicon glyphicon-chevron-right"></span></a></h4>
     <br>
     <br>&nbsp;
    </div>
    <div class="footer"></div>
    <br>
    <br>
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="https://s3-us-west-2.amazonaws.com/radicalskills-app/app/js/sass-bootstrap.min.js"></script>
    <script type="text/javascript" src="https://s3-us-west-2.amazonaws.com/radicalskills-app/app/js/script.js"></script>
    <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
if (Cookies.get('user')!=undefined) {
    ga('create', 'UA-53166315-1', {'userId': angular.fromJson(Cookies.get('user')).id}); 
} else {
    ga('create', 'UA-53166315-1', 'auto'); 
}
ga('send', 'pageview');
</script>
    <a href="http://www.radicalskills.com" target="_blank">Powered by <img src="//radicalskills-app.s3.amazonaws.com/images/radicalskills.png" height="30"></a>
    <p>&nbsp;</p>
    <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/videogular/videogular.min.js"></script>
    <script src="//s3-us-west-2.amazonaws.com/radicalskills-app/lib/videogular-controls/controls.min.js"></script>
   </div>
  </div>
 </body>
</html>