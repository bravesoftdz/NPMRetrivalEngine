<!doctype html>
<html>
 <head> 
  <meta charset="utf-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link rel="stylesheet" type="text/css" href="../jkincludes/articlesv2.css"> 
  <script type="text/javascript" src="../jkincludes/syntaxhighlight/syntax3/scripts/shCore.js"></script> 
  <script type="text/javascript" src="../jkincludes/syntaxhighlight/syntax3/scripts/shBrushJScript.js"></script> 
  <link href="../jkincludes/syntaxhighlight/syntax3/styles/shCoreDefault.css" rel="stylesheet" type="text/css"> 
  <script type="text/javascript">
     SyntaxHighlighter.all()
</script> 
  <title>Using the navigator object to detect client's browser</title> 
  <style>
<!--

.dropcontent{
width: 500px;
height: 140px;
border: 1px solid black;
background-color: #FFF4DD;
display:block;
}

.dropcontent{display:none;}
-->
</style> 
 </head> 
 <body> 
  <div id="maincontainer"> 
   <div id="topsection"> 
    <div id="pathlinks">
     <a href="http://www.javascriptkit.com">Home</a> 
     <img border="0" src="../jkincludes/arrow.gif" width="15" height="18"> 
     <a href="http://www.javascriptkit.com/javatutors/">JavaScript Tutorials</a> 
     <img border="0" src="../jkincludes/arrow.gif" width="15" height="18"> Using the navigator object to detect client's browser
    </div> 
    <!-- BuySellAds Ad Code --> 
    <script type="text/javascript">
(function(){
  var bsa = document.createElement('script');
     bsa.type = 'text/javascript';
     bsa.async = true;
     bsa.src = 'http://s3.buysellads.com/ac/bsa.js';
  (document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(bsa);
})();
</script> 
    <!-- End BuySellAds Ad Code --> 
    <script type="text/javascript" src="http://www.javascriptkit.com/jkincludes/syntaxhighlight/shCore.js"></script> 
    <script type="text/javascript" src="http://www.javascriptkit.com/jkincludes/syntaxhighlight/shBrushJScript.js"></script> 
    <link href="http://www.javascriptkit.com/jkincludes/syntaxhighlight/shCore.css" rel="stylesheet" type="text/css"> 
    <link href="http://www.javascriptkit.com/jkincludes/syntaxhighlight/shThemeDefault.css" rel="stylesheet" type="text/css"> 
    <script type="text/javascript">
     SyntaxHighlighter.all()
</script> 
    <form id="jksitesearch" method="get" action="http://www.javascriptkit.com/search/search.php" class="zoom_searchform" style="text-align:right" onSubmit="if (this.zoom_query.value=='' || this.zoom_query.value=='Search JavaScript Kit'){alert('Please enter a search term first!'); return false}"> 
     <input type="text" name="zoom_query" id="zoom_query" size="20" value="Search JavaScript Kit" class="zoom_searchbox"> 
     <input class="zoom_button" type="image" src="http://www.javascriptkit.com/jkincludes/search.gif" title="Search JK"> 
     <input name="zoom_per_page" id="zoom_per_page" type="hidden" value="10"> 
     <input name="zoom_and" id="zoom_and" type="hidden" value="1"> 
     <input type="hidden" name="zoom_sort" value="0"> 
     <div id="jksitesearch_cat"> 
      <b>Categories:</b> 
      <input type="checkbox" name="zoom_cat[]" value="-1" id="searchall" style="margin-left: 5px">
      <label for="searchall">All</label> 
      <input type="checkbox" name="zoom_cat[]" id="javascriptssearch" value="0">
      <label for="javascriptssearch">Free JS/ Applets</label> 
      <input type="checkbox" name="zoom_cat[]" id="tutorialsearch" value="1" checked>
      <label for="tutorialsearch">Tutorials</label> 
      <input type="checkbox" name="zoom_cat[]" id="referencesearch" value="2">
      <label for="referencesearch">References</label> 
     </div> 
    </form> 
    <div id="bannerarea"> 
     <script type="text/javascript" src="http://www.javascriptkit.com/adbanner.js"></script> 
    </div> 
   </div> 
   <div id="contentwrapper"> 
    <div id="contentcolumn">
     <h3 align="left">Using the navigator object to detect client's browser</h3> 
     <p align="left"><b><i>Last updated: January 20th, 15'</i></b></p> 
     <p align="left"> Until one browser remains standing on the web (if ever), browser detection will continue to be part of any good JavaScripter's life. Whether you're gliding a div across the screen or creating an image rollover, it's fundamental that only relevant browsers pick up on your code. In this tutorial we'll probe the navigator object of JavaScript, and show how to use it to perform browser detection, whether the subject is Firefox, Internet Explorer, Opera, etc.</p> 
     <h4 align="left"> <img border="0" src="../jkincludes/arrow2.gif" width="17" height="17"> The navigator object</h4> 
     <p align="left">The navigator object was conceived back in the days when Netscape Navigator reined supreme. These days it serves as much as an irony of Netscape's demise as way of probing browser information.</p> 
     <p align="left">The navigator object of JavaScript contains the following core properties:</p> 
     <table border="1" cellspacing="0" cellpadding="2" width="100%"> 
      <tbody> 
       <tr> 
        <th class="captions" width="25%" valign="top" bgcolor="#D8EA99"> Properties</th> 
        <th class="captions" width="75%" bgcolor="#D8EA99">Description</th> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">appCodeName</td> 
        <td width="75%">The code name of the browser.</td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">appName</td> 
        <td width="75%">The name of the browser. In Firefox for example the returned value is "<code>Netscape</code>", while in IE10 and below, it's "<code>Microsoft Internet Explorer</code>" as can be expected. Starting in IE11+, however, the returned value of <code>appName</code> is also "<code>Netscape</code>".</td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">appVersion</td> 
        <td width="75%">Version information for the browser (ie: <code>5.0 (Windows)</code>).</td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">cookieEnabled</td> 
        <td width="75%">Boolean that indicates whether the browser has cookies enabled.</td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">language</td> 
        <td width="75%">Returns the default language of the browser version (ie: <code>en-US</code>). <b>NS and Firefox only.</b></td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">maxTouchPoints</td> 
        <td width="75%">The maximum number of simultaneous touch contacts supported by the device. <b>IE10+ only.</b></td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">mimeTypes[]</td> 
        <td width="75%">An array of all MIME types supported by the client. <b>NS and Firefox only.</b></td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">onLine</td> 
        <td width="75%">A Boolean that returns true if the browser is online, false if not. Note that different browsers have different minimum requirements when deciding if the browser is online, which may not accurately correlate to whether the browser is in fact able to access the web. In other words, you should not solely rely on the <code>onLine</code> property to detect whether the user is online.</td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">platform[]</td> 
        <td width="75%">The platform of the client's computer (ie: <code>Win32</code>).</td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">plugins</td> 
        <td width="75%">An array of all plug-ins currently installed on the client. <b>NS and Firefox only.</b></td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">systemLanguage</td> 
        <td width="75%">Returns the default language of the operating system (ie: <code>en-us</code>). <b>IE only.</b></td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">userAgent</td> 
        <td width="75%">String passed by browser as user-agent header. The <code>userAgent</code> value for IE9 is <code>"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1;</code>)" while for Mozilla Firefox 35, it's "<code>Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0</code>".<p> Starting in IE11+, the <code>userAgent</code> return value is a drastic departure from all older versions' of IE. In IE11 Windows 8 the returned string is "<code>Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko</code>". This is different from previous versions on the following notable ways:</p> 
         <ul> 
          <li>The compatible ("compatible") and browser ("MSIE") keywords have been removed, meaning you can no longer just look for "MSIE" in the <code>userAgent</code> to sniff out IE in IE11 or above browsers.</li> 
          <li>The version of the browser is now reported by a new revision ("rv") keyword.</li> 
         </ul> <p>You can probe the <code>userAgent</code> property for mobile browsers such as iPhone, iPad, or Android. The following variable returns true if the user is using one of the following mobile browsers:</p> <p class="examplecode" align="left">//returns true if user is using one of the following mobile browsers<br> var ismobile=navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i)</p></td> 
       </tr> 
       <tr> 
        <td width="25%" valign="top">userLanguage</td> 
        <td width="75%">Returns the preferred language setting of the user (ie: <code>en-ca</code>). <b>IE only.</b></td> 
       </tr> 
      </tbody> 
     </table> 
     <p align="left">Let's see exactly what these properties reveal of the browser you're <b>currently using</b>:</p> 
     <p align="left">
      <!--webbot bot="HTMLMarkup" startspan --><script type="text/javascript">
with (document){
write("<b>appCodeName:</b> "+navigator.appCodeName+"<br />")
write("<b>appName:</b> "+navigator.appName+"<br />")
write("<b>appVersion:</b> "+navigator.appVersion+"<br />")
write("<b>userAgent:</b> "+navigator.userAgent+"<br />")
write("<b>platform:</b> "+navigator.platform+"<br />")
}
</script>
      <!--webbot bot="HTMLMarkup" endspan i-checksum="37241" --></p> 
     <h4 align="left"> <img border="0" src="../jkincludes/arrow2.gif" width="17" height="17"> At a glance</h4> 
     <p align="left">At a glance at the above table, you may be swayed towards turning to the following two properties to do your browser detection bidding:</p> 
     <p class="examplecode" align="left">navigator.appName<br> navigator.appVersion</p> 
     <p align="left">After all, you are trying to detect a browser's name and version right? However, they both will most likely mislead you. In browsers such as various versions of Netscape and Firefox, these two properties return simply "Netscape" for <code>appName</code>, and 5.0 for <code>appVersion</code> without any further distinction for Firefox and its version, and hence are pretty much useless in the real world. For example, in both Firefox 5.x and Firefox 35, these two properties return:</p> 
     <div align="left"> 
      <pre align="left"><b>appName:</b> Netscape
<b>appVersion:</b> 5.0 (Windows)</pre> 
     </div> 
     <p align="left">We need to turn to a property that's more thorough in its investigative work if we want more consistency and accuracy, and that turns out to be <code>navigator.userAgent</code>.</p> 
     <h4 align="left"> <img border="0" src="../jkincludes/arrow2.gif" width="17" height="17"> Detecting Firefox x.x</h4> 
     <p align="left">In Firefox 5.0 for example, the <code>userAgent</code> property reads:</p> 
     <p class="examplecode" align="left"><b>UserAgent:</b> Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0</p> 
     <p align="left">And in Firefox 35:</p> 
     <p class="examplecode" align="left">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0</p> 
     <p align="left">The detail we're interested in apparently lies at the very end, or <code>Firefox/35.0</code> for example. Different versions of Firefox will contain a different version number, but the pattern is consistent enough. The part we're interested in occurs after the string "<code>Firefox/</code>", or the exact version number. There are many ways to get to it using either standard <a href="http://www.javascriptkit.com/jsref/string.shtml">String</a> or <a href="http://www.javascriptkit.com/jsref/regexp.shtml">RegExp</a> methods- I'm opting for the later here:</p> 
     <div align="left"> 
      <p class="examplecode">&lt;script type="text/javascript"&gt;<br> //Note: userAgent in FF2.0.0.13 WinXP returns: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13<br> // userAgent in FF35 Win7 returns: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0<br> <br> if (/Firefox[\/\s](\d+\.\d+)/.test(navigator.userAgent)){ //test for Firefox/x.x or Firefox x.x (ignoring remaining digits);<br> &nbsp;var ffversion=new Number(RegExp.$1) // capture x.x portion and store as a number<br> &nbsp;if (ffversion&gt;=35)<br> document.write("You're using FF 35 or above")<br> &nbsp;else if (ffversion&gt;=5)<br> document.write("You're using FF 5.x or above")<br> &nbsp;else if (ffversion&gt;=4)<br> document.write("You're using FF 4.x or above")<br> &nbsp;else if (ffversion&gt;=3)<br> document.write("You're using FF 3.x or above")<br> &nbsp;else if (ffversion&gt;=2)<br> document.write("You're using FF 2.x")<br> &nbsp;else if (ffversion&gt;=1)<br> document.write("You're using FF 1.x")<br> }<br> else<br> &nbsp;document.write("n/a")<br> <br> &lt;/script&gt;</p>
     </div> 
     <p align="left"><b>Output:</b> 
      <!--webbot bot="HTMLMarkup" startspan --><script type="text/javascript">
//Note: userAgent in FF2.0.0.13 WinXP returns: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13
// userAgent in FF35 Win7 returns: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0

if (/Firefox[\/\s](\d+\.\d+)/.test(navigator.userAgent)){ //test for Firefox/x.x or Firefox x.x (ignoring remaining digits);
?var ffversion=new Number(RegExp.$1) // capture x.x portion and store as a number
?if (ffversion>=35)
document.write("You're using FF 35 or above")
?else if (ffversion>=5)
document.write("You're using FF 5.x or above")
?else if (ffversion>=4)
document.write("You're using FF 4.x or above")
?else if (ffversion>=3)
document.write("You're using FF 3.x or above")
?else if (ffversion>=2)
document.write("You're using FF 2.x")
?else if (ffversion>=1)
document.write("You're using FF 1.x")
}
else
?document.write("n/a")

</script>
      <!--webbot bot="HTMLMarkup" endspan i-checksum="40653" --></p> 
     <p align="left">Basically, I'm capturing just the <b>v<i>ersonMajor.versionMinor</i></b> portion of the full version number of Firefox (ie: 2.0.0.13 becomes simply 2.0), and using that as basis to detect the various versions of Firefox. Delving any deeper, and the returned version may no longer be a number but a string (ie: 2.0.0), which makes numeric comparisons cumbersome.</p> 
     <h4 align="left"> <img border="0" src="../jkincludes/arrow2.gif" width="17" height="17"> Detecting IE x.x</h4> 
     <p align="left">In IE until the advent of IE11, the token "<code>MSIE</code>" exist inside the <code>userAgent</code> property that tells us the pedigree of the browser. In IE 7.0 for example, the <code>userAgent</code> property reads:</p> 
     <p class="examplecode" align="left"><b>UserAgent:</b> Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727)</p> 
     <p align="left">However, starting in IE11, the <code>userAgent</code> return value takes a drastic departure from all older versions' of IE. For example in IE11 Windows 8 the returned string is:</p> 
     <p class="examplecode"><b>UserAgent: </b> Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko</p> 
     <p align="left">This is different from previous versions in the following notable ways:</p> 
     <ul> 
      <li>The compatible ("compatible") and browser ("MSIE") keywords have been removed, meaning you can no longer just look for "MSIE" in the <code>userAgent</code> to sniff out IE in IE11 or above browsers.</li> 
      <li>The version of the browser is now reported by a new revision ("<code>rv</code>") keyword.</li> 
     </ul> 
     <p>Details of the change is discussed in this <a target="_blank" href="http://msdn.microsoft.com/en-us/library/ie/bg182625(v=vs.85).aspx"> IE blog post</a>. With the dramatic change, it means testing for IE now needs to take two separate routes, one that looks for the "MSIE" token and version number that follows, and the other, the version number contained inside the "rv" token where the "Trident" token exists inside the <code> userAgent</code> string.</p> 
     <p style="border:1px solid orange; background:lightyellow;padding:5px"><b> Note</b> that some variants of older IE versions also contain "Trident" in its <code>userAgent</code> string, so do not rely just on "Trident" alone to separate IE11+ from the rest of the herd- it's only the presence of <b>BOTH</b> "Trident' and a "rv" token that uniquely indicates this is a IE11 or above browser.</p> 
     <p>The following detection scheme takes into account this and sniffs out any version of IE:</p> 
     <div align="left"> 
      <p class="examplecode">&lt;script type="text/javascript"&gt;<br> //userAgent in IE7 WinXP returns: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727)<br> //userAgent in IE11 Win7 returns: Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko<br> <br> if (navigator.userAgent.indexOf('MSIE') != -1)<br> &nbsp;var detectIEregexp = /MSIE (\d+\.\d+);/ //test for MSIE x.x<br> else // if no "MSIE" string in userAgent<br> &nbsp;var detectIEregexp = /Trident.*rv[ :]*(\d+\.\d+)/ //test for rv:x.x or rv x.x where Trident string exists<br> <br> if (detectIEregexp.test(navigator.userAgent)){ //if some form of IE<br> &nbsp;var ieversion=new Number(RegExp.$1) // capture x.x portion and store as a number<br> &nbsp;if (ieversion&gt;=12)<br> &nbsp; document.write("You're using IE12 or above")<br> &nbsp;else if (ieversion&gt;=11)<br> &nbsp; document.write("You're using IE11 or above")<br> &nbsp;else if (ieversion&gt;=10)<br> &nbsp; document.write("You're using IE10 or above")<br> &nbsp;else if (ieversion&gt;=9)<br> &nbsp; document.write("You're using IE9 or above")<br> &nbsp;else if (ieversion&gt;=8)<br> &nbsp; document.write("You're using IE8 or above")<br> &nbsp;else if (ieversion&gt;=7)<br> &nbsp; document.write("You're using IE7.x")<br> &nbsp;else if (ieversion&gt;=6)<br> &nbsp; document.write("You're using IE6.x")<br> &nbsp;else if (ieversion&gt;=5)<br> &nbsp; document.write("You're using IE5.x")<br> }<br> else{<br> &nbsp;document.write("n/a")<br> }<br> &lt;/script&gt;</p>
     </div> 
     <p align="left"><b>Output:</b> 
      <!--webbot bot="HTMLMarkup" startspan --><script type="text/javascript">
//userAgent in IE7 WinXP returns: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727)
//userAgent in IE11 Win7 returns: Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko

if (navigator.userAgent.indexOf('MSIE') != -1)
 var detectIEregexp = /MSIE (\d+\.\d+);/ //test for MSIE x.x
else // if no "MSIE" string in userAgent
 var detectIEregexp = /Trident.*rv[ :]*(\d+\.\d+)/ //test for rv:x.x or rv x.x where Trident string exists

if (detectIEregexp.test(navigator.userAgent)){
?var ieversion=new Number(RegExp.$1) // capture x.x portion and store as a number
?if (ieversion>=12)
  document.write("You're using IE12 or above")
?else if (ieversion>=11)
  document.write("You're using IE11 or above")
?else if (ieversion>=10)
  document.write("You're using IE10 or above")
?else if (ieversion>=9)
  document.write("You're using IE9 or above")
?else if (ieversion>=8)
  document.write("You're using IE8 or above")
?else if (ieversion>=7)
  document.write("You're using IE7.x")
?else if (ieversion>=6)
  document.write("You're using IE6.x")
?else if (ieversion>=5)
  document.write("You're using IE5.x")
}
else{
?document.write("n/a")
}
</script>
      <!--webbot bot="HTMLMarkup" endspan i-checksum="4179" --></p> 
     <p align="left">If you're only interested in detecting IE11 or greater, you can simply test for the presence of "Trident" while at the same time the absense of "MSIE" inside <code>userAgent</code>:</p> 
     <p class="examplecode" align="left">var ie11andabove = navigator.userAgent.indexOf('Trident') != -1 &amp;&amp; navigator.userAgent.indexOf('MSIE') == -1 // IE11 or above Boolean</p> 
     <p align="left">Or, should you only be interested in detecting IE browsers less than 11, the following will do:</p> 
     <p class="examplecode" align="left">var ie10andbelow = navigator.userAgent.indexOf('MSIE') != -1 // IE10 or below Boolean</p> 
     <h4 align="left"> <img border="0" src="../jkincludes/arrow2.gif" width="17" height="17"> Detecting Opera 15 and above</h4> 
     <p align="left">Opera starting in Opera 15+ on both desktop and Android uses the Chromium engine under their hood (the same engine that powers Google Chrome), and with the brain transplant, now returns a <code>userAgent</code> string that's more Chrome than Opera. In Opera 25 for example, this is the returned string:</p> 
     <p class="examplecode"><b>UserAgent: </b>Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.101 Safari/537.36 OPR/25.0.1614.50</p> 
     <p align="left"> <a target="_blank" href="https://dev.opera.com/blog/opera-user-agent-strings-opera-15-and-beyond/"> Straight from Opera itself</a>: On all platforms, the digits after "OPR/" tell you version and minor version number - in this case "25.0" (The subsequent numbers are internal identifiers and build numbers.). Opera 15+ for Android contains the string "Mobile" and also contains "OPR/" followed by version number, as both Opera 15+ for desktop and Android are based on Chromium 28.</p> 
     <p>This means to detect if the user is using Opera 15+, we can simply look for the "OPR/" token inside <code>userAgent</code>, and to detect the specific version, parse out the floating point number that follows. Here's an example of each:</p> 
     <p class="examplecode">var opera15andabove = navigator.userAgent.indexOf('OPR/') != -1 // Opera 15+ Boolean</p> 
     <p class="examplecode">var opera15andabovever = /OPR\/(\d+\.\d+)/i.test(navigator.userAgent) // test and capture Opera 15+ version<br> if (opera15andabovever){<br> &nbsp;var operaver = new Number(RegExp.$1) // contains exact Opera15+ version, such as 25 for Opera 25.0<br> &nbsp;document.write("You're using Opera" + operaver)<br> }<br> else{<br> &nbsp;document.write("n/a")<br> }</p> 
     <p align="left"><b>Output:</b> 
      <!--webbot bot="HTMLMarkup" startspan --><script type="text/javascript">var opera15andabovever = /OPR\/(\d+\.\d+)/i.test(navigator.userAgent) // test and capture Opera 15+ version
if (opera15andabovever){
 var operaver = new Number(RegExp.$1) // contains exact Opera15+ version, such as 25 for Opera 25.0
 document.write("You're using Opera" + operaver)
}
else{
 document.write("n/a")
}
</script>
      <!--webbot bot="HTMLMarkup" endspan i-checksum="49301" --></p> 
     <h4 align="left"> <img border="0" src="../jkincludes/arrow2.gif" width="17" height="17"> Detecting old versions of Opera (pre Opera 15)</h4> 
     <p align="left">In Opera pre version 15, there exists a property <code> window.opera</code> that returns true to quickly filter out those browsers as a group. However, getting the exact version gets a lot more confounding, stemming from the browser's past split personality. You see, Opera 8 and below by default identifies itself as IE6 (or lower) in the <code>navigator</code> object. Users can override this setting under "<b>Edit Site Settings</b>" in the toolbar to identify as Opera or even another browser instead. Starting in Opera 9, the browser regains its confidence and identifies by default as itself, Opera, though users can still modify this setting manually in the toolbar. The bottom line is, Opera can appear as either Opera, Internet Explorer, or another browser within a designated list in the <code>navigator</code> object.</p> 
     <p align="left">Lets take a look at what <code>navigator.userAgent</code> in Opera 8.5 returns depending on what it has chosen to identify itself as (whether automatically or manually):</p> 
     <p class="examplecode"><b>As IE6:</b> Mozilla/4.0 (compatible; MSIE 6.0; Windows XP) Opera 8.5 [en]<br> <b>As Moz5:</b> Mozilla/5.0 (Windows XP; U) Opera 8.5 [en]<br> <b>As Opera:</b> Opera/8.5 (Windows XP; U) [en] </p>
     <p>Notice how if it's set to identify as IE, <code>MSIE 6.0</code> appears within the string, while if set to identify as Mozilla, <code> Mozilla/5.0</code> appears instead. As Opera itself, <code>Opera/8.5</code> appears. In all three cases, the one commonality that we can exploit to actually detect Opera and its true version regardless of which identify it's decided to take on is the string "<code>Opera x.x</code>" or "<code>Opera/x.x</code>" within <code>navigator.userAgent</code>. In other words, there are two versions of the target string we need to be aware of. With that said, here's how you might go about testing for a specific version of Opera, which turns out to be no different than the technique used for detecting, say, Firefox:</p>
     <p class="examplecode">&lt;script type="text/javascript"&gt;<br> //Note: userAgent in Opera9.24 WinXP returns: Opera/9.24 (Windows NT 5.1; U; en)<br> //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; userAgent in Opera 8.5 (identified as IE) returns: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 8.50 [en]<br> //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; userAgent in Opera 8.5 (identified as Opera) returns: Opera/8.50 (Windows NT 5.1; U) [en]<br> <br> if (/Opera[\/\s](\d+\.\d+)/.test(navigator.userAgent)){ //test for Opera/x.x or Opera x.x (ignoring remaining decimal places);<br> &nbsp;var oprversion=new Number(RegExp.$1) // capture x.x portion and store as a number<br> &nbsp;if (oprversion&gt;=10)<br> &nbsp; document.write("You're using Opera 10.x or above")<br> &nbsp;else if (oprversion&gt;=9)<br> &nbsp; document.write("You're using Opera 9.x")<br> &nbsp;else if (oprversion&gt;=8)<br> &nbsp; document.write("You're using Opera 8.x")<br> &nbsp;else if (oprversion&gt;=7)<br> &nbsp; document.write("You're using Opera 7.x")<br> &nbsp;else<br> &nbsp; document.write("n/a")<br> }<br> else<br> &nbsp;document.write("n/a")<br> &lt;/script&gt;</p>
     <p align="left"> <b>Output:</b> 
      <!--webbot bot="HTMLMarkup" startspan --><script type="text/javascript">
//Note: userAgent in Opera9.24 WinXP returns: Opera/9.24 (Windows NT 5.1; U; en)
//         userAgent in Opera 8.5 (identified as IE) returns: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Opera 8.50 [en]
//         userAgent in Opera 8.5 (identified as Opera) returns: Opera/8.50 (Windows NT 5.1; U) [en]

if (/Opera[\/\s](\d+\.\d+)/.test(navigator.userAgent)){ //test for Opera/x.x or Opera x.x (ignoring remaining decimal places);
?var oprversion=new Number(RegExp.$1) // capture x.x portion and store as a number
?if (oprversion>=10)
  document.write("You're using Opera 10.x or above")
?else if (oprversion>=9)
  document.write("You're using Opera 9.x")
?else if (oprversion>=8)
  document.write("You're using Opera 8.x")
?else if (oprversion>=7)
  document.write("You're using Opera 7.x")
?else
  document.write("n/a")
}
else
?document.write("n/a")
</script>
      <!--webbot bot="HTMLMarkup" endspan i-checksum="60034" --></p> 
     <h4 align="left"> <img border="0" src="../jkincludes/arrow2.gif" width="17" height="17"> Conclusion</h4> 
     <p align="left">We've seen how to use navigator to detect the browser type of your visitors. If the potential pitfalls and complexity of usage of it is a little too much for you, an alternative is to use <b><a href="http://www.javascriptkit.com/javatutors/objdetect.shtml"> Object Detection</a></b>. Whichever method you choose, just be sure to choose one!</p> 
    </div> 
   </div> 
   <div id="leftcolumn"> 
    <div class="sidemenucomponent"> 
     <div>
      <a href="http://www.javascriptkit.com"> <img src="http://www.javascriptkit.com/jkincludes/jklogosmall.gif" border="0" title="JavaScript Kit" width="163" height="51" style="margin-top: 2px"></a> 
     </div> 
     <ul id="mainmenulinks" class="categorylinks"> 
      <li><a href="http://www.javascriptkit.com/">JavaScript Kit</a></li> 
      <li><a href="http://www.javascriptkit.com/cutpastejava.shtml">Free JavaScripts</a></li> 
      <li><a href="http://www.javascriptkit.com/javatutors/">JavaScript tutorials</a></li> 
      <li><a href="http://www.javascriptkit.com/jsref/">JavaScript Reference</a></li> 
      <li><a href="http://www.javascriptkit.com/domref/">DOM Reference</a></li> 
      <li><a href="http://www.javascriptkit.com/dhtmltutors/">Developer &amp; CSS</a></li> 
      <li><a href="http://www.javascriptkit.com/howto/">Web Design</a></li> 
      <li><a href="http://www.javascriptkit.com/java/">Free Java Applets</a></li> 
      <li><a href="http://www.javascriptkit.com/dhtmltutors/cssreference.shtml">CSS Quick Reference</a></li> 
      <li><a href="http://www.dynamicdrive.com/forums/forumdisplay.php?7-JavaScript">JavaScript Forums</a></li> 
     </ul> 
     <div class="headers">
      Partners
     </div> 
     <ul class="linkslist"> 
      <li><a href="http://www.cssdrive.com">CSS Drive</a></li> 
      <li><a href="http://www.dynamicdrive.com/dynamicindex1/">JavaScript Menus</a></li> 
      <li><a href="http://www.dynamicdrive.com/style/">CSS codes &amp; examples</a></li> 
     </ul> 
     <script type="text/javascript">
var sectionmatch=["cutpastejava", "javatutors", "jsref", "dhtmltutors", "howto", "java", "cssref"]
var docurl=window.location.toString()
var menulinksobj=document.getElementById("mainmenulinks")
if (menulinksobj && menulinksobj.getElementsByTagName("a")){
for (i=0; i<sectionmatch.length; i++){
if (docurl.indexOf(sectionmatch[i])!=-1 && menulinksobj.getElementsByTagName("a")[i+1].style){
menulinksobj.getElementsByTagName("a")[i+1].style.color="#3A6200"
menulinksobj.getElementsByTagName("a")[i+1].style.backgroundColor="#EAEAEA"
break;
}
}
}

</script> 
    </div> 
    <div id="stickyarea"> 
     <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
     <!-- JK RA horizontal --> 
     <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-7051847089736268" data-ad-slot="9662634634" data-ad-format="auto"></ins> 
     <script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script> 
     <!-- BuySellAds Zone Code --> 
     <div class="bsacontainer nomargin"> 
      <div id="bsap_1299814" class="bsarocks bsap_dd6e9fbb78d92ec298f6119b05509777"></div> 
     </div> 
     <!-- End BuySellAds Zone Code --> 
     <div class="sidemenucomponent"> 
      <div style="font-size: 12px; margin-top: 1em; padding-left: 5px;"> 
       <script type="text/javascript">
bookmarkit()
</script> 
      </div> 
     </div> 
     <!-- Go to www.addthis.com/dashboard to customize your tools --> 
     <div class="addthis_sharing_toolbox" style="margin-left:10px"></div> 
     <!-- Go to www.addthis.com/dashboard to customize your tools --> 
     <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=georgeuser"></script> 
     <div id="sharearea" style="font-size: 12px; margin: 1em auto; padding-left: 5px; text-align:center"> 
      <a href="https://twitter.com/share" class="twitter-share-button" data-size="large" data-show-count="false">Tweet</a>
      <script async src="http://platform.twitter.com/widgets.js" charset="utf-8"></script> 
     </div> 
     <!-- end sticky area --> 
    </div> 
    <script>

;(function(){

	var rightcolumnad = document.getElementById('stickyarea')
	var standardbody = (document.compatMode=="CSS1Compat")? document.documentElement : document.body

	function getoffset(what, offsettype){
		return (what.offsetParent)? what[offsettype]+getoffset(what.offsetParent, offsettype) : what[offsettype]
	}
	
	function getoffsetof(el){
		el._offsets={left:getoffset(el, "offsetLeft"), top:getoffset(el, "offsetTop"), h: el.offsetHeight}
	}

	var jkmakesticky = {
		target: null,
		docheight: null,
		docscrollHeight: null,
		contentcolumnheight: null,
		rightcolumnheight: null,
		resizeTimer: null,
		refreshCoords: function(){
			this.docheight = window.innerHeight || standardbody.clientHeight-15
			this.docscrollHeight = standardbody.scrollHeight-20
			this.contentcolumnheight = document.getElementById("contentcolumn").offsetHeight
			this.rightcolumnheight = document.getElementById("leftcolumn").offsetHeight
			getoffsetof( this.target )
		},
		stickit: function(){
			var target = this.target
			var offsettop = target._offsets.top
			if (offsettop == 0 || ( this.rightcolumnheight >= this.contentcolumnheight)){ // if offsettop of banner container is 0, it means it's hidden, or if right column is longer than content column
				return
			}
			var docscrolly = window.pageYOffset || standardbody.scrollTop
			if ( docscrolly > offsettop){
				if (!/sticky/i.test(target.className)){
					target.className = target.className + 'sticky'
				}
			}
			else{
				if (/sticky/i.test(target.className)){
					target.className = target.className.replace(/\s*sticky\s*/i, '')
				}
			}
		},
		init:function(target){
			this.target = target
			this.refreshCoords()
			window.addEventListener('scroll', function(){
				requestAnimationFrame(function(){
					jkmakesticky.stickit()
				})
			}, false)
		}
	}

	if (rightcolumnad){
		jkmakesticky.init( rightcolumnad )
		jkmakesticky.stickit()
		window.addEventListener('load', function(e){
			rightcolumnad.className = rightcolumnad.className.replace(/\s*sticky\s*/i, '')
			jkmakesticky.refreshCoords()
			jkmakesticky.stickit()
		}, false)
		window.addEventListener('resize', function(e){
			clearTimeout(jkmakesticky.resizeTimer)
			jkmakesticky.resizeTimer = setTimeout(function(){
				rightcolumnad.className = rightcolumnad.className.replace(/\s*sticky\s*/i, '')
				jkmakesticky.refreshCoords()
				jkmakesticky.stickit()
			}, 100)
		}, false)
	}

})();

</script> 
   </div> 
   <div id="footer"> 
    <!--ZOOMSTOP--> 
    <p align="center"> </p>
    <div style="max-width: 730px; margin-left: 185px;" id="footerad"> 
     <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
     <!-- JK RA horizontal --> 
     <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-7051847089736268" data-ad-slot="9662634634" data-ad-format="horizontal, rectangle"></ins> 
     <script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script> 
    </div> 
    <script>

var showdiscussarea = (function(){
	var multipagetutorial = !!document.getElementById('toc') // Bool to detect whether this page is part of multi pages tutorial
	var showdiscussarea = !multipagetutorial
	if (multipagetutorial){
		var toc = document.getElementById('toc')
		var toclis = toc.getElementsByTagName('li')
		var lastli = toclis[ toclis.length -1 ]
		if (lastli.firstChild.tagName !='A' ) // if this is last page in tutorial
			showdiscussarea = true
	}
	return showdiscussarea
})()

/*
	disqusLoader.js v1.0
	A JavaScript plugin for lazy-loading Disqus comments widget.
	-
	By Osvaldas Valutis, www.osvaldas.info
	Available for use under the MIT License
*/

;( function( window, document, index )
{
	'use strict';

	var extendObj = function( defaults, options )
		{
			var prop, extended = {};
			for( prop in defaults )
				if( Object.prototype.hasOwnProperty.call( defaults, prop ))
					extended[ prop ] = defaults[ prop ];

			for( prop in options )
				if( Object.prototype.hasOwnProperty.call( options, prop ))
					extended[ prop ] = options[ prop ];

			return extended;
		},
		getOffset = function( el )
		{
			var rect = el.getBoundingClientRect();
			return { top: rect.top + document.body.scrollTop, left: rect.left + document.body.scrollLeft };
		},
		loadScript = function( url, callback )
		{
			var script	 = document.createElement( 'script' );
			script.src	 = url;
			script.async = true;
			script.setAttribute( 'data-timestamp', +new Date());
			script.addEventListener( 'load', function()
			{
				if( typeof callback === 'function' )
					callback();
			});
			( document.head || document.body ).appendChild( script );
		},
		throttle		= function(a,b){var c,d;return function(){var e=this,f=arguments,g=+new Date;c&&g<c+a?(clearTimeout(d),d=setTimeout(function(){c=g,b.apply(e,f)},a)):(c=g,b.apply(e,f))}},

		throttleTO		= false,
		laziness		= false,
		disqusConfig	= false,
		scriptUrl		= false,

		scriptStatus	= 'unloaded',
		instance		= false,

		init = function()
		{
			if( !instance || !document.body.contains( instance ) || instance.disqusLoaderStatus == 'loaded' )
				return true;

			var winST	= window.pageYOffset,
				offset	= getOffset( instance ).top;

			// if the element is too far below || too far above
			if( offset - winST > window.innerHeight * laziness || winST - offset - instance.offsetHeight - ( window.innerHeight * laziness ) > 0 )
				return true;

			var tmp = document.getElementById( 'disqus_thread' );
			if( tmp ) tmp.removeAttribute( 'id' );
			instance.setAttribute( 'id', 'disqus_thread' );
			instance.disqusLoaderStatus = 'loaded';

			if( scriptStatus == 'loaded' )
			{
				DISQUS.reset({ reload: true, config: disqusConfig });
			}
			else // unloaded | loading
			{
				window.disqus_config = disqusConfig;
				if( scriptStatus == 'unloaded' )
				{
					scriptStatus = 'loading';
					loadScript( scriptUrl, function()
					{
						scriptStatus = 'loaded';
					});
				}
			}
		};

	window.addEventListener( 'scroll', throttle( throttleTO, init ));
	window.addEventListener( 'resize', throttle( throttleTO, init ));

	window.disqusLoader = function( element, options )
	{
		options = extendObj(
		{
			laziness:		1,
			throttle:		250,
			scriptUrl:		false,
			disqusConfig:	false,

		}, options );

		laziness		= options.laziness + 1;
		throttleTO		= options.throttle;
		disqusConfig	= options.disqusConfig;
		scriptUrl		= scriptUrl === false ? options.scriptUrl : scriptUrl; // set it only once

		if( typeof element === 'string' )				instance = document.querySelector( element );
		else if( typeof element.length === 'number' )	instance = element[ 0 ];
		else											instance = element;

		instance.disqusLoaderStatus = 'unloaded';

		init();
	};

}( window, document, 0 ));

</script> 
    <div id="discussarea"> 
     <h3 id="discusscommentheader" style="display:none">Comments- Your Turn!</h3> 
     <div id="disqus_thread" class="discussclass"></div> 
    </div> 
    <script>

var disqusoptions ={
  scriptUrl: '//javascriptkit.disqus.com/embed.js',
  /*
    @type: string (url)
    @default: none
    @required
    URL of Disqus' executive JS file. The value is memorized on the first function call
    and ignored otherwise because Disqus allows only one instance per page at the time.
  */

  laziness: 1,
  /*
    @type: int (>=0)
    @default: 1
    Sets the laziness of loading the widget: (viewport height) * laziness . For example:
    0 - widget load starts when at the least a tiny part of it gets in the viewport;
    1 - widget load starts when the distance between the widget zone and the viewport is no more than the height of the viewport;
    2 - 2x viewports, etc.
  */

  throttle: 250,
  /*
    @type: int (milliseconds)
    @default: 250
    Defines how often the plugin should make calculations during the
    processes such as resize of a browser's window or viewport scroll.
    250 = 4 times in a second.
  */

  /*
    @type: function
    @default: none
    Disqus-native options. Check Disqus' manual for more information.
  */
  disqusConfig: function()
  {
    this.page.title       = document.title;
    this.page.url         = window.location.href;
    this.page.identifier  = window.location.pathname;
  }
};

// vanilla
if (showdiscussarea){
	disqusLoader( '.discussclass', disqusoptions );
	document.getElementById('discusscommentheader').style.display = 'block';
}
</script> 
    <div style="margin-left:195px; margin-top:6px" id="copyright">
     Copyright (c) 2016 
     <a href="http://www.javascriptkit.com">JavaScript Kit</a>. NO PART may be reproduced without author's permission.
    </div> 
    <p></p> 
    <script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script> 
    <script type="text/javascript">
_uacct = "UA-55377-1";
urchinTracker();
</script> 
    <!-- MailMunch for JavaScript Kit --> 
    <!-- Paste this code right before the </head> tag on every page of your site. --> 
    <script src="//a.mailmunch.co/app/v1/site.js" id="mailmunch-script" data-mailmunch-site-id="283097" async></script> 
   </div> 
  </div>   
 </body>
</html>