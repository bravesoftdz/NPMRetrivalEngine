<!doctype html>
<html lang="en-us">
 <head> 
  <meta http-equiv="Content-type" content="text/html; charset=utf-8"> 
  <title>Ender - the no-library JavaScript library</title> 
  <link rel="stylesheet" href="/css/style.css" type="text/css"> 
  <!--
    <link href='http://fonts.googleapis.com/css?family=Lusitana:400,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Lato' rel='stylesheet' type='text/css'>
    --> 
  <script>
      WebFontConfig = {
          google     : { families: [ 'Lusitana:400,700', 'Ubuntu Mono', 'Lato' ] }
        , active : function () {
            typeof WebFontConfig._loaded == 'function' && WebFontConfig._loaded()
          }
      }
    </script> 
  <script src="//ajax.googleapis.com/ajax/libs/webfont/1/webfont.js" async></script> 
 </head> 
 <body> 
  <section id="nav"> 
   <nav> 
    <a href="#intro" class="yellow">intro</a> 
    <a href="#docs">docs</a> 
    <a href="#learn">learn</a> 
    <a href="#about">about</a> 
    <a href="#news" class="alt">news</a> 
    <a href="https://github.com/ender-js" class="alt">source</a> 
   </nav> 
  </section> 
  <section class="wrap"> 
   <section id="boom"> 
    <header> 
     <section class="left"> 
      <h1>ENDER <span>the no-library library</span></h1> 
     </section> 
     <section class="right"> 
      <h3 id="build-only-what-you-need-when-you-need-it-">Build only what you need, when you need it.</h3> 
      <pre><span class="nv">$ </span><span class="mi">ender</span> build <span class="s1">domready qwery underscore</span></pre> 
      <h3 id="lightweight-expressive-familiar-">Lightweight, expressive, familiar.</h3> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">(</span><span class="s1">'#content a.button'</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s1">'click.button'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s1">'clicked'</span><span class="p">,</span> <span class="kc">true</span><span class="p">).</span><span class="nx">unbind</span><span class="p">()</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()</span>
  <span class="p">})</span>
  <span class="p">.</span><span class="nx">css</span><span class="p">({</span>
      <span class="nx">opacity</span><span class="o">:</span> <span class="mi">1</span>
    <span class="p">,</span> <span class="nx">color</span><span class="o">:</span> <span class="s1">'red'</span>
  <span class="p">})</span>
  <span class="p">.</span><span class="nx">fadeOut</span><span class="p">(</span><span class="mi">250</span><span class="p">)</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">map</span><span class="p">([</span><span class="s1">'a'</span><span class="p">,</span> <span class="s1">'b'</span><span class="p">,</span> <span class="s1">'c'</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">letter</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">letter</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span>
<span class="p">})</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="s1">'/data'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">resp</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">(</span><span class="s1">'#content'</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">resp</span><span class="p">)</span>
<span class="p">})</span>
</pre>
      </div> 
     </section> 
    </header> 
   </section> 
  </section> 
  <section id="content"> 
   <div class="wrap"> 
    <div class="page main"> 
     <div class="sub main"> 
      <div id="intro"></div> 
      <h2 id="introduction">INTRODUCTION</h2> 
      <p><em>Ender is a full featured package manager for your browser.</em><br> It allows you to search, install, manage, and compile front-end JavaScript packages and their dependencies for the web. We like to think of it as <a href="https://github.com/isaacs/npm">npm</a>'s little sister.</p> 
      <p><em>Ender is not a JavaScript library</em>.<br> It's not a jQuery replacement. It's not even a static asset. It's a tool for making the consumption of front-end JavaScript packages dead simple and incredibly powerful.</p> 
      <h3 id="why-">WHY?</h3> 
      <p>In the browser - <strong>small, loosely coupled modules are the future and large, tightly-bound monolithic libraries are the past!</strong></p> 
      <p>Ender capitalizes on this by offering a unique way to bring together the exciting work happening in JavaScript packages and allows you to mix, match, and customize your own build, suited to your individual needs, without all the extra cruft that comes with larger libraries.</p> 
      <p>With Ender, if one library goes bad or unmaintained, it can be replaced with another. Need a specific package version? No problem! Does your package have dependencies? Let us handle that for you too!</p> 
      <div class="hr" id="docs"></div> 
      <h2 id="documentation-contents">DOCUMENTATION CONTENTS</h2> 
      <div class="doc-contents"></div> 
      <ul> 
       <li>» <a href="#overview">overview</a></li> 
       <li>» <a href="#installation">installation</a></li> 
       <li>» <a href="#cli">the ender command line interface</a>
        <ul> 
         <li>? <a href="#build">build</a></li> 
         <li>? <a href="#add">add</a></li> 
         <li>? <a href="#set">set</a></li> 
         <li>? <a href="#remove">remove</a></li> 
         <li>? <a href="#refresh">refresh</a></li> 
         <li>? <a href="#compile">compile</a></li> 
         <li>? <a href="#info">info</a></li> 
         <li>? <a href="#search">search</a></li> 
         <li>? <a href="#help">help</a></li> 
        </ul> </li> 
       <li>» <a href="#publishing">building and publishing your own packages</a>
        <ul> 
         <li>? <a href="#packagejson">package.json</a></li> 
         <li>? <a href="#bridge">the bridge</a></li> 
        </ul> </li> 
       <li>» <a href="#client">the ender client api</a>
        <ul> 
         <li>? <a href="#require">require</a></li> 
         <li>? <a href="#provide">provide</a></li> 
         <li>? <a href="#ender">$.ender</a></li> 
         <li>? <a href="#_select">$._select</a></li> 
        </ul> </li> 
       <li>» <a href="#jeesh">the jeesh</a>
        <ul> 
         <li>? <a href="#jeeshoverview">what does this setup look like?</a></li> 
         <li>? <a href="#tryit">try it out</a></li> 
        </ul> </li> 
       <li>» <a href="#additionalpackages">beyond the jeesh—additional packages</a>
        <ul> 
         <li>? <a href="#selectorengines">selector engines</a></li> 
        </ul> </li> 
      </ul> 
      <div class="hr" id="overview"></div> 
      <h2 id="overview">OVERVIEW</h2> 
      <h3 id="on-the-command-line">ON THE COMMAND LINE</h3> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender build backbone
<span class="c"># installs:</span>
<span class="c"># ??? backbone@0.5.2 - Give your JS App some Backbone with Models, Views, Collections, and Events.</span>
<span class="c">#   ??? underscore@1.1.7 - JavaScript's functional programming helper library.</span>

<span class="nv">$ </span>ender add domready qwery
<span class="c"># installs:</span>
<span class="c"># ??? domready@0.2.5 - bullet proof DOM ready method</span>
<span class="c"># ??? qwery@2.1.2 - blazing fast CSS1|2|3 query selector engine</span>

<span class="nv">$ </span>ender remove qwery
<span class="c"># uninstalls:</span>
<span class="c"># ??? qwery@2.1.2 - blazing fast CSS1|2|3 query selector engine</span>
</pre>
      </div> 
      <h3 id="in-the-browser">IN THE BROWSER</h3> 
      <div class="highlight">
       <pre><span class="c1">// Require packages to access them as raw packages</span>
<span class="kd">var</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'underscore'</span><span class="p">)</span>
<span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="nx">alert</span><span class="p">)</span>

<span class="c1">// Access methods augmented directly to the $</span>
<span class="nx">$</span><span class="p">.</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>
    <span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">item</span> <span class="p">})</span>
    <span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">alert</span><span class="p">)</span>
<span class="p">})</span>
</pre>
      </div> 
      <div class="hr" id="installation"></div> 
      <h2 id="installation">INSTALLATION</h2> 
      <p>When installing, first make sure you have a working copy of the latest stable version of both <a href="http://nodejs.org">Node.js</a> and <a href="https://github.com/isaacs/npm">npm</a>. You can then install Ender with the following single line:</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span><span class="o">[</span>sudo<span class="o">]</span> npm install ender -g
</pre>
      </div> 
      <p>Once installed, you should have access to the <code>ender</code> command.</p> 
      <div class="hr" id="cli"></div> 
      <h2 id="using-ender-from-the-command-line">USING ENDER FROM THE COMMAND LINE</h2> 
      <p>The <code>ender</code> command provides the following actions:</p> 
      <p id="build"></p> 
      <h3 id="build">BUILD</h3> 
      <p>Installs and assembles JavaScript packages and their dependencies.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender build <span class="o">[</span>foo, bar, ...<span class="o">]</span>
</pre>
      </div> 
      <h4 id="arguments">arguments</h4> 
      <p>Accepts a list of npm package names and/or paths to local packages. If left blank, the directory root will be used. You can specify a version by suffixing a package with <code>@</code> followed by a version number.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender build scriptjs backbone@0.1.0 ../../myLocalPackage
</pre>
      </div> 
      <p><em>note: When providing a path, the package directory must contain a valid package.json file</em></p> 
      <h4 id="output">output</h4> 
      <ul> 
       <li>» <strong>ender.js</strong> - an uncompressed file containing assembled packages</li> 
       <li>» <strong>ender.min.js</strong> - a copy of ender.js, minified by uglify-js</li> 
       <li>» <strong>local copies of specified packages</strong> - located in the node_modules directory, these are used for dependency management</li> 
      </ul> 
      <h4 id="options">options</h4> 
      <ul> 
       <li>» <strong>--noop</strong> - this outputs the assembled packages without the ender-js client api.</li> 
       <li>» <strong>--output</strong> - this outputs your assembled packages to a specified path and filename.</li> 
       <li>» <strong>--help</strong> - gives you more info on the build method.</li> 
      </ul> 
      <p id="add"></p> 
      <h3 id="add">ADD</h3> 
      <p>Installs and appends JavaScript packages and their dependencies to an already assembled library.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender add <span class="o">[</span>foo, bar, ...<span class="o">]</span>
</pre>
      </div> 
      <h4 id="arguments">arguments</h4> 
      <p>Accepts a list of npm package names and/or paths to local packages.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender add scriptjs
</pre>
      </div> 
      <h4 id="output">output</h4> 
      <ul> 
       <li>» <strong>ender.js &amp;&amp; ender.min.js</strong> - Appends package code to already present ender builds</li> 
       <li>» <strong>local copies of specified packages</strong> - located in the node_modules directory, these are used for dependency management</li> 
      </ul> 
      <h4 id="options">options</h4> 
      <ul> 
       <li>» <strong>--use</strong> - Specify which file to append package code to.</li> 
       <li>» <strong>--help</strong> - gives you more info on the add method.</li> 
      </ul> 
      <p><em>note: You don't need to specify .js when referencing a JavaScript file here</em></p> 
      <p id="set"></p> 
      <h3 id="set">SET</h3> 
      <p>Sets a JavaScript packages to specific version.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender <span class="nb">set </span>foo@0.0.1
</pre>
      </div> 
      <h4 id="arguments">arguments</h4> 
      <p>Accepts a list of npm package names and/or paths to local packages.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender add scriptjs@0.1.0
</pre>
      </div> 
      <p id="remove"></p> 
      <h3 id="remove">REMOVE</h3> 
      <p>Uninstalls and removes JavaScript packages and their dependencies from an already assembled library.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender remove <span class="o">[</span>foo, bar, ...<span class="o">]</span>
</pre>
      </div> 
      <h4 id="arguments">arguments</h4> 
      <p>Accepts a list of npm package names and/or paths to local packages.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender remove domready
</pre>
      </div> 
      <h4 id="options">options</h4> 
      <ul> 
       <li>» <strong>--use</strong> - Specify which file to remove package code from.</li> 
       <li>» <strong>--help</strong> - gives you more info on the remove method.</li> 
      </ul> 
      <p id="refresh"></p> 
      <h3 id="refresh">REFRESH</h3> 
      <p>Rebuilds and reinstalls packages.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender refresh
</pre>
      </div> 
      <h4 id="options">options</h4> 
      <ul> 
       <li>» <strong>--use</strong> - Specify which file to refresh.</li> 
       <li>» <strong>--help</strong> - gives you more info on the refresh method.</li> 
      </ul> 
      <p id="compile"></p> 
      <h3 id="compile">COMPILE</h3> 
      <p>Shortcut for compiling code with google closure compiler.</p> 
      <h4 id="arguments">arguments</h4> 
      <p>Accepts file paths.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender compile ./header.js ./footer.js ./my/app.js
</pre>
      </div> 
      <p id="info"></p> 
      <h3 id="info">INFO</h3> 
      <p>Provides the current status of your built Ender library. This information includes the build type, a gzipped file size, and a list of all the current packages (with version numbers, descriptions, and dependency tree).</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender info
</pre>
      </div> 
      <h4 id="options">options</h4> 
      <ul> 
       <li>» <strong>--use</strong> - tell ender which file to operate on</li> 
      </ul> 
      <p id="search"></p> 
      <h3 id="search">SEARCH</h3> 
      <p>Looks up keywords against npm's registry and surfaces the most relevant packages. It promotes results for known Ender compatible packages and also generic npm matches).</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender search underscore
</pre>
      </div> 
      <p id="help"></p> 
      <h3 id="help">HELP</h3> 
      <p>Gives a simple run through of the available methods and documentation.</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender
</pre>
      </div> 
      <div class="hr" id="publishing"></div> 
      <h2 id="building-and-publishing-your-own-packages">BUILDING AND PUBLISHING YOUR OWN PACKAGES</h2> 
      <p>Because Ender relies on npm for package management -- extending your Ender library is as simple as publishing to npm.</p> 
      <p id="packagejson"></p> 
      <h3 id="package-json">PACKAGE.JSON</h3> 
      <p>If you haven't already registered your project with npm, create a file called <em>package.json</em> in your package root. A completed <a href="http://wiki.commonjs.org/wiki/Packages/1.0">package file</a> might look something like this:</p> 
      <div class="highlight">
       <pre><span class="p">{</span>
  <span class="s2">"name"</span><span class="o">:</span> <span class="s2">"blamo"</span><span class="p">,</span>
  <span class="s2">"description"</span><span class="o">:</span> <span class="s2">"a thing that blams the o's"</span><span class="p">,</span>
  <span class="s2">"version"</span><span class="o">:</span> <span class="s2">"1.0.0"</span><span class="p">,</span>
  <span class="s2">"keywords"</span><span class="o">:</span> <span class="p">[</span><span class="s2">"blamo"</span><span class="p">,</span> <span class="s2">"ender"</span><span class="p">],</span>
  <span class="s2">"homepage"</span><span class="o">:</span> <span class="s2">"http://example.com"</span><span class="p">,</span>
  <span class="s2">"authors"</span><span class="o">:</span> <span class="p">[</span><span class="s2">"Mr. Blam"</span><span class="p">,</span> <span class="s2">"Miss O"</span><span class="p">],</span>
  <span class="s2">"repository"</span><span class="o">:</span> <span class="p">{</span>
    <span class="s2">"type"</span><span class="o">:</span> <span class="s2">"git"</span><span class="p">,</span>
    <span class="s2">"url"</span><span class="o">:</span> <span class="s2">"https://github.com/fake-account/blamo.git"</span>
  <span class="p">},</span>
  <span class="s2">"dependencies"</span><span class="o">:</span> <span class="p">{</span>
    <span class="s2">"klass"</span><span class="o">:</span> <span class="s2">"*"</span>
  <span class="p">},</span>
  <span class="s2">"main"</span><span class="o">:</span> <span class="s2">"./src/project/blamo.js"</span><span class="p">,</span>
  <span class="s2">"ender"</span><span class="o">:</span> <span class="s2">"./src/exports/ender.js"</span>
<span class="p">}</span>
</pre>
      </div> 
      <p>Have a look at the <a href="https://github.com/ded/qwery/blob/master/package.json">Qwery package.json file</a> to get a better idea of this in practice.</p> 
      <h4 id="ender-specific-practices">Ender Specific Practices</h4> 
      <ul> 
       <li>» Add the <code>ender</code> keyword to your package.json to get promoted by Ender search as a compatible package.</li> 
       <li>» Add a bridge file for integrating with the Ender client api by specifying an <code>"ender"</code> param.</li> 
       <li>» you may specify <code>"noop"</code> for the <code>"ender"</code> param to tell Ender to not try to integrate it with the Ender client api.</li> 
      </ul> 
      <p id="bridge"></p> 
      <h3 id="the-bridge">THE BRIDGE</h3> 
      <p>The bridge is an optional JavaScript integration file used to integrate your code with the Ender client api.</p> 
      <div class="hr" id="client"></div> 
      <h2 id="the-ender-client-api">THE ENDER CLIENT API</h2> 
      <p>The Ender client api offers two powerful ways to interact with your JavaScript packages, a module API which is based on <a href="http://wiki.commonjs.org/wiki/Modules/1.1">CommonJS Modules spec v1.1</a> and a heavily augmented $ namespace (like jQuery).</p> 
      <p id="require"></p> 
      <h3 id="require">REQUIRE</h3> 
      <p>Returns a raw exported JavaScript package.</p> 
      <div class="highlight">
       <pre><span class="kd">var</span> <span class="nx">myPackage</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'myPackage'</span><span class="p">)</span>
</pre>
      </div> 
      <h4 id="arguments">arguments</h4> 
      <p>A package name.</p> 
      <div class="highlight">
       <pre><span class="kd">var</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'underscore'</span><span class="p">)</span> <span class="c1">//return the underscore object</span>
</pre>
      </div> 
      <h4 id="examples">examples</h4> 
      <p>If you were to run the following build command <code>ender build backbone</code>, you could then access both backbone and underscore from your browser like this:</p> 
      <div class="highlight">
       <pre><span class="kd">var</span> <span class="nx">backbone</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'backbone'</span><span class="p">)</span>
  <span class="p">,</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'underscore'</span><span class="p">)</span>

<span class="nx">backbone</span><span class="p">.</span><span class="nx">Models</span><span class="p">(...)</span>
<span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(...)</span>
</pre>
      </div> 
      <h4 id="pro-tip">pro tip</h4> 
      <p>Ender's module support is also great when you run into libs which are competing for namespace on the $. For example, if package "foo" and package "bar" both expose a method <code>baz</code> -- you could use <code>require</code> to gain access to the method being overridden -- as well as set which method you would prefer to be on Ender's internal chain.</p> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">.</span><span class="nx">baz</span><span class="p">()</span> <span class="c1">//executes bar's method baz</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ender</span><span class="p">({</span> <span class="nx">baz</span><span class="o">:</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'foo'</span><span class="p">).</span><span class="nx">baz</span> <span class="p">});</span> <span class="c1">// sets $.baz to be foo's method baz</span>

<span class="nx">require</span><span class="p">(</span><span class="s1">'bar'</span><span class="p">).</span><span class="nx">baz</span><span class="p">()</span> <span class="c1">//bar's baz is still accessible at any time.</span>
</pre>
      </div> 
      <p id="provide"></p> 
      <h3 id="provide">PROVIDE</h3> 
      <p>Registers a new public package.</p> 
      <div class="highlight">
       <pre><span class="nx">provide</span><span class="p">(</span><span class="s2">"myPackage"</span><span class="p">,</span> <span class="nx">myPackageObj</span><span class="p">)</span>
</pre>
      </div> 
      <h4 id="arguments">arguments</h4> 
      <p>A package name and a value to store as the package.</p> 
      <div class="highlight">
       <pre><span class="nx">provide</span><span class="p">(</span><span class="s1">'underscore'</span><span class="p">,</span> <span class="nx">_</span><span class="p">)</span>
</pre>
      </div> 
      <p><em>note: Ender automatically wraps all command line installed packages in a closure and makes them available in this way. Because of this, most modules will not be accessible directly in the global scope -- <strong>this of course is great news!</strong></em></p> 
      <p id="ender"></p> 
      <h3 id="-ender">$.ENDER</h3> 
      <p>Augments arguments onto the Ender client object ($).</p> 
      <h4 id="arguments">arguments</h4> 
      <p>An object to augment onto the Ender $. An optional boolean value -- if true, the object will be added to the Internal chain.</p> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">.</span><span class="nx">ender</span><span class="p">({</span>
  <span class="nx">myUtility</span><span class="o">:</span> <span class="nx">myLibFn</span>
<span class="p">})</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">myUtility</span><span class="p">()</span>
</pre>
      </div> 
      <p><em>note: Within the scope of your extension methods, the internal prototype will be exposed to the developer using the <code>this</code> context representing the node collection.</em></p> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">.</span><span class="nx">ender</span><span class="p">({</span>
  <span class="nx">rand</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">)]</span>
  <span class="p">}</span>
<span class="p">},</span> <span class="kc">true</span><span class="p">)</span>

<span class="nx">$</span><span class="p">(</span><span class="s1">'p'</span><span class="p">).</span><span class="nx">rand</span><span class="p">()</span>
</pre>
      </div> 
      <p id="_select"></p> 
      <h3 id="-_select">$._select</h3> 
      <p>Set the selector engine for the $ object.</p> 
      <h4 id="arguments">arguments</h4> 
      <p>A method to be used as the selector engine.</p> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">.</span><span class="nx">_select</span> <span class="o">=</span> <span class="nx">mySelectorEngine</span>
<span class="nx">$</span><span class="p">(</span><span class="s1">'#foo .bar'</span><span class="p">)</span>
</pre>
      </div> 
      <p><em>note: You can see it in practice in <a href="https://github.com/ded/qwery/blob/master/src/ender.js">Qwery</a></em></p> 
      <h4 id="example">example</h4> 
      <p>If you're building a Mobile Webkit or Android application, you might want to set it simply to <code>querySelectorAll</code>.</p> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">.</span><span class="nx">_select</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">selector</span><span class="p">,</span> <span class="nx">root</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span><span class="nx">root</span> <span class="o">||</span> <span class="nb">document</span><span class="p">).</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">selector</span><span class="p">)</span>
<span class="p">})</span>
</pre>
      </div> 
      <div class="hr" id="jeesh"></div> 
      <h2 id="the-jeesh">THE JEESH</h2> 
      <p>The Jeesh is the official starter pack for Ender. The Jeesh can help you build anything from small prototypes to providing a solid base for large-scale rich application for desktop and mobile devices. At its core, it's a collection of packages that we've found particularly useful for major use-case development endeavors -- but we encourage developers to <code>add</code> and <code>remove</code> packages to really make it your own. Currently, the Jeesh includes:</p> 
      <ul> 
       <li>» domReady - a cross-browser <a href="https://github.com/ded/domready">domReady</a></li> 
       <li>» Qwery - a fast light-weight <a href="https://github.com/ded/qwery">selector engine</a></li> 
       <li>» Bonzo - a bullet-proof <a href="https://github.com/ded/bonzo">DOM utility</a></li> 
       <li>» Bean - a multi-platform <a href="https://github.com/fat/bean">event manager</a></li> 
      </ul> 
      <p id="jeeshoverview"></p> 
      <h3 id="what-does-this-setup-look-like-">WHAT DOES THIS SETUP LOOK LIKE?</h3> 
      <h4 id="domready">domready</h4> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">.</span><span class="nx">domReady</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{...})</span>
</pre>
      </div> 
      <h4 id="dom-queries">DOM queries</h4> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">(</span><span class="s1">'#boosh a[rel~="bookmark"]'</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">el</span><span class="p">)</span> <span class="p">{</span> <span class="p">...</span> <span class="p">})</span>
</pre>
      </div> 
      <h4 id="manipulation">Manipulation</h4> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">(</span><span class="s1">'#boosh p a[rel~="bookmark"]'</span><span class="p">).</span><span class="nx">hide</span><span class="p">().</span><span class="nx">html</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span>
  <span class="nx">color</span><span class="o">:</span> <span class="s1">'red'</span><span class="p">,</span>
  <span class="s1">'text-decoration'</span><span class="o">:</span> <span class="s1">'none'</span>
<span class="p">}).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">'blamo'</span><span class="p">).</span><span class="nx">after</span><span class="p">(</span><span class="s1">'?'</span><span class="p">).</span><span class="nx">show</span><span class="p">();</span>
</pre>
      </div> 
      <h4 id="events">Events</h4> 
      <div class="highlight">
       <pre><span class="nx">$</span><span class="p">(</span><span class="s1">'#content a'</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s1">'keydown input'</span><span class="p">,</span> <span class="nx">handler</span><span class="p">)</span>
<span class="nx">$</span><span class="p">(</span><span class="s1">'#content a'</span><span class="p">).</span><span class="nx">emit</span><span class="p">(</span><span class="s1">'customEvent'</span><span class="p">)</span>
<span class="nx">$</span><span class="p">(</span><span class="s1">'#content a'</span><span class="p">).</span><span class="nx">remove</span><span class="p">(</span><span class="s1">'click.myClick'</span><span class="p">)</span>
</pre>
      </div> 
      <p id="tryit"></p> 
      <h3 id="try-it-out">TRY IT OUT</h3> 
      <p>If you're looking to test drive this setup, have a play with <a href="http://cdn.enderjs.com/jeesh.js">the compiled source</a> (<a href="http://cdn.enderjs.com/jeesh.min.js">minified</a>).</p> 
      <div class="hr" id="additionalpackages"></div> 
      <h2 id="beyond-the-jeesh-mdash-additional-packages">BEYOND THE JEESH—ADDITIONAL PACKAGES</h2> 
      <p>Ender is also a thriving ecosystem of packages, some specifically designed for Ender and others that are simply Ender compatible. To get an idea of what's available, why not have a look at these additional packages:</p> 
      <ul> 
       <li>» Traversty - a full-featured <a href="https://github.com/rvagg/traversty">DOM traversal and collection management utility</a></li> 
       <li>» Reqwest - easy <a href="https://github.com/ded/reqwest">AJAX &amp; form serialization</a></li> 
       <li>» Valentine - type checking, functional iterators and async helpers, <a href="https://github.com/ded/valentine">JavaScript's Functional Sister</a></li> 
       <li>» Bowser - <a href="https://github.com/ded/bowser">browser detection</a></li> 
       <li>» Wings - <a href="https://github.com/amccollum/wings">simple templating</a></li> 
       <li>» Morpheus - a brilliant <a href="https://github.com/ded/morpheus">animator</a></li> 
       <li>» Klass - a utility for creating <a href="https://github.com/ded/klass">expressive classes</a></li> 
       <li>» Jar - basic <a href="https://github.com/amccollum/jar">cookie handling</a></li> 
      </ul> 
      <p>Or how about something more substantial? <strong><a href="https://github.com/rvagg/ender-bootstrap">Ender Bootstrap</a></strong> gives you the individual <a href="http://twitter.github.com/bootstrap/">Bootstrap</a> plugins for Ender.</p> 
      <p>You can find additional modules, or add your own, on the <a href="https://github.com/ender-js/Ender/wiki/Ender-package-list">Ender Wiki</a>.</p> 
      <p></p>
      <p id="selectorengines"></p>
      <p></p> 
      <h3 id="selector-engines">SELECTOR ENGINES</h3> 
      <p>Ender doesn't limit you to using Qwery as your selector engine. You can also choose from:</p> 
      <ul> 
       <li>» <a href="http://sizzlejs.com/">Sizzle</a> - available as <code>sizzle</code></li> 
       <li>» <a href="https://github.com/amccollum/sel">Sel</a> - available as <code>sel</code></li> 
       <li>» <a href="https://github.com/dperini/nwmatcher">NWMatcher</a> - available as <code>nwmatcher</code></li> 
      </ul> 
      <div class="hr" id="learn"></div> 
      <h2 id="learning-ender">LEARNING ENDER</h2> 
      <p>Instructional videos and other cool stuff for learning about Ender.</p> 
      <h3 id="getting-started-with-ender">Getting Started with Ender</h3> 
      <iframe src="http://player.vimeo.com/video/23836209?portrait=0" width="640" height="360" frameborder="0"></iframe> 
      <h3 id="building-an-ender-module">Building an Ender Module</h3> 
      <iframe src="http://player.vimeo.com/video/24296635?portrait=0" width="640" height="360" frameborder="0"></iframe> 
      <div class="hr" id="about"></div> 
      <h2 id="about-this-project">ABOUT THIS PROJECT</h2> 
      <p>We would love to hear how you're using Ender or why you're not. What you love... what you hate... And we would love all the help we can get! Got a great idea? Open an issue, submit a pull request, follow @ender, or <a href="http://twitter.com/intent/tweet?text=@ender%20-%20I'm%20using%20ender.%20Check%20it%20out">message us on twitter</a>!</p> 
      <h3 id="license">LICENSE</h3> 
      <p>Ender is licensed under <em>MIT</em> - <em>copyright 2011-2013 Dustin Diaz, Jacob Thornton, Rod Vagg</em></p> 
      <p>For the individual modules, see their respective licenses.</p> 
      <div class="clear"></div> 
     </div> 
     <div class="sub news"> 
      <div id="news"></div> 
      <a name="news__welcome_to_ender_2.0"></a> 
      <h2> <a href="#news__welcome_to_ender_2.0"> Welcome to Ender 2.0 </a> </h2> 
      <p class="spec"><em>by Dustin Diaz on February 12th, 2014</em></p> 
      <p>Thanks to the selfless blood and tears of @<a href="https://github.com/amccollum">amccollum</a>, Ender has landed at <code>2.0.0</code>. There's a bunch of new features! Aside from a plethora of bug fixes and improvements — here are the major highlights which will hopefully entice you to begin using Ender in your next project.</p> 
      <ul> 
       <li>anything <a href="https://www.npmjs.org/doc/json.html#dependencies">npm can install</a>, Ender can too!</li> 
       <li>The minifier has been upgraded to <a href="https://github.com/mishoo/UglifyJS2">Uglify 2</a></li> 
       <li>Source map support!</li> 
       <li>New <code>Module</code> runtime object for a better <code>require</code>! This supports multi-file modules, internal/relative requires, requiring submodules, and better CommonJS compatibility. See <a href="https://github.com/cujojs/when/blob/master/package.json#L50">when.js package.json</a> for an example of multi-files. It's pretty cool :)</li> 
       <li>Clearer understanding of your dependencies output from the CLI</li> 
      </ul> 
      <p>If you have any questions, <a href="https://github.com/ender-js/Ender/issues/new">file an issue</a> and we'll be happy to help.</p> 
      <p>Enjoy!</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span><span class="c"># p.s.</span>
<span class="nv">$ </span>npm install ender
</pre>
      </div> 
      <div class="hr"></div> 
      <a name="news__ender_cli_v1.0_has_landed"></a> 
      <h2> <a href="#news__ender_cli_v1.0_has_landed"> Ender CLI v1.0 has landed </a> </h2> 
      <p class="spec"><em>by Rod Vagg on April 8th, 2013</em></p> 
      <p>It's been a full year in the making, but version <em>1.0.0</em> of the Ender command-line interface (<b>CLI</b>) was just pushed to npm and is now ready to augment your frontend-building awesomeness.</p> 
      <p>If you don't have Ender installed on your computer, you'll first need to install <a href="http://nodejs.org/">Node</a> which comes with <strong>npm</strong> (the Node Package Manager). Once you have npm installed, you can install Ender:</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>npm install ender -g <span class="c"># the -g will install `ender` as a global command</span>
</pre>
      </div> 
      <p>If you already have Ender installed, then you can upgrade it with:</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>npm upgrade ender -g
</pre>
      </div> 
      <h3 id="what-s-in-this-baby-">What's in this baby?</h3> 
      <p>The Ender CLI has been totally rewritten, but the commands are the same as v0.8 and prior. We had big plans for new features but other priorities caught up with us so we decided to just ship it when it was stable!</p> 
      <p>The CLI code now has a huge suite of tests and the code is a lot more solid than the previous CLI. More importantly, it's much more modular and gives us a ton of flexibility to extend and add the features that we really want for our own build processes.</p> 
      <p>The main themes of this release are:</p> 
      <ul> 
       <li><p><strong>Better CommonJS support</strong>: We're not there yet but we're close. We want Ender to help you build &amp; package modular components around the CommonJS-style that you find in Node.js. We have some exciting stuff on this front to come in the next few releases.</p> </li> 
       <li><p><strong>Stability and predictability</strong>: For example, when you run <code>ender build</code> and associated commands, your packages are bundled <em>in the order that you request them</em> and the dependencies are also ordered so that a dependency will always appear before its dependant.</p> </li> 
       <li><p><strong>Flexibility for package authors</strong>: The <em>package.json</em> descriptor has become a lot more clever for Ender packages. It's now also much easier to share packages between Node and the browser by extending the descriptor with an <code>"ender"</code> specific key.</p> </li> 
      </ul> 
      <p>We promise not to sit on code for so long again, expect to see awesome new features appear in v1.1 and beyond.</p> 
      <h3 id="more-information-">More information?</h3> 
      <p>For now you can find a lot of information in the CLI help, start with:</p> 
      <div class="highlight">
       <pre><span class="nv">$ </span>ender <span class="nb">help</span>
</pre>
      </div> 
      <p>There are more advanced features for package authors and we'll try and document them here in the coming weeks. Feel free to bug us on <i>#enderjs</i> on Freenode, or ping <a href="https://twitter.com/ender">@ender</a> on Twitter, we're listening!</p> 
      <hr> 
      <div class="hr"></div> 
     </div> 
    </div> 
    <div id="courtesy"> 
     <p>illustration courtesy <a href="http://raphaelurwiller.com/">raphaelurwiller</a></p> 
    </div> 
    <div id="hostedby"> 
     <p><a href="http://nodejitsu.com"><img src="img/nodejitsu.png" height="37" width="50"></a> hosting generously provided by <a href="http://nodejitsu.com/">nodejitsu</a></p> 
    </div> 
   </div> 
  </section> 
  <script src="/js/ender.min.js"></script> 
  <script src="//www.google-analytics.com/ga.js"></script>  
 </body>
</html>