<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta content="IE=edge" http-equiv="X-UA-Compatible"> 
  <meta content="width=device-width,initial-scale=1,shrink-to-fit=no" name="viewport"> 
  <meta content="NOODP" name="robots"> 
  <meta content="Add search functionality to your web page using the lunr.js JavaScript library.
" name="description"> 
  <link href="https://twitter.com/olivernn" rel="author"> 
  <meta content="summary" name="twitter:card"> 
  <meta content="@thoughtbot" name="twitter:site"> 
  <meta content="https://robots.thoughtbot.com/full-text-search-in-your-browser" name="twitter:url"> 
  <meta content="Full-text search in your browser" name="twitter:title"> 
  <meta content="Add search functionality to your web page using the lunr.js JavaScript library." name="twitter:description"> 
  <meta content="https://images.thoughtbot.com/new-bamboo/blog/full-text-search-in-your-browser/grAjTCWzRZmkyQG9szme_cosine_similarity.png" name="twitter:image"> 
  <link rel="shortcut icon" type="image/x-icon" href="https://robots.thoughtbot.com/assets/favicon-f2dbb21c91d2db85a5cb89a59e2b72cca851b16f03caffad1f8375cb8e957e0a.ico"> 
  <link rel="apple-touch-icon" type="image/x-icon" href="https://robots.thoughtbot.com/assets/apple-touch-icon-f5660bd740993647d20c17d16b3fae2697e73d818752f2d4f3045e49d8b80153.png"> 
  <title>Full-text search in your browser</title> 
  <link rel="stylesheet" media="all" href="https://robots.thoughtbot.com/assets/application-c803ca0a5e7297af59ec085856326aa97d6aec1d80b1871b9e1caefb7620f61c.css"> 
  <link href="feed://feeds.feedburner.com/GiantRobotsSmashingIntoOtherGiantRobots" rel="alternate" type="application/rss+xml"> 
 </head> 
 <body> 
  <nav class="site-nav" role="navigation"> 
   <a class="site-nav-skip-link" href="#main-content">Skip to main content</a> 
   <a class="line-height-zero" href="/">
    <svg xmlns="http://www.w3.org/2000/svg" width="257.6px" height="257.6px" viewbox="0 0 257.6 257.6" role="img" aria-labelledby="cb4m9hxguevrazc7fa7ulqbnpyn8y8d" class="site-nav-logo">
     <title id="cb4m9hxguevrazc7fa7ulqbnpyn8y8d">Blog home</title> 
     <path fill="#ed3e44" d="M128.8,0C57.7,0,0,57.7,0,128.8c0,71.1,57.7,128.8,128.8,128.8c71.1,0,128.8-57.7,128.8-128.8     C257.6,57.7,199.9,0,128.8,0z"></path> 
     <g fill="#fff"> 
      <path d="M95.6,137.3h-5.2v36.6h0c1.7,2.1,2.8,4.7,2.8,7.6c0,3.6-1.6,6.8-4.2,9l-3.2-3.2c1.8-1.3,2.9-3.4,2.9-5.8       c0-4-3.3-7.3-7.3-7.3c-4,0-7.3,3.3-7.3,7.3c0,2.4,1.1,4.5,2.9,5.8l-3.2,3.2c-2.5-2.2-4.2-5.4-4.2-9c0-2.9,1.1-5.6,2.8-7.6v-57       c0.1-2.2,1.9-4,4.1-4l104.5,0c2.2,0,4,1.8,4.1,4v57c1.8,2.1,2.8,4.7,2.8,7.6c0,3.6-1.6,6.8-4.2,9l-3.2-3.2       c1.7-1.3,2.9-3.4,2.9-5.8c0-4-3.3-7.3-7.3-7.3c-4,0-7.3,3.3-7.3,7.3c0,2.4,1.1,4.5,2.9,5.8l-3.2,3.2c-2.6-2.2-4.2-5.4-4.2-9       c0-2.9,1.1-5.6,2.8-7.6h0v-36.6H162v77.2l3.5,2v6.3h-35v-6.3l3.5-2h0V191h-10.4v23.4l3.5,2v6.3l-34.9,0.1v-6.3l3.4-2L95.6,137.3z"></path> 
      <path d="M128.8,53.6c7.3,0,13.8,2.6,17.9,6.5l3.2-4.6c-5.1-4.5-12.6-7.4-21.1-7.4l0,0c-8.5,0-16.1,2.9-21.1,7.4       l3.2,4.6C114.9,56.2,121.5,53.6,128.8,53.6"></path> 
      <g> 
       <path d="M129,42c7.9,0,15.3,2.3,20.8,6.5c1.1,0.8,2.1,1.7,3,2.7l3.2-4.6c-6.2-6.1-16-10.1-27-10.1l0,0         c-11.3,0-21.3,4.1-27.5,10.5l3.2,4.6c1-1.1,2.1-2.2,3.4-3.2C113.7,44.3,121.1,42,129,42"></path> 
      </g> 
      <g> 
       <path d="M128.8,30.8c12.6,0,23.7,4.6,30.3,11.6l3.2-4.5c-7.7-7.6-19.9-12.5-33.5-12.5l0,0         c-13.7,0-25.8,4.9-33.5,12.6l3.2,4.5C105,35.4,116.2,30.8,128.8,30.8"></path> 
      </g> 
      <g> 
       <path d="M118.7,84.7c0,1.9-1.5,3.5-3.5,3.5c-1.9,0-3.5-1.6-3.5-3.5c0-1.9,1.6-3.5,3.5-3.5         C117.2,81.2,118.7,82.7,118.7,84.7z"></path> 
       <path d="M155.3,66h-53.1c-2.2,0-4,1.8-4,4v34.6c0,2.2,1.8,4,4,4h53.1c2.2,0,4-1.8,4-4V70         C159.3,67.8,157.5,66,155.3,66z M115.3,91.4c-3.7,0-6.8-3-6.8-6.8c0-3.7,3-6.8,6.8-6.8c3.7,0,6.8,3,6.8,6.8         C122,88.4,119,91.4,115.3,91.4z M142.4,91.4c-3.7,0-6.8-3-6.8-6.8c0-3.7,3-6.8,6.8-6.8c3.7,0,6.8,3,6.8,6.8         C149.2,88.4,146.1,91.4,142.4,91.4z"></path> 
       <path d="M145.9,84.7c0,1.9-1.6,3.5-3.5,3.5c-1.9,0-3.5-1.6-3.5-3.5c0-1.9,1.5-3.5,3.5-3.5         C144.3,81.2,145.9,82.7,145.9,84.7z"></path> 
      </g> 
     </g> 
    </svg> </a>
   <div class="site-nav-links"> 
    <a class="site-nav-link" href="/tags">All Topics</a> 
    <a class="site-nav-link" href="/design">Design</a> 
    <a class="site-nav-link" href="/web">Web</a> 
    <a class="site-nav-link" href="/ios">iOS</a> 
    <a class="site-nav-link" href="/android">Android</a> 
    <a title="Search" class="site-nav-link" href="/search">
     <svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewbox="0 0 310.42 310.42"> 
      <path d="M273.587 214.965c49.11-49.11 49.11-129.02 0-178.132-49.11-49.11-129.02-49.11-178.13 0C53.793 78.497 47.483 140.463 76.51 188.85c0 0 2.085 3.498-.73 6.312-16.066 16.064-64.264 64.263-64.264 64.263-12.79 12.79-15.836 30.675-4.493 42.02l1.953 1.95c11.343 11.346 29.23 8.302 42.02-4.49l64.127-64.127c2.95-2.95 6.448-.866 6.448-.866 48.39 29.026 110.356 22.717 152.02-18.947zM118.71 191.71c-36.287-36.288-36.286-95.332.002-131.62 36.288-36.287 95.332-36.288 131.62 0 36.287 36.287 36.287 95.332 0 131.62-36.29 36.286-95.332 36.286-131.62 0z" fill="#454547"></path> 
      <path d="M126.75 118.424c-1.69 0-3.406-.332-5.06-1.03-6.612-2.8-9.705-10.427-6.907-17.04 17.586-41.558 65.703-61.06 107.26-43.475 6.612 2.794 9.705 10.422 6.907 17.034-2.8 6.612-10.425 9.703-17.04 6.906-28.353-11.997-61.185 1.31-73.182 29.664-2.1 4.96-6.913 7.938-11.978 7.938z" fill="#454547"></path> 
     </svg> </a> 
   </div> 
  </nav> 
  <div class="container"> 
   <article class="post text" data-url="/full-text-search-in-your-browser" id="main-content" role="main"> 
    <header> 
     <h1 class="title"> Full-text search in your browser </h1> 
     <div class="meta"> 
      <div class="meta-author"> 
       <a href="/authors/oliver-nightingale">Oliver Nightingale</a> 
      </div> 
      <time class="meta-date" datetime="2017-01-24T15:47:28Z" itemprop="dateModified"> February 26, 2013 <span class="meta-updated">updated on</span> January 24, 2017 </time> 
      <ul class="meta-tag-list"> 
       <li class="meta-tag-item"> <a href="/tags/javascript">javascript</a> </li> 
       <li class="meta-tag-item"> <a href="/tags/search">search</a> </li> 
       <li class="meta-tag-item"> <a href="/tags/new-bamboo">new bamboo</a> </li> 
       <li class="meta-tag-item"> <a href="/tags/web">web</a> </li> 
      </ul> 
     </div> 
    </header> 
    <div class="post-body"> 
     <p><em>This post was originally published on the New Bamboo blog, before <a href="https://robots.thoughtbot.com/new-bamboo-joins-thoughtbot-in-london">New Bamboo joined thoughtbot in London</a>.</em></p> 
     <hr> 
     <p>Search is an important part of any application: users instinctively know where to look when they want to search within your site. For many users search is often the preferred way of getting to the functionality they want in your app.</p> 
     <p>Implementing search usually involves some external process which manages indexing and handling queries against your data, such as <a href="http://lucene.apache.org/solr/">Solr</a> or <a href="http://www.elasticsearch.org/">Elastic Search</a>. This is often a secondary piece of your application’s architecture, and is yet another service to host and maintain. For some sites or applications this extra overhead can be an additional layer of complexity too far.</p> 
     <p><a href="http://lunrjs.com">lunr.js</a> is a small JavaScript library that offers full text search in your browser, providing simple, yet powerful search. By removing the need of extra server side processes, search can be a feature on sites or apps that otherwise would not have warranted the extra complexity.</p> 
     <h2 id="usage"> <a href="#usage"> Usage </a> </h2> 
     <p>Adding full-text search to your app or site couldn’t be easier, after including lunr in your page simply define your index:</p> 
     <div class="highlight">
      <pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">index</span> <span class="o">=</span> <span class="nx">lunr</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">field</span><span class="p">(</span><span class="s1">'title'</span><span class="p">,</span> <span class="p">{</span><span class="na">boost</span><span class="p">:</span> <span class="mi">10</span><span class="p">})</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">field</span><span class="p">(</span><span class="s1">'body'</span><span class="p">)</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">ref</span><span class="p">(</span><span class="s1">'id'</span><span class="p">)</span>
<span class="p">})</span>
</code></pre>
     </div> 
     <p>This is setting up an index with two fields, ‘title’ and ‘body’. The ‘title’ field is given a boost, meaning that terms in the title will have a larger impact on the overall document score than those in the ‘body’ field. This also specifies the reference to use for uniquely identifying documents in the index, in this case the ‘id’ field is used.</p> 
     <p>With the index defined JSON documents can be added:</p> 
     <div class="highlight">
      <pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">documents</span> <span class="o">=</span> <span class="p">[{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="s1">'Twelfth Night'</span><span class="p">,</span>
    <span class="na">body</span><span class="p">:</span> <span class="s1">'If music be the food of love, play on'</span>
<span class="p">},</span> <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="s1">'Macbeth'</span><span class="p">,</span>
    <span class="na">body</span><span class="p">:</span> <span class="s1">'When shall we three meet again, In thunder, lightning, or in rain?'</span>
<span class="p">},</span> <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="s1">'Richard III'</span><span class="p">,</span>
    <span class="na">body</span><span class="p">:</span> <span class="s1">'Now is the winter of our discontent, Made glorious summer by this sun of York;'</span>
<span class="p">}]</span>

<span class="nx">documents</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nb">document</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">index</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nb">document</span><span class="p">)</span>
<span class="p">})</span>
</code></pre>
     </div> 
     <p>Searching is equally simple:</p> 
     <div class="highlight">
      <pre class="highlight javascript"><code><span class="nx">index</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s1">'love'</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">[{</span> <span class="na">ref</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">score</span><span class="p">:</span> <span class="mf">0.7854</span> <span class="p">}]</span>
</code></pre>
     </div>
     <h2 id="techniques"> <a href="#techniques"> Techniques </a> </h2> 
     <p>lunr implements a number of techniques from information retrieval, combining them into a compact yet powerful library. It applies these in two main areas: performing text processing on incoming documents and queries, and storing and retrieving documents by term in an index. This article will go into some of the techniques used to achieve this.</p> 
     <h3 id="tokenising"> <a href="#tokenising"> Tokenising </a> </h3> 
     <p>The first step when processing the text is tokenisation. This converts strings containing words and sentences into distinct tokens that are easier on which to perform further processing. This is a deceptively complex task for a computer to accomplish.</p> 
     <p>For example, consider the following sentence:</p> 
     <blockquote> 
      <p>Friends, Romans, Countrymen, lend me your ears;</p> 
     </blockquote> 
     <p>It should be clear that this sentence would be converted to the following tokens:</p> 
     <div class="highlight">
      <pre class="highlight plaintext"><code>"Friends", "Romans", "Countrymen", "lend", "me", "your", "ears"
</code></pre>
     </div> 
     <p>However what about the following:</p> 
     <blockquote> 
      <p>Mr. O'Neil hasn’t visited New York.</p> 
     </blockquote> 
     <p>Should the first token be “Mr.” or “Mr”? How do you distinguish between this word, where a full-stop follows a word, and a word at the end of sentence, such as “York.”?</p> 
     <p>The name “O'Neil” is another edge case. As humans we have no problem in seeing the token as “O'Neil”, but the computer doesn’t know anything about names. This same limitation is shown when trying to tokenise “New York”. In this sentence “New York” clearly has meaning as a single token, but a tokenizer would probably split this into two tokens: “New” and “York”.</p> 
     <p>Splitting the sentence into tokens discards any inherent meaning the words have based on their relative positions. It does, however, make indexing and search much simpler, and for most cases will provide decent enough accuracy and recall. It allows the remaining text processing to work on single tokens which reduces complexity.</p> 
     <h3 id="stemming"> <a href="#stemming"> Stemming </a> </h3> 
     <p>Once the documents have been tokenised, lunr applies a <a href="http://en.wikipedia.org/wiki/Stemming">stemming</a> algorithm to each token. Stemming is a means of reducing a word down to its base, or stem. For example ‘search’, ‘searching’ and ‘searched’ all get reduced to the stem ‘search’.</p> 
     <p>Stemming greatly reduces the number of terms that the search engine has to index, which leads to a much more performant search experience. It also means that search queries do not have to contain exact word matches to the documents in the index. A search for the term ‘fish’ should match all documents that contained any word that can be stemmed to ‘fish’. This improves recall; returning results of which more will be relevant to the user.</p> 
     <h3 id="stop-word-filtering"> <a href="#stop-word-filtering"> Stop word filtering </a> </h3> 
     <p>In any document there will be many words that appear regularly but provide little or no extra meaning to the document. Words such as ‘the’, ‘and’, ‘is’ and ‘on’ are very frequent in the English language and most documents will contain many instances of them. These words are generally not very useful when searching, they are not normally what users are searching for when entering queries. Because of this it can be beneficial to remove these words from the index. This has the benefit of reducing the size of the index, as well as improving the performance of retrieving documents from the index.</p> 
     <p>Before entering the index, lunr passes documents through a stop word filter, removing many common words before any further processing takes place. This filter is fairly generic, but can be paired with a more corpus specific filter for even better reduction in the number of useless words in the index.</p> 
     <h3 id="text-processing-pipeline"> <a href="#text-processing-pipeline"> Text processing Pipeline </a> </h3> 
     <p>lunr uses a configurable pipeline to perform text processing on documents before they enter the index. The built-in text processors, discussed above, are part of this pipeline. Following a middleware style architecture allows lunr to have an easily extensible text processing system. Whilst it ships with English specific text algorithms, it is simple to replace these with language specific processors, which allows lunr to work with any language.</p> 
     <p>This pipeline also allows extra text processing to be added. For example, adding <a href="http://en.wikipedia.org/wiki/Metaphone">Metaphoning</a> reduces tokens to sounds to allow misspelt queries to still match documents, or <a href="http://en.wikipedia.org/wiki/N-gram">n-gram</a> processing to combine preceding tokens into the index.</p> 
     <h3 id="tf-idf"> <a href="#tf-idf"> TF-IDF </a> </h3> 
     <p>Term frequency-inverse document frequency (<a href="http://en.wikipedia.org/wiki/TF_IDF">TF-IDF</a>) is a technique used to retrieve relevant documents from a collection of documents. It normalises the importance of a term across many documents of varying sizes. lunr makes use of TF-IDF to help score terms in documents.</p> 
     <p>TF-IDF is calculated by multiplying the term frequency by the inverse of the document frequency of that term. Term frequency is how often a particular term appears in this document, and document frequency is how many documents contain at least one instance of that term.</p> 
     <p>The term frequency represents how important a term is to a document. It makes sense that a document with many occurrences of a term is probably very relevant to a search for that term, hence the term frequency will be high. This is normalised to take into account the length of the document, which prevents longer documents dominating search results.</p> 
     <p>The inverse document frequency acts to prevent very common terms from affecting the search results. A term that appears in all documents is not a good term to differentiate documents, so very common terms across all documents are penalised and contribute less to a particular document’s score.</p> 
     <p>In this way “stop words, very common words such as ‘and’, ‘the’ or ‘but’, have little impact on a search. lunr excludes common stop words before this step so as to reduce the size of the index, but TF-IDF can help to lessen the impact of any corpus specific stop words that might not be included in the default stop word filter.</p> 
     <h3 id="cosine-similarity"> <a href="#cosine-similarity"> Cosine Similarity </a> </h3> 
     <p>Once terms have been scored for their relevancy to a document, lunr can calculate how relevant each document is to a query. To do this, lunr uses a measure called cosine similarity.</p> 
     <p>Both documents and queries can be represented as vectors. These vectors have a dimension for every token in the entire index. The values of these dimensions will be the TF-IDF score for a token in the document/query being represented.</p> 
     <p>The angle, ?, between these vectors represents how similar they are to each other, which in turn tells us how similar a document is to a query, or another document. Identical vectors will have cos ? = 1, whilst completely opposite vectors will have cos ? = 0.</p> 
     <p>This is much easier to visualise when dealing with just two dimensions, as shown in the diagram below. Although harder to imagine, vectors with a large number of dimensions behave in the same way.</p> 
     <p><img src="https://images.thoughtbot.com/new-bamboo/blog/full-text-search-in-your-browser/grAjTCWzRZmkyQG9szme_cosine_similarity.png" alt=""></p> 
     <p>In the diagram, V<sub>q</sub> represents the query, whilst V<sub>1</sub> and V<sub>2</sub> are documents. The angle, ?, is smaller between V<sub>q</sub> and V<sub>1</sub> and so this document is more similar to the query than V<sub>2</sub>.</p> 
     <h3 id="inverted-index"> <a href="#inverted-index"> Inverted Index </a> </h3> 
     <p>An inverted index is a key part of any search engine. They are used to map from tokens to documents containing that token. lunr uses a <a href="http://en.wikipedia.org/wiki/Trie">trie</a> to implement its inverted index which makes prefix searching simple to achieve. The token lookup time is dependent only on the length of the token to be found.</p> 
     <p><img src="https://images.thoughtbot.com/new-bamboo/blog/full-text-search-in-your-browser/69Ks9UR8QHWw2raDf2Kp_trie.png" alt=""></p> 
     <p>A trie is a kind of tree where each node contains a section of the key, and all of its child nodes represent terms that share a common prefix. By traversing the tree to the end of the given input key we find a sub-tree where all the nodes contain words that match the prefix.</p> 
     <p><img src="https://images.thoughtbot.com/new-bamboo/blog/full-text-search-in-your-browser/Xblx4vKnSVm6QiZBcg1G_trie_heat.png" alt=""></p> 
     <p>In the example above we get to the word "heat” by navigating down the trie for each letter, at the last letter of our term, the node will store all the documents that contain the term heat. The sub-tree below this node will contain all the documents that contain a term starting with “heat”.</p> 
     <p>For suffix matching, a duplicate trie can be created where the tokens are reversed before being entered into the trie; combining both the prefix and suffix search tries allows for powerful query expansions.</p> 
     <h2 id="conclusion"> <a href="#conclusion"> Conclusion </a> </h2> 
     <p>Combining the above techniques enables lunr to be a surprisingly powerful search engine that is easy to start using in your applications today. It is not as fully featured as server side search software, however it is trivial in comparison to set up and maintain. Its simplicity also makes it easy to understand and customise for specific use-cases if required.</p> 
     <p>It works well even with relatively large datasets, and can be run in a web-worker if performance starts to become an issue. It has the benefit of being available to service search queries even when the user is offline, and since it is running on the client, it has a head start performance wise over server side searches since there is no network overhead.</p> 
    </div> 
   </article> 
   <script src="https://robots.thoughtbot.com/assets/office_location-c0efa7007f9dac7f43a2d29e91a9f4b8752ec2f43d0e13c63dde42b312c3509a.js" defer></script> 
  </div> 
  <section class="container"> 
   <div id="promoted"> 
    <div class="etc ad-hound"> 
     <img alt="hound" src="https://images.thoughtbot.com/blog/hound-logo.svg"> 
     <p> <a href="https://houndci.com?utm_campaign=ad&amp;utm_medium=referral&amp;utm_source=robots.thoughtbot.com&amp;utm_term=https://robots.thoughtbot.com/full-text-search-in-your-browser">Hound</a> automatically reviews JavaScript, Swift, Ruby, Python, Go, CoffeeScript, Haml, and SCSS code in your GitHub pull requests and comments on style violations. It's free for open source repos. </p> 
     <p> Give <a href="https://houndci.com?utm_campaign=ad&amp;utm_medium=referral&amp;utm_source=robots.thoughtbot.com&amp;utm_term=https://robots.thoughtbot.com/full-text-search-in-your-browser">Hound</a> a try on your next project. </p> 
    </div> 
   </div> 
  </section> 
  <footer role="contentinfo"> 
   <div class="universal-footer"> 
    <div class="footer-nav"> 
     <ul> 
      <li class="title"> Products </li> 
      <li> <a href="https://formkeep.com/">FormKeep </a></li> 
      <li> <a href="https://houndci.com/">Hound </a></li> 
      <li> <a href="https://thoughtbot.com/upcase">Upcase </a></li> 
     </ul> 
     <ul> 
      <li class="title"> Services </li> 
      <li> <a href="https://thoughtbot.com/services/android-development">Android </a></li> 
      <li> <a href="https://thoughtbot.com/services/design">Design </a></li> 
      <li> <a href="https://thoughtbot.com/services/elixir-phoenix">Elixir/Phoenix </a></li> 
      <li> <a href="https://thoughtbot.com/services/go">Go </a></li> 
      <li> <a href="https://thoughtbot.com/services/ios-development">iOS </a></li> 
      <li> <a href="https://thoughtbot.com/services/python-django">Python/Django </a></li> 
      <li> <a href="https://thoughtbot.com/services/react-native">React Native </a></li> 
      <li> <a href="https://thoughtbot.com/services/ruby-on-rails">Ruby/Rails </a></li> 
     </ul> 
     <ul> 
      <li class="title"> Open Source </li> 
      <li> <a href="https://github.com/thoughtbot/Argo">Argo </a></li> 
      <li> <a href="http://bourbon.io">Bourbon </a></li> 
      <li> <a href="https://github.com/thoughtbot/capybara-webkit">Capybara Webkit </a></li> 
      <li> <a href="https://github.com/thoughtbot/clearance">Clearance </a></li> 
      <li> <a href="https://github.com/thoughtbot/dotfiles">Dotfiles </a></li> 
      <li> <a href="https://github.com/thoughtbot/factory_girl">Factory Girl </a></li> 
      <li> <a href="https://github.com/thoughtbot/laptop">Laptop </a></li> 
      <li> <a href="https://github.com/thoughtbot/suspenders">Suspenders </a></li> 
      <li> <a href="https://github.com/thoughtbot">More... </a></li> 
     </ul> 
     <ul> 
      <li class="title"> Locations </li> 
      <li> <a href="https://thoughtbot.com/austin">Austin, TX </a></li> 
      <li> <a href="https://thoughtbot.com/boston">Boston, MA </a></li> 
      <li> <a href="https://thoughtbot.com/london">London, UK </a></li> 
      <li> <a href="https://thoughtbot.com/new-york-city">New York, NY </a></li> 
      <li> <a href="https://thoughtbot.com/raleigh">Raleigh, NC </a></li> 
      <li> <a href="https://thoughtbot.com/san-francisco">San Francisco, CA </a></li> 
      <li> <a href="https://thoughtbot.com/washington-d-c">Washington, DC </a></li> 
     </ul> 
     <ul> 
      <li class="title"> Podcasts </li> 
      <li> <a href="http://bikeshed.fm/">The Bike Shed </a></li> 
      <li> <a href="http://buildphase.fm/">Build Phase </a></li> 
      <li> <a href="http://giantrobots.fm/">Giant Robots </a></li> 
      <li> <a href="http://tentative.fm/">Tentative </a></li> 
     </ul> 
    </div> 
   </div> 
   <div class="copyright-footer"> 
    <strong> © 2017 <a href="https://thoughtbot.com">thoughtbot, inc.</a> </strong> The design of a robot and thoughtbot are registered trademarks of thoughtbot, inc. 
    <a href="//www.iubenda.com/privacy-policy/7827608">Privacy Policy</a> 
   </div> 
  </footer> 
  <script>
    !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","debug","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="4.0.0";
    analytics.load("wperrhev8f");
    analytics.page();
    }}();
  </script>   
 </body>
</html>