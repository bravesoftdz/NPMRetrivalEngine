<!doctype html>
<html class="no-js" xmlns="http://www.w3.org/1999/xhtml" prefix="" lang="en-US">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <link rel="profile" href="http://gmpg.org/xfn/11"> 
  <link rel="pingback" href="http://www.webdeveasy.com/wp/xmlrpc.php"> 
  <meta name="description" content="< p>This article will guide you how to add user authentication to your single page application. On the back end side I will use Node.js and on the front end side I will use AngularJS."> 
  <meta name="keywords" content="articles, angularjs, authentication, javascript, node.js"> 
  <meta property="og:site_name" content="WebDevEasy"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Single Page Application Authentication"> 
  <meta property="og:url" content="http://www.webdeveasy.com/single-page-application-authentication/"> 
  <meta property="og:description" content="< p>This article will guide you how to add user authentication to your single page application. On the back end side I will use Node.js and on the front end side I will use AngularJS."> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:updated_time" content="2016-05-19T21:14:18+00:00"> 
  <meta property="og:image" content="http://i1.wp.com/www.webdeveasy.com/content/uploads/2013/09/single-page-application-authentication.jpg?fit=712%2C575"> 
  <meta property="og:image:width" content="712"> 
  <meta property="og:image:height" content="575"> 
  <meta property="og:image:type" content="image/jpeg"> 
  <meta property="article:published_time" content="2013-09-25T20:27:10+00:00"> 
  <meta property="article:modified_time" content="2016-05-19T21:14:18+00:00"> 
  <meta property="article:author" content="http://www.webdeveasy.com/author/naorye/"> 
  <meta property="article:publisher" content="http://www.webdeveasy.com/"> 
  <meta property="article:section" content="Articles"> 
  <meta property="article:tag" content="articles"> 
  <meta property="article:tag" content="angularjs"> 
  <meta property="article:tag" content="authentication"> 
  <meta property="article:tag" content="javascript"> 
  <meta property="article:tag" content="node.js"> 
  <meta name="twitter:card" content="summary_large_image"> 
  <meta name="twitter:title" content="Single Page Application Authentication"> 
  <meta name="twitter:description" content="< p>This article will guide you how to add user authentication to your single page application. On the back end side I will use Node.js and on the front end side I will use AngularJS."> 
  <meta name="twitter:image:src" content="http://i1.wp.com/www.webdeveasy.com/content/uploads/2013/09/single-page-application-authentication.jpg?fit=712%2C575"> 
  <meta name="twitter:image:width" content="712"> 
  <meta name="twitter:image:height" content="575"> 
  <title>Single Page Application Authentication - WebDevEasy</title> 
  <script>document.documentElement.className = document.documentElement.className.replace("no-js","js");</script> 
  <!-- This site is optimized with the Yoast SEO plugin v3.2.5 - https://yoast.com/wordpress/plugins/seo/ --> 
  <link rel="canonical" href="http://www.webdeveasy.com/single-page-application-authentication/"> 
  <!-- / Yoast SEO plugin. --> 
  <link rel="alternate" type="application/rss+xml" title="WebDevEasy » Feed" href=""> 
  <link rel="alternate" type="application/rss+xml" title="WebDevEasy » Comments Feed" href="http://www.webdeveasy.com/comments/feed/"> 
  <link href="//fonts.googleapis.com/css?family=Source+Sans+Pro:400,300italic,300,400italic,600&amp;subset=latin,latin-ext" rel="stylesheet" type="text/css"> 
  <link rel="alternate" type="application/rss+xml" title="WebDevEasy » Single Page Application Authentication Comments Feed" href="http://www.webdeveasy.com/single-page-application-authentication/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.webdeveasy.com\/wp\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.5.3"}};
			!function(a,b,c){function d(a){var c,d,e,f=b.createElement("canvas"),g=f.getContext&&f.getContext("2d"),h=String.fromCharCode;if(!g||!g.fillText)return!1;switch(g.textBaseline="top",g.font="600 32px Arial",a){case"flag":return g.fillText(h(55356,56806,55356,56826),0,0),f.toDataURL().length>3e3;case"diversity":return g.fillText(h(55356,57221),0,0),c=g.getImageData(16,16,1,1).data,d=c[0]+","+c[1]+","+c[2]+","+c[3],g.fillText(h(55356,57221,55356,57343),0,0),c=g.getImageData(16,16,1,1).data,e=c[0]+","+c[1]+","+c[2]+","+c[3],d!==e;case"simple":return g.fillText(h(55357,56835),0,0),0!==g.getImageData(16,16,1,1).data[0];case"unicode8":return g.fillText(h(55356,57135),0,0),0!==g.getImageData(16,16,1,1).data[0]}return!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i;for(i=Array("simple","flag","unicode8","diversity"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <link rel="stylesheet" id="prism-css" href="http://www.webdeveasy.com/content/uploads/prism/prism.css?ver=1463435226" type="text/css" media="all"> 
  <link rel="stylesheet" id="hueman-main-css" href="http://www.webdeveasy.com/content/themes/hueman/assets/front/css/main.min.css?ver=3.1.3" type="text/css" media="all"> 
  <link rel="stylesheet" id="theme-stylesheet-css" href="http://www.webdeveasy.com/content/themes/hueman-child/style.css?ver=3.1.3" type="text/css" media="all"> 
  <link rel="stylesheet" id="ultimate-modal-css" href="http://www.webdeveasy.com/content/plugins/ultimate-modal/assets/css/ultimate-modal.css" type="text/css" media="all"> 
  <link rel="stylesheet" id="jetpack_css-css" href="http://www.webdeveasy.com/content/plugins/jetpack/css/jetpack.css?ver=4.0.2" type="text/css" media="all"> 
  <script type="text/javascript" src="http://www.webdeveasy.com/wp/wp-includes/js/jquery/jquery.js?ver=1.12.4"></script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/wp/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1"></script> 
  <link rel="https://api.w.org/" href="http://www.webdeveasy.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.webdeveasy.com/wp/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.webdeveasy.com/wp/wp-includes/wlwmanifest.xml"> 
  <meta name="generator" content="WordPress 4.5.3"> 
  <link rel="shortlink" href="http://www.webdeveasy.com/?p=130"> 
  <link rel="alternate" type="application/json+oembed" href="http://www.webdeveasy.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.webdeveasy.com%2Fsingle-page-application-authentication%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://www.webdeveasy.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.webdeveasy.com%2Fsingle-page-application-authentication%2F&amp;format=xml"> 
  <style type="text/css"></style>
  <script type="text/javascript"></script> 
  <link rel="dns-prefetch" href="//i0.wp.com"> 
  <link rel="dns-prefetch" href="//i1.wp.com"> 
  <link rel="dns-prefetch" href="//i2.wp.com"> 
  <style type="text/css">img#wpstats{display:none}</style>
  <!--[if lt IE 9]>
<script src="http://www.webdeveasy.com/content/themes/hueman/assets/front/js/ie/html5.js"></script>
<script src="http://www.webdeveasy.com/content/themes/hueman/assets/front/js/ie/selectivizr.js"></script>
<![endif]--> 
  <!-- BEGIN GADWP v4.9.3.1 Universal Tracking - https://deconf.com/google-analytics-dashboard-wordpress/ --> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-34683362-1', 'auto');
  ga('require', 'displayfeatures');
  ga('send', 'pageview');
</script> 
  <!-- END GADWP Universal Tracking --> 
  <style type="text/css">
/* Dynamic CSS: For no styles in head, copy and put the css below in your child theme's style.css, disable dynamic styles */
body { font-family: "Source Sans Pro", Arial, sans-serif; }

#nav-header.nav-container { background-color: #33363b; }
@media only screen and (min-width: 720px) {
  #nav-header .nav ul { background-color: #33363b; }
}
        
img { -webkit-border-radius: 3px; border-radius: 3px; }
body { background-color: #eaeaea; }
</style> 
 </head> 
 <body class="single single-article postid-130 single-format-standard col-2cl full-width chrome"> 
  <div id="wrapper"> 
   <header id="header"> 
    <div class="container group"> 
     <div class="container-inner"> 
      <div class="group pad"> 
       <p class="site-title"><a href="http://www.webdeveasy.com/" rel="home">WebDevEasy</a></p> 
       <p class="site-description">Frameworks, Tools and Tips for Web Developers.</p> 
       <div id="header-widgets"> 
       </div>
       <!--/#header-ads--> 
      </div> 
     </div>
     <!--/.container-inner--> 
    </div>
    <!--/.container--> 
   </header>
   <!--/#header--> 
   <div class="container" id="page"> 
    <div class="container-inner"> 
     <div class="main"> 
      <div class="main-inner group"> 
       <section class="content"> 
        <div class="page-title pad group"> 
         <ul class="meta-single group"> 
          <li class="category"><a href="http://www.webdeveasy.com/category/articles/" rel="category tag">Articles</a></li> 
          <li class="comments"><a href="http://www.webdeveasy.com/single-page-application-authentication/#comments"><i class="fa fa-comments-o"></i><span class="dsq-postid" data-dsqidentifier="130 http://www.webdeveasy.dev/?p=130">4</span></a></li> 
         </ul> 
        </div>
        <!--/.page-title--> 
        <div class="pad group"> 
         <article class="post-130 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-angularjs tag-authentication tag-javascript tag-node-js"> 
          <div class="post-inner group"> 
           <h1 class="post-title entry-title">Single Page Application Authentication</h1> 
           <!-- <p class="post-byline">by <a href="http://www.webdeveasy.com/author/naorye/" title="Posts by naorye" rel="author">naorye</a> &middot; September 25, 2013</p> --> 
           <p class="post-byline">by <span class="vcard author"> <span class="fn"><a href="http://www.webdeveasy.com/author/naorye/" title="Posts by naorye" rel="author">naorye</a></span> </span> · Published <time class="published" datetime="2013-09-25 20:27:10">September 25, 2013</time> · Updated <time class="updated" datetime="2016-05-19 21:14:18">May 19, 2016</time> </p> 
           <div class="clear"></div> 
           <div class="entry themeform"> 
            <div class="entry-inner"> 
             <!-- Quick Adsense WordPress Plugin: http://quicksense.net/ --> 
             <div style="float:none;margin:10px 0 10px 0;text-align:center;"> 
              <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
              <!-- google_ad_begin_of_post --> 
              <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-6953090373480388" data-ad-slot="3659905550" data-ad-format="auto"></ins> 
              <script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script> 
             </div> 
             <p>&lt;</p> 
             <p>p&gt;This article will guide you how to add user authentication to your single page application. On the back end side I will use Node.js and on the front end side I will use AngularJS. Although I used specific frameworks, you may apply the same technique for different back end and frond end frameworks (rails, Backbone, etc).<span id="more-130"></span><br> The final application will look like this (without the horrible styling):</p> 
             <p><iframe src="http://spa-auth.herokuapp.com/" width="100%" height="180px"></iframe></p> 
             <p>At the beginning of this article I will build an application based on <a target="_blank" href="http://nodejs.org">Node.js</a>, <a target="_blank" href="http://expressjs.com/">express</a>, <a target="_blank" href="http://mongoosejs.com/">mongoose</a> and <a target="_blank" href="http://angularjs.org/">AngularJS</a> and then I will add authentication support. At the end we will have single page application that allows users to login and logout from our system. For this article I chose to implement facebook authentication, but changing this later to other 3rd party or local authentication will be trivial. <br> One thing important to mention is that the final application will contain the minimum code required for this guide so dont use it as a boilerplate code, the best thing is to learn from it and implement it yourself in your application.</p> 
             <h2 id="createanapplication">Create an application</h2> 
             <p>At the beginning, lets create a single page application.</p> 
             <h3 id="nodejsserverappjs">Node.js server: app.js</h3> 
             <p>First thing we do is loading required modules: </p> 
             <div class="prism-title">
              Load required modules and configurations
             </div> 
             <pre><code class="language-javascript">var fs = require('fs')  
    mongoose = require('mongoose'),
    http = require('http');</code></pre> 
             <p>Then we connect to our mongo database (you should define your own) and load some mongoose models (right now we dont have any model): </p> 
             <div class="prism-title">
              Connect to mongo db and load mongoose models
             </div> 
             <pre><code class="language-javascript">mongoose.connect('&lt;mongodb uri&gt;');

var models_path = __dirname + '/app/models';  
fs.readdirSync(models_path).forEach(function(file) {  
    if (file.substring(-3) === '.js') {
        require(models_path + '/' + file);
    }
});</code></pre> 
             <p>Last things to do is to configure express application, define its routes and start it. Express configurations and routes definitions are made in different files in order to keep the application easy to maintain. </p> 
             <div class="prism-title">
              Configure express, define routes and start
             </div> 
             <pre><code class="language-javascript">var app = require('./config/express')(config);  
require('./config/routes')(app, config);  
http.createServer(app).listen(app.get('port'), function(){  
    console.log('Express server listening on port ' + app.get('port'));
});

exports = module.exports = app;</code></pre> 
             <h3 id="expressconfigurationconfigexpressjs">Express configuration: config/express.js</h3> 
             <p>There is nothing special in this express configurations file. Amongst all the configurations, we:</p> 
             <ul> 
              <li>Set our views path to be /app/views</li> 
              <li>Set our view engine to <a target="_blank" href="https://github.com/visionmedia/ejs">ejs</a></li> 
              <li>Use <a target="_blank" href="http://kcbanner.github.io/connect-mongo/">connect-mongo</a> as a session store (you need to define your &lt;mongodb uri&gt;)</li> 
              <li>Define /public as a static folder (this folder will contain our front end application) </li> 
             </ul> 
             <div class="prism-title">
              express configurations
             </div> 
             <pre><code class="language-javascript">var express = require('express'),  
    mongoStore = require('connect-mongo')(express),
    path = require('path');

module.exports = function (config) {  
    var app = express();

    var root = path.normalize(__dirname + '/..');

    app.set('showStackError', true);

    app.set('port', process.env.PORT || 3000);
    app.set('views', root + '/app/views');
    app.set('view engine', 'ejs');
    app.use(express.favicon());

    app.use(express.logger('dev'));

    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(express.cookieParser());

    app.use(express.session({
        secret: 'my-session-store',
        store: new mongoStore({
            url: '&lt;mongodb uri&gt;',
            collection : 'sessions'
        })
    }));

    app.use(express.static(root + '/public'));

    app.use(app.router);

    if ('development' == app.get('env')) {
        app.use(express.errorHandler());

        app.use(function(req, res, next) {
             console.log(req.url);
             next();
        });
    }

    return app;
};</code></pre> 
             <h3 id="routesdefinitionconfigroutesjs">Routes definition: config/routes.js</h3> 
             <p>Our routes definitions are very simple. We need to be able to serve secured data only for our members as well as unsecured data for all users. Therefore the router handles the following endpoints:</p> 
             <ul> 
              <li>GET request on api/secured/* for secured data</li> 
              <li>GET request on api/* for unsecured data</li> 
              <li>All other GET requests return the index view (except for static content that was defined on express configurations)</li> 
             </ul> 
             <div class="prism-title">
              Routes definition
             </div> 
             <pre><code class="language-javascript">module.exports = function (app, passport, config) {  
    app.get('api/secured/*',
        function (req, res, next) {
            // Need to filter anonymous users somehow 
            /*if (not logged in) {
                return res.json({ error: 'This is a secret message, login to see it.' });
            }*/
            next();
        },
        function (req, res) {
            res.json({ message: 'This message is only for authenticated users' });
        });


    app.get('api/*', function (req, res) {
        res.json({ message: 'This message is known by all' });
    });


    app.get('/*', function (req, res) {
        res.render('index');
    });
};</code></pre> 
             <p>Notice that GET request on api/secured/* should return error JSON for anonymous users.</p> 
             <h3 id="frontend">Front end</h3> 
             <p>Our front end, which consists of AngularJS, has an html markup that contains a secured message and an unsecured message: </p> 
             <div class="prism-title">
              Markup
             </div> 
             <pre><code class="language-markup">&lt;div ng-controller="MessageController"&gt;  
    Unsecured message: &lt;span ng-bind="messages.unsecured"&gt;&lt;/span&gt;
    &lt;br/&gt;
    Secured message: &lt;span ng-bind="messages.secured"&gt;&lt;/span&gt;
&lt;/div&gt;</code></pre> 
             <p>At the end we would like the secured message to be displayed only to authenticated users. </p> 
             <p>This is our MessageController: </p> 
             <div class="prism-title">
              MessageController
             </div> 
             <pre><code class="language-javascript">app.controller('MessageController', ['$scope', '$http', function($scope, $http) {  
    $scope.messages = {};

    $http.get('/api/secured/message').success(function(data) {
        $scope.messages.secured = data.message || data.error;
    });

    $http.get('/api/message').success(function(data) {
        $scope.messages.unsecured = data.message || data.error;
    });
}]);</code></pre> 
             <p>You can download the application we have so far, without authentication, <a target="_blank" href="../code/single-page-application-authentication/single-page-application-without-authentication.zip">here</a>. In order to run the application, fill in your &lt;mongodb uri&gt; in config/express.js, execute npm install and then execute npm start. <br> Now is the time to add authentication. </p> 
             <h2 id="authenticationsupport">Authentication support</h2> 
             <p>For supporting authentication, we will use <a target="_blank" href="http://passportjs.org/">Passport</a> which is a really simple authentication middleware for Node.js. There are other good authentication middlewares like <a target="_blank" href="http://everyauth.com/">everyauth</a> or <a target="_blank" href="https://github.com/ciaranj/connect-auth">connect-auth</a>, but I find Passport more modular and easy to use. <br> Supporting facebook authentication with Passport requires to add passport and passport-facebook packages to package.json. </p> 
             <p>Before I continue, Id like to describe how the whole authentication process is going to be:</p> 
             <ol> 
              <li>The first time the user enters the application, he is not authenticated. </li> 
              <li>The user presses the Login button and a new window is opened. Because the authentication process includes redirection to facebook, I decided to open a new window in order to keep the current state of the application window. </li> 
              <li>This new window leads to an endpoint that triggers Passport and the authentication process begins. </li> 
              <li>During the authentication process, Passport redirects the user to facebook for authentication. When facebook authentication is completed, facebook redirects the user back to the application which will attempt to obtain an access token. If access was granted, the user will be logged in. Otherwise, authentication has failed. </li> 
              <li>If authentication succeeds, Passport creates a new user (or loads the user in case of returning user) and establishes a new session. This session will be maintained via a cookie set in the users browser. </li> 
              <li>After authentication is completed, Passport redirects the new window to an after-auth view that informs the parent opener window about the authentication state and the user data. </li> 
              <li>The next time the user enters to the application, the cookie will identify the session and the user will become logged in.</li> 
             </ol> 
             <p>Therefore, our to do list is:</p> 
             <ul> 
              <li>Create User model for representing users</li> 
              <li>Tell Passport how to create or load user instances according to facebook response</li> 
              <li>Create an after-auth view for completing the authentication</li> 
              <li>Create endpoints that triggers the authentication process and renders the after-auth view</li> 
             </ul> 
             <p>Now stop talking and lets create the User mongoose model.</p> 
             <h3 id="usermongoosemodel">User mongoose model</h3> 
             <div class="prism-title">
              User mongoose model
             </div> 
             <pre><code class="language-javascript">var mongoose = require('mongoose'),  
    Schema = mongoose.Schema;

var UserSchema = new Schema({  
    name: String,
    email: String,
    username: String,
    user_image: String,
    facebook_id: String,
    facebook: { },
    createdAt: { type: Date, 'default': Date.now }
});

module.exports = mongoose.model('User', UserSchema);</code></pre> 
             <p>As you can see, the User model is very simple. Except the usual user details, we also want to store the users facebook id and the whole JSON returned from facebook.</p> 
             <h3 id="fetchingthecurrentuser">Fetching the current user</h3> 
             <p>In order to be able to login using facebook, Passport requires an authentication mechanism (called Strategy). passport-facebook package gives us FacebookStrategy class which implements such mechanism. All we have to do is to tell Passport to use FacebookStrategy and implement a method that creates or loads a user according to facebook profile id. <br> (Note that in order to use this code, you have to supply your facebook app id and facebook app secret)</p> 
             <div class="prism-title">
              FacebookStrategy for Passport
             </div> 
             <pre><code class="language-javascript">passport.use(new FacebookStrategy({  
        clientID: '&lt;Your facebook app id&gt;',
        clientSecret: '&lt;Your facebook app secret&gt;',
        callbackURL: '/auth/facebook/callback'
    }, function(accessToken, refreshToken, profile, done) {
        User.findOne({ 'facebook.id': profile.id }, function (err, user) {
            if (err) { return done(err); }
            if (!user) {
                user = new User({
                    name: profile.displayName,
                    email: profile.emails[0].value,
                    username: profile.username,
                    provider_id: profile.id,
                    provider: 'facebook',
                    facebook: profile._json
                });
                user.save(function (err) {
                    if (err) {
                        console.log(err);
                    }
                    return done(err, user);
                });
            } else {
                return done(err, user);
            }
        });
    }));</code></pre> 
             <p>When Passport gives us the users facebook profile, we perform mongodb search for the user according to his facebook profile id. If the user is not found, we create a new user model and save it. Eventually we return the user instance. <br> In addition to constructing the user from his facebook profile, we also have to tell Passport how to serialize and deserialize user instance to and from a session: </p> 
             <div class="prism-title">
              Serialize and deserialize user instance
             </div> 
             <pre><code class="language-javascript">passport.serializeUser(function(user, done) {  
    done(null, user.id);
});

passport.deserializeUser(function(id, done) {  
    User.findOne({ _id: id }, function (err, user) {
        done(err, user);
    });
});</code></pre> 
             <p>When user is authenticated, passport serializes the user and stores the result in a session cookie. When a user with session cookie arrives to the system, Passport deserialize the user instance.</p> 
             <h3 id="afterauthenticationview">After-authentication view</h3> 
             <p>After facebook approves or disapproves the user, Passport tries to obtain access token and renders after-auth view. This view contains a script that passes the login state along with the user data (in case of success login) to the parent window. This is done by defining an accessible method on the application window that knows to handle logins results. Lets take a look on the after-auth view: </p> 
             <div class="prism-title">
              after-auth view
             </div> 
             <pre><code class="language-markup">&lt;!DOCTYPE html&gt;  
&lt;html lang="en"&gt;  
&lt;head&gt;  
    &lt;title&gt;Single Page Application Authentication - Auth Success&lt;/title&gt;
    &lt;meta charset="utf-8" /&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt;
&lt;/head&gt;  
&lt;body&gt;  
&lt;script type="text/javascript"&gt;  
    if (window.opener) {
        window.opener.focus();

        var state = '&lt;%= state %&gt;';
        var user = &lt;%- JSON.stringify(user) %&gt;;
        if (window.opener.app &amp;&amp;
            window.opener.app.authState) {

            window.opener.app.authState(state, user);
        }
    }
    window.close();
&lt;/script&gt;  
&lt;/body&gt;  
&lt;/html&gt;</code></pre> 
             <p>As you can see, this view contains only script code that notifies the application about the authentication state and the user data. Later we will define the authState() method that handles the result. At the end, the pop-up window is closed.</p> 
             <p>Now is the time to connect all the actions. Lets see our new endpoints.</p> 
             <!-- Quick Adsense WordPress Plugin: http://quicksense.net/ --> 
             <div style="float:none;margin:10px 0 10px 0;text-align:center;"> 
              <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
              <!-- google_ad_in_the_middle_of_post --> 
              <ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-6953090373480388" data-ad-slot="1292261159"></ins> 
              <script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script> 
             </div> 
             <h3 id="newroutesdefinition">New routes definition</h3> 
             <p>First, lets take a look on the endpoints that handles the login: </p> 
             <div class="prism-title">
              Login endpoints
             </div> 
             <pre><code class="language-javascript">    app.get('/auth/facebook', passport.authenticate('facebook'));
    app.get('/auth/facebook/callback', passport.authenticate('facebook', { successRedirect: '/auth/success', failureRedirect: '/auth/failure' }));
    app.get('/auth/success', function(req, res) {
        res.render('after-auth', { state: 'success', user: req.user ? req.user : null });
    });
    app.get('/auth/failure', function(req, res) {
        res.render('after-auth', { state: 'failure', user: null });
    });</code></pre> 
             <p>When the user asks for /auth/facebook, Passport redirects the user to facebook which in turn redirects the user back to /auth/facebook/callback (accoring to FacebookStrategy implementation). Then, Passport tries to get access token and redirects to /auth/success or /auth/failure according to the result. <br> Both /auth/success and /auth/failure render our after-auth view with different parameters. <br> Another endpoint for logout will be DELETE request on /auth: </p> 
             <div class="prism-title">
              Logout endpoint
             </div> 
             <pre><code class="language-javascript">app.delete('/auth', function(req, res) {  
    req.logout();
    res.writeHead(200);
    res.end();
});</code></pre> 
             <p>The last thing to do is to fix our secured data endpoint: </p> 
             <div class="prism-title">
              Secured data endpoint
             </div> 
             <pre><code class="language-javascript">app.get('/api/secured/*',  
    function (req, res, next) {
        if (!req.user) {
            return res.json({ error: 'This is a secret message, login to see it.' });
        }
        next();
    },
    function (req, res) {
        res.json({ message: 'This message is only for authenticated users' });
    });</code></pre> 
             <p>First we check whether req.user exists. In case it doesnt, we return an error JSON. </p> 
             <p>After all our hard work, now is the time to see our authentication in action!</p> 
             <h2 id="authenticationinaction">Authentication in action</h2> 
             <p>In order to demonstrate our authentication implementation, we have to complete our front end application. Lets create AngularJS service that will be responsible to the user session. The purposes of such service are: </p> 
             <ul> 
              <li>Initiate the authentication process</li> 
              <li>Allow logout</li> 
              <li>Supply handlers for authentication success / failure and maintain session state</li> 
             </ul> 
             <div class="prism-title">
              Session service
             </div> 
             <pre><code class="language-javascript">app.factory('sessionService', ['$rootScope', '$window', '$http',  
    function ($rootScope, $window, $http) {
    var session = {
        init: function () {
            this.resetSession();
        },
        resetSession: function() {
            this.currentUser = null;
            this.isLoggedIn = false;
        },
        facebookLogin: function() {
            var url = '/auth/facebook',
                width = 1000,
                height = 650,
                top = (window.outerHeight - height) / 2,
                left = (window.outerWidth - width) / 2;
            $window.open(url, 'facebook_login', 'width=' + width + ',height=' + height + ',scrollbars=0,top=' + top + ',left=' + left);
        },
        logout: function() {
            var scope = this;
            $http.delete('/auth').success(function() {
                scope.resetSession();
                $rootScope.$emit('session-changed');
            });
        },
        authSuccess: function(userData) {
            this.currentUser = userData;
            this.isLoggedIn = true;
            $rootScope.$emit('session-changed');
        },
        authFailed: function() {
            this.resetSession();
            alert('Authentication failed');
        }
    };
    session.init();
    return session;
}]);</code></pre> 
             <p>Calling sessionService.facebookLogin() and sessionService.logout() will log us in and out from the application. sessionService.authSuccess() and sessionService.authFailed() are methods that get called whenever the application gets notified about the authentication state. From now on, whenever we like, we can use sessionService.isLoggedIn and sessionService.currentUser in order to know the authentication state and get the current logged in user. Our service also triggers a session-changed event each time the session changed. </p> 
             <p>Lts see now the changes in MessageController </p> 
             <div class="prism-title">
              MessageController
             </div> 
             <pre><code class="language-javascript">app.controller('MessageController', ['$scope', '$rootScope', '$http',  
    function($scope, $rootScope, $http) {
        $scope.messages = {};

        function loadMessages() {
            $http.get('/api/secured/message').success(function(data) {
                $scope.messages.secured = data.message || data.error;
            });

            $http.get('/api/message').success(function(data) {
                $scope.messages.unsecured = data.message || data.error;
            });
        }

        var deregistration = $rootScope.$on('session-changed', loadMessages);
        $scope.$on('$destroy', deregistration);

        loadMessages();
    }]);</code></pre> 
             <p>MessageController basically remains the same, except that each time session-changed event is triggered, the controller reloads the messages. </p> 
             <p>Now is the time to add Login and Logout buttons and bind them to actions. Those buttons will be visible only when necessary. </p> 
             <div class="prism-title">
              Login and logout buttons
             </div> 
             <pre><code class="language-markup">&lt;button ng-hide="session.isLoggedIn" ng-click="session.facebookLogin()"&gt;Login&lt;/button&gt;  
&lt;span ng-show="session.isLoggedIn" ng-bind="'Hello ' + session.currentUser.name"&gt;&lt;/span&gt;  
&lt;button ng-show="session.isLoggedIn" ng-click="session.logout()"&gt;Logout&lt;/button&gt;</code></pre> 
             <p>In order the variable session to be recognized in the template, we will make the following assignment: </p> 
             <div class="prism-title">
              Session assignment to $rootScope
             </div> 
             <pre><code class="language-javascript">app.run(['$rootScope', 'sessionService', function ($rootScope, sessionService) {  
    $rootScope.session = sessionService;
}]);</code></pre> 
             <p>Now we have to define the authState() method that handles the result from the authentication pop-up window: </p> 
             <div class="prism-title">
              app.authState() definition
             </div> 
             <pre><code class="language-javascript">app.run(['$rootScope', '$window', 'sessionService', function ($rootScope, $window, sessionService) {  
    $window.app = {
        authState: function(state, user) {
            $rootScope.$apply(function() {
                switch (state) {
                    case 'success':
                        sessionService.authSuccess(user);
                        break;
                    case 'failure':
                        sessionService.authFailed();
                        break;
                }

            });
        }
    };
}]);</code></pre> 
             <p> One last thing to do is to determine the authentication state when the application loads. On our template we add a script that assigns the current user (or null) to window.user: </p> 
             <div class="prism-title">
              Assigning the current user to window.user
             </div> 
             <pre><code class="language-markup">&lt;script type="text/javascript"&gt;  
    window.user = &lt;%- JSON.stringify(user) %&gt;;
&lt;/script&gt;</code></pre> 
             <p>Where the user variable comes from our endpoint: </p> 
             <div class="prism-title">
              Injecting the current user to the view
             </div> 
             <pre><code class="language-javascript">app.get('/*', function (req, res) {
    res.render('index', { user: req.user ? req.user : null });
});</code></pre> 
             <p>And when the front end application loads, we initialize the session according to window.user: </p> 
             <div class="prism-title">
              Initiate the front end session state
             </div> 
             <pre><code class="language-javascript">app.run(['sessionService', '$window', function (sessionService, $window) {  
    if ($window.user !== null) {
        sessionService.authSuccess($window.user);
    }
}]);</code></pre> 
             <p>Congratulations! Now we have a secured application with facebook authentication! </p> 
             <h2 id="downloadgithubdemo">Download &amp; GitHub &amp; Demo </h2> 
             <ul> 
              <li>Download the application with authentication support <a target="_blank" href="../code/single-page-application-authentication/single-page-application-with-authentication.zip">here</a> (dont forget to run npm install before starting the application with npm start)</li> 
              <li>See a demonstration of the application <a target="_blank" href="http://spa-auth.herokuapp.com/">here</a></li> 
              <li>Visit the <a href="https://github.com/naorye/spa-auth" target="_blank">GitHub repository</a></li> 
             </ul> 
             <p>I hope this article helped you understanding how to add authentication support for your single page application. Feel free to leave comments and questions!</p> 
             <p>NaorYe</p> 
             <!-- Quick Adsense WordPress Plugin: http://quicksense.net/ --> 
             <div style="float:none;margin:10px 0 10px 0;text-align:center;"> 
              <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
              <!-- google_ad_end_of_post_responsive --> 
              <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-6953090373480388" data-ad-slot="7199193958" data-ad-format="auto"></ins> 
              <script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script> 
             </div> 
             <div style="font-size:0px;height:0px;line-height:0px;margin:0;padding:0;clear:both"></div> 
             <nav class="pagination group"> 
             </nav>
             <!--/.pagination--> 
            </div> 
            <div class="clear"></div> 
           </div>
           <!--/.entry--> 
          </div>
          <!--/.post-inner--> 
         </article>
         <!--/.post--> 
         <div class="clear"></div> 
         <p class="post-tags"><span>Tags:</span> <a href="http://www.webdeveasy.com/tag/angularjs/" rel="tag">AngularJS</a><a href="http://www.webdeveasy.com/tag/authentication/" rel="tag">Authentication</a><a href="http://www.webdeveasy.com/tag/javascript/" rel="tag">JavaScript</a><a href="http://www.webdeveasy.com/tag/node-js/" rel="tag">Node.js</a></p> 
         <div id="disqus_thread"> 
          <div id="dsq-content"> 
           <ul id="dsq-comments"> 
            <li class="comment even thread-even depth-1" id="dsq-comment-187"> 
             <div id="dsq-comment-header-187" class="dsq-comment-header"> 
              <cite id="dsq-cite-187"> <span id="dsq-author-user-187">KDogg</span> </cite> 
             </div> 
             <div id="dsq-comment-body-187" class="dsq-comment-body"> 
              <div id="dsq-comment-message-187" class="dsq-comment-message">
               <p>Thank you so much! I was struggling with this on my own for quite some time. Youve really helped me!</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
            <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-228"> 
             <div id="dsq-comment-header-228" class="dsq-comment-header"> 
              <cite id="dsq-cite-228"> <span id="dsq-author-user-228">Igor Vaschuk</span> </cite> 
             </div> 
             <div id="dsq-comment-body-228" class="dsq-comment-body"> 
              <div id="dsq-comment-message-228" class="dsq-comment-message">
               <p>Live demo doesnt work:</p> 
               <p>Application Error</p> 
               <p>An error occurred in the application and your page could not be served. Please try again in a few moments.</p> 
               <p>If you are the application owner, check your logs for details.</p> 
              </div> 
             </div> 
             <ul class="children"> 
              <li class="comment even depth-2" id="dsq-comment-240"> 
               <div id="dsq-comment-header-240" class="dsq-comment-header"> 
                <cite id="dsq-cite-240"> <span id="dsq-author-user-240">Alberto</span> </cite> 
               </div> 
               <div id="dsq-comment-body-240" class="dsq-comment-body"> 
                <div id="dsq-comment-message-240" class="dsq-comment-message">
                 <p>There are two diferents proyects, one with auth and another without auth, so you have to make cd with-authentication/ and then make npm install</p> 
                </div> 
               </div> </li>
              <!-- #comment-## --> 
             </ul>
             <!-- .children --> </li>
            <!-- #comment-## --> 
            <li class="comment odd alt thread-even depth-1" id="dsq-comment-229"> 
             <div id="dsq-comment-header-229" class="dsq-comment-header"> 
              <cite id="dsq-cite-229"> <span id="dsq-author-user-229">Igor Vaschuk</span> </cite> 
             </div> 
             <div id="dsq-comment-body-229" class="dsq-comment-body"> 
              <div id="dsq-comment-message-229" class="dsq-comment-message">
               <p>Also, npm start fails with:</p> 
               <p>[nodemon] starting `node app.js`</p> 
               <p>C:Projectstestoauthspa-authwith-authenticationnode_modulesexpresslibexpress.js:99</p> 
               <p> throw new Error(Most middleware (like  + name + ) is no longer bundled with Express and must be installed separately. Please see <a href="https://github.com/senchalabs/connect#middleware" rel="nofollow">https://github.com/senchalabs/connect#middleware</a>.);</p> 
               <p> ^</p> 
               <p>Error: Most middleware (like session) is no longer bundled with Express and must be installed separately. Please see <a href="https://github.com/senchalabs/connect#middleware" rel="nofollow">https://github.com/senchalabs/connect#middleware</a>.</p> 
               <p> at Function.Object.defineProperty.get (C:Projectstestoauthspa-authwith-authenticationnode_modulesexpresslibexpress.js:99:13)</p> 
               <p> at module.exports (C:Projectstestoauthspa-authwith-authenticationnode_modulesconnect-mongolibconnect-mongo.js:68:39)</p> 
               <p> at Object. (C:Projectstestoauthspa-authwith-authenticationconfigexpress.js:2:42)</p> 
               <p> at Module._compile (module.js:435:26)</p> 
               <p> at Object.Module._extensions..js (module.js:442:10)</p> 
               <p> at Module.load (module.js:356:32)</p> 
               <p> at Function.Module._load (module.js:311:12)</p> 
               <p> at Module.require (module.js:366:17)</p> 
               <p> at require (module.js:385:17)</p> 
               <p> at Object. (C:Projectstestoauthspa-authwith-authenticationapp.js:20:11)</p> 
               <p> at Module._compile (module.js:435:26)</p> 
               <p> at Object.Module._extensions..js (module.js:442:10)</p> 
               <p> at Module.load (module.js:356:32)</p> 
               <p> at Function.Module._load (module.js:311:12)</p> 
               <p> at Function.Module.runMain (module.js:467:10)</p> 
               <p> at startup (node.js:136:18)</p> 
              </div> 
             </div> </li>
            <!-- #comment-## --> 
           </ul> 
          </div> 
         </div> 
        </div>
        <!--/.pad--> 
       </section>
       <!--/.content--> 
       <div class="sidebar s1"> 
        <a class="sidebar-toggle" title="Expand Sidebar"><i class="fa icon-sidebar-toggle"></i></a> 
        <div class="sidebar-content"> 
         <div id="dpe_fp_widget-2" class="widget widget_dpe_fp_widget"> 
          <ul class="dpe-flexible-posts"> 
           <li id="post-316" class="post-316 news type-news status-publish format-standard has-post-thumbnail hentry category-html category-javascript category-news tag-javascript tag-jquery"> <a href="http://www.webdeveasy.com/news/jquery-3-0-finally-released/"> <img width="720" height="340" src="http://i0.wp.com/www.webdeveasy.com/content/uploads/2016/06/jquery_3-e1465801297361.jpg?resize=403%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="jquery-3.0" srcset="http://i0.wp.com/www.webdeveasy.com/content/uploads/2016/06/jquery_3-e1465801297361.jpg?resize=520%2C245 520w, http://i0.wp.com/www.webdeveasy.com/content/uploads/2016/06/jquery_3-e1465801297361.jpg?resize=720%2C340 720w" sizes="(max-width: 720px) 100vw, 720px"> 
             <div class="title">
              jQuery 3.0 Has Finally Been Released
             </div> </a> </li> 
           <li id="post-272" class="post-272 news type-news status-publish format-standard has-post-thumbnail hentry category-javascript category-news tag-electron tag-javascript tag-release"> <a href="http://www.webdeveasy.com/news/electron-1-0/"> <img width="720" height="340" src="http://i1.wp.com/www.webdeveasy.com/content/uploads/2016/06/electron-1.0-e1465801033142.png?resize=672%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="electron-1.0" srcset="http://i1.wp.com/www.webdeveasy.com/content/uploads/2016/06/electron-1.0-e1465801033142.png?resize=520%2C245 520w, http://i1.wp.com/www.webdeveasy.com/content/uploads/2016/06/electron-1.0-e1465801033142.png?resize=720%2C340 720w" sizes="(max-width: 720px) 100vw, 720px"> 
             <div class="title">
              Electron 1.0
             </div> </a> </li> 
           <li id="post-241" class="post-241 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-es6 tag-javascript tag-plugins tag-translation-service tag-tutorial"> <a href="http://www.webdeveasy.com/building-a-full-featured-translation-service/"> <img width="720" height="340" src="http://i1.wp.com/www.webdeveasy.com/content/uploads/2016/02/building-a-full-featured-translation-service.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="Building a Full Featured Translation Service"> 
             <div class="title">
              Building a Full Featured Translation Service
             </div> </a> </li> 
           <li id="post-164" class="post-164 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-q tag-angularjs tag-asynchronous tag-callbacks tag-deferred tag-javascript tag-promise"> <a href="http://www.webdeveasy.com/javascript-promises-and-angularjs-q-service/"> <img width="720" height="340" src="http://i0.wp.com/www.webdeveasy.com/content/uploads/2014/09/javascript-promises-and-angularjs-q-service.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="javascript-promises-and-angularjs-q-service"> 
             <div class="title">
              JavaScript Promises and AngularJS $q Service
             </div> </a> </li> 
           <li id="post-162" class="post-162 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-browser tag-history tag-iframe tag-javascript tag-location"> <a href="http://www.webdeveasy.com/back-button-behavior-on-a-page-with-an-iframe/"> <img width="720" height="340" src="http://i0.wp.com/www.webdeveasy.com/content/uploads/2014/05/back-button-behavior-on-a-page-with-an-iframe.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="back-button-behavior-on-a-page-with-an-iframe"> 
             <div class="title">
              Back Button Behavior on a Page With an iframe
             </div> </a> </li> 
           <li id="post-156" class="post-156 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-http tag-angularjs tag-angularjs-interceptors tag-javascript"> <a href="http://www.webdeveasy.com/interceptors-in-angularjs-and-useful-examples/"> <img width="720" height="340" src="http://i2.wp.com/www.webdeveasy.com/content/uploads/2014/03/interceptors-in-angularjs-and-useful-examples.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="interceptors-in-angularjs-and-useful-examples"> 
             <div class="title">
              Interceptors in AngularJS and Useful Examples
             </div> </a> </li> 
           <li id="post-151" class="post-151 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-angularjs tag-angularjs-providers tag-javascript tag-logger"> <a href="http://www.webdeveasy.com/service-providers-in-angularjs-and-logger-implementation/"> <img width="720" height="340" src="http://i1.wp.com/www.webdeveasy.com/content/uploads/2014/02/service-providers-in-angularjs-and-logger-implementation.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="service-providers-in-angularjs-and-logger-implementation"> 
             <div class="title">
              Service Providers in AngularJS + Logger Implementation
             </div> </a> </li> 
           <li id="post-149" class="post-149 article type-article status-publish format-standard has-post-thumbnail hentry category-articles"> <a href="http://www.webdeveasy.com/angularjs-data-model/"> <img width="720" height="340" src="http://i2.wp.com/www.webdeveasy.com/content/uploads/2013/11/angularjs-data-model.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="angularjs-data-model"> 
             <div class="title">
              AngularJS Data Model
             </div> </a> </li> 
           <li id="post-145" class="post-145 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-css tag-flexbox tag-plugins"> <a href="http://www.webdeveasy.com/flexbox-accordion/"> <img width="720" height="340" src="http://i0.wp.com/www.webdeveasy.com/content/uploads/2013/10/flexbox-accordion.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="flexbox-accordion"> 
             <div class="title">
              Flexbox Accordion
             </div> </a> </li> 
           <li id="post-136" class="post-136 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-javascript tag-jquery tag-plugins"> <a href="http://www.webdeveasy.com/easy-select-plugin/"> <img width="720" height="340" src="http://i0.wp.com/www.webdeveasy.com/content/uploads/2013/10/easy-select-plugin.png?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="easy-select-plugin"> 
             <div class="title">
              Easy Select Plugin
             </div> </a> </li> 
           <li id="post-130" class="post-130 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-angularjs tag-authentication tag-javascript tag-node-js"> <a href="http://www.webdeveasy.com/single-page-application-authentication/"> <img width="712" height="336" src="http://i1.wp.com/www.webdeveasy.com/content/uploads/2013/09/single-page-application-authentication.jpg?resize=712%2C336" class="attachment-thumb-large size-thumb-large wp-post-image" alt="single-page-application-authentication"> 
             <div class="title">
              Single Page Application Authentication
             </div> </a> </li> 
           <li id="post-115" class="post-115 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-css tag-hammer-js tag-jquery"> <a href="http://www.webdeveasy.com/pages-slider-with-javascript-and-css/"> <img width="720" height="340" src="http://i1.wp.com/www.webdeveasy.com/content/uploads/2013/08/pages-slider-with-javascript-and-css.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="pages-slider-with-javascript-and-css"> 
             <div class="title">
              Pages Slider With JavaScript And CSS
             </div> </a> </li> 
           <li id="post-111" class="post-111 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-backbone tag-javascript"> <a href="http://www.webdeveasy.com/backbone-cleanup/"> <img width="720" height="340" src="http://i1.wp.com/www.webdeveasy.com/content/uploads/2013/04/backbone-cleanup.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="backbone-cleanup"> 
             <div class="title">
              Backbone Cleanup
             </div> </a> </li> 
           <li id="post-105" class="post-105 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-almond tag-javascript tag-r-js tag-requirejs"> <a href="http://www.webdeveasy.com/optimize-requirejs-projects/"> <img width="720" height="340" src="http://i0.wp.com/www.webdeveasy.com/content/uploads/2013/04/optimize-requirejs-projects.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="optimize-requirejs-projects"> 
             <div class="title">
              Optimize (Concatenate and Minify) RequireJS Projects
             </div> </a> </li> 
           <li id="post-103" class="post-103 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-javascript tag-object-oriented tag-prototype"> <a href="http://www.webdeveasy.com/object-oriented-programming-with-javascript/"> <img width="720" height="340" src="http://i0.wp.com/www.webdeveasy.com/content/uploads/2013/03/object-oriented-programming-with-javascript.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="object-oriented-programming-with-javascript"> 
             <div class="title">
              Object Oriented Programming with JavaScript
             </div> </a> </li> 
           <li id="post-101" class="post-101 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-backbone tag-javascript"> <a href="http://www.webdeveasy.com/backbone-cache/"> <img width="720" height="340" src="http://i1.wp.com/www.webdeveasy.com/content/uploads/2013/03/backbone-cache.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="backbone-cache"> 
             <div class="title">
              Backbone Cache
             </div> </a> </li> 
           <li id="post-95" class="post-95 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-backbone tag-javascript tag-requirejs tag-underscore"> <a href="http://www.webdeveasy.com/searcher-backbone-dot-js-application-demonstration/"> <img width="720" height="340" src="http://i0.wp.com/www.webdeveasy.com/content/uploads/2013/01/searcher-backbone-application-demonstration.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="searcher-backbone-application-demonstration"> 
             <div class="title">
              Searcher  Backbone application demonstration
             </div> </a> </li> 
           <li id="post-91" class="post-91 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-javascript tag-prototype"> <a href="http://www.webdeveasy.com/javascript-prototype/"> <img width="720" height="340" src="http://i2.wp.com/www.webdeveasy.com/content/uploads/2012/11/javascript-prototype.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="javascript-prototype"> 
             <div class="title">
              JavaScript Prototype
             </div> </a> </li> 
           <li id="post-86" class="post-86 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-backbone tag-design-patterns tag-javascript tag-requirejs tag-singleton"> <a href="http://www.webdeveasy.com/backbone-singleton/"> <img width="720" height="340" src="http://i1.wp.com/www.webdeveasy.com/content/uploads/2012/11/backbone-singleton.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="backbone-singleton"> 
             <div class="title">
              Backbone Singleton
             </div> </a> </li> 
           <li id="post-81" class="post-81 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-javascript tag-jquery tag-plugins"> <a href="http://www.webdeveasy.com/jquery-plugin-pattern/"> <img width="720" height="340" src="http://i2.wp.com/www.webdeveasy.com/content/uploads/2012/10/jquery-plugin-pattern.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="jquery-plugin-pattern"> 
             <div class="title">
              jQuery Plugin Pattern
             </div> </a> </li> 
           <li id="post-62" class="post-62 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-css tag-jquery tag-jquery-ui tag-jquery-ui-tabs tag-plugins tag-style"> <a href="http://www.webdeveasy.com/style-your-jquery-ui-tabs/"> <img width="720" height="340" src="http://i1.wp.com/www.webdeveasy.com/content/uploads/2012/09/style-your-jquery-ui-tabs.png?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="style-your-jquery-ui-tabs"> 
             <div class="title">
              Style Your jQuery-UI Tabs
             </div> </a> </li> 
           <li id="post-51" class="post-51 article type-article status-publish format-standard has-post-thumbnail hentry category-articles tag-autocomplete tag-javascript tag-jquery-ui tag-plugins"> <a href="http://www.webdeveasy.com/cascading-autocompletes-using-jquery-ui/"> <img width="720" height="340" src="http://i0.wp.com/www.webdeveasy.com/content/uploads/2014/11/cascading-autocompletes-using-jquery-ui.jpg?resize=720%2C340" class="attachment-thumb-large size-thumb-large wp-post-image" alt="cascading-autocompletes-using-jquery-ui"> 
             <div class="title">
              Cascading Autocompletes using jQuery UI
             </div> </a> </li> 
          </ul>
          <!-- .dpe-flexible-posts --> 
         </div> 
        </div>
        <!--/.sidebar-content--> 
       </div>
       <!--/.sidebar--> 
      </div>
      <!--/.main-inner--> 
     </div>
     <!--/.main--> 
    </div>
    <!--/.container-inner--> 
   </div>
   <!--/.container--> 
   <footer id="footer"> 
    <section class="container" id="footer-bottom"> 
     <div class="container-inner"> 
      <a id="back-to-top" href="#"><i class="fa fa-angle-up"></i></a> 
      <div class="pad group"> 
       <div class="grid one-half"> 
        <div id="copyright"> 
         <p>WebDevEasy © 2017. All Rights Reserved.</p> 
        </div>
        <!--/#copyright--> 
        <div id="credit" style=""> 
         <p>Powered by <a href="http://wordpress.org" target="_blank">WordPress</a>. Theme by <a href="http://presscustomizr.com">Press Customizr</a>.</p> 
        </div>
        <!--/#credit--> 
       </div> 
       <div class="grid one-half last"> 
       </div> 
      </div>
      <!--/.pad--> 
     </div>
     <!--/.container-inner--> 
    </section>
    <!--/.container--> 
   </footer>
   <!--/#footer--> 
  </div>
  <!--/#wrapper--> 
  <div style="display:none"> 
  </div> 
  <script type="text/javascript" src="http://www.webdeveasy.com/content/plugins/jetpack/modules/photon/photon.js?ver=20130122"></script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/content/plugins/__DIR__/assets/front/js/jQuerySharrre.min.js?ver=4.5.3"></script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/content/uploads/prism/prism.js?ver=1444853810"></script> 
  <script type="text/javascript" src="http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201740"></script> 
  <script type="text/javascript" src="http://s.gravatar.com/js/gprofiles.js?ver=2017Octaa"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/content/plugins/jetpack/modules/wpgroho.js?ver=4.5.3"></script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/content/themes/hueman/assets/front/js/scripts.min.js?ver=3.1.3"></script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/wp/wp-includes/js/comment-reply.min.js?ver=4.5.3"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var ultimatemodal_params = {"cookie_name":"ultimate-modal-ad5675334328f0090af1aa043038fb26","time":"1","delay":"200"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/content/plugins/ultimate-modal/assets/js/ultimate-modal.min.js"></script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/wp/wp-includes/js/wp-embed.min.js?ver=4.5.3"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var embedVars = {"disqusConfig":{"platform":"wordpress@4.5.3","language":""},"disqusIdentifier":"130 http:\/\/www.webdeveasy.dev\/?p=130","disqusShortname":"webdeveasy","disqusTitle":"Single Page Application Authentication","disqusUrl":"http:\/\/www.webdeveasy.com\/single-page-application-authentication\/","options":{"manualSync":false},"postId":"130"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/content/plugins/disqus-comment-system/media/js/disqus.js?ver=4.5.3"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var countVars = {"disqusShortname":"webdeveasy"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.webdeveasy.com/content/plugins/disqus-comment-system/media/js/count.js?ver=4.5.3"></script> 
  <!--[if lt IE 9]>
<script src="http://www.webdeveasy.com/content/themes/hueman/assets/front/js/ie/respond.js"></script>
<![endif]--> 
  <script type="text/javascript" src="http://stats.wp.com/e-201740.js" async defer></script> 
  <script type="text/javascript">
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:4.0.2',blog:'82407240',post:'130',tz:'0',srv:'www.webdeveasy.com'} ]);
	_stq.push([ 'clickTrackerInit', '82407240', '130' ]);
</script> 
  <div id="ultimate-modal" class="ultimate-modal" style="background: #000000"></div>
  <div id="ultimate-modal-content" class="ultimate-modal" style="width: 600px; height: 600px; margin: -305px 0 0 -305px;">
   <div id="ultimate-modal-close"></div>
   <p><iframe src="/wanted.html" style="position: absolute;top: 0;height: 100%;width: 100%;padding: 0;margin: 0;left: 0;border-radius: 6px;"></iframe></p> 
  </div> 
 </body>
</html>