<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <title>Read Files with Node.js</title> 
  <meta name="description" content=""> 
  <meta name="keywords" content=""> 
  <meta name="viewport" content="width=device-width, minimum-scale=1, maximum-scale=1, user-scalable=no"> 
  <!-- fav icons --> 
  <!--<link rel="shortcut icon" href="/assets/images/favicon.ico?v=130a2d6c44">--> 
  <link rel="apple-touch-icon" href="/assets/images/apple-touch-icon.png?v=130a2d6c44"> 
  <link rel="apple-touch-icon" sizes="72x72" href="/assets/images/apple-touch-icon-72x72.png?v=130a2d6c44"> 
  <link rel="apple-touch-icon" sizes="114x114" href="/assets/images/apple-touch-icon-114x114.png?v=130a2d6c44"> 
  <!-- stylesheets --> 
  <link href="//fonts.googleapis.com/css?family=Roboto+Slab%7CMerriweather+Sans" rel="stylesheet"> 
  <link rel="stylesheet" href="/assets/css/bootstrap.min.css?v=130a2d6c44"> 
  <link rel="stylesheet" href="/assets/css/font-awesome.min.css?v=130a2d6c44"> 
  <link rel="stylesheet" type="text/css" href="/assets/css/screen.css?v=130a2d6c44"> 
  <link rel="stylesheet" type="text/css" href="/assets/css/hl-styles/atom_one_dark.css?v=130a2d6c44"> 
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css"> 
  <script>
/*====================================================
  THEME SETTINGS & GLOBAL VARIABLES
====================================================*/
//  1. Disqus comment settings
var disqus_shortname = 'stackabuse'; // required: replace example with your forum shortname

//	2. Sidebar Position
var sidebar_left = false; // Set true or flase for positioning sidebar on left

//  3. Recent Post count
var recent_post_count = 3;

//	4. Google+ badge settings
var badge_type = 'page'; // person / page / community ----- three type of google badge
var google_plus_url = 'https://plus.google.com/111813546240107028721';

//	5. Facebook Page Setting
var facebook_page_url = 'https://www.facebook.com/stackabuse';

//	6. Twitter Setting
var twitter_url = 'https://twitter.com/ScottWRobinson';
var twitter_widget_id = '722928793669607425';
var number_of_tweet = 3;

//	7. Mailchimp signup form Setting
var mailchimp_form_url = '//stackabuse.us10.list-manage.com/subscribe/post?u=90b216fdbe02b25619ec94fc3&amp;id=bc2bb312cd';
var success_message = "Please check your inbox and confirm your email address. Thank you!";

//	8. Flickr Setting
//var flickr_id = '52617155@N08';
var flickr_id = '';
</script> 
  <link rel="canonical" href="http://stackabuse.com/read-files-with-node-js/"> 
  <meta name="referrer" content="origin-when-cross-origin"> 
  <meta property="og:site_name" content="Stack Abuse"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Read Files with Node.js"> 
  <meta property="og:description" content="One of the most common things you'll want to do with just about any programming language is open and read a file. With most languages, this is pretty simple, but for JavaScript veterans it might seem a bit weird. For so many years JavaScript was only available in the browser,"> 
  <meta property="og:url" content="http://stackabuse.com/read-files-with-node-js/"> 
  <meta property="article:published_time" content="2016-04-27T19:14:55.994Z"> 
  <meta property="article:modified_time" content="2016-04-27T19:14:55.991Z"> 
  <meta property="article:tag" content="node"> 
  <meta property="article:tag" content="javascript"> 
  <meta property="article:tag" content="how to"> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:title" content="Read Files with Node.js"> 
  <meta name="twitter:description" content="One of the most common things you'll want to do with just about any programming language is open and read a file. With most languages, this is pretty simple, but for JavaScript veterans it might seem a bit weird. For so many years JavaScript was only available in the browser,"> 
  <meta name="twitter:url" content="http://stackabuse.com/read-files-with-node-js/"> 
  <meta name="twitter:label1" content="Written by"> 
  <meta name="twitter:data1" content="Scott Robinson"> 
  <meta name="twitter:label2" content="Filed under"> 
  <meta name="twitter:data2" content="node, javascript, how to"> 
  <meta name="twitter:site" content="@ScottWRobinson"> 
  <meta name="twitter:creator" content="@ScottWRobinson"> 
  <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Stack Abuse",
        "logo": "http://stackabuse.com/ghost/img/ghosticon.jpg"
    },
    "author": {
        "@type": "Person",
        "name": "Scott Robinson",
        "image": "http://stackabuse.com/content/images/2016/09/new-profile.jpg",
        "url": "http://stackabuse.com/author/scott/",
        "sameAs": [
            "https://github.com/ScottWRobinson",
            "https://twitter.com/ScottWRobinson"
        ]
    },
    "headline": "Read Files with Node.js",
    "url": "http://stackabuse.com/read-files-with-node-js/",
    "datePublished": "2016-04-27T19:14:55.994Z",
    "dateModified": "2016-04-27T19:14:55.991Z",
    "keywords": "node, javascript, how to",
    "description": "One of the most common things you&#x27;ll want to do with just about any programming language is open and read a file. With most languages, this is pretty simple, but for JavaScript veterans it might seem a bit weird. For so many years JavaScript was only available in the browser,"
}
    </script> 
  <meta name="generator" content="Ghost 0.9"> 
  <link rel="alternate" type="application/rss+xml" title="Stack Abuse" href="http://stackabuse.com/rss/"> 
  <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script> 
 </head> 
 <body class="post-template tag-node tag-javascript tag-how-to"> 
  <nav class="navbar navbar-default navbar-fixed-top"> 
   <div class="container"> 
    <div class="navbar-header"> 
     <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar"> <span class="sr-only">Toggle navigation</span> <i class="fa fa-bars"></i> </button> 
     <a class="navbar-brand" href="/">Stack <span style="color:#f16334;">Abuse</span></a> 
    </div> 
    <div id="navbar" class="navbar-collapse collapse"> 
     <ul class="nav navbar-nav"> 
      <li class="nav-home" role="presentation"><a href="http://stackabuse.com/">Home</a></li> 
      <li class="nav-nodejs" role="presentation"><a href="http://stackabuse.com/tag/node/">Node.js</a></li> 
      <li class="nav-python" role="presentation"><a href="http://stackabuse.com/tag/python">Python</a></li> 
      <li class="nav-tools" role="presentation"><a href="http://stackabuse.com/tools/">Tools</a></li> 
      <li class="nav-write-for-us" role="presentation"><a href="http://stackabuse.com/write-for-us/">Write for Us</a></li> 
      <li class="nav-learn-nodejs" role="presentation"><a href="http://stackabuse.com/learn-node-js-a-beginners-guide/">Learn Node.js</a></li> 
     </ul> 
     <!--<ul class="nav navbar-nav pull-right">
        <li role="presentation">
          <a class="btn btn-success nav-btn" href="http://jobs.stackabuse.com">Find a Job</a>
        </li>
        <li role="presentation">
          <a class="btn btn-danger nav-btn" href="http://jobs.stackabuse.com/post">Post a Job</a>
        </li>
      </ul>--> 
    </div>
    <!--/.nav-collapse --> 
   </div> 
  </nav> 
  <!-- BuySellAds Ad Code --> 
  <script type="text/javascript">
(function(){
  var bsa = document.createElement('script');
     bsa.type = 'text/javascript';
     bsa.async = true;
     bsa.src = '//s3.buysellads.com/ac/bsa.js';
  (document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(bsa);
})();
</script> 
  <!-- End BuySellAds Ad Code --> 
  <!-- start site's main content area --> 
  <section class="content-wrap"> 
   <div class="container"> 
    <div class="row"> 
     <!-- start main post area --> 
     <div class="col-md-8 main-content"> 
      <!-- start post --> 
      <article id="74" class="post tag-node tag-javascript tag-how-to"> 
       <div class="post-head"> 
        <h2 class="post-title">Read Files with Node.js</h2> 
        <div class="post-meta"> 
         <span class="author"> By <a rel="nofollow" target="_blank" href="https://twitter.com/ScottWRobinson"> <i class="fa fa-twitter" style="color:#55acee;"></i> Scott Robinson </a> </span> • 
         <span class="date">April 27, 2016</span> • 
         <span class="comment-count"><a href="/read-files-with-node-js/#disqus_thread">0 Comments</a></span> 
        </div> 
       </div> 
       <!-- BuySellAds Zone Code --> 
       <div id="bsap_1307307" class="bsarocks bsap_023d86b911cfb66415b9b7bd3a3267b4"></div> 
       <!-- End BuySellAds Zone Code --> 
       <div class="post-content"> 
        <p>One of the most common things you'll want to do with just about any programming language is open and read a file. With most languages, this is pretty simple, but for JavaScript veterans it might seem a bit weird. For so many years JavaScript was only available in the browser, so front-end developers may only be familiar with the <a rel="nofollow" target="_blank" href="http://www.htmlgoodies.com/beyond/javascript/read-text-files-using-the-javascript-filereader.html#fbid=PfBQ7GOxcEB">FileReader API</a> or similar.</p> 
        <p>Node.js, as you probably know, is much different than your typical JavaScript in the browser. It has its own set of libraries meant for handling OS and filesystem tasks, like opening and reading files. In this article I'll show you how to use Node.js to read files. Specifically, we'll be using the <a rel="nofollow" target="_blank" href="https://nodejs.org/api/fs.html">fs</a> module to do just that.</p> 
        <p>There are two ways you can open and read a file using the <code>fs</code> module:</p> 
        <ul> 
         <li>Load all of the contents at once (buffering)</li> 
         <li>Incrementally load contents (streaming)</li> 
        </ul> 
        <p>Each of these methods will be explained in the next two sections.</p> 
        <h3 id="bufferingcontentswithfsreadfile">Buffering Contents with fs.readFile</h3> 
        <p>This is the most common way to read a file with Node.js, especially for beginners, due to its simplicity and convenience. Although, as you'll come to realize in the next section, it isn't necessarily the best or most efficient.</p> 
        <p>Here is a quick example using <a rel="nofollow" target="_blank" href="https://nodejs.org/api/fs.html#fs_fs_readfile_file_options_callback">fs.readFile</a>:</p> 
        <pre><code class="language-javascript">var fs = require('fs');

fs.readFile('my-file.txt', 'utf8', function(err, data) {  
    if (err) throw err;
    console.log(data);
});
</code></pre> 
        <p>The <code>data</code> argument to the callback contains the full contents of the file represented as a string in <code>utf8</code> format. If you omit the <code>utf8</code> argument completely, then the method will just return the raw contents in a <a rel="nofollow" target="_blank" href="https://nodejs.org/api/buffer.html">Buffer</a> object. Removing the <code>utf8</code> argument in the above code (and assuming <em>my-file.txt</em> contained the string "Hey there!"), we'd get this output:</p> 
        <pre><code class="language-bash">$ node read-file.js
&lt;Buffer 48 65 79 20 74 68 65 72 65 21&gt;  
</code></pre> 
        <p>You may have noticed that <code>fs.readFile</code> returns the contents in a callback, which means this method runs asynchronously. This should be used whenever possible to avoid blocking the main execution thread, but sometimes you have to do things synchronously, in which case Node provides you with a <a rel="nofollow" target="_blank" href="https://nodejs.org/api/fs.html#fs_fs_readfilesync_file_options">readFileSync</a> method.</p> 
        <p>This method works exactly the same way, except that the file contents are returned directly from the function call and the execution thread is blocked while it loads the file. I typically use this in start-up sections of my programs (like when we're loading config files) or in command-line apps where blocking the main thread isn't a big deal.</p> 
        <p>Here is how to load a file synchronously with Node:</p> 
        <pre><code class="language-javascript">var fs = require('fs');

try {  
    var data = fs.readFileSync('my-file.txt', 'utf8');
    console.log(data);    
} catch(e) {
    console.log('Error:', e.stack);
}
</code></pre> 
        <p>Notice that with the blocking (synchronous) call we have to use <code>try...catch</code> to handle any errors, unlike the non-blocking (asynchronous) version where errors were just passed to us as arguments.</p> 
        <p>Other than the way these methods return data and handle errors, they work very much the same.</p> 
        <h3 id="streamingcontentswithfscreatereadstream">Streaming Contents with fs.createReadStream</h3> 
        <p>The second way to open and read a file is to open it as a <a rel="nofollow" target="_blank" href="https://nodejs.org/api/stream.html">Stream</a> using the <a rel="nofollow" target="_blank" href="https://nodejs.org/api/fs.html#fs_fs_createreadstream_path_options">fs.createReadStream</a> method. All Node streams are instances of the <a rel="nofollow" target="_blank" href="https://nodejs.org/api/events.html#events_class_eventemitter">EventEmitter</a> object, allowing you to subscribe to important events.</p> 
        <p>A readable stream object can be useful for a lot of reasons, a few of which include:</p> 
        <ul> 
         <li><em>Smaller memory footprint</em>. Since the target file's data is loaded in chunks, not as much memory is required to store the data in a buffer.</li> 
         <li><em>Faster response time</em>. For time-sensitive applications, the time between the request and response is critical. Streams cut down the response time (especially for large files) since they don't need to wait to load the entire file before returning data.</li> 
         <li><em>Piping data</em>. The stream abstraction allows you to use a common interface between data producers and consumers to pass that data around via pipes. This is very similar to the <a rel="nofollow" target="_blank" href="https://en.wikipedia.org/wiki/Pipeline_%28Unix%29">Unix pipe</a> concept.</li> 
        </ul> 
        <p>Although it really isn't very hard to use streams, they can be a bit intimidating and aren't quite as intuitive as the <code>fs.readFile</code> method. Here is the 'hello world' of file streaming:</p> 
        <pre><code class="language-javascript">var fs = require('fs');

var data = '';

var readStream = fs.createReadStream('my-file.txt', 'utf8');

readStream.on('data', function(chunk) {  
    data += chunk;
}).on('end', function() {
    console.log(data);
});
</code></pre> 
        <p>This code does exactly what the code in the first section does, except that we have to "collect" chunks of data before printing it out to the console. If your file is fairly small then you'll probably only ever receive a single chunk, but for larger files, like audio and video, you'll have to collect multiple chunks. This is the case where you'll start to notice the real value of streaming files.</p> 
        <p>Note that the example I showed above mostly defeats the purpose of using a stream since we end up collecting the data in a buffer (variable) anyway, but at least it gives you an idea as to how they work. A better example showing the strengths of file streams can be seen here, in an Express route that handles a file request:</p> 
        <pre><code class="language-javascript">var fs = require('fs');  
var path = require('path');  
var http = require('http');

var staticBasePath = './static';

var staticServe = function(req, res) {  
    var fileLoc = path.resolve(staticBasePath);
    fileLoc = path.join(fileLoc, req.url);

        var stream = fs.createReadStream(fileLoc);

        stream.on('error', function(error) {
            res.writeHead(404, 'Not Found');
            res.end();
        });

        stream.pipe(res);
};

var httpServer = http.createServer(staticServe);  
httpServer.listen(8080);  
</code></pre> 
        <p>All we do here is open the file with <code>fs.createReadStream</code> and pipe it to the response object, <code>res</code>. We can even subscribe to <code>error</code> events and handle those as they happen. It's a much better method to handling files once you learn how to properly use it. For a more complete example and explanation of the above code, check out this article on <a href="/node-http-servers-for-static-file-serving/">creating static file servers with Node</a>.</p> 
        <h3 id="conclusion">Conclusion</h3> 
        <p>From this article you should have learned the basics of reading files, as well as some advanced loading methods using Stream objects. Knowing when to use them is the key, and should be carefully considered for memory-constrained or time-constrained applications.</p> 
        <p><em>What's your preferred method of handling files? How have you used Streams in the past? Let us know in the comments!</em></p> 
       </div> 
       <footer class="post-footer clearfix"> 
        <div class="pull-left tag-list"> 
         <i class="fa fa-folder-open-o"></i> 
         <a href="/tag/node/">node</a>,
         <a href="/tag/javascript/">javascript</a>,
         <a href="/tag/how-to/">how to</a> 
        </div> 
        <div class="pull-right share"> 
         <div> 
          <ul class="share-icons"> 
           <!-- twitter --> 
           <li> <a href="https://twitter.com/share?text=Read%20Files%20with%20Node.js&amp;url=http://stackabuse.com/read-files-with-node-js/" onclick="window.open(this.href, 'twitter-share', 'width=550,height=235');return false;"><i class="fa fa-twitter" style="color:#55acee;"></i></a> </li> 
           <!-- facebook --> 
           <li> <a href="https://www.facebook.com/sharer/sharer.php?u=http://stackabuse.com/read-files-with-node-js/" onclick="window.open(this.href, 'facebook-share','width=580,height=296');return false;"><i class="fa fa-facebook" style="color:#3b5998;"></i></a> </li> 
           <!-- google plus --> 
           <li> <a href="https://plus.google.com/share?url=http://stackabuse.com/read-files-with-node-js/" onclick="window.open(this.href, 'google-plus-share', 'width=490,height=530');return false;"><i class="fa fa-google-plus" style="color:#dc4e41;"></i></a> </li> 
           <!-- linkedin --> 
           <li> <a href="https://www.linkedin.com/shareArticle?mini=true%26url=http://stackabuse.com/read-files-with-node-js/%26source=http://stackabuse.com" onclick="window.open(this.href, 'linkedin-share', 'width=490,height=530');return false;"><i class="fa fa-linkedin" style="color:#0077b5;"></i></a> </li> 
          </ul> 
         </div> 
        </div> 
       </footer> 
       <!-- start about the author --> 
       <div class="about-author clearfix"> 
        <a href="/author/scott/"><img src="/content/images/2016/09/new-profile.jpg" alt="Author image" class="avatar pull-left"></a> 
        <div class="details"> 
         <div class="author">
           About 
          <a href="/author/scott/">Scott Robinson</a> 
         </div> 
         <div class="meta-info" style="font-style: normal;"> 
          <span> <i class="fa fa-twitter" style="color:#55acee;"></i> <a rel="nofollow" href="https://twitter.com/ScottWRobinson" target="_BLANK">Twitter</a> </span> 
          <span> <i class="fa fa-github" style="color:#333333;"></i> <a rel="nofollow" href="https://github.com/ScottWRobinson" target="_BLANK">Github</a> </span> 
         </div> 
        </div> 
       </div> 
       <!-- end about the author --> 
      </article> 
      <!-- start newsletter section --> 
      <div class="section"> 
       <div class="newsletter text-center"> 
        <h4 class="title">Subscribe to our Newsletter</h4> 
        <div class="content"> 
         <p>Occasional articles in your inbox. Unsubscribe at any time.</p> 
         <div id="mc_embed_signup"> 
          <form action="#" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="form-inline validate" novalidate target="_blank"> 
           <div class="row"> 
            <div class="col-md-7 col-md-offset-1 col-xs-12"> 
             <input type="email" value="" name="EMAIL" class="form-control input-lg required email" id="mce-EMAIL" placeholder="Enter your email..." style="width:100%;"> 
            </div> 
            <div class="col-md-4 col-xs-12 text-left"> 
             <input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="btn btn-default btn-lg btn-subscribe"> 
            </div> 
           </div> 
           <div style="position: absolute; left: -5000px;"> 
            <input type="text" name="b_90b216fdbe02b25619ec94fc3_bc2bb312cd" tabindex="-1" value=""> 
           </div> 
          </form> 
         </div> 
         <div id="message"></div> 
        </div> 
       </div> 
      </div> 
      <!-- end newsletter section --> 
      <div class="comment-wrap"> 
       <!-- start disqus comment --> 
       <div class="disqus-container"> 
        <div id="disqus_thread"></div> 
        <script type="text/javascript">
	        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
	        var disqus_shortname = disqus_shortname; // required: replace example with your forum shortname

	        /* * * DON'T EDIT BELOW THIS LINE * * */
	        (function() {
	            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
	            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
	            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
	        })();
	    </script> 
        <noscript>
         Please enable JavaScript to view the 
         <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
        </noscript> 
       </div> 
       <!-- end disqus comment --> 
      </div> 
      <!-- start prev next wrap --> 
      <div class="prev-next-wrap clearfix"> 
       <a class="btn btn-default" href="/node-js-async-await-in-es7/"><i class="fa fa-angle-left fa-fw"></i> Previous Post : Node.js Async Await in ES7</a> &nbsp; 
       <a class="btn btn-default" href="/how-to-send-emails-with-gmail-using-python/">Next Post : How to Send Emails with Gmail using Python <i class="fa fa-angle-right fa-fw"></i></a> 
      </div> 
      <!-- end post --> 
     </div> 
     <!-- end main post area --> 
     <!-- start sidebar --> 
     <div class="col-md-4 sidebar"> 
      <!-- start widget --> 
      <div class="widget"> 
       <h4 class="title">Ad</h4> 
       <div class="content ad" style="height:250px;"> 
        <!-- BuySellAds Zone Code --> 
        <div id="bsap_1307264" class="bsarocks bsap_023d86b911cfb66415b9b7bd3a3267b4"></div> 
        <!-- End BuySellAds Zone Code --> 
       </div> 
      </div> 
      <!-- end widget --> 
      <!-- start widget --> 
      <div class="widget"> 
       <h4 class="title">Follow</h4> 
       <div class="content"> 
        <ul class="social"> 
         <!-- start social links --> 
         <!-- replace the # with your own profile link address --> 
         <li><a href="https://twitter.com/ScottWRobinson"><i class="fa fa-twitter"></i></a></li> 
         <li><a href="https://www.facebook.com/stackabuse"><i class="fa fa-facebook"></i></a></li> 
         <!--<li><a href="#"><i class="fa fa-google-plus"></i></a></li>
			<li><a href="#"><i class="fa fa-linkedin"></i></a></li>
			<li><a href="#"><i class="fa fa-skype"></i></a></li>
			<li><a href="#"><i class="fa fa-pinterest"></i></a></li>
			<li><a href="#"><i class="fa fa-youtube"></i></a></li>
			<li><a href="#"><i class="fa fa-vimeo-square"></i></a></li>
			<li><a href="#"><i class="fa fa-dribbble"></i></a></li>
			<li><a href="#"><i class="fa fa-flickr"></i></a></li>
			<li><a href="#"><i class="fa fa-tumblr"></i></a></li>--> 
         <li><a href="https://github.com/scottwrobinson"><i class="fa fa-github"></i></a></li> 
         <!--<li><a href="#"><i class="fa fa-instagram"></i></a></li>
			<li><a href="#"><i class="fa fa-stack-overflow"></i></a></li>
			<li><a href="#"><i class="fa fa-stack-exchange"></i></a></li>
			<li><a href="#"><i class="fa fa-xing"></i></a></li>
			<li><a href="#"><i class="fa fa-envelope"></i></a></li>--> 
         <li><a href="http://stackabuse.com/rss/"><i class="fa fa-rss"></i></a></li> 
         <!-- end social links --> 
        </ul> 
       </div> 
      </div> 
      <!-- end widget --> 
      <!-- start widget --> 
      <div class="widget"> 
       <h4 class="title">Twitter</h4> 
       <div class="content twitter"></div> 
      </div> 
      <!-- end widget --> 
      <!-- start widget --> 
      <div class="widget"> 
       <h4 class="title">Recent Posts</h4> 
       <div class="content recent-post"></div> 
      </div> 
      <!-- end widget --> 
      <!-- start tag cloud widget --> 
      <div class="widget"> 
       <h4 class="title">Newsletter</h4> 
       <div class="content newsletter"> 
        <p>Subscribe to our newsletter</p> 
        <div id="mc_embed_signup"> 
         <form action="#" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" novalidate target="_blank"> 
          <div class="input-group"> 
           <input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL" placeholder="Enter your email..."> 
          </div> 
          <div style="position: absolute; left: -5000px;"> 
           <input type="text" name="b_90b216fdbe02b25619ec94fc3_bc2bb312cd" tabindex="-1" value=""> 
          </div> 
          <div class="input-group"> 
           <input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="btn btn-default"> 
          </div> 
         </form> 
        </div> 
        <div id="message"></div> 
       </div> 
      </div> 
      <!-- end tag cloud widget --> 
      <!-- start widget --> 
      <div class="widget"> 
       <h4 class="title">Ad</h4> 
       <div class="content ad"> 
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> 
        <!-- sa-responsive-sidebar-bottom --> 
        <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-5704119028142803" data-ad-slot="4739863398" data-ad-format="auto"></ins> 
        <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
        </script> 
       </div> 
      </div> 
      <!-- end widget -->
     </div> 
     <!-- end sidebar --> 
    </div> 
   </div> 
  </section> 
  <!-- end site's main content area --> 
  <!-- start main-footer --> 
  <footer class="main-footer"> 
   <div class="container"> 
    <div class="row"> 
     <!-- start first footer widget area --> 
     <div class="col-sm-4"> 
      <!-- start widget --> 
      <div class="widget"> 
       <h4 class="title">Recent Posts</h4> 
       <div class="content recent-post"></div> 
      </div> 
      <!-- end widget --> 
     </div> 
     <!-- end first footer widget area --> 
     <!-- start second footer widget area --> 
     <div class="col-sm-4"> 
      <!-- start tag cloud widget --> 
      <div class="widget"> 
       <h4 class="title">Tags</h4> 
       <div class="content tag-cloud"></div> 
      </div> 
      <!-- end tag cloud widget --> 
     </div> 
     <!-- end second footer widget area --> 
     <!-- start third footer widget area --> 
     <div class="col-sm-4"> 
      <!-- start widget --> 
      <div class="widget"> 
       <h4 class="title">Follow</h4> 
       <div class="content"> 
        <ul class="social"> 
         <!-- start social links --> 
         <!-- replace the # with your own profile link address --> 
         <li><a href="https://twitter.com/ScottWRobinson"><i class="fa fa-twitter"></i></a></li> 
         <li><a href="https://www.facebook.com/stackabuse"><i class="fa fa-facebook"></i></a></li> 
         <!--<li><a href="#"><i class="fa fa-google-plus"></i></a></li>
			<li><a href="#"><i class="fa fa-linkedin"></i></a></li>
			<li><a href="#"><i class="fa fa-skype"></i></a></li>
			<li><a href="#"><i class="fa fa-pinterest"></i></a></li>
			<li><a href="#"><i class="fa fa-youtube"></i></a></li>
			<li><a href="#"><i class="fa fa-vimeo-square"></i></a></li>
			<li><a href="#"><i class="fa fa-dribbble"></i></a></li>
			<li><a href="#"><i class="fa fa-flickr"></i></a></li>
			<li><a href="#"><i class="fa fa-tumblr"></i></a></li>--> 
         <li><a href="https://github.com/scottwrobinson"><i class="fa fa-github"></i></a></li> 
         <!--<li><a href="#"><i class="fa fa-instagram"></i></a></li>
			<li><a href="#"><i class="fa fa-stack-overflow"></i></a></li>
			<li><a href="#"><i class="fa fa-stack-exchange"></i></a></li>
			<li><a href="#"><i class="fa fa-xing"></i></a></li>
			<li><a href="#"><i class="fa fa-envelope"></i></a></li>--> 
         <li><a href="http://stackabuse.com/rss/"><i class="fa fa-rss"></i></a></li> 
         <!-- end social links --> 
        </ul> 
       </div> 
      </div> 
      <!-- end widget --> 
     </div> 
     <!-- end third footer widget area --> 
    </div> 
   </div> 
  </footer> 
  <!-- end main-footer --> 
  <!-- start copyright section --> 
  <div class="copyright"> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-sm-12">
       Copyright © 2017, 
      <a href="http://stackabuse.com">Stack Abuse</a>. All Right Reserved 
     </div> 
    </div> 
   </div> 
  </div> 
  <!-- end copyright section --> 
  <div class="footer-links"> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-sm-12"> 
      <a href="/disclosure">Disclosure</a> • 
      <a href="/privacy-policy">Privacy Policy</a> • 
      <a href="/terms-of-service">Terms of Service</a> 
     </div> 
    </div> 
   </div> 
  </div> 
  <a href="#" id="back-to-top"><i class="fa fa-angle-up"></i></a> 
  <!--
<script src="//my.hellobar.com/4dd9990be00532b0fc7961824b7d7a0930e9e2b7.js" type="text/javascript" charset="utf-8" async="async"></script>
--> 
  <!-- scripts --> 
  <script type="text/javascript">
    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
    </script> 
  <script src="/assets/js/jquery.fitvids.js?v=130a2d6c44"></script> 
  <script src="/assets/js/bootstrap.min.js?v=130a2d6c44"></script> 
  <script src="/assets/js/jflickrfeed.min.js?v=130a2d6c44"></script> 
  <script src="/assets/js/highlight.pack.js?v=130a2d6c44"></script> 
  <!-- <script src="/assets/js/indeed.js?v=130a2d6c44"></script> --> 
  <script src="/assets/js/main.js?v=130a2d6c44"></script> 
  <!-- <script src="//gdc.indeed.com/ads/apiresults.js" type="text/javascript"></script> --> 
  <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script> 
  <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script> 
  <!-- Add your analytic code below --> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-43140675-1', 'auto');
  ga('require', 'eventTracker');
  ga('send', 'pageview');

</script> 
  <script async src="//cdnjs.cloudflare.com/ajax/libs/autotrack/1.0.1/autotrack.js"></script> 
 </body>
</html>