<!doctype html>
<html lang="en">
 <head> 
  <title>Captionator.js</title> 
  <meta charset="utf-8"> 
  <meta name="description" content="A JavaScript polyfill to let you caption your HTML5 video today!"> 
  <link rel="stylesheet" type="text/css" media="all" href="css/typography.css"> 
  <link rel="stylesheet" type="text/css" media="screen" href="css/screen.css"> 
  <!-- HTML5 shim --> 
  <script type="text/javascript" src="/js/modernizr.js"></script> 
 </head> 
 <body> 
  <header> 
   <h1>Captionator.js</h1> 
   <h2><span>No more excuses.</span> Caption your online video today!</h2> 
  </header> 
  <nav> 
   <ul> 
    <li><a href="https://github.com/cgiffard/Captionator/wiki">Documentation</a></li> 
    <li><a href="/demo.html">Demo</a></li> 
    <li><a href="https://github.com/cgiffard/Captionator">Github</a></li> 
    <li><a href="https://github.com/cgiffard/Captionator/tree/captionplanet" title="Caption Planet (Next Captionator Release)">CaptionPlanet</a></li> 
    <li><a href="mailto:captionatorjs+christopher.giffard@cgiffard.com">Contact</a></li> 
   </ul> 
  </nav> 
  <section id="download"> 
   <div> 
    <h3>Download Captionator.js</h3> 
    <a class="button stable" href="https://raw.github.com/cgiffard/Captionator/master/js/captionator-min.js">0.5 Stable <span>minified &amp; production ready</span></a> 
    <a class="button" href="https://raw.github.com/cgiffard/Captionator/master/js/captionator.js">0.5 Stable <span>Unminified</span></a> 
    <a class="button dev" href="https://raw.github.com/cgiffard/Captionator/captionplanet/js/captionator.js">0.6 CaptionPlanet <span>development build</span></a> 
   </div> 
  </section> 
  <section id="body"> 
   <article class="column"> 
    <h3>Video Captioning in HTML5</h3> 
    <p> At first glance, video captioning might not seem like a huge deal. Maybe it might appeal to you if you need to meet accessibility requirements in your workplace, or you're just doing it to be nice to people with hearing difficulties. </p> 
    <p> You're pretty far from the mark though. Yes, accessibility is an important driver for video captioning on the web. But it's about much more than <span title="Insert your own 'air-quotes' here">‘deaf people’</span> (<a href="http://www.abc.net.au/mediawatch/transcripts/s3157345.htm" title="ABC MediaWatch expose on TV Captioning">and you should be providing <em>quality</em> captioning</a> for them anyway!) </p> 
    <p> <em>In addition</em> to important accessibility benefits, captioning your video can allow automatically generated transcripts, text search-ability within videos (imagine what will be possible once Google supports crawling <abbr title="Web Video Text Tracks">WebVTT!</abbr>), chapter markers and powerful metadata capability, and much more! You could provide a track of time-specific comments on the video (the same way <a href="http://www.soundcloud.com">SoundCloud</a> allows commenting on specific parts of audio) or even a live twitter feed on your video (similar in style to the <a href="http://www.abc.net.au/tv/qanda/"><abbr title="Australian Broadcasting Corporation">ABC</abbr>'S Q&amp;A program</a>.) </p> 
    <p> <em>“Alright!”</em>, you say. “I'm <em>convinced.</em> How does HTML5 allow me to caption my video?” </p> 
    <p> For a while, there wasn't an easy way to do it. Guys like Bruce Lawson were coming up with <a href="http://dev.opera.com/articles/view/accessible-html5-video-with-javascripted-captions/">creative ways</a> (if a little hacky) to implement support, in lieu of a proper standard. </p> 
    <p> Now, however, there's a really nice way to provide support - the HTML5 <code>&lt;track&gt;</code> element and its associated <a href="http://www.w3.org/TR/2016/REC-html51-20161101/semantics-embedded-content.html#timed-text-tracks">JavaScript <abbr title="Application Programming Interface"> API</abbr></a>. <strong>There's a slight catch though.</strong> No currently shipping browser supports either of these features/standards. They will soon - <a href="http://www.webkit.org/">Webkit</a> has support in development, and <a href="http://www.firefox.com">Firefox</a> can now parse the <code>&lt;track&gt;</code> element (but can't do anything with it yet.) </p> 
    <p> But you want to caption your HTML5 video now. And for that, you need Captionator.js. </p> 
   </article> 
   <article class="column"> 
    <h3>Captionator.js</h3> 
    <p> Captionator.js is a JavaScript <a href="http://remysharp.com/2010/10/08/what-is-a-polyfill/" title="What's a polyfill?">polyfill</a> designed to provide support for the <code>&lt;track&gt;</code> element and TextTrack javascript API. It currently supports subtitles in <abbr title="VOBSub">SUB</abbr>, <abbr title="SubRip SRT">SRT</abbr>, Youtube's <abbr title="Youtube SBV">SBV</abbr>, <abbr title="Web Video Text Tracks">WebVTT</abbr>, and <abbr title="Web Video Text Tracks">WebVTT</abbr> with Google's proposed timestamp syntax. It will soon support <abbr title="LRC Lyrics">LRC</abbr>, <abbr title="Timed Text Markup Language">DFXP/TTML</abbr> and the <abbr title="Web Video Text Tracks">WebVTT</abbr> v2 proposed features. </p> 
    <p> Like most polyfills, it's intended to be a drop-in addition to your existing HTML5 video (and/or custom player) and provides a JavaScript API in line with the <abbr "web hypertext application technology working group">WHATWG</abbr>'s specification. This makes it easy to write your own interface for allowing the user to select assistive or media enhancement tracks, and when browsers land support for the feature, it'll move out of the way and let the browser take over (and you won't have to change a line of code!) </p> 
    <p> Captionator.js will automatically detect and enable <code>&lt;track&gt;</code> elements specified in markup - it's a totally painless solution! See the <a href="https://github.com/cgiffard/Captionator/wiki">Captionator.js documentation</a> to get started! </p> 
    <h4>Captionator.js Out &amp; About</h4> 
    <ul> 
     <li> Captionator was recently recommended and demonstrated by Jer Noble of Apple at WWDC 2011! Check out <a href="https://developer.apple.com/videos/wwdc/2011/">Session 502: Advanced HTML5 Media Controllers</a>. (Unfortunately, you'll need to sign up for a free <a href="http://developer.apple.com/">Apple Developer account</a> - it's a great video though!.) </li> 
     <li> Silvia Pfeiffer <a href="http://www.youtube.com/watch?v=RoYvr-KXvLs">presented on WebVTT to an audience at GoogleIO</a> in March this year, and used Captionator.js for the demo. This is a great talk for getting your head around WebVTT as a format. </li> 
    </ul> 
   </article> 
   <article class="column captionplanet"> 
    <h3><abbr title="Caption Planet">CaptionPlanet</abbr></h3> 
    <p class="notice"><em>CaptionCrunch, the old development release, is now stable!</em></p> 
    <p> <abbr title="Caption Planet">CaptionPlanet</abbr> is the next 
     <strike>
      stage
     </strike> frontier in the Captionator.js roadmap. At this stage, intended to be the 0.6 release milestone, the goal for <abbr title="Caption Planet">CaptionPlanet</abbr> is performance, compatibility, better testing, and broader format support. </p> 
    <p> Some things which slipped from the <abbr title="Caption Crunch">0.5 CaptionCrunch</abbr> release (in the interests of getting the new Captionator.js WebVTT renderer out the door) will be delivered in <abbr title="Caption Planet">CaptionPlanet</abbr> instead, namely: </p> 
    <ul> 
     <li>Support for WebVTT inline styles (Captionator currently parses these, but does nothing with them)</li> 
     <li>Enabling support for cue styles in page stylesheets</li> 
     <li>LRC (and possibly SSA/ASS, depending on whether the current renderer will support the formats) subtitle support</li> 
    </ul> 
    <p> This release is slightly less ambitious than <abbr title="Caption Crunch">0.5 CaptionCrunch</abbr>, but every bit as important. </p> 
    <p> As Captionator.js is an <a href="https://github.com/cgiffard/Captionator">open source project</a>, you can see all these new features come to fruition in real time by following progress of the <a href="https://github.com/cgiffard/Captionator/tree/captionplanet/"><abbr title="Caption Planet">CaptionPlanet </abbr> branch</a> on github! Just be aware that things might not always be pretty, or even work. </p> 
   </article> 
  </section> 
  <footer> 
   <p> Captionator is a product of <a href="http://twitter.com/cgiffard" title="Christopher Giffard">@cgiffard</a> (with a couple of generous code contributions from <a href="http://twitter.com/silviapfeiffer" title="Silvia Pfeiffer">@silviapfeiffer</a>.) </p> 
   <!-- GITHUB RIBBON --> 
   <a href="http://github.com/cgiffard/Captionator"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://d3nwyuy0nl342s.cloudfront.net/img/7afbc8b248c68eb468279e8c17986ad46549fb71/687474703a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67" alt="Fork me on GitHub"></a> 
  </footer> 
  <script type="text/javascript">
			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-438396-7']);
			_gaq.push(['_setDomainName', '.captionatorjs.com']);
			_gaq.push(['_trackPageview']);

			(function() {
				var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
				ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
				var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
			})();
		</script>  
 </body>
</html>