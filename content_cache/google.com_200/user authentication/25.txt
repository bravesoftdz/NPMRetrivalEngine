<!doctype html>
<html lang="en">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link rel="icon" href="//www.ibm.com/favicon.ico"> 
  <link rel="canonical" href="http://www.ibm.com/developerworks/library/se-use-ldap-authentication-authorization-node.js-bluemix-application/index.html"> 
  <meta name="geo.country" content="ZZ"> 
  <meta name="dcterms.rights" content="© Copyright&nbsp;IBM Corporation&nbsp;2015"> 
  <meta name="dcterms.date" content="2015-12-09"> 
  <meta name="description" content="In this tutorial, I show the user how to use his existing LDAP infrastructure to provide authentication and authorization decisions to a Node.js Bluemix application."> 
  <meta name="keywords" content="ldap, MEAN application stack, node.js application, authentication, security, tttsecca"> 
  <meta name="robots" content="index,follow"> 
  <title>Use LDAP for authentication and authorization in your Node.js Bluemix application</title> 
  <script> 
    digitalData = {
        "page":{
            "category":{
                "primaryCategory":"SOFDCSECZZ"
            },
            "pageInfo":{
                "effectiveDate":"2015-12-09",
                "language":"en",
                "publishDate":"2015-12-09",
                "publisher":"IBM Corporation",
                "version":"v18",
                "ibm":{ 
                    "contentDelivery":"IBM developerWorks template",
                    "contentProducer":"IBM developerWorks",
                    "country":"ZZ",
                    "owner":"developerWorks Content/Raleigh/IBM",
                    "subject":"SWI00",
                    "type":"CT316",
                    "topic":"Authentication",
                    "topicId":"95",
                    "contentArea":"security",
                    "contentAreaId":"16",
                    "contentType":"article",
                    "contentId":"1023672",
                },
                "keywords":"ldap, MEAN application stack, node.js application, authentication, security, tttsecca",
                "description":"In this tutorial, I show the user how to use his existing LDAP infrastructure to provide authentication and authorization decisions to a Node.js Bluemix application."
            }
        }
    };
    window._analytics = {
        "segment_key":'HU3dbkAG5wE0F1IkRf9S1RexlAqo3jby'
    };
</script> 
  <meta content="player" name="twitter:card"> 
  <meta name="twitter:site" content="@developerworks"> 
  <meta property="og:title" content="Use LDAP for authentication and authorization in your Node.js Bluemix application"> 
  <meta property="og:description" content="Ori Pomerantz shows you how to use an LDAP infrastructure to provide decisions to a Node.js Bluemix application."> 
  <meta property="og:image" content="http://www.ibm.com/developerworks/library/se-use-ldap-authentication-authorization-node.js-bluemix-application/csp0524-video-940x330.png"> 
  <meta name="twitter:player" content="https://www.youtube.com/embed/LGuunRN5Ymw"> 
  <meta content="435" name="twitter:player:width"> 
  <meta content="251" name="twitter:player:height"> 
  <!-- Segment meta tag --> 
  <meta name="segment" property="(developerWorks)" productTitle="developerWorks" value="Security English (developerWorks)"> 
  <!-- SITE MON : START (DO NOT DELETE) --> 
  <!-- developerWorks monitoring token --> 
  <!-- SITE MON : END (DO NOT DELETE) --> 
  <!-- HEADER_SCRIPTS_AND_CSS_INCLUDE --> 
  <!-- <script src="//cdn.optimizely.com/js/5399420604.js"></script> --> 
  <!-- BEGIN: Use this section to set page specific variables for the Page Tag --> 
  <script language="JavaScript">var NTPT_PGEXTRA="ibmSkillLevel=-&ibmCmaId=1023672&ibmContentAreas=security";</script> 
  <!--END --> 
  <script src="//1.www.s81c.com/common/stats/ida_stats.js"></script> 
  <link href="//1.www.s81c.com/common/v18/css/www.css" rel="stylesheet"> 
  <link href="//1.www.s81c.com/common/v18/css/syntaxhighlighter.css" rel="stylesheet"> 
  <script src="//1.www.s81c.com/common/v18/js/www.js"></script> 
  <script src="//1.www.s81c.com/common/v18/js/syntaxhighlighter.js"></script> 
  <link href="//1.www.s81c.com/common/v18/css/tables.css" rel="stylesheet"> 
  <script src="//1.www.s81c.com/common/v18/js/tables.js"></script> 
  <!--  Masthead/footer  --> 
  <link href="//dw1.s81c.com/developerworks/css/dw-mf/v18/dw-mf-v18.css?v=071117" rel="stylesheet"> 
  <!-- <link href="//dw1.s81c.com/developerworks/css/dw-mf/v18/alt-signedin-ux.css" rel="stylesheet" /> --> 
  <!--[if lt IE 9]>
    <link href="//dw1.s81c.com/developerworks/css/dw-mf/v18/dw-mf-ie8fix.css?v=022216" rel="stylesheet" />
<![endif]--> 
  <link href="//dw1.s81c.com/developerworks/css/v18/dw-article.css?v=073117" rel="stylesheet"> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-auth-properties.js?v=041017"></script> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-auth.js?v=062717"></script> 
  <script src="//dw1.s81c.com/developerworks/js/dw-mf/v18/dw-mf.js?v=110316"></script> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-include.js"></script> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-article.js?v=051817"></script> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-auto-links.js?v=091217"></script> 
  <script src="//www.ibm.com/software/info/js/tactic.js"></script> 
  <script src="//www.ibm.com/software/info/js/tacticbindlinks.js"></script> 
  <!-- Segment --> 
  <script src="//console.ng.bluemix.net/analytics/build/bluemix-analytics.min.js"></script> 
  <!-- 
<PageMap>
    <DataObject type="document">
        <Attribute name="topic">Authentication</Attribute>
        <Attribute name="topicId">95</Attribute>
        <Attribute name="contentArea">security</Attribute>
        <Attribute name="contentAreaId">16</Attribute>
        <Attribute name="abstract">In this tutorial, I show the user how to use his existing LDAP
            infrastructure to provide authentication and authorization decisions to a
            Node.js Bluemix application. </Attribute>
        <Attribute name="pub.date">2015-12-09</Attribute>
        <Attribute name="contentType">article</Attribute>
    </DataObject>
</PageMap>
--> 
 </head> 
 <body id="ibm-com" class="ibm-type dw-js-disabled"> 
  <div id="ibm-top" class="ibm-landing-page"> 
   <!-- MASTHEAD_BEGIN --> 
   <div id="ibm-masthead" role="banner" aria-label="IBM"> 
    <div id="ibm-mast-options"> 
     <ul role="toolbar" aria-labelledby="ibm-masthead"> 
      <li id="ibm-geo" role="presentation"><a href="http://www.ibm.com/planetwide/select/selector.html" role="button" aria-label="United States selected - Choose a country">United States</a></li> 
     </ul> 
    </div> 
    <div id="ibm-universal-nav"> 
     <nav role="navigation" aria-label="IBM"> 
      <div id="ibm-home">
       <a href="http://www.ibm.com/us/en/">IBM®</a>
      </div> 
      <ul id="ibm-menu-links" role="toolbar" aria-label="Site map"> 
       <li><a href="http://www.ibm.com/sitemap/us/en/">Site map</a></li> 
      </ul> 
     </nav> 
     <div id="ibm-search-module" role="search" aria-labelledby="ibm-masthead"> 
      <form id="ibm-search-form" action="https://www.ibm.com/Search/" method="get"> 
       <p> <label for="q">IBM</label> <input type="text" maxlength="100" value="" placeholder="Search" name="q" id="q" aria-label="Search developerWorks"> <input type="hidden" value="18" name="v"> <input type="hidden" value="utf" name="en"> <input type="hidden" value="en" name="lang"> <input type="hidden" value="us" name="cc"> <input type="hidden" name="sn" value="dw"> <input type="hidden" name="dws" value="dw"> <input type="hidden" name="hpp" value="20"> <input type="submit" id="ibm-search" class="ibm-btn-search" value="Submit"> </p> 
      </form> 
     </div> 
    </div> 
   </div>
   <!-- MASTHEAD_END --> 
   <!-- LAYOUT --> 
   <div id="ibm-content-wrapper"> 
    <!-- LEADSPACE_BEGIN --> 
    <header role="banner" aria-labelledby="ibm-pagetitle-h1"> 
     <!-- MASTHEAD_SITENAV_BEGIN --> 
     <div class="ibm-sitenav-menu-container"> 
      <div class="ibm-sitenav-menu-name"> 
       <a href="//www.ibm.com/developerworks/"> <img width="186" height="24" alt="developerWorks®" src="//dw1.s81c.com/developerworks/i/mf/dw-mf-wordmark.svg"> </a> 
      </div> 
      <div class="ibm-sitenav-menu-list"> 
       <ul role="menubar"> 
        <li class="dw-navpage-learn ibm-haschildlist" role="presentation"> <span role="menuitem"><a href="//www.ibm.com/developerworks/learn/">Learn</a></span> 
         <ul role="menu" aria-label="Learn" id="dw-mega-learn"> 
          <li role="presentation"> 
           <div class="ibm-columns"> 
            <div class="ibm-col-5-3 dw-mega-main"> 
             <h2>Learn with our tutorials and training</h2> 
             <p class="dw-mega-main-p">developerWorks provides tutorials, articles and other technical resources to help you grow your development skills on a wide variety of topics and products. Learn about a specific product or take a course and get certified. So, what do you want to learn about?</p> 
             <p class="ibm-button-link"> <a href="//www.ibm.com/developerworks/learn/" class="ibm-btn-pri">Choose a topic</a> </p> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured topics</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-mobile.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/learn/mobile">Mobile development</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-bigdata.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/learn/analytics">Big data</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-cognitive.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/learn/cognitive">Cognitive computing</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-cloud.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/learn/cloud">Cloud</a> 
              </div> 
             </div> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured destinations</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-swift.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/swift/?lnk=hm">Swift @ IBM</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-open.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/open/?lnk=hm">developerWorks Open</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-arch.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/architecture/?lnk=hm">Architecture center</a> 
              </div> 
             </div> 
            </div> 
           </div> </li> 
         </ul> </li> 
        <li role="presentation" class="dw-navpage-develop ibm-haschildlist"> <span role="menuitem"><a href="//www.ibm.com/developerworks/develop/">Develop</a></span> 
         <ul role="menu" aria-label="Develop" id="dw-mega-develop"> 
          <li role="presentation"> 
           <div class="ibm-columns"> 
            <div class="ibm-col-5-3 dw-mega-main"> 
             <h2>Develop with our trials &amp; downloads</h2> 
             <p class="dw-mega-main-p">Start developing with product trials, free downloads, and IBM Bluemix services. Sort by topic or product name and find everything we have to offer.</p> 
             <p class="ibm-button-link"> <a href="//www.ibm.com/developerworks/develop/" class="ibm-btn-pri">View all downloads &amp; trials</a> </p> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured products</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-bluemix.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/sso/bmregistration">Bluemix</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-websphere.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/downloads/ws/was/">WebSphere Application Server</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-db2express.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/downloads/im/db2express/">DB2 Express C</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-mobile.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//mobilefirstplatform.ibmcloud.com/">MobileFirst Platform Foundation</a> 
              </div> 
             </div> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured destinations</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-swift.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/swift/?lnk=hm">Swift @ IBM</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-open.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/open/?lnk=hm">developerWorks Open</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-arch.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/architecture/?lnk=hm">Architecture center</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-api-dest.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/api/">API Explorer</a> 
              </div> 
             </div> 
            </div> 
           </div> </li> 
         </ul> </li> 
        <li role="presentation" class="dw-navpage-connect ibm-haschildlist"> <span role="menuitem"><a href="//www.ibm.com/developerworks/connect/">Connect</a></span> 
         <ul role="menu" aria-label="Connect" id="dw-mega-connect"> 
          <li role="presentation"> 
           <div class="ibm-columns"> 
            <div class="ibm-col-5-3 dw-mega-main"> 
             <h2>Find a community and connect</h2> 
             <p class="dw-mega-main-p">Learn from the experts and share with other developers in one of our dev centers. Ask questions and get answers with dW answers. Search for local events in your area. All in developerWorks communities.</p> 
             <p class="ibm-button-link"> <a href="//www.ibm.com/developerworks/connect/" class="ibm-btn-pri">View communities</a> </p> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured Developer Centers</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-jazz-dev.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//jazz.net/">Jazz.net</a> 
              </div> 
             </div> 
             <!--<div class="dw-mega-nav-item">
                                        <div class="dw-mega-nav-img">
                                            <img width="30" height="30" alt=""
                                                src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-cloud-dev.png">
                                        </div>
                                        <div class="dw-mega-nav-link">
                                            <a href="//developer.ibm.com/cloud-analytics/">IBM Cloud Analytics DEV</a>
                                        </div>
                                    </div>--> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-bluemix-dev.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/bluemix/">Bluemix</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-api-dev.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/api/">API Explorer</a> 
              </div> 
             </div> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured destinations</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-swift.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/swift/?lnk=hm">Swift @ IBM</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-open.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/open/?lnk=hm">developerWorks Open</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-arch.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/architecture/?lnk=hm">Architecture center</a> 
              </div> 
             </div> 
            </div> 
           </div> </li> 
         </ul> </li> 
        <!-- dW featured --> 
        <!-- <li role="presentation" class="dw-navpage-devcenter"><strong>Subheading</strong></li> --> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/cognitive/">Cognitive</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/cloud/">Cloud</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/analytics/">Data</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/iot/">Internet of Things</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/java/">Java</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/">All topics</a></li> 
       </ul> 
      </div> 
     </div> 
     <!-- MASTHEAD_SITENAV_END --> 
     <!-- NAVIGATION_TRAIL_BEGIN --> 
     <div id="ibm-leadspace-head" class="ibm-alternate"> 
      <div id="ibm-leadspace-body"> 
       <nav aria-label="Breadcrumb" role="navigation"> 
        <ul id="dw-navigation-trail" itemscope itemtype="http://schema.org/BreadcrumbList">
         <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem"><a itemprop="item" href="http://www.ibm.com/developerworks/learn/"><span itemprop="name">Learn</span></a>
          <meta itemprop="position" content="1"></li>
         <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem"><a itemprop="item" href="http://www.ibm.com/developerworks/security/"><span itemprop="name">Security</span></a>
          <meta itemprop="position" content="2"></li>
        </ul> 
       </nav> 
      </div> 
     </div> 
     <!-- NAVIGATION_TRAIL_END --> 
    </header> 
    <!-- LEADSPACE_END --> 
    <!-- MAIN_CONTENT_BEGIN --> 
    <main role="main" aria-labelledby="ibm-pagetitle-h1"> 
     <div id="ibm-pcon"> 
      <!-- BEGIN_IBM-CONTENT --> 
      <div id="ibm-content"> 
       <!-- BEGIN_IBM-CONTENT-BODY --> 
       <div id="ibm-content-body"> 
        <!-- BEGIN_IBM-CONTENT-MAIN --> 
        <div id="ibm-content-main" class="dw-article"> 
         <!-- BEGIN_INTERIOR-COLUMNS --> 
         <div class="ibm-columns dw-article-toc"> 
          <!-- LEFT_6_2_CONTENT_COLUMN_BEGIN --> 
          <div id="dw-article-toc-container" class="ibm-col-6-2"> 
           <div id="dw-article-toc-body"> 
            <h2>Contents</h2>
            <div class="ibm-alternate-rule">
             <hr>
            </div>
            <ul role="directory" aria-label="Table of contents" class="ibm-plain-list">
             <li><a href="#ibm-pagetitle-h1">Introduction</a></li>
             <li><a href="#12Whatyoullneedtobuildyourapplicationoutline">What you'll need to build your application</a></li>
             <li><a href="#13Thedemonstrationapplicationoutline">The demonstration application</a></li>
             <li><a href="#14LDAPoutline">LDAP</a></li>
             <li><a href="#15Step1ConnecttoanLDAPserveroutline">Step 1. Connect to an LDAP server</a></li>
             <li><a href="#16Step2Thelogonprocessoutline">Step 2. Logging in</a></li>
             <li><a href="#17Step3Sessionmanagementoutline">Step 3. Manage sessions</a></li>
             <li><a href="#18Step4Usinggroupsforauthorizationoutline">Step 4. Use groups for authorization</a></li>
             <li><a href="#110Conclusionoutline">Conclusion</a></li>
             <li><a href="#artdownload">Downloadable resources</a></li>
             <li><a href="#artrelatedtopics">Related topics</a></li>
             <li><a href="#icomments">Comments</a></li>
            </ul> 
           </div> 
          </div> 
          <!-- LEFT_6_2_CONTENT_COLUMN_END --> 
          <!-- CENTER_6_4_CONTENT_COLUMN_BEGIN --> 
          <div class="ibm-col-6-4"> 
           <h1 id="ibm-pagetitle-h1" class="ibm-h1">Use LDAP for authentication and authorization in your Node.js Bluemix application</h1> 
           <!-- Article Top Bar --> 
           <div class="ibm-columns dw-article-topbar"> 
            <!-- Author and article info. --> 
            <div class="ibm-col-6-2 ibm-col-medium-6-4 dw-article-metadata"> 
             <div class="dw-article-avatar">
              <img width="42" height="42" src="//www.ibm.com/developerworks/i/p-opomerantz60.jpg" alt="Photo of Ori Pomerantz">
             </div>
             <div class="dw-article-authordate">
              <span class="dw-article-author"><a href="https://plus.google.com/104255303979859623360/about">Ori Pomerantz</a></span>
              <br>
              <span class="dw-article-pubdate">Published on December 09, 2015</span>
             </div> 
            </div> 
            <!-- Social --> 
            <div class="ibm-col-6-2 ibm-col-medium-6-4 ibm-col-small-6-2 dw-article-social"> 
             <!-- Sharing links --> 
             <div id="dw-article-share-inline"> 
              <div class="dw-article-sharelink-inline"> 
               <div class="ibm-sharethispage"></div> 
              </div> 
             </div> 
             <!-- Number of comments and link to comments --> 
             <div id="dw-article-cmts"> 
              <div class="dw-article-cmtslink"> 
               <a onclick="tocLink('#icomments')" href="#icomments" role="link" tabindex="0" aria-label="Comments"> <img src="//dw1.s81c.com/developerworks/i/v18/article/dw-article-cmt-icon.png" width="29" height="29" alt="Comments"> </a> 
              </div> 
              <div class="dw-article-cmtslink"> 
               <a onclick="tocLink('#icomments')" href="#icomments" role="link" tabindex="0"> 
                <div id="nCmts"></div> </a> 
              </div> 
             </div> 
            </div> 
           </div> 
           <!-- Article Body --> 
           <div data-widget="videoplayer" data-videodisplay="inline" data-titledisplaytype="overlay" data-videoid="LGuunRN5Ymw" data-videotype="youtube" data-customplaceholder="true" data-showvideoduration="true" data-showvideotitle="true" data-showimageplaybutton="true" itemscope="video" itemtype="http://schema.org/VideoObject">
            <meta itemprop="thumbnailURL" content="csp0524-video-940x330.png">
            <meta itemprop="description" content="For more in-depth information about the subject, watch this video: Use LDAP for authentication and authorization in
                    your Node.js Bluemix application.">
            <meta itemprop="name" content="Use LDAP for authentication and authorization in
                    your Node.js Bluemix application">
            <meta itemprop="contentURL" content="//www.youtube.com/watch?v=LGuunRN5Ymw">
            <meta itemprop="uploadDate" content="2015-12-09">
            <meta itemprop="duration" content="2M8S">
            <a href="//www.youtube.com/watch?v=LGuunRN5Ymw"><img class="ibm-resize" src="csp0524-video-940x330.png" height="330" width="940" alt="Video: Use LDAP for authentication and authorization in
                    your Node.js Bluemix application"></a>
           </div>
           <div class="dw-article-video-transcript">
            <a href="transcript.txt">Transcript</a>
           </div> 
           <p>If you already have an internal IT infrastructure, it quite likely contains an LDAP server to serve user identities. In many cases, it is best to continue to use that directory, even when your application sits on Bluemix®. In this tutorial, I show you how to do that while describing the basics of the LDAP protocol itself.</p>
           <h2 id="12Whatyoullneedtobuildyourapplicationoutline" class="ibm-h2">What you'll need to build your application</h2>
           <div class="dw-article-sidebar ibm-background-cool-white-20">
            <p><strong>Learn, develop, and connect</strong></p>
            <p>Get an all-access pass to powerful development tools and events in the new <strong>developerWorks Premium</strong> membership program. Besides a 12-month Bluemix subscription and 240 USD credits, Safari Books Online is also included. Browse over 500 top technical titles (more than 50 for security developers alone).<br><a href="https://www.ibm.com/marketplace/cloud/developerworks/us/en-us/?cm_sp=dwpremium-_-se-use-ldap-authentication-authorization-node.js-bluemix-application-_-article"><strong>Sign up today</strong></a>.</p>
           </div>
           <ul class="ibm-bullet-list">
            <li>A <a href="http://www.bluemix.net">Bluemix account</a>. </li>
            <li>Knowledge of HTML and JavaScript.</li>
            <li>Knowledge of the MEAN application stack (at least Node.js and Express). If you are not familiar with it, you can get started with "<a href="http://www.ibm.com/developerworks/library/?sort_by=&amp;show_abstract=true&amp;show_all=&amp;search_flag=&amp;contentarea_by=All+Zones&amp;search_by=Build+a+self-posting+Facebook+app&amp;product_by=-1&amp;topic_by=-1&amp;industry_by=-1&amp;type_by=All+Types&amp;ibm-search=Search">Build a self-posting Facebook application with Bluemix and the MEAN stack</a>," a three-part tutorial on IBM developerWorks.</li>
            <li>A development environment that can upload a Node.js application to Bluemix, such as Eclipse.</li>
            <li>The <a href="http://ldapjs.org/client.html">ldapjs</a> package.</li>
           </ul>
           <p class="ibm-btn-row ibm-padding-bottom-r1"><a href="https://ldap-using-app.mybluemix.net" class="ibm-btn-pri dw-article-btn-pri">Run the app</a><a href="https://hub.jazz.net/project/cspowers/ldap-using-app/overview" class="ibm-btn-sec dw-article-btn-sec">Get the code</a></p>
           <div class="ibm-pull-quote ibm-h3">
            <blockquote>
             <p><em class="dw-pullquote"><span class="dw-pullquote-open"></span>In this tutorial, I show you how to use your existing LDAP infrastructure to provide authentication and authorization decisions to a Node.js Bluemix application.<span class="dw-pullquote-close"></span></em></p>
            </blockquote>
           </div>
           <h2 id="13Thedemonstrationapplicationoutline" class="ibm-h2">The demonstration application</h2>
           <p>This is an extremely simple application. It allows you to log in, using either a provided LDAP server or your own, if you have one accessible from the Bluemix servers. After you log in, you are presented with links to two other pages, the purpose of which is to demonstrate authorization. To access either page, a user needs to be a member of a specific LDAP group.</p>
           <h2 id="14LDAPoutline" class="ibm-h2">LDAP</h2>
           <p>LDAPlight-weight directory access protocolis an Internet standard. In addition to the protocol used to access the directory, LDAP defines the <em>naming convention</em> used to identify entries and the <em>schema</em> that specifies the information included in them.</p>
           <h3 id="1.4.1.Thenamingconvention|outline" class="ibm-h3">The naming convention</h3>
           <p>Entries in LDAP are stored in a tree, called the <em>directory information tree</em>. The root of the tree is called the <em>suffix</em>, and the branches are <em>containers</em>. Those containers can be organizational units, locales, and so on. The leaves of the tree are the individual entities.</p>
           <p>You can see an example of this structure in the following figure. The suffix is <em>o=simple-tech</em>. Under it there are the branches: <em>ou=people</em> (which is for users) and <em>ou=groups</em> (which is for groups). Under the users' branch, there are two entities that refer to individual users: <em>uid=alice</em> and <em>uid=bicll</em>.</p>
           <img src="image001.png" class="ibm-downsize" alt="Chart showing LDAP directory     information tree" height="367" width="808">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N100DD');return false;" href="#N100DD">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N100DD">
            <img alt="Chart showing LDAP directory information tree" src="image001.png" width="808">
           </div>
           <p>To obtain the <em>distinguished name (DN)</em>, the full identifier for an entity, start at the entity itself and go up the tree, gathering all the identifiers and separating them with commas. For example, the distinguished name for alice is <em>uid=alice,ou=people,o=simple-tecch</em>.</p>
           <h3 id="1.4.2.TheSchema|outline" class="ibm-h3">The schema</h3>
           <p>The schema specifies the <em>attributes</em>, the information that is stored about each entity. One attribute that every entity has is <code>objectClass</code>, which specifies what type of entity it is. In most cases, user information is stored as the object class <code>inetOrgPerscon</code> and groups are stored as <code>groupOfNames</code>. For every object class, some attributes are mandatory and some are optional. For example, in <code>inetOrgPerson</code>, the attributes for a common name (cn) and surname (sn) are mandatory. Other attributes, such as those for user ID (uid) and password (userPassword), are optional.</p>
           <h2 id="15Step1ConnecttoanLDAPserveroutline" class="ibm-h2">Step 1. Connect to an LDAP server</h2>
           <p>To connect to an LDAP server, use the <a href="http://ldapjs.org/client.html">ldapjs</a> package. Connecting to an LDAP server typically requires the following pieces of information:</p>
           <ul class="ibm-bullet-list">
            <li>The server URL, which contains the host name, the port, and whether the communication should be encrypted or not.</li>
            <li>The suffix, which is the tree where stored information resides.</li>
            <li>The distinguished name (DN) for the user authenticating to the server.</li>
            <li>The password of that user.</li>
           </ul>
           <p>If your LDAP server is not accessible from the Internet (as normally it will not be), you need to use the Bluemix secure gateway service. For instructions, see "<a href="http://www.ibm.com/developerworks/library/se-connect-data-center-with-bluemix-secure-gateway-service/index.html">Connect to your data center with the Bluemix Secure Gateway service</a>."</p>
           <p>Typically, the server connection information is stored as configuration parameters to make it easy for operations staff to change it if necessary (see Step 5 in "<a href="http://www.ibm.com/developerworks/web/library/se-bluemix-self-posting-app-mean-stack-part3/index.html">Build a self-posting Facebook application with Bluemix and the MEAN stack, Part 3</a>"). However, for the purposes of this tutorial, I want to give you the ability to point the application at your own LDAP server. To do so, I include fields in the web form, where the default is the publicly available LDAP server I created for this example. You can modify those fields with your own values when you attempt to log in.</p>
           <p><img src="image002.png" class="ibm-downsize" alt="Screen capture showing     application web form" height="441" width="775"></p>
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N10123');return false;" href="#N10123">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N10123">
            <img alt="Screen capture showing application web form" src="image002.png" width="775">
           </div>If you are using my LDAP server, log in as either 
           <code>alice</code> or 
           <code>bill</code>, with the password 
           <code>object00</code>.
           <p></p>
           <h2 id="16Step2Thelogonprocessoutline" class="ibm-h2">Step 2. Logging in</h2>
           <p>Verifying that credentials with LDAP is typically a two-step process. First, the program needs to access the LDAP server as an administrator (or at least a user with read and search privileges on the users) to get the user information, including the user's DN. Then, it needs to attempt to access the server as the user's DN, by using the provided password. Here's a detailed explanation:</p>
           <ol type="1">
            <li>The first step is to create an LDAP client by using the ldapjs library. The LDAP client needs a single parameter, the URL for the server. Ignore the <code>sessionData</code> references for now; <code>sessionData</code> is explained in the next step, which deals with session manageme <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Use LDAP
var ldap = require('ldapjs');

.
.
.

// Use the administrative account to find the user with that UID
var adminClient = ldap.createClient({
	url: sessionData.ldap.url
});</pre></span></li>
            <li>Next, the LDAP client needs to <em>bind</em>, which is the LDAP term for authenticating. This requires a long round-trip, so the rest of the flow is in a function provided as a parameter to the bind function. The same is true for the other LDAP operations. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Bind as the administrator (or a read-only user), to get the DN for
// the user attempting to authenticate
adminClient.bind(sessionData.ldap.dn, sessionData.ldap.passwd, function(err) {

	// If there is an error, tell the user about it. Normally we would
	// log the incident, but in this application the user is really an LDAP
	// administrator.
	if (err != null)
		res.send("Error: " + err);
	else</pre></span></li>
            <li>The LDAP schema specifies that if a user ID is available, it is stored in a <code>uid</code> attribute. The simplest form of an LDAP filter is <code>(&lt;attribute&gt;=&lt;value&gt;)</code>. This code builds the filter and uses it in a search. In addition to the filter, an LDAP search needs to know where to start (the suffix or a branch under it) and the scopethat is, how deep to search. The scope below<code>sub</code>means that there is no depth limit. A scope of <code>one</code> would specify that only entities that are directly below the starting location should be included in the search. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Search for a user with the correct UID.
adminClient.search(req.body.ldap_suffix, {
	scope: "sub",
	filter: "(uid=" + sessionData.uid + ")"
	}, function(err, ldapResult) {
		if (err != null)
			throw err;</pre></span></li>
            <li>You can call the callback function before all the information is available. Therefore, to actually get the information, we register event handlers on the <code>ldapResult</code> parameter. The end event emits after receiving all the data. If there is no user with the user ID, then there will be no data and the session DN will remain empty. In that case, we report a problem. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// If we get to the end and there is no DN, it means there is no such user.
ldapResult.on("end", function() {
	if (sessionData.dn === "")
		res.send("No such user " + sessionData.uid);
});</pre></span></li>
            <li> The other event, <code>searchEntry</code>, emits for every entry that it receives. This application assumes that there is only one such entry (user IDs are supposed to be unique). It keeps track of two fields: the user's distinguished name and the user's common name (cn) attribute. The LDAP attributes of the user are available in <code>entry.object</code>, in case you need any of the other ones. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// If we get a result, then there is such a user.
ldapResult.on('searchEntry', function(entry) {
	sessionData.dn = entry.dn;
	sessionData.name = entry.object.cn;</pre></span></li>
            <li>Using the user's DN, you can attempt to bind to the server with the user password. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// When you have the DN, try to bind with it to check the password
var userClient = ldap.createClient({
	url: sessionData.ldap.url
});
userClient.bind(sessionData.dn, sessionData.passwd, function(err) {</pre></span></li>
            <li>If the bind succeeds, it means the user information is correct and you can start a new session. If it fails, then the password is incorrect (the uid is in use, otherwise the process would fail in substep 4). <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">if (err == null) {
	var sessionID = logon(sessionData);

	res.setHeader("Set-Cookie", ["sessionID=" + sessionID]);
	res.redirect("main.html");
} else
	res.send("You are not " + sessionData.uid);
});</pre></span></li>
           </ol>
           <p><em>Note:</em> This code is not following security best practices because it provides different responses for the wrong user ID and wrong password. This is acceptable in a sample application such as this one, because it makes debugging easier but not in a production environment.</p>
           <h2 id="17Step3Sessionmanagementoutline" class="ibm-h2">Step 3. Manage sessions</h2>
           <p>We do not want to ask users for authentication and go through the entire resource-intensive process of LDAP authentication every time the user accesses a page. It makes a lot more sense to store the user information somewhere and retrieve it as needed.</p>
           <h3 id="1.7.1.Creatingsessions|outline" class="ibm-h3">Create sessions</h3>
           <ol type="1">
            <li>Declare a global associative array to store the sessions. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Current session information
var sessions = {};</pre></span></li>
            <li>When checking for a user login, build a structure to host the session information. Normally, the LDAP information is global, but because this application allows users to select their own LDAP server for testing purposes, different users might have different LDAP parameters. The next step explains the <code>authList</code> field, which deals with authorizations. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Data about this session.
var sessionData = {
	
	// Information required to access the LDAP directory:
	// URL, suffix, and admin (or read only) credentials.
	//
	// In a normal application this would be in the
	// configuration parameters, but in this application we
	// want people to be able to use their own LDAP server.
	ldap: {
		url: req.body.ldap_url,
		dn: req.body.ldap_dn,
		passwd: req.body.ldap_passwd,
		suffix: req.body.ldap_suffix
	},
		
	// Information related to the current user
	uid: req.body.uid,
	passwd: req.body.passwd,
	dn: "",    // No DN yet
	
	// Authorizations we already calculated - none so far
	authList: {}
};</pre></span></li>
            <li>If you get additional useful information about the user during the login process, store it in the session data variable. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// If we get a result, then there is such a user.
ldapResult.on('searchEntry', function(entry) {
	sessionData.dn = entry.dn;
	sessionData.name = entry.object.cn;</pre></span></li>
            <li>When you determine that the user is authentic, get a unique identifier (preferably a random one because any attacker that can guess session identifiers could masquerade as a legitimate user). Store the session data under that key. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">var sessionID = logon(sessionData);
.
.
.
// Function called after the user logs on
var logon = function(sessionData) {
	var sessionID = uuid.v1();
	sessions[sessionID] = sessionData;

	return sessionID;
};</pre></span></li>
            <li>Store the session ID in a cookie on the browser. At this point, you would typically redirect the user to a web page with actual content. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">res.setHeader("Set-Cookie", ["sessionID=" + sessionID]);
res.redirect("main.html");</pre></span></li>
           </ol>
           <h3 id="1.7.2.Usingsessions|outline" class="ibm-h3">Use sessions</h3>
           <p>To use session information, import and use the cookie parser middleware:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Use cookie-parser to read the session ID cookie
var cookieParser = require("cookie-parser");
app.use(cookieParser());</pre></span>
           <p>The function that implements the /userData.js page shows how to use session information. Read the <code>sessionID</code> cookie, and if there is a corresponding entry in the sessions object, execute the following code:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Get user data. This small file allows most of the post-logon user interface to be static.
app.get("/userData.js", function(req, res) {
	var data = {};
	
	if (sessions[req.cookies.sessionID] != undefined) {
		data.name = sessions[req.cookies.sessionID].name;
		data.uid = sessions[req.cookies.sessionID].uid;
	}
	
	res.send("var userData = " + JSON.stringify(data) + ";");
});</pre></span>
           <h3 id="1.7.3.Sessiontimeout|outline" class="ibm-h3">Time sessions out</h3>
           <p>You cannot let sessions accumulate. If the application runs for a long time, the sessions object will grow to be unwieldy and waste RAM. In this application, it is acceptable to delete sessions after an hour.</p>
           <p>This is a very simple algorithm that performs without costing too much in memory or CPU. Go over the session list, and if any session has the old flag (it has a field that is called "old", and it has a true value), delete it. If it does not, create that field and set it to true. Use the <code>setInterval</code> function to do this every hour.</p>
           <p>Because we run the operation once an hour, a session could get the "old" flag when it is only 1 second old, or it might exist without the old flag for almost an hour. However, each session stays with the old flag for one hour, so no session is deleted before it reaches an hour, and no session survives past 2 hours.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">var sessionLifetime = 60;   // In minutes
setInterval(function() {
	
    for(var sessionID in sessions)
    	if (sessions[sessionID].old)
    		delete sessions[sessionID];
    	else
    		sessions[sessionID].old = true;
    
}, sessionLifetime * 60 * 1000);</pre></span>
           <p>In a production application, sessions are usually preserved until the user becomes inactive. To do that when you are using this algorithm, simply set the old flag to false whenever a session is used.</p>
           <h2 id="18Step4Usinggroupsforauthorizationoutline" class="ibm-h2">Step 4. Use groups for authorization</h2>
           <p>In many applications, some functionality is available only to users who perform specific job roles. The way those job roles are typically expressed in LDAP is as a membership in a group. Group objects typically have the object class <code>groupOfNames</code> and a member attribute that is multi-valued. Multi-valued attributes can have multiple values, in this case the DNs of all the members of the group.</p>
           <p>In this application, there are two pages with restricted access, men.html and women.html. As you would expect, alice is barred from men.html and bill is barred from women.html. The groups are <code>cn=women,ou=groups,o=simple-tech</code> and <code>cn=men,ou=groups,o=simple-tech</code>.</p>
           <p>Here is how you require group membership to access a web page:</p>
           <ol type="1">
            <li>If you have any static pages, put them into a separate directory. In this application, I put them into /restricted (as opposed to the publicly accessible public pages, which are in /public).</li>
            <li>Create a list of restricted pages and an LDAP filter to get them. In this tutorial, I use cn=&lt;group name&gt;. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Restricted pages, and the filters that identify their groups
var restrictedPages = {
	"/men.html": {
		groupFilter: "cn=men"
	},
	"/women.html": {
		groupFilter: "cn=women"
	}
};</pre></span></li>
            <li>To cache authorizations, add to the data for each session a field (associative array) for authorization decisions. I use <code>authList</code>. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">	var sessionData = {
		.
		.
		.
		// Authorizations we already calculated - none so far
		authList: {}
	};</pre></span></li>
            <li>The <code>restrictedPages</code> variable already has the list of restricted pages, which you can use to create the handlers for them. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Create the handlers for the restricted pages
for(var path in restrictedPages) {
	app.get(path, function(req, res) {
		getRestrictedPage(req, res);
	});
}</pre></span></li>
            <li>Most of the authorization logic is in the function <code>getRestrictedPage</code>. It uses information from both the session and the page. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">// Deal with restricted pages, and verify if the user is authorized or not.
var getRestrictedPage = function(req, res) {
	var sessionData = sessions[req.cookies.sessionID];
	var page = restrictedPages[req.path];</pre></span></li>
            <li>Therefore, if there is no session, it means that the user is unknown, and no authorization decision is possible. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">	// No session
	if (sessionData == undefined) {
		res.send("I don't even know who you are.");
		return ;
	}</pre></span></li>
            <li>If the session's <code>authList</code> already contains a decision, use it. Note that <code>sessionData.authList[req.path]</code> can have 1 of 3 values:
             <ul class="ibm-bullet-list">
              <li>Undefined, if the authorization status for the user whose session this is and the path that is requested is unknown.</li>
              <li>True, if the user is known to be authorized for the path.</li>
              <li>False, if the user is known to be unauthorized for the path.</li>
             </ul><span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">	// If we already know the authorization answer, use that
	if (sessionData.authList[req.path] != undefined) {
		if (sessionData.authList[req.path])
			userAuthorized(sessionData, req, res);
		else
			userUnauthorized(sessionData, req, res);
		
		
		return ;
	}</pre></span></li>
            <li>If we do not know the answer, we need to open a new LDAP connection. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">	var ldapClient = ldap.createClient({
		url: sessionData.ldap.url
	});
	
	// Bind as the administrator (or a read-only user)
	ldapClient.bind(sessionData.ldap.dn, sessionData.ldap.passwd, function(err) {
		if (err != null) {
			res.send("LDAP bind error:" + err);
		
			return ;
		}

	});</pre></span></li>
            <li>This is the LDAP search operation. To combine two or more LDAP filters in a single filter, and require all of them to be matched, the syntax is (&amp;<em>&lt;filter 1&gt;&lt;filter 2&gt;&lt;filter n&gt;</em>). In this case, the first filter looks for the group based on the information in <code>restrictedPages</code>. The second filter checks if it has a member with the correct DN. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">	// This filter will only find the group if the logged on user is a member
	ldapClient.search(sessionData.ldap.suffix,
		{
			scope: "sub",
			filter: "(&amp;(" + page.groupFilter + ")(member=" + sessionData.dn + " ))"
		},
		function(err, ldapResult) {
			if (err != undefined) {
				res.send("LDAP search error: " + err);
				return ;
			}</pre></span></li>
            <li>The events emitted by the <code>ldapResult</code> object identify whether the user is a member of the group or not. If the user is a member of the group, the group fits the filter, and the <code>ldapResult</code> object emits a <code>searchEntry</code> event. If the user is not a member, no LDAP entity fits the filter, and no <code>searchEntry</code> event occurs; the first event that is emitted is an end event. Either way, whether the user is a member and therefore authorized or not, cache the result for future use. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">			// If we get a result, then the user is authorized
			ldapResult.on('searchEntry', function() {
				sessionData.authList[req.path] = true;

				userAuthorized(sessionData, req, res);
			});
			
			// If we get to the end and we did not see the user is authorized, then
			// the user is not authorized.
			ldapResult.on("end", function() {
				if (sessionData.authList[req.path] == undefined) {
					sessionData.authList[req.path] = false;
					
					userUnauthorized(sessionData, req, res);
				}
			});</pre></span></li>
            <li>In this application, all the pages that require authorization are static. To send such a page to the user, use <code>res.sendFile()</code>. In a real-world application, this function would also call the appropriate functions to generate dynamic content, and those functions would probably use the session data to generate it. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">var userAuthorized = function(sessionData, req, res) {
	res.sendFile(__dirname + "/restricted" + req.path);
};</pre></span></li>
            <li>This function is called when a user is not authorized. It is a fairly generic error message. In a real-world application, the message might include an explanation as to why the content is restricted, as well as information to help the user contact someone to obtain authorization. <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">var userUnauthorized = function(sessionData, req, res) {
	res.send("You are not authorized.");
};</pre></span></li>
           </ol>
           <h2 id="110Conclusionoutline" class="ibm-h2">Conclusion</h2>
           <p>Using the techniques explained in this tutorial, you should be able to use an internal user repository with an LDAP interface to provide authentication and authorization decisions for a Node.js Bluemix application, or in fact any Node.js application that can access the LDAP server.</p>
           <p>Microsoft Active Directory has an LDAP interface, but there are some subtle differences. In a future tutorial, I will explain how to use Active Directory as your user repository for a Node.js application.</p>
           <!--CMA ID: 1023672-->
           <!--Site ID: 1-->
           <!--XSLT stylesheet used to transform this file: dw-document-html-8.0.xsl--> 
           <!-- Article Resources --> 
           <div class="ibm-alternate-rule">
            <hr>
           </div>
           <h4 id="artdownload" class="ibm-h4">Downloadable resources</h4>
           <ul class="ibm-link-list">
            <li><a class="ibm-pdf-link" href="se-use-ldap-authentication-authorization-node.js-bluemix-application-pdf.pdf">PDF of this content</a></li>
           </ul>
           <div class="ibm-alternate-rule">
            <hr>
           </div>
           <h4 id="artrelatedtopics" class="ibm-h4">Related topics</h4>
           <ul class="ibm-plain-list">
            <li><a href="http://www.ibm.com/developerworks/library/?sort_by=&amp;show_abstract=true&amp;show_all=&amp;search_flag=&amp;contentarea_by=All+Zones&amp;search_by=Build+a+self-posting+Facebook+ap">MEAN</a></li>
            <li><a href="http://ldapjs.org/client.html">ldapjs package </a></li>
            <li><a href="http://www.ibm.com/developerworks/library/se-connect-data-center-with-bluemix-secure-gateway-service/index.html">Bluemix secure gateway</a></li>
           </ul> 
           <!-- Commenting --> 
           <!-- INLINE_COMMENTS_BEGIN: --> 
           <div class="ibm-alternate-rule">
            <hr>
           </div> 
           <div id="dw-article-cmts-top" class="ibm-columns"> 
            <div class="ibm-col-6-2"> 
             <h4 id="icomments" class="ibm-h4">Comments</h4> 
             <div id="dw-article-cmts-login"> 
              <p><a onclick="window.location=userLinks[0].url;" tabindex="0" role="link">Sign in</a> or <a onclick="window.location=userLinks[1].url;" tabindex="0" role="link">register</a> to add and subscribe to comments.</p> 
             </div> 
            </div> 
            <div class="ibm-col-6-2" id="dw-notify"> 
             <input type="checkbox" value="1" name="comment_notification" id="comment_notification" disabled> 
             <label for="comment_notification">Subscribe me to comment notifications</label> 
            </div> 
           </div> 
           <div class="dw-article-cmts-container"> 
            <div class="ibm-no-print" id="dw-icomments-container"> 
            </div> 
           </div> 
           <!-- INLINE_COMMENTS_END --> 
           <!-- CENTER_6_4_CONTENT_COLUMN_END --> 
          </div> 
         </div> 
         <!--Rating_Meta_BEGIN-->
         <div class="metavalue">
          static.content.url=http://www.ibm.com/developerworks/js/artrating/
         </div>
         <div class="metavalue">
          SITE_ID=1
         </div>
         <div class="metavalue">
          Zone=Security
         </div>
         <div class="metavalue">
          ArticleID=1023672
         </div>
         <div class="metavalue">
          ArticleTitle=Use LDAP for authentication and authorization in your Node.js Bluemix application
         </div>
         <div class="metavalue">
          publish-date=12092015
         </div>
         <script language="javascript" type="text/javascript">document.write('<div class="metavalue">url='+location.href.replace(/</g,  '%3C')+'</div>');</script>
         <!--Rating_Meta_END--> 
        </div> 
        <!-- END_IBM-CONTENT-MAIN --> 
       </div> 
       <!-- END_IBM-CONTENT-BODY --> 
      </div> 
      <!-- END_IBM-CONTENT --> 
     </div> 
     <!-- END_IBM-PCON --> 
    </main> 
    <!-- MAIN_CONTENT_END --> 
    <!-- END_CONTENT-WRAPPER --> 
   </div> 
   <!-- FOOTER_BEGIN --> 
   <footer role="contentinfo" aria-label="IBM developerWorks"> 
    <div id="dw-footer-module" class="dw-footer-home"> 
     <section aria-label="Resources" role="contentinfo"> 
      <div class="ibm-columns"> 
       <div class="ibm-col-6-1 dw-footer-col-1"> 
        <ul> 
         <li class="dw-footer-heading" aria-label="developerWorks">developerWorks</li> 
         <li><a href="//www.ibm.com/developerworks/aboutdw/">About</a></li> 
         <li><a href="//www.ibm.com/developerworks/feedback">Help</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/ideas">Submit content</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/secure/report/">Report abuse</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/community/terms/thirdparty/">Third-party notice</a></li> 
        </ul> 
        <ul> 
         <li class="dw-footer-heading" aria-label="Community">Community</li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/rfe/">Product feedback</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/connect/">Developer Centers</a></li> 
        </ul> 
        <ul> 
         <li class="dw-footer-heading dw-follow-us" aria-label="Follow us">Follow us</li> 
        </ul> 
        <p class="dw-footer-social"> <a href="//twitter.com/developerWorks"> <img width="28" height="27" alt="Twitter" src="//dw1.s81c.com/developerworks/i/mf/dw-footer-icon-twitter.png"> </a> </p> 
        <p class="dw-footer-social-right"> <a href="//www.facebook.com/developerworks"> <img width="28" height="27" alt="Facebook" src="//dw1.s81c.com/developerworks/i/mf/dw-footer-icon-facebook.png"> </a> </p> 
        <br> 
        <p class="dw-footer-social"> <a href="//www.linkedin.com/groups/IBM-developerWorks-8137234"> <img width="28" height="27" alt="LinkedIn" src="//dw1.s81c.com/developerworks/i/mf/dw-footer-icon-linkedin.png"> </a> </p> 
        <p class="dw-footer-social-right"> <a href="//www.youtube.com/user/developerworks"> <img width="28" height="27" alt="YouTube" src="//dw1.s81c.com/developerworks/i/mf/dw-footer-icon-youtube.png"> </a> </p> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-2"> 
        <ul> 
         <li class="dw-footer-heading" aria-label="Join">Join</li> 
         <li><a href="//developer.ibm.com/academic/">Faculty</a></li> 
         <li><a href="//developer.ibm.com/students/">Students</a></li> 
         <li><a href="//developer.ibm.com/startups/">Startups</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/isv/">Business Partners</a></li> 
        </ul> 
        <ul class="dw-footer-lang" aria-label="Select a language"> 
         <li class="dw-footer-heading">Select a language</li> 
         <li><a href="//www.ibm.com/developerworks/">English</a></li> 
         <li><a href="//www.ibm.com/developerworks/cn/" lang="zh">??</a></li> 
         <li><a href="//www.ibm.com/developerworks/jp/" lang="ja">???</a></li> 
         <li><a href="//www.ibm.com/developerworks/ru/" lang="ru">???????</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/br/" lang="pt">Português (Brasil)</a></li> 
         <li><a href="//www.ibm.com/developerworks/ssa/" lang="es">Español</a></li> 
         <li><a href="//developer.ibm.com/kr/" lang="kr">??</a></li> 
        </ul> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-3"> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-4"> 
        <ul class="dw-footer-categories"> 
         <li class="dw-footer-category"> <a href="//www.ibm.com/developerworks/learn/">Tutorials &amp; training</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/accelerate/">Demos &amp; sample code</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/answers">Q&amp;A forums</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/dwblog/">dW Blog</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/events/">Events</a> </li> 
        </ul> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-5"> 
        <ul class="dw-footer-categories"> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/courses/">Courses</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/open/">Open source projects</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/tv/">Videos</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/recipes/">Recipes</a> </li> 
        </ul> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-6"> 
        <ul class="dw-footer-categories"> 
         <li class="dw-footer-category"> <a href="//www.ibm.com/developerworks/develop/">Downloads</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/api/">APIs</a> </li> 
         <li class="dw-footer-category"> <a href="//www.ibm.com/developerworks/newsletter/">Newsletters</a> </li> 
         <li class="dw-footer-category"> <a href="//www.ibm.com/developerworks/feeds/">Feeds</a> </li> 
        </ul> 
       </div> 
      </div> 
     </section> 
    </div> 
    <div id="dw-footer" class="ibm-padding-normal ibm-alternate"> 
     <div class="ibm-columns"> 
      <div class="ibm-col-1-1"> 
       <div class="dw-footer-corporate-links"> 
        <ul> 
         <li><a href="//www.ibm.com/developerworks/aboutdw/contacts.html">Contact</a></li> 
         <li><a href="//www.ibm.com/privacy/us/en/">Privacy</a></li> 
         <li><a href="//www.ibm.com/developerworks/community/terms/use/">Terms of use</a></li> 
         <li><a href="//www.ibm.com/accessibility/us/en/">Accessibility</a></li> 
         <li class="ibm-feedbacklink"><a href="#">Feedback</a></li> 
         <li id="ibm-truste-cp"><a onclick="truste.eu.clickListener();return false;" href="#">Cookie Preferences</a></li> 
        </ul> 
       </div> 
       <div id="ibm-footer-locale-selector"></div> 
      </div> 
     </div> 
    </div> 
   </footer> 
   <!-- FOOTER_END --> 
   <!-- END_IBM-TOP --> 
  </div> 
  <!-- SCRIPTS_INCLUDE_BEGIN --> 
  <!-- Styles --> 
  <link rel="stylesheet" type="text/css" href="/developerworks/maverick/css/plugin/comments/jquery-comments.css"> 
  <link rel="stylesheet" href="/developerworks/maverick/fonts/awesome-4.5.0/css/font-awesome.min.css"> 
  <!-- Libraries --> 
  <script type="text/javascript" src="/developerworks/maverick/js/plugin/comments/jquery-comments.min.js"></script> 
  <script type="text/javascript" src="/developerworks/maverick/js/plugin/formatter/moment-with-locales.js"></script> 
  <script type="text/javascript" src="/developerworks/maverick/js/ContentComments.js"></script> 
  <script type="text/javascript" src="/developerworks/js/v18/ContentCommentsFormatter.js"></script> 
  <script type="text/javascript" language="JavaScript">

	IBMCore.common.module.masthead.subscribe("ready", "customjs", setupCommentsPlugin).runAsap(setupCommentsPlugin);

	function setupCommentsPlugin(){
		//debugger;
			//alert(userLinks);
			var commentsInitInfo = {
				contentId : $("div[class=metavalue]:contains('ArticleID=')").text().split("=")[1],
				siteId :  $("div[class=metavalue]:contains('SITE_ID=')").text().split("=")[1],
				pluginDivId : '#dw-icomments-container',
				notifyElementId : "#comment_notification",
				loginMessageDivId : "#dw-article-cmts-login",
				totalCommentsDivId : "#nCmts"
			};				
								
			ContentComments.Setup(commentsInitInfo);
	}
</script> 
  <script type="text/javascript">(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');ga('create','UA-41146412-3','auto');ga('require','linkid','linkid.js');var dcdate="2015-12-09";var cmaid="1023672";ga('set','dimension1',dcdate);ga('set','dimension2',cmaid);var dw_canonical="http://www.ibm.com/developerworks/library/se-use-ldap-authentication-authorization-node.js-bluemix-application/index.html";dw_canonical=dw_canonical.substring(dw_canonical.indexOf(".ibm.com")+8);ga('send','pageview',{'page':dw_canonical,'dimension1':dcdate,'dimension2':cmaid});var trkOBL=function(url,id){id=id.split("-");var cat="v18 article";var act="Bluemix";if(id[2]=="dwpremium")act="Premium";if(id[2]=="dwopen")act="dWOpen";if(id[2]=="devops")act="Devops";act=act+' '+id[3];if(id[4]){var label=id[4];if(label=="btn")label="button";if(label=="txt")label="text link";if(label=="bnr")label="banner";if(label=="tl")label="tile";if(label=="regbar")label="registration bar";if(label=="vp")label="video promotion"}var ab=0;if(id[5]){if(id[5]=="ABa")ab=1;if(id[5]=="ABb")ab=2;if(id[5]=="ABc")ab=3;if(id[5]=="ABd")ab=4;if(id[5]=="ABe")ab=5;if(id[5]=="ABf")ab=6;if(id[5]=="ABg")ab=7;if(id[5]=="ABh")ab=8}ga('send','event',cat,act,label,ab,{'page':dw_canonical,'hitCallback':function(){document.location=url}})}</script>
  <!-- Piwik --> 
  <script type="text/javascript">
    var _paq = _paq || [];
    _paq.push(["setDomains", ["*.www.ibm.com/developerworks","*.www.ibm.com/developerworks"]]);
    _paq.push(['trackPageView']);
    _paq.push(['enableLinkTracking']);
    (function() {
    var u="//developer.ibm.com/piwik/";
    _paq.push(['setTrackerUrl', u+'piwik.php']);
    _paq.push(['setSiteId', 7]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);
    })();
</script> 
  <noscript>
   <p><img src="//developer.ibm.com/piwik/piwik.php?idsite=7" style="border:0;" alt=""></p>
  </noscript> 
  <!-- End Piwik Code -->
  <!-- Hotjar Tracking Code for ibm.com --> 
  <script>
    (function(h,o,t,j,a,r){
    h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
    h._hjSettings={hjid:42920,hjsv:5};
    a=o.getElementsByTagName('head')[0];
    r=o.createElement('script');r.async=1;
    r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
    a.appendChild(r);
    })(window,document,'//static.hotjar.com/c/hotjar-','.js?sv=');
</script> 
  <!-- SCRIPTS_INCLUDE_END -->   
 </body>
</html>