<!doctype html>
<html lang="en" dir="ltr" class="client-nojs">
 <head> 
  <meta charset="UTF-8"> 
  <title>Packages/Registry - CommonJS Spec Wiki</title> 
  <meta name="generator" content="MediaWiki 1.24.1"> 
  <link rel="ExportRDF" type="application/rdf+xml" title="Packages/Registry" href="/index.php?title=Special:ExportRDF/Packages/Registry&amp;xmlmime=rdf"> 
  <link rel="shortcut icon" href="/favicon.ico"> 
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="CommonJS Spec Wiki (en)"> 
  <link rel="EditURI" type="application/rsd+xml" href="http://wiki.commonjs.org/api.php?action=rsd"> 
  <link rel="alternate" hreflang="x-default" href="/wiki/Packages/Registry"> 
  <link rel="alternate" type="application/atom+xml" title="CommonJS Spec Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom"> 
  <link rel="stylesheet" href="http://wiki.commonjs.org/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.skinning.interface%7Cmediawiki.ui.button%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*"> 
  <meta name="ResourceLoaderDynamicStyles" content=""> 
  <link rel="stylesheet" href="http://wiki.commonjs.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*"> 
  <style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: wiki_commonjs:resourceloader:filter:minify-css:7:68dfc9794cf0cd26221c5f4dcfe6a49f */</style> 
  <script src="http://wiki.commonjs.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script> 
  <script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Packages/Registry","wgTitle":"Packages/Registry","wgCurRevisionId":5936,"wgRevisionId":5936,"wgArticleId":529,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Packages/Registry","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"sfgAutocompleteValues":[],"sfgAutocompleteOnAllChars":false,"sfgFieldProperties":[],"sfgCargoFields":[],"sfgDependentFields":[],"sfgShowOnSelect":[],"sfgScriptPath":"/extensions/SemanticForms","edgValues":null,"sfgEDSettings":null,"sdgDownArrowImage":"/extensions/SemanticDrilldown/skins/down-arrow.png","sdgRightArrowImage":"/extensions/SemanticDrilldown/skins/right-arrow.png"});
}</script>
  <script>if(window.mw){
mw.loader.implement("user.options",function($,jQuery){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":1,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rows":25,"showhiddencats":0,"shownumberswatching":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":5,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":1,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"watchrollback":0,
"wllimit":250,"useeditwarning":1,"prefershttps":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs102":false,"searchNs103":false,"searchNs104":false,"searchNs105":false,"searchNs106":false,"searchNs107":false,"searchNs108":false,"searchNs109":false,"searchNs170":false,"searchNs171":false,"searchNs200":false,"searchNs201":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function($,jQuery){mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\"});},{},{});
/* cache key: wiki_commonjs:resourceloader:filter:minify-js:7:06107c8532d3698a3639a0db45ee701e */
}</script> 
  <script>if(window.mw){
mw.loader.load(["ext.smw.style","mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script> 
  <!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/Vector/csshover.min.htc")}</style><![endif]--> 
 </head> 
 <body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Packages_Registry skin-vector action-view"> 
  <div id="mw-page-base" class="noprint"></div> 
  <div id="mw-head-base" class="noprint"></div> 
  <div id="content" class="mw-body" role="main"> 
   <a id="top"></a> 
   <h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Packages/Registry</span></h1> 
   <div id="bodyContent" class="mw-body-content"> 
    <div id="siteSub">
     From CommonJS Spec Wiki
    </div> 
    <div id="contentSub">
     <span class="subpages">&lt; <a href="/wiki/Packages" title="Packages">Packages</a></span>
    </div> 
    <div id="jump-to-nav" class="mw-jump">
      Jump to: 
     <a href="#mw-head">navigation</a>, 
     <a href="#p-search">search</a> 
    </div> 
    <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr">
     <div id="toc" class="toc">
      <div id="toctitle">
       <h2>Contents</h2>
      </div> 
      <ul> 
       <li class="toclevel-1"><a href="#Packages.2FRegistry"><span class="tocnumber">1</span> <span class="toctext">Packages/Registry</span></a> 
        <ul> 
         <li class="toclevel-2"><a href="#Scope"><span class="tocnumber">1.1</span> <span class="toctext">Scope</span></a></li> 
         <li class="toclevel-2"><a href="#HTTP_Request_Method_and_Headers"><span class="tocnumber">1.2</span> <span class="toctext">HTTP Request Method and Headers</span></a></li> 
         <li class="toclevel-2"><a href="#HTTP_Errors"><span class="tocnumber">1.3</span> <span class="toctext">HTTP Errors</span></a></li> 
         <li class="toclevel-2"><a href="#URLs"><span class="tocnumber">1.4</span> <span class="toctext">URLs</span></a> 
          <ul> 
           <li class="toclevel-3"><a href="#registry_root_url"><span class="tocnumber">1.4.1</span> <span class="toctext">registry root url</span></a></li> 
           <li class="toclevel-3"><a href="#package_root_url"><span class="tocnumber">1.4.2</span> <span class="toctext">package root url</span></a> 
            <ul> 
             <li class="toclevel-4"><a href="#Redirection"><span class="tocnumber">1.4.2.1</span> <span class="toctext">Redirection</span></a></li> 
             <li class="toclevel-4"><a href="#Package_Root_Object"><span class="tocnumber">1.4.2.2</span> <span class="toctext">Package Root Object</span></a></li> 
            </ul> </li> 
           <li class="toclevel-3"><a href="#package_version_url"><span class="tocnumber">1.4.3</span> <span class="toctext">package version url</span></a> 
            <ul> 
             <li class="toclevel-4"><a href="#Redirection_2"><span class="tocnumber">1.4.3.1</span> <span class="toctext">Redirection</span></a></li> 
             <li class="toclevel-4"><a href="#Package_Version_Object"><span class="tocnumber">1.4.3.2</span> <span class="toctext">Package Version Object</span></a></li> 
            </ul> </li> 
          </ul> </li> 
         <li class="toclevel-2"><a href="#Changes_to_Packages_Spec"><span class="tocnumber">1.5</span> <span class="toctext">Changes to Packages Spec</span></a> 
          <ul> 
           <li class="toclevel-3"><a href="#Changes_to_Package_Dependencies"><span class="tocnumber">1.5.1</span> <span class="toctext">Changes to Package Dependencies</span></a></li> 
          </ul> </li> 
         <li class="toclevel-2"><a href="#Prior_Art"><span class="tocnumber">1.6</span> <span class="toctext">Prior Art</span></a></li> 
        </ul> </li> 
      </ul> 
     </div> 
     <h1 id="packages_registry"><span class="mw-headline" id="Packages.2FRegistry">Packages/Registry</span></h1> 
     <p>This specification describes a method for identifying package descriptors by a combination of name, version, and registry base URL.</p> 
     <p>A package registry is considered “CommonJS Compliant package registry” if it implements the API described in this specification.</p> 
     <p>The “client” refers to a package.json-aware system that uses a CommonJS Compliant package registry to locate packages.</p> 
     <h2 id="scope"><span class="mw-headline" id="Scope">Scope</span></h2> 
     <p>This API <em>only</em> describes identifying and locating packages. It specifically does not describe the mechanisms by which packages are added <em>to</em> the registry. It is assumed that each registry may implement different mechanisms for user authentication, package acceptance, package removal, and so on.</p> 
     <p>Furthermore, this specification <em>only</em> dictates the behavior for the URLs it describes. Any URL which is not a valid registry root url, package root url, or package version url, is not defined by this specification.</p> 
     <p>This API does not assume any particular implementation technology.</p> 
     <h2 id="http_request_method_and_headers"><span class="mw-headline" id="HTTP_Request_Method_and_Headers">HTTP Request Method and Headers</span></h2> 
     <p>HTTP GET is the only method required for consuming the data in a package registry. Registries MAY use other methods for entering data into the registry, authenticating user accounts, and so on, but that is outside the scope of this specification.</p> 
     <p>Clients SHOULD send an Accept header of <code>application/json</code>. Behavior of the registry in the presence of other Accept headers is undefined. For instance, a Compliant registry MAY send an HTML document description of a package if given the Accept value of <code>text/html</code>, or it MAY send JSON in all cases.</p> 
     <p>Registries MUST send responses with an <code>application/json</code> Content-Type if the client sends an Accept header value of <code>application/json</code>.</p> 
     <h2 id="http_errors"><span class="mw-headline" id="HTTP_Errors">HTTP Errors</span></h2> 
     <p>In the case of errors, registries SHOULD still send any response body in the form of valid JSON with an <code>error</code> member, and optionally any other useful information. For instance:</p> 
     <pre>HTTP/1.1 404 Object Not Found
Content-Length: 52

{"error":"not found","reason":"document not found"}
</pre> 
     <p>Registries MAY send back an empty response body, but any response body that is sent MUST be valid JSON.</p> 
     <h2 id="urls"><span class="mw-headline" id="URLs">URLs</span></h2> 
     <p>The following classes of urls are described:</p> 
     <ul> 
      <li>registry root url</li> 
      <li>package root url</li> 
      <li>package version url</li> 
     </ul> 
     <h3 id="registry_root_url"><span class="mw-headline" id="registry_root_url">registry root url</span></h3> 
     <p>Examples: <code><a rel="nofollow" class="external free" href="http://registry.npmjs.org/">http://registry.npmjs.org/</a></code> <code><a rel="nofollow" class="external free" href="http://js.packag.es/registry/">http://js.packag.es/registry/</a></code></p> 
     <p>The root URL is the base of the package registry. Given this url, a name, and a version, a package can be uniquely identified, assuming it exists in the registry.</p> 
     <p>When requested, the registry root URL SHOULD return a list of packages in the registry in the form of a hash of package names to package root descriptors.</p> 
     <p>The package root descriptor MUST be either: an Object that would be valid for the “package root url” contents for the named package, or a string URL that should be used as the <code>package root url</code>.</p> 
     <p>In the case of a string URL, it MAY refer to a different registry. In that case, a request for <code>{registry root url}/{package name}</code> SHOULD be EITHER a 301 or 302 redirect to the same URL as named in the string value, OR a valid “package root url” response.</p> 
     <p>The following would be a valid response for the package root url at <code><a rel="nofollow" class="external free" href="http://example.com/">http://example.com/</a></code>.</p> 
     <pre>{ "foo"&nbsp;: "http://foo.com/package/versions/foo"
, "quux"&nbsp;: "http://example.com/quux"
, "asdf"&nbsp;: "http://example.com/-/third-party/asdf"
, "bar"&nbsp;:
  { "name"&nbsp;: "bar"
  , "maintainers"&nbsp;: [ { "name"&nbsp;: "isaacs", "email"&nbsp;: "i@izs.me" } ]
  , "mtime": "2010-08-29T23:10:47Z"
  , "versions"&nbsp;: { "1.0.0"&nbsp;: "http://example.com/bar/1.0.0" }
  }
, "baz"&nbsp;:
  { "name"&nbsp;: "baz"
  , "versions"&nbsp;:
	{ "1.0.0"&nbsp;:
	  { "name"&nbsp;: "baz"
	  , "version"&nbsp;: "1.0.0"
	  , "main"&nbsp;: "./lib/baz.js"
	  , "description"&nbsp;: "The bazziest!"
	  , "dist"&nbsp;: { "tarball"&nbsp;: "http://example.com/-/baz-1.0.0.tgz" }
	  }
	}
  }
}
</pre> 
     <p>The “foo” package is a redirect to another registry. The “quux” package is served from the typical URL on this registry, but not listed in the registry root response. The “asdf” package is served from this registry, but at a different URL. The “bar” package lists top-level information but supplies a URL for specific versions. The “baz” package lists top-level information as well as package descriptors for specific versions.</p> 
     <h3 id="package_root_url"><span class="mw-headline" id="package_root_url">package root url</span></h3> 
     <p>The package root url is the base URL where a client can get top-level information about a package and all of the versions known to the registry.</p> 
     <p>A valid “package root url” response MUST be returned when the client requests <code>{registry root url}/{package name}</code></p> 
     <h4 id="redirection"><span class="mw-headline" id="Redirection">Redirection</span></h4> 
     <p>The package root URL SHOULD be found at <code>{registry root url}/{package name}</code>. If the registry would rather proxy to a different URL for a specific package, then it MUST respond with a 301 or 302 status code and a Location header to the desired address. It MAY send a JSON response body with a “location” field containing the intended location. For example, requesting <code><a rel="nofollow" class="external free" href="http://example.com/foo">http://example.com/foo</a></code> in the previous example might return this:</p> 
     <pre>HTTP 1.1/302 Found
Location: http://foo.com/package/versions/foo
Content-Type: application/json
Content-Length: 54

{ "location"&nbsp;: "http://foo.com/package/versions/foo" }
</pre> 
     <p>Redirection may also be used within the same host if the registry wishes to serve package root information from a different location than <code>{registry root url}/{package name}</code>.</p> 
     <h4 id="package_root_object"><span class="mw-headline" id="Package_Root_Object">Package Root Object</span></h4> 
     <p>The root object that describes all versions of a package MUST be a JSON object with the following fields:</p> 
     <ul> 
      <li>name: The name of the package. When both are decoded, this MUST match the “package name” portion of the URL. That is, packages with irregular characters in their names would be URL-Encoded in the request, and JSON-encoded in the data. So, a request to <code>/%C3%A7%C2%A5%C3%A5%C3%B1%C3%AE%E2%88%82%C3%A9</code> would show a package root object with “\u00e7\u00a5\u00e5\u00f1\u00ee\u2202\u00e9” as the name, and would refer to the “ç¥åñî?é” project.</li> 
      <li>versions: An object hash of version identifiers to valid “package version url” responses: either URL strings or package descriptor objects.</li> 
     </ul> 
     <p>The following fields are optional, and thus MAY be present in the package root response. If they are present, then they MUST have the meanings described:</p> 
     <ul> 
      <li>mtime: The last modified time of the package root object, expressed as an ISO String.</li> 
      <li>ctime: The creation time of the package root object, expressed as an ISO String.</li> 
      <li>maintainers: An array of identifiers of package registry users who maintain the package described.</li> 
      <li>repository: The repository where the project source is managed. This SHOULD match the repository field on the most recently published version of the package.</li> 
      <li>url: A URL where the package root object can be found. (This is largely unnecessary in the case of requesting a package root object directly, but can be helpful with abbreviated package root objects are returned in the registry root response.)</li> 
      <li>description: A description of the project. This SHOULD match the description field on the most recently published version of the package.</li> 
     </ul> 
     <h3 id="package_version_url"><span class="mw-headline" id="package_version_url">package version url</span></h3> 
     <p>The package version url is the base URL where a client can get package descriptor information about a specific version of a package.</p> 
     <p>A valid “package version url” response MUST be returned when the client requests <code>{registry root url}/{package name}/{package version}</code></p> 
     <h4 id="redirection"><span class="mw-headline" id="Redirection_2">Redirection</span></h4> 
     <p>The package version URL SHOULD be found at <code>{registry root url}/{package name}/{package version}</code>. If the registry would rather proxy to a different URL for a specific package version, then it MUST respond with a 301 or 302 status code and a Location header to the desired address. It MAY send a JSON response body with a “location” field containing the intended location. For example, requesting <code><a rel="nofollow" class="external free" href="http://example.com/foo/1.0.0">http://example.com/foo/1.0.0</a></code> in the previous example might return this:</p> 
     <pre>HTTP 1.1/302 Found
Location: http://foo.com/package/versions/foo/1.0.0
Content-Type: application/json
Content-Length: 60

{ "location"&nbsp;: "http://foo.com/package/versions/foo/1.0.0" }
</pre> 
     <p>Redirection may also be used within the same host if the registry wishes to serve package root information from a different location than <code>{registry root url}/{package name}/{package version}</code>.</p> 
     <p><strong>Note</strong>: In this example, the “foo” package root was served on a different registry. If that registry is also a CommonJS Compliant Package Registry, then tacking <code>/1.0.0</code> onto the package root URL would be a valid package version url.</p> 
     <h4 id="package_version_object"><span class="mw-headline" id="Package_Version_Object">Package Version Object</span></h4> 
     <p>The Package Version Object is almost identical to the Package Descriptor object described in the CommonJS Packages specification. For the purposes of the package registry, the following fields are required. Note that some of these do not exist in the Packages specification.</p> 
     <ul> 
      <li>name: The package name. This MUST match the <code>{package name}</code> portion of the URL.</li> 
      <li>version: The package version. This MUST match the <code>{package version}</code> portion of the URL.</li> 
      <li>dist: An object hash with urls of where the package archive can be found. The key is the type of archive. At the moment the following archive types are supported, but more may be added in the future: 
       <ul> 
        <li>tarball: A url to a gzipped tar archive containing a single folder with the package contents (including the package.json file in the root of said folder)</li> 
       </ul></li> 
     </ul> 
     <h2 id="changes_to_packages_spec"><span class="mw-headline" id="Changes_to_Packages_Spec">Changes to Packages Spec</span></h2> 
     <p>Besides the addition of fields to the Package Version Object, this addition to the Packages spec imposes the following restrictions on the “name” and “version” fields:</p> 
     <ol> 
      <li>MUST NOT start with “-“</li> 
      <li>MUST NOT contain any “/” characters</li> 
      <li>MUST NOT be “.” or “..”</li> 
      <li>SHOULD contain only URL-safe characters</li> 
     </ol> 
     <p>This makes it simpler for package names and versions to map to a URL scheme. Since they may not start with “-“, this makes it possible for registry owners to “escape” from the package registry on the same hostname.</p> 
     <p>For example, a package registry owner might wish to serve the tarball for “foo” version 1.0.0 from <code><a rel="nofollow" class="external free" href="http://example.com/foo/-/foo-1.0.0.tgz">http://example.com/foo/-/foo-1.0.0.tgz</a></code>. Since <code>-</code> is never a valid version, this will not be interpreted as a request for package data. (See “Scope” above.)</p> 
     <h3 id="changes_to_package_dependencies"><span class="mw-headline" id="Changes_to_Package_Dependencies">Changes to Package Dependencies</span></h3> 
     <p>The package <code>dependencies</code> hash may now be augmented with information about which registry is to be queried for matching dependencies. A <code>registry</code> field may be provided:</p> 
     <ol> 
      <li>at the top level of the package.json descriptor</li> 
      <li>individually for each dependency. In this case, the dependency name is the key, and the value is an object with “version” and “registry” strings.</li> 
     </ol> 
     <p>If a registry is provided, then it MUST be the registry root url of a CommonJS Compliant Package Registry. If provided, clients SHOULD query this registry for package data. If not provided, then clients MAY default to any or no registry URL.</p> 
     <p>For example:</p> 
     <pre>{ "name"&nbsp;: "foo"
, "registry"&nbsp;: "http://example.com/registry/"
, "dependencies"&nbsp;:
  { "bar"&nbsp;: "1.0.2"
  , "baz"&nbsp;:
    { "version"&nbsp;: "1.2.3"
    , "registry"&nbsp;: "http://baz.com/packages/"
    }
  }
}
</pre> 
     <h2 id="prior_art"><span class="mw-headline" id="Prior_Art">Prior Art</span></h2> 
     <ul> 
      <li>npm Registry <a rel="nofollow" class="external free" href="http://registry.npmjs.org/">http://registry.npmjs.org/</a></li> 
     </ul> 
     <!-- 
NewPP limit report
CPU time usage: 0.020 seconds
Real time usage: 0.021 seconds
Preprocessor visited node count: 31/1000000
Preprocessor generated node count: 134/1000000
Post?expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
--> 
     <!-- Saved in parser cache with key wiki_commonjs:pcache:idhash:529-0!*!*!!en!*!* and timestamp 20170917043344 and revision id 5936
 --> 
    </div> 
    <div class="printfooter">
      Retrieved from "
     <a dir="ltr" href="http://wiki.commonjs.org/index.php?title=Packages/Registry&amp;oldid=5936">http://wiki.commonjs.org/index.php?title=Packages/Registry&amp;oldid=5936</a>" 
    </div> 
    <div id="catlinks" class="catlinks catlinks-allhidden"></div> 
    <div class="visualClear"></div> 
   </div> 
  </div> 
  <div id="mw-navigation"> 
   <h2>Navigation menu</h2> 
   <div id="mw-head"> 
    <div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label"> 
     <h3 id="p-personal-label">Personal tools</h3> 
     <ul> 
      <li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Packages%2FRegistry" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
      <li id="pt-createaccount"><a href="/wiki/Special:RequestAccount">Request account</a></li> 
     </ul> 
    </div> 
    <div id="left-navigation"> 
     <div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label"> 
      <h3 id="p-namespaces-label">Namespaces</h3> 
      <ul> 
       <li id="ca-nstab-main" class="selected"><span><a href="/wiki/Packages/Registry" title="View the content page [c]" accesskey="c">Page</a></span></li> 
       <li id="ca-talk"><span><a href="/wiki/Talk:Packages/Registry" title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li> 
      </ul> 
     </div> 
     <div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label"> 
      <h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3> 
      <div class="menu"> 
       <ul> 
       </ul> 
      </div> 
     </div> 
    </div> 
    <div id="right-navigation"> 
     <div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label"> 
      <h3 id="p-views-label">Views</h3> 
      <ul> 
       <li id="ca-view" class="selected"><span><a href="/wiki/Packages/Registry">Read</a></span></li> 
       <li id="ca-viewsource"><span><a href="/index.php?title=Packages/Registry&amp;action=edit" title="This page is protected.
You can view its source [e]" accesskey="e">View source</a></span></li> 
       <li id="ca-history" class="collapsible"><span><a href="/index.php?title=Packages/Registry&amp;action=history" title="Past revisions of this page [h]" accesskey="h">View history</a></span></li> 
      </ul> 
     </div> 
     <div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label"> 
      <h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3> 
      <div class="menu"> 
       <ul> 
       </ul> 
      </div> 
     </div> 
     <div id="p-search" role="search"> 
      <h3> <label for="searchInput">Search</label> </h3> 
      <form action="/index.php" id="searchform"> 
       <div id="simpleSearch"> 
        <input type="search" name="search" placeholder="Search" title="Search CommonJS Spec Wiki [f]" accesskey="f" id="searchInput">
        <input type="hidden" value="Special:Search" name="title">
        <input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton">
        <input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchButton" class="searchButton"> 
       </div> 
      </form> 
     </div> 
    </div> 
   </div> 
   <div id="mw-panel"> 
    <div id="p-logo" role="banner">
     <a class="mw-wiki-logo" href="/wiki/CommonJS" title="Visit the main page"></a>
    </div> 
    <div class="portal" role="navigation" id="p-navigation" aria-labelledby="p-navigation-label"> 
     <h3 id="p-navigation-label">Navigation</h3> 
     <div class="body"> 
      <ul> 
       <li id="n-mainpage"><a href="/wiki/CommonJS" title="Visit the main page [z]" accesskey="z">CommonJS</a></li> 
       <li id="n-implementations"><a href="/wiki/Implementations">Implementations</a></li> 
       <li id="n-FAQ"><a href="/wiki/FAQ">FAQ</a></li> 
       <li id="n-Mailing-List"><a href="http://groups.google.com/group/commonjs" rel="nofollow">Mailing List</a></li> 
       <li id="n-IRC"><a href="irc://irc.freenode.net/commonjs" rel="nofollow">IRC</a></li> 
       <li id="n-IRC-Via-Mochabot"><a href="http://log.serverjs.org/mochabot/join" rel="nofollow">IRC Via Mochabot</a></li> 
       <li id="n-IRC-Logs"><a href="http://log.server-side-javascript.org/mochabot/" rel="nofollow">IRC Logs</a></li> 
       <li id="n-CommonJS.org"><a href="http://commonjs.org/" rel="nofollow">CommonJS.org</a></li> 
       <li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li> 
       <li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li> 
      </ul> 
     </div> 
    </div> 
    <div class="portal" role="navigation" id="p-tb" aria-labelledby="p-tb-label"> 
     <h3 id="p-tb-label">Tools</h3> 
     <div class="body"> 
      <ul> 
       <li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Packages/Registry" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li> 
       <li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Packages/Registry" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li> 
       <li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li> 
       <li id="t-print"><a href="/index.php?title=Packages/Registry&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li> 
       <li id="t-permalink"><a href="/index.php?title=Packages/Registry&amp;oldid=5936" title="Permanent link to this revision of the page">Permanent link</a></li> 
       <li id="t-info"><a href="/index.php?title=Packages/Registry&amp;action=info">Page information</a></li> 
       <li id="t-smwbrowselink"><a href="/wiki/Special:Browse/Packages-2FRegistry" rel="smw-browse">Browse properties</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div id="footer" role="contentinfo"> 
   <ul id="footer-info"> 
    <li id="footer-info-lastmod"> This page was last modified on 24 April 2014, at 20:28.</li> 
    <li id="footer-info-viewcount">This page has been accessed 5,764 times.</li> 
   </ul> 
   <ul id="footer-places"> 
    <li id="footer-places-privacy"><a href="/wiki/CommonJS:Privacy_policy" title="CommonJS:Privacy policy">Privacy policy</a></li> 
    <li id="footer-places-about"><a href="/wiki/CommonJS:About" title="CommonJS:About">About CommonJS Spec Wiki</a></li> 
    <li id="footer-places-disclaimer"><a href="/wiki/CommonJS:General_disclaimer" title="CommonJS:General disclaimer">Disclaimers</a></li> 
   </ul> 
   <ul id="footer-icons" class="noprint"> 
    <li id="footer-poweredbyico"> <a href="//www.mediawiki.org/"><img src="/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31"></a> <a href="https://www.semantic-mediawiki.org/wiki/Semantic_MediaWiki"><img src="/extensions/SemanticMediaWiki/includes/../resources/images/smw_button.png" alt="Powered by Semantic MediaWiki" width="88" height="31"></a> </li> 
   </ul> 
   <div style="clear:both"></div> 
  </div> 
  <script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script>
  <script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script> 
  <script>if(window.mw){
mw.loader.load(["ext.smw.tooltips","mediawiki.toc","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest"],null,true);
}</script> 
  <script>if(window.mw){
document.write("\u003Cscript src=\"http://wiki.commonjs.org/load.php?debug=false\u0026amp;lang=en\u0026amp;modules=site\u0026amp;only=scripts\u0026amp;skin=vector\u0026amp;*\"\u003E\u003C/script\u003E");
}</script> 
  <script>if(window.mw){
mw.config.set({"wgBackendResponseTime":123});
}</script>   
 </body>
</html>