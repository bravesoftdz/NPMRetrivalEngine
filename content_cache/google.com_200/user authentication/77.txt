<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
 <head> 
  <meta content="text/html; charset=utf-8" http-equiv="content-type"> 
  <title>django-secure-js-login 0.3a0 : Python Package Index</title> 
  <meta content=""> 
  <meta content="JavaScript Challenge-handshake authentication django app"> 
  <link rel="alternate" type="application/rss+xml" title="RSS: 40 latest updates" href="https://pypi.python.org/pypi?:action=rss"> 
  <link rel="alternate" type="application/rss+xml" title="RSS: 40 newest packages" href="https://pypi.python.org/pypi?:action=packages_rss"> 
  <link rel="stylesheet" media="screen" href="/static/styles/screen-switcher-default.css" type="text/css"> 
  <link media="screen" href="/static/styles/netscape4.css" type="text/css" rel="stylesheet"> 
  <link media="print" href="/static/styles/print.css" type="text/css" rel="stylesheet"> 
  <link media="screen" href="/static/styles/largestyles.css" type="text/css" rel="alternate stylesheet" title="large text"> 
  <link media="screen" href="/static/styles/defaultfonts.css" type="text/css" rel="alternate stylesheet" title="default fonts"> 
  <link rel="stylesheet" media="screen" href="/static/css/docutils.css" type="text/css"> 
  <link rel="stylesheet" media="screen" href="/static/css/pygments.css" type="text/css"> 
  <!-- allow pypi to override the standard pydotorg/docutils/etc. styles --> 
  <link rel="stylesheet" href="/static/css/pypi.css" type="text/css"> 
  <link media="screen" rel="stylesheet" href="/static/css/pypi-screen.css" type="text/css"> 
  <meta name="google-site-verification" content="NSgF04qslVV4P7nymxJDSkWVK09zfdPTxgZfU3dNSoQ"> 
  <meta name="description" content="JavaScript Challenge-handshake authentication django app"> 
  <link rel="meta" title="DOAP" type="application/rdf+xml" href="/pypi?:action=doap&amp;name=django-secure-js-login&amp;version=0.3a0"> 
  <style type="text/css">
  table.form th {white-space: pre;}
 </style> 
  <style type="text/css">
       </style> 
 </head> 
 <body> 
  <!--  Logo  --> 
  <h1 id="logoheader"> <a accesskey="1" href="http://www.python.org" id="logolink"> <img src="/static/images/python-logo.png" alt="homepage" border="0" id="logo"> </a> </h1> 
  <!--  Skip to Navigation  --> 
  <div class="skiptonav">
   <a accesskey="2" href="#left-hand-navigation"><img src="/static/images/trans.gif" alt="skip to navigation" border="0" id="skiptonav"></a>
  </div> 
  <div class="skiptonav">
   <a accesskey="3" href="#content-body"><img src="/static/images/trans.gif" alt="skip to content" border="0" id="skiptocontent"></a>
  </div> 
  <!--  Utility Menu  --> 
  <div id="utility-menu"> 
   <!--  Search Box  --> 
   <div id="searchbox"> 
    <form id="searchform" method="get" name="searchform" action="/pypi"> 
     <input type="hidden" name=":action" value="search"> 
     <div id="search"> 
      <input class="input-text" id="term" name="term" autofocus> 
      <input class="input-button" type="submit" name="submit" value="search" id="submit"> 
     </div> 
    </form> 
   </div> 
   <!-- XXX: reinstate this       <div id="screen-switcher"></div> --> 
  </div> 
  <div id="left-hand-navigation"> 
   <!--  Main Menu NEED LEVEL TWO HEADER AND FOOTER --> 
   <div id="menu"> 
    <ul class="level-one"> 
     <li class="selected"> <a class="selected" href="/pypi">Package Index</a> 
      <ul class="level-two"> 
       <li class=""><a class="" href="/pypi?%3Aaction=browse">Browse&nbsp;packages</a></li> 
       <li class=""><a class="" href="/pypi?%3Aaction=list_classifiers">List&nbsp;trove&nbsp;classifiers</a></li> 
       <li class=""><a class="" href="/pypi?%3Aaction=rss">RSS&nbsp;(latest&nbsp;40&nbsp;updates)</a></li> 
       <li class=""><a class="" href="/pypi?%3Aaction=packages_rss">RSS&nbsp;(newest&nbsp;40&nbsp;packages)</a></li> 
       <li><a href="/tos">Terms of Service</a></li> 
       <li><a href="http://wiki.python.org/moin/CheeseShopTutorial">PyPI Tutorial</a></li> 
       <li><a href="/security">PyPI Security</a></li> 
       <li><a href="http://sourceforge.net/tracker/?group_id=66150&amp;atid=513504">PyPI Support</a></li> 
       <li><a href="https://github.com/pypa/pypi-legacy/issues">PyPI Bug Reports</a></li> 
       <li><a href="http://www.python.org/sigs/distutils-sig/">PyPI Discussion</a></li> 
       <li><a href="http://wiki.python.org/moin/CheeseShopDev">PyPI Developer Info</a></li> 
      </ul> </li> 
     <li class=""><a href="http://www.python.org/about" class="" title="About The Python Language">About</a> </li>
     <li class=""><a href="http://www.python.org/news" class="" title="">News</a> </li>
     <li class=""><a href="http://www.python.org/doc" class="" title="">Documentation</a> </li>
     <li class=""><a href="http://www.python.org/download" title="">Download</a> </li>
     <li class=""><a href="http://www.python.org/community" class="" title="">Community</a> </li>
     <li class=""><a href="http://www.python.org/psf" class="" title="Python Software Foundation">Foundation</a> </li>
     <li class=""><a href="http://www.python.org/dev" class="" title="Python Core Language Development">Core Development</a> </li> 
    </ul> 
   </div> 
  </div> 
  <div id="content-body"> 
   <div id="body-main"> 
    <div id="content"> 
     <div id="breadcrumb"> 
      <a href="/pypi">Package Index</a> 
      <span class="breadcrumb-separator">&gt;</span> 
      <a href="/pypi/django-secure-js-login">django-secure-js-login</a> 
      <span class="breadcrumb-separator">&gt;</span> 
      <a href="/pypi/django-secure-js-login/0.3a0">0.3a0</a> 
     </div> 
     <div id="document-floating"> 
      <div id="document-navigation" style="overflow-y: auto; max-height: 15em; overflow-x: hidden;"> 
       <h4>Not Logged In</h4> 
       <ul> 
        <li><a href="/pypi?%3Aaction=login_form">Login</a></li> 
        <li><a href="/pypi?%3Aaction=register_form">Register</a></li> 
        <li><a href="/pypi?%3Aaction=forgotten_password_form">Lost Login?</a></li> 
        <li><a href="/openid_login">Login with OpenID</a> <a style="border: none;" href="/openid_login?provider=Launchpad"><img width="16" height="16" alt="Launchpad" src="https://launchpad.net/@@/launchpad.png" title="Launchpad"></a> </li> 
        <li><a href="/google_login">Login with Google<img width="16" height="16" src="https://www.google.com/favicon.ico" title="Google Login" alt="Google Login"></a></li> 
       </ul> 
       <div id="statusdiv"> 
       </div> 
      </div> 
     </div> 
     <div class="section"> 
      <h1>django-secure-js-login 0.3a0</h1> 
      <div id="download-button"> 
       <a class="button green" style="float:right;" href="#downloads">Downloads ?</a> 
      </div> 
      <p style="font-style: italic">JavaScript Challenge-handshake authentication django app</p> 
      <p>JavaScript Challenge-handshake authentication django app.</p> 
      <table> 
       <colgroup> 
        <col> 
        <col> 
       </colgroup> 
       <tbody> 
        <tr>
         <td><img src="https://travis-ci.org/jedie/django-secure-js-login.svg"> </td> 
         <td><a href="https://travis-ci.org/jedie/django-secure-js-login/" rel="nofollow">travis-ci.org/jedie/django-secure-js-login</a></td> 
        </tr> 
        <tr>
         <td><img src="https://coveralls.io/repos/jedie/django-secure-js-login/badge.svg"> </td> 
         <td><a href="https://coveralls.io/r/jedie/django-secure-js-login" rel="nofollow">coveralls.io/r/jedie/django-secure-js-login</a></td> 
        </tr> 
        <tr>
         <td><img src="https://landscape.io/github/jedie/django-secure-js-login/master/landscape.svg"> </td> 
         <td><a href="https://landscape.io/github/jedie/django-secure-js-login/master" rel="nofollow">landscape.io/github/jedie/django-secure-js-login/master</a></td> 
        </tr> 
       </tbody> 
      </table> 
      <p>First: The Secure-JS-Login is not a simple <em>“send username + PBKDF2-SHA(password)”</em> It is more a <a href="http://en.wikipedia.org/wiki/Challenge-handshake_authentication_protocol" rel="nofollow">Challenge-handshake authentication protocol</a>!</p> 
      <div id="status"> 
       <h2>Status</h2> 
       <p>Current implementation used the new Web Cryptography API:</p> 
       <ul> 
        <li>PBKDF2, deriveBits with SHA-1</li> 
       </ul> 
       <p>So, not every browser/OS combination will work.</p> 
       <p>Just try <a href="https://diafygi.github.io/webcrypto-examples/" rel="nofollow">https://diafygi.github.io/webcrypto-examples/</a> with your preferred browser/OS.</p> 
       <p>Some browser information’s:</p> 
       <p><strong>Firefox</strong> support everything in “newer” version. The <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/crypto" rel="nofollow">MDN Window.crypto</a> page doesn’t contains a minimum version number. e.g.: <strong>v31.0esr</strong> doesn’t support crypto. <strong>v38.0esr</strong> is needed.</p> 
       <p>Google <strong>chrome</strong> and <strong>Chromium</strong> is not supported on platforms using NSS for their crypto (Linux and ChromeOS). So on Windows is may work, but not tested, yet. This will be solved in future versions of Chrome, see also: <a href="https://www.chromium.org/blink/webcrypto" rel="nofollow">https://www.chromium.org/blink/webcrypto</a> …and it seems that WebCrypt is only available with <strong>https</strong>, see: <a href="https://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features" rel="nofollow">https://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features</a></p> 
       <p>Apple <strong>Safari</strong> should be supported, but not tested, yet.</p> 
       <p><strong>IE11</strong> has window.msCrypto but doesn’t provide promise <tt>.then()</tt> / <tt>.catch()</tt> It used the outdated <tt>.oncomplete()</tt> / <tt>.onerror()</tt> Maybe a work-a-round is possible. Pull request are welcome ;) The new <strong>Edge</strong> browser in Windows 10 maybe supported.</p> 
       <div id="time-based-one-time-password-totp"> 
        <h3>Time-based One-time Password (TOTP)</h3> 
        <p>Optional: Two-way verification with Time-based One-time Password (TOTP) specified in <a href="https://tools.ietf.org/html/rfc6238" rel="nofollow">RFC 6238</a>.</p> 
        <p>Clients, e.g:</p> 
        <ul> 
         <li><a href="https://github.com/google/google-authenticator" rel="nofollow">https://github.com/google/google-authenticator</a></li> 
         <li><a href="https://github.com/markmcavoy/androidtoken" rel="nofollow">https://github.com/markmcavoy/androidtoken</a></li> 
        </ul> 
        <p>Python Packages used:</p> 
        <ul> 
         <li><a href="https://pypi.python.org/pypi/django-otp" rel="nofollow">https://pypi.python.org/pypi/django-otp</a></li> 
         <li><a href="https://pypi.python.org/pypi/PyQRCode" rel="nofollow">https://pypi.python.org/pypi/PyQRCode</a></li> 
        </ul> 
       </div> 
      </div> 
      <div id="switch-from-pbkdf2-to-scrypt"> 
       <h2>switch from PBKDF2 to scrypt ?</h2> 
       <p>existing solutions:</p> 
       <p><a href="https://pypi.python.org/pypi/django-scrypt/" rel="nofollow">https://pypi.python.org/pypi/django-scrypt/</a> that used <a href="https://pypi.python.org/pypi/scrypt/" rel="nofollow">https://pypi.python.org/pypi/scrypt/</a></p> 
       <p>But both projects sleeps?</p> 
      </div> 
      <div id="the-procedure"> 
       <h2>The procedure:</h2> 
       <div id="save-a-new-user-password"> 
        <h3>Save a new user password:</h3> 
        <p>client browser / JavaScript part:</p> 
        <pre>#. user input a password
</pre> 
        <ol> 
         <li><tt>init_pbkdf2_salt = SHA1(random data)</tt></li> 
         <li><tt>pbkdf2_hash = <span class="pre">pbkdf2("Plain</span> Password", salt=init_pbkdf2_salt)</tt></li> 
         <li>Client send <strong>init_pbkdf2_salt</strong> and <strong>pbkdf2_hash</strong> to the server</li> 
        </ol> 
        <p>Server part:</p> 
        <ol> 
         <li>Server split <strong>pbkdf2_hash</strong> into: <strong>first_pbkdf2_part</strong> and <strong>second_pbkdf2_part</strong></li> 
         <li><tt>encrypted_part = xor_encrypt(first_pbkdf2_part, key=second_pbkdf2_part)</tt></li> 
         <li>Save only <strong>encrypted_part</strong> and given <strong>init_pbkdf2_salt</strong> from client</li> 
        </ol> 
       </div> 
       <div id="login-client-browser-javascript-part"> 
        <h3>Login - client browser / JavaScript part:</h3> 
        <ol> 
         <li><p>Use request login</p> </li> 
         <li><p>server send html login form with a random <strong>server_challenge</strong> value</p> </li> 
         <li><p>User enters his <strong>username</strong> and <strong>password</strong></p> </li> 
         <li><p>Ajax Request the <strong>init_pbkdf2_salt</strong> from server with the given <strong>username</strong></p> </li> 
         <li><p>generate the auth data:</p> 
          <blockquote> 
           <ol> 
            <li><tt>pbkdf2_temp_hash = <span class="pre">pbkdf2("Plain</span> Password", init_pbkdf2_salt)</tt></li> 
            <li>split <strong>pbkdf2_temp_hash</strong> into <strong>first_pbkdf2_part</strong> and <strong>second_pbkdf2_part</strong></li> 
            <li><tt>cnonce = SHA512(random data)</tt></li> 
            <li><tt>pbkdf2_hash = pbkdf2(first_pbkdf2_part, salt=cnonce + server_challenge)</tt></li> 
           </ol> 
          </blockquote> </li> 
         <li><p>send <strong>pbkdf2_hash</strong>, <strong>second_pbkdf2_part</strong> and <strong>cnonce</strong> to the server</p> </li> 
        </ol> 
        <div id="validation-on-the-server"> 
         <h4>validation on the server</h4> 
         <ol> 
          <li>client POST data: <strong>pbkdf2_hash</strong>, <strong>second_pbkdf2_part</strong> and <strong>cnonce</strong></li> 
          <li>get transmitted <strong>server_challenge</strong> value from session</li> 
          <li>get <strong>encrypted_part</strong> and <strong>salt</strong> from database via given <strong>username</strong></li> 
          <li><tt>first_pbkdf2_part = xor_decrypt(encrypted_part, key=second_pbkdf2_part)</tt></li> 
          <li><tt>test_hash = pbkdf2(first_pbkdf2_part, key=cnonce + server_challenge)</tt></li> 
          <li>compare <strong>test_hash</strong> with transmitted <strong>pbkdf2_hash</strong></li> 
         </ol> 
        </div> 
       </div> 
       <div id="secure"> 
        <h3>secure?</h3> 
        <p>Secure-JS-Login is not really secure in comparison to https! e.g. the client can’t validate if he really communicate with the server or with a <a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack" rel="nofollow">Man-in-the-middle attack</a>.</p> 
        <p>However the used procedure is safer than plain-text authentication. In addition, on the server no plain-text passwords are stored. With the data that are stored on the server, can not be used alone.</p> 
        <p>If you have <a href="http://en.wikipedia.org/wiki/HTTPS" rel="nofollow">https</a>, you can combine it with Secure-JS-Login, similar to combine a digest auth with https.</p> 
        <p>More information: <a href="http://www.pylucid.org/permalink/35/warum-js-sha-login-sinn-macht" rel="nofollow">Warum Secure-JS-Login Sinn macht…</a> (german only, sorry)</p> 
       </div> 
       <div id="why"> 
        <h3>why?</h3> 
        <p>Many, if not even all CMS/wiki/forum, used unsecure Login. User name and password send in <strong>plaintext</strong> over the Internet. A reliable solution offers only <a href="http://en.wikipedia.org/wiki/HTTPS" rel="nofollow">https</a>.</p> 
        <p>The Problem: No Provider offers secured HTTP connection for little money :(</p> 
       </div> 
       <div id="alternative-solutions"> 
        <h3>alternative solutions</h3> 
        <ul> 
         <li><p><a href="http://en.wikipedia.org/wiki/Digest_access_authentication" rel="nofollow">Digest access authentication</a> (implementation in django exist: <a href="http://bitbucket.org/akoha/django-digest/wiki/Home" rel="nofollow">django-digest</a>):</p> 
          <blockquote> 
           <ul> 
            <li><p>pro</p> 
             <blockquote> 
              <ul> 
               <li>Browser implemented it, so no additional JavaScript needed</li> 
              </ul> 
             </blockquote> </li> 
            <li><p>cons</p> 
             <blockquote> 
              <ul> 
               <li>Password hash must be saved on the server, without any salt! The hash can be used for login, because: <tt>hash = MD5(username:realm:password)</tt></li> 
               <li>used old MD5 hash</li> 
              </ul> 
             </blockquote> </li> 
           </ul> 
          </blockquote> </li> 
        </ul> 
       </div> 
      </div> 
      <div id="tryout"> 
       <h2>tryout</h2> 
       <p>e.g.:</p> 
       <pre>~ $ virtualenv secure-js-login-env
~ $ cd secure-js-login-env
~/secure-js-login-env $ source bin/activate

# install secure-js-login as "editable" to have access to example project server and unittests:

(secure-js-login-env)~/secure-js-login-env $ pip install -e git+git://github.com/jedie/django-secure-js-login.git#egg=django-secure-js-login

run example project server:
{{{
(secure-js-login-env)~/secure-js-login-env $ cd src/django-secure-js-login/
(secure-js-login-env)~/secure-js-login-env/src/django-secure-js-login $ ./run_example_server.sh
</pre> 
       <p><strong>Note:</strong> The <a href="https://github.com/jedie/django-secure-js-login/tree/master/example_project" rel="nofollow">example_project</a> is only for local tests! It’s insecure configured and used some hacks!</p> 
       <p>run inittests:</p> 
       <pre>(secure-js-login-env)~/secure-js-login-env/src/django-secure-js-login $ ./runtests.py
</pre> 
       <p>to run the Live-Server-Tests, install <a href="https://pypi.python.org/pypi/selenium" rel="nofollow">selenium</a> e.g.:</p> 
       <pre>(secure-js-login-env)~/secure-js-login-env/src/django-secure-js-login $ pip install selenium
(secure-js-login-env)~/secure-js-login-env/src/django-secure-js-login $ ./runtests.py
</pre> 
      </div> 
      <div id="signals"> 
       <h2>signals</h2> 
       <p>On every failed Secure-JS-Login a signal will be send. To use this signal, e.g.:</p> 
       <pre>import sys
from secure_js_login.signals import secure_js_login_failed

def log_failed_login_handler(sender, reason, **kwargs):
    """ Just print the reason to stderr """
    print("Secure-JS-Login failed: %s" % reason, file=sys.stderr)

secure_js_login_failed.connect(log_failed_login_handler)
</pre> 
      </div> 
      <div id="usage"> 
       <h2>usage</h2> 
       <p><strong>settings.py</strong>:</p> 
       <pre>INSTALLED_APPS = (
    #...
    "secure_js_login.honypot",
    "secure_js_login",
)

AUTHENTICATION_BACKENDS=(
    'secure_js_login.auth_backends.SecureLoginAuthBackend',
    'django.contrib.auth.backends.ModelBackend',
    #...
)

DEBUG=False # Otherwise the user will see detailed information if login failed!

# use 'User.set_password' monkey-patch in models.py for create password hashes:
AUTO_CREATE_PASSWORD_HASH = True
</pre> 
       <p><strong>urls.py</strong>:</p> 
       <pre>from secure_js_login.honypot.urls import urls as honypot_urls
from secure_js_login.urls import urls as secure_js_login_urls

urlpatterns = i18n_patterns('',
    #...
    url(r'^login/', include(honypot_urls)),
    url(r'^secure_login/', include(secure_js_login_urls)),
    url(r'^jsi18n/(?P&lt;packages&gt;\S+?)/$', 'django.views.i18n.javascript_catalog'),
    #...
)
</pre> 
       <p>Complete example: <a href="https://github.com/jedie/django-secure-js-login/blob/master/example_project/example_project/urls.py" rel="nofollow">example_project/urls.py</a></p> 
       <p><strong>templates</strong>:</p> 
       <pre>&lt;a href="{% url 'secure-js-login:login' %}"&gt;secure JS login&lt;/a&gt;
&lt;a href="{% url 'honypot-login:login' %}"&gt;honypot login&lt;/a&gt;
</pre> 
       <p>More interesting example:</p> 
       <pre>&lt;a href="{% url 'honypot-login:login' %}" rel="nofollow" onclick="window.location.href = '{% url 'secure-js-login:login' %}'; return false;"&gt;login&lt;/a&gt;
</pre> 
       <p>After adding secure-js-login create his tables with:</p> 
       <pre>.../your/page $ ./manage.py migrate
</pre> 
       <p><strong>Important:</strong> The secure login will only work, if the user password was set <strong>after</strong> adding ‘secure_js_login’ to your project!</p> 
       <div id="troubleshooting"> 
        <h3>Troubleshooting</h3> 
        <div id="logging-debug-information"> 
         <h4>logging/debug information</h4> 
         <p>Turn on <strong>settings.DEBUG</strong> to see detailed error messages on failed login.</p> 
         <p>You can also use <a href="https://docs.djangoproject.com/en/1.7/topics/logging/" rel="nofollow">logging</a>. The app will use the logger name <strong>secure_js_login</strong>, e.g.:</p> 
         <pre>LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'secure_js_login.log',
        },
    },
    'loggers': {
        'secure_js_login': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
</pre> 
         <p>A console logging example can be found here: <a href="https://github.com/jedie/django-secure-js-login/blob/master/example_project/example_project/settings.py" rel="nofollow">example_project/settings.py</a></p> 
        </div> 
        <div id="after-login-404-or-redirect-to-accounts-profile"> 
         <h4>After login: 404 or redirect to “/accounts/profile/”</h4> 
         <p>You didn’t change the default <a href="https://docs.djangoproject.com/en/1.7/ref/settings/#login-redirect-url" rel="nofollow">settings.LOGIN_REDIRECT_URL</a></p> 
        </div> 
        <div id="login-error-profile-for-user-yourusername-doesn-t-exists"> 
         <h4>Login error: “Profile for user ‘YourUsername’ doesn’t exists!”</h4> 
         <p>The user exist, but the password was not set <strong>after</strong> adding ‘secure_js_login’ to your project! Just change the user password. e.g.: on console:</p> 
         <pre>.../your/page $ ./manage.py changepassword YourUsername
</pre> 
         <p>…or use the normal django admin login and set the password there.</p> 
        </div> 
        <div id="login-error-authenticate-check-failed"> 
         <h4>Login error: “authenticate() check failed.”</h4> 
         <p>Check, if you add <strong>‘secure_js_login.auth_backends.SecureLoginAuthBackend’</strong> to <strong>AUTHENTICATION_BACKENDS</strong>, see above!</p> 
        </div> 
       </div> 
      </div> 
      <div id="version-compatibility"> 
       <h2>Version compatibility</h2> 
       <table> 
        <colgroup> 
         <col> 
         <col> 
         <col> 
        </colgroup> 
        <thead> 
         <tr>
          <th>secure-js-login</th> 
          <th>Django</th> 
          <th>Python</th> 
         </tr> 
        </thead> 
        <tbody> 
         <tr>
          <td>&gt;=v0.1.0</td> 
          <td>v1.7, v1.8</td> 
          <td>v2.7, v3.4</td> 
         </tr> 
        </tbody> 
       </table> 
       <p>(These are the unittests variants. See <a href="https://github.com/jedie/django-secure-js-login/blob/master/.travis.yml" rel="nofollow">.travis.yml</a>, maybe other versions are compatible, too.)</p> 
      </div> 
      <div id="changelog"> 
       <h2>changelog</h2> 
       <ul> 
        <li><p>v0.3.alpha0 - 26.7.2015</p> 
         <blockquote> 
          <ul> 
           <li>use Browser Web Cryptography API (instead of pure JavaScript SHA/PBKDF2 implementation)</li> 
           <li>Add optional: Two-way verification with Time-based One-time Password (TOTP) specified in RFC 6238.</li> 
           <li>increase default PBKDF2 iteration (TODO: test on Raspberry Pi 1 !)</li> 
           <li>check cnonce against replay attacks</li> 
           <li>refactor validation process</li> 
           <li>fire signal on failed login with a ‘reason’ message</li> 
           <li>Display detailed form errors, if settings.DEBUG is on else: only a common message</li> 
          </ul> 
         </blockquote> </li> 
        <li><p>v0.2.0 - 10.05.2015:</p> 
         <blockquote> 
          <ul> 
           <li>increase default PBKDF2 iteration after test on a Raspberry Pi 1</li> 
           <li>more unitests</li> 
           <li>Honypot login raise “normal” form errors</li> 
           <li>code cleanup</li> 
           <li>Docu update</li> 
          </ul> 
         </blockquote> </li> 
        <li><p>v0.1.0 - 06.05.2015:</p> 
         <blockquote> 
          <ul> 
           <li>initial release as reuseable app</li> 
           <li>Use PBKDF2 (pure JavaScript Implementation)</li> 
          </ul> 
         </blockquote> </li> 
        <li><p>03.05.2015:</p> 
         <blockquote> 
          <ul> 
           <li>Split from <a href="https://github.com/jedie/PyLucid/tree/7ee6f8312e7ade65ff3604eb9eab810c26c43ccb/pylucid_project/pylucid_plugins/auth" rel="nofollow">PyLucid CMS ‘auth’ plugin</a></li> 
          </ul> 
         </blockquote> </li> 
        <li><p>03.2010:</p> 
         <blockquote> 
          <ul> 
           <li><a href="http://www.python-forum.de/viewtopic.php?p=163746#p163746" rel="nofollow">Use ajax request via jQuery</a> (de)</li> 
          </ul> 
         </blockquote> </li> 
        <li><p>11.07.2007:</p> 
         <blockquote> 
          <ul> 
           <li><a href="http://www.python-forum.de/viewtopic.php?p=72926#p72926" rel="nofollow">New SHA challenge response procedure</a> (de)</li> 
          </ul> 
         </blockquote> </li> 
        <li><p>01.06.2005:</p> 
         <blockquote> 
          <ul> 
           <li><a href="http://www.python-forum.de/viewtopic.php?f=5&amp;t=3345" rel="nofollow">first implementation of a MD5 login in PyLucid</a> (de)</li> 
          </ul> 
         </blockquote> </li> 
       </ul> 
      </div> 
      <div id="info-links"> 
       <h2>info links</h2> 
       <ul> 
        <li><p>Python-Forum Threads (de):</p> 
         <blockquote> 
          <ul> 
           <li><a href="http://www.python-forum.de/viewtopic.php?f=7&amp;t=22163" rel="nofollow">Digest auth als Alternative?</a> (03.2010)</li> 
           <li><a href="http://www.python-forum.de/viewtopic.php?f=3&amp;t=8180" rel="nofollow">Sinn oder Unsinn des PyLucids Secure-JS-Login…</a> (12.2006)</li> 
           <li><a href="http://www.python-forum.de/topic-8182.html" rel="nofollow">Wie Session-Hijacking verhindern?</a> (12.2006)</li> 
          </ul> 
         </blockquote> </li> 
        <li><p><a href="https://groups.google.com/forum/#!topic/de.comp.lang.python/jAbfc26Bg_k" rel="nofollow">Diskussion auf de.comp.lang.python</a> (08.2006)</p> </li> 
       </ul> 
      </div> 
      <div id="project-links"> 
       <h2>project links</h2> 
       <table> 
        <colgroup> 
         <col> 
         <col> 
        </colgroup> 
        <tbody> 
         <tr>
          <td>Github</td> 
          <td><a href="https://github.com/jedie/django-secure-js-login" rel="nofollow">https://github.com/jedie/django-secure-js-login</a></td> 
         </tr> 
         <tr>
          <td>Python Packages</td> 
          <td><a href="https://pypi.python.org/pypi/django-secure-js-login/" rel="nofollow">https://pypi.python.org/pypi/django-secure-js-login/</a></td> 
         </tr> 
         <tr>
          <td>Travis CI</td> 
          <td><a href="https://travis-ci.org/jedie/django-secure-js-login/" rel="nofollow">https://travis-ci.org/jedie/django-secure-js-login/</a></td> 
         </tr> 
         <tr>
          <td>Coveralls</td> 
          <td><a href="https://coveralls.io/r/jedie/django-secure-js-login" rel="nofollow">https://coveralls.io/r/jedie/django-secure-js-login</a></td> 
         </tr> 
        </tbody> 
       </table> 
      </div> 
      <div id="contact"> 
       <h2>contact</h2> 
       <p>Come into the conversation, besides the github communication features:</p> 
       <table> 
        <colgroup> 
         <col> 
         <col> 
        </colgroup> 
        <tbody> 
         <tr>
          <td>IRC</td> 
          <td>#pylucid on freenode.net (Yes, the PyLucid channel…)</td> 
         </tr> 
         <tr>
          <td>webchat</td> 
          <td><a href="http://webchat.freenode.net/?channels=pylucid" rel="nofollow">http://webchat.freenode.net/?channels=pylucid</a></td> 
         </tr> 
        </tbody> 
       </table> 
      </div> 
      <div id="donation"> 
       <h2>donation</h2> 
       <ul> 
        <li><a href="https://flattr.com/submit/auto?uid=jedie&amp;url=https%3A%2F%2Fgithub.com%2Fjedie%2Fdjango-secure-js-login%2F" rel="nofollow">Flattr This!</a></li> 
        <li>Send <a href="http://www.bitcoin.org/" rel="nofollow">Bitcoins</a> to <a href="https://blockexplorer.com/address/1823RZ5Md1Q2X5aSXRC5LRPcYdveCiVX6F" rel="nofollow">1823RZ5Md1Q2X5aSXRC5LRPcYdveCiVX6F</a></li> 
       </ul> 
      </div> 
      <a name="downloads">&nbsp;</a> 
      <table class="list" style="margin-bottom: 10px;"> 
       <tbody>
        <tr> 
         <th>File</th> 
         <th>Type</th> 
         <th>Py Version</th> 
         <th>Uploaded on</th> 
         <th style="text-align: right;">Size</th> 
        </tr> 
        <tr class="odd"> 
         <td> <span style="white-space: nowrap;"> <a href="https://pypi.python.org/packages/26/23/9d1d41238166246e8e34ea7620588909f815ba08978a70122ecf22439b1b/django-secure-js-login-0.3a0.tar.gz#md5=0414c4ab47407cd6634994a6ba7733f4">django-secure-js-login-0.3a0.tar.gz</a> (<a title="MD5 Digest" href="/pypi?:action=show_md5&amp;digest=0414c4ab47407cd6634994a6ba7733f4">md5</a>) </span> </td> 
         <td style="white-space: nowrap;"> Source </td> 
         <td> </td> 
         <td>2015-07-26</td> 
         <td style="text-align: right;">58KB</td> 
        </tr> 
        <tr class="even"> 
         <td> <span style="white-space: nowrap;"> <a href="https://pypi.python.org/packages/62/3d/99c8881ece31b3099d7b61d040264e8b29f1800053fe4afcf573b489d5d8/django_secure_js_login-0.3a0-py2.py3-none-any.whl#md5=a4dc13bbb53f6a072bdb8899a1474ef5">django_secure_js_login-0.3a0-py2.py3-none-any.whl</a> (<a title="MD5 Digest" href="/pypi?:action=show_md5&amp;digest=a4dc13bbb53f6a072bdb8899a1474ef5">md5</a>) </span> </td> 
         <td style="white-space: nowrap;"> Python Wheel </td> 
         <td> py2.py3 </td> 
         <td>2015-07-26</td> 
         <td style="text-align: right;">90KB</td> 
        </tr> 
        <tr class="odd"> 
         <td> <span style="white-space: nowrap;"> <a href="https://pypi.python.org/packages/c0/9f/71eda2c2eed52f9388ae1f9c48b6c31067731e752a9b110f0db6eefabd9c/django_secure_js_login-0.3a0-py3.4.egg#md5=cecedfedd7f80bd7b79016c307e80d0a">django_secure_js_login-0.3a0-py3.4.egg</a> (<a title="MD5 Digest" href="/pypi?:action=show_md5&amp;digest=cecedfedd7f80bd7b79016c307e80d0a">md5</a>) </span> </td> 
         <td style="white-space: nowrap;"> Python Egg </td> 
         <td> 3.4 </td> 
         <td>2015-07-26</td> 
         <td style="text-align: right;">70KB</td> 
        </tr> 
        <tr>
         <td id="last" colspan="6"></td>
        </tr> 
       </tbody>
      </table> 
      <ul class="nodot"> 
       <li> <strong>Author:</strong> <span>Jens Diemer</span> </li> 
       <!-- The <th> elements below are a terrible terrible hack for setuptools --> 
       <li> <strong>Home Page:</strong> 
        <!-- <th>Home Page --> <a href="https://github.com/jedie/django-secure-js-login">https://github.com/jedie/django-secure-js-login</a> </li> 
       <!-- TODO: add link to products in follow dependencies... --> 
       <li> <strong>Categories</strong> 
        <ul class="nodot"> 
         <li> <a href="/pypi?:action=browse&amp;c=3">Development Status :: 3 - Alpha</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=21">Environment :: Web Environment</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=523">Framework :: Django</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=30">Intended Audience :: Developers</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=64">License :: OSI Approved :: GNU General Public License (GPL)</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=156">Operating System :: OS Independent</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=196">Programming Language :: JavaScript</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=214">Programming Language :: Python</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=258">Topic :: Database :: Front-Ends</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=302">Topic :: Documentation</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=328">Topic :: Internet :: WWW/HTTP :: Dynamic Content</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=335">Topic :: Internet :: WWW/HTTP :: Site Management</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=507">Topic :: Internet :: WWW/HTTP :: WSGI :: Application</a> </li> 
        </ul> </li> 
       <li> <strong>Requires Distributions</strong> 
        <ul class="nodot"> 
         <li> <a href="https://pypi.python.org/pypi/Django">Django (&gt;=1.7,&lt;1.9)</a> </li> 
         <li> <a href="https://pypi.python.org/pypi/django-otp">django-otp (&gt;=0.3.1,&lt;0.4)</a> </li> 
        </ul> </li> 
       <li> <strong>Package Index Owner:</strong> <span>pylucid</span> </li> 
       <li> <strong><a href="https://github.com/edumbill/doap/wiki">DOAP</a> record:</strong> <a href="/pypi?:action=doap&amp;name=django-secure-js-login&amp;version=0.3a0">django-secure-js-login-0.3a0.xml</a> </li> 
      </ul> 
     </div> 
    </div> 
    <div id="footer"> 
     <div id="credits"> 
      <div style="float: left; margin-right: 1em;" id="badges"> 
       <img src="https://img.shields.io/badge/ipv6-go!-green.svg" alt="ipv6 ready" title="ipv6 ready" border="0">
       <br> 
       <img src="https://img.shields.io/badge/http2-go!-green.svg" alt="http2 ready" title="http2 ready" border="0">
       <br> 
       <img src="/static/images/PythonPoweredAnimSmall.gif" alt="darn right it is" title="Python Powered" border="0"> 
      </div> 
      <div style="float: right" id="donations"> 
       <a href="http://www.python.org/about/website">Website maintained by the Python community</a>
       <br> 
       <a href="https://www.fastly.com/" title="Real-time CDN services provided by Fastly">Real-time CDN by Fastly</a> / 
       <a href="http://developer.rackspace.com/" title="Server hosting by Rackspace Open Source support">Hosting by Rackspace</a>
       <br> 
       <a href="https://aws.amazon.com/s3/" title="Object storage provided by Amazon S3">Object storage by Amazon S3</a> / 
       <a href="http://www.timparkin.co.uk/" title="Design by Tim Parkin, Yorkshire man, photographer and developer">Design by Tim Parkin</a> 
      </div> 
     </div> Copyright © 1990-2017, 
     <a href="http://www.python.org/psf">Python Software Foundation</a>
     <br> 
     <a href="https://pypi.org/policy/terms-of-use/">Terms of Use</a> 
    </div> 
   </div> 
  </div> 
  <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-55961911-1', 'auto');
        ga('require', 'linkid', 'linkid.js');
        ga('send', 'pageview');
      </script> 
  <script type="text/javascript" src="//statuspage-production.s3.amazonaws.com/se-v2.js">
      </script> 
  <script type="text/javascript">
        var sp = new StatusPage.page({ page : '2p66nmmycsj3' });
        sp.summary({
          // <![CDATA[
          success: function(data) {
            var div = document.getElementById('statusdiv');
            var reports = "</br><h4 id='statusbox'>Status</h4>\n";
            var outage = 0;
            var maintenance = 0;
            for (i in data.incidents) {
              var incident = data.incidents[i];
              var message, status = incident.status;
              if (status === 'scheduled') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' scheduled.</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status === 'in_progress') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' is currently in progress.' + '</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ': ' + incident.status + '</a></li>\n';
                reports += message;
                outage += 1;
              }
            }
            for (i in data.scheduled_maintenances) {
              var incident = data.scheduled_maintenances[i];
              var message, status = incident.status;
              if (status === 'scheduled') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' scheduled.</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status === 'in_progress') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' is currently in progress.' + '</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ': ' + incident.status + '</a></li>\n';
                reports += message;
                outage += 1;
              }
            }
            if (outage + maintenance === 0) {
              reports += "<li><a href='http://status.python.org'>Nothing to report</a></li>";
            }
            div.innerHTML=reports;
            if (outage > 0) {
              var statusbox = document.getElementById("statusbox");
              statusbox.style.background = '#FC234A';
            }
          }
          // ]]>
        });
      </script>   
 </body>
</html>