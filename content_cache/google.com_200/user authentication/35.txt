<!doctype html>
<html lang="en">
 <head> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <meta property="og:site_name" content="Monsanto Engineering Blog"> 
  <meta property="og:title" content="Easy Node Authentication With Ping"> 
  <meta property="og:description" content="Introduction to ping-passport-oauth2, a Ping OAuth 2.0 authentication strategy for Passport."> 
  <meta property="og:url" content="http://engineering.monsanto.com/2016/03/11/passport-ping-oauth2/"> 
  <meta property="og:image" content="http://engineering.monsanto.com/img/mon-woodlands.jpg"> 
  <meta name="description" content="Introduction to ping-passport-oauth2, a Ping OAuth 2.0 authentication strategy for Passport."> 
  <link rel="shortcut icon" href="/favicon.ico"> 
  <title>Easy Node Authentication With Ping - Engineering at Monsanto</title> 
  <link rel="canonical" href="http://engineering.monsanto.com/2016/03/11/passport-ping-oauth2/"> 
  <!-- twitter cards --> 
  <meta name="twitter:card" content="summary"> 
  <meta name="twitter:title" content="Easy Node Authentication With Ping"> 
  <meta name="twitter:description" content="Introduction to ping-passport-oauth2, a Ping OAuth 2.0 authentication strategy for Passport."> 
  <meta name="twitter:url" content="http://engineering.monsanto.com/2016/03/11/passport-ping-oauth2/"> 
  <!-- Bootstrap Core CSS --> 
  <link rel="stylesheet" href="/css/bootstrap.min.css"> 
  <!-- Custom CSS --> 
  <link rel="stylesheet" href="/css/clean-blog.min.css"> 
  <link rel="stylesheet" href="/css/scala-colors.min.css"> 
  <!-- Pygments Github CSS --> 
  <link rel="stylesheet" href="/css/syntax.css"> 
  <!-- Custom Fonts --> 
  <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css" rel="stylesheet" type="text/css"> 
  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries --> 
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// --> 
  <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]--> 
  <link rel="alternate" type="application/rss+xml" title="RSS" href="http://engineering.monsanto.com/feed.xml"> 
 </head> 
 <body> 
  <!-- Navigation --> 
  <nav class="navbar navbar-default navbar-custom navbar-fixed-top"> 
   <div class="container-fluid"> 
    <!-- Brand and toggle get grouped for better mobile display --> 
    <div class="navbar-header page-scroll"> 
     <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="navbar-brand" href="/">Engineering at Monsanto</a> 
    </div> 
    <!-- Collect the nav links, forms, and other content for toggling --> 
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1"> 
     <ul class="nav navbar-nav navbar-right"> 
      <li> <a href="/">Home</a> </li> 
      <li> <a href="/about/">About</a> </li> 
      <li> <a href="/careers/">Careers</a> </li> 
      <li> <a href="/code/">Code</a> </li> 
      <li> <a href="/contact/">Contact</a> </li> 
     </ul> 
    </div> 
    <!-- /.navbar-collapse --> 
   </div> 
   <!-- /.container --> 
  </nav> 
  <!-- Post Header --> 
  <header class="intro-header" style="background-image: url('/img/mon-woodlands.jpg')"> 
   <div class="heading-underlay"> 
    <div class="container"> 
     <div class="row"> 
      <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1"> 
       <div class="post-heading"> 
        <h1>Easy Node Authentication With Ping</h1> 
        <h2 class="subheading">Passport Module To Easily Handle Ping's OAuth and OpenID Connect Services</h2> 
        <span class="meta">Posted by Brenden McKamey on March 11, 2016</span> 
       </div> 
      </div> 
     </div> 
    </div> 
   </div> 
  </header> 
  <!-- Post Content --> 
  <article> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1 post-body"> 
      <h1 id="easy-node-authentication-with-ping">Easy Node Authentication With Ping</h1> 
      <h2 id="introduction">Introduction</h2> 
      <p>Adding authentication and login capability in Node can be painful. The purpose of this tutorial is to showcase the capabilities of <a href="https://github.com/MonsantoCo/passport-ping-oauth2">passport-ping-oauth2</a> within a basic Node application, and it will teach you how to leverage the module within your own Node applications.</p> 
      <p>If you don’t already have Node.js installed, you will need it, and you can install it <a href="https://nodejs.org/en/">here</a>.</p> 
      <h3 id="note">Note</h3> 
      <p>If you don’t have <a href="https://www.pingidentity.com/en/products/pingfederate.html">PingFederate</a> in your environment, but you’d still like to learn about authentication in Node. I’d highly recommend using these <a href="https://scotch.io/courses/easy-node-authentication">tutorials</a> instead.</p> 
      <h3 id="what-well-be-building">What we’ll be building:</h3> 
      <p>We will build an application that will allow you to leverage a PingFederate OAuth client to handle user authentication and the storage of the corresponding OpenID Connect data.</p> 
      <h3 id="end-product-sneak-peek">End Product Sneak Peek:</h3> 
      <p>A basic login screen that of course uses Ping.</p> 
      <p><img src="/img/passport-ping-oauth2-login.png" alt="Login Screen"></p> 
      <p>After a user has logged in, they’ll be able to see their OpenID Connect profile data:</p> 
      <p><img src="/img/passport-ping-oauth2-profile.png" alt="Profile Screen"></p> 
      <p>That’s it, pretty simple! So let’s dive in.</p> 
      <h2 id="application-structure">Application Structure</h2> 
      <div class="language-sh highlighter-rouge">
       <pre class="highlight"><code>- app
------ models
------------ user.js
------ routes.js
- config
------ auth.js
------ database.js
------ passport.js
- views
------ pages
------------ index.ejs
------------ profile.ejs
------ partials
------------ header.ejs
app.json
index.js
package.json
</code></pre> 
      </div> 
      <p>Go ahead and create all the files and folders above and we’ll fill them in as we go along.</p> 
      <h2 id="packages">Packages</h2> 
      <h6 id="packagejson">package.json</h6> 
      <p>This file handles all the packages needed for our application.</p> 
      <div class="language-json highlighter-rouge">
       <pre class="highlight"><code><span class="p">{</span><span class="w"> </span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"PingPassportTutorial"</span><span class="p">,</span><span class="w"> </span><span class="nt">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Easy Node Authentication With Ping."</span><span class="p">,</span><span class="w"> </span><span class="nt">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.1.5"</span><span class="p">,</span><span class="w"> </span><span class="nt">"keywords"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"passport"</span><span class="p">,</span><span class="w"> </span><span class="s2">"auth"</span><span class="p">,</span><span class="w"> </span><span class="s2">"authn"</span><span class="p">,</span><span class="w"> </span><span class="s2">"authentication"</span><span class="p">,</span><span class="w"> </span><span class="s2">"authz"</span><span class="p">,</span><span class="w"> </span><span class="s2">"authorization"</span><span class="p">,</span><span class="w"> </span><span class="s2">"oauth"</span><span class="p">,</span><span class="w"> </span><span class="s2">"oauth2"</span><span class="p">,</span><span class="w"> </span><span class="s2">"ping"</span><span class="p">],</span><span class="w"> </span><span class="nt">"main"</span><span class="p">:</span><span class="w"> </span><span class="s2">"index.js"</span><span class="p">,</span><span class="w"> </span><span class="nt">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nt">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"node index.js"</span><span class="w"> </span><span class="p">},</span><span class="w"> </span><span class="nt">"dependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nt">"ejs"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2.3.3"</span><span class="p">,</span><span class="w"> </span><span class="nt">"express"</span><span class="p">:</span><span class="w"> </span><span class="s2">"4.13.3"</span><span class="p">,</span><span class="w"> </span><span class="nt">"mongoose"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="nt">"passport"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="nt">"passport-ping-oauth2"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="nt">"connect-flash"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="nt">"bcrypt-nodejs"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="nt">"morgan"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="nt">"body-parser"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="nt">"cookie-parser"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="nt">"method-override"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="nt">"express-session"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="w"> </span><span class="p">},</span><span class="w"> </span><span class="nt">"engines"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nt">"node"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.12.7"</span><span class="w"> </span><span class="p">},</span><span class="w"> </span><span class="nt">"repository"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nt">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"git"</span><span class="p">,</span><span class="w"> </span><span class="nt">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://github.com/exampleuser/examplerepo"</span><span class="w"> </span><span class="p">},</span><span class="w"> </span><span class="nt">"keywords"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">"passport"</span><span class="p">,</span><span class="w"> </span><span class="s2">"auth"</span><span class="p">,</span><span class="w"> </span><span class="s2">"authn"</span><span class="p">,</span><span class="w"> </span><span class="s2">"authentication"</span><span class="p">,</span><span class="w"> </span><span class="s2">"authz"</span><span class="p">,</span><span class="w"> </span><span class="s2">"authorization"</span><span class="p">,</span><span class="w"> </span><span class="s2">"oauth"</span><span class="p">,</span><span class="w"> </span><span class="s2">"oauth2"</span><span class="p">,</span><span class="w"> </span><span class="s2">"ping"</span><span class="w"> </span><span class="p">],</span><span class="w"> </span><span class="nt">"license"</span><span class="p">:</span><span class="w"> </span><span class="s2">"MIT"</span><span class="w"> </span><span class="p">}</span><span class="w"> </span></code></pre> 
      </div> 
      <p>Most of these are pretty self-explanatory; however, here is a list of the dependencies and the functionality they provide.</p> 
      <ul> 
       <li>EJS is a client-side templating language.</li> 
       <li>Express is a web development framework for node.js.</li> 
       <li>Mongoose is an object modeling tool designed to work in an asynchronous environment.</li> 
       <li>Passport is authentication middleware for Node.js.</li> 
       <li>Connect-flash is flash message middleware for Connect and Express.</li> 
      </ul> 
      <h2 id="application-setup">Application Setup</h2> 
      <h6 id="indexjs">index.js</h6> 
      <p>This file will be the glue for our entire application.</p> 
      <div class="language-js highlighter-rouge">
       <pre class="highlight"><code><span class="kd">var</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'express'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>
<span class="kd">var</span> <span class="nx">mongoose</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'mongoose'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">passport</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'passport'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">flash</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'connect-flash'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">morgan</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'morgan'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">cookieParser</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'cookie-parser'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">bodyParser</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'body-parser'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">session</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'express-session'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">configDB</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'./config/database.js'</span><span class="p">);</span>

<span class="nx">mongoose</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">configDB</span><span class="p">.</span><span class="nx">url</span><span class="p">);</span>

<span class="nx">require</span><span class="p">(</span><span class="s1">'./config/passport'</span><span class="p">)(</span><span class="nx">passport</span><span class="p">);</span>

<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">morgan</span><span class="p">(</span><span class="s1">'dev'</span><span class="p">));</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">cookieParser</span><span class="p">());</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">bodyParser</span><span class="p">());</span>

<span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'port'</span><span class="p">,</span> <span class="p">(</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">PORT</span> <span class="o">||</span> <span class="mi">5000</span><span class="p">));</span>

<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="kr">static</span><span class="p">(</span><span class="nx">__dirname</span> <span class="o">+</span> <span class="s1">'/public'</span><span class="p">));</span>

<span class="c1">// views is directory for all template files</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'views'</span><span class="p">,</span> <span class="nx">__dirname</span> <span class="o">+</span> <span class="s1">'/views'</span><span class="p">);</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">'view engine'</span><span class="p">,</span> <span class="s1">'ejs'</span><span class="p">);</span>

<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">session</span><span class="p">({</span> <span class="na">secret</span><span class="p">:</span> <span class="s1">'tutorialsecret'</span> <span class="p">}));</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">passport</span><span class="p">.</span><span class="nx">initialize</span><span class="p">());</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">passport</span><span class="p">.</span><span class="nx">session</span><span class="p">());</span>
<span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">flash</span><span class="p">());</span>

<span class="nx">require</span><span class="p">(</span><span class="s1">'./app/routes.js'</span><span class="p">)(</span><span class="nx">app</span><span class="p">,</span> <span class="nx">passport</span><span class="p">);</span>

<span class="nx">app</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'port'</span><span class="p">),</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Node app is running on port'</span><span class="p">,</span> <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'port'</span><span class="p">));</span>
<span class="p">});</span>
</code></pre> 
      </div> 
      <h2 id="database-config">Database Config</h2> 
      <h6 id="configdatabasejs">config/database.js</h6> 
      <div class="language-js highlighter-rouge">
       <pre class="highlight"><code><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>

    <span class="s1">'url'</span> <span class="p">:</span> <span class="s1">'your-settings-here'</span> <span class="c1">// looks like mongodb://&lt;user&gt;:&lt;pass&gt;@mongo.onmodulus.net:27017/Mikha4ot</span>

<span class="p">};</span>
</code></pre> 
      </div> 
      <p>Fill this in with your own database. If you don’t have a MongoDB database lying around, you can install it locally. You can find instructions here: <a href="https://scotch.io/tutorials/an-introduction-to-mongodb">An Introduction to MongoDB</a>.</p> 
      <h2 id="routes">Routes</h2> 
      <h6 id="approutesjs">app/routes.js</h6> 
      <div class="language-js highlighter-rouge">
       <pre class="highlight"><code><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">app</span><span class="p">,</span> <span class="nx">passport</span><span class="p">)</span> <span class="p">{</span>

    <span class="c1">// route for home page</span>
    <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'/'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="s1">'pages/index.ejs'</span><span class="p">);</span> <span class="c1">// load the index.ejs file</span>
    <span class="p">});</span>

    <span class="c1">// route for showing the profile page</span>
	<span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'/profile'</span><span class="p">,</span> <span class="nx">isLoggedIn</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="s1">'pages/profile.ejs'</span><span class="p">,</span> <span class="p">{</span>
            <span class="na">user</span><span class="p">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">user</span><span class="p">,</span>
            <span class="na">flash</span><span class="p">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">session</span><span class="p">.</span><span class="nx">flash</span>
        <span class="p">});</span>
    <span class="p">});</span>

    <span class="c1">// route for logging out</span>
    <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'/logout'</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">req</span><span class="p">.</span><span class="nx">logout</span><span class="p">();</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="s1">'/'</span><span class="p">);</span>
    <span class="p">});</span>

    <span class="c1">// route for signing in</span>
    <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'/auth/oauth2'</span><span class="p">,</span> <span class="nx">passport</span><span class="p">.</span><span class="nx">authenticate</span><span class="p">(</span><span class="s1">'oauth2'</span><span class="p">,</span> <span class="p">{</span>
        <span class="na">scope</span><span class="p">:</span> <span class="p">[</span><span class="s1">'openid'</span><span class="p">,</span> <span class="s1">'profile'</span><span class="p">,</span> <span class="s1">'email'</span><span class="p">]</span>
    <span class="p">}));</span>

    <span class="c1">// route for call back</span>
    <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'/auth/oauth2/callback'</span><span class="p">,</span>
        <span class="nx">passport</span><span class="p">.</span><span class="nx">authenticate</span><span class="p">(</span><span class="s1">'oauth2'</span><span class="p">,</span> <span class="p">{</span>
            <span class="na">failureRedirect</span><span class="p">:</span> <span class="s1">'/login'</span>
        <span class="p">}),</span>
        <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="s1">'/profile'</span><span class="p">);</span>
        <span class="p">});</span>
<span class="p">};</span>

<span class="c1">// route middleware to make sure a user is logged in</span>
<span class="kd">function</span> <span class="nx">isLoggedIn</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>

    <span class="c1">// if user is authenticated in the session, carry on</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">isAuthenticated</span><span class="p">())</span>
        <span class="k">return</span> <span class="nx">next</span><span class="p">();</span>

    <span class="c1">// if they aren't redirect them to the home page</span>
    <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="s1">'/'</span><span class="p">);</span>
<span class="p">}</span>
</code></pre> 
      </div> 
      <h2 id="views">Views</h2> 
      <h6 id="viewspartialsheaderejs">views/partials/header.ejs</h6> 
      <div class="language-html highlighter-rouge">
       <pre class="highlight"><code><span class="nt">&lt;title&gt;</span>My Simple Passport Tutorial<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">type=</span><span class="s">"text/css"</span> <span class="na">href=</span><span class="s">"//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">type=</span><span class="s">"text/css"</span> <span class="na">href=</span><span class="s">"/stylesheets/main.css"</span> <span class="nt">/&gt;</span>
</code></pre> 
      </div> 
      <p>This header file is ported into each of the views, so we add all of our application wide CSS and JS here.</p> 
      <h6 id="viewspagesindexejs">views/pages/index.ejs</h6> 
      <div class="language-html highlighter-rouge">
       <pre class="highlight"><code><span class="cp">&lt;!doctype html&gt;</span>
<span class="nt">&lt;html&gt;</span>

    <span class="nt">&lt;head&gt;</span>
        <span class="err">&lt;</span>% include ../partials/header.ejs %&gt;
    <span class="nt">&lt;/head&gt;</span>

    <span class="nt">&lt;body&gt;</span>
        
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span class="nt">&gt;</span>
        
            <span class="nt">&lt;p&gt;</span>Login with:<span class="nt">&lt;/p&gt;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/auth/oauth2"</span> <span class="na">class=</span><span class="s">"btn btn-primary"</span><span class="nt">&gt;</span> Ping<span class="nt">&lt;/a&gt;</span>
            
        <span class="nt">&lt;/div&gt;</span>

    <span class="nt">&lt;/body&gt;</span>

<span class="nt">&lt;/html&gt;</span>
</code></pre> 
      </div> 
      <p>Just a simple button that points to our route for ‘/auth/oauth2’ and triggers the passport authentication.</p> 
      <h6 id="viewspagesprofileejs">views/pages/profile.ejs</h6> 
      <div class="language-html highlighter-rouge">
       <pre class="highlight"><code><span class="cp">&lt;!doctype html&gt;</span>
<span class="nt">&lt;html&gt;</span>
    <span class="nt">&lt;head&gt;</span>
        <span class="err">&lt;</span>% include ../partials/header.ejs %&gt;
    <span class="nt">&lt;/head&gt;</span>
    <span class="nt">&lt;body&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span class="nt">&gt;</span>
            <span class="err">&lt;</span>% if (flash) { %&gt;
                <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"&lt;%= flash.type %&gt;"</span><span class="nt">&gt;</span>   
                        <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"close"</span> <span class="na">data-dismiss=</span><span class="s">"alert"</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;</span><span class="ni">&amp;times;</span><span class="nt">&lt;/button&gt;</span>   
                        <span class="nt">&lt;p&gt;&lt;strong&gt;</span><span class="err">&lt;</span>%= flash.title %&gt;<span class="nt">&lt;/strong&gt;&lt;/p&gt;</span>
                        <span class="nt">&lt;p&gt;</span><span class="err">&lt;</span>%= flash.messages %&gt;<span class="nt">&lt;/p&gt;</span>
                    <span class="nt">&lt;/div&gt;</span>
                <span class="nt">&lt;/div&gt;</span>
            <span class="err">&lt;</span>% } %&gt;
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"page-header text-center"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;h1&gt;&lt;span</span> <span class="na">class=</span><span class="s">"fa fa-anchor"</span><span class="nt">&gt;&lt;/span&gt;</span> Profile Page<span class="nt">&lt;/h1&gt;</span>
                <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"/logout"</span> <span class="na">class=</span><span class="s">"btn btn-default btn-sm"</span><span class="nt">&gt;</span>Logout<span class="nt">&lt;/a&gt;</span>
            <span class="nt">&lt;/div&gt;</span>

            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3 well"</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;h3</span> <span class="na">class=</span><span class="s">"text-primary"</span><span class="nt">&gt;</span>Ping<span class="nt">&lt;/h3&gt;</span>
                    <span class="nt">&lt;dl&gt;</span>
                        <span class="nt">&lt;dt&gt;</span>ID:<span class="nt">&lt;/dt&gt;</span> <span class="nt">&lt;dd&gt;</span><span class="err">&lt;</span>%= user.ping.id %&gt;<span class="nt">&lt;/dd&gt;</span>
                        <span class="nt">&lt;dt&gt;</span>Email:<span class="nt">&lt;/dt&gt;</span> <span class="nt">&lt;dd&gt;</span><span class="err">&lt;</span>%= user.ping.email %&gt;<span class="nt">&lt;/dd&gt;</span>
                        <span class="nt">&lt;dt&gt;</span>Name:<span class="nt">&lt;/dt&gt;</span> <span class="nt">&lt;dd&gt;</span><span class="err">&lt;</span>%= user.ping.name %&gt;<span class="nt">&lt;/dd&gt;</span>
                        <span class="err">&lt;</span>% if (user.ping.entitlements !== null <span class="err">&amp;&amp;</span> user.ping.entitlements.length &gt; 0) { %&gt;
                            <span class="nt">&lt;dt&gt;</span>Entitlements:<span class="nt">&lt;/dt&gt;</span>
                            <span class="nt">&lt;dd&gt;</span> 
                                <span class="nt">&lt;ul&gt;</span>
                                    <span class="err">&lt;</span>% for (var i = 0; i <span class="nt">&lt; user</span><span class="err">.</span><span class="na">ping</span><span class="err">.</span><span class="na">entitlements</span><span class="err">.</span><span class="na">length</span><span class="err">;</span> <span class="err">++</span><span class="na">i</span><span class="err">)</span> <span class="err">{</span> <span class="err">%</span><span class="nt">&gt;</span>
                                        <span class="nt">&lt;li&gt;</span><span class="err">&lt;</span>%= user.ping.entitlements[i] %&gt;<span class="nt">&lt;/li&gt;</span>
                                    <span class="err">&lt;</span>% } %&gt;
                                <span class="nt">&lt;/ul&gt;</span>
                            <span class="nt">&lt;/dd&gt;</span>
                        <span class="err">&lt;</span>% } %&gt;
                    <span class="nt">&lt;/dl&gt;</span>
                <span class="nt">&lt;/div&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre> 
      </div> 
      <p>A bit more complicated, but you can pass flash messages like this to any of your routes that are setup to handle them.</p> 
      <div class="language-js highlighter-rouge">
       <pre class="highlight"><code><span class="nx">req</span><span class="p">.</span><span class="nx">session</span><span class="p">.</span><span class="nx">flash</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">type</span><span class="p">:</span> <span class="s1">'alert alert-dismissible alert-danger'</span><span class="p">,</span>
    <span class="na">title</span><span class="p">:</span> <span class="s1">'Access Denied'</span><span class="p">,</span>
    <span class="na">messages</span><span class="p">:</span> <span class="s1">'Your access was denied because you do not have an entitlement for this application; however, we'</span><span class="nx">ll</span> <span class="nx">still</span> <span class="nx">show</span> <span class="nx">you</span> <span class="nx">your</span> <span class="nx">profile</span> <span class="nx">data</span><span class="p">.</span><span class="s1">' }; res.redirect(303, '</span><span class="o">/</span><span class="nx">profile</span><span class="err">'</span><span class="p">);</span>
</code></pre> 
      </div> 
      <p>The profile view also renders our database data and loops through the array of entitlements.</p> 
      <h2 id="user-model">User Model</h2> 
      <h6 id="appmodelsuserjs">app/models/user.js</h6> 
      <p>We will be storing <strong>id</strong>, <strong>token</strong>, <strong>email</strong>, <strong>name</strong>, and <strong>entitlements</strong> in our database. Normally there isn’t a need to store the token; however, for demonstration purposes you’ll be able to see how the passport library decrypts and passes the base 64 encoded data back.</p> 
      <div class="language-js highlighter-rouge">
       <pre class="highlight"><code><span class="c1">// app/models/user.js</span>
<span class="c1">// load the things we need</span>
<span class="kd">var</span> <span class="nx">mongoose</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'mongoose'</span><span class="p">);</span>

<span class="c1">// define the schema for our user model</span>
<span class="kd">var</span> <span class="nx">userSchema</span> <span class="o">=</span> <span class="nx">mongoose</span><span class="p">.</span><span class="nx">Schema</span><span class="p">({</span>

    <span class="na">ping</span>         <span class="p">:</span> <span class="p">{</span>
        <span class="na">id</span>           <span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
        <span class="na">token</span>        <span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
        <span class="na">email</span>        <span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
        <span class="na">name</span>         <span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
        <span class="na">entitlements</span> <span class="p">:</span> <span class="p">[</span><span class="nb">String</span><span class="p">]</span>
    <span class="p">}</span>

<span class="p">});</span>

<span class="c1">// create the model for users and expose it to our app</span>
<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">mongoose</span><span class="p">.</span><span class="nx">model</span><span class="p">(</span><span class="s1">'User'</span><span class="p">,</span> <span class="nx">userSchema</span><span class="p">);</span>
</code></pre> 
      </div> 
      <p>You’ll notice that id, token, email, and name are just normal strings, but entitlements is an array of strings.</p> 
      <p>Okay, on to the fun stuff.</p> 
      <h2 id="creating-our-ping-oauth-client">Creating our Ping OAuth Client</h2> 
      <p>First we’re going to create a new OAuth client. After you’ve logged into your PingFederate administration console, click on <strong>OAuth Settings</strong> and then click on <strong>Client Management</strong>.</p> 
      <p><img src="/img/passport-ping-oauth2-client-management.png" alt="Client Management"></p> 
      <p>Add a new client.</p> 
      <p><img src="/img/passport-ping-oauth2-add-client.png" alt="Add Client"></p> 
      <p>You’ll be using settings somewhat like this; however you’ll need your own <strong>Default Access Token Manager</strong> and <strong>OpenID Connect Policy</strong> settings corresponding with your environment data. Remember to save the <strong>Client Secret</strong>!</p> 
      <p><img src="/img/passport-ping-oauth2-client-settings.png" alt="Client Settings"></p> 
      <p>Go here if you need assistance with the <a href="https://documentation.pingidentity.com/display/PF70/Configuring+Reference-Token+Management">Default Access Token Manager</a> or <a href="https://documentation.pingidentity.com/display/PF70/Configuring+OpenID+Connect+Policies#ConfiguringOpenIDConnectPolicies-2022433">OpenID Connect Policy</a>.</p> 
      <p>Okay, that wasn’t too bad, so let’s make it all work with two more files.</p> 
      <h2 id="passport-strategy">Passport Strategy</h2> 
      <h6 id="configauthjs">config/auth.js</h6> 
      <p>Populate your auth.js file appropriately from the Ping Configuration you just completed. It should look something like this, except with your environment specific information:</p> 
      <div class="language-js highlighter-rouge">
       <pre class="highlight"><code><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>

    <span class="s1">'pingAuth'</span> <span class="p">:</span> <span class="p">{</span>
        <span class="s1">'authorizationURL'</span>  <span class="p">:</span> <span class="s1">'https://www.example.com/as/authorization.oauth2'</span><span class="p">,</span>
        <span class="s1">'tokenURL'</span>          <span class="p">:</span> <span class="s1">'https://www.example.com/as/token.oauth2'</span><span class="p">,</span>
        <span class="s1">'clientID'</span>          <span class="p">:</span> <span class="s1">'EXAMPLE_CLIENT_ID'</span><span class="p">,</span>
        <span class="s1">'clientSecret'</span>      <span class="p">:</span> <span class="s1">'EXAMPLE_CLIENT_SECRET'</span><span class="p">,</span>
        <span class="s1">'callbackURL'</span>       <span class="p">:</span> <span class="s1">'http://localhost:5000/auth/oauth2/callback'</span><span class="p">,</span>
    <span class="p">}</span>

<span class="p">};</span>
</code></pre> 
      </div> 
      <h6 id="configpassportjs">config/passport.js</h6> 
      <p>This is the last piece of the puzzle, the file that handles all authentication and data storage.</p> 
      <div class="language-js highlighter-rouge">
       <pre class="highlight"><code><span class="kd">var</span> <span class="nx">passport</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'passport'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">OAuth2Strategy</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'passport-ping-oauth2'</span><span class="p">).</span><span class="nx">Strategy</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">User</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'../app/models/user'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">configAuth</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'./auth'</span><span class="p">);</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">passport</span><span class="p">)</span> <span class="p">{</span>


    <span class="c1">// used to serialize the user for the session</span>
    <span class="nx">passport</span><span class="p">.</span><span class="nx">serializeUser</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">user</span><span class="p">,</span> <span class="nx">done</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">done</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">user</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span>
    <span class="p">});</span>


    <span class="c1">// used to deserialize the user</span>
    <span class="nx">passport</span><span class="p">.</span><span class="nx">deserializeUser</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">done</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">User</span><span class="p">.</span><span class="nx">findById</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">done</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">user</span><span class="p">);</span>
        <span class="p">});</span>
    <span class="p">});</span>


    <span class="nx">passport</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="k">new</span> <span class="nx">OAuth2Strategy</span><span class="p">({</span>
            <span class="na">authorizationURL</span><span class="p">:</span> <span class="nx">configAuth</span><span class="p">.</span><span class="nx">pingAuth</span><span class="p">.</span><span class="nx">authorizationURL</span><span class="p">,</span>
            <span class="na">tokenURL</span><span class="p">:</span> <span class="nx">configAuth</span><span class="p">.</span><span class="nx">pingAuth</span><span class="p">.</span><span class="nx">tokenURL</span><span class="p">,</span>
            <span class="na">clientID</span><span class="p">:</span> <span class="nx">configAuth</span><span class="p">.</span><span class="nx">pingAuth</span><span class="p">.</span><span class="nx">clientID</span><span class="p">,</span>
            <span class="na">clientSecret</span><span class="p">:</span> <span class="nx">configAuth</span><span class="p">.</span><span class="nx">pingAuth</span><span class="p">.</span><span class="nx">clientSecret</span><span class="p">,</span>
            <span class="na">callbackURL</span><span class="p">:</span> <span class="nx">configAuth</span><span class="p">.</span><span class="nx">pingAuth</span><span class="p">.</span><span class="nx">callbackURL</span>
        <span class="p">},</span>
        <span class="kd">function</span><span class="p">(</span><span class="nx">accessToken</span><span class="p">,</span> <span class="nx">refreshToken</span><span class="p">,</span> <span class="nx">params</span><span class="p">,</span> <span class="nx">profile</span><span class="p">,</span> <span class="nx">done</span><span class="p">)</span> <span class="p">{</span>
        
            <span class="nx">User</span><span class="p">.</span><span class="nx">findOne</span><span class="p">({</span> <span class="s1">'ping.id'</span><span class="p">:</span> <span class="nx">profile</span><span class="p">.</span><span class="nx">cn</span> <span class="p">},</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> 
                    <span class="k">return</span> <span class="nx">done</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">if</span> <span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">return</span> <span class="nx">done</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">user</span><span class="p">);</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="kd">var</span> <span class="nx">newUser</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">User</span><span class="p">();</span>
                    <span class="nx">newUser</span><span class="p">.</span><span class="nx">ping</span><span class="p">.</span><span class="nx">id</span>    <span class="o">=</span> <span class="nx">profile</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span>
                    <span class="nx">newUser</span><span class="p">.</span><span class="nx">ping</span><span class="p">.</span><span class="nx">token</span> <span class="o">=</span> <span class="nx">accessToken</span><span class="p">;</span>
                    <span class="nx">newUser</span><span class="p">.</span><span class="nx">ping</span><span class="p">.</span><span class="nx">name</span>  <span class="o">=</span> <span class="nx">profile</span><span class="p">.</span><span class="nx">displayName</span><span class="p">;</span>
                    <span class="nx">newUser</span><span class="p">.</span><span class="nx">ping</span><span class="p">.</span><span class="nx">email</span> <span class="o">=</span> <span class="nx">profile</span><span class="p">.</span><span class="nx">email</span><span class="p">;</span>
                    <span class="nx">newUser</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
                        <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">throw</span> <span class="nx">err</span><span class="p">;</span> <span class="p">}</span>
                            <span class="k">return</span> <span class="nx">done</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">newUser</span><span class="p">);</span>
                    <span class="p">});</span>
                <span class="p">}</span>
            <span class="p">});</span>
        <span class="p">}));</span>
<span class="p">};</span>
</code></pre> 
      </div> 
      <h2 id="run-your-application">Run Your Application!</h2> 
      <p>You should be able to run your application now whether it be locally or running on a server.</p> 
      <p>If you’re running it locally, you’ll need to run <code class="highlighter-rouge">npm install</code> from your root folder and then run <code class="highlighter-rouge">node index.js</code> to launch the application.</p> 
      <p>If you’re running it on a server, deploy the code and run your application from the server.</p> 
      <h2 id="conclusion">Conclusion</h2> 
      <p>You’ve just built a simple application that handles Ping authentication for you and allows your users to seamlessly access your application without the need for them to sign up for another account. Awesome! You can build out your tokens to handle whatever profile data is available to Ping, and you can easily add this library to existing Node applications in order to abstract authentication work away from your application.</p> 
      <h2 id="lastly">Lastly</h2> 
      <p>Hopefully you enjoyed this basic tutorial, and if you have any enhancements for <a href="https://github.com/MonsantoCo/passport-ping-oauth2">passport-ping-oauth2</a> that you would like to contribute, submit a <a href="https://help.github.com/articles/using-pull-requests/">pull request</a>.</p> 
      <div class="post-signature multiple">
        posted on March 11, 2016 by 
       <br> 
       <div class="author"> 
        <img src="https://avatars2.githubusercontent.com/u/14045210?v=3&amp;s=460&amp;s=40"> 
        <span> Brenden McKamey </span> 
        <a href="https://github.com/bsmckamey"> <i class="fa fa-github fa-1x"></i> </a> 
       </div> 
      </div> 
      <hr> 
      <ul class="pager"> 
       <li class="previous"> <a href="/2016/01/29/cf-users/" data-toggle="tooltip" data-placement="top" title="Cloud Foundry User Administration">? Previous Post</a> </li> 
       <li class="next"> <a href="/2017/01/13/github-enterprise-org-explorer/" data-toggle="tooltip" data-placement="top" title="Exploring GitHub Enterprise">Next Post ?</a> </li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </article> 
  <hr> 
  <!-- Footer --> 
  <footer> 
   <div class="container"> 
    <div class="row"> 
     <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1"> 
      <ul class="list-inline text-center"> 
       <li> <a href="https://twitter.com/MonPlatformEng"> <span class="fa-stack fa-lg"> <i class="fa fa-circle fa-stack-2x"></i> <i class="fa fa-twitter fa-stack-1x fa-inverse"></i> </span> </a> </li> 
       <li> <a href="https://www.youtube.com/MonsantoCo"> <span class="fa-stack fa-lg"> <i class="fa fa-circle fa-stack-2x"></i> <i class="fa fa-youtube-square fa-stack-1x fa-inverse"></i> </span> </a> </li> 
       <li> <a href="https://www.facebook.com/MonsantoCo"> <span class="fa-stack fa-lg"> <i class="fa fa-circle fa-stack-2x"></i> <i class="fa fa-facebook fa-stack-1x fa-inverse"></i> </span> </a> </li> 
       <li> <a href="https://github.com/MonsantoCo"> <span class="fa-stack fa-lg"> <i class="fa fa-circle fa-stack-2x"></i> <i class="fa fa-github fa-stack-1x fa-inverse"></i> </span> </a> </li> 
       <li> <a href="/feed.xml"> <span class="fa-stack fa-lg"> <i class="fa fa-circle fa-stack-2x"></i> <i class="fa fa-rss fa-stack-1x fa-inverse"></i> </span> </a> </li> 
      </ul> 
      <p class="copyright text-muted">Copyright © 2017 Engineering at Monsanto &nbsp;|&nbsp; Built with <a href="http://jekyllrb.com/">Jekyll</a> and hosted on <a href="https://pages.github.com/">GitHub Pages</a><br> <a href="/sitemap.xml">Sitemap</a> &nbsp;|&nbsp; <a href="http://www.monsanto.com/legal-notice/Pages/default.aspx">Legal Notice</a> &nbsp;|&nbsp; <a href="http://www.monsanto.com/privacy-policy/Pages/default.aspx">Privacy Policy</a> &nbsp;|&nbsp; <a href="/contact">Contact Us</a> </p> 
      <div align="center">
       <br>
       <img src="/img/Monsanto_logo.jpg " width="170" height="54" border="0">
      </div> 
     </div> 
    </div> 
   </div> 
  </footer> 
  <!-- jQuery --> 
  <script src="/js/jquery.min.js "></script> 
  <!-- Bootstrap Core JavaScript --> 
  <script src="/js/bootstrap.min.js "></script> 
  <!-- Custom Theme JavaScript --> 
  <script src="/js/clean-blog.min.js "></script> 
  <!-- Google Analytics JavaScript --> 
  <script>
if (/monsanto\.com/.test(window.location.hostname)) {
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
              })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-43186905-16', 'auto');
    ga('require', 'displayfeatures');
    ga('send', 'pageview');

    var trackOutboundLink = function(url) {
        ga('send', 'event', 'outbound', 'click', url, {'hitCallback':
                function () {
                    document.location = url;
                }
        });
    }
}
</script> 
  <script src="/js/main.js"></script> 
  <script type="text/javascript">
//<![CDATA[
(function() {
var _analytics_scr = document.createElement('script');
_analytics_scr.type = 'text/javascript'; _analytics_scr.async = true; _analytics_scr.src = '/_Incapsula_Resource?SWJIYLWA=2977d8d74f63d7f8fedbea018b7a1d05&ns=1&cb=535022013';
var _analytics_elem = document.getElementsByTagName('script')[0]; _analytics_elem.parentNode.insertBefore(_analytics_scr, _analytics_elem);
})();
// ]]>
</script>  
 </body>
</html>