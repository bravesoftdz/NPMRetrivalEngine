<!doctype html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
 <head>
  <link rel="stylesheet" type="text/css" href="http://www.pyimagesearch.com/wp-content/cache/minify/05078.css" media="all"> 
  <meta charset="UTF-8"> 
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
  <!-- <link rel="stylesheet" type="text/css" href="http://www.pyimagesearch.com/static/css/header_fix.css" media="all"/> --> 
  <link rel="pingback" href="http://www.pyimagesearch.com/xmlrpc.php"> 
  <link rel="shortcut icon" href="http://www.pyimagesearch.com/wp-content/themes/canvas/favicon.ico"> 
  <!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame --> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
  <!--  Mobile viewport scale --> 
  <meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=yes" name="viewport"> 
  <!-- This site is optimized with the Yoast SEO plugin v4.2.1 - https://yoast.com/wordpress/plugins/seo/ --> 
  <title>Real-time barcode detection in video with Python and OpenCV - PyImageSearch</title> 
  <meta name="description" content="OpenCV and Python code for real-time barcode detection in video. You'll discover the computer vision &amp; image processing behind detecting barcodes in video."> 
  <meta name="robots" content="noodp"> 
  <link rel="canonical" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/"> 
  <meta property="og:locale" content="en_US"> 
  <meta property="og:type" content="article"> 
  <meta property="og:title" content="Real-time barcode detection in video with Python and OpenCV - PyImageSearch"> 
  <meta property="og:description" content="OpenCV and Python code for real-time barcode detection in video. You'll discover the computer vision &amp; image processing behind detecting barcodes in video."> 
  <meta property="og:url" content="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/"> 
  <meta property="og:site_name" content="PyImageSearch"> 
  <meta property="article:tag" content="barcode"> 
  <meta property="article:tag" content="barcode detection"> 
  <meta property="article:tag" content="gradient magnitude"> 
  <meta property="article:tag" content="gradients"> 
  <meta property="article:tag" content="image processing"> 
  <meta property="article:tag" content="magnitude"> 
  <meta property="article:tag" content="scharr"> 
  <meta property="article:tag" content="thresholding"> 
  <meta property="article:tag" content="tutorials"> 
  <meta property="article:tag" content="video processing"> 
  <meta property="article:section" content="Image Processing"> 
  <meta property="article:published_time" content="2014-12-15T10:00:03-04:00"> 
  <meta property="article:modified_time" content="2015-07-10T17:20:36-04:00"> 
  <meta property="og:updated_time" content="2015-07-10T17:20:36-04:00"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_detection.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_video_games.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_coupon.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_02.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_01.jpg"> 
  <meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png"> 
  <!-- / Yoast SEO plugin. --> 
  <link rel="dns-prefetch" href="//a.optnmnstr.com"> 
  <link rel="dns-prefetch" href="//s.w.org"> 
  <link rel="alternate" type="application/rss+xml" title="PyImageSearch » Feed" href="http://feeds.feedburner.com/Pyimagesearch"> 
  <link rel="alternate" type="application/rss+xml" title="PyImageSearch » Comments Feed" href="http://www.pyimagesearch.com/comments/feed/"> 
  <link rel="alternate" type="application/rss+xml" title="PyImageSearch » Real-time barcode detection in video with Python and OpenCV Comments Feed" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/feed/"> 
  <script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2.2.1\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.pyimagesearch.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.7.2"}};
			!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline="top",k.font="600 32px Arial",a){case"flag":return k.fillText(f(55356,56826,55356,56819),0,0),!(j.toDataURL().length<3e3)&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,65039,8205,55356,57096),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57331,55356,57096),0,0),c=j.toDataURL(),b!==c);case"emoji4":return k.fillText(f(55357,56425,55356,57341,8205,55357,56507),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55357,56425,55356,57341,55357,56507),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement("script");c.src=a,c.defer=c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i,j=b.createElement("canvas"),k=j.getContext&&j.getContext("2d");for(i=Array("flag","emoji4"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script> 
  <style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style> 
  <!--[if lt IE 9]>
<link href="http://www.pyimagesearch.com/wp-content/themes/canvas/css/non-responsive.css" rel="stylesheet" type="text/css" />
<style type="text/css">.col-full, #wrapper { width: 960px; max-width: 960px; } #inner-wrapper { padding: 0; } body.full-width #header, #nav-container, body.full-width #content, body.full-width #footer-widgets, body.full-width #footer { padding-left: 0; padding-right: 0; } body.fixed-mobile #top, body.fixed-mobile #header-container, body.fixed-mobile #footer-container, body.fixed-mobile #nav-container, body.fixed-mobile #footer-widgets-container { min-width: 960px; padding: 0 1em; } body.full-width #content { width: auto; padding: 0 1em;}</style>
<![endif]--> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/df983.js"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","ajaxurl":"http:\/\/www.pyimagesearch.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/49ed6.js"></script> 
  <script type="text/javascript" data-cfasync="false" id="omapi-script" async src="//a.optnmnstr.com/app/js/api.min.js?ver=1.1.6.1"></script> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/83e7b.js"></script> 
  <link rel="https://api.w.org/" href="http://www.pyimagesearch.com/wp-json/"> 
  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.pyimagesearch.com/xmlrpc.php?rsd"> 
  <link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.pyimagesearch.com/wp-includes/wlwmanifest.xml"> 
  <meta name="generator" content="WordPress 4.7.2"> 
  <link rel="shortlink" href="http://www.pyimagesearch.com/?p=1669"> 
  <link rel="alternate" type="application/json+oembed" href="http://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.pyimagesearch.com%2F2014%2F12%2F15%2Freal-time-barcode-detection-video-python-opencv%2F"> 
  <link rel="alternate" type="text/xml+oembed" href="http://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.pyimagesearch.com%2F2014%2F12%2F15%2Freal-time-barcode-detection-video-python-opencv%2F&amp;format=xml"> 
  <!-- Theme version --> 
  <meta name="generator" content="Canvas 5.5.7"> 
  <meta name="generator" content="WooFramework 5.5.5"> 
  <!-- Custom CSS Styling --> 
  <style type="text/css">
#logo .site-title, #logo .site-description { display:none; }
body {background-repeat:no-repeat;background-position:top left;background-attachment:scroll;border-top:0px solid #000000;}
#header {background-color:#ffffff;background-repeat:no-repeat;background-position:left top;margin-top:0px;margin-bottom:0px;padding-top:15px;padding-bottom:20px;border:0px solid ;}
#logo .site-title a {font:bold 32px/1em "Helvetica Neue", Helvetica, sans-serif;color:#222222;}
#logo .site-description {font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#999999;}
#header-container{background-color:#ffffff;}#nav-container{background:#169fe6;}#nav-container{border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:none;border-right:none;}#nav-container #navigation ul#main-nav > li:first-child{border-left: 0px solid #dbdbdb;}#footer-widgets-container{background-color:#f0f0f0}#footer-widgets{border:none;}#footer-container{background-color:#169fe6}#footer-container{border-top:0px solid #dbdbdb;}#footer {border-width: 0 !important;}
body, p { font:300 14px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
h1 { font:bold 28px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h2 { font:bold 24px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h3 { font:bold 20px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h4 { font:bold 16px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h5 { font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h6 { font:bold 12px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
.page-title, .post .title, .page .title {font:bold 2.2em/1.1em Arial, sans-serif;color:#3E3E3E;}
.post .title a:link, .post .title a:visited, .page .title a:link, .page .title a:visited {color:#3E3E3E}
.post-meta { font:300 1em/1.5em Arial, sans-serif;color:#3E3E3E; }
.entry, .entry p{ font:300 15px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.post-more {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:;border-top:0px solid #e6e6e6;border-bottom:0px solid #e6e6e6;}
#post-author, #connect {border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6;border-left:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;background-color:#fafafa}
.nav-entries a, .woo-pagination { font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#888; }
.woo-pagination a, .woo-pagination a:hover {color:#888!important}
.widget h3 {font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-bottom:1px solid #e6e6e6;}
.widget_recent_comments li, #twitter li { border-color: #e6e6e6;}
.widget p, .widget .textwidget { font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.widget {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-radius:0px;-moz-border-radius:0px;-webkit-border-radius:0px;}
#tabs .inside li a, .widget_woodojo_tabs .tabbable .tab-pane li a { font:bold 12px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
#tabs .inside li span.meta, .widget_woodojo_tabs .tabbable .tab-pane li span.meta { font:300 11px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
#tabs ul.wooTabs li a, .widget_woodojo_tabs .tabbable .nav-tabs li a { font:300 11px/2em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
@media only screen and (min-width:768px) {
ul.nav li a, #navigation ul.rss a, #navigation .cart-contents, #navigation ul.rss, #navigation ul.cart .cart_list a{ font:300 13px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; } #navigation ul.rss li a:before { color:#ffffff;}
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover a, #navigation ul.nav li ul li a, #navigation ul.cart > li:hover > a, #navigation ul.cart > li > ul > div, #navigation ul.cart > li > ul > div p, #navigation ul.cart > li > ul span, #navigation ul.cart .cart_list a, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a { color:#169fe6!important; }
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover, #navigation ul.nav li ul, #navigation ul.cart > li:hover, #navigation ul.cart > li > ul > div, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a{background-color:#ffffff!important}
#navigation ul.nav li ul, #navigation ul.cart > li > ul > div  { border: 0px solid #dbdbdb; }
#navigation ul.nav > li > ul  { left: 0; }
#navigation ul.nav > li  { border-right: 0px solid #dbdbdb; }#navigation ul.nav > li > ul  { left: 0; }
#navigation  { box-shadow: none; -moz-box-shadow: none; -webkit-box-shadow: none; }#navigation ul li:first-child, #navigation ul li:first-child a { border-radius:0px 0 0 0px; -moz-border-radius:0px 0 0 0px; -webkit-border-radius:0px 0 0 0px; }
#navigation {background:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:0px solid #dbdbdb;border-right:0px solid #dbdbdb;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
#top ul.nav li a { font:300 12px/1.6em "Helvetica Neue", Helvetica, sans-serif;color:#ddd; }
}
#footer, #footer p { font:300 13px/1.4em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; }
#footer {background-color:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid ;border-left:0px solid ;border-right:0px solid ;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
.magazine #loopedSlider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.magazine #loopedSlider .content .excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.magazine .block .post .title, .magazine .block .post .title a { font:bold 18px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
#loopedSlider.business-slider .content h2 { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#loopedSlider.business-slider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#wrapper #loopedSlider.business-slider .content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.archive_header { font:bold 18px/1em Arial, sans-serif;color:#222222; }
.archive_header {border-bottom:1px solid #e6e6e6;}
</style> 
  <!-- Options Panel Custom CSS --> 
  <style type="text/css">
/* Subscribe & Connect button style */
#mc-embedded-subscribe{background-color: #DF4B4B;}

/* MailChimp for WP Plugin styles */
.mc4wp-form input[type=submit]{background-color: #DF4B4B;}

/* Hide the header/footer on almost finished pages */
.page-id-365 #header, .page-id-365 #nav-container, .page-id-365 #footer-container{display: none;}
.page-id-4031 #header, .page-id-4031 #nav-container, .page-id-4031 #footer-container{display: none;}
.page-id-365 #content{padding-top: 30px;}
.page-id-4031 #content{padding-top: 30px;}
.page-id-5289 #header, .page-id-5289 #nav-container, .page-id-5289 #footer-container{display: none;}
.page-id-5289 #content{padding-top: 30px;}

/* Hide the header/footer on confirmation pages */
.page-id-1397 #header, .page-id-1397 #nav-container, .page-id-1397 #footer-container{display: none;}
.page-id-1382 #header, .page-id-1382 #nav-container, .page-id-1382 #footer-container{display: none;}
.page-id-1481 #header, .page-id-1481 #nav-container, .page-id-1481 #footer-container{display: none;}
.page-id-3200 #header, .page-id-3200 #nav-container, .page-id-3200 #footer-container{display: none;}
.page-id-4038 #header, .page-id-4038 #nav-container, .page-id-4038 #footer-container{display: none;}
.page-id-5278 #header, .page-id-5278 #nav-container, .page-id-5278 #footer-container{display: none;}
.page-id-1397 #content, .page-id-1382 #content, .page-id-1481 #content, .page-id-4038 #content, .page-id-5278 #content{padding-top: 30px;}

/* Manipulate content on 'Let me show you...' page */
.page-id-3200 #content{padding-top: 15px;}
.page-id-3200 #content h1.title{display: none;}
.page-id-3200 #content .entry h1{font-size: 32px;}

/* Add margin to bottom of LaTeX equations, but only when they are not in paragraphs */
section.entry .latex{margin-bottom: 15px;}
section.entry p .latex{margin-bottom: 0px;}

/* Fix list specific issues on the "Start Here" page */
.page-id-4374 #start_here_benefits li{margin-bottom: 15px;}
</style> 
  <!-- Woo Shortcodes CSS --> 
  <!-- Custom Stylesheet --> 
  <style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style> 
  <!-- start Mixpanel --> 
  <script type="text/javascript">(function(f,b){if(!b.__SV){var a,e,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");
for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=f.createElement("script");a.type="text/javascript";a.async=!0;a.src="//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";e=f.getElementsByTagName("script")[0];e.parentNode.insertBefore(a,e)}})(document,window.mixpanel||[]);
mixpanel.init("2486e0f021e92605d44d32fce5f1d826");
</script> 
  <!-- end Mixpanel --> 
 </head> 
 <body class="post-template-default single single-post postid-1669 single-format-standard safari alt-style-default two-col-left width-960 two-col-left-960 full-width full-header full-footer"> 
  <div id="wrapper"> 
   <div id="inner-wrapper"> 
    <!--#header-container--> 
    <div id="header-container"> 
     <h3 class="nav-toggle icon"><a href="#navigation">Navigation</a></h3> 
     <header id="header" class="col-full"> 
      <div id="logo"> 
       <a href="http://www.pyimagesearch.com/" title="Be awesome at learning OpenCV, Python, and computer vision"><img src="http://www.pyimagesearch.com/wp-content/uploads/2013/12/logo.png" alt="PyImageSearch"></a> 
       <span class="site-title"><a href="http://www.pyimagesearch.com/">PyImageSearch</a></span> 
       <span class="site-description">Be awesome at learning OpenCV, Python, and computer vision</span> 
      </div> 
     </header> 
    </div>
    <!--/#header-container--> 
    <!--#nav-container--> 
    <div id="nav-container"> 
     <nav id="navigation" class="col-full" role="navigation"> 
      <section class="menus"> 
       <a href="http://www.pyimagesearch.com" class="nav-home"><span>Home</span></a> 
       <h3>Main Menu</h3>
       <ul id="main-nav" class="nav fl">
        <li id="menu-item-4519" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4519"><a href="http://www.pyimagesearch.com/start-here-learn-computer-vision-opencv/">Start Here</a></li> 
        <li id="menu-item-2616" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2616"><a href="https://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a></li> 
        <li id="menu-item-2617" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2617"><a href="https://www.pyimagesearch.com/pyimagesearch-gurus/">PyImageSearch Gurus</a></li> 
        <li id="menu-item-2615" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2615"><a href="http://www.pyimagesearch.com/opencv-tutorials-resources-guides/">OpenCV 3 Tutorials</a></li> 
        <li id="menu-item-2618" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2618"><a href="http://www.pyimagesearch.com/free-opencv-crash-course/">FREE OpenCV Course</a></li> 
        <li id="menu-item-5929" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5929"><a href="https://jobs.pyimagesearch.com/">Jobs</a></li> 
        <li id="menu-item-2619" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2619"><a href="http://www.pyimagesearch.com/about/">About</a></li> 
        <li id="menu-item-2620" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2620"><a href="http://www.pyimagesearch.com/contact/">Contact</a></li> 
       </ul> 
       <ul class="rss fr"> 
        <li class="sub-rss"><a href="http://feeds.feedburner.com/Pyimagesearch"></a></li> 
       </ul> 
      </section>
      <!-- /.menus --> 
      <a href="#top" class="nav-close"><span>Return to Content</span></a> 
     </nav> 
    </div>
    <!--/#nav-container--> 
    <!-- #content Starts --> 
    <div id="content" class="col-full"> 
     <div id="main-sidebar-container"> 
      <!-- #main Starts --> 
      <section id="main"> 
       <article class="post-1669 post type-post status-publish format-standard hentry category-image-processing category-tutorials tag-barcode tag-barcode-detection tag-gradient-magnitude tag-gradients tag-image-processing-2 tag-magnitude tag-scharr tag-thresholding tag-tutorials-2 tag-video-processing"> 
        <header> 
         <h1 class="title">Real-time barcode detection in video with Python and OpenCV</h1> 
        </header> 
        <div class="post-meta">
         <span class="small">By</span> 
         <span class="author vcard"><span class="fn"><a href="http://www.pyimagesearch.com/author/adrian/" title="Posts by Adrian Rosebrock" rel="author">Adrian Rosebrock</a></span></span> 
         <span class="small">on</span> 
         <abbr class="date time published" title="2014-12-15T10:00:03-0400">December 15, 2014</abbr> 
         <span class="small">in</span> 
         <span class="categories"><a href="http://www.pyimagesearch.com/category/image-processing/" title="View all items in Image Processing">Image Processing</a>, <a href="http://www.pyimagesearch.com/category/tutorials/" title="View all items in Tutorials">Tutorials</a></span> 
        </div> 
        <section class="entry"> 
         <div id="fsb-social-bar" class="fsb-social-bar" data-post-id="1669" data-socialite="true">
          <style type="text/css">            #fsb-social-bar { width: 100%; border-bottom: 1px solid #dbdbdb; border-top: 1px solid #dbdbdb; padding: 10px 0; margin: 0px 0 20px 0; float: left; background: #fff; position: relative; clear: both; }            #fsb-social-bar a { border: 0px !important }            #fsb-social-bar.fsb-fixed { position: fixed; top: -2px; z-index: 99999; }            #fsb-social-bar .fsb-title { display: block; float: left; margin: 3px 20px 0 0; font-size: 16px; font-family: Arial, Helvetica, sans-serif; text-decoration: none; color: #333; }            #fsb-social-bar .fsb-share-facebook { width: 120px; float: left; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-facebook.fsb-hide-count { width: 44px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-twitter { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-twitter.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-google { float: left; width: 105px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-google.fsb-hide-count { width: 33px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-linkedin { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-linkedin.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-pinterest { float: left; width: 115px; padding: 3px 0 2px; height: 25px;}            #fsb-social-bar .fsb-share-pinterest.fsb-hide-count { width: 43px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .socialite { display: block; position: relative; background: url(http://www.pyimagesearch.com/wp-content/plugins/floating-social-bar/images/fsb-sprite.png) no-repeat scroll 0 0; }            #fsb-social-bar .socialite-loaded { background: none !important; }            #fsb-social-bar .fsb-service-title { display: none; }            #fsb-social-bar a { color: #333; text-decoration: none; font-size: 12px; font-family: Arial, Helvetica, sans-serif; }            #fsb-social-bar .fsb-twitter { width: 105px; height: 25px; background-position: -13px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-twitter .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 69px; color: #333; }            #fsb-social-bar .fsb-google { width: 75px; height: 25px; background-position: -136px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-google .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 41px; color: #333; }            #fsb-social-bar .fsb-google .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-share-google .socialite-loaded .socialite-button{padding: 2px 0 0}            #fsb-social-bar .fsb-facebook { width: 89px; height: 25px; background-position: -231px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-facebook .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 52px; color: #333; }            #fsb-social-bar .fsb-facebook .socialite-button { margin: 0 !important;}            #fsb-social-bar .fsb-share-facebook .socialite-loaded .socialite-button {padding: 2px 0 0}            #fsb-social-bar .fsb-linkedin { width: 105px; height: 25px; background-position: -347px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-linkedin .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 70px; color: #333; }            #fsb-social-bar .fsb-linkedin .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-pinterest { width: 88px; height: 25px; background-position: -484px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-pinterest .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 50px; color: #333; }            #fsb-social-bar .fsb-pinterest .socialite-button { margin: 0 !important; }            .fsb-clear { clear: both; }            .fsb-clear:after { clear:both; content:; display:block; height:0; line-height:0; overflow:auto; visibility:hidden; zoom:1; }            @media (max-width: 768px) { #fsb-social-bar.fsb-fixed { position: relative !important; top: auto !important; } }        </style>
          <div class="fsb-share-twitter fsb-hide-count">
           <a href="https://twitter.com/share?original_referer=http%3A%2F%2Fwww.pyimagesearch.com%2F&amp;source=tweetbutton&amp;text=Real-time+barcode+detection+in+video+with+Python+and+OpenCV&amp;url=http%3A%2F%2Fwww.pyimagesearch.com%2F2014%2F12%2F15%2Freal-time-barcode-detection-video-python-opencv%2F&amp;via=pyimagesearch" class="socialite twitter fsb-twitter" data-fsb-service="twitter" rel="nofollow" target="_blank" title="Be the first one to tweet this article!"><span class="fsb-service-title">Twitter</span><span class="fsb-count">0</span></a>
          </div>
          <div class="fsb-share-facebook fsb-hide-count">
           <a href="http://www.facebook.com/sharer.php?u=http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/" class="socialite facebook fsb-facebook" data-fsb-service="facebook" data-href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/" data-send="false" data-layout="button_count" data-width="60" data-show-faces="false" rel="nofollow" target="_blank"><span class="fsb-service-title">Facebook</span><span class="fsb-count">0</span></a>
          </div>
          <div class="fsb-share-google">
           <a href="https://plus.google.com/share?url=http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/" class="socialite googleplus fsb-google" data-fsb-service="google" data-size="medium" data-href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/" rel="nofollow" target="_blank"><span class="fsb-service-title">Google+</span><span class="fsb-count">28</span></a>
          </div>
          <div class="fsb-share-linkedin">
           <a href="https://www.linkedin.com/cws/share?url=http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/" class="socialite linkedin fsb-linkedin" data-fsb-service="linkedin" data-size="medium" data-href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/" rel="nofollow" target="_blank"><span class="fsb-service-title">LinkedIn</span><span class="fsb-count">14</span></a>
          </div>
         </div>
         <div class="fsb-clear"></div>
         <p><iframe width="500" height="375" src="http://www.youtube.com/embed/oooDn5SBUAg?feature=oembed" frameborder="0" allowfullscreen></iframe></p> 
         <p>Todays post is a followup to a previous (extremely popular) article on <a title="Detecting Barcodes in Images with Python and OpenCV" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" target="_blank">detecting barcodes in images using Python and OpenCV</a>.</p> 
         <p>In the previous post we explored how to detect and find barcodes in <b><i>images</i></b>. But today we are going to refactor the code to detect barcodes in&nbsp;<strong><em>video</em></strong>.</p> 
         <p>As an example, check out the screenshot below (captured using a video stream from my webcam) of me holding up the back cover of&nbsp;<em>Modern Warfare 3</em> and the barcode being detected successfully.</p> 
         <div id="attachment_1687" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_detection.jpg"><img class="wp-image-1687" src="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_detection.jpg" alt="Figure 1: Detecting barcodes in video streams using Python and OpenCV." width="600" height="368" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_detection.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_detection-300x184.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 1:</strong> Detecting barcodes in video streams using Python and OpenCV.</p>
         </div> 
         <p><em><strong>Note:&nbsp;</strong>Big thanks to <a href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/#comment-196936" target="_blank">Jason</a> who commented on the original post and mentioned that it would be really cool to see barcode detection applied to video. Thanks for the suggestion! And youre 100% right, it is really cool to see barcode detection applied to video.</em></p> 
         <p>For example, lets pretend that we are working at GameStop on the 26th of December. There are a line of kids ten blocks long outside our store  all of them wanting to return or exchange a game (obviously, their parents or relatives didnt make the correct purchase).</p> 
         <p>To speedup the exchange process, we are hired to wade out into the sea of teenagers and start the return/exchange process by scanning barcodes. But we have a problem  the laser guns at the register are wired to the computers at the register. And the chords wont reach far enough into the 10-block long line!</p> 
         <p>However, we have a plan. <strong><em>Well just use our smartphones instead!</em></strong></p> 
         <p>Using our trusty iPhones (or Androids), we open up our camera app, set it to video mode, and head into the abyss.</p> 
         <p>Whenever we hold a video game case with a barcode in front of our camera, our app will detect it, and then relay it back to the register.</p> 
         <p>Sound too good to be true?</p> 
         <p>Well. Maybe it is. After all, you can accomplish this exact same task using laser barcode readers and a wireless connection. And as well see later on in this post that our approach only works in certain conditions.</p> 
         <p>But I still think this a good tutorial on how to utilize OpenCV and Python to read barcodes in video  and more importantly, it shows you how you can glue OpenCV functions together to build a real-world application.</p> 
         <p>Anyway, continue reading to learn how to detect barcodes in video using OpenCV and Python!</p> 
         <div style="padding-top: 10px; padding-bottom: 15px; padding-right: 10px; height: 70px; background: url('http://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png'); background-size: 70px 70px; background-repeat: no-repeat;"> 
          <p style="margin-top: 1px; margin-left: 80px; font-weight: bold;">Looking for the source code to this post?<br> <a id="scroll_to_code" href="#">Jump right to the downloads section.</a></p> 
         </div> 
         <p><strong>OpenCV and Python versions:</strong><br> This example will run on<strong>&nbsp;Python 2.7</strong>&nbsp;and <strong>OpenCV 2.4.X</strong>.</p> 
         <h1>Real-time barcode detection in video with Python and OpenCV</h1> 
         <p>So heres the game plan. Our barcode detection in video system can be broken into two components:</p> 
         <ul> 
          <li><b>Component #1:</b>&nbsp;A module that handles detecting barcodes in images (or in this case, frames of a video) Luckily, <a title="Detecting Barcodes in Images with Python and OpenCV" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" target="_blank">we already have this</a>. Well just clean the code up a bit and reformat it to our purposes.</li> 
          <li><strong>Component&nbsp;#2:&nbsp;</strong>A driver program that obtains access to a video feed and runs the barcode detection module.</li> 
         </ul> 
         <p>Well go ahead and start with the first component, a module to detect barcodes in single frames of a video.</p> 
         <h2>Component 1:&nbsp;Barcode detection in frames of a video</h2> 
         <p>Im not going to do a complete and exhaustive code review of this component, <a title="Detecting Barcodes in Images with Python and OpenCV" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" target="_blank">that was handled in my previous post on barcode detection in images.</a></p> 
         <p>However, I will provide a quick review for the sake of completeness (and review a few minor updates). Open up a new file, name it <span id="crayon-59bea9370ac14652180486" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">simple_barcode_detection</span><span class="crayon-sy">.</span><span class="crayon-v">py</span></span></span>&nbsp;, and lets get coding:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59bea9370ac20662006137" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Real-time barcode detection in video with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Python</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
import numpy as np
import cv2

def detect(image):
	# convert the image to grayscale
	gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

	# compute the Scharr gradient magnitude representation of the images
	# in both the x and y direction
	gradX = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 1, dy = 0, ksize = -1)
	gradY = cv2.Sobel(gray, ddepth = cv2.cv.CV_32F, dx = 0, dy = 1, ksize = -1)

	# subtract the y-gradient from the x-gradient
	gradient = cv2.subtract(gradX, gradY)
	gradient = cv2.convertScaleAbs(gradient)

	# blur and threshold the image
	blurred = cv2.blur(gradient, (9, 9))
	(_, thresh) = cv2.threshold(blurred, 225, 255, cv2.THRESH_BINARY)

	# construct a closing kernel and apply it to the thresholded image
	kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (21, 7))
	closed = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel)

	# perform a series of erosions and dilations
	closed = cv2.erode(closed, None, iterations = 4)
	closed = cv2.dilate(closed, None, iterations = 4)

	# find the contours in the thresholded image
	(cnts, _) = cv2.findContours(closed.copy(), cv2.RETR_EXTERNAL,
		cv2.CHAIN_APPROX_SIMPLE)

	# if no contours were found, return None
	if len(cnts) == 0:
		return None

	# otherwise, sort the contours by area and compute the rotated
	# bounding box of the largest contour
	c = sorted(cnts, key = cv2.contourArea, reverse = True)[0]
	rect = cv2.minAreaRect(c)
	box = np.int0(cv2.cv.BoxPoints(rect))

	# return the bounding box of the barcode
	return box</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-1">
                 1
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-2">
                 2
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-3">
                 3
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-4">
                 4
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-5">
                 5
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-6">
                 6
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-7">
                 7
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-8">
                 8
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-9">
                 9
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-10">
                 10
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-11">
                 11
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-12">
                 12
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-13">
                 13
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-14">
                 14
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-15">
                 15
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-16">
                 16
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-17">
                 17
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-18">
                 18
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-19">
                 19
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-20">
                 20
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-21">
                 21
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-22">
                 22
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-23">
                 23
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-24">
                 24
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-25">
                 25
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-26">
                 26
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-27">
                 27
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-28">
                 28
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-29">
                 29
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-30">
                 30
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-31">
                 31
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-32">
                 32
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-33">
                 33
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-34">
                 34
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-35">
                 35
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-36">
                 36
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-37">
                 37
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-38">
                 38
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-39">
                 39
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-40">
                 40
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-41">
                 41
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-42">
                 42
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-43">
                 43
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac20662006137-44">
                 44
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac20662006137-45">
                 45
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-1">
                 <span class="crayon-c"># import the necessary packages</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-2">
                 <span class="crayon-r">import</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">numpy </span>
                 <span class="crayon-st">as</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">np</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-3">
                 <span class="crayon-r">import</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">cv2</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-4">
                 &nbsp;
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-5">
                 <span class="crayon-r">def</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">detect</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">image</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-o">:</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-6">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># convert the image to grayscale</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-7">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">gray</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">cvtColor</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">image</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">COLOR_BGR2GRAY</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-8">
                 &nbsp;
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-9">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># compute the Scharr gradient magnitude representation of the images</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-10">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># in both the x and y direction</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-11">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">gradX</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">Sobel</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gray</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">ddepth</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">cv</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">CV_32F</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">dx</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">dy</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">ksize</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">-</span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-12">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">gradY</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">Sobel</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gray</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">ddepth</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">cv</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">CV_32F</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">dx</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">dy</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">ksize</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">-</span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-13">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-14">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># subtract the y-gradient from the x-gradient</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-15">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">gradient</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">subtract</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gradX</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">gradY</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-16">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">gradient</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">convertScaleAbs</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gradient</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-17">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-18">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># blur and threshold the image</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-19">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">blurred</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">blur</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">gradient</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-cn">9</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">9</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-20">
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">_</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">thresh</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">threshold</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">blurred</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">225</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">255</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">THRESH_BINARY</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-21">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-22">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># construct a closing kernel and apply it to the thresholded image</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-23">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">kernel</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">getStructuringElement</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">MORPH_RECT</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-cn">21</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">7</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-24">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">closed</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">morphologyEx</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">thresh</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">MORPH_CLOSE</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">kernel</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-25">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-26">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># perform a series of erosions and dilations</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-27">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">closed</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">erode</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">closed</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">None</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">iterations</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">4</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-28">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">closed</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">dilate</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">closed</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">None</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">iterations</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">4</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-29">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-30">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># find the contours in the thresholded image</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-31">
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">cnts</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">_</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">findContours</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">closed</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-k ">copy</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">RETR_EXTERNAL</span>
                 <span class="crayon-sy">,</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-32">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">CHAIN_APPROX_SIMPLE</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-33">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-34">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># if no contours were found, return None</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-35">
                 <span class="crayon-h"> </span>
                 <span class="crayon-st">if</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">len</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">cnts</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">==</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-o">:</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-36">
                 <span class="crayon-h"> </span>
                 <span class="crayon-st">return</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">None</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-37">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-38">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># otherwise, sort the contours by area and compute the rotated</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-39">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># bounding box of the largest contour</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-40">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">c</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">sorted</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">cnts</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">key</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">contourArea</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">reverse</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">True</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">[</span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">]</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-41">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">rect</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">minAreaRect</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">c</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-42">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">box</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">np</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">int0</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-v">cv</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">BoxPoints</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">rect</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-43">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac20662006137-44">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># return the bounding box of the barcode</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac20662006137-45">
                 <span class="crayon-h"> </span>
                 <span class="crayon-st">return</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">box</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0100 seconds] --> 
         <p>If you read the <a title="Detecting Barcodes in Images with Python and OpenCV" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" target="_blank">previous post on barcode detection in images</a> then this code should look extremely familiar.</p> 
         <p>The first thing well do is import the packages well need  NumPy for numeric processing and <span id="crayon-59bea9370ac25105193994" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cv2</span></span></span>&nbsp;&nbsp;for our OpenCV bindings.</p> 
         <p>From there we define our <span id="crayon-59bea9370ac27506749619" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">detect</span></span></span>&nbsp;&nbsp;function on&nbsp;<strong>Line 5</strong>. This function takes a single argument, the <span id="crayon-59bea9370ac2a748179044" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">image</span></span></span>&nbsp;&nbsp;(or frame of a video) that we want to detect a barcode in.</p> 
         <p><strong>Line 7</strong> converts our image to grayscale, while&nbsp;<strong>Lines 9-16</strong>&nbsp;find&nbsp;regions of the image that have high horizontal gradients and low vertical gradients (again, if you would like more detail on this part of the code, refer to the <a title="Detecting Barcodes in Images with Python and OpenCV" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" target="_blank">previous post on barcode detection</a>).</p> 
         <p>We then blur and threshold the image on&nbsp;<strong>Lines 19 and 20</strong> so we can apply morphological operations to the image on&nbsp;<strong>Lines 23-28</strong>. These morphological operations are used to reveal the rectangular region of the barcode and ignore the rest of the contents of the image.</p> 
         <p>Now that we know the rectangular region of the barcode, we find its contour (or simply, its outline) on&nbsp;<strong>Lines 30 and 31</strong>.</p> 
         <p>If no outline can be found, then we make the assumption that there is no barcode in the image (<strong>Lines 35 and 36</strong>).</p> 
         <p>However, if we do find contours in the image, then we sort the contours by their area on <strong>Line 40</strong>&nbsp;(where the contours with the largest area appear at the front of the list). Again, we are making the assumption that the contour with the largest area is the barcoded region of the frame.</p> 
         <p>Finally, we take the contour and compute its bounding box (<strong>Lines 41 and 42</strong>). This will give us the&nbsp;<em>(x, y)</em>&nbsp;coordinates of the barcoded region, which is returned to the calling function on&nbsp;<strong>Line 45</strong>.</p> 
         <p>Now that our simple barcode detector is finished, lets move on to Component #2, the driver that glues everything together.</p> 
         <h2>Component #2: Accessing our camera to detect barcodes in video</h2> 
         <p>Lets move on to building the driver to detect barcodes in video. Open up a new file, name it <span id="crayon-59bea9370ac2d228239941" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">detect_barcode</span><span class="crayon-sy">.</span><span class="crayon-v">py</span></span></span>&nbsp;, and lets create the second component:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59bea9370ac30945269554" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Real-time barcode detection in video with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Python</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
from pyimagesearch import simple_barcode_detection
import argparse
import cv2

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-v", "--video", help = "path to the (optional) video file")
args = vars(ap.parse_args())

# if the video path was not supplied, grab the reference to the
# camera
if not args.get("video", False):
	camera = cv2.VideoCapture(0)

# otherwise, load the video
else:
	camera = cv2.VideoCapture(args["video"])</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59bea9370ac30945269554-1">
                 1
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac30945269554-2">
                 2
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac30945269554-3">
                 3
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac30945269554-4">
                 4
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac30945269554-5">
                 5
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac30945269554-6">
                 6
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac30945269554-7">
                 7
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac30945269554-8">
                 8
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac30945269554-9">
                 9
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac30945269554-10">
                 10
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac30945269554-11">
                 11
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac30945269554-12">
                 12
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac30945269554-13">
                 13
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac30945269554-14">
                 14
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac30945269554-15">
                 15
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac30945269554-16">
                 16
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac30945269554-17">
                 17
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac30945269554-18">
                 18
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59bea9370ac30945269554-1">
                 <span class="crayon-c"># import the necessary packages</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac30945269554-2">
                 <span class="crayon-st">from</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">pyimagesearch </span>
                 <span class="crayon-r">import</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">simple_barcode_detection</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac30945269554-3">
                 <span class="crayon-r">import</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">argparse</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac30945269554-4">
                 <span class="crayon-r">import</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac30945269554-5">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac30945269554-6">
                 <span class="crayon-c"># construct the argument parse and parse the arguments</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac30945269554-7">
                 <span class="crayon-v">ap</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">argparse</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">ArgumentParser</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac30945269554-8">
                 <span class="crayon-v">ap</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">add_argument</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-s">"-v"</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-s">"--video"</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">help</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-s">"path to the (optional) video file"</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac30945269554-9">
                 <span class="crayon-v">args</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">vars</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">ap</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">parse_args</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac30945269554-10">
                 &nbsp;
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac30945269554-11">
                 <span class="crayon-c"># if the video path was not supplied, grab the reference to the</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac30945269554-12">
                 <span class="crayon-c"># camera</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac30945269554-13">
                 <span class="crayon-st">if</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-st">not</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">args</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">get</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-s">"video"</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">False</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-o">:</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac30945269554-14">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">camera</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">VideoCapture</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac30945269554-15">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac30945269554-16">
                 <span class="crayon-c"># otherwise, load the video</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac30945269554-17">
                 <span class="crayon-st">else</span>
                 <span class="crayon-o">:</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac30945269554-18">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">camera</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">VideoCapture</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">args</span>
                 <span class="crayon-sy">[</span>
                 <span class="crayon-s">"video"</span>
                 <span class="crayon-sy">]</span>
                 <span class="crayon-sy">)</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0024 seconds] --> 
         <p>Again, well start our by importing the packages we need. Ive placed our <span id="crayon-59bea9370ac33324901015" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">simple_barcode_detection</span></span></span>&nbsp;&nbsp;function in the <span id="crayon-59bea9370ac35264584171" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">pyimagesearch</span></span></span>&nbsp;&nbsp;module for organizational purposes. Then, we import <span id="crayon-59bea9370ac37025001214" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">argparse</span></span></span>&nbsp;&nbsp;for parsing command line arguments and <span id="crayon-59bea9370ac3a204571890" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">cv2</span></span></span>&nbsp;&nbsp;for our OpenCV bindings.</p> 
         <p><strong>Lines 6-9</strong> handle parsing our command line arguments. Well need a single (optional) switch, <span id="crayon-59bea9370ac3d564939122" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">video</span></span></span>&nbsp;, which is the path to the video file on desk that contains the barcodes we want to detect.</p> 
         <p><em><strong>Note:</strong> This switch is useful for running the example videos provided in the source code for this blog post. By omitting this&nbsp;</em><em>switch you will be able to utilize the webcam of your laptop or desktop.</em></p> 
         <p><strong>Lines 13-18</strong>&nbsp;handle grabbing a reference to our <span id="crayon-59bea9370ac3f532439655" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">camera</span></span></span>&nbsp;&nbsp;feed. If we&nbsp;<em>did not</em> supply a <span id="crayon-59bea9370ac42692794541" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-o">--</span><span class="crayon-v">video</span></span></span>&nbsp;&nbsp;switch, then we grab a handle to our webcam on&nbsp;<strong>Lines 13 and 14</strong>. However, if we&nbsp;<em>did</em> provide a path to a video file, then the file reference is grabbed on&nbsp;<strong>Lines 17 and 18</strong>.</p> 
         <p>Now that the setup is done, we can move on to applying&nbsp;our actual barcode detection module:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59bea9370ac44460686604" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Real-time barcode detection in video with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Python</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# keep looping over the frames
while True:
	# grab the current frame
	(grabbed, frame) = camera.read()
 
	# check to see if we have reached the end of the
	# video
	if not grabbed:
		break

	# detect the barcode in the image
	box = simple_barcode_detection.detect(frame)

	# if a barcode was found, draw a bounding box on the frame
	cv2.drawContours(frame, [box], -1, (0, 255, 0), 2)

	# show the frame and record if the user presses a key
	cv2.imshow("Frame", frame)
	key = cv2.waitKey(1) &amp; 0xFF

	# if the 'q' key is pressed, stop the loop
	if key == ord("q"):
		break

# cleanup the camera and close any open windows
camera.release()
cv2.destroyAllWindows()</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-1">
                 1
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-2">
                 2
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-3">
                 3
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-4">
                 4
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-5">
                 5
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-6">
                 6
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-7">
                 7
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-8">
                 8
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-9">
                 9
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-10">
                 10
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-11">
                 11
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-12">
                 12
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-13">
                 13
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-14">
                 14
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-15">
                 15
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-16">
                 16
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-17">
                 17
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-18">
                 18
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-19">
                 19
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-20">
                 20
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-21">
                 21
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-22">
                 22
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-23">
                 23
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-24">
                 24
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-25">
                 25
                </div>
                <div class="crayon-num crayon-striped-num" data-line="crayon-59bea9370ac44460686604-26">
                 26
                </div>
                <div class="crayon-num" data-line="crayon-59bea9370ac44460686604-27">
                 27
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-1">
                 <span class="crayon-c"># keep looping over the frames</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-2">
                 <span class="crayon-st">while</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-t">True</span>
                 <span class="crayon-o">:</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-3">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># grab the current frame</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-4">
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">grabbed</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">frame</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">camera</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">read</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-5">
                 <span class="crayon-h"> </span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-6">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># check to see if we have reached the end of the</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-7">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># video</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-8">
                 <span class="crayon-h"> </span>
                 <span class="crayon-st">if</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-st">not</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">grabbed</span>
                 <span class="crayon-o">:</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-9">
                 <span class="crayon-h"> </span>
                 <span class="crayon-st">break</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-10">
                 &nbsp;
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-11">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># detect the barcode in the image</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-12">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">box</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">simple_barcode_detection</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">detect</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">frame</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-13">
                 &nbsp;
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-14">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># if a barcode was found, draw a bounding box on the frame</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-15">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">drawContours</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-v">frame</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">[</span>
                 <span class="crayon-v">box</span>
                 <span class="crayon-sy">]</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">-</span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">255</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">0</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">2</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-16">
                 &nbsp;
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-17">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># show the frame and record if the user presses a key</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-18">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">imshow</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-s">"Frame"</span>
                 <span class="crayon-sy">,</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">frame</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-19">
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">key</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">=</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">waitKey</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-cn">1</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">&amp;</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-cn">0xFF</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-20">
                 &nbsp;
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-21">
                 <span class="crayon-h"> </span>
                 <span class="crayon-c"># if the 'q' key is pressed, stop the loop</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-22">
                 <span class="crayon-h"> </span>
                 <span class="crayon-st">if</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-v">key</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">==</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-k ">ord</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-s">"q"</span>
                 <span class="crayon-sy">)</span>
                 <span class="crayon-o">:</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-23">
                 <span class="crayon-h"> </span>
                 <span class="crayon-st">break</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-24">
                 &nbsp;
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-25">
                 <span class="crayon-c"># cleanup the camera and close any open windows</span>
                </div>
                <div class="crayon-line crayon-striped-line" id="crayon-59bea9370ac44460686604-26">
                 <span class="crayon-v">camera</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">release</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-sy">)</span>
                </div>
                <div class="crayon-line" id="crayon-59bea9370ac44460686604-27">
                 <span class="crayon-v">cv2</span>
                 <span class="crayon-sy">.</span>
                 <span class="crayon-e">destroyAllWindows</span>
                 <span class="crayon-sy">(</span>
                 <span class="crayon-sy">)</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0034 seconds] --> 
         <p>On <strong>Line 21</strong> we start looping over the frames of our video  this loop will continue to run until (1) the video runs out of frames or (2) we press the <span id="crayon-59bea9370ac47649384377" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">q</span></span></span>&nbsp;&nbsp;key on our keyboard and break from the loop.</p> 
         <p>We query our <span id="crayon-59bea9370ac4a425922337" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">camera</span></span></span>&nbsp;&nbsp;on&nbsp;<strong>Line 23</strong>, which returns a 2-tuple. This 2-tuple contains a boolean, <span id="crayon-59bea9370ac4c726343633" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">grabbed</span></span></span>&nbsp;, which indicates if the frame was successfully grabbed from the video file/webcam, and <span id="crayon-59bea9370ac4e932897843" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">frame</span></span></span>&nbsp;, which is the actual frame from the video.</p> 
         <p>If the frame was not successfully grabbed (such as when we reach the end of the video file), we break from the loop on&nbsp;<strong>Lines 27 and 28</strong>.</p> 
         <p>Now that we have our frame, we can utilize our barcode detection module to detect a barcode in it  this handled on&nbsp;<strong>Line 31</strong> and our bounding box is returned to us.</p> 
         <p>We draw our resulting bounding box around the barcoded region on&nbsp;<strong>Line 34</strong> and display our frame to our screen on&nbsp;<strong>Lines 37 and 38</strong>.</p> 
         <p>Finally,&nbsp;<strong>Lines 41 and 42</strong> handle breaking from our loop if the <span id="crayon-59bea9370ac51937579833" class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important;"><span class="crayon-pre crayon-code" style="font-size: 12px !important; line-height: 15px !important;font-size: 12px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><span class="crayon-v">q</span></span></span>&nbsp;&nbsp;key is pressed on our keyboard while&nbsp;<strong>Lines 45 and 46</strong> cleanup pointers to our camera object.</p> 
         <p>So as you can see, there isnt much to our driver script!</p> 
         <p>Lets put this code into action and look at some results.</p> 
         <h1>Successful barcode detections in video</h1> 
         <p>Lets try some some examples. Open up a terminal and issue the following command:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59bea9370ac54561191559" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Real-time barcode detection in video with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Shell</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
$ python detect_barcode.py --video video/video_games.mov</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59bea9370ac54561191559-1">
                 1
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59bea9370ac54561191559-1">
                 <span class="crayon-sy">$</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">python </span>
                 <span class="crayon-v">detect_barcode</span>
                 <span class="crayon-e">.py</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">--</span>
                 <span class="crayon-e">video </span>
                 <span class="crayon-v">video</span>
                 <span class="crayon-o">/</span>
                 <span class="crayon-v">video_games</span>
                 <span class="crayon-e">.mov</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0005 seconds] --> 
         <p>The video at the top of this post demonstrates the output of our script. And below is a screenshot for each of the three successful barcode detections on the video games:</p> 
         <div id="attachment_1689" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_video_games.jpg"><img class="wp-image-1689" src="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_video_games.jpg" alt="Figure 2: Successfully detecting the barcode of three XBox video games in a video stream." width="600" height="324" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_video_games.jpg 1400w, http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_video_games-300x162.jpg 300w, http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_video_games-1024x553.jpg 1024w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 2:</strong> Successfully detecting the barcode of three XBox video games in a video stream.</p>
         </div> 
         <p>Lets see if we can detect barcodes on a clothing coupon:</p>
         <!-- Crayon Syntax Highlighter v_2.7.2_beta --> 
         <div id="crayon-59bea9370ac57928589816" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;"> 
          <div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
           <span class="crayon-title">Real-time barcode detection in video with Python and OpenCV</span> 
           <div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;">
            <div class="crayon-button crayon-nums-button" title="Toggle Line Numbers">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-plain-button" title="Toggle Plain Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-expand-button" title="Expand Code">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-copy-button" title="Copy">
             <div class="crayon-button-icon"></div>
            </div>
            <div class="crayon-button crayon-popup-button" title="Open Code In New Window">
             <div class="crayon-button-icon"></div>
            </div>
            <span class="crayon-language">Shell</span>
           </div>
          </div> 
          <div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div> 
          <div class="crayon-plain-wrap">
           <textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
$ python detect_barcode.py --video video/coupon.mov</textarea>
          </div> 
          <div class="crayon-main" style=""> 
           <table class="crayon-table"> 
            <tbody>
             <tr class="crayon-row"> 
              <td class="crayon-nums " data-settings="show"> 
               <div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;">
                <div class="crayon-num" data-line="crayon-59bea9370ac57928589816-1">
                 1
                </div>
               </div> </td> 
              <td class="crayon-code">
               <div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;">
                <div class="crayon-line" id="crayon-59bea9370ac57928589816-1">
                 <span class="crayon-sy">$</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-e">python </span>
                 <span class="crayon-v">detect_barcode</span>
                 <span class="crayon-e">.py</span>
                 <span class="crayon-h"> </span>
                 <span class="crayon-o">--</span>
                 <span class="crayon-e">video </span>
                 <span class="crayon-v">video</span>
                 <span class="crayon-o">/</span>
                 <span class="crayon-v">coupon</span>
                 <span class="crayon-e">.mov</span>
                </div>
               </div></td> 
             </tr> 
            </tbody>
           </table> 
          </div> 
         </div> 
         <!-- [Format Time: 0.0005 seconds] --> 
         <p>Heres an example screenshot from the video stream:</p> 
         <div id="attachment_1690" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_coupon.jpg"><img class="wp-image-1690" src="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_coupon.jpg" alt="Figure 3: Another successful barcode detection using Python and OpenCV." width="600" height="974" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_coupon.jpg 800w, http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_coupon-184x300.jpg 184w, http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_coupon-631x1024.jpg 631w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 3:</strong> Another successful barcode detection using Python and OpenCV.</p>
         </div> 
         <p>And the full video of the output:</p> 
         <p><iframe width="500" height="375" src="http://www.youtube.com/embed/YlF8hI5BGi8?feature=oembed" frameborder="0" allowfullscreen></iframe></p> 
         <p>Of course, like I said that this approach only works in optimal conditions (see the following section for a detailed description of limitations and drawbacks).</p> 
         <p>Here is an example of where the barcode detection did not work:</p> 
         <div id="attachment_1691" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_02.jpg"><img class="wp-image-1691" src="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_02.jpg" alt="Figure 4: An unsuccessful barcode detection. The barcode is too far away from the camera." width="600" height="368" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_02.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_02-300x184.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 4:</strong> An unsuccessful barcode detection. The barcode is too far away from the camera.</p>
         </div> 
         <p>In this case, the barcode is too far away from the camera and there are too many distractions and noise in the image, such as large blocks of text on the video game case.</p> 
         <p>This example is also clearly a failure, I just thought it was funny to include:</p> 
         <div id="attachment_1692" style="width: 610px" class="wp-caption aligncenter">
          <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_01.jpg"><img class="wp-image-1692" src="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_01.jpg" alt="Figure 5: My ear is clearly not a barcode." width="600" height="368" srcset="http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_01.jpg 1000w, http://www.pyimagesearch.com/wp-content/uploads/2014/12/video_barcode_invalid_01-300x184.jpg 300w" sizes="(max-width: 600px) 100vw, 600px"></a>
          <p class="wp-caption-text"><strong>Figure 5:</strong> My ear is clearly not a barcode.</p>
         </div> 
         <p>Again, this simple implementation of barcode detection will not work in all cases. It is not a robust solution, but rather an example of how simple image processing techniques can give surprisingly good results, provided that assumptions in the following section are met.</p> 
         <h1>Limitations and Drawbacks</h1> 
         <p>So as weve seen in this blog post, our approach to detecting barcodes in images works well &nbsp;<em>provided we make some assumptions regarding the videos we are detecting barcodes in.</em></p> 
         <p>The <strong>first assumption</strong> is that we have a static camera that is looking down on the barcode at a 90-degree angle. This will ensure that the gradient region of the barcoded image will be found by our simple barcode detector.</p> 
         <p>The <strong>second assumption</strong> is that our video has a close up of the barcode, meaning that we are holding our smartphones directly overtop of the barcode, and not holding the barcode far away from the lens. The farther we move the barcode away from the camera, the less successful our simple barcode detector will be.</p> 
         <p>So how do we improve our simple barcode detector?</p> 
         <p>Great question.</p> 
         <p>Christoph Oberhofer has provided a <a href="http://www.oberhofer.co/how-barcode-localization-works-in-quaggajs/" target="_blank">great review on how robust barcode detection is done in QuaggaJS</a>. And my friend Dr. Tomasz&nbsp;Malisiewicz has written a <a href="http://quantombone.blogspot.com/2014/11/barcodes-realtime-training-and.html" target="_blank">fantastic post</a> on how his VMX software can be utilized to train barcode detectors using machine learning. If youre looking for the next steps, be sure to check out those posts!</p> 
         <h1>Summary</h1> 
         <p>In this blog post we built upon our <a title="Detecting Barcodes in Images with Python and OpenCV" href="http://www.pyimagesearch.com/2014/11/24/detecting-barcodes-images-python-opencv/" target="_blank">previous codebase to detect barcodes in images</a>. We extended our code into two components:</p> 
         <ul> 
          <li>A component to detect barcodes in individual frames of a video.</li> 
          <li>And a driver component that accesses the video feed of our camera or video file.</li> 
         </ul> 
         <p>We then applied our simple barcode detector to detect barcodes in video.</p> 
         <p>However, our approach does make some assumptions:</p> 
         <ul> 
          <li>The first assumption is that we have a static camera view that is looking down on the barcode at a 90-degree angle.</li> 
          <li>And the second assumption is that we have a close up view of the barcode without other interfering objects or noise in the view of the frame.</li> 
         </ul> 
         <p>In practice, these assumptions may or may-not be guaranteeable. It all depends on the application you are developing!</p> 
         <p>At the very least I hope that this article was able to demonstrate to you some of the basics of image processing, and how these image processing techniques can be leveraged to build a simple barcode detector in video using Python and OpenCV.</p> 
         <h1 id="post_downloads">Downloads:</h1> 
         <div id="mc4wp-form-1" class="form mc4wp-form mc4wp-form-761"> 
          <form action="https://www.getdrip.com/forms/4776552/submissions" method="post" target="_blank" data-drip-embedded-form="3047">
           <img style="padding-right: 10px; width: 115px; border: none; float: left;" src="http://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png" alt="">If you would like to download the code and images used in this post, please enter your email address in the form below. Not only will you get a .zip of the code, Ill also send you a 
           <strong>FREE 11-page Resource Guide</strong> on Computer Vision and Image Search Engines, including 
           <strong>exclusive techniques</strong> that I dont post on this blog! Sound good? If so, enter your email address and Ill send you the code immediately!
           <p></p> 
           <p style="margin-left: 130px;"><label for="fields[email]">Email address:</label><input name="fields[email]" type="email" value="" placeholder="Your email address"></p> 
           <p style="margin-left: 130px;"><input type="submit" value="Download the code!"></p> 
          </form> 
         </div> 
        </section>
        <!-- /.entry --> 
        <div class="fix"></div> 
        <aside id="connect"> 
         <h3>Resource Guide (its totally free).</h3> 
         <div> 
          <p><img title="Get your FREE 11-page Image Search Engine Resource Guide PDF" src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/imagesearchengine-resourceguide-cover.png" style="padding-right: 10px;float: left"> </p>
          <div style="padding-top: 35px">
            Enter your email address below to get my 
           <strong>free 11-page Image Search Engine Resource Guide PDF</strong>. Uncover 
           <strong>exclusive techniques</strong> that I don't publish on this blog and start building image search engines of your own!
          </div>
          <p></p> 
          <form action="https://www.getdrip.com/forms/1113813/submissions" method="post" target="_blank" data-drip-embedded-form="1295"> 
           <div> 
            <input type="email" name="fields[email]" class="required email" value="" placeholder="Your email address" style="width: 50%;"> 
           </div> 
           <div> 
            <input id="mc-embedded-subscribe" type="submit" name="submit" class="btn submit button" value="Download the Guide!" data-drip-attribute="sign-up-button"> 
           </div> 
          </form> 
          <div class="social"> 
          </div> 
         </div>
         <!-- col-left --> 
         <div class="fix"></div> 
        </aside> 
        <div class="post-utility">
         <p class="tags"><i class="icon-tag"></i> <a href="http://www.pyimagesearch.com/tag/barcode/" rel="tag">barcode</a>, <a href="http://www.pyimagesearch.com/tag/barcode-detection/" rel="tag">barcode detection</a>, <a href="http://www.pyimagesearch.com/tag/gradient-magnitude/" rel="tag">gradient magnitude</a>, <a href="http://www.pyimagesearch.com/tag/gradients/" rel="tag">gradients</a>, <a href="http://www.pyimagesearch.com/tag/image-processing-2/" rel="tag">image processing</a>, <a href="http://www.pyimagesearch.com/tag/magnitude/" rel="tag">magnitude</a>, <a href="http://www.pyimagesearch.com/tag/scharr/" rel="tag">scharr</a>, <a href="http://www.pyimagesearch.com/tag/thresholding/" rel="tag">thresholding</a>, <a href="http://www.pyimagesearch.com/tag/tutorials-2/" rel="tag">tutorials</a>, <a href="http://www.pyimagesearch.com/tag/video-processing/" rel="tag">video processing</a></p> 
        </div> 
       </article>
       <!-- /.post --> 
       <div class="post-entries"> 
        <div class="nav-prev fl">
         <a href="http://www.pyimagesearch.com/2014/12/08/adding-web-interface-image-search-engine-flask/" rel="prev"><i class="icon-angle-left"></i> Adding a web interface to our image search engine with Flask</a>
        </div> 
        <div class="nav-next fr">
         <a href="http://www.pyimagesearch.com/2014/12/22/visual-logging-new-favorite-tool-debugging-opencv-python-apps/" rel="next">visual-logging, my new favorite tool for debugging OpenCV and Python apps <i class="icon-angle-right"></i></a>
        </div> 
        <div class="fix"></div> 
       </div> 
       <div id="comments"> 
        <h3 id="comments-title">22 Responses to <em>Real-time barcode detection in video with Python and OpenCV</em></h3> 
        <ol class="commentlist"> 
         <li class="comment even thread-even depth-1"> <a name="comment-330447"></a> 
          <div id="li-comment-330447" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/ae6d1da01ef3a4dd0a0408e0135875b7?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/ae6d1da01ef3a4dd0a0408e0135875b7?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">tita</span> 
            <span class="date">June 25, 2015 at 10:15 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-330447" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-330447"> 
            <p>thank you for the great article ?<br> but i dont understand about &gt;&gt; Ive placed our simple_barcode_detection function in the pyimagesearch module for organizational purposes.</p> 
            <p>what is pyimagesearch module?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=330447#respond" onclick="return addComment.moveForm( &quot;comment-330447&quot;, &quot;330447&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to tita">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-330541"></a> 
            <div id="li-comment-330541" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">June 26, 2015 at 5:55 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-330541" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-330541"> 
              <p>The PyImageSearch module is just a directory named <code>pyimagesearch</code> with a <code>__init__.py</code> file inside it to indicate that it is a module to the Python programming language. Download the source code associated with this post to get a better idea regarding the organization of the code.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=330541#respond" onclick="return addComment.moveForm( &quot;comment-330541&quot;, &quot;330541&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-372745"></a> 
          <div id="li-comment-372745" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/82e903bb3d7bbcfa1eac5be831ba83a1?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/82e903bb3d7bbcfa1eac5be831ba83a1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Rishi</span> 
            <span class="date">October 18, 2015 at 2:30 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-372745" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-372745"> 
            <p>Is there any means to decode the barcodes using python and opencv? I have used zbar to decode qrcodes . But didnt find much about the barcodes</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=372745#respond" onclick="return addComment.moveForm( &quot;comment-372745&quot;, &quot;372745&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Rishi">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-372993"></a> 
            <div id="li-comment-372993" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">October 19, 2015 at 6:13 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-372993" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-372993"> 
              <p>The zbar library is pretty much standard for this type of thing. If you want to decode barcodes in Python + OpenCV, youll likely need to roll your own method.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=372993#respond" onclick="return addComment.moveForm( &quot;comment-372993&quot;, &quot;372993&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-377602"></a> 
          <div id="li-comment-377602" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/45b7c8f5511507b2677f343efbc05cb2?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/45b7c8f5511507b2677f343efbc05cb2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Dmitriy</span> 
            <span class="date">November 4, 2015 at 4:51 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-377602" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-377602"> 
            <p>Thanks a lot for the tutorial, it helped a lot! </p> 
            <p>One thing to notice: if someone by some reason is using OpenCV 3 instead of OpenCV 2 (as I am), then syntax should be a bit different in the simple_barcode_detection.py.<br> You can find a gist with the updated code here: <a href="https://gist.github.com/998c7e2bfd06f7fc217c" rel="nofollow">https://gist.github.com/998c7e2bfd06f7fc217c</a></p> 
            <p>Best,<br> Dmitriy</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=377602#respond" onclick="return addComment.moveForm( &quot;comment-377602&quot;, &quot;377602&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Dmitriy">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-377614"></a> 
            <div id="li-comment-377614" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">November 4, 2015 at 6:30 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-377614" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-377614"> 
              <p>Awesome, thanks so much for sharing Dmitriy!</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=377614#respond" onclick="return addComment.moveForm( &quot;comment-377614&quot;, &quot;377614&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
           <li class="comment even depth-2"> <a name="comment-377816"></a> 
            <div id="li-comment-377816" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/30b2f546502cb5ed7725b162860bf207?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/30b2f546502cb5ed7725b162860bf207?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Mario</span> 
              <span class="date">November 5, 2015 at 6:02 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-377816" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-377816"> 
              <p>Hi Dmitriy,</p> 
              <p> The gist URL is giving me a 404 on github. Could you, please, check if it is correct?</p> 
              <p> Many thanks in advance!</p> 
              <p> Regards,</p> 
              <p>Mário</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=377816#respond" onclick="return addComment.moveForm( &quot;comment-377816&quot;, &quot;377816&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Mario">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-odd thread-alt depth-1"> <a name="comment-378371"></a> 
          <div id="li-comment-378371" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/45b7c8f5511507b2677f343efbc05cb2?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/45b7c8f5511507b2677f343efbc05cb2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Dmitriy</span> 
            <span class="date">November 10, 2015 at 1:21 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-378371" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-378371"> 
            <p>Hi Mario,</p> 
            <p>Thanks! It is something strange with that gist  it was correct several days ago, but now its disappeared.<br> Please find the new one (hope this one will survive): <a href="https://gist.github.com/b1c0d453283a5305d46d" rel="nofollow">https://gist.github.com/b1c0d453283a5305d46d</a></p> 
            <p>Best,<br> Dmitriy</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=378371#respond" onclick="return addComment.moveForm( &quot;comment-378371&quot;, &quot;378371&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Dmitriy">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-378467"></a> 
            <div id="li-comment-378467" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">November 11, 2015 at 6:36 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-378467" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-378467"> 
              <p>Hey Dmitriy  it looks like that one is 404ing too. If you to email me the .py file, Ill create a Gist under my personal account and it can live there.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=378467#respond" onclick="return addComment.moveForm( &quot;comment-378467&quot;, &quot;378467&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> 
            <ul class="children"> 
             <li class="comment odd alt depth-3"> <a name="comment-378481"></a> 
              <div id="li-comment-378481" class="comment-container"> 
               <div class="avatar">
                <img alt="" src="http://1.gravatar.com/avatar/45b7c8f5511507b2677f343efbc05cb2?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/45b7c8f5511507b2677f343efbc05cb2?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
               </div> 
               <div class="comment-head"> 
                <span class="name">Dmitriy</span> 
                <span class="date">November 11, 2015 at 10:32 am</span> 
                <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-378481" title="Direct link to this comment">#</a></span> 
                <span class="edit"></span> 
               </div>
               <!-- /.comment-head --> 
               <div class="comment-entry" id="comment-378481"> 
                <p>Hi Adrian,</p> 
                <p>Ive realized what was wrong: provided link it is a link for the gist cloning, not for the page itself, sorry. ? So, you just need to remove .git from the end of the link and then it will work OK.</p> 
                <div class="reply"> 
                 <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=378481#respond" onclick="return addComment.moveForm( &quot;comment-378481&quot;, &quot;378481&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Dmitriy">Reply</a> 
                </div>
                <!-- /.reply --> 
               </div>
               <!-- /comment-entry --> 
              </div>
              <!-- /.comment-container --> 
              <ul class="children"> 
               <li class="comment byuser comment-author-adrian bypostauthor even depth-4"> <a name="comment-378572"></a> 
                <div id="li-comment-378572" class="comment-container"> 
                 <div class="avatar">
                  <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
                 </div> 
                 <div class="comment-head"> 
                  <span class="name">Adrian Rosebrock</span> 
                  <span class="date">November 12, 2015 at 5:48 am</span> 
                  <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-378572" title="Direct link to this comment">#</a></span> 
                  <span class="edit"></span> 
                 </div>
                 <!-- /.comment-head --> 
                 <div class="comment-entry" id="comment-378572"> 
                  <p>Done! I have updated the original comments to remove the .git. The links are working perfectly now. Thanks again Dmitriy!</p> 
                  <div class="reply"> 
                   <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=378572#respond" onclick="return addComment.moveForm( &quot;comment-378572&quot;, &quot;378572&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
                  </div>
                  <!-- /.reply --> 
                 </div>
                 <!-- /comment-entry --> 
                </div>
                <!-- /.comment-container --> </li>
               <!-- #comment-## --> 
              </ul>
              <!-- .children --> </li>
             <!-- #comment-## --> 
            </ul>
            <!-- .children --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment odd alt thread-even depth-1"> <a name="comment-390591"></a> 
          <div id="li-comment-390591" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/81097259b3854339c3bacb7bf5e76ce8?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/81097259b3854339c3bacb7bf5e76ce8?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Patrick</span> 
            <span class="date">February 21, 2016 at 12:49 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-390591" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-390591"> 
            <p>Hi Adrian,</p> 
            <p>I executed the program. There wasnt any error and the video frame did not pop up to show the detection either. What do i miss out?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=390591#respond" onclick="return addComment.moveForm( &quot;comment-390591&quot;, &quot;390591&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Patrick">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor even depth-2"> <a name="comment-390666"></a> 
            <div id="li-comment-390666" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">February 22, 2016 at 4:26 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-390666" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-390666"> 
              <p>Where you using a builtin/USB camera? Or a Raspberry Pi camera module? If there wasnt an error and a video frame did not pop up, the OpenCV is having trouble accessing your video stream via the <code>cv2.VideoCapture</code> method. Go back and make sure that OpenCV can access your video stream.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=390666#respond" onclick="return addComment.moveForm( &quot;comment-390666&quot;, &quot;390666&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
           <li class="comment odd alt depth-2"> <a name="comment-394597"></a> 
            <div id="li-comment-394597" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://2.gravatar.com/avatar/b6fc9dfd7fe66fdb5cb654e9414a47ee?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/b6fc9dfd7fe66fdb5cb654e9414a47ee?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Miguel</span> 
              <span class="date">April 10, 2016 at 1:27 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-394597" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-394597"> 
              <p>Me too, I change threshold values(line 20) from 255, 255 to 127, 255 and work fine. I use opencv3 and python2 in W10.</p> 
              <p>Thanks for all to every body.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=394597#respond" onclick="return addComment.moveForm( &quot;comment-394597&quot;, &quot;394597&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Miguel">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-399920"></a> 
          <div id="li-comment-399920" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/7cf5277fbbe3fabda398e2fa8a0beb98?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/7cf5277fbbe3fabda398e2fa8a0beb98?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Edwin</span> 
            <span class="date">June 8, 2016 at 6:02 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-399920" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-399920"> 
            <p>Hi! Im doing my project, and trying to use your code, but it doesnt work! Im using my Raspberry Pi with the Pi Camera module and the program start, but end real quick. What Im doing wrong? It doest even turn on the Pi Camera and does not trough any errors. What Can I DO?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=399920#respond" onclick="return addComment.moveForm( &quot;comment-399920&quot;, &quot;399920&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Edwin">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-399975"></a> 
            <div id="li-comment-399975" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">June 9, 2016 at 5:21 pm</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-399975" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-399975"> 
              <p>The code is this program is designed for a USB webcam, <em>not</em> the Raspberry Pi camera module. You can access the Raspberry Pi camera module <a target="blank" href="http://www.pyimagesearch.com/2016/05/02/accessing-rpi-gpio-and-gpio-zero-with-opencv-python/" rel="nofollow">in this post</a>. Or better yet, modify the code to use the <a target="blank" href="http://www.pyimagesearch.com/2016/01/04/unifying-picamera-and-cv2-videocapture-into-a-single-class-with-opencv/" rel="nofollow">unifying VideoStream class</a>.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=399975#respond" onclick="return addComment.moveForm( &quot;comment-399975&quot;, &quot;399975&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-425619"></a> 
          <div id="li-comment-425619" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://2.gravatar.com/avatar/8e2ec8ab8da4738bf4e9c04e8d626166?s=40&amp;d=mm&amp;r=g" srcset="http://2.gravatar.com/avatar/8e2ec8ab8da4738bf4e9c04e8d626166?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Anish jain</span> 
            <span class="date">May 20, 2017 at 10:10 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-425619" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-425619"> 
            <p>Hi, Adrian</p> 
            <p>The script runs well without any errors and a video frame also pops up but it is unable to detect any barcodes.<br> Sometimes it throws random tiny rectangles but doesnt detect any barcodes.</p> 
            <p>PS: Im using a RaspberryPi-3 , OpenCV-3 and Python-2.7. But Ive made the four changes in line numbers  11, 12, 31 and 42 , to make the code compatible with OpenCV-3.</p> 
            <p>Please help me resolve the issue.</p> 
            <p>Also, Can I use Zbar for barcode recognition with the above mentioned specifications?</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=425619#respond" onclick="return addComment.moveForm( &quot;comment-425619&quot;, &quot;425619&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Anish jain">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-425700"></a> 
            <div id="li-comment-425700" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">May 21, 2017 at 5:11 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-425700" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-425700"> 
              <p>Are you using the example video I provided or using your own custom videos? Keep in mind that the barcode must be horizontal in order for it to be etected.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=425700#respond" onclick="return addComment.moveForm( &quot;comment-425700&quot;, &quot;425700&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-odd thread-alt depth-1"> <a name="comment-431985"></a> 
          <div id="li-comment-431985" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://1.gravatar.com/avatar/109dd76c49bfbc9a491c4017e227e5ec?s=40&amp;d=mm&amp;r=g" srcset="http://1.gravatar.com/avatar/109dd76c49bfbc9a491c4017e227e5ec?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">Carlos reyes</span> 
            <span class="date">August 9, 2017 at 1:27 pm</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-431985" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-431985"> 
            <p>Hi, Adrian</p> 
            <p>Can your code read the pdf417 barcode? Or what would Ive to do to achieve it?<br> Plis answer me, im desperate with this</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=431985#respond" onclick="return addComment.moveForm( &quot;comment-431985&quot;, &quot;431985&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Carlos reyes">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-432047"></a> 
            <div id="li-comment-432047" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">August 10, 2017 at 8:46 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-432047" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-432047"> 
              <p>I would take a look at the zbar library. According to <a target="blank" href="https://github.com/ZBar/ZBar/blob/master/zbar/decoder/pdf417.h" rel="nofollow">their source code</a> it seems like you might be able to read the pdf417 barcode.</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=432047#respond" onclick="return addComment.moveForm( &quot;comment-432047&quot;, &quot;432047&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
         <li class="comment even thread-even depth-1"> <a name="comment-434440"></a> 
          <div id="li-comment-434440" class="comment-container"> 
           <div class="avatar">
            <img alt="" src="http://0.gravatar.com/avatar/910d1f4d4e9229a46d6284c9e4b5c4f1?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/910d1f4d4e9229a46d6284c9e4b5c4f1?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
           </div> 
           <div class="comment-head"> 
            <span class="name">saraswati</span> 
            <span class="date">September 9, 2017 at 3:44 am</span> 
            <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-434440" title="Direct link to this comment">#</a></span> 
            <span class="edit"></span> 
           </div>
           <!-- /.comment-head --> 
           <div class="comment-entry" id="comment-434440"> 
            <p>no any error with barcode image detection.no any output. The detect function is not work.</p> 
            <p>I give this command python Barcode_detection.py image barcode_01.jpg in terminal and no any outpt. and no any error</p> 
            <div class="reply"> 
             <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=434440#respond" onclick="return addComment.moveForm( &quot;comment-434440&quot;, &quot;434440&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to saraswati">Reply</a> 
            </div>
            <!-- /.reply --> 
           </div>
           <!-- /comment-entry --> 
          </div>
          <!-- /.comment-container --> 
          <ul class="children"> 
           <li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2"> <a name="comment-434579"></a> 
            <div id="li-comment-434579" class="comment-container"> 
             <div class="avatar">
              <img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=80&amp;d=mm&amp;r=g 2x" class="avatar avatar-40 photo" height="40" width="40">
             </div> 
             <div class="comment-head"> 
              <span class="name">Adrian Rosebrock</span> 
              <span class="date">September 11, 2017 at 9:21 am</span> 
              <span class="perma"><a href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/#comment-434579" title="Direct link to this comment">#</a></span> 
              <span class="edit"></span> 
             </div>
             <!-- /.comment-head --> 
             <div class="comment-entry" id="comment-434579"> 
              <p>This blog post is on real-time barcode detection in video. Is there a particular reason why you are passing in a .JPG file instead of a video file?</p> 
              <div class="reply"> 
               <a rel="nofollow" class="comment-reply-link" href="http://www.pyimagesearch.com/2014/12/15/real-time-barcode-detection-video-python-opencv/?replytocom=434579#respond" onclick="return addComment.moveForm( &quot;comment-434579&quot;, &quot;434579&quot;, &quot;respond&quot;, &quot;1669&quot; )" aria-label="Reply to Adrian Rosebrock">Reply</a> 
              </div>
              <!-- /.reply --> 
             </div>
             <!-- /comment-entry --> 
            </div>
            <!-- /.comment-container --> </li>
           <!-- #comment-## --> 
          </ul>
          <!-- .children --> </li>
         <!-- #comment-## --> 
        </ol> 
       </div> 
       <div id="respond" class="comment-respond"> 
        <h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2014/12/15/real-time-barcode-detection-video-python-opencv/#respond" style="display:none;">Click here to cancel reply.</a></small></h3> 
        <form action="http://www.pyimagesearch.com/wp-comments-post.php" method="post" id="commentform" class="comment-form"> 
         <p class="comment-form-comment"><label class="hide" for="comment">Comment</label> <textarea tabindex="4" id="comment" name="comment" cols="50" rows="10" maxlength="65525" aria-required="true" required></textarea></p>
         <p class="comment-form-author"><input id="author" name="author" type="text" class="txt" tabindex="1" value="" size="30" aria-required="true"><label for="author">Name <span class="required">(required)</span></label> </p> 
         <p class="comment-form-email"><input id="email" name="email" type="text" class="txt" tabindex="2" value="" size="30" aria-required="true"><label for="email">Email (will not be published) <span class="required">(required)</span></label> </p> 
         <p class="comment-form-url"><input id="url" name="url" type="text" class="txt" tabindex="3" value="" size="30"><label for="url">Website</label></p> 
         <p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Submit Comment"> <input type="hidden" name="comment_post_ID" value="1669" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"> </p>
         <p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="4034da767e"></p>
         <p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="77"></p> 
        </form> 
       </div>
       <!-- #respond --> 
      </section>
      <!-- /#main --> 
      <aside id="sidebar"> 
       <div id="text-7" class="widget widget_text">
        <h3>Resource Guide (its totally free).</h3> 
        <div class="textwidget">
         <img title="Get your FREE 11-page Image Search Engine Resource Guide PDF" src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/imagesearchengine-resourceguide-cover.png" style="padding-right: 10px; width: 100px; float: left;"> 
         <p> Click the button below to get my <strong>free 11-page Image Search Engine Resource Guide PDF</strong>. Uncover <strong>exclusive techniques</strong> that I don't publish on this blog and start building image search engines of your own. </p> 
         <div style="clear: left;"></div> 
         <center>
          <a href="#" class="manual-optin-trigger" data-optin-slug="rxgemdcavzehuzpr" style="color: rgb(255, 255, 255); text-decoration: none; font-family: Helvetica, Arial, sans-serif; font-weight: bold; font-size: 16px; line-height: 20px; padding: 10px; display: inline-block; max-width: 300px; border-radius: 5px; text-shadow: rgba(0, 0, 0, 0.247059) 0px -1px 1px; box-shadow: rgba(255, 255, 255, 0.498039) 0px 1px 3px inset, rgba(0, 0, 0, 0.498039) 0px 1px 3px; background: #DF4B4B;">Download for Free!</a>
         </center>
        </div> 
       </div>
       <div id="text-9" class="widget widget_text">
        <h3>Deep Learning for Computer Vision with Python Book</h3> 
        <div class="textwidget">
         <a target="blank" href="http://www.pyimagesearch.com/deep-learning-computer-vision-python-book/"><img title="Deep Learning with Computer Vision and Python Kickstarter" src="http://www.pyimagesearch.com/static/templates/deep-learning-for-computer-vision/images/dl_for_cv_cover.png" style="padding-bottom: 5px; width: 250px;" onClick="document.location='http://www.pyimagesearch.com/deep-learning-computer-vision-python-book/'; return false;"></a> 
         <p>You're interested in deep learning and computer vision, <em>but you don't know how to get started.</em> Let me help. <strong><a target="blank" href="http://www.pyimagesearch.com/deep-learning-computer-vision-python-book/">My new book will teach you all you need to know about deep learning.</a></strong></p> 
         <p><input type="submit" value="Click here to pre-order my new book" style="background-color: #DF4B4B;" onClick="document.location='http://www.pyimagesearch.com/deep-learning-computer-vision-python-book/'; return false;"></p>
        </div> 
       </div>
       <div id="text-5" class="widget widget_text">
        <h3>You can detect faces in images &amp; video.</h3> 
        <div class="textwidget">
         <a href="http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV"><img title="Learn how to detect faces in images and video" src="http://www.pyimagesearch.com/wp-content/uploads/2014/12/adrian_face_detection_sidebar.png" style="padding-bottom: 5px; width: 300px;" onClick="document.location='http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;"></a> 
         <p> Are you interested in <strong>detecting faces in images &amp; video?</strong> But <strong>tired of Googling for tutorials</strong> that <em>never work?</em> Then let me help! I guarantee that my new book will turn you into a <strong>face detection ninja</strong> by the end of this weekend. <a href="http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection" title="Practical Python and OpenCV" onclick="document.location='http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;">Click here to give it a shot yourself.</a> </p> 
         <p><input type="submit" value="Click here to master face detection" style="background-color: #DF4B4B;" onClick="document.location='http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection'; return false;"></p>
        </div> 
       </div>
       <div id="text-8" class="widget widget_text">
        <h3>PyImageSearch Gurus: NOW ENROLLING!</h3> 
        <div class="textwidget">
         <div id="pyimg_gurus_carousel_container" style="width: 300px; height: 310px; cursor: pointer;" onclick="document.location='http://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar'; return false;"> 
          <div id="pyimg_gurus_carousel" style="width: 300px; height: 300px; background: url('http://www.pyimagesearch.com/static/templates/pyimagesearch-gurus/images/gurus_carousel.jpg') no-repeat; background-position: 0px 0px;"></div> 
         </div> 
         <p style="margin-bottom: 8px;"><strong>The PyImageSearch Gurus course is <em>now enrolling!</em></strong> Inside the course you'll learn how to perform:</p> 
         <ul style="margin-bottom: 8px;"> 
          <li>Automatic License Plate Recognition (ANPR)</li> 
          <li>Deep Learning</li> 
          <li>Face Recognition</li> 
          <li><em>and much more!</em></li> 
         </ul> 
         <p><strong>Click the button below to learn more about the course, take a tour, and get 10 (FREE) sample lessons</strong>.</p> 
         <p><input type="submit" value="Take a tour &amp; get 10 (free) lessons" style="background-color: #DF4B4B;" onClick="document.location='http://www.pyimagesearch.com/pyimagesearch-gurus/?src=sidebar'; return false;"></p>
        </div> 
       </div>
       <div id="woo_blogauthorinfo-2" class="widget widget_woo_blogauthorinfo">
        <h3>Hello! Im Adrian Rosebrock.</h3>
        <span class="left"><img alt="" src="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=90&amp;d=mm&amp;r=g" srcset="http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=180&amp;d=mm&amp;r=g 2x" class="avatar avatar-90 photo" height="90" width="90"></span> 
        <p>I'm an entrepreneur and Ph.D who has launched two successful image search engines, <a target="blank" href="http://www.idmypill.com">ID My Pill</a> and <a target="blank" href="http://www.chicengine.com">Chic Engine</a>. I'm here to share my tips, tricks, and hacks I've learned along the way.</p> 
        <div class="fix"></div> 
       </div>
       <div id="text-4" class="widget widget_text">
        <h3>Learn computer vision in a single weekend.</h3> 
        <div class="textwidget">
         <a href="http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV"><img title="Become an OpenCV guru" src="http://www.pyimagesearch.com/static/templates/practical-python-and-opencv/images/practical_python_and_opencv_2nd_cover.png" style="margin-left: 35px; padding-bottom: 15px; width: 215px;"></a> 
         <p>Want to learn computer vision &amp; OpenCV? I can teach you in a <strong>single weekend</strong>. I know. It sounds crazy, but its no joke. My new book is your <strong>guaranteed, quick-start guide</strong> to becoming an OpenCV Ninja. So why not give it a try? <a href="http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend" title="Practical Python and OpenCV">Click here to become a computer vision ninja.</a></p> 
         <p><input type="submit" value="Click here to become an OpenCV ninja" style="background-color: #DF4B4B;" onClick="document.location='http://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend'; return false;"></p>
        </div> 
       </div>
       <div id="text-3" class="widget widget_text">
        <h3>Subscribe via RSS</h3> 
        <div class="textwidget">
         <a target="blank" href="http://feeds.feedburner.com/Pyimagesearch"><img title="PyImageSearch RSS Feed" src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/rss-icon.png" style="padding-right: 10px; float: left;"></a> 
         <p><strong>Never miss a post!</strong> Subscribe to the PyImageSearch RSS Feed and keep up to date with my image search engine tutorials, tips, and tricks</p>
        </div> 
       </div> 
       <div id="woo_tabs-2" class="widget widget_woo_tabs"> 
        <div id="tabs"> 
         <ul class="wooTabs"> 
          <li class="popular"><a href="#tab-pop">Popular</a></li> 
         </ul> 
         <div class="clear"></div> 
         <div class="boxes box inside"> 
          <ul id="tab-pop" class="list"> 
           <li> <a title="Install OpenCV and Python on your Raspberry Pi 2 and B+" href="http://www.pyimagesearch.com/2015/02/23/install-opencv-and-python-on-your-raspberry-pi-2-and-b/">Install OpenCV and Python on your Raspberry Pi 2 and B+</a> <span class="meta">February 23, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox" href="http://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/">Home surveillance and motion detection with the Raspberry Pi, Python, OpenCV, and Dropbox</a> <span class="meta">June 1, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3" href="http://www.pyimagesearch.com/2016/04/18/install-guide-raspberry-pi-3-raspbian-jessie-opencv-3/">Install guide: Raspberry Pi 3 + Raspbian Jessie + OpenCV 3</a> <span class="meta">April 18, 2016</span> 
            <div class="fix"></div> </li> 
           <li> <a title="How to install OpenCV 3 on Raspbian Jessie" href="http://www.pyimagesearch.com/2015/10/26/how-to-install-opencv-3-on-raspbian-jessie/">How to install OpenCV 3 on Raspbian Jessie</a> <span class="meta">October 26, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Basic motion detection and tracking with Python and OpenCV" href="http://www.pyimagesearch.com/2015/05/25/basic-motion-detection-and-tracking-with-python-and-opencv/">Basic motion detection and tracking with Python and OpenCV</a> <span class="meta">May 25, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Accessing the Raspberry Pi Camera with OpenCV and Python" href="http://www.pyimagesearch.com/2015/03/30/accessing-the-raspberry-pi-camera-with-opencv-and-python/">Accessing the Raspberry Pi Camera with OpenCV and Python</a> <span class="meta">March 30, 2015</span> 
            <div class="fix"></div> </li> 
           <li> <a title="Ubuntu 16.04: How to install OpenCV" href="http://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/">Ubuntu 16.04: How to install OpenCV</a> <span class="meta">October 24, 2016</span> 
            <div class="fix"></div> </li> 
          </ul> 
         </div>
         <!-- /.boxes --> 
        </div>
        <!-- /wooTabs --> 
       </div> 
       <div id="woo_search-2" class="widget widget_woo_search">
        <h3>Search</h3>
        <div class="search_main"> 
         <form method="get" class="searchform" action="http://www.pyimagesearch.com/"> 
          <input type="text" class="field s" name="s" value="Search..." onfocus="if (this.value == 'Search...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search...';}"> 
          <button type="submit" class="icon-search submit" name="submit" value="Search"></button> 
         </form> 
         <div class="fix"></div> 
        </div> 
       </div>
      </aside>
      <!-- /#sidebar --> 
     </div>
     <!-- /#main-sidebar-container --> 
    </div>
    <!-- /#content --> 
    <!--#footer-widgets-container--> 
    <div id="footer-widgets-container"> 
    </div>
    <!--/#footer_widgets_container_end--> 
    <!--#footer_container_start--> 
    <div id="footer-container"> 
     <footer id="footer" class="col-full"> 
      <div id="copyright" class="col-left">
        Find me on 
       <a target="blank" href="https://twitter.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Twitter</a>, 
       <a target="blank" href="https://www.facebook.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Facebook</a>, 
       <a target="blank" href="https://plus.google.com/115909176846554117735/?rel=author" style="font-weight: bold; color: #FFFFFF;">Google+</a>, and 
       <a target="blank" href="http://www.linkedin.com/pub/adrian-rosebrock/2a/873/59b" style="font-weight: bold; color: #FFFFFF;">LinkedIn</a>.
       <br> 
       <p>© 2017 PyImageSearch. All Rights Reserved. </p> 
      </div> 
      <div id="credit" class="col-right"> 
      </div> 
     </footer> 
    </div>
    <!--/#footer_container_end--> 
   </div>
   <!-- /#inner-wrapper --> 
  </div>
  <!-- /#wrapper --> 
  <div class="fix"></div>
  <!--/.fix--> 
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-46641058-1', 'pyimagesearch.com');
  ga('send', 'pageview');

</script> 
  <!-- Drip --> 
  <script type="text/javascript">
  var _dcq = _dcq || [];
  var _dcs = _dcs || {}; 
  _dcs.account = '4768429';
  
  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true; 
    dc.src = '//tag.getdrip.com/4768429.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();
</script> 
  <!-- HitTail Code --> 
  <script type="text/javascript">
	(function(){ var ht = document.createElement('script');ht.async = true;
	  ht.type='text/javascript';ht.src = '//115962.hittail.com/mlt.js';
	  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ht, s);})();
</script> 
  <script type="text/javascript">
  (function() {
    window._pa = window._pa || {};
    // _pa.orderId = "myOrderId"; // OPTIONAL: attach unique conversion identifier to conversions
    // _pa.revenue = "19.99"; // OPTIONAL: attach dynamic purchase values to conversions
    // _pa.productId = "myProductId"; // OPTIONAL: Include product ID for use with dynamic ads
    var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.async = true;
    pa.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + "//tag.perfectaudience.com/serve/54220efd7ab7f03f7e000043.js";
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);

// visited blog tracking
window._pq = window._pq || [];
_pq.push(['track', 'visited blog']);
  })();
</script> 
  <!-- -- scroll to code ----> 
  <script type="text/javascript">
jQuery(document).ready(function(){
	jQuery("#scroll_to_code").click(function(event){
		event.preventDefault();
		jQuery('html, body').animate({scrollTop: jQuery('#post_downloads').offset().top}, 1000);
	});
});
</script> 
  <!-- gurus sidebar carousel --> 
  <script type="text/javascript">
	jQuery(document).ready(function(){
		GURUS_CAROUSEL_IDX = 1;

		window.setInterval(function(){
			jQuery("#pyimg_gurus_carousel").fadeOut(function(){
				GURUS_CAROUSEL_TOP = GURUS_CAROUSEL_IDX * -300;
				jQuery("#pyimg_gurus_carousel").css("background-position", "0px " + GURUS_CAROUSEL_TOP + "px");
				GURUS_CAROUSEL_IDX += 1;

				if (GURUS_CAROUSEL_IDX == 4){
					GURUS_CAROUSEL_IDX = 0;
				}
			}).delay(250).fadeIn();
		}, 5000);
	});
</script> 
  <!-- Woo Tabs Widget --> 
  <script type="text/javascript">
jQuery(document).ready(function(){
	// UL = .wooTabs
	// Tab contents = .inside

	var tag_cloud_class = '#tagcloud';

	//Fix for tag clouds - unexpected height before .hide()
	var tag_cloud_height = jQuery( '#tagcloud').height();

	jQuery( '.inside ul li:last-child').css( 'border-bottom','0px' ); // remove last border-bottom from list in tab content
	jQuery( '.wooTabs').each(function(){
		jQuery(this).children( 'li').children( 'a:first').addClass( 'selected' ); // Add .selected class to first tab on load
	});
	jQuery( '.inside > *').hide();
	jQuery( '.inside > *:first-child').show();

	jQuery( '.wooTabs li a').click(function(evt){ // Init Click funtion on Tabs

		var clicked_tab_ref = jQuery(this).attr( 'href' ); // Strore Href value

		jQuery(this).parent().parent().children( 'li').children( 'a').removeClass( 'selected' ); //Remove selected from all tabs
		jQuery(this).addClass( 'selected' );
		jQuery(this).parent().parent().parent().children( '.inside').children( '*').hide();

		jQuery( '.inside ' + clicked_tab_ref).fadeIn(500);

		 evt.preventDefault();

	})
})
</script> 
  <!-- This site is converting visitors into subscribers and customers with OptinMonster - http://optinmonster.com --> 
  <div id="om-holomlidgwitgymd-holder"></div> 
  <script>var holomlidgwitgymd,
			holomlidgwitgymd_poll = function () {
				var r = 0;
				return function (n, l) {
					clearInterval(r), r = setInterval(n, l)
				}
			}();
			!function (e, t, n) {
				if (e.getElementById(n)) {
					holomlidgwitgymd_poll(function () {
						if (window['om_loaded']) {
							if (!holomlidgwitgymd) {
								holomlidgwitgymd= new OptinMonsterApp();
								return holomlidgwitgymd.
								init({
									u      : "18464.467106",
									staging:0,
									dev    :0,
									beta   :0});
							}
						}
					}, 25);
					return;
				}
				var d = false, o = e.createElement(t);
				o.id = n, o.src = "//a.optnmnstr.com/app/js/api.min.js", o.async = true, o.onload = o.onreadystatechange = function () {
					if (!d) {
						if (!this.readyState || this.readyState === "loaded" || this.readyState === "complete") {
							try {
								d = om_loaded = true;
								holomlidgwitgymd= new OptinMonsterApp();holomlidgwitgymd.
								init({
									u      : "18464.467106",
									staging:0,
									dev    :0,
									beta   :0});
								o.onload = o.onreadystatechange = null;
							} catch (t) {
							}
						}
					}
				};
				(document.getElementsByTagName("head")[0] || document.documentElement).appendChild(o)
			}(document, "script", "omapi-script");</script>
  <!-- / OptinMonster -->
  <!-- This site is converting visitors into subscribers and customers with OptinMonster - http://optinmonster.com --> 
  <div id="om-rxgemdcavzehuzpr-holder"></div> 
  <script>var rxgemdcavzehuzpr,
			rxgemdcavzehuzpr_poll = function () {
				var r = 0;
				return function (n, l) {
					clearInterval(r), r = setInterval(n, l)
				}
			}();
			!function (e, t, n) {
				if (e.getElementById(n)) {
					rxgemdcavzehuzpr_poll(function () {
						if (window['om_loaded']) {
							if (!rxgemdcavzehuzpr) {
								rxgemdcavzehuzpr= new OptinMonsterApp();
								return rxgemdcavzehuzpr.
								init({
									u      : "18464.329426",
									staging:0,
									dev    :0,
									beta   :0});
							}
						}
					}, 25);
					return;
				}
				var d = false, o = e.createElement(t);
				o.id = n, o.src = "//a.optnmnstr.com/app/js/api.min.js", o.async = true, o.onload = o.onreadystatechange = function () {
					if (!d) {
						if (!this.readyState || this.readyState === "loaded" || this.readyState === "complete") {
							try {
								d = om_loaded = true;
								rxgemdcavzehuzpr= new OptinMonsterApp();rxgemdcavzehuzpr.
								init({
									u      : "18464.329426",
									staging:0,
									dev    :0,
									beta   :0});
								o.onload = o.onreadystatechange = null;
							} catch (t) {
							}
						}
					}
				};
				(document.getElementsByTagName("head")[0] || document.documentElement).appendChild(o)
			}(document, "script", "omapi-script");</script>
  <!-- / OptinMonster -->
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/5b374.js"></script> 
  <script type="text/javascript">var holomlidgwitgymd_shortcode = true;var rxgemdcavzehuzpr_shortcode = true;</script> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/39598.js"></script> 
  <script type="text/javascript">
/* <![CDATA[ */
var fsb = {"ajax":"http:\/\/www.pyimagesearch.com\/wp-admin\/admin-ajax.php","nonce":"7f83bd10b4"};
/* ]]> */
</script> 
  <script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/b9f65.js"></script> 
  <script type="text/javascript">var omapi_localized = { ajax: 'http://www.pyimagesearch.com/wp-admin/admin-ajax.php?optin-monster-ajax-route=1', nonce: '3cd5114ded' };</script>   
  <!-- Performance optimized by W3 Total Cache. Learn more: https://www.w3-edge.com/products/

Object Caching 12496/26145 objects using disk
Page Caching using disk: enhanced
Minified using disk
Database Caching 35/135 queries in 0.161 seconds using disk

 Served from: www.pyimagesearch.com @ 2017-09-17 12:56:25 by W3 Total Cache -->
 </body>
</html>