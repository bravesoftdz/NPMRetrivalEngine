<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
 <head> 
  <meta content="text/html; charset=utf-8" http-equiv="content-type"> 
  <title>goslate 1.5.1 : Python Package Index</title> 
  <meta content="google translation i18n l10n"> 
  <meta content="Goslate: Free Google Translate API"> 
  <link rel="alternate" type="application/rss+xml" title="RSS: 40 latest updates" href="https://pypi.python.org/pypi?:action=rss"> 
  <link rel="alternate" type="application/rss+xml" title="RSS: 40 newest packages" href="https://pypi.python.org/pypi?:action=packages_rss"> 
  <link rel="stylesheet" media="screen" href="/static/styles/screen-switcher-default.css" type="text/css"> 
  <link media="screen" href="/static/styles/netscape4.css" type="text/css" rel="stylesheet"> 
  <link media="print" href="/static/styles/print.css" type="text/css" rel="stylesheet"> 
  <link media="screen" href="/static/styles/largestyles.css" type="text/css" rel="alternate stylesheet" title="large text"> 
  <link media="screen" href="/static/styles/defaultfonts.css" type="text/css" rel="alternate stylesheet" title="default fonts"> 
  <link rel="stylesheet" media="screen" href="/static/css/docutils.css" type="text/css"> 
  <link rel="stylesheet" media="screen" href="/static/css/pygments.css" type="text/css"> 
  <!-- allow pypi to override the standard pydotorg/docutils/etc. styles --> 
  <link rel="stylesheet" href="/static/css/pypi.css" type="text/css"> 
  <link media="screen" rel="stylesheet" href="/static/css/pypi-screen.css" type="text/css"> 
  <meta name="google-site-verification" content="NSgF04qslVV4P7nymxJDSkWVK09zfdPTxgZfU3dNSoQ"> 
  <meta name="keywords" content="google translation i18n l10n"> 
  <meta name="description" content="Goslate: Free Google Translate API"> 
  <link rel="meta" title="DOAP" type="application/rdf+xml" href="/pypi?:action=doap&amp;name=goslate&amp;version=1.5.1"> 
  <style type="text/css">
  table.form th {white-space: pre;}
 </style> 
  <style type="text/css">
       </style> 
 </head> 
 <body> 
  <!--  Logo  --> 
  <h1 id="logoheader"> <a accesskey="1" href="http://www.python.org" id="logolink"> <img src="/static/images/python-logo.png" alt="homepage" border="0" id="logo"> </a> </h1> 
  <!--  Skip to Navigation  --> 
  <div class="skiptonav">
   <a accesskey="2" href="#left-hand-navigation"><img src="/static/images/trans.gif" alt="skip to navigation" border="0" id="skiptonav"></a>
  </div> 
  <div class="skiptonav">
   <a accesskey="3" href="#content-body"><img src="/static/images/trans.gif" alt="skip to content" border="0" id="skiptocontent"></a>
  </div> 
  <!--  Utility Menu  --> 
  <div id="utility-menu"> 
   <!--  Search Box  --> 
   <div id="searchbox"> 
    <form id="searchform" method="get" name="searchform" action="/pypi"> 
     <input type="hidden" name=":action" value="search"> 
     <div id="search"> 
      <input class="input-text" id="term" name="term" autofocus> 
      <input class="input-button" type="submit" name="submit" value="search" id="submit"> 
     </div> 
    </form> 
   </div> 
   <!-- XXX: reinstate this       <div id="screen-switcher"></div> --> 
  </div> 
  <div id="left-hand-navigation"> 
   <!--  Main Menu NEED LEVEL TWO HEADER AND FOOTER --> 
   <div id="menu"> 
    <ul class="level-one"> 
     <li class="selected"> <a class="selected" href="/pypi">Package Index</a> 
      <ul class="level-two"> 
       <li class=""><a class="" href="/pypi?%3Aaction=browse">Browse&nbsp;packages</a></li> 
       <li class=""><a class="" href="/pypi?%3Aaction=list_classifiers">List&nbsp;trove&nbsp;classifiers</a></li> 
       <li class=""><a class="" href="/pypi?%3Aaction=rss">RSS&nbsp;(latest&nbsp;40&nbsp;updates)</a></li> 
       <li class=""><a class="" href="/pypi?%3Aaction=packages_rss">RSS&nbsp;(newest&nbsp;40&nbsp;packages)</a></li> 
       <li><a href="/tos">Terms of Service</a></li> 
       <li><a href="http://wiki.python.org/moin/CheeseShopTutorial">PyPI Tutorial</a></li> 
       <li><a href="/security">PyPI Security</a></li> 
       <li><a href="http://sourceforge.net/tracker/?group_id=66150&amp;atid=513504">PyPI Support</a></li> 
       <li><a href="https://github.com/pypa/pypi-legacy/issues">PyPI Bug Reports</a></li> 
       <li><a href="http://www.python.org/sigs/distutils-sig/">PyPI Discussion</a></li> 
       <li><a href="http://wiki.python.org/moin/CheeseShopDev">PyPI Developer Info</a></li> 
      </ul> </li> 
     <li class=""><a href="http://www.python.org/about" class="" title="About The Python Language">About</a> </li>
     <li class=""><a href="http://www.python.org/news" class="" title="">News</a> </li>
     <li class=""><a href="http://www.python.org/doc" class="" title="">Documentation</a> </li>
     <li class=""><a href="http://www.python.org/download" title="">Download</a> </li>
     <li class=""><a href="http://www.python.org/community" class="" title="">Community</a> </li>
     <li class=""><a href="http://www.python.org/psf" class="" title="Python Software Foundation">Foundation</a> </li>
     <li class=""><a href="http://www.python.org/dev" class="" title="Python Core Language Development">Core Development</a> </li> 
    </ul> 
   </div> 
  </div> 
  <div id="content-body"> 
   <div id="body-main"> 
    <div id="content"> 
     <div id="breadcrumb"> 
      <a href="/pypi">Package Index</a> 
      <span class="breadcrumb-separator">&gt;</span> 
      <a href="/pypi/goslate">goslate</a> 
      <span class="breadcrumb-separator">&gt;</span> 
      <a href="/pypi/goslate/1.5.1">1.5.1</a> 
     </div> 
     <div id="document-floating"> 
      <div id="document-navigation" style="overflow-y: auto; max-height: 15em; overflow-x: hidden;"> 
       <h4>Not Logged In</h4> 
       <ul> 
        <li><a href="/pypi?%3Aaction=login_form">Login</a></li> 
        <li><a href="/pypi?%3Aaction=register_form">Register</a></li> 
        <li><a href="/pypi?%3Aaction=forgotten_password_form">Lost Login?</a></li> 
        <li><a href="/openid_login">Login with OpenID</a> <a style="border: none;" href="/openid_login?provider=Launchpad"><img width="16" height="16" alt="Launchpad" src="https://launchpad.net/@@/launchpad.png" title="Launchpad"></a> </li> 
        <li><a href="/google_login">Login with Google<img width="16" height="16" src="https://www.google.com/favicon.ico" title="Google Login" alt="Google Login"></a></li> 
       </ul> 
       <div id="statusdiv"> 
       </div> 
      </div> 
     </div> 
     <div class="section"> 
      <h1>goslate 1.5.1</h1> 
      <div id="download-button"> 
       <a class="button green" style="float:right;" href="#downloads">Downloads ?</a> 
      </div> 
      <p style="font-style: italic">Goslate: Free Google Translate API</p> 
      <p> <a href="http://pythonhosted.org/goslate/">Package Documentation</a> </p> 
      <div> 
       <p>Note</p> 
       <p>Google has updated its translation service recently with a ticket mechanism to prevent simple crawler program like <tt>goslate</tt> from accessing. Though a more sophisticated crawler may still work technically, however it would have crossed the fine line between using the service and breaking the service. <tt>goslate</tt> will not be updated to break google’s ticket mechanism. Free lunch is over. Thanks for using.</p> 
      </div> 
      <div id="contents"> 
       <ul> 
        <li><a href="#simple-usage" id="id5" rel="nofollow">Simple Usage</a></li> 
        <li><a href="#installation" id="id6" rel="nofollow">Installation</a></li> 
        <li><a href="#proxy-support" id="id7" rel="nofollow">Proxy Support</a></li> 
        <li><a href="#romanlization" id="id8" rel="nofollow">Romanlization</a></li> 
        <li><a href="#language-detection" id="id9" rel="nofollow">Language Detection</a></li> 
        <li><a href="#concurrent-querying" id="id10" rel="nofollow">Concurrent Querying</a></li> 
        <li><a href="#batch-translation" id="id11" rel="nofollow">Batch Translation</a></li> 
        <li><a href="#performance-consideration" id="id12" rel="nofollow">Performance Consideration</a></li> 
        <li><a href="#lookup-details-in-dictionary" id="id13" rel="nofollow">Lookup Details in Dictionary</a></li> 
        <li><a href="#query-error" id="id14" rel="nofollow">Query Error</a></li> 
        <li><a href="#api-references" id="id15" rel="nofollow">API References</a></li> 
        <li><a href="#command-line-interface" id="id16" rel="nofollow">Command Line Interface</a></li> 
        <li><a href="#how-to-contribute" id="id17" rel="nofollow">How to Contribute</a></li> 
        <li><a href="#what-s-new" id="id18" rel="nofollow">What’s New</a>
         <ul> 
          <li><a href="#id1" id="id19" rel="nofollow">1.5.0</a></li> 
          <li><a href="#id2" id="id20" rel="nofollow">1.4.0</a></li> 
          <li><a href="#id3" id="id21" rel="nofollow">1.3.2</a></li> 
          <li><a href="#id4" id="id22" rel="nofollow">1.3.0</a></li> 
         </ul> </li> 
       </ul> 
      </div> 
      <p><tt>goslate</tt> provides you <em>free</em> python API to google translation service by querying google translation website.</p> 
      <p>It is:</p> 
      <ul> 
       <li><strong>Free</strong>: get translation through public google web site without fee</li> 
       <li><strong>Fast</strong>: batch, cache and concurrently fetch</li> 
       <li><strong>Simple</strong>: single file module, just <tt><span class="pre">Goslate().translate('Hi!',</span> 'zh')</tt></li> 
      </ul> 
      <div id="simple-usage"> 
       <h2><a href="#id5" rel="nofollow">Simple Usage</a></h2> 
       <p>The basic usage is simple:</p> 
       <pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">goslate</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">gs</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="s1">'hello world'</span><span class="p">,</span> <span class="s1">'de'</span><span class="p">))</span>
<span class="n">hallo</span> <span class="n">welt</span>
</pre> 
      </div> 
      <div id="installation"> 
       <h2><a href="#id6" rel="nofollow">Installation</a></h2> 
       <p>goslate support both Python2 and Python3. You could install it via:</p> 
       <pre>$ pip install goslate
</pre> 
       <p>or just download <a href="https://bitbucket.org/zhuoqiang/goslate/raw/tip/goslate.py" rel="nofollow">latest goslate.py</a> directly and use</p> 
       <p><tt>futures</tt> <a href="https://pypi.python.org/pypi/futures" rel="nofollow">pacakge</a> is optional but recommended to install for best performance in large text translation task.</p> 
      </div> 
      <div id="proxy-support"> 
       <h2><a href="#id7" rel="nofollow">Proxy Support</a></h2> 
       <p>Proxy support could be added as following:</p> 
       <pre><span class="kn">import</span> <span class="nn">urllib2</span>
<span class="kn">import</span> <span class="nn">goslate</span>

<span class="n">proxy_handler</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">ProxyHandler</span><span class="p">({</span><span class="s2">"http"</span> <span class="p">:</span> <span class="s2">"http://proxy-domain.name:8080"</span><span class="p">})</span>
<span class="n">proxy_opener</span> <span class="o">=</span> <span class="n">urllib2</span><span class="o">.</span><span class="n">build_opener</span><span class="p">(</span><span class="n">urllib2</span><span class="o">.</span><span class="n">HTTPHandler</span><span class="p">(</span><span class="n">proxy_handler</span><span class="p">),</span>
                                    <span class="n">urllib2</span><span class="o">.</span><span class="n">HTTPSHandler</span><span class="p">(</span><span class="n">proxy_handler</span><span class="p">))</span>

<span class="n">gs_with_proxy</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">(</span><span class="n">opener</span><span class="o">=</span><span class="n">proxy_opener</span><span class="p">)</span>
<span class="n">translation</span> <span class="o">=</span> <span class="n">gs_with_proxy</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="s2">"hello world"</span><span class="p">,</span> <span class="s2">"de"</span><span class="p">)</span>
</pre> 
      </div> 
      <div id="romanlization"> 
       <h2><a href="#id8" rel="nofollow">Romanlization</a></h2> 
       <p>Romanization or latinization (or romanisation, latinisation), in linguistics, is the conversion of writing from a different writing system to the Roman (Latin) script, or a system for doing so.</p> 
       <p>For example, pinyin is the default romanlization method for Chinese language.</p> 
       <p>You could get translation in romanlized writing as following:</p> 
       <pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">goslate</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">roman_gs</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">(</span><span class="n">writing</span><span class="o">=</span><span class="n">goslate</span><span class="o">.</span><span class="n">WRITING_ROMAN</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">roman_gs</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="s1">'China'</span><span class="p">,</span> <span class="s1">'zh'</span><span class="p">))</span>
<span class="n">Zh</span><span class="err">?</span><span class="n">nggu</span><span class="err">ó</span>
</pre> 
       <p>You could also get translation in both native writing system and ramon writing system</p> 
       <pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">goslate</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">(</span><span class="n">writing</span><span class="o">=</span><span class="n">goslate</span><span class="o">.</span><span class="n">WRITING_NATIVE_AND_ROMAN</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="s1">'China'</span><span class="p">,</span> <span class="s1">'zh'</span><span class="p">)</span>
<span class="p">(</span><span class="s1">'??'</span><span class="p">,</span> <span class="s1">'Zh?ngguó'</span><span class="p">)</span>
</pre> 
       <p>You could see the result will be a tuple in this case: <tt><span class="pre">(Translation-in-Native-Writing,</span> <span class="pre">Translation-in-Roman-Writing)</span></tt></p> 
      </div> 
      <div id="language-detection"> 
       <h2><a href="#id9" rel="nofollow">Language Detection</a></h2> 
       <p>Sometimes all you need is just find out which language the text is:</p> 
       <pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">golsate</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">language_id</span> <span class="o">=</span> <span class="n">gs</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="s1">'hallo welt'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">language_id</span>
<span class="s1">'de'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span><span class="o">.</span><span class="n">get_languages</span><span class="p">()[</span><span class="n">language_id</span><span class="p">]</span>
<span class="s1">'German'</span>
</pre> 
      </div> 
      <div id="concurrent-querying"> 
       <h2><a href="#id10" rel="nofollow">Concurrent Querying</a></h2> 
       <p>It is not necessary to roll your own multi-thread solution to speed up massive translation. Goslate already done it for you. It utilizes <tt>concurrent.futures</tt> for concurent querying. The max worker number is 120 by default.</p> 
       <p>The worker number could be changed as following:</p> 
       <pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">golsate</span>
<span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">concurrent.futures</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">executor</span> <span class="o">=</span> <span class="n">concurrent</span><span class="o">.</span><span class="n">futures</span><span class="o">.</span><span class="n">ThreadPoolExecutor</span><span class="p">(</span><span class="n">max_workers</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">(</span><span class="n">executor</span><span class="o">=</span><span class="n">executor</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">it</span> <span class="o">=</span> <span class="n">gs</span><span class="o">.</span><span class="n">translate</span><span class="p">([</span><span class="s1">'text1'</span><span class="p">,</span> <span class="s1">'text2'</span><span class="p">,</span> <span class="s1">'text3'</span><span class="p">])</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="n">it</span><span class="p">)</span>
<span class="p">[</span><span class="s1">'tranlation1'</span><span class="p">,</span> <span class="s1">'translation2'</span><span class="p">,</span> <span class="s1">'translation3'</span><span class="p">]</span>
</pre> 
       <p>It is adviced to install <tt>concurrent.futures</tt> backport lib in python2.7 (python3 has it by default) to enable concurrent querying.</p> 
       <p>The input could be list, tuple or any iterater, even the file object which iterate line by line</p> 
       <pre><span class="o">&gt;&gt;&gt;</span> <span class="n">translated_lines</span> <span class="o">=</span> <span class="n">gs</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="s1">'readme.txt'</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">translation</span> <span class="o">=</span> <span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">translated_lines</span><span class="p">)</span>
</pre> 
       <p>Do not worry about short texts will increase the query time. Internally, goslate will join small text into one big text to reduce the unnecessary query round trips.</p> 
      </div> 
      <div id="batch-translation"> 
       <h2><a href="#id11" rel="nofollow">Batch Translation</a></h2> 
       <p>Google translation does not support very long text, goslate bypass this limitation by split the long text internally before send to Google and join the mutiple results into one translation text to the end user.</p> 
       <pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">golsate</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">'the game of thrones.txt'</span><span class="p">,</span> <span class="s1">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
<span class="o">&gt;&gt;&gt;</span>     <span class="n">novel_text</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="n">novel_text</span><span class="p">)</span>
</pre> 
      </div> 
      <div id="performance-consideration"> 
       <h2><a href="#id12" rel="nofollow">Performance Consideration</a></h2> 
       <p>Goslate use batch and concurrent fetch aggresivelly to achieve maximized translation speed internally.</p> 
       <p>All you need to do is reducing API calling times by utilize batch tranlation and concurrent querying.</p> 
       <p>For example, say if you want to translate 3 big text files. Instead of manually translate them one by one, line by line:</p> 
       <pre><span class="kn">import</span> <span class="nn">golsate</span>

<span class="n">big_files</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'a.txt'</span><span class="p">,</span> <span class="s1">'b.txt'</span><span class="p">,</span> <span class="s1">'c.txt'</span><span class="p">]</span>
<span class="n">gs</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">()</span>

<span class="n">translation</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">big_file</span> <span class="ow">in</span> <span class="n">big_files</span><span class="p">:</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">big_file</span><span class="p">,</span> <span class="s1">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">translated_lines</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">translated_line</span> <span class="o">=</span> <span class="n">gs</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
            <span class="n">translated_lines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">translated_line</span><span class="p">)</span>

        <span class="n">translation</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">translated_lines</span><span class="p">))</span>
</pre> 
       <p>It is better to leave them to Goslate totally. The following code is not only simpler but also much faster (+100x) :</p> 
       <pre><span class="kn">import</span> <span class="nn">golsate</span>

<span class="n">big_files</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'a.txt'</span><span class="p">,</span> <span class="s1">'b.txt'</span><span class="p">,</span> <span class="s1">'c.txt'</span><span class="p">]</span>
<span class="n">gs</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">()</span>

<span class="n">translation_iter</span> <span class="o">=</span> <span class="n">gs</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">big_file</span><span class="p">,</span> <span class="s1">'r'</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span> <span class="k">for</span> <span class="n">big_file</span> <span class="ow">in</span> <span class="n">big_files</span><span class="p">)</span>
<span class="n">translation</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">translation_iter</span><span class="p">)</span>
</pre> 
       <p>Internally, goslate will first adjust the text to make them not so big that do not fit Google query API nor so small that increase the total HTTP querying times. Then it will use concurrent query to speed thing even further.</p> 
      </div> 
      <div id="lookup-details-in-dictionary"> 
       <h2><a href="#id13" rel="nofollow">Lookup Details in Dictionary</a></h2> 
       <p>If you want detail dictionary explaination for a single word/phrase, you could</p> 
       <pre><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">goslate</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span> <span class="o">=</span> <span class="n">goslate</span><span class="o">.</span><span class="n">Goslate</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">gs</span><span class="o">.</span><span class="n">lookup_dictionary</span><span class="p">(</span><span class="s1">'sun'</span><span class="p">,</span> <span class="s1">'de'</span><span class="p">)</span>
<span class="p">[[[</span><span class="s1">'Sonne'</span><span class="p">,</span> <span class="s1">'sun'</span><span class="p">,</span> <span class="mi">0</span><span class="p">]],</span>
 <span class="p">[[</span><span class="s1">'noun'</span><span class="p">,</span>
   <span class="p">[</span><span class="s1">'Sonne'</span><span class="p">],</span>
   <span class="p">[[</span><span class="s1">'Sonne'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'sun'</span><span class="p">,</span> <span class="s1">'Sun'</span><span class="p">,</span> <span class="s1">'Sol'</span><span class="p">],</span> <span class="mf">0.44374731</span><span class="p">,</span> <span class="s1">'die'</span><span class="p">]],</span>
   <span class="s1">'sun'</span><span class="p">,</span>
   <span class="mi">1</span><span class="p">],</span>
  <span class="p">[</span><span class="s1">'verb'</span><span class="p">,</span>
   <span class="p">[</span><span class="s1">'der Sonne aussetzen'</span><span class="p">],</span>
   <span class="p">[[</span><span class="s1">'der Sonne aussetzen'</span><span class="p">,</span> <span class="p">[</span><span class="s1">'sun'</span><span class="p">],</span> <span class="mf">1.1544633e-06</span><span class="p">]],</span>
   <span class="s1">'sun'</span><span class="p">,</span>
   <span class="mi">2</span><span class="p">]],</span>
 <span class="s1">'en'</span><span class="p">,</span>
 <span class="mf">0.9447732</span><span class="p">,</span>
 <span class="p">[[</span><span class="s1">'en'</span><span class="p">],</span> <span class="p">[</span><span class="mf">0.9447732</span><span class="p">]]]</span>
</pre> 
       <p>There are 2 limitaion for this API:</p> 
       <ul> 
        <li>The result is a complex list structure which you have to parse for your own usage</li> 
        <li>The input must be a single word/phase, batch translation and concurrent querying are not supported</li> 
       </ul> 
      </div> 
      <div id="query-error"> 
       <h2><a href="#id14" rel="nofollow">Query Error</a></h2> 
       <p>If you get HTTP 5xx error, it is probably because google has banned your client IP address from transation querying.</p> 
       <p>You could verify it by access google translation service in browser manully.</p> 
       <p>You could try the following to overcome this issue:</p> 
       <ul> 
        <li>query through a HTTP/SOCK5 proxy, see <a href="#proxy-support" rel="nofollow">Proxy Support</a></li> 
        <li>using another google domain for translation: <tt>gs = <span class="pre">Goslate(service_urls=['http://translate.google.de'])</span></tt></li> 
        <li>wait for 3 seconds before issue another querying</li> 
       </ul> 
      </div> 
      <div id="api-references"> 
       <h2><a href="#id15" rel="nofollow">API References</a></h2> 
       <p>please check <a href="http://pythonhosted.org/goslate/#module-goslate" rel="nofollow">API reference</a></p> 
      </div> 
      <div id="command-line-interface"> 
       <h2><a href="#id16" rel="nofollow">Command Line Interface</a></h2> 
       <p><tt>goslate.py</tt> is also a command line tool which you could use directly</p> 
       <ul> 
        <li><p>Translate <tt>stdin</tt> input into Chinese in GBK encoding</p> <pre>$ <span class="nb">echo</span> <span class="s2">"hello world"</span> <span class="p">|</span> goslate.py -t zh-CN -o gbk
</pre> </li> 
        <li><p>Translate 2 text files into Chinese, output to UTF-8 file</p> <pre>$ goslate.py -t zh-CN -o utf-8 source/1.txt <span class="s2">"source 2.txt"</span> &gt; output.txt
</pre> </li> 
       </ul> 
       <p>use <tt><span class="pre">--help</span></tt> for detail usage</p> 
       <pre>$ goslate.py -h
</pre> 
      </div> 
      <div id="how-to-contribute"> 
       <h2><a href="#id17" rel="nofollow">How to Contribute</a></h2> 
       <ul> 
        <li>Report <a href="https://bitbucket.org/zhuoqiang/goslate/issues" rel="nofollow">issues &amp; suggestions</a></li> 
        <li>Fork <a href="https://bitbucket.org/zhuoqiang/goslate" rel="nofollow">repository</a></li> 
        <li><a href="http://pythonhosted.org/goslate/#donate" rel="nofollow">Donation</a></li> 
       </ul> 
      </div> 
      <div id="what-s-new"> 
       <h2><a href="#id18" rel="nofollow">What’s New</a></h2> 
       <div id="id1"> 
        <h3><a href="#id19" rel="nofollow">1.5.0</a></h3> 
        <ul> 
         <li>Add new API <tt>Goslate.lookup_dictionary()</tt> to get detail information for a single word/phrase, thanks for Adam’s suggestion</li> 
         <li>Improve document with more user scenario and performance consideration</li> 
        </ul> 
       </div> 
       <div id="id2"> 
        <h3><a href="#id20" rel="nofollow">1.4.0</a></h3> 
        <ul> 
         <li>[fix bug] update to adapt latest google translation service changes</li> 
        </ul> 
       </div> 
       <div id="id3"> 
        <h3><a href="#id21" rel="nofollow">1.3.2</a></h3> 
        <ul> 
         <li>[fix bug] fix compatible issue with latest google translation service json format changes</li> 
         <li>[fix bug] unit test failure</li> 
        </ul> 
       </div> 
       <div id="id4"> 
        <h3><a href="#id22" rel="nofollow">1.3.0</a></h3> 
        <ul> 
         <li>[new feature] Translation in roman writing system (romanlization), thanks for Javier del Alamo’s contribution.</li> 
         <li>[new feature] Customizable service URL. you could provide multiple google translation service URLs for better concurrency performance</li> 
         <li>[new option] roman writing translation option for CLI</li> 
         <li>[fix bug] Google translation may change normal space to no-break space</li> 
         <li>[fix bug] Google web API changed for getting supported language list</li> 
        </ul> 
       </div> 
      </div> 
      <a name="downloads">&nbsp;</a> 
      <table class="list" style="margin-bottom: 10px;"> 
       <tbody>
        <tr> 
         <th>File</th> 
         <th>Type</th> 
         <th>Py Version</th> 
         <th>Uploaded on</th> 
         <th style="text-align: right;">Size</th> 
        </tr> 
        <tr class="odd"> 
         <td> <span style="white-space: nowrap;"> <a href="https://pypi.python.org/packages/38/ac/3b0c99da3ff7ea144e4660b0310cf9cdeddb126d29285330f41382666f06/goslate-1.5.1-py2.7.egg#md5=ec12b624aa78521cae4a6e4b22b0700b">goslate-1.5.1-py2.7.egg</a> (<a title="MD5 Digest" href="/pypi?:action=show_md5&amp;digest=ec12b624aa78521cae4a6e4b22b0700b">md5</a>) </span> </td> 
         <td style="white-space: nowrap;"> Python Egg </td> 
         <td> 2.7 </td> 
         <td>2016-01-04</td> 
         <td style="text-align: right;">20KB</td> 
        </tr> 
        <tr class="even"> 
         <td> <span style="white-space: nowrap;"> <a href="https://pypi.python.org/packages/39/0b/50af938a1c3d4f4c595b6a22d37af11ebe666246b05a1a97573e8c8944e5/goslate-1.5.1.tar.gz#md5=bd18f196434712a9fe5e6ce4f34a608a">goslate-1.5.1.tar.gz</a> (<a title="MD5 Digest" href="/pypi?:action=show_md5&amp;digest=bd18f196434712a9fe5e6ce4f34a608a">md5</a>) </span> </td> 
         <td style="white-space: nowrap;"> Source </td> 
         <td> </td> 
         <td>2016-01-04</td> 
         <td style="text-align: right;">17KB</td> 
        </tr> 
        <tr>
         <td id="last" colspan="6"></td>
        </tr> 
       </tbody>
      </table> 
      <ul class="nodot"> 
       <li> <strong>Author:</strong> <span>ZHUO Qiang</span> </li> 
       <li> <strong>Documentation:</strong> <a href="http://pythonhosted.org/goslate/">goslate package documentation</a> </li> 
       <!-- The <th> elements below are a terrible terrible hack for setuptools --> 
       <li> <strong>Home Page:</strong> 
        <!-- <th>Home Page --> <a href="https://pypi.python.org/pypi/goslate">https://pypi.python.org/pypi/goslate</a> </li> 
       <li> <strong>Keywords:</strong> <span>google translation i18n l10n</span> </li> 
       <li> <strong>License:</strong> <span>MIT</span> </li> 
       <!-- TODO: add link to products in follow dependencies... --> 
       <li> <strong>Categories</strong> 
        <ul class="nodot"> 
         <li> <a href="/pypi?:action=browse&amp;c=5">Development Status :: 5 - Production/Stable</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=8">Environment :: Console</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=21">Environment :: Web Environment</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=30">Intended Audience :: Developers</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=69">License :: OSI Approved :: MIT License</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=415">Topic :: Software Development :: Internationalization</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=426">Topic :: Software Development :: Localization</a> </li> 
         <li> <a href="/pypi?:action=browse&amp;c=494">Topic :: Text Processing :: Linguistic</a> </li> 
        </ul> </li> 
       <li> <strong>Package Index Owner:</strong> <span>zhuoqiang</span> </li> 
       <li> <strong><a href="https://github.com/edumbill/doap/wiki">DOAP</a> record:</strong> <a href="/pypi?:action=doap&amp;name=goslate&amp;version=1.5.1">goslate-1.5.1.xml</a> </li> 
      </ul> 
     </div> 
    </div> 
    <div id="footer"> 
     <div id="credits"> 
      <div style="float: left; margin-right: 1em;" id="badges"> 
       <img src="https://img.shields.io/badge/ipv6-go!-green.svg" alt="ipv6 ready" title="ipv6 ready" border="0">
       <br> 
       <img src="https://img.shields.io/badge/http2-go!-green.svg" alt="http2 ready" title="http2 ready" border="0">
       <br> 
       <img src="/static/images/PythonPoweredAnimSmall.gif" alt="darn right it is" title="Python Powered" border="0"> 
      </div> 
      <div style="float: right" id="donations"> 
       <a href="http://www.python.org/about/website">Website maintained by the Python community</a>
       <br> 
       <a href="https://www.fastly.com/" title="Real-time CDN services provided by Fastly">Real-time CDN by Fastly</a> / 
       <a href="http://developer.rackspace.com/" title="Server hosting by Rackspace Open Source support">Hosting by Rackspace</a>
       <br> 
       <a href="https://aws.amazon.com/s3/" title="Object storage provided by Amazon S3">Object storage by Amazon S3</a> / 
       <a href="http://www.timparkin.co.uk/" title="Design by Tim Parkin, Yorkshire man, photographer and developer">Design by Tim Parkin</a> 
      </div> 
     </div> Copyright © 1990-2017, 
     <a href="http://www.python.org/psf">Python Software Foundation</a>
     <br> 
     <a href="https://pypi.org/policy/terms-of-use/">Terms of Use</a> 
    </div> 
   </div> 
  </div> 
  <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-55961911-1', 'auto');
        ga('require', 'linkid', 'linkid.js');
        ga('send', 'pageview');
      </script> 
  <script type="text/javascript" src="//statuspage-production.s3.amazonaws.com/se-v2.js">
      </script> 
  <script type="text/javascript">
        var sp = new StatusPage.page({ page : '2p66nmmycsj3' });
        sp.summary({
          // <![CDATA[
          success: function(data) {
            var div = document.getElementById('statusdiv');
            var reports = "</br><h4 id='statusbox'>Status</h4>\n";
            var outage = 0;
            var maintenance = 0;
            for (i in data.incidents) {
              var incident = data.incidents[i];
              var message, status = incident.status;
              if (status === 'scheduled') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' scheduled.</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status === 'in_progress') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' is currently in progress.' + '</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ': ' + incident.status + '</a></li>\n';
                reports += message;
                outage += 1;
              }
            }
            for (i in data.scheduled_maintenances) {
              var incident = data.scheduled_maintenances[i];
              var message, status = incident.status;
              if (status === 'scheduled') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' scheduled.</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status === 'in_progress') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' is currently in progress.' + '</a></li>\n';
                reports += message;
                maintenance += 1;
              } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {
                message = '<li><a href="' + incident.shortlink + '">' + incident.name + ': ' + incident.status + '</a></li>\n';
                reports += message;
                outage += 1;
              }
            }
            if (outage + maintenance === 0) {
              reports += "<li><a href='http://status.python.org'>Nothing to report</a></li>";
            }
            div.innerHTML=reports;
            if (outage > 0) {
              var statusbox = document.getElementById("statusbox");
              statusbox.style.background = '#FC234A';
            }
          }
          // ]]>
        });
      </script>   
 </body>
</html>