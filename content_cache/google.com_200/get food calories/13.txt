<!doctype html>
<html lang="en">
 <head> 
  <meta charset="UTF-8"> 
  <meta name="viewport" content="width=device-width, initial-scale=1"> 
  <link rel="icon" href="//www.ibm.com/favicon.ico"> 
  <link rel="canonical" href="http://www.ibm.com/developerworks/library/mo-bluemix-php-nutritionix-angularjs/index.html"> 
  <meta name="geo.country" content="ZZ"> 
  <meta name="dcterms.rights" content="© Copyright&nbsp;IBM Corporation&nbsp;2014,&nbsp;2015"> 
  <meta name="dcterms.date" content="2015-04-08"> 
  <meta name="description" content="Mobile web applications are increasingly popular because they use well-known web technologies and work consistently across different devices. This article shows you to build and instantly deploy a mobile-friendly calorie counter application on IBM® Bluemix™ with PHP, MySQL, and AngularJS. It uses the Slim PHP micro-framework to communicate with the Nutritionix API for information retrieval and jQuery Mobile for the user interface, together with the PHP CloudFoundry build pack and bound MySQL and SendGrid service instances."> 
  <meta name="keywords" content="AngularJS, Bluemix, MySQL, Nutritionix, PHP, calorie count, Vikram Vaswani, dw_recommends, tttmobca"> 
  <meta name="robots" content="index,follow"> 
  <title>Build and deploy a mobile-friendly calorie counter on IBM Bluemix with PHP, MySQL, AngularJS, and the Nutritionix API</title> 
  <script> 
    digitalData = {
        "page":{
            "category":{
                "primaryCategory":"SOFDCMOBZZ"
            },
            "pageInfo":{
                "effectiveDate":"2014-06-24",
                "language":"en",
                "publishDate":"2015-04-08",
                "publisher":"IBM Corporation",
                "version":"v18",
                "ibm":{ 
                    "contentDelivery":"IBM developerWorks template",
                    "contentProducer":"IBM developerWorks",
                    "country":"ZZ",
                    "owner":"developerWorks Content/Raleigh/IBM",
                    "subject":"T3113,SWL00,SW500",
                    "type":"CT316",
                    "topic":"Application development,Bluemix,Analytics,Integration",
                    "topicId":"263,1237,1028,178",
                    "contentArea":"mobile,cloud",
                    "contentAreaId":"52,47",
                    "contentType":"article",
                    "contentId":"975166",
                },
                "keywords":"AngularJS, Bluemix, MySQL, Nutritionix, PHP, calorie count, Vikram Vaswani, dw_recommends, tttmobca",
                "description":"Mobile web applications are increasingly popular because they use well-known web technologies and work consistently across different devices. This article shows you to build and instantly deploy a mobile-friendly calorie counter application on IBM® Bluemix™ with PHP, MySQL, and AngularJS. It uses the Slim PHP micro-framework to communicate with the Nutritionix API for information retrieval and jQuery Mobile for the user interface, together with the PHP CloudFoundry build pack and bound MySQL and SendGrid service instances."
            }
        }
    };
    window._analytics = {
        "segment_key":'HU3dbkAG5wE0F1IkRf9S1RexlAqo3jby'
    };
</script> 
  <meta content="player" name="twitter:card"> 
  <meta name="twitter:site" content="@developerworks"> 
  <meta property="og:title" content="Build and deploy a mobile-friendly calorie counter on IBM Bluemix with PHP, MySQL, AngularJS, and the Nutritionix API"> 
  <meta property="og:description" content="Mobile web applications are increasingly popular because they use well-known web technologies and work consistently across different devices. This article shows you to build and instantly deploy a mobile-friendly calorie counter application on IBM Bluemix with PHP, MySQL, and AngularJS. It uses the Slim PHP micro-framework to communicate with the Nutritionix API for information retrieval and jQuery Mobile for the user interface, together with the PHP CloudFoundry build pack and bound MySQL and SendGrid service instances."> 
  <meta property="og:image" content="http://www.ibm.com/developerworks/library/mo-bluemix-php-nutritionix-angularjs/csp0307.Still002.png"> 
  <meta name="twitter:player" content="https://www.youtube.com/embed/t_4AR1t4Pdw"> 
  <meta content="435" name="twitter:player:width"> 
  <meta content="251" name="twitter:player:height"> 
  <!-- Segment meta tag --> 
  <meta name="segment" property="(developerWorks)" productTitle="developerWorks" value="Mobile English (developerWorks)"> 
  <!-- SITE MON : START (DO NOT DELETE) --> 
  <!-- developerWorks monitoring token --> 
  <!-- SITE MON : END (DO NOT DELETE) --> 
  <!-- HEADER_SCRIPTS_AND_CSS_INCLUDE --> 
  <!-- <script src="//cdn.optimizely.com/js/5399420604.js"></script> --> 
  <!-- BEGIN: Use this section to set page specific variables for the Page Tag --> 
  <script language="JavaScript">var NTPT_PGEXTRA="ibmSkillLevel=3&ibmCmaId=975166&ibmContentAreas=mobile,cloud";</script> 
  <!--END --> 
  <script src="//1.www.s81c.com/common/stats/ida_stats.js"></script> 
  <link href="//1.www.s81c.com/common/v18/css/www.css" rel="stylesheet"> 
  <link href="//1.www.s81c.com/common/v18/css/syntaxhighlighter.css" rel="stylesheet"> 
  <script src="//1.www.s81c.com/common/v18/js/www.js"></script> 
  <script src="//1.www.s81c.com/common/v18/js/syntaxhighlighter.js"></script> 
  <link href="//1.www.s81c.com/common/v18/css/tables.css" rel="stylesheet"> 
  <script src="//1.www.s81c.com/common/v18/js/tables.js"></script> 
  <!--  Masthead/footer  --> 
  <link href="//dw1.s81c.com/developerworks/css/dw-mf/v18/dw-mf-v18.css?v=092117" rel="stylesheet"> 
  <!-- <link href="//dw1.s81c.com/developerworks/css/dw-mf/v18/alt-signedin-ux.css" rel="stylesheet" /> --> 
  <!--[if lt IE 9]>
    <link href="//dw1.s81c.com/developerworks/css/dw-mf/v18/dw-mf-ie8fix.css?v=022216" rel="stylesheet" />
<![endif]--> 
  <link href="//dw1.s81c.com/developerworks/css/v18/dw-article.css?v=073117" rel="stylesheet"> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-auth-properties.js?v=041017"></script> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-auth.js?v=062717"></script> 
  <script src="//dw1.s81c.com/developerworks/js/dw-mf/v18/dw-mf.js?v=110316"></script> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-include.js"></script> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-article.js?v=051817"></script> 
  <script src="//dw1.s81c.com/developerworks/js/v18/dw-auto-links.js?v=091217"></script> 
  <script src="//www.ibm.com/software/info/js/tactic.js"></script> 
  <script src="//www.ibm.com/software/info/js/tacticbindlinks.js"></script> 
  <!-- Segment --> 
  <script src="//console.ng.bluemix.net/analytics/build/bluemix-analytics.min.js"></script> 
  <!-- 
<PageMap>
    <DataObject type="document">
        <Attribute name="topic">Application development,Bluemix,Analytics,Integration</Attribute>
        <Attribute name="topicId">263,1237,1028,178</Attribute>
        <Attribute name="contentArea">mobile,cloud</Attribute>
        <Attribute name="contentAreaId">52,47</Attribute>
        <Attribute name="abstract">Mobile web applications are increasingly popular because they use
            well-known web technologies and work consistently across different devices.
            This article shows you to build and instantly deploy a mobile-friendly calorie
            counter application on IBM</Attribute>
        <Attribute name="pub.date">2015-04-08</Attribute>
        <Attribute name="contentType">article</Attribute>
    </DataObject>
</PageMap>
--> 
 </head> 
 <body id="ibm-com" class="ibm-type dw-js-disabled"> 
  <div id="ibm-top" class="ibm-landing-page"> 
   <!-- MASTHEAD_BEGIN --> 
   <div id="ibm-masthead" role="banner" aria-label="IBM"> 
    <div id="ibm-mast-options"> 
     <ul role="toolbar" aria-labelledby="ibm-masthead"> 
      <li id="ibm-geo" role="presentation"><a href="http://www.ibm.com/planetwide/select/selector.html" role="button" aria-label="United States selected - Choose a country">United States</a></li> 
     </ul> 
    </div> 
    <div id="ibm-universal-nav"> 
     <nav role="navigation" aria-label="IBM"> 
      <div id="ibm-home">
       <a href="http://www.ibm.com/us/en/">IBM®</a>
      </div> 
      <ul id="ibm-menu-links" role="toolbar" aria-label="Site map"> 
       <li><a href="http://www.ibm.com/sitemap/us/en/">Site map</a></li> 
      </ul> 
     </nav> 
     <div id="ibm-search-module" role="search" aria-labelledby="ibm-masthead"> 
      <form id="ibm-search-form" action="https://www.ibm.com/Search/" method="get"> 
       <p> <label for="q">IBM</label> <input type="text" maxlength="100" value="" placeholder="Search" name="q" id="q" aria-label="Search developerWorks"> <input type="hidden" value="18" name="v"> <input type="hidden" value="utf" name="en"> <input type="hidden" value="en" name="lang"> <input type="hidden" value="us" name="cc"> <input type="hidden" name="sn" value="dw"> <input type="hidden" name="dws" value="dw"> <input type="hidden" name="hpp" value="20"> <input type="submit" id="ibm-search" class="ibm-btn-search" value="Submit"> </p> 
      </form> 
     </div> 
    </div> 
   </div>
   <!-- MASTHEAD_END --> 
   <!-- LAYOUT --> 
   <div id="ibm-content-wrapper"> 
    <!-- LEADSPACE_BEGIN --> 
    <header role="banner" aria-labelledby="ibm-pagetitle-h1"> 
     <!-- MASTHEAD_SITENAV_BEGIN --> 
     <div class="ibm-sitenav-menu-container"> 
      <div class="ibm-sitenav-menu-name"> 
       <a href="//www.ibm.com/developerworks/"> <img width="186" height="24" alt="developerWorks®" src="//dw1.s81c.com/developerworks/i/mf/dw-mf-wordmark.svg"> </a> 
      </div> 
      <div class="ibm-sitenav-menu-list"> 
       <ul role="menubar"> 
        <li class="dw-navpage-learn ibm-haschildlist" role="presentation"> <span role="menuitem"><a href="//www.ibm.com/developerworks/learn/">Learn</a></span> 
         <ul role="menu" aria-label="Learn" id="dw-mega-learn"> 
          <li role="presentation"> 
           <div class="ibm-columns"> 
            <div class="ibm-col-5-3 dw-mega-main"> 
             <h2>Learn with our tutorials and training</h2> 
             <p class="dw-mega-main-p">developerWorks provides tutorials, articles and other technical resources to help you grow your development skills on a wide variety of topics and products. Learn about a specific product or take a course and get certified. So, what do you want to learn about?</p> 
             <p class="ibm-button-link"> <a href="//www.ibm.com/developerworks/learn/" class="ibm-btn-pri">Choose a topic</a> </p> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured topics</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-mobile.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/learn/mobile">Mobile development</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-bigdata.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/learn/analytics">Big data</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-cognitive.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/learn/cognitive">Cognitive computing</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-cloud.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/learn/cloud">Cloud</a> 
              </div> 
             </div> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured destinations</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-swift.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/swift/?lnk=hm">Swift @ IBM</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-open.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/open/?lnk=hm">developerWorks Open</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-arch.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/architecture/?lnk=hm">Architecture center</a> 
              </div> 
             </div> 
            </div> 
           </div> </li> 
         </ul> </li> 
        <li role="presentation" class="dw-navpage-develop ibm-haschildlist"> <span role="menuitem"><a href="//www.ibm.com/developerworks/develop/">Develop</a></span> 
         <ul role="menu" aria-label="Develop" id="dw-mega-develop"> 
          <li role="presentation"> 
           <div class="ibm-columns"> 
            <div class="ibm-col-5-3 dw-mega-main"> 
             <h2>Develop with our trials &amp; downloads</h2> 
             <p class="dw-mega-main-p">Start developing with product trials, free downloads, and IBM Bluemix™ services. Sort by topic or product name and find everything we have to offer.</p> 
             <p class="ibm-button-link"> <a href="//www.ibm.com/developerworks/develop/" class="ibm-btn-pri">View all downloads &amp; trials</a> </p> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured products</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-bluemix.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/sso/bmregistration">Bluemix</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-websphere.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/downloads/ws/was/">WebSphere Application Server</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-db2express.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//www.ibm.com/developerworks/downloads/im/db2express/">DB2 Express C</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-mobile.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//mobilefirstplatform.ibmcloud.com/">MobileFirst Platform Foundation</a> 
              </div> 
             </div> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured destinations</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-swift.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/swift/?lnk=hm">Swift @ IBM</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-open.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/open/?lnk=hm">developerWorks Open</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-arch.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/architecture/?lnk=hm">Architecture center</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-api-dest.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/api/">API Explorer</a> 
              </div> 
             </div> 
            </div> 
           </div> </li> 
         </ul> </li> 
        <li role="presentation" class="dw-navpage-connect ibm-haschildlist"> <span role="menuitem"><a href="//www.ibm.com/developerworks/connect/">Connect</a></span> 
         <ul role="menu" aria-label="Connect" id="dw-mega-connect"> 
          <li role="presentation"> 
           <div class="ibm-columns"> 
            <div class="ibm-col-5-3 dw-mega-main"> 
             <h2>Find a community and connect</h2> 
             <p class="dw-mega-main-p">Learn from the experts and share with other developers in one of our dev centers. Ask questions and get answers with dW answers. Search for local events in your area. All in developerWorks communities.</p> 
             <p class="ibm-button-link"> <a href="//www.ibm.com/developerworks/connect/" class="ibm-btn-pri">View communities</a> </p> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured Developer Centers</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-jazz-dev.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//jazz.net/">Jazz.net</a> 
              </div> 
             </div> 
             <!--<div class="dw-mega-nav-item">
                                        <div class="dw-mega-nav-img">
                                            <img width="30" height="30" alt=""
                                                src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-cloud-dev.png">
                                        </div>
                                        <div class="dw-mega-nav-link">
                                            <a href="//developer.ibm.com/cloud-analytics/">IBM Cloud Analytics DEV</a>
                                        </div>
                                    </div>--> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-bluemix-dev.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/bluemix/">Bluemix</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-api-dev.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/api/">API Explorer</a> 
              </div> 
             </div> 
            </div> 
            <div class="ibm-col-5-1 dw-mega-nav"> 
             <h3>Featured destinations</h3> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-swift.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/swift/?lnk=hm">Swift @ IBM</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-open.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/open/?lnk=hm">developerWorks Open</a> 
              </div> 
             </div> 
             <div class="dw-mega-nav-item"> 
              <div class="dw-mega-nav-img"> 
               <img width="30" height="30" alt="" src="//dw1.s81c.com/developerworks/i/v18/mega/dw-mplist-arch.png"> 
              </div> 
              <div class="dw-mega-nav-link"> 
               <a href="//developer.ibm.com/architecture/?lnk=hm">Architecture center</a> 
              </div> 
             </div> 
            </div> 
           </div> </li> 
         </ul> </li> 
        <!-- dW featured --> 
        <!-- <li role="presentation" class="dw-navpage-devcenter"><strong>Subheading</strong></li> --> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/cognitive/">Cognitive</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/cloud/">Cloud</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/analytics/">Data</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/iot/">Internet of Things</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/java/">Java</a></li> 
        <li role="presentation" class="dw-navpage-devcenter"><a role="menuitem" href="//www.ibm.com/developerworks/learn/">All topics</a></li> 
       </ul> 
      </div> 
     </div> 
     <!-- MASTHEAD_SITENAV_END --> 
     <!-- NAVIGATION_TRAIL_BEGIN --> 
     <div id="ibm-leadspace-head" class="ibm-alternate"> 
      <div id="ibm-leadspace-body"> 
       <nav aria-label="Breadcrumb" role="navigation"> 
        <ul id="dw-navigation-trail" itemscope itemtype="http://schema.org/BreadcrumbList">
         <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem"><a itemprop="item" href="http://www.ibm.com/developerworks/learn/"><span itemprop="name">Learn</span></a>
          <meta itemprop="position" content="1"></li>
         <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem"><a itemprop="item" href="http://www.ibm.com/developerworks/mobile/"><span itemprop="name">Mobile development</span></a>
          <meta itemprop="position" content="2"></li>
        </ul> 
       </nav> 
      </div> 
     </div> 
     <!-- NAVIGATION_TRAIL_END --> 
    </header> 
    <!-- LEADSPACE_END --> 
    <!-- MAIN_CONTENT_BEGIN --> 
    <main role="main" aria-labelledby="ibm-pagetitle-h1"> 
     <div id="ibm-pcon"> 
      <!-- BEGIN_IBM-CONTENT --> 
      <div id="ibm-content"> 
       <!-- BEGIN_IBM-CONTENT-BODY --> 
       <div id="ibm-content-body"> 
        <!-- BEGIN_IBM-CONTENT-MAIN --> 
        <div id="ibm-content-main" class="dw-article"> 
         <!-- BEGIN_INTERIOR-COLUMNS --> 
         <div class="ibm-columns dw-article-toc"> 
          <!-- LEFT_6_2_CONTENT_COLUMN_BEGIN --> 
          <div id="dw-article-toc-container" class="ibm-col-6-2"> 
           <div id="dw-article-toc-body"> 
            <h2>Contents</h2>
            <div class="ibm-alternate-rule">
             <hr>
            </div>
            <ul role="directory" aria-label="Table of contents" class="ibm-plain-list">
             <li><a href="#ibm-pagetitle-h1">Introduction</a></li>
             <li><a href="#3WhatYoullNeedoutline">What you need for your application</a></li>
             <li><a href="#step1">Step 1. Set up the application database</a></li>
             <li><a href="#step2">Step 2. Install Slim</a></li>
             <li><a href="#step3">Step 3. Understand the Nutritionix API</a></li>
             <li><a href="#step4">Step 4. Enable the search interface</a></li>
             <li><a href="#5Step5CalculateandStoreMealRecordsoutline">Step 5. Calculate and store meal records</a></li>
             <li><a href="#step6">Step 6. Display reports</a></li>
             <li><a href="#step7">Step 7. Add user registration and authentication</a></li>
             <li><a href="#step8">Step 8. Deploy to IBM Bluemix</a></li>
             <li><a href="#9Conclusionoutline">Conclusion</a></li>
             <li><a href="#artdownload">Downloadable resources</a></li>
             <li><a href="#artrelatedtopics">Related topics</a></li>
             <li><a href="#icomments">Comments</a></li>
            </ul> 
           </div> 
          </div> 
          <!-- LEFT_6_2_CONTENT_COLUMN_END --> 
          <!-- CENTER_6_4_CONTENT_COLUMN_BEGIN --> 
          <div class="ibm-col-6-4"> 
           <h1 id="ibm-pagetitle-h1" class="ibm-h1">Build and deploy a mobile-friendly calorie counter on IBM Bluemix with PHP, MySQL, AngularJS, and the Nutritionix API</h1> 
           <!-- Article Top Bar --> 
           <div class="ibm-columns dw-article-topbar"> 
            <!-- Author and article info. --> 
            <div class="ibm-col-6-2 ibm-col-medium-6-4 dw-article-metadata"> 
             <div class="dw-article-avatar">
              <img width="42" height="42" src="//www.ibm.com/developerworks/i/p-vvaswani60.jpg" alt="author photo - Vikram Vaswani">
             </div>
             <div class="dw-article-authordate">
              <span class="dw-article-author"><a href="https://plus.google.com/100028886433648406825">Vikram Vaswani</a></span>
              <br>
              <span class="dw-article-pubdate">Published on June 24, 2014</span>
              <span class="dw-article-divider">/</span>
              <span class="dw-article-updated">Updated: April 08, 2015</span>
             </div> 
            </div> 
            <!-- Social --> 
            <div class="ibm-col-6-2 ibm-col-medium-6-4 ibm-col-small-6-2 dw-article-social"> 
             <!-- Sharing links --> 
             <div id="dw-article-share-inline"> 
              <div class="dw-article-sharelink-inline"> 
               <div class="ibm-sharethispage"></div> 
              </div> 
             </div> 
             <!-- Number of comments and link to comments --> 
             <div id="dw-article-cmts"> 
              <div class="dw-article-cmtslink"> 
               <a onclick="tocLink('#icomments')" href="#icomments" role="link" tabindex="0" aria-label="Comments"> <img src="//dw1.s81c.com/developerworks/i/v18/article/dw-article-cmt-icon.png" width="29" height="29" alt="Comments"> </a> 
              </div> 
              <div class="dw-article-cmtslink"> 
               <a onclick="tocLink('#icomments')" href="#icomments" role="link" tabindex="0"> 
                <div id="nCmts"></div> </a> 
              </div> 
             </div> 
            </div> 
           </div> 
           <!-- Article Body --> 
           <div itemscope="video" itemtype="http://schema.org/VideoObject">
            <meta itemprop="thumbnailURL" content="csp0307.Still002.png">
            <meta itemprop="description" content="For more in-depth information about the subject, watch this video: Build and deploy a mobile-friendly calorie
                    counter on IBM Bluemix.">
            <meta itemprop="name" content="Build and deploy a mobile-friendly calorie counter on IBM Bluemix">
            <meta itemprop="contentURL" content="//www.youtube.com/watch?v=t_4AR1t4Pdw">
            <meta itemprop="uploadDate" content="2014-06-24">
            <meta itemprop="duration" content="PTvideo_length_placeholder_minutesMvideo_length_placeholder_secondsS">
            <div data-widget="videoplayer" data-videodisplay="inline" data-videoid="t_4AR1t4Pdw" data-videotype="youtube" data-customplaceholder="true" data-showvideotitle="true" data-titledisplaytype="overlay" data-videotitleoverride="Build and deploy a mobile-friendly calorie counter on IBM Bluemix" data-showimageplaybutton="true">
             <a href="//www.youtube.com/watch?v=t_4AR1t4Pdw"><img class="ibm-resize" src="csp0307.Still002.png" height="330" width="940"></a>
            </div>
            <div class="dw-article-video-transcript">
             <a href="//www.ibm.com/developerworks/library/mo-bluemix-php-nutritionix-angularjs/mo-bluemix-php-nutritionix-angularjs-video-pdf.pdf">Transcript</a>
            </div>
           </div> 
           <div class="dw-article-sidebar ibm-background-cool-white-20">
            <p><strong><a href="https://www.bluemix.net/">Sign up for IBM Bluemix</a>™</strong><br>This cloud platform is stocked with free services, runtimes, and infrastructure to help you quickly build and deploy your next mobile or web application. </p>
           </div>
           <p>Until a few years ago, figuring out how many calories were in that sandwich you just ate required a combination of guesswork and squinting at package wrappers. Today, that same information is available from any number of online nutrition databases, making it easier to track your food intake.</p>
           <div class="ibm-pull-quote ibm-h3">
            <blockquote>
             <p><em class="dw-pullquote"><span class="dw-pullquote-open">“</span>For developers, the availability of nutrition data via open APIs is exciting because it creates new opportunities to build useful, relevant health management applications.<span class="dw-pullquote-close">”</span></em></p>
            </blockquote>
           </div>
           <p>In this article, I show you how to create an online calorie counter that enables users to: </p>
           <ul class="ibm-bullet-list">
            <li>Search for food items by name, with results retrieved through an <a href="http://www.nutritionix.com/api">API</a> to the online nutrition database <a href="http://www.nutritionix.com/api">Nutritionix</a>.</li>
            <li>Group selected food items together to create <em>meal records</em>, and save these records to a MySQL database, together with their calorie counts, by using a PHP/AngularJS application.</li>
            <li>Retrieve reports of their total calories that are consumed for the current day, the last seven days, and the last 30 days.</li>
            <li>Access the app from mobile devices such as tablets and smartphones.</li>
           </ul>
           <p>On the client side of things, I use <a href="http://jquerymobile.com/">jQuery Mobile</a> to create a mobile-friendly user interface for the application and <a href="http://angularjs.org/">AngularJS</a> to enable some of the application's interactive features. On the server, I use <a href="http://slimframework.com/">Slim</a>, a PHP micro-framework, to control interaction with the Nutritionix API and to save and retrieve data from the MySQL server.</p>
           <p>In the final part of this article, I show you how to deploy the application to the Bluemix cloud, which provides a scalable and robust infrastructure for application deployment to ensure that users have around-the-clock access.</p>
           <p>Sound interesting? Come on in, and let's get started!</p>
           <h2 id="3WhatYoullNeedoutline" class="ibm-h2">What you need for your application</h2>
           <ul class="ibm-bullet-list">
            <li>A basic familiarity with <a href="http://jquerymobile.com/">jQuery Mobile</a>, <a href="http://angularjs.org/">AngularJS</a>, <a href="http://www.php.net/">PHP</a>, <a href="http://mysql.com/">MySQL</a>, and either <a href="http://httpd.apache.org/">Apache</a> or nginx</li>
            <li>A local PHP/MySQL development environment with an outgoing mail server</li>
            <li>A <a href="https://www.bluemix.net/">Bluemix account</a></li>
            <li>A <a href="http://www.nutritionix.com/api/signup">Nutritionix API account</a></li>
            <li><a href="https://getcomposer.org/">Composer</a>, the PHP dependency manager</li>
            <li>The <a href="https://github.com/cloudfoundry/cli">CloudFoundry command line tool</a></li>
            <li>A text editor or IDE</li>
           </ul>
           <h2 id="step1" class="ibm-h2">Step 1. Set up the application database</h2>
           <p>Use the following code listing that includes a MySQL table definition and sample data to set up the application database.</p>
           <ul class="ibm-bullet-list">
            <li><strong>If you're developing and deploying only locally</strong>, you can use this code to initialize a MySQL database table for the application to connect to.</li>
            <li><strong>If you're deploying on Bluemix</strong>, skip this step for the moment; I'll return to it in <a href="#step8">Step 8</a> after you initialize and bind a MySQL service instance on Bluemix.</li>
           </ul>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">CREATE TABLE meals (
  id int(11) NOT NULL AUTO_INCREMENT,
  uid varchar(255) NOT NULL,
  calories decimal(10,2) NOT NULL,
  rdate timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  ip varchar(20) NOT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8


CREATE TABLE users (
  id int(11) NOT NULL AUTO_INCREMENT,
  email varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  code varchar(255) DEFAULT NULL,
  `status` int(11) NOT NULL,
  rdate timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  ip varchar(20) NOT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;</pre></span>
           <h2 id="step2" class="ibm-h2">Step 2. Install Slim</h2>
           <p>Download and set up the Slim micro-framework. Why Slim? Slim comes with a sophisticated URL router and support for Flash messages, encrypted cookies, and middleware. It's also easy to understand and use, and it comes with great documentation.</p>
           <p>I use Composer, the PHP dependency manager, to download and set up Slim. In addition to Slim, I also add the SendGrid client libraries for PHP. (Learn more about SendGrid and why it's needed in a bit.) The following code listing is the Composer configuration file. Save this file to $APP_ROOT/composer.json (where <code>$APP_ROOT</code> refers to your working directory).</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">{
    "require": {
        "slim/slim": "2.*",
        "sendgrid/sendgrid": "2.0.5"
    }
}</pre></span>
           <p>You can now install Slim using Composer with the command:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">shell&gt; php composer.phar install</pre></span>
           <p><strong>Note: </strong>If you use Windows, include the OpenSSL extension in your php.ini file, or add the line <code>extension=php_openssl.dll</code> to it before you run <code>php composer.phar install</code>.</p>
           <p>To make it easier to access the application, you can also define a new virtual host in your development environment and point its document root to $APP_ROOT. This step, although optional, is recommended because it creates a closer replica of the target deployment environment on Bluemix.</p>
           <p>To set up a named virtual host for the application in Apache, open the Apache configuration file (httpd.conf or httpd-vhosts.conf) and add these lines to it:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">NameVirtualHost 127.0.0.1
&lt;VirtualHost 127.0.0.1&gt;
    DocumentRoot "/var/www/calories"
    ServerName calories.localhost
&lt;/VirtualHost&gt;</pre></span>
           <p>To set up a named virtual host for the application in <a href="http://nginx.org/en/">nginx</a>, open the nginx configuration file (nginx.conf) and add these lines to it:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">server {
    server_name calories.localhost;
     root /var/www/calories;
     try_files $uri /index.php;
     
     location ~ \.php$ {
        try_files $uri =404;            
        include fastcgi_params;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
 # assumes you are using php-fcgi
        fastcgi_pass 127.0.0.1:90;
    }        
}</pre></span>
           <p>These lines define a new virtual host, <code>http://calories.localhost/</code>, for which the document root corresponds to the <code>$APP_ROOT</code> (remember to update it to reflect your own local settings). Restart the web server to activate these new settings. You might need to update your network's local DNS server to indicate the new host.</p>
           <a id="2.|outline"></a>
           <h2 id="step3" class="ibm-h2">Step 3. Understand the Nutritionix API</h2>
           <p>As with many other web APIs, the Nutritionix API works over HTTP and expects an HTTP request to a designated endpoint. On receipt of this request, the API server replies to the query with a JSON feed that contains the requested data. It's then possible to parse this data by using either a server-side programming language (for example, PHP or Perl) or a client-side toolkit (for example, jQuery or AngularJS) and extract content from it for integration into a web page.</p>
           <p>After you sign up for a Nutritionix API account and have a valid <code>appId</code> and <code>appKey</code>, you can take the API for a test drive by searching for food items that match the term "chicken." The free developer account entitles you to only 500 searches per day (although you can ask for an increased quota by emailing the API team).</p>
           <p>Consider the next image, which shows the response to an authenticated <code>GET</code> request to <code>https://api.nutritionix.com/v1_1/search/chicken?fields=item_name,brand_name,nf_calories&amp;item_type=</code><code>3</code><code>&amp;appId=[APP-ID]&amp;appKey=[APP-KEY]</code>, the API endpoint for search queries (remember to update the previous URL to reflect your API credentials before you issue the request).</p>
           <img src="image001.jpg" class="ibm-downsize" alt="Screen capture of Nutritionix API response" height="754" width="866">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N10152');return false;" href="#N10152">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N10152">
            <img alt="Screen capture of Nutritionix API response" src="image001.jpg" width="866">
           </div>
           <p>As the image illustrates, the Nutritionix API responds to the request with a JSON document that lists food items that match the search term "chicken." The query string includes the <code>item_type=3</code> parameter, which limits the search to the USDA database only. For each food item, the response includes the item name, brand name, and calorie count. Other fields are also supported; look in the <a href="https://developer.nutritionix.com/docs">Nutritionix API documentation</a> for details.</p>
           <h2 id="step4" class="ibm-h2">Step 4. Enable the search interface</h2>
           <p>Develop a simple search interface, which enables the user to search for food items and view a list of results. The result page must include controls for the user to add selected food items to his meal record.</p>
           <p>Set up the basic structure of this user interface and save it as $APP_ROOT/templates/main.php.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
  &lt;link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.2/jquery.mobile-1.4.2.min.css" /&gt;
  &lt;script src="//code.jquery.com/jquery-1.9.1.min.js"&gt;&lt;/script&gt;
  &lt;script src="//code.jquery.com/mobile/1.4.2/jquery.mobile-1.4.2.min.js"&gt;&lt;/script&gt;
  &lt;script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.0-beta.6/angular.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div data-role="page"&gt;

    &lt;div data-role="header"&gt;
      &lt;h1&gt;Calorie Counter&lt;/h1&gt;
    &lt;/div&gt;

    &lt;div data-role="content" ng-app="myApp"&gt;	
      &lt;div data-role="tabs" ng-controller="myAppController"&gt;
      
        &lt;div data-role="navbar"&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href="#search" data-theme="a" class="ui-btn-active"&gt;Search&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="#record" data-theme="a"&gt;Record&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="#report" data-theme="a"&gt;Report&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
        
        &lt;div id="search"&gt;&lt;/div&gt;

        &lt;div id="record"&gt;&lt;/div&gt;
        
        &lt;div id="report"&gt;&lt;/div&gt;

      &lt;/div&gt;      
    &lt;/div&gt;
    
  &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></span>
           <p>The previous code listing shows a page that is formatted according to standard jQuery Mobile conventions. The primary page element is a <code>&lt;div&gt;</code> element with a <code>data-role="page"</code> attribute. Within this <code>&lt;div&gt;</code> element are separate <code>&lt;div&gt;</code> elements for the page header and content. The page content consists of a series of tabs. Each tab represents one of the tasks ("search", "record," and "report"). Clicking the name of the tab in the top navigation bar shows its content.</p>
           <p>Next, add elements to the search tab, as shown in the following code listing:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;!DOCTYPE html&gt;
...
    &lt;div data-role="content" ng-app="myApp"&gt;	
      &lt;div data-role="tabs" ng-controller="myAppController"&gt;
       
        &lt;div id="search"&gt;
          &lt;h2 class="ui-bar ui-bar-a"&gt;Food Item Search&lt;/h2&gt;
          &lt;div class="ui-body"&gt;
              &lt;input type="search" name="query" ng-model="foodItems.query" /&gt;
              &lt;button ng-click="search()"&gt;Search&lt;/button&gt;
          &lt;/div&gt;   
          
          &lt;h2 class="ui-bar ui-bar-a"&gt;Search Results&lt;/h2&gt;   
          &lt;div class="ui-body"&gt;
            &lt;ul data-role="listview" data-split-theme="d"&gt;
              &lt;li ng-repeat="r in foodItems.results"&gt;
                &lt;a&gt;{{r.fields.item_name}} / {{r.fields.nf_calories + ' calories'}}&lt;/a&gt;
&lt;a href="#" data-inline="true" data-role="button" data-icon="plus" 
                  data-theme="a" ng-click="addToMeal(r)"&gt;Add&lt;/a&gt;
              &lt;/li&gt;
            &lt;/ul&gt;                    
          &lt;/div&gt;
        &lt;/div&gt;

      &lt;/div&gt;      
    &lt;/div&gt;
...</pre></span>
           <p>The search tab now consists of two areas: a search input field at the top, and a search results list at the bottom. Both areas are controlled by an AngularJS controller and both use an AngularJS model named <code>foodItems</code>. The following code listing shows the controller code.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">  &lt;script&gt;
  var myApp = angular.module('myApp', []);
 
  function myAppController($scope, $http) {
    // related to search functionality
    $scope.mealItems = [];
    $scope.foodItems = {};
    $scope.foodItems.results = [];
    $scope.foodItems.query = '';
    
    $scope.search = function() {
      if ($scope.foodItems.query != '') {
        $http({
            method: 'GET',
            url: '/search/' + $scope.foodItems.query,
          }).
          success(function(data) {
            $scope.foodItems.results = data.hits;
          });
      };
    };
    
    $scope.addToMeal = function(foodItem) {
       $scope.mealItems.push(foodItem);
    };     
  }
  &lt;/script&gt;</pre></span>
           <p>And here's what the search interface looks like in action.</p>
           <img src="image002.png" class="ibm-downsize" alt="Screen capture of searching for food items using the Nutritionix API" height="603" width="672">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N1018E');return false;" href="#N1018E">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N1018E">
            <img alt="Screen capture of searching for food items using the Nutritionix API" src="image002.png" width="672">
           </div>
           <p>How does it work? When a user enters a search term and clicks Search, the AngularJS <code>search()</code> function retrieves the input via the <code>foodItems</code> model and generates an Ajax request to the <code>/search</code> application endpoint. This request is not the Nutritionix API endpoint, but rather an intermediary API endpoint that is managed by the application itself (more on this shortly).</p>
           <p>The response to the Ajax request is a JSON packet similar to that shown earlier. This response is attached to the <code>foodItems.results</code> property, and the AngularJS data binding takes care of iterating over this collection, parsing it, and displaying it as a list of search results.</p>
           <p>Look closely at the search interface. Notice that next to each search result is a button, which is linked to the <code>addToMeal()</code> function. When this button is clicked, the corresponding food item is added to a <code>mealItems</code> array in the scope. Later, this array is used to construct the view for the record tab.</p>
           <p>On the server end, you need a handler for the Ajax request to the <code>/search</code> endpoint, which is where Slim comes in. Slim uses the Ajax request data to connect to the Nutritionix API and run a search, similar to the search shown earlier. The following listing has the code to make it work.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;?php
// use Composer autoloader
require 'vendor/autoload.php';
\Slim\Slim::registerAutoloader();

// configure Slim application instance
$app = new \Slim\Slim();
$app-&gt;config(array(
  'debug' =&gt; true,
  'templates.path' =&gt; './templates'
));

// configure credentials
// ... for Nutritionix
$config["nutritionix"]["appId"] = 'APP-ID';
$config["nutritionix"]["appKey"] = 'APP-KEY';

// index page handlers
$app-&gt;get('/', function () use ($app) {
  $app-&gt;redirect('/index');
});

$app-&gt;get('/index', function () use ($app) {
  $app-&gt;render('main.php');
});

// search handler
$app-&gt;get('/search/:query', function ($query) use ($app, $config) {
  try {
    // execute search on Nutritionix API
    // specify search scope and required response fields
    // replace with your API credentials
$qs = http_build_query(array('appId' =&gt; $config["nutritionix"]["appId"], 
 'appKey' =&gt; $config["nutritionix"]["appKey"], 'item_type' =&gt; '3', 
            'fields' =&gt; 'item_name,brand_name,nf_calories'));
$url = 'https://api.nutritionix.com/v1_1/search/' . 
              str_replace(' ', '+', $query) . '?' . $qs;
    $ch = curl_init();    
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);  
    curl_exec($ch);
    curl_close($ch);
  } catch (Exception $e) {
    $app-&gt;response()-&gt;status(400);
    $app-&gt;response()-&gt;header('X-Status-Reason', $e-&gt;getMessage());
  }
});

$app-&gt;run();</pre></span>
           <p>This script, which you need to save as $APP_ROOT/index.php, begins by loading the Slim libraries and initializing and configuring a new Slim application object. In particular, the Slim application object must be configured with the path to the jQuery Mobile page templates so that it can render them as needed.</p>
           <p>Slim works by defining router callbacks for HTTP methods and endpoints. To perform this action, it calls the corresponding method (for example, <code>get()</code> for <code>GET</code> requests or <code>post()</code> for <code>POST</code> requests) and passes the URL route to be matched as the first argument to the method. The second argument to the method is a function, which specifies the actions to be taken when the route is matched to an incoming request. The previous listing sets up two such router callbacks: <code>/index</code> and <code>/search</code>. </p>
           <ul class="ibm-bullet-list">
            <li><strong><code>/index</code> callback:</strong> Renders the main application page template. This callback contains the various tabs, jQuery Mobile page elements, and AngularJS controller code.</li>
            <li><strong><code>/search</code> callback:</strong> Handles Ajax search requests sent by the AngularJS controller. It accepts a search term, then uses a PHP <code>http_build_query()</code> method to construct a request URL to the Nutritionix API. The request is sent to the API via cURL, and the response is returned to the application front end as a JSON document. AngularJS then takes care of parsing the response data and binding it to the scope.</li>
           </ul>
           <p>You can also run the Ajax request directly from the application front-end by using AngularJS. However, doing this action exposes your private Nutritionix API application key to users, a practice that is not recommended for a publicly accessible application. Having a server-side script perform the request instead adds some overhead, but offers greater security.</p>
           <h2 id="5Step5CalculateandStoreMealRecordsoutline" class="ibm-h2">Step 5. Calculate and store meal records</h2>
           <p>With the search interface complete, the next step is to build the second tab in the user interface. This tab displays a list of the user's selected food items and a running total of the calories in those food items. It includes controls to save the meal record to the database. Use the following code.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;!DOCTYPE html&gt;
…
&lt;head&gt;
  &lt;script&gt;
  var myApp = angular.module('myApp', []);
  
  function myAppController($scope, $http) {

    // related to record functionality
    $scope.removeFromMeal = function(index) {
       $scope.mealItems.splice(index, 1);
    };    
    
    $scope.clearMeal = function() {
      $scope.mealItems.length = 0;
    };
    
    $scope.getTotalCalories = function() {
      var sum = 0;
      for(i=0; i&lt;$scope.mealItems.length; i++) {
        sum += $scope.mealItems[i].fields.nf_calories;
      }
      return sum.toFixed(2);
    };    
    
    $scope.record = function() {
      if ($scope.getTotalCalories() &gt; 0) {
        $http({
            method: 'POST',
            url: '/record',
            data: {'totalCalories': $scope.getTotalCalories()}
          }).
          success(function(data) {
            $scope.clearMeal();
          });
        };   
    };
  }
  &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
...
    &lt;div data-role="content" ng-app="myApp"&gt;	
      &lt;div data-role="tabs" ng-controller="myAppController"&gt;

        &lt;div data-role="navbar"&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href="#search" data-theme="a" class="ui-btn-active"&gt;Search&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="#record" data-theme="a"&gt;Record &lt;span class="ui-li-count"&gt; {{ getTotalCalories() }} / {{ mealItems.length }}&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="#report" data-theme="a"&gt;Report&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;

        &lt;div id="record"&gt;
          &lt;h2 class="ui-bar ui-bar-a"&gt;Meal Record&lt;/h2&gt;
          &lt;div class="ui-body"&gt;
            &lt;ul data-role="listview" data-split-theme="d"&gt;
              &lt;li ng-repeat="item in mealItems track by $index"&gt;
                &lt;a&gt;{{item.fields.item_name}} / {{item.fields.nf_calories + ' calories'}}&lt;/a&gt;
&lt;a href="#" data-inline="true" data-role="button" data-icon="minus" 
                  data-theme="a" ng-click="removeFromMeal($index)"&gt;Add&lt;/a&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/div&gt;          
          &lt;div class="ui-body"&gt;
            &lt;button ng-click="record()"&gt;Save&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;

      &lt;/div&gt;
      
    &lt;/div&gt;
…
&lt;/body&gt;
&lt;/html&gt;</pre></span>
           <p>The next screen capture shows what the interface looks like in action.</p>
           <img src="image003.png" class="ibm-downsize" alt="Screen capture fo recording meal contents" height="412" width="697">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N101EB');return false;" href="#N101EB">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N101EB">
            <img alt="Screen capture fo recording meal contents" src="image003.png" width="697">
           </div>
           <p>The list of selected food items is easily generated by iterating over the <code>mealItems</code> array from <a href="#step4">Step 4</a>. The AngularJS data-binding mechanism ensures that the list is updated instantly, as the user selects new items in the search interface.</p>
           <p>After the meal record is complete, the user clicks <strong>Save</strong> to save the record to the database. The <code>record()</code> function creates an Ajax <code>POST</code> request to the <code>/record</code> endpoint, passing it the total calorie count for the meal record. If the Ajax request is successful, the <code>mealItems</code> array is cleared, ready for the next meal.</p>
           <p>Notice a couple of other things from the previous listing:</p>
           <ul class="ibm-bullet-list">
            <li>The navigation bar includes two counters: the total calories and the total number of selected food items. This count is automatically updated as the user adds and removes food items from the meal record. This update is again accomplished with data-binding. The two values are dynamically updated from the <code>mealItems</code> array length and the <code>getTotalCalories()</code> controller method.</li>
            <li>The user can remove selected food items from the meal record by clicking the button next to each meal item. This action invokes the <code>removeFromMeal()</code> controller method, which uses the index of the selected item to remove it from the <code>mealItems</code> array. Data-binding takes care of updating the view and the navigation bar counters.</li>
           </ul>
           <p>On the server side, you need to add a Slim callback for the <code>/record</code> endpoint. As you might guess, this callback reads the total calorie count that is sent by the application front end and persist it to the MySQL database created in <a href="#step1">Step 1</a>. The code for the callback is:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;?php
// use Composer autoloader
require 'vendor/autoload.php';
\Slim\Slim::registerAutoloader();

// configure credentials
// ... for Nutritionix
$config["nutritionix"]["appId"] = 'APP-ID';
$config["nutritionix"]["appKey"] = 'APP-KEY';
// ... for MySQL
$config["db"]["name"] = 'test';
$config["db"]["host"] = 'localhost';
$config["db"]["port"] = '3306';
$config["db"]["user"] = 'root';
$config["db"]["password"] = 'guessme';

// if Bluemix VCAP_SERVICES environment available
// overwrite with credentials from Bluemix
if ($services = getenv("VCAP_SERVICES")) {
  $services_json = json_decode($services, true);
  $config["db"] = $services_json["mysql-5.5"][0]["credentials"];
}

// configure Slim application instance
$app = new \Slim\Slim();
$app-&gt;config(array(
  'debug' =&gt; true,
  'templates.path' =&gt; './templates'
));

// initialize PDO object
$db = $config["db"]["name"];
$host = $config["db"]["host"];
$port = $config["db"]["port"];
$username = $config["db"]["user"];
$password = $config["db"]["password"];  
$dbh = new PDO("mysql:host=$host;dbname=$db;port=$port;charset=utf8", $username, $password);

// start session
session_start();

// record handler
$app-&gt;post('/record', function () use ($app, $dbh) {
  try {
    // get and decode JSON request body
    $request = $app-&gt;request();
    $body = $request-&gt;getBody();
    $input = json_decode($body);

    // insert meal record
    $stmt = $dbh-&gt;prepare('INSERT INTO meals (uid, calories, rdate, ip) VALUES(?, ?, ?, ?)');
$stmt-&gt;execute(array($_SESSION['uid'], $input-&gt;totalCalories, 
      date('Y-m-d h:i:s', time()), $_SERVER['SERVER_ADDR']));
    $input-&gt;id = $dbh-&gt;lastInsertId();
    
    // return JSON-encoded response body
    $app-&gt;response()-&gt;header('Content-Type', 'application/json');
    echo json_encode($input);    
  } catch (Exception $e) {
    $app-&gt;response()-&gt;status(400);
    $app-&gt;response()-&gt;header('X-Status-Reason', $e-&gt;getMessage());
  }  
});

// snip: other handlers

$app-&gt;run();</pre></span>
           <p>This process starts by configuring credentials for the local application database. It then checks the PHP environment for the special <code>VCAP_SERVICES</code> environment variable. On Bluemix, this variable holds credentials for bound service instances. If the variable is found, the script assumes it's running on Bluemix and uses the credentials to initialize a PDO connection to the bound MySQL instance. If the variable is not found, the script assumes it's running on a local development instance and uses the credentials for the local database.</p>
           <p>Next, the listing defines a <code>POST</code> callback handler for the <code>/record</code> route. This handler receives Ajax <code>POST</code> requests containing total calorie counts and creates SQL <code>INSERT</code> statements to save these counts to the database. In addition to the calorie count, the handler automatically adds the time stamp, the IP address of the client, and the logged-in user's unique identifier to the statement. If the <code>INSERT</code> is successful, the handler returns a JSON packet with the record identifier to the requesting Ajax script.</p>
           <p>You're probably wondering where the user identifier comes from. This is covered in detail in <a href="#step7">Step 7</a>, but briefly, every application user has a unique identifier, generated at registration time. When the user logs in, this identifier is added to the session in the <code>$_SESSION['uid']</code> variable and is interpolated into the various SQL statements when you save and retrieve user-specific information.</p>
           <h2 id="step6" class="ibm-h2">Step 6. Display reports</h2>
           <p>The third tab of the user interface displays reports for the user's calorie consumption. To keep it simple, the reports are pre-set to display calorie counts for the current day, the last seven days, and the last 30 days. You can easily make this tab more complex, by allowing custom date ranges or more detailed breakdowns.</p>
           <p>The following listing displays the code for the reporting interface:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;!DOCTYPE html&gt;
…
&lt;head&gt;
  &lt;script&gt;
  var myApp = angular.module('myApp', []);
  
  function myAppController($scope, $http) {

    // related to report functionality
    $scope.report = function() {
      $http({
          method: 'GET',
          url: '/report'
        }).
        success(function(data) {
          $scope.counts = data;
        });
    };   

  }
  &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
...
    &lt;div data-role="content" ng-app="myApp"&gt;	
      &lt;div data-role="tabs" ng-controller="myAppController"&gt;

        &lt;div data-role="navbar"&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href="#search" data-theme="a" class="ui-btn-active"&gt;Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record" data-theme="a"&gt;Record 
                &lt;span class="ui-li-count"&gt; {{ getTotalCalories() }} /
                  {{ mealItems.length }}&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href="#report" data-theme="a" ng-click="report()"&gt;Report&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;

        &lt;div id="report"&gt;
          &lt;h2 class="ui-bar ui-bar-a"&gt;Summary&lt;/h2&gt;
          &lt;div class="ui-body"&gt;
            &lt;ul data-role="listview" data-inset="true" data-split-theme="d"&gt;
              &lt;li&gt;Today &lt;span class="ui-li-count"&gt;{{ counts.c1 }}&lt;/span&gt;&lt;/li&gt;
              &lt;li&gt;Last 7 days &lt;span class="ui-li-count"&gt;{{ counts.c7 }}&lt;/span&gt;&lt;/li&gt;
              &lt;li&gt;Last 30 days &lt;span class="ui-li-count"&gt;{{ counts.c30 }}&lt;/span&gt;&lt;/li&gt;
            &lt;/ul&gt;          
          &lt;/div&gt;          
          &lt;div class="ui-body"&gt;
            &lt;button ng-click="report()"&gt;Refresh&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;

      &lt;/div&gt;
      
    &lt;/div&gt;
…
&lt;/body&gt;
&lt;/html&gt;</pre></span>
           <p>The code listing sets up a list view with three placeholders that are bound to scope variables, which represent the calorie counts for the current day, the last seven days, and the last 30 days. The <code>report()</code> function takes care of setting these scope variables by making an Ajax call to the <code>/report</code> endpoint and parsing the JSON response.</p>
           <p>The <code>/report</code> endpoint is the real workhorse of this section. It runs three SQL queries to calculate the user's total calorie consumption over the three time periods. The counts are then massaged into a JSON document returned to the application via Ajax. The code for these tasks is.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;?php
// use Composer autoloader
require 'vendor/autoload.php';
\Slim\Slim::registerAutoloader();

// snip: configure credentials
// snip: initialize PDO object
// snip: start session

// configure Slim application instance
$app = new \Slim\Slim();
$app-&gt;config(array(
  'debug' =&gt; true,
  'templates.path' =&gt; './templates'
));

// report handler
$app-&gt;get('/report', function () use ($app, $dbh) {
  $counts = array();
  $counts['c1'] = $counts['c7'] = $counts['c30'] = 0;
  try {
    // get calorie counts    
    // ... for today
$stmt = $dbh-&gt;query("SELECT IFNULL(SUM(calories),0) AS sum FROM meals WHERE 
              uid = '" . $_SESSION['uid'] . "' and DATE(rdate) = DATE (NOW())");
    $row = $stmt-&gt;fetch(PDO::FETCH_ASSOC);
    $counts['c1'] = $row['sum'];
    
    // ... for the last 7 days
$stmt = $dbh-&gt;query("SELECT IFNULL(SUM(calories),0) AS sum FROM meals WHERE 
 uid = '" . $_SESSION['uid'] . "' and DATE(rdate) BETWEEN 
              DATE(DATE_SUB(NOW(), INTERVAL 7 DAY)) AND DATE (NOW())");
    $row = $stmt-&gt;fetch(PDO::FETCH_ASSOC);
    $counts['c7'] = $row['sum'];
    
    // ... for the last 30 days
$stmt = $dbh-&gt;query("SELECT IFNULL(SUM(calories),0) AS sum FROM meals WHERE 
 uid = '" . $_SESSION['uid'] . "' and DATE(rdate) BETWEEN 
              DATE(DATE_SUB(NOW(), INTERVAL 30 DAY)) AND DATE (NOW())");
    $row = $stmt-&gt;fetch(PDO::FETCH_ASSOC);
    $counts['c30'] = $row['sum'];
    
    // return JSON-encoded response body
    $app-&gt;response()-&gt;header('Content-Type', 'application/json');
    echo json_encode($counts);    
  } catch (Exception $e) {
    $app-&gt;response()-&gt;status(400);
    $app-&gt;response()-&gt;header('X-Status-Reason', $e-&gt;getMessage());
  }  
});

// snip: other handlers

$app-&gt;run();</pre></span>
           <p>The following image shows an example of the reports that a user sees.</p>
           <img src="image004.png" class="ibm-downsize" alt="Screen capture of generating consumption reports" height="386" width="617">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N1026B');return false;" href="#N1026B">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N1026B">
            <img alt="Screen capture of generating consumption reports" src="image004.png" width="617">
           </div>
           <h2 id="step7" class="ibm-h2">Step 7. Add user registration and authentication</h2>
           <p>Most of the application's key functionality is now complete. All that's left is to add a user registration workflow that enables users to sign up, and a log-in/log-out system for authentication.</p>
           <p>The following code for the user registration form can be saved as $APP_ROOT/templates/register.php:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
  &lt;link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.2/jquery.mobile-1.4.2.min.css" /&gt;
  &lt;script src="//code.jquery.com/jquery-1.9.1.min.js"&gt;&lt;/script&gt;
  &lt;script src="//code.jquery.com/mobile/1.4.2/jquery.mobile-1.4.2.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div data-role="page"&gt;
    &lt;div data-role="header"&gt;
      &lt;h1&gt;Calorie Counter&lt;/h1&gt;
    &lt;/div&gt;
    
    &lt;div data-role="content"&gt;	
      &lt;div style="text-align:center"&gt;&lt;?php echo $flash['message']; ?&gt;&lt;/div&gt;
      &lt;form action="/register" method="post" data-ajax="false"&gt;
      &lt;div data-role="fieldcontain"&gt;
          &lt;label for="email" class="ui-hidden-accessible"&gt;Email address:&lt;/label&gt;
          &lt;input type="text" name="email" id="email" placeholder="Email address" /&gt;
      &lt;/div&gt;

      &lt;div data-role="fieldcontain"&gt;
          &lt;label for="password" class="ui-hidden-accessible"&gt;Password:&lt;/label&gt;
          &lt;input type="password" name="password" id="password" placeholder="Password" /&gt;
      &lt;/div&gt;

      &lt;div data-role="fieldcontain"&gt;
          &lt;label for="passwordconfirm" class="ui-hidden-accessible"&gt;Password (again):&lt;/label&gt;
&lt;input type="password" name="passwordconfirm" id="passwordconfirm" 
             placeholder="Password (again)" /&gt;
      &lt;/div&gt;
      
      &lt;div&gt;
        &lt;button type="submit" id="submit"&gt;Sign Up&lt;/button&gt;
      &lt;/div&gt;
      &lt;/form&gt;
    &lt;/div&gt;

  &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></span>
           <p>Here's how the user registration form looks:</p>
           <img src="image005.png" class="ibm-downsize" alt="Screen capture of user registration form" height="257" width="409">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N10281');return false;" href="#N10281">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N10281">
            <img alt="Screen capture of user registration form" src="image005.png" width="409">
           </div>
           <p>This form contains fields for the user's email address and password. When the user submits the form, the user-entered information must be validated and an email message be generated to ask the user to confirm the account. This validation verifies the correctness of the submitted email address and helps reduce automated form submissions. The user's account remains inactive until the confirmation step is completed.</p>
           <p>Here's the code to accomplish these tasks:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;?php
// use Composer autoloader
require 'vendor/autoload.php';
\Slim\Slim::registerAutoloader();

// configure credentials
// ... for Nutritionix
$config["nutritionix"]["appId"] = 'APP-ID';
$config["nutritionix"]["appKey"] = 'APP-KEY';
// ... for MySQL
$config["db"]["name"] = 'test';
$config["db"]["host"] = 'localhost';
$config["db"]["port"] = '3306';
$config["db"]["user"] = 'root';
$config["db"]["password"] = 'guessme';
// ... for SendGrid
$config["sg"] = '';

// if Bluemix VCAP_SERVICES environment available
// overwrite with credentials from Bluemix
if ($services = getenv("VCAP_SERVICES")) {
  $services_json = json_decode($services, true);
  $config["db"] = $services_json["mysql-5.5"][0]["credentials"];
  $config["sg"] = $services_json["sendgrid"][0]["credentials"];
}

// snip: configure Slim application instance
// snip: initialize PDO object
// snip: start session

// registration handlers
$app-&gt;get('/register', function () use ($app) {
  $app-&gt;render('register.php');
});

// registration processor
$app-&gt;post('/register', function () use ($app, $dbh, $config) {
  try {
    $userEmail = $app-&gt;request-&gt;params('email');
    $userPassword = $app-&gt;request-&gt;params('password');    
    $userPasswordConfirm = $app-&gt;request-&gt;params('passwordconfirm');
    
    // validate user input
    if (!filter_var($userEmail, FILTER_VALIDATE_EMAIL)) {
      throw new Exception('Invalid email address');
    }
    if ($userPassword != $userPasswordConfirm) {
      throw new Exception('Passwords do not match');
    }
    $stmt = $dbh-&gt;query("SELECT id FROM users WHERE email = '$userEmail'");
    if ($stmt-&gt;rowCount() == 1) {
      throw new Exception('Email address already in use');
    }
    
    // generate unique code for confirmation email
    // create account with status inactive
    $userHash = md5(uniqid(rand(), true));
$stmt = $dbh-&gt;prepare('INSERT INTO users (email, password, code, status, ip) 
              VALUES(?, PASSWORD(?), ?, ?, ?)');
    $stmt-&gt;execute(array($userEmail, $userPassword, $userHash, '0', $_SERVER['SERVER_ADDR']));
    
    // generate confirmation email
    $confirmUrl = 'http://' . $_SERVER['HTTP_HOST'] . "/confirm/$userEmail/$userHash";
    $message = "Please confirm your account: $confirmUrl";
    $subject = 'Calorie counter: account confirmation';
    $from = 'no-reply@' . $_SERVER['HTTP_HOST'];
    
    if (!empty($config["sg"])) {
      $sendgrid = new SendGrid($config["sg"]['username'], $config["sg"]['password']);
      $email = new SendGrid\Email();
      $email-&gt;addTo($userEmail)
            -&gt;setFrom($from)
            -&gt;setSubject($subject)
            -&gt;setText($message);
      $sendgrid-&gt;send($email);
    } else {
      mail($userEmail, $subject, $message, "From: $from");
    }
    
    $app-&gt;flash('message', 'You will shortly receive an email to confirm your account.');
  } catch (Exception $e) {
    $app-&gt;flash('message', $e-&gt;getMessage());
  }
  $app-&gt;redirect('/login');        
});

// account confirmation handler
$app-&gt;get('/confirm/:email/:code', function ($email, $code) use ($app, $dbh) {
  try {
    // check for a matching email and code
    // if found, remove code and make account active
    $stmt = $dbh-&gt;query("SELECT id FROM users WHERE email = '$email' AND code = '$code'");
    if ($stmt-&gt;rowCount() == 1) {
      $row = $stmt-&gt;fetch(PDO::FETCH_ASSOC);
      $dbh-&gt;exec("UPDATE users SET code = '', status = '1' WHERE id = '" . $row['id'] . "'");
      $app-&gt;flash('message', 'Thank you for confirming your account. You can now sign in.');
    }
  } catch (Exception $e) {
    $app-&gt;flash('message', $e-&gt;getMessage());
  }
  $app-&gt;redirect('/login');
});

// snip: other handlers
  
$app-&gt;run();</pre></span>
           <p>The <code>/register</code> handler in the previous listing renders the user registration form when it receives a <code>GET</code> request. When it detects a <code>POST</code> submission, it performs a few basic checks to verify the email address format, passwords, and email address uniqueness. It then creates a unique code for the account confirmation email and saves the account details, together with the source IP address, time stamp, and email confirmation code, to the application database. The account status is set to inactive (0).</p>
           <p>The next step is to send the user a confirmation email that asks him to click a link to verify and activate the account. On Bluemix, this step is easier said than done. If you develop locally, or on a system where you have administrative privileges, it's easy to configure a mail server to handle outgoing email traffic, then use the PHP <code>mail()</code> function to send out the confirmation email. But when you run an application on Bluemix, this step doesn't work the same way. Instead, you need to configure an email service, bind it to your application, and then use that service to send out email.</p>
           <p>Bluemix offers the SendGrid service for this purpose and in <a href="#step8">Step 8</a>, I walk you through the process of binding it to your application instance. For the moment, all you need to know is that SendGrid comes with a PHP client library, which you can use within your application to connect to the bound SendGrid service, to authenticate, and to send email. You already downloaded this library with Composer in <a href="#step2">Step 2</a> and now you can use it. Authentication credentials for the service are obtained, as with MySQL, from the Bluemix <code>VCAP_SERVICES</code> environment variable at the top of the listing.</p>
           <p>The email message contains a link in the format:</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">http://[host]/confirm/[email address]/[code]</pre></span>
           <p> The <code>/confirm</code> handler in the previous listing handles requests for this URL. It reads in the email address and code, then performs an SQL query against the database to see whether they match. If they do, it then performs an extra query to UPDATE the account status to active (1) and displays a message to invite the user to log in. It also removes the confirmation code from the account record so that it cannot be reused.</p>
           <p>The next step is the user log-in form, which is shown in the following code listing. You can save it to $APP_ROOT/templates/login.php.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
  &lt;link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.2/jquery.mobile-1.4.2.min.css" /&gt;
  &lt;script src="//code.jquery.com/jquery-1.9.1.min.js"&gt;&lt;/script&gt;
  &lt;script src="//code.jquery.com/mobile/1.4.2/jquery.mobile-1.4.2.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div data-role="page"&gt;
    &lt;div data-role="header"&gt;
      &lt;h1&gt;Calorie Counter&lt;/h1&gt;
    &lt;/div&gt;
    
    &lt;div data-role="content"&gt;	
      &lt;div style="text-align:center"&gt;&lt;?php echo $flash['message']; ?&gt;&lt;/div&gt;
      &lt;form action="/login" method="post" data-ajax="false"&gt;
      &lt;div data-role="fieldcontain"&gt;
          &lt;label for="email" class="ui-hidden-accessible"&gt;Email address:&lt;/label&gt;
          &lt;input type="text" name="email" id="email" placeholder="Email address" /&gt;
      &lt;/div&gt;

      &lt;div data-role="fieldcontain"&gt;
          &lt;label for="password" class="ui-hidden-accessible"&gt;Password:&lt;/label&gt;
          &lt;input type="password" name="password" id="password" placeholder="Password" /&gt;
      &lt;/div&gt;

      &lt;div&gt;
        &lt;input type="submit" id="submit" value="Sign In" /&gt;
      &lt;/div&gt;
      &lt;/form&gt;
&lt;!-- using a separate form here to ensure that both buttons 
           look the same once clicked --&gt;
      &lt;form action="/register" method="get" data-ajax="false"&gt;
        &lt;input type="submit" id="submit" value="Sign Up" /&gt;      
      &lt;/form&gt;
    &lt;/div&gt;

  &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</pre></span>
           <p>The user log-in form looks like:</p>
           <img src="image006.png" class="ibm-downsize" alt="Screen capture of the user login form" height="250" width="407">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N102BF');return false;" href="#N102BF">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N102BF">
            <img alt="Screen capture of the user login form" src="image006.png" width="407">
           </div>
           <p>The user log-in form includes fields for the user's email address and password. On submission, the <code>/login</code> callback validates the user's credentials against the application database and permit or denies access.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">&lt;?php
// use Composer autoloader
require 'vendor/autoload.php';
\Slim\Slim::registerAutoloader();

// snip: configure credentials
// snip: configure Slim application instance
// snip: initialize PDO object

// start session
session_start();

// login handlers
$app-&gt;get('/login', function () use ($app) {
  $app-&gt;render('login.php');
});

// login processor
$app-&gt;post('/login', function () use ($app, $dbh) {
  try {
    // check for valid login
    // if found, set user id in session
    $userEmail = $app-&gt;request-&gt;params('email');
    $userPassword = $app-&gt;request-&gt;params('password');  
$stmt = $dbh-&gt;query("SELECT id FROM users WHERE email = '$userEmail' 
              AND password = PASSWORD('$userPassword') AND status = '1'");
    if ($stmt-&gt;rowCount() == 1) {
      $row = $stmt-&gt;fetch(PDO::FETCH_ASSOC);
      $_SESSION['uid'] = $row['id'];
    } else {
      throw new Exception('Login failed');
    }
  } catch (Exception $e) {
    $app-&gt;flash('message', $e-&gt;getMessage());
    $app-&gt;redirect('/login');      
  }
  $app-&gt;redirect('/index');
});

// logout handler
$app-&gt;get('/logout', function () use ($app) {
  session_destroy();
  $app-&gt;redirect('/login');
});

// snip: other handlers

$app-&gt;run();

// middleware to restrict access to authenticated users only
function authenticate () {
  $app = \Slim\Slim::getInstance();
  if (!isset($_SESSION['uid'])) {
    $app-&gt;redirect('/login');
  }
}</pre></span>
           <p>The key elements in the code listing include the following functions:</p>
           <ul class="ibm-bullet-list">
            <li><strong><code>/login</code> handler:</strong> Verifies the user's credentials against the application database. If they match, it creates a session variable with the user's unique identifier as <code>$_SESSION['uid']</code>. This session variable is then used by the <code>/record</code> and <code>/report</code> handlers to link calorie counts to users in the database.</li>
            <li><strong><code>/logout</code> handler:</strong> Destroys the session and all its variables.</li>
            <li><strong><code>authenticate()</code> function:</strong> Checks for the presence of the user identifier in the session. If not present, the function redirects the user to the <code>/login</code> URL, forcing a re-login. This function can be used as Slim middleware to be run before a request is processed. By adding this middleware to specific route handlers, it becomes possible to protect access to application functions that are only available to authenticated users. In the source code of the application, you can see this middleware in use on the <code>/search</code>, <code>/record</code>, and <code>/report</code> handlers.</li>
           </ul>
           <p>Notice my usage of Slim's <code>flash()</code> method in the previous listings. This method is a convenient way to display a message to the user because the message is stored in the session and remains extant until the next request. You can see that both registration and log-in forms include placeholders for this message.</p>
           <h2 id="step8" class="ibm-h2">Step 8. Deploy to IBM Bluemix</h2>
           <p>Now that the application is coded, the final step is to deploy it. If you deploy locally, you're done. You can use the application normally. However, if you deploy on Bluemix, you need a Bluemix account and you also need to download and install the Cloud Foundry command line client. Complete the deployment process with the following steps.</p>
           <h3 id="8.1.1.Createyourapplicationmanifest|outline" class="ibm-h3">1. Create your application manifest</h3>
           <p>The application manifest file tells Bluemix how to deploy your application. In particular, it specifies the PHP runtime environment (build pack) to use. Create this file at $APP_ROOT/manifest.yml, and fill it in with the following information.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">---
applications:
- name: calorie-counter-[random-number]
memory: 256M
instances: 1
host: calorie-counter-[random-number]
buildpack: <a href="https://github.com/dmikusa-pivotal/cf-php-build-pack.git">https://github.com/dmikusa-pivotal/cf-php-build-pack.git</a></pre></span>
           <p>Remember to update the host and application name to make it unique, either by changing it or by appending a random number to it. I use the CloudFoundry PHP build pack, although other alternatives are also available.</p>
           <h3 id="8.2.2.SetupURLroutingforBulletPHP|outline" class="ibm-h3">2. Set up URL routing for BulletPHP</h3>
           <p>By default, the Cloud Foundry PHP build pack uses Apache as its web server. Nginx is a lighter alternative. To use it, you need to override the build pack's default settings to use nginx instead as the web server. Before you start, you can obtain all the files in this section from the project's JazzHub source code repository.</p>
           <p>First, create a $APP_ROOT/.bp-config directory and then create $APP_ROOT/.bp-config/options.json with the following content.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">{
    "WEB_SERVER": "nginx"
}</pre></span>
           <p>It's also necessary to set URL rewriting rules for nginx so that it correctly passes API routes to BulletPHP's URL router. First, create $APP_ROOT/.bp-config/nginx/server-defaults.conf with the following content.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">        listen @{VCAP_APP_PORT};
        server_name _;

        fastcgi_temp_path @{TMPDIR}/nginx_fastcgi 1 2;
        client_body_temp_path @{TMPDIR}/nginx_client_body 1 2;
        proxy_temp_path @{TMPDIR}/nginx_proxy 1 2;

        real_ip_header x-forwarded-for;
        set_real_ip_from 10.0.0.0/8;
        real_ip_recursive on;

        try_files $uri /index.php;</pre></span>
           <p>Then, create $APP_ROOT/.bp-config/nginx/server-locations.conf with the following content.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">        # Some basic cache-control for static files to be sent to the browser
        location ~* \.(?:ico|css|js|gif|jpeg|jpg|png)$ {
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }

        # Deny hidden files (.htaccess, .htpasswd, .DS_Store).
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # pass .php files to fastcgi
        location ~ .*\.php$ {
            try_files $uri =404;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass php_fpm;
        }</pre></span>
           <h3 id="8.3.3.ConnecttoBluemixanddeploytheapplication|outline" class="ibm-h3">3. Connect to Bluemix and deploy the application</h3>
           <p>Use the <code>cf</code> command-line tool to log in to Bluemix with your IBM user name and password.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">shell&gt; cf api https://api.mybluemix.net
shell&gt; cf login</pre></span>
           <p>Change to the $APP_ROOT directory and push the application to Bluemix.</p>
           <span class="dw-code-nohighlight"><pre data-widget="syntaxhighlighter" class="brush: js; html-script: true; gutter: true;">shell&gt; cf push</pre></span>
           <p>Here's a sample of what you see during this process.</p>
           <img src="image007.png" class="ibm-downsize" alt="Screen capture of output of 'cf push' command" height="326" width="512">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N10359');return false;" href="#N10359">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N10359">
            <img alt="Screen capture of output of 'cf push' command" src="image007.png" width="512">
           </div>
           <p>Your application should be deployed to Bluemix. But you're not done yet!</p>
           <h3 id="8.4.4.BindMySQLandSendGridservicestotheapplication|outline" class="ibm-h3">4. Bind MySQL and SendGrid services to the application</h3>
           <p>Your application is now deployed, but you still need to connect it with a MySQL database instance so that your API has data to work with. Go to the Bluemix administration dashboard and log in with your IBM user name and password. You should see your application listed in the <strong>Apps</strong> menu bar.</p>
           <img src="image008.png" class="ibm-downsize" alt="Bluemix dashboard - application listing" height="225" width="277">
           <p>Select your application and on the resulting page, use the <strong>Add new service</strong> option to add the <code>mysql</code> service to your application.</p>
           <img src="image009.png" class="ibm-downsize" alt="Screen capture of Bluemix dashboard - adding a service" height="357" width="644">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N1037A');return false;" href="#N1037A">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N1037A">
            <img alt="Screen capture of Bluemix dashboard - adding a service" src="image009.png" width="644">
           </div>
           <p>You should now see a MySQL service instance that is bound to your application in the Bluemix administration dashboard.</p>
           <img src="image010.png" class="ibm-downsize" alt="Screen capture of Bluemix dashboard - listing bound services" height="440" width="904">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N10382');return false;" href="#N10382">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N10382">
            <img alt="Screen capture of Bluemix dashboard - listing bound services" src="image010.png" width="904">
           </div>
           <p>Next, do the same thing with the <code>SendGrid</code> service.</p>
           <img src="image011.png" class="ibm-downsize" alt="Screen capture of Bluemix dashboard - listing bound services" height="440" width="904">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N1038D');return false;" href="#N1038D">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N1038D">
            <img alt="Screen capture of Bluemix dashboard - listing bound services" src="image011.png" width="904">
           </div>
           <p>Your application details should include the MySQL and SendGrid access credentials in the <code>VCAP_SERVICES</code> environment variable.</p>
           <img src="image012.png" class="ibm-downsize" alt="Bluemix dashboard - environment variables" height="476" width="548">
           <p class="ibm-ind-link"><a class="ibm-popup-link" onclick="IBMCore.common.widget.overlay.show('N10398');return false;" href="#N10398">View image at full size</a></p>
           <div class="ibm-common-overlay ibm-overlay-alt-three" data-widget="overlay" id="N10398">
            <img alt="Bluemix dashboard - environment variables" src="image012.png" width="548">
           </div>
           <h3 id="8.5.5.Installtheexampleschema|outline" class="ibm-h3">5. Install the example schema</h3>
           <p>You can initialize the application database by using the example schema that is shown in <a href="#step1">Step 1</a>. Although there's no way to directly run the SQL commands in Step 1 in the Bluemix environment, the application includes a special route named <code>/install-schema</code> which you can request through your browser to set up the database table and sample data. Although this route is not documented in this article, you can find it in the source code repository for the application.</p>
           <h3 id="6.6" class="ibm-h3">6. Start using your application</h3>
           <p>After your application is deployed, start to use it by browsing to the host you specified in your application manifest, for example, <code>http://calorie-counter-[random-number].mybluemix.net</code>. </p>
           <h2 id="9Conclusionoutline" class="ibm-h2">Conclusion</h2>
           <p>As this article illustrated, Bluemix provides a solid foundation for creating and deploying mobile-friendly applications on a cloud-based platform. Add in Slim, jQuery Mobile, and AngularJS, and you have all the tools that you need to quickly prototype and deploy scalable, sophisticated, and interactive applications.</p>
           <p>You can download all the code that is implemented in this article from its JazzHub repository, together with the configuration files for the PHP build pack that is used in this article. I recommend that you get the code, start playing with it, and try adding new features to it. I guarantee you won't break anything, and it will definitely add to your learning.</p>
           <!--CMA ID: 975166-->
           <!--Site ID: 1-->
           <!--XSLT stylesheet used to transform this file: dw-document-html-8.0.xsl--> 
           <!-- Article Resources --> 
           <div class="ibm-alternate-rule">
            <hr>
           </div>
           <h4 id="artdownload" class="ibm-h4">Downloadable resources</h4>
           <ul class="ibm-link-list">
            <li><a class="ibm-pdf-link" href="mo-bluemix-php-nutritionix-angularjs-pdf.pdf">PDF of this content</a></li>
           </ul>
           <div class="ibm-alternate-rule">
            <hr>
           </div>
           <h4 id="artrelatedtopics" class="ibm-h4">Related topics</h4>
           <ul class="ibm-plain-list">
            <li><a href="https://developer.nutritionix.com/docs">Nutritionix API documentation</a></li>
            <li><a href="http://clouds-with-carl.blogspot.sk/2014/02/deploy-hello-world-php-application-to.html">Deploy a Hello World PHP Application to Zend Server on IBM Bluemix</a></li>
            <li><a href="http://clouds-with-carl.blogspot.in/2014/02/deploy-minimal-nodejs-application-to.html">Deploy a minimal Node.js application to IBM Bluemix </a></li>
            <li><a href="http://vikram-vaswani.in/weblog/2014/04/11/configure-url-rewriting-for-framework-based-php-applications-on-ibm-bluemix/">Configure URL Rewriting for Framework-Based PHP Applications on IBM Bluemix</a></li>
            <li><a href="http://www.ibm.com/developerworks/topics/jquery%20mobile/">jQuery Mobile</a></li>
            <li><a href="http://www.ibm.com/developerworks/topics/php/">PHP</a></li>
            <li><a href="http://www.ibm.com/developerworks/topics/angularjs/">AngularJS</a></li>
           </ul> 
           <!-- Commenting --> 
           <!-- INLINE_COMMENTS_BEGIN: --> 
           <div class="ibm-alternate-rule">
            <hr>
           </div> 
           <div id="dw-article-cmts-top" class="ibm-columns"> 
            <div class="ibm-col-6-2"> 
             <h4 id="icomments" class="ibm-h4">Comments</h4> 
             <div id="dw-article-cmts-login"> 
              <p><a onclick="window.location=userLinks[0].url;" tabindex="0" role="link">Sign in</a> or <a onclick="window.location=userLinks[1].url;" tabindex="0" role="link">register</a> to add and subscribe to comments.</p> 
             </div> 
            </div> 
            <div class="ibm-col-6-2" id="dw-notify"> 
             <input type="checkbox" value="1" name="comment_notification" id="comment_notification" disabled> 
             <label for="comment_notification">Subscribe me to comment notifications</label> 
            </div> 
           </div> 
           <div class="dw-article-cmts-container"> 
            <div class="ibm-no-print" id="dw-icomments-container"> 
            </div> 
           </div> 
           <!-- INLINE_COMMENTS_END --> 
           <!-- CENTER_6_4_CONTENT_COLUMN_END --> 
          </div> 
         </div> 
         <!--Rating_Meta_BEGIN-->
         <div class="metavalue">
          static.content.url=http://www.ibm.com/developerworks/js/artrating/
         </div>
         <div class="metavalue">
          SITE_ID=1
         </div>
         <div class="metavalue">
          Zone=Mobile development, Cloud computing
         </div>
         <div class="metavalue">
          ArticleID=975166
         </div>
         <div class="metavalue">
          ArticleTitle=Build and deploy a mobile-friendly calorie counter on IBM Bluemix with PHP, MySQL, AngularJS, and the Nutritionix API
         </div>
         <div class="metavalue">
          publish-date=04082015
         </div>
         <script language="javascript" type="text/javascript">document.write('<div class="metavalue">url='+location.href.replace(/</g,  '%3C')+'</div>');</script>
         <!--Rating_Meta_END--> 
        </div> 
        <!-- END_IBM-CONTENT-MAIN --> 
       </div> 
       <!-- END_IBM-CONTENT-BODY --> 
      </div> 
      <!-- END_IBM-CONTENT --> 
     </div> 
     <!-- END_IBM-PCON --> 
    </main> 
    <!-- MAIN_CONTENT_END --> 
    <!-- END_CONTENT-WRAPPER --> 
   </div> 
   <!-- FOOTER_BEGIN --> 
   <footer role="contentinfo" aria-label="IBM developerWorks"> 
    <div id="dw-footer-module" class="dw-footer-home"> 
     <section aria-label="Resources" role="contentinfo"> 
      <div class="ibm-columns"> 
       <div class="ibm-col-6-1 dw-footer-col-1"> 
        <ul> 
         <li class="dw-footer-heading" aria-label="developerWorks">developerWorks</li> 
         <li><a href="//www.ibm.com/developerworks/aboutdw/">About</a></li> 
         <li><a href="//www.ibm.com/developerworks/feedback">Help</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/ideas">Submit content</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/secure/report/">Report abuse</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/community/terms/thirdparty/">Third-party notice</a></li> 
        </ul> 
        <ul> 
         <li class="dw-footer-heading" aria-label="Community">Community</li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/rfe/">Product feedback</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/connect/">Developer Centers</a></li> 
        </ul> 
        <ul> 
         <li class="dw-footer-heading dw-follow-us" aria-label="Follow us">Follow us</li> 
        </ul> 
        <p class="dw-footer-social"> <a href="//twitter.com/developerWorks"> <img width="28" height="27" alt="Twitter" src="//dw1.s81c.com/developerworks/i/mf/dw-footer-icon-twitter.png"> </a> </p> 
        <p class="dw-footer-social-right"> <a href="//www.facebook.com/developerworks"> <img width="28" height="27" alt="Facebook" src="//dw1.s81c.com/developerworks/i/mf/dw-footer-icon-facebook.png"> </a> </p> 
        <br> 
        <p class="dw-footer-social"> <a href="//www.linkedin.com/groups/IBM-developerWorks-8137234"> <img width="28" height="27" alt="LinkedIn" src="//dw1.s81c.com/developerworks/i/mf/dw-footer-icon-linkedin.png"> </a> </p> 
        <p class="dw-footer-social-right"> <a href="//www.youtube.com/user/developerworks"> <img width="28" height="27" alt="YouTube" src="//dw1.s81c.com/developerworks/i/mf/dw-footer-icon-youtube.png"> </a> </p> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-2"> 
        <ul> 
         <li class="dw-footer-heading" aria-label="Join">Join</li> 
         <li><a href="//developer.ibm.com/academic/">Faculty</a></li> 
         <li><a href="//developer.ibm.com/students/">Students</a></li> 
         <li><a href="//developer.ibm.com/startups/">Startups</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/isv/">Business Partners</a></li> 
        </ul> 
        <ul class="dw-footer-lang" aria-label="Select a language"> 
         <li class="dw-footer-heading">Select a language</li> 
         <li><a href="//www.ibm.com/developerworks/">English</a></li> 
         <li><a href="//www.ibm.com/developerworks/cn/" lang="zh">??</a></li> 
         <li><a href="//www.ibm.com/developerworks/jp/" lang="ja">???</a></li> 
         <li><a href="//www.ibm.com/developerworks/ru/" lang="ru">???????</a></li> 
         <li class="dw-footer-newline"><a href="//www.ibm.com/developerworks/br/" lang="pt">Português (Brasil)</a></li> 
         <li><a href="//www.ibm.com/developerworks/ssa/" lang="es">Español</a></li> 
         <li><a href="//developer.ibm.com/kr/" lang="kr">??</a></li> 
        </ul> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-3"> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-4"> 
        <ul class="dw-footer-categories"> 
         <li class="dw-footer-category"> <a href="//www.ibm.com/developerworks/learn/">Tutorials &amp; training</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/accelerate/">Demos &amp; sample code</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/answers">Q&amp;A forums</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/dwblog/">dW Blog</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/events/">Events</a> </li> 
        </ul> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-5"> 
        <ul class="dw-footer-categories"> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/courses/">Courses</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/open/">Open source projects</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/tv/">Videos</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/recipes/">Recipes</a> </li> 
        </ul> 
       </div> 
       <div class="ibm-col-6-1 dw-footer-col-6"> 
        <ul class="dw-footer-categories"> 
         <li class="dw-footer-category"> <a href="//www.ibm.com/developerworks/develop/">Downloads</a> </li> 
         <li class="dw-footer-category"> <a href="//developer.ibm.com/api/">APIs</a> </li> 
         <li class="dw-footer-category"> <a href="//www.ibm.com/developerworks/newsletter/">Newsletters</a> </li> 
         <li class="dw-footer-category"> <a href="//www.ibm.com/developerworks/feeds/">Feeds</a> </li> 
        </ul> 
       </div> 
      </div> 
     </section> 
    </div> 
    <div id="dw-footer" class="ibm-padding-normal ibm-alternate"> 
     <div class="ibm-columns"> 
      <div class="ibm-col-1-1"> 
       <div class="dw-footer-corporate-links"> 
        <ul> 
         <li><a href="//www.ibm.com/developerworks/aboutdw/contacts.html">Contact</a></li> 
         <li><a href="//www.ibm.com/privacy/us/en/">Privacy</a></li> 
         <li><a href="//www.ibm.com/developerworks/community/terms/use/">Terms of use</a></li> 
         <li><a href="//www.ibm.com/accessibility/us/en/">Accessibility</a></li> 
         <li class="ibm-feedbacklink"><a href="#">Feedback</a></li> 
         <li id="ibm-truste-cp"><a onclick="truste.eu.clickListener();return false;" href="#">Cookie Preferences</a></li> 
        </ul> 
       </div> 
       <div id="ibm-footer-locale-selector"></div> 
      </div> 
     </div> 
    </div> 
   </footer> 
   <!-- FOOTER_END --> 
   <!-- END_IBM-TOP --> 
  </div> 
  <!-- SCRIPTS_INCLUDE_BEGIN --> 
  <!-- Styles --> 
  <link rel="stylesheet" type="text/css" href="/developerworks/maverick/css/plugin/comments/jquery-comments.css"> 
  <link rel="stylesheet" href="/developerworks/maverick/fonts/awesome-4.5.0/css/font-awesome.min.css"> 
  <!-- Libraries --> 
  <script type="text/javascript" src="/developerworks/maverick/js/plugin/comments/jquery-comments.min.js"></script> 
  <script type="text/javascript" src="/developerworks/maverick/js/plugin/formatter/moment-with-locales.js"></script> 
  <script type="text/javascript" src="/developerworks/maverick/js/ContentComments.js"></script> 
  <script type="text/javascript" src="/developerworks/js/v18/ContentCommentsFormatter.js"></script> 
  <script type="text/javascript" language="JavaScript">

	IBMCore.common.module.masthead.subscribe("ready", "customjs", setupCommentsPlugin).runAsap(setupCommentsPlugin);

	function setupCommentsPlugin(){
		//debugger;
			//alert(userLinks);
			var commentsInitInfo = {
				contentId : $("div[class=metavalue]:contains('ArticleID=')").text().split("=")[1],
				siteId :  $("div[class=metavalue]:contains('SITE_ID=')").text().split("=")[1],
				pluginDivId : '#dw-icomments-container',
				notifyElementId : "#comment_notification",
				loginMessageDivId : "#dw-article-cmts-login",
				totalCommentsDivId : "#nCmts"
			};				
								
			ContentComments.Setup(commentsInitInfo);
	}
</script> 
  <script type="text/javascript">(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');ga('create','UA-41146412-3','auto');ga('require','linkid','linkid.js');var dcdate="2015-04-08";var cmaid="975166";ga('set','dimension1',dcdate);ga('set','dimension2',cmaid);var dw_canonical="http://www.ibm.com/developerworks/library/mo-bluemix-php-nutritionix-angularjs/index.html";dw_canonical=dw_canonical.substring(dw_canonical.indexOf(".ibm.com")+8);ga('send','pageview',{'page':dw_canonical,'dimension1':dcdate,'dimension2':cmaid});var trkOBL=function(url,id){id=id.split("-");var cat="v18 article";var act="Bluemix";if(id[2]=="dwpremium")act="Premium";if(id[2]=="dwopen")act="dWOpen";if(id[2]=="devops")act="Devops";act=act+' '+id[3];if(id[4]){var label=id[4];if(label=="btn")label="button";if(label=="txt")label="text link";if(label=="bnr")label="banner";if(label=="tl")label="tile";if(label=="regbar")label="registration bar";if(label=="vp")label="video promotion"}var ab=0;if(id[5]){if(id[5]=="ABa")ab=1;if(id[5]=="ABb")ab=2;if(id[5]=="ABc")ab=3;if(id[5]=="ABd")ab=4;if(id[5]=="ABe")ab=5;if(id[5]=="ABf")ab=6;if(id[5]=="ABg")ab=7;if(id[5]=="ABh")ab=8}ga('send','event',cat,act,label,ab,{'page':dw_canonical,'hitCallback':function(){document.location=url}})}</script>
  <!-- Piwik --> 
  <script type="text/javascript">
    var _paq = _paq || [];
    _paq.push(["setDomains", ["*.www.ibm.com/developerworks","*.www.ibm.com/developerworks"]]);
    _paq.push(['trackPageView']);
    _paq.push(['enableLinkTracking']);
    (function() {
    var u="//developer.ibm.com/piwik/";
    _paq.push(['setTrackerUrl', u+'piwik.php']);
    _paq.push(['setSiteId', 7]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);
    })();
</script> 
  <noscript>
   <p><img src="//developer.ibm.com/piwik/piwik.php?idsite=7" style="border:0;" alt=""></p>
  </noscript> 
  <!-- End Piwik Code -->
  <!-- Hotjar Tracking Code for ibm.com --> 
  <script>
    (function(h,o,t,j,a,r){
    h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};
    h._hjSettings={hjid:42920,hjsv:5};
    a=o.getElementsByTagName('head')[0];
    r=o.createElement('script');r.async=1;
    r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;
    a.appendChild(r);
    })(window,document,'//static.hotjar.com/c/hotjar-','.js?sv=');
</script> 
  <!-- SCRIPTS_INCLUDE_END -->   
 </body>
</html>